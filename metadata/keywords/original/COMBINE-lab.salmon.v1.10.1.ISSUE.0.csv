id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/COMBINE-lab/salmon/issues/5:24,Availability,down,downloaded,24,"I'm running salmon v.4 (downloaded and compiled today) on gencode v22 and got the following error:. Performing PCA decomposition; salmon: /home/merkija1/software/salmon-0.4.0/include/eigen3/Eigen/src/Core/Redux.h:202: static Eigen::internal::redux_impl<Func, Derived, 3, 0>::Scalar Eigen::internal::redux_impl<Func, Derived, 3, 0>::run(const Derived&, const Func&) [with Func = Eigen::internal::scalar_sum_op<double>; Derived = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>; Eigen::internal::redux_impl<Func, Derived, 3, 0>::Scalar = double]: Assertion `size && ""you are using an empty matrix""' failed.; Aborted. The command I ran is:; salmon-0.4.0/src/salmon quant --index gencode.v22.index_0.4.0/ --mates1 <(gunzip -c r1_fq1.gz r1_fq2.gz --mates2 <(gunzip -c r2_fq1.gz r2_fq2.gz ) --output $OUTPUT_DIR --biasCorrect --threads 4 --geneMap gencode.v22.annotation.nochr.gtf --libType ""ISF"". If I remove the --biasCorrect flag, it runs without error.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/5
https://github.com/COMBINE-lab/salmon/issues/5:92,Availability,error,error,92,"I'm running salmon v.4 (downloaded and compiled today) on gencode v22 and got the following error:. Performing PCA decomposition; salmon: /home/merkija1/software/salmon-0.4.0/include/eigen3/Eigen/src/Core/Redux.h:202: static Eigen::internal::redux_impl<Func, Derived, 3, 0>::Scalar Eigen::internal::redux_impl<Func, Derived, 3, 0>::run(const Derived&, const Func&) [with Func = Eigen::internal::scalar_sum_op<double>; Derived = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>; Eigen::internal::redux_impl<Func, Derived, 3, 0>::Scalar = double]: Assertion `size && ""you are using an empty matrix""' failed.; Aborted. The command I ran is:; salmon-0.4.0/src/salmon quant --index gencode.v22.index_0.4.0/ --mates1 <(gunzip -c r1_fq1.gz r1_fq2.gz --mates2 <(gunzip -c r2_fq1.gz r2_fq2.gz ) --output $OUTPUT_DIR --biasCorrect --threads 4 --geneMap gencode.v22.annotation.nochr.gtf --libType ""ISF"". If I remove the --biasCorrect flag, it runs without error.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/5
https://github.com/COMBINE-lab/salmon/issues/5:959,Availability,error,error,959,"I'm running salmon v.4 (downloaded and compiled today) on gencode v22 and got the following error:. Performing PCA decomposition; salmon: /home/merkija1/software/salmon-0.4.0/include/eigen3/Eigen/src/Core/Redux.h:202: static Eigen::internal::redux_impl<Func, Derived, 3, 0>::Scalar Eigen::internal::redux_impl<Func, Derived, 3, 0>::run(const Derived&, const Func&) [with Func = Eigen::internal::scalar_sum_op<double>; Derived = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>; Eigen::internal::redux_impl<Func, Derived, 3, 0>::Scalar = double]: Assertion `size && ""you are using an empty matrix""' failed.; Aborted. The command I ran is:; salmon-0.4.0/src/salmon quant --index gencode.v22.index_0.4.0/ --mates1 <(gunzip -c r1_fq1.gz r1_fq2.gz --mates2 <(gunzip -c r2_fq1.gz r2_fq2.gz ) --output $OUTPUT_DIR --biasCorrect --threads 4 --geneMap gencode.v22.annotation.nochr.gtf --libType ""ISF"". If I remove the --biasCorrect flag, it runs without error.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/5
https://github.com/COMBINE-lab/salmon/issues/5:100,Performance,Perform,Performing,100,"I'm running salmon v.4 (downloaded and compiled today) on gencode v22 and got the following error:. Performing PCA decomposition; salmon: /home/merkija1/software/salmon-0.4.0/include/eigen3/Eigen/src/Core/Redux.h:202: static Eigen::internal::redux_impl<Func, Derived, 3, 0>::Scalar Eigen::internal::redux_impl<Func, Derived, 3, 0>::run(const Derived&, const Func&) [with Func = Eigen::internal::scalar_sum_op<double>; Derived = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>; Eigen::internal::redux_impl<Func, Derived, 3, 0>::Scalar = double]: Assertion `size && ""you are using an empty matrix""' failed.; Aborted. The command I ran is:; salmon-0.4.0/src/salmon quant --index gencode.v22.index_0.4.0/ --mates1 <(gunzip -c r1_fq1.gz r1_fq2.gz --mates2 <(gunzip -c r2_fq1.gz r2_fq2.gz ) --output $OUTPUT_DIR --biasCorrect --threads 4 --geneMap gencode.v22.annotation.nochr.gtf --libType ""ISF"". If I remove the --biasCorrect flag, it runs without error.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/5
https://github.com/COMBINE-lab/salmon/issues/5:621,Safety,Abort,Aborted,621,"I'm running salmon v.4 (downloaded and compiled today) on gencode v22 and got the following error:. Performing PCA decomposition; salmon: /home/merkija1/software/salmon-0.4.0/include/eigen3/Eigen/src/Core/Redux.h:202: static Eigen::internal::redux_impl<Func, Derived, 3, 0>::Scalar Eigen::internal::redux_impl<Func, Derived, 3, 0>::run(const Derived&, const Func&) [with Func = Eigen::internal::scalar_sum_op<double>; Derived = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>; Eigen::internal::redux_impl<Func, Derived, 3, 0>::Scalar = double]: Assertion `size && ""you are using an empty matrix""' failed.; Aborted. The command I ran is:; salmon-0.4.0/src/salmon quant --index gencode.v22.index_0.4.0/ --mates1 <(gunzip -c r1_fq1.gz r1_fq2.gz --mates2 <(gunzip -c r2_fq1.gz r2_fq2.gz ) --output $OUTPUT_DIR --biasCorrect --threads 4 --geneMap gencode.v22.annotation.nochr.gtf --libType ""ISF"". If I remove the --biasCorrect flag, it runs without error.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/5
https://github.com/COMBINE-lab/salmon/issues/5:560,Testability,Assert,Assertion,560,"I'm running salmon v.4 (downloaded and compiled today) on gencode v22 and got the following error:. Performing PCA decomposition; salmon: /home/merkija1/software/salmon-0.4.0/include/eigen3/Eigen/src/Core/Redux.h:202: static Eigen::internal::redux_impl<Func, Derived, 3, 0>::Scalar Eigen::internal::redux_impl<Func, Derived, 3, 0>::run(const Derived&, const Func&) [with Func = Eigen::internal::scalar_sum_op<double>; Derived = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>; Eigen::internal::redux_impl<Func, Derived, 3, 0>::Scalar = double]: Assertion `size && ""you are using an empty matrix""' failed.; Aborted. The command I ran is:; salmon-0.4.0/src/salmon quant --index gencode.v22.index_0.4.0/ --mates1 <(gunzip -c r1_fq1.gz r1_fq2.gz --mates2 <(gunzip -c r2_fq1.gz r2_fq2.gz ) --output $OUTPUT_DIR --biasCorrect --threads 4 --geneMap gencode.v22.annotation.nochr.gtf --libType ""ISF"". If I remove the --biasCorrect flag, it runs without error.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/5
https://github.com/COMBINE-lab/salmon/issues/6:291,Performance,perform,performs,291,"I tend to benchmark new versions of software mostly to check how much better things get over time at solving our problems. My strategy for benchmarking is to look at correlation between spike-ins at known abundances and estimated expression by software. The latest version of Salmon (0.4.0) performs markedly worse than all the previous versions of Salmon on the same data. ![salmong-performance](https://cloud.githubusercontent.com/assets/668803/8134113/8ff1a4ae-1124-11e5-80d5-10022530ba99.png). For running parameters, here is the top part of one of the `quant.sf` files. ```; # salmon (smem-based) v0.4.0; # [ program ] => salmon ; # [ command ] => quant ; # [ index ] => { /nfs/research2/teichmann/reference/homo-sapiens/salmon/Homo_sapiens.GRCh38.78.cdna_ERCC }; # [ libType ] => { IU }; # [ threads ] => { 4 }; # [ mates1 ] => { /nfs/research2/teichmann/valentine/detection-comparison/salmon-comparison/human/SRP030617_HCT116_86_1.fastq }; # [ mates2 ] => { /nfs/research2/teichmann/valentine/detection-comparison/salmon-comparison/human/SRP030617_HCT116_86_2.fastq }; # [ output ] => { /tmp/SRP030617_HCT116_86_salmon_out }; # [ geneMap ] => { /nfs/research2/teichmann/reference/homo-sapiens/Homo_sapiens.GRCh38.78.cdna_ERCC.gene_map.txt }; # [ useVBOpt ] => { }; # [ mapping rate ] => { 48.8199% }; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/6
https://github.com/COMBINE-lab/salmon/issues/6:384,Performance,perform,performance,384,"I tend to benchmark new versions of software mostly to check how much better things get over time at solving our problems. My strategy for benchmarking is to look at correlation between spike-ins at known abundances and estimated expression by software. The latest version of Salmon (0.4.0) performs markedly worse than all the previous versions of Salmon on the same data. ![salmong-performance](https://cloud.githubusercontent.com/assets/668803/8134113/8ff1a4ae-1124-11e5-80d5-10022530ba99.png). For running parameters, here is the top part of one of the `quant.sf` files. ```; # salmon (smem-based) v0.4.0; # [ program ] => salmon ; # [ command ] => quant ; # [ index ] => { /nfs/research2/teichmann/reference/homo-sapiens/salmon/Homo_sapiens.GRCh38.78.cdna_ERCC }; # [ libType ] => { IU }; # [ threads ] => { 4 }; # [ mates1 ] => { /nfs/research2/teichmann/valentine/detection-comparison/salmon-comparison/human/SRP030617_HCT116_86_1.fastq }; # [ mates2 ] => { /nfs/research2/teichmann/valentine/detection-comparison/salmon-comparison/human/SRP030617_HCT116_86_2.fastq }; # [ output ] => { /tmp/SRP030617_HCT116_86_salmon_out }; # [ geneMap ] => { /nfs/research2/teichmann/reference/homo-sapiens/Homo_sapiens.GRCh38.78.cdna_ERCC.gene_map.txt }; # [ useVBOpt ] => { }; # [ mapping rate ] => { 48.8199% }; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/6
https://github.com/COMBINE-lab/salmon/issues/6:871,Safety,detect,detection-comparison,871,"I tend to benchmark new versions of software mostly to check how much better things get over time at solving our problems. My strategy for benchmarking is to look at correlation between spike-ins at known abundances and estimated expression by software. The latest version of Salmon (0.4.0) performs markedly worse than all the previous versions of Salmon on the same data. ![salmong-performance](https://cloud.githubusercontent.com/assets/668803/8134113/8ff1a4ae-1124-11e5-80d5-10022530ba99.png). For running parameters, here is the top part of one of the `quant.sf` files. ```; # salmon (smem-based) v0.4.0; # [ program ] => salmon ; # [ command ] => quant ; # [ index ] => { /nfs/research2/teichmann/reference/homo-sapiens/salmon/Homo_sapiens.GRCh38.78.cdna_ERCC }; # [ libType ] => { IU }; # [ threads ] => { 4 }; # [ mates1 ] => { /nfs/research2/teichmann/valentine/detection-comparison/salmon-comparison/human/SRP030617_HCT116_86_1.fastq }; # [ mates2 ] => { /nfs/research2/teichmann/valentine/detection-comparison/salmon-comparison/human/SRP030617_HCT116_86_2.fastq }; # [ output ] => { /tmp/SRP030617_HCT116_86_salmon_out }; # [ geneMap ] => { /nfs/research2/teichmann/reference/homo-sapiens/Homo_sapiens.GRCh38.78.cdna_ERCC.gene_map.txt }; # [ useVBOpt ] => { }; # [ mapping rate ] => { 48.8199% }; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/6
https://github.com/COMBINE-lab/salmon/issues/6:1000,Safety,detect,detection-comparison,1000,"I tend to benchmark new versions of software mostly to check how much better things get over time at solving our problems. My strategy for benchmarking is to look at correlation between spike-ins at known abundances and estimated expression by software. The latest version of Salmon (0.4.0) performs markedly worse than all the previous versions of Salmon on the same data. ![salmong-performance](https://cloud.githubusercontent.com/assets/668803/8134113/8ff1a4ae-1124-11e5-80d5-10022530ba99.png). For running parameters, here is the top part of one of the `quant.sf` files. ```; # salmon (smem-based) v0.4.0; # [ program ] => salmon ; # [ command ] => quant ; # [ index ] => { /nfs/research2/teichmann/reference/homo-sapiens/salmon/Homo_sapiens.GRCh38.78.cdna_ERCC }; # [ libType ] => { IU }; # [ threads ] => { 4 }; # [ mates1 ] => { /nfs/research2/teichmann/valentine/detection-comparison/salmon-comparison/human/SRP030617_HCT116_86_1.fastq }; # [ mates2 ] => { /nfs/research2/teichmann/valentine/detection-comparison/salmon-comparison/human/SRP030617_HCT116_86_2.fastq }; # [ output ] => { /tmp/SRP030617_HCT116_86_salmon_out }; # [ geneMap ] => { /nfs/research2/teichmann/reference/homo-sapiens/Homo_sapiens.GRCh38.78.cdna_ERCC.gene_map.txt }; # [ useVBOpt ] => { }; # [ mapping rate ] => { 48.8199% }; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/6
https://github.com/COMBINE-lab/salmon/issues/6:10,Testability,benchmark,benchmark,10,"I tend to benchmark new versions of software mostly to check how much better things get over time at solving our problems. My strategy for benchmarking is to look at correlation between spike-ins at known abundances and estimated expression by software. The latest version of Salmon (0.4.0) performs markedly worse than all the previous versions of Salmon on the same data. ![salmong-performance](https://cloud.githubusercontent.com/assets/668803/8134113/8ff1a4ae-1124-11e5-80d5-10022530ba99.png). For running parameters, here is the top part of one of the `quant.sf` files. ```; # salmon (smem-based) v0.4.0; # [ program ] => salmon ; # [ command ] => quant ; # [ index ] => { /nfs/research2/teichmann/reference/homo-sapiens/salmon/Homo_sapiens.GRCh38.78.cdna_ERCC }; # [ libType ] => { IU }; # [ threads ] => { 4 }; # [ mates1 ] => { /nfs/research2/teichmann/valentine/detection-comparison/salmon-comparison/human/SRP030617_HCT116_86_1.fastq }; # [ mates2 ] => { /nfs/research2/teichmann/valentine/detection-comparison/salmon-comparison/human/SRP030617_HCT116_86_2.fastq }; # [ output ] => { /tmp/SRP030617_HCT116_86_salmon_out }; # [ geneMap ] => { /nfs/research2/teichmann/reference/homo-sapiens/Homo_sapiens.GRCh38.78.cdna_ERCC.gene_map.txt }; # [ useVBOpt ] => { }; # [ mapping rate ] => { 48.8199% }; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/6
https://github.com/COMBINE-lab/salmon/issues/6:139,Testability,benchmark,benchmarking,139,"I tend to benchmark new versions of software mostly to check how much better things get over time at solving our problems. My strategy for benchmarking is to look at correlation between spike-ins at known abundances and estimated expression by software. The latest version of Salmon (0.4.0) performs markedly worse than all the previous versions of Salmon on the same data. ![salmong-performance](https://cloud.githubusercontent.com/assets/668803/8134113/8ff1a4ae-1124-11e5-80d5-10022530ba99.png). For running parameters, here is the top part of one of the `quant.sf` files. ```; # salmon (smem-based) v0.4.0; # [ program ] => salmon ; # [ command ] => quant ; # [ index ] => { /nfs/research2/teichmann/reference/homo-sapiens/salmon/Homo_sapiens.GRCh38.78.cdna_ERCC }; # [ libType ] => { IU }; # [ threads ] => { 4 }; # [ mates1 ] => { /nfs/research2/teichmann/valentine/detection-comparison/salmon-comparison/human/SRP030617_HCT116_86_1.fastq }; # [ mates2 ] => { /nfs/research2/teichmann/valentine/detection-comparison/salmon-comparison/human/SRP030617_HCT116_86_2.fastq }; # [ output ] => { /tmp/SRP030617_HCT116_86_salmon_out }; # [ geneMap ] => { /nfs/research2/teichmann/reference/homo-sapiens/Homo_sapiens.GRCh38.78.cdna_ERCC.gene_map.txt }; # [ useVBOpt ] => { }; # [ mapping rate ] => { 48.8199% }; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/6
https://github.com/COMBINE-lab/salmon/issues/9:894,Integrability,message,message,894,"The CMakeLists.txt refuses to handle anything except GNU and Clang compilers. It should be easy to support Intel as well since it understands most/all(?) GNU compiler flags. CMAKE will report the compiler type as ""Intel"" and [C++11 is supported from 14.0 and forward](https://software.intel.com/en-us/articles/c0x-features-supported-by-intel-c-compiler). My rough wip to get this building uses the following:. ```; diff --git a/CMakeLists.txt b/CMakeLists.txt; index c95f755..30f1223 100755; --- a/CMakeLists.txt; +++ b/CMakeLists.txt; @@ -118,8 +118,30 @@ elseif (""${CMAKE_CXX_COMPILER_ID}"" MATCHES ""Clang""); else(); set (PTHREAD_LIB ""pthread""); endif(); +elseif (""${CMAKE_CXX_COMPILER_ID}"" MATCHES ""Intel""); + execute_process(; + COMMAND ${CMAKE_CXX_COMPILER} -dumpversion OUTPUT_VARIABLE INTEL_VERSION); + if (NOT (INTEL_VERSION VERSION_GREATER 14.0 OR INTEL_VERSION VERSION_EQUAL 14.0)); + message(FATAL_ERROR ""${PROJECT_NAME} requires intel 14.0 or greater. Found ${INTEL_VERSION}""); + endif (); +; + set (INTEL TRUE); + set (PTHREAD_LIB ""pthread""); + set (CMAKE_CXX_FLAGS ""-pthread -funroll-loops -fPIC -fomit-frame-pointer -Ofast -DHAVE_ANSI_TERM -DHAVE_SSTREAM -Wall -std=c++11 -Wreturn-type -Werror=return-type""); +; + # If we're on Linux (i.e. not OSX) and we're using ; + # gcc, then set the -static-libstdc++ flag; + if (NOT APPLE) ; + set (CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -static-libstdc++""); + endif(); +; + set (WARNING_IGNORE_FLAGS ""${WARNING_IGNORE_FLAGS} -Wno-unused-local-typedefs""); + set (BOOST_TOOLSET ""intel""); + set (BOOST_CONFIGURE_TOOLSET ""--with-toolset=gcc""); + set (BCXX_FLAGS ""-std=c++11""); + set (BOOST_EXTRA_FLAGS toolset=gcc cxxflags=${BCXX_FLAGS}); else (); - message(FATAL_ERROR ""Your C++ compiler does not support C++11.""); + message(FATAL_ERROR ""Your C++ compiler (${CMAKE_CXX_COMPILER_ID}) does not support C++11.""); endif (). ## TODO: Figure out how to detect this automatically; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/9
https://github.com/COMBINE-lab/salmon/issues/9:1698,Integrability,message,message,1698,"The CMakeLists.txt refuses to handle anything except GNU and Clang compilers. It should be easy to support Intel as well since it understands most/all(?) GNU compiler flags. CMAKE will report the compiler type as ""Intel"" and [C++11 is supported from 14.0 and forward](https://software.intel.com/en-us/articles/c0x-features-supported-by-intel-c-compiler). My rough wip to get this building uses the following:. ```; diff --git a/CMakeLists.txt b/CMakeLists.txt; index c95f755..30f1223 100755; --- a/CMakeLists.txt; +++ b/CMakeLists.txt; @@ -118,8 +118,30 @@ elseif (""${CMAKE_CXX_COMPILER_ID}"" MATCHES ""Clang""); else(); set (PTHREAD_LIB ""pthread""); endif(); +elseif (""${CMAKE_CXX_COMPILER_ID}"" MATCHES ""Intel""); + execute_process(; + COMMAND ${CMAKE_CXX_COMPILER} -dumpversion OUTPUT_VARIABLE INTEL_VERSION); + if (NOT (INTEL_VERSION VERSION_GREATER 14.0 OR INTEL_VERSION VERSION_EQUAL 14.0)); + message(FATAL_ERROR ""${PROJECT_NAME} requires intel 14.0 or greater. Found ${INTEL_VERSION}""); + endif (); +; + set (INTEL TRUE); + set (PTHREAD_LIB ""pthread""); + set (CMAKE_CXX_FLAGS ""-pthread -funroll-loops -fPIC -fomit-frame-pointer -Ofast -DHAVE_ANSI_TERM -DHAVE_SSTREAM -Wall -std=c++11 -Wreturn-type -Werror=return-type""); +; + # If we're on Linux (i.e. not OSX) and we're using ; + # gcc, then set the -static-libstdc++ flag; + if (NOT APPLE) ; + set (CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -static-libstdc++""); + endif(); +; + set (WARNING_IGNORE_FLAGS ""${WARNING_IGNORE_FLAGS} -Wno-unused-local-typedefs""); + set (BOOST_TOOLSET ""intel""); + set (BOOST_CONFIGURE_TOOLSET ""--with-toolset=gcc""); + set (BCXX_FLAGS ""-std=c++11""); + set (BOOST_EXTRA_FLAGS toolset=gcc cxxflags=${BCXX_FLAGS}); else (); - message(FATAL_ERROR ""Your C++ compiler does not support C++11.""); + message(FATAL_ERROR ""Your C++ compiler (${CMAKE_CXX_COMPILER_ID}) does not support C++11.""); endif (). ## TODO: Figure out how to detect this automatically; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/9
https://github.com/COMBINE-lab/salmon/issues/9:1766,Integrability,message,message,1766,"The CMakeLists.txt refuses to handle anything except GNU and Clang compilers. It should be easy to support Intel as well since it understands most/all(?) GNU compiler flags. CMAKE will report the compiler type as ""Intel"" and [C++11 is supported from 14.0 and forward](https://software.intel.com/en-us/articles/c0x-features-supported-by-intel-c-compiler). My rough wip to get this building uses the following:. ```; diff --git a/CMakeLists.txt b/CMakeLists.txt; index c95f755..30f1223 100755; --- a/CMakeLists.txt; +++ b/CMakeLists.txt; @@ -118,8 +118,30 @@ elseif (""${CMAKE_CXX_COMPILER_ID}"" MATCHES ""Clang""); else(); set (PTHREAD_LIB ""pthread""); endif(); +elseif (""${CMAKE_CXX_COMPILER_ID}"" MATCHES ""Intel""); + execute_process(; + COMMAND ${CMAKE_CXX_COMPILER} -dumpversion OUTPUT_VARIABLE INTEL_VERSION); + if (NOT (INTEL_VERSION VERSION_GREATER 14.0 OR INTEL_VERSION VERSION_EQUAL 14.0)); + message(FATAL_ERROR ""${PROJECT_NAME} requires intel 14.0 or greater. Found ${INTEL_VERSION}""); + endif (); +; + set (INTEL TRUE); + set (PTHREAD_LIB ""pthread""); + set (CMAKE_CXX_FLAGS ""-pthread -funroll-loops -fPIC -fomit-frame-pointer -Ofast -DHAVE_ANSI_TERM -DHAVE_SSTREAM -Wall -std=c++11 -Wreturn-type -Werror=return-type""); +; + # If we're on Linux (i.e. not OSX) and we're using ; + # gcc, then set the -static-libstdc++ flag; + if (NOT APPLE) ; + set (CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -static-libstdc++""); + endif(); +; + set (WARNING_IGNORE_FLAGS ""${WARNING_IGNORE_FLAGS} -Wno-unused-local-typedefs""); + set (BOOST_TOOLSET ""intel""); + set (BOOST_CONFIGURE_TOOLSET ""--with-toolset=gcc""); + set (BCXX_FLAGS ""-std=c++11""); + set (BOOST_EXTRA_FLAGS toolset=gcc cxxflags=${BCXX_FLAGS}); else (); - message(FATAL_ERROR ""Your C++ compiler does not support C++11.""); + message(FATAL_ERROR ""Your C++ compiler (${CMAKE_CXX_COMPILER_ID}) does not support C++11.""); endif (). ## TODO: Figure out how to detect this automatically; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/9
https://github.com/COMBINE-lab/salmon/issues/9:1896,Safety,detect,detect,1896,"The CMakeLists.txt refuses to handle anything except GNU and Clang compilers. It should be easy to support Intel as well since it understands most/all(?) GNU compiler flags. CMAKE will report the compiler type as ""Intel"" and [C++11 is supported from 14.0 and forward](https://software.intel.com/en-us/articles/c0x-features-supported-by-intel-c-compiler). My rough wip to get this building uses the following:. ```; diff --git a/CMakeLists.txt b/CMakeLists.txt; index c95f755..30f1223 100755; --- a/CMakeLists.txt; +++ b/CMakeLists.txt; @@ -118,8 +118,30 @@ elseif (""${CMAKE_CXX_COMPILER_ID}"" MATCHES ""Clang""); else(); set (PTHREAD_LIB ""pthread""); endif(); +elseif (""${CMAKE_CXX_COMPILER_ID}"" MATCHES ""Intel""); + execute_process(; + COMMAND ${CMAKE_CXX_COMPILER} -dumpversion OUTPUT_VARIABLE INTEL_VERSION); + if (NOT (INTEL_VERSION VERSION_GREATER 14.0 OR INTEL_VERSION VERSION_EQUAL 14.0)); + message(FATAL_ERROR ""${PROJECT_NAME} requires intel 14.0 or greater. Found ${INTEL_VERSION}""); + endif (); +; + set (INTEL TRUE); + set (PTHREAD_LIB ""pthread""); + set (CMAKE_CXX_FLAGS ""-pthread -funroll-loops -fPIC -fomit-frame-pointer -Ofast -DHAVE_ANSI_TERM -DHAVE_SSTREAM -Wall -std=c++11 -Wreturn-type -Werror=return-type""); +; + # If we're on Linux (i.e. not OSX) and we're using ; + # gcc, then set the -static-libstdc++ flag; + if (NOT APPLE) ; + set (CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -static-libstdc++""); + endif(); +; + set (WARNING_IGNORE_FLAGS ""${WARNING_IGNORE_FLAGS} -Wno-unused-local-typedefs""); + set (BOOST_TOOLSET ""intel""); + set (BOOST_CONFIGURE_TOOLSET ""--with-toolset=gcc""); + set (BCXX_FLAGS ""-std=c++11""); + set (BOOST_EXTRA_FLAGS toolset=gcc cxxflags=${BCXX_FLAGS}); else (); - message(FATAL_ERROR ""Your C++ compiler does not support C++11.""); + message(FATAL_ERROR ""Your C++ compiler (${CMAKE_CXX_COMPILER_ID}) does not support C++11.""); endif (). ## TODO: Figure out how to detect this automatically; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/9
https://github.com/COMBINE-lab/salmon/issues/10:20,Availability,error,error,20,I get the following error when installing `salmon`:. ```; cd /var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external && /gsc/btl/linuxbrew/Cellar/cmake/3.3.0/bin/cmake -P /var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/libcereal-prefix/src/libcereal-stamp/extract-libcereal.cmake; -- extracting...; src='/var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external/cereal-v1.0.0.tgz'; dst='/var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external/cereal-1.0.0'; -- extracting... [tar xfz]; CMake Error: Problem with archive_write_finish_entry(): Can't restore time; CMake Error: Problem extracting tar: /var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external/cereal-v1.0.0.tgz; -- extracting... [error clean up]; CMake Error at /var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/libcereal-prefix/src/libcereal-stamp/extract-libcereal.cmake:33 (message):; error: extract of; '/var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external/cereal-v1.0.0.tgz'; failed; ```. Is it possible to compile `salmon` with its external dependencies provided externally rather than vendored into `salmon`? What is `cereal`?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/10
https://github.com/COMBINE-lab/salmon/issues/10:541,Availability,Error,Error,541,I get the following error when installing `salmon`:. ```; cd /var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external && /gsc/btl/linuxbrew/Cellar/cmake/3.3.0/bin/cmake -P /var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/libcereal-prefix/src/libcereal-stamp/extract-libcereal.cmake; -- extracting...; src='/var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external/cereal-v1.0.0.tgz'; dst='/var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external/cereal-1.0.0'; -- extracting... [tar xfz]; CMake Error: Problem with archive_write_finish_entry(): Can't restore time; CMake Error: Problem extracting tar: /var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external/cereal-v1.0.0.tgz; -- extracting... [error clean up]; CMake Error at /var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/libcereal-prefix/src/libcereal-stamp/extract-libcereal.cmake:33 (message):; error: extract of; '/var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external/cereal-v1.0.0.tgz'; failed; ```. Is it possible to compile `salmon` with its external dependencies provided externally rather than vendored into `salmon`? What is `cereal`?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/10
https://github.com/COMBINE-lab/salmon/issues/10:617,Availability,Error,Error,617,I get the following error when installing `salmon`:. ```; cd /var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external && /gsc/btl/linuxbrew/Cellar/cmake/3.3.0/bin/cmake -P /var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/libcereal-prefix/src/libcereal-stamp/extract-libcereal.cmake; -- extracting...; src='/var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external/cereal-v1.0.0.tgz'; dst='/var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external/cereal-1.0.0'; -- extracting... [tar xfz]; CMake Error: Problem with archive_write_finish_entry(): Can't restore time; CMake Error: Problem extracting tar: /var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external/cereal-v1.0.0.tgz; -- extracting... [error clean up]; CMake Error at /var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/libcereal-prefix/src/libcereal-stamp/extract-libcereal.cmake:33 (message):; error: extract of; '/var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external/cereal-v1.0.0.tgz'; failed; ```. Is it possible to compile `salmon` with its external dependencies provided externally rather than vendored into `salmon`? What is `cereal`?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/10
https://github.com/COMBINE-lab/salmon/issues/10:754,Availability,error,error,754,I get the following error when installing `salmon`:. ```; cd /var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external && /gsc/btl/linuxbrew/Cellar/cmake/3.3.0/bin/cmake -P /var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/libcereal-prefix/src/libcereal-stamp/extract-libcereal.cmake; -- extracting...; src='/var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external/cereal-v1.0.0.tgz'; dst='/var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external/cereal-1.0.0'; -- extracting... [tar xfz]; CMake Error: Problem with archive_write_finish_entry(): Can't restore time; CMake Error: Problem extracting tar: /var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external/cereal-v1.0.0.tgz; -- extracting... [error clean up]; CMake Error at /var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/libcereal-prefix/src/libcereal-stamp/extract-libcereal.cmake:33 (message):; error: extract of; '/var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external/cereal-v1.0.0.tgz'; failed; ```. Is it possible to compile `salmon` with its external dependencies provided externally rather than vendored into `salmon`? What is `cereal`?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/10
https://github.com/COMBINE-lab/salmon/issues/10:777,Availability,Error,Error,777,I get the following error when installing `salmon`:. ```; cd /var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external && /gsc/btl/linuxbrew/Cellar/cmake/3.3.0/bin/cmake -P /var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/libcereal-prefix/src/libcereal-stamp/extract-libcereal.cmake; -- extracting...; src='/var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external/cereal-v1.0.0.tgz'; dst='/var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external/cereal-1.0.0'; -- extracting... [tar xfz]; CMake Error: Problem with archive_write_finish_entry(): Can't restore time; CMake Error: Problem extracting tar: /var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external/cereal-v1.0.0.tgz; -- extracting... [error clean up]; CMake Error at /var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/libcereal-prefix/src/libcereal-stamp/extract-libcereal.cmake:33 (message):; error: extract of; '/var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external/cereal-v1.0.0.tgz'; failed; ```. Is it possible to compile `salmon` with its external dependencies provided externally rather than vendored into `salmon`? What is `cereal`?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/10
https://github.com/COMBINE-lab/salmon/issues/10:922,Availability,error,error,922,I get the following error when installing `salmon`:. ```; cd /var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external && /gsc/btl/linuxbrew/Cellar/cmake/3.3.0/bin/cmake -P /var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/libcereal-prefix/src/libcereal-stamp/extract-libcereal.cmake; -- extracting...; src='/var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external/cereal-v1.0.0.tgz'; dst='/var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external/cereal-1.0.0'; -- extracting... [tar xfz]; CMake Error: Problem with archive_write_finish_entry(): Can't restore time; CMake Error: Problem extracting tar: /var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external/cereal-v1.0.0.tgz; -- extracting... [error clean up]; CMake Error at /var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/libcereal-prefix/src/libcereal-stamp/extract-libcereal.cmake:33 (message):; error: extract of; '/var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external/cereal-v1.0.0.tgz'; failed; ```. Is it possible to compile `salmon` with its external dependencies provided externally rather than vendored into `salmon`? What is `cereal`?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/10
https://github.com/COMBINE-lab/salmon/issues/10:31,Deployability,install,installing,31,I get the following error when installing `salmon`:. ```; cd /var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external && /gsc/btl/linuxbrew/Cellar/cmake/3.3.0/bin/cmake -P /var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/libcereal-prefix/src/libcereal-stamp/extract-libcereal.cmake; -- extracting...; src='/var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external/cereal-v1.0.0.tgz'; dst='/var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external/cereal-1.0.0'; -- extracting... [tar xfz]; CMake Error: Problem with archive_write_finish_entry(): Can't restore time; CMake Error: Problem extracting tar: /var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external/cereal-v1.0.0.tgz; -- extracting... [error clean up]; CMake Error at /var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/libcereal-prefix/src/libcereal-stamp/extract-libcereal.cmake:33 (message):; error: extract of; '/var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external/cereal-v1.0.0.tgz'; failed; ```. Is it possible to compile `salmon` with its external dependencies provided externally rather than vendored into `salmon`? What is `cereal`?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/10
https://github.com/COMBINE-lab/salmon/issues/10:911,Integrability,message,message,911,I get the following error when installing `salmon`:. ```; cd /var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external && /gsc/btl/linuxbrew/Cellar/cmake/3.3.0/bin/cmake -P /var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/libcereal-prefix/src/libcereal-stamp/extract-libcereal.cmake; -- extracting...; src='/var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external/cereal-v1.0.0.tgz'; dst='/var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external/cereal-1.0.0'; -- extracting... [tar xfz]; CMake Error: Problem with archive_write_finish_entry(): Can't restore time; CMake Error: Problem extracting tar: /var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external/cereal-v1.0.0.tgz; -- extracting... [error clean up]; CMake Error at /var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/libcereal-prefix/src/libcereal-stamp/extract-libcereal.cmake:33 (message):; error: extract of; '/var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external/cereal-v1.0.0.tgz'; failed; ```. Is it possible to compile `salmon` with its external dependencies provided externally rather than vendored into `salmon`? What is `cereal`?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/10
https://github.com/COMBINE-lab/salmon/issues/10:1097,Integrability,depend,dependencies,1097,I get the following error when installing `salmon`:. ```; cd /var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external && /gsc/btl/linuxbrew/Cellar/cmake/3.3.0/bin/cmake -P /var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/libcereal-prefix/src/libcereal-stamp/extract-libcereal.cmake; -- extracting...; src='/var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external/cereal-v1.0.0.tgz'; dst='/var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external/cereal-1.0.0'; -- extracting... [tar xfz]; CMake Error: Problem with archive_write_finish_entry(): Can't restore time; CMake Error: Problem extracting tar: /var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external/cereal-v1.0.0.tgz; -- extracting... [error clean up]; CMake Error at /var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/libcereal-prefix/src/libcereal-stamp/extract-libcereal.cmake:33 (message):; error: extract of; '/var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external/cereal-v1.0.0.tgz'; failed; ```. Is it possible to compile `salmon` with its external dependencies provided externally rather than vendored into `salmon`? What is `cereal`?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/10
https://github.com/COMBINE-lab/salmon/issues/11:53,Availability,down,downloading,53,"On the system I'm trying to install Salmon 0.4.2 on, downloading from `ftp://` is blocked for security reasons. Therefore, the automagic download the Jellyfish 2.1.3 source tarball fails. I tried adjusting the `CMakeLists.txt` files to use the latest Jellyfish 2.2.3 instead, but this leads to an issue with a Jellyfish include file not being found:. ```; checking whether we are using the GNU C compiler... In file included from /tmp/Salmon/0.4.2/intel-2015a/salmon-0.4.2/src/merge_files.cc(17):; /tmp/Salmon/0.4.2/intel-2015a/salmon-0.4.2/include/merge_files.hpp(21): catastrophic error: cannot open source file ""jellyfish/err.hpp""; #include <jellyfish/err.hpp>; ^. compilation aborted for /tmp/Salmon/0.4.2/intel-2015a/salmon-0.4.2/src/merge_files.cc (code 4); make[2]: *** [src/CMakeFiles/salmon_core.dir/merge_files.cc.o] Error 4; ```. This is weird, because the correct `include` directory is shown in the compiler command, and the file is there!. Here's my patch. Any idea what may be wrong with it, or which different approach I could try to get this to work?; I also tried using the `2.1.3.tar.gz` tarball from GitHub, but after adding `autoreconf -i` to the `CONFIGURE_COMMAND`, this leads to the same problem. ``` diff; --- salmon-0.4.2/CMakeLists.txt.orig 2015-06-15 02:31:09.000000000 +0200; +++ salmon-0.4.2/CMakeLists.txt 2015-08-18 21:13:29.684010359 +0200; @@ -357,14 +366,14 @@; message(""==================================================================""); ExternalProject_Add(libjellyfish; DOWNLOAD_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external; - URL ftp://ftp.genome.umd.edu/pub/jellyfish/jellyfish-2.1.3.tar.gz; - SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3; + URL https://github.com/gmarcais/Jellyfish/releases/download/v2.2.3/jellyfish-2.2.3.tar.gz; + SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3; INSTALL_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/install; - CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3/configure --p",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/11
https://github.com/COMBINE-lab/salmon/issues/11:137,Availability,down,download,137,"On the system I'm trying to install Salmon 0.4.2 on, downloading from `ftp://` is blocked for security reasons. Therefore, the automagic download the Jellyfish 2.1.3 source tarball fails. I tried adjusting the `CMakeLists.txt` files to use the latest Jellyfish 2.2.3 instead, but this leads to an issue with a Jellyfish include file not being found:. ```; checking whether we are using the GNU C compiler... In file included from /tmp/Salmon/0.4.2/intel-2015a/salmon-0.4.2/src/merge_files.cc(17):; /tmp/Salmon/0.4.2/intel-2015a/salmon-0.4.2/include/merge_files.hpp(21): catastrophic error: cannot open source file ""jellyfish/err.hpp""; #include <jellyfish/err.hpp>; ^. compilation aborted for /tmp/Salmon/0.4.2/intel-2015a/salmon-0.4.2/src/merge_files.cc (code 4); make[2]: *** [src/CMakeFiles/salmon_core.dir/merge_files.cc.o] Error 4; ```. This is weird, because the correct `include` directory is shown in the compiler command, and the file is there!. Here's my patch. Any idea what may be wrong with it, or which different approach I could try to get this to work?; I also tried using the `2.1.3.tar.gz` tarball from GitHub, but after adding `autoreconf -i` to the `CONFIGURE_COMMAND`, this leads to the same problem. ``` diff; --- salmon-0.4.2/CMakeLists.txt.orig 2015-06-15 02:31:09.000000000 +0200; +++ salmon-0.4.2/CMakeLists.txt 2015-08-18 21:13:29.684010359 +0200; @@ -357,14 +366,14 @@; message(""==================================================================""); ExternalProject_Add(libjellyfish; DOWNLOAD_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external; - URL ftp://ftp.genome.umd.edu/pub/jellyfish/jellyfish-2.1.3.tar.gz; - SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3; + URL https://github.com/gmarcais/Jellyfish/releases/download/v2.2.3/jellyfish-2.2.3.tar.gz; + SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3; INSTALL_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/install; - CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3/configure --p",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/11
https://github.com/COMBINE-lab/salmon/issues/11:583,Availability,error,error,583,"On the system I'm trying to install Salmon 0.4.2 on, downloading from `ftp://` is blocked for security reasons. Therefore, the automagic download the Jellyfish 2.1.3 source tarball fails. I tried adjusting the `CMakeLists.txt` files to use the latest Jellyfish 2.2.3 instead, but this leads to an issue with a Jellyfish include file not being found:. ```; checking whether we are using the GNU C compiler... In file included from /tmp/Salmon/0.4.2/intel-2015a/salmon-0.4.2/src/merge_files.cc(17):; /tmp/Salmon/0.4.2/intel-2015a/salmon-0.4.2/include/merge_files.hpp(21): catastrophic error: cannot open source file ""jellyfish/err.hpp""; #include <jellyfish/err.hpp>; ^. compilation aborted for /tmp/Salmon/0.4.2/intel-2015a/salmon-0.4.2/src/merge_files.cc (code 4); make[2]: *** [src/CMakeFiles/salmon_core.dir/merge_files.cc.o] Error 4; ```. This is weird, because the correct `include` directory is shown in the compiler command, and the file is there!. Here's my patch. Any idea what may be wrong with it, or which different approach I could try to get this to work?; I also tried using the `2.1.3.tar.gz` tarball from GitHub, but after adding `autoreconf -i` to the `CONFIGURE_COMMAND`, this leads to the same problem. ``` diff; --- salmon-0.4.2/CMakeLists.txt.orig 2015-06-15 02:31:09.000000000 +0200; +++ salmon-0.4.2/CMakeLists.txt 2015-08-18 21:13:29.684010359 +0200; @@ -357,14 +366,14 @@; message(""==================================================================""); ExternalProject_Add(libjellyfish; DOWNLOAD_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external; - URL ftp://ftp.genome.umd.edu/pub/jellyfish/jellyfish-2.1.3.tar.gz; - SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3; + URL https://github.com/gmarcais/Jellyfish/releases/download/v2.2.3/jellyfish-2.2.3.tar.gz; + SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3; INSTALL_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/install; - CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3/configure --p",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/11
https://github.com/COMBINE-lab/salmon/issues/11:827,Availability,Error,Error,827,"On the system I'm trying to install Salmon 0.4.2 on, downloading from `ftp://` is blocked for security reasons. Therefore, the automagic download the Jellyfish 2.1.3 source tarball fails. I tried adjusting the `CMakeLists.txt` files to use the latest Jellyfish 2.2.3 instead, but this leads to an issue with a Jellyfish include file not being found:. ```; checking whether we are using the GNU C compiler... In file included from /tmp/Salmon/0.4.2/intel-2015a/salmon-0.4.2/src/merge_files.cc(17):; /tmp/Salmon/0.4.2/intel-2015a/salmon-0.4.2/include/merge_files.hpp(21): catastrophic error: cannot open source file ""jellyfish/err.hpp""; #include <jellyfish/err.hpp>; ^. compilation aborted for /tmp/Salmon/0.4.2/intel-2015a/salmon-0.4.2/src/merge_files.cc (code 4); make[2]: *** [src/CMakeFiles/salmon_core.dir/merge_files.cc.o] Error 4; ```. This is weird, because the correct `include` directory is shown in the compiler command, and the file is there!. Here's my patch. Any idea what may be wrong with it, or which different approach I could try to get this to work?; I also tried using the `2.1.3.tar.gz` tarball from GitHub, but after adding `autoreconf -i` to the `CONFIGURE_COMMAND`, this leads to the same problem. ``` diff; --- salmon-0.4.2/CMakeLists.txt.orig 2015-06-15 02:31:09.000000000 +0200; +++ salmon-0.4.2/CMakeLists.txt 2015-08-18 21:13:29.684010359 +0200; @@ -357,14 +366,14 @@; message(""==================================================================""); ExternalProject_Add(libjellyfish; DOWNLOAD_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external; - URL ftp://ftp.genome.umd.edu/pub/jellyfish/jellyfish-2.1.3.tar.gz; - SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3; + URL https://github.com/gmarcais/Jellyfish/releases/download/v2.2.3/jellyfish-2.2.3.tar.gz; + SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3; INSTALL_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/install; - CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3/configure --p",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/11
https://github.com/COMBINE-lab/salmon/issues/11:1750,Availability,down,download,1750,"erge_files.cc (code 4); make[2]: *** [src/CMakeFiles/salmon_core.dir/merge_files.cc.o] Error 4; ```. This is weird, because the correct `include` directory is shown in the compiler command, and the file is there!. Here's my patch. Any idea what may be wrong with it, or which different approach I could try to get this to work?; I also tried using the `2.1.3.tar.gz` tarball from GitHub, but after adding `autoreconf -i` to the `CONFIGURE_COMMAND`, this leads to the same problem. ``` diff; --- salmon-0.4.2/CMakeLists.txt.orig 2015-06-15 02:31:09.000000000 +0200; +++ salmon-0.4.2/CMakeLists.txt 2015-08-18 21:13:29.684010359 +0200; @@ -357,14 +366,14 @@; message(""==================================================================""); ExternalProject_Add(libjellyfish; DOWNLOAD_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external; - URL ftp://ftp.genome.umd.edu/pub/jellyfish/jellyfish-2.1.3.tar.gz; - SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3; + URL https://github.com/gmarcais/Jellyfish/releases/download/v2.2.3/jellyfish-2.2.3.tar.gz; + SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3; INSTALL_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/install; - CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3/configure --prefix=<INSTALL_DIR> CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; + CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3/configure --prefix=<INSTALL_DIR> CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; BUILD_COMMAND ${MAKE} CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; BUILD_IN_SOURCE 1; INSTALL_COMMAND make install && ; - cp config.h <INSTALL_DIR>/include/jellyfish-2.1.3/jellyfish/ &&; + cp config.h <INSTALL_DIR>/include/jellyfish-2.2.3/jellyfish/ &&; cp config.h <INSTALL_DIR>/include/; ). --- salmon-0.4.2/src/CMakeLists.txt.orig 2015-08-18 21:21:14.892734948 +0200; +++ salmon-0.4.2/src/CMakeLists.txt 2015-",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/11
https://github.com/COMBINE-lab/salmon/issues/11:28,Deployability,install,install,28,"On the system I'm trying to install Salmon 0.4.2 on, downloading from `ftp://` is blocked for security reasons. Therefore, the automagic download the Jellyfish 2.1.3 source tarball fails. I tried adjusting the `CMakeLists.txt` files to use the latest Jellyfish 2.2.3 instead, but this leads to an issue with a Jellyfish include file not being found:. ```; checking whether we are using the GNU C compiler... In file included from /tmp/Salmon/0.4.2/intel-2015a/salmon-0.4.2/src/merge_files.cc(17):; /tmp/Salmon/0.4.2/intel-2015a/salmon-0.4.2/include/merge_files.hpp(21): catastrophic error: cannot open source file ""jellyfish/err.hpp""; #include <jellyfish/err.hpp>; ^. compilation aborted for /tmp/Salmon/0.4.2/intel-2015a/salmon-0.4.2/src/merge_files.cc (code 4); make[2]: *** [src/CMakeFiles/salmon_core.dir/merge_files.cc.o] Error 4; ```. This is weird, because the correct `include` directory is shown in the compiler command, and the file is there!. Here's my patch. Any idea what may be wrong with it, or which different approach I could try to get this to work?; I also tried using the `2.1.3.tar.gz` tarball from GitHub, but after adding `autoreconf -i` to the `CONFIGURE_COMMAND`, this leads to the same problem. ``` diff; --- salmon-0.4.2/CMakeLists.txt.orig 2015-06-15 02:31:09.000000000 +0200; +++ salmon-0.4.2/CMakeLists.txt 2015-08-18 21:13:29.684010359 +0200; @@ -357,14 +366,14 @@; message(""==================================================================""); ExternalProject_Add(libjellyfish; DOWNLOAD_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external; - URL ftp://ftp.genome.umd.edu/pub/jellyfish/jellyfish-2.1.3.tar.gz; - SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3; + URL https://github.com/gmarcais/Jellyfish/releases/download/v2.2.3/jellyfish-2.2.3.tar.gz; + SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3; INSTALL_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/install; - CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3/configure --p",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/11
https://github.com/COMBINE-lab/salmon/issues/11:964,Deployability,patch,patch,964,"On the system I'm trying to install Salmon 0.4.2 on, downloading from `ftp://` is blocked for security reasons. Therefore, the automagic download the Jellyfish 2.1.3 source tarball fails. I tried adjusting the `CMakeLists.txt` files to use the latest Jellyfish 2.2.3 instead, but this leads to an issue with a Jellyfish include file not being found:. ```; checking whether we are using the GNU C compiler... In file included from /tmp/Salmon/0.4.2/intel-2015a/salmon-0.4.2/src/merge_files.cc(17):; /tmp/Salmon/0.4.2/intel-2015a/salmon-0.4.2/include/merge_files.hpp(21): catastrophic error: cannot open source file ""jellyfish/err.hpp""; #include <jellyfish/err.hpp>; ^. compilation aborted for /tmp/Salmon/0.4.2/intel-2015a/salmon-0.4.2/src/merge_files.cc (code 4); make[2]: *** [src/CMakeFiles/salmon_core.dir/merge_files.cc.o] Error 4; ```. This is weird, because the correct `include` directory is shown in the compiler command, and the file is there!. Here's my patch. Any idea what may be wrong with it, or which different approach I could try to get this to work?; I also tried using the `2.1.3.tar.gz` tarball from GitHub, but after adding `autoreconf -i` to the `CONFIGURE_COMMAND`, this leads to the same problem. ``` diff; --- salmon-0.4.2/CMakeLists.txt.orig 2015-06-15 02:31:09.000000000 +0200; +++ salmon-0.4.2/CMakeLists.txt 2015-08-18 21:13:29.684010359 +0200; @@ -357,14 +366,14 @@; message(""==================================================================""); ExternalProject_Add(libjellyfish; DOWNLOAD_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external; - URL ftp://ftp.genome.umd.edu/pub/jellyfish/jellyfish-2.1.3.tar.gz; - SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3; + URL https://github.com/gmarcais/Jellyfish/releases/download/v2.2.3/jellyfish-2.2.3.tar.gz; + SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3; INSTALL_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/install; - CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3/configure --p",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/11
https://github.com/COMBINE-lab/salmon/issues/11:1741,Deployability,release,releases,1741,"erge_files.cc (code 4); make[2]: *** [src/CMakeFiles/salmon_core.dir/merge_files.cc.o] Error 4; ```. This is weird, because the correct `include` directory is shown in the compiler command, and the file is there!. Here's my patch. Any idea what may be wrong with it, or which different approach I could try to get this to work?; I also tried using the `2.1.3.tar.gz` tarball from GitHub, but after adding `autoreconf -i` to the `CONFIGURE_COMMAND`, this leads to the same problem. ``` diff; --- salmon-0.4.2/CMakeLists.txt.orig 2015-06-15 02:31:09.000000000 +0200; +++ salmon-0.4.2/CMakeLists.txt 2015-08-18 21:13:29.684010359 +0200; @@ -357,14 +366,14 @@; message(""==================================================================""); ExternalProject_Add(libjellyfish; DOWNLOAD_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external; - URL ftp://ftp.genome.umd.edu/pub/jellyfish/jellyfish-2.1.3.tar.gz; - SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3; + URL https://github.com/gmarcais/Jellyfish/releases/download/v2.2.3/jellyfish-2.2.3.tar.gz; + SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3; INSTALL_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/install; - CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3/configure --prefix=<INSTALL_DIR> CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; + CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3/configure --prefix=<INSTALL_DIR> CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; BUILD_COMMAND ${MAKE} CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; BUILD_IN_SOURCE 1; INSTALL_COMMAND make install && ; - cp config.h <INSTALL_DIR>/include/jellyfish-2.1.3/jellyfish/ &&; + cp config.h <INSTALL_DIR>/include/jellyfish-2.2.3/jellyfish/ &&; cp config.h <INSTALL_DIR>/include/; ). --- salmon-0.4.2/src/CMakeLists.txt.orig 2015-08-18 21:21:14.892734948 +0200; +++ salmon-0.4.2/src/CMakeLists.txt 2015-",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/11
https://github.com/COMBINE-lab/salmon/issues/11:1906,Deployability,install,install,1906,"r command, and the file is there!. Here's my patch. Any idea what may be wrong with it, or which different approach I could try to get this to work?; I also tried using the `2.1.3.tar.gz` tarball from GitHub, but after adding `autoreconf -i` to the `CONFIGURE_COMMAND`, this leads to the same problem. ``` diff; --- salmon-0.4.2/CMakeLists.txt.orig 2015-06-15 02:31:09.000000000 +0200; +++ salmon-0.4.2/CMakeLists.txt 2015-08-18 21:13:29.684010359 +0200; @@ -357,14 +366,14 @@; message(""==================================================================""); ExternalProject_Add(libjellyfish; DOWNLOAD_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external; - URL ftp://ftp.genome.umd.edu/pub/jellyfish/jellyfish-2.1.3.tar.gz; - SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3; + URL https://github.com/gmarcais/Jellyfish/releases/download/v2.2.3/jellyfish-2.2.3.tar.gz; + SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3; INSTALL_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/install; - CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3/configure --prefix=<INSTALL_DIR> CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; + CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3/configure --prefix=<INSTALL_DIR> CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; BUILD_COMMAND ${MAKE} CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; BUILD_IN_SOURCE 1; INSTALL_COMMAND make install && ; - cp config.h <INSTALL_DIR>/include/jellyfish-2.1.3/jellyfish/ &&; + cp config.h <INSTALL_DIR>/include/jellyfish-2.2.3/jellyfish/ &&; cp config.h <INSTALL_DIR>/include/; ). --- salmon-0.4.2/src/CMakeLists.txt.orig 2015-08-18 21:21:14.892734948 +0200; +++ salmon-0.4.2/src/CMakeLists.txt 2015-08-18 21:20:51.292295094 +0200; @@ -42,7 +42,7 @@; ${GAT_SOURCE_DIR}/external; ${GAT_SOURCE_DIR}/external/cereal/include; ${GAT_SOURCE_DIR}/external/install/include; -${GAT_SOURCE",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/11
https://github.com/COMBINE-lab/salmon/issues/11:2435,Deployability,install,install,2435,"itHub, but after adding `autoreconf -i` to the `CONFIGURE_COMMAND`, this leads to the same problem. ``` diff; --- salmon-0.4.2/CMakeLists.txt.orig 2015-06-15 02:31:09.000000000 +0200; +++ salmon-0.4.2/CMakeLists.txt 2015-08-18 21:13:29.684010359 +0200; @@ -357,14 +366,14 @@; message(""==================================================================""); ExternalProject_Add(libjellyfish; DOWNLOAD_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external; - URL ftp://ftp.genome.umd.edu/pub/jellyfish/jellyfish-2.1.3.tar.gz; - SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3; + URL https://github.com/gmarcais/Jellyfish/releases/download/v2.2.3/jellyfish-2.2.3.tar.gz; + SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3; INSTALL_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/install; - CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3/configure --prefix=<INSTALL_DIR> CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; + CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3/configure --prefix=<INSTALL_DIR> CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; BUILD_COMMAND ${MAKE} CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; BUILD_IN_SOURCE 1; INSTALL_COMMAND make install && ; - cp config.h <INSTALL_DIR>/include/jellyfish-2.1.3/jellyfish/ &&; + cp config.h <INSTALL_DIR>/include/jellyfish-2.2.3/jellyfish/ &&; cp config.h <INSTALL_DIR>/include/; ). --- salmon-0.4.2/src/CMakeLists.txt.orig 2015-08-18 21:21:14.892734948 +0200; +++ salmon-0.4.2/src/CMakeLists.txt 2015-08-18 21:20:51.292295094 +0200; @@ -42,7 +42,7 @@; ${GAT_SOURCE_DIR}/external; ${GAT_SOURCE_DIR}/external/cereal/include; ${GAT_SOURCE_DIR}/external/install/include; -${GAT_SOURCE_DIR}/external/install/include/jellyfish-2.1.3; +${GAT_SOURCE_DIR}/external/install/include/jellyfish-2.2.3; ${GAT_SOURCE_DIR}/external/install/include/bwa; ${ZLIB_INCLUDE_DIR}; ${TBB_INCLUDE_DIRS}; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/11
https://github.com/COMBINE-lab/salmon/issues/11:2889,Deployability,install,install,2889,"itHub, but after adding `autoreconf -i` to the `CONFIGURE_COMMAND`, this leads to the same problem. ``` diff; --- salmon-0.4.2/CMakeLists.txt.orig 2015-06-15 02:31:09.000000000 +0200; +++ salmon-0.4.2/CMakeLists.txt 2015-08-18 21:13:29.684010359 +0200; @@ -357,14 +366,14 @@; message(""==================================================================""); ExternalProject_Add(libjellyfish; DOWNLOAD_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external; - URL ftp://ftp.genome.umd.edu/pub/jellyfish/jellyfish-2.1.3.tar.gz; - SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3; + URL https://github.com/gmarcais/Jellyfish/releases/download/v2.2.3/jellyfish-2.2.3.tar.gz; + SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3; INSTALL_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/install; - CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3/configure --prefix=<INSTALL_DIR> CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; + CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3/configure --prefix=<INSTALL_DIR> CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; BUILD_COMMAND ${MAKE} CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; BUILD_IN_SOURCE 1; INSTALL_COMMAND make install && ; - cp config.h <INSTALL_DIR>/include/jellyfish-2.1.3/jellyfish/ &&; + cp config.h <INSTALL_DIR>/include/jellyfish-2.2.3/jellyfish/ &&; cp config.h <INSTALL_DIR>/include/; ). --- salmon-0.4.2/src/CMakeLists.txt.orig 2015-08-18 21:21:14.892734948 +0200; +++ salmon-0.4.2/src/CMakeLists.txt 2015-08-18 21:20:51.292295094 +0200; @@ -42,7 +42,7 @@; ${GAT_SOURCE_DIR}/external; ${GAT_SOURCE_DIR}/external/cereal/include; ${GAT_SOURCE_DIR}/external/install/include; -${GAT_SOURCE_DIR}/external/install/include/jellyfish-2.1.3; +${GAT_SOURCE_DIR}/external/install/include/jellyfish-2.2.3; ${GAT_SOURCE_DIR}/external/install/include/bwa; ${ZLIB_INCLUDE_DIR}; ${TBB_INCLUDE_DIRS}; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/11
https://github.com/COMBINE-lab/salmon/issues/11:2934,Deployability,install,install,2934,"itHub, but after adding `autoreconf -i` to the `CONFIGURE_COMMAND`, this leads to the same problem. ``` diff; --- salmon-0.4.2/CMakeLists.txt.orig 2015-06-15 02:31:09.000000000 +0200; +++ salmon-0.4.2/CMakeLists.txt 2015-08-18 21:13:29.684010359 +0200; @@ -357,14 +366,14 @@; message(""==================================================================""); ExternalProject_Add(libjellyfish; DOWNLOAD_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external; - URL ftp://ftp.genome.umd.edu/pub/jellyfish/jellyfish-2.1.3.tar.gz; - SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3; + URL https://github.com/gmarcais/Jellyfish/releases/download/v2.2.3/jellyfish-2.2.3.tar.gz; + SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3; INSTALL_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/install; - CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3/configure --prefix=<INSTALL_DIR> CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; + CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3/configure --prefix=<INSTALL_DIR> CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; BUILD_COMMAND ${MAKE} CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; BUILD_IN_SOURCE 1; INSTALL_COMMAND make install && ; - cp config.h <INSTALL_DIR>/include/jellyfish-2.1.3/jellyfish/ &&; + cp config.h <INSTALL_DIR>/include/jellyfish-2.2.3/jellyfish/ &&; cp config.h <INSTALL_DIR>/include/; ). --- salmon-0.4.2/src/CMakeLists.txt.orig 2015-08-18 21:21:14.892734948 +0200; +++ salmon-0.4.2/src/CMakeLists.txt 2015-08-18 21:20:51.292295094 +0200; @@ -42,7 +42,7 @@; ${GAT_SOURCE_DIR}/external; ${GAT_SOURCE_DIR}/external/cereal/include; ${GAT_SOURCE_DIR}/external/install/include; -${GAT_SOURCE_DIR}/external/install/include/jellyfish-2.1.3; +${GAT_SOURCE_DIR}/external/install/include/jellyfish-2.2.3; ${GAT_SOURCE_DIR}/external/install/include/bwa; ${ZLIB_INCLUDE_DIR}; ${TBB_INCLUDE_DIRS}; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/11
https://github.com/COMBINE-lab/salmon/issues/11:2995,Deployability,install,install,2995,"itHub, but after adding `autoreconf -i` to the `CONFIGURE_COMMAND`, this leads to the same problem. ``` diff; --- salmon-0.4.2/CMakeLists.txt.orig 2015-06-15 02:31:09.000000000 +0200; +++ salmon-0.4.2/CMakeLists.txt 2015-08-18 21:13:29.684010359 +0200; @@ -357,14 +366,14 @@; message(""==================================================================""); ExternalProject_Add(libjellyfish; DOWNLOAD_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external; - URL ftp://ftp.genome.umd.edu/pub/jellyfish/jellyfish-2.1.3.tar.gz; - SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3; + URL https://github.com/gmarcais/Jellyfish/releases/download/v2.2.3/jellyfish-2.2.3.tar.gz; + SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3; INSTALL_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/install; - CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3/configure --prefix=<INSTALL_DIR> CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; + CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3/configure --prefix=<INSTALL_DIR> CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; BUILD_COMMAND ${MAKE} CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; BUILD_IN_SOURCE 1; INSTALL_COMMAND make install && ; - cp config.h <INSTALL_DIR>/include/jellyfish-2.1.3/jellyfish/ &&; + cp config.h <INSTALL_DIR>/include/jellyfish-2.2.3/jellyfish/ &&; cp config.h <INSTALL_DIR>/include/; ). --- salmon-0.4.2/src/CMakeLists.txt.orig 2015-08-18 21:21:14.892734948 +0200; +++ salmon-0.4.2/src/CMakeLists.txt 2015-08-18 21:20:51.292295094 +0200; @@ -42,7 +42,7 @@; ${GAT_SOURCE_DIR}/external; ${GAT_SOURCE_DIR}/external/cereal/include; ${GAT_SOURCE_DIR}/external/install/include; -${GAT_SOURCE_DIR}/external/install/include/jellyfish-2.1.3; +${GAT_SOURCE_DIR}/external/install/include/jellyfish-2.2.3; ${GAT_SOURCE_DIR}/external/install/include/bwa; ${ZLIB_INCLUDE_DIR}; ${TBB_INCLUDE_DIRS}; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/11
https://github.com/COMBINE-lab/salmon/issues/11:3055,Deployability,install,install,3055,"itHub, but after adding `autoreconf -i` to the `CONFIGURE_COMMAND`, this leads to the same problem. ``` diff; --- salmon-0.4.2/CMakeLists.txt.orig 2015-06-15 02:31:09.000000000 +0200; +++ salmon-0.4.2/CMakeLists.txt 2015-08-18 21:13:29.684010359 +0200; @@ -357,14 +366,14 @@; message(""==================================================================""); ExternalProject_Add(libjellyfish; DOWNLOAD_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external; - URL ftp://ftp.genome.umd.edu/pub/jellyfish/jellyfish-2.1.3.tar.gz; - SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3; + URL https://github.com/gmarcais/Jellyfish/releases/download/v2.2.3/jellyfish-2.2.3.tar.gz; + SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3; INSTALL_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/install; - CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3/configure --prefix=<INSTALL_DIR> CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; + CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3/configure --prefix=<INSTALL_DIR> CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; BUILD_COMMAND ${MAKE} CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; BUILD_IN_SOURCE 1; INSTALL_COMMAND make install && ; - cp config.h <INSTALL_DIR>/include/jellyfish-2.1.3/jellyfish/ &&; + cp config.h <INSTALL_DIR>/include/jellyfish-2.2.3/jellyfish/ &&; cp config.h <INSTALL_DIR>/include/; ). --- salmon-0.4.2/src/CMakeLists.txt.orig 2015-08-18 21:21:14.892734948 +0200; +++ salmon-0.4.2/src/CMakeLists.txt 2015-08-18 21:20:51.292295094 +0200; @@ -42,7 +42,7 @@; ${GAT_SOURCE_DIR}/external; ${GAT_SOURCE_DIR}/external/cereal/include; ${GAT_SOURCE_DIR}/external/install/include; -${GAT_SOURCE_DIR}/external/install/include/jellyfish-2.1.3; +${GAT_SOURCE_DIR}/external/install/include/jellyfish-2.2.3; ${GAT_SOURCE_DIR}/external/install/include/bwa; ${ZLIB_INCLUDE_DIR}; ${TBB_INCLUDE_DIRS}; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/11
https://github.com/COMBINE-lab/salmon/issues/11:1397,Integrability,message,message,1397,"0.4.2/src/merge_files.cc(17):; /tmp/Salmon/0.4.2/intel-2015a/salmon-0.4.2/include/merge_files.hpp(21): catastrophic error: cannot open source file ""jellyfish/err.hpp""; #include <jellyfish/err.hpp>; ^. compilation aborted for /tmp/Salmon/0.4.2/intel-2015a/salmon-0.4.2/src/merge_files.cc (code 4); make[2]: *** [src/CMakeFiles/salmon_core.dir/merge_files.cc.o] Error 4; ```. This is weird, because the correct `include` directory is shown in the compiler command, and the file is there!. Here's my patch. Any idea what may be wrong with it, or which different approach I could try to get this to work?; I also tried using the `2.1.3.tar.gz` tarball from GitHub, but after adding `autoreconf -i` to the `CONFIGURE_COMMAND`, this leads to the same problem. ``` diff; --- salmon-0.4.2/CMakeLists.txt.orig 2015-06-15 02:31:09.000000000 +0200; +++ salmon-0.4.2/CMakeLists.txt 2015-08-18 21:13:29.684010359 +0200; @@ -357,14 +366,14 @@; message(""==================================================================""); ExternalProject_Add(libjellyfish; DOWNLOAD_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external; - URL ftp://ftp.genome.umd.edu/pub/jellyfish/jellyfish-2.1.3.tar.gz; - SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3; + URL https://github.com/gmarcais/Jellyfish/releases/download/v2.2.3/jellyfish-2.2.3.tar.gz; + SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3; INSTALL_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/install; - CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3/configure --prefix=<INSTALL_DIR> CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; + CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3/configure --prefix=<INSTALL_DIR> CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; BUILD_COMMAND ${MAKE} CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; BUILD_IN_SOURCE 1; INSTALL_COMMAND make install && ; - cp config.h <INST",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/11
https://github.com/COMBINE-lab/salmon/issues/11:1988,Modifiability,config,configure,1988,"ed using the `2.1.3.tar.gz` tarball from GitHub, but after adding `autoreconf -i` to the `CONFIGURE_COMMAND`, this leads to the same problem. ``` diff; --- salmon-0.4.2/CMakeLists.txt.orig 2015-06-15 02:31:09.000000000 +0200; +++ salmon-0.4.2/CMakeLists.txt 2015-08-18 21:13:29.684010359 +0200; @@ -357,14 +366,14 @@; message(""==================================================================""); ExternalProject_Add(libjellyfish; DOWNLOAD_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external; - URL ftp://ftp.genome.umd.edu/pub/jellyfish/jellyfish-2.1.3.tar.gz; - SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3; + URL https://github.com/gmarcais/Jellyfish/releases/download/v2.2.3/jellyfish-2.2.3.tar.gz; + SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3; INSTALL_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/install; - CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3/configure --prefix=<INSTALL_DIR> CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; + CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3/configure --prefix=<INSTALL_DIR> CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; BUILD_COMMAND ${MAKE} CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; BUILD_IN_SOURCE 1; INSTALL_COMMAND make install && ; - cp config.h <INSTALL_DIR>/include/jellyfish-2.1.3/jellyfish/ &&; + cp config.h <INSTALL_DIR>/include/jellyfish-2.2.3/jellyfish/ &&; cp config.h <INSTALL_DIR>/include/; ). --- salmon-0.4.2/src/CMakeLists.txt.orig 2015-08-18 21:21:14.892734948 +0200; +++ salmon-0.4.2/src/CMakeLists.txt 2015-08-18 21:20:51.292295094 +0200; @@ -42,7 +42,7 @@; ${GAT_SOURCE_DIR}/external; ${GAT_SOURCE_DIR}/external/cereal/include; ${GAT_SOURCE_DIR}/external/install/include; -${GAT_SOURCE_DIR}/external/install/include/jellyfish-2.1.3; +${GAT_SOURCE_DIR}/external/install/include/jellyfish-2.2.3; ${GAT_SOURCE_DIR}/external/install/include/bwa; ${Z",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/11
https://github.com/COMBINE-lab/salmon/issues/11:2176,Modifiability,config,configure,2176,"itHub, but after adding `autoreconf -i` to the `CONFIGURE_COMMAND`, this leads to the same problem. ``` diff; --- salmon-0.4.2/CMakeLists.txt.orig 2015-06-15 02:31:09.000000000 +0200; +++ salmon-0.4.2/CMakeLists.txt 2015-08-18 21:13:29.684010359 +0200; @@ -357,14 +366,14 @@; message(""==================================================================""); ExternalProject_Add(libjellyfish; DOWNLOAD_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external; - URL ftp://ftp.genome.umd.edu/pub/jellyfish/jellyfish-2.1.3.tar.gz; - SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3; + URL https://github.com/gmarcais/Jellyfish/releases/download/v2.2.3/jellyfish-2.2.3.tar.gz; + SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3; INSTALL_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/install; - CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3/configure --prefix=<INSTALL_DIR> CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; + CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3/configure --prefix=<INSTALL_DIR> CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; BUILD_COMMAND ${MAKE} CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; BUILD_IN_SOURCE 1; INSTALL_COMMAND make install && ; - cp config.h <INSTALL_DIR>/include/jellyfish-2.1.3/jellyfish/ &&; + cp config.h <INSTALL_DIR>/include/jellyfish-2.2.3/jellyfish/ &&; cp config.h <INSTALL_DIR>/include/; ). --- salmon-0.4.2/src/CMakeLists.txt.orig 2015-08-18 21:21:14.892734948 +0200; +++ salmon-0.4.2/src/CMakeLists.txt 2015-08-18 21:20:51.292295094 +0200; @@ -42,7 +42,7 @@; ${GAT_SOURCE_DIR}/external; ${GAT_SOURCE_DIR}/external/cereal/include; ${GAT_SOURCE_DIR}/external/install/include; -${GAT_SOURCE_DIR}/external/install/include/jellyfish-2.1.3; +${GAT_SOURCE_DIR}/external/install/include/jellyfish-2.2.3; ${GAT_SOURCE_DIR}/external/install/include/bwa; ${ZLIB_INCLUDE_DIR}; ${TBB_INCLUDE_DIRS}; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/11
https://github.com/COMBINE-lab/salmon/issues/11:2453,Modifiability,config,config,2453,"itHub, but after adding `autoreconf -i` to the `CONFIGURE_COMMAND`, this leads to the same problem. ``` diff; --- salmon-0.4.2/CMakeLists.txt.orig 2015-06-15 02:31:09.000000000 +0200; +++ salmon-0.4.2/CMakeLists.txt 2015-08-18 21:13:29.684010359 +0200; @@ -357,14 +366,14 @@; message(""==================================================================""); ExternalProject_Add(libjellyfish; DOWNLOAD_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external; - URL ftp://ftp.genome.umd.edu/pub/jellyfish/jellyfish-2.1.3.tar.gz; - SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3; + URL https://github.com/gmarcais/Jellyfish/releases/download/v2.2.3/jellyfish-2.2.3.tar.gz; + SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3; INSTALL_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/install; - CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3/configure --prefix=<INSTALL_DIR> CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; + CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3/configure --prefix=<INSTALL_DIR> CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; BUILD_COMMAND ${MAKE} CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; BUILD_IN_SOURCE 1; INSTALL_COMMAND make install && ; - cp config.h <INSTALL_DIR>/include/jellyfish-2.1.3/jellyfish/ &&; + cp config.h <INSTALL_DIR>/include/jellyfish-2.2.3/jellyfish/ &&; cp config.h <INSTALL_DIR>/include/; ). --- salmon-0.4.2/src/CMakeLists.txt.orig 2015-08-18 21:21:14.892734948 +0200; +++ salmon-0.4.2/src/CMakeLists.txt 2015-08-18 21:20:51.292295094 +0200; @@ -42,7 +42,7 @@; ${GAT_SOURCE_DIR}/external; ${GAT_SOURCE_DIR}/external/cereal/include; ${GAT_SOURCE_DIR}/external/install/include; -${GAT_SOURCE_DIR}/external/install/include/jellyfish-2.1.3; +${GAT_SOURCE_DIR}/external/install/include/jellyfish-2.2.3; ${GAT_SOURCE_DIR}/external/install/include/bwa; ${ZLIB_INCLUDE_DIR}; ${TBB_INCLUDE_DIRS}; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/11
https://github.com/COMBINE-lab/salmon/issues/11:2520,Modifiability,config,config,2520,"itHub, but after adding `autoreconf -i` to the `CONFIGURE_COMMAND`, this leads to the same problem. ``` diff; --- salmon-0.4.2/CMakeLists.txt.orig 2015-06-15 02:31:09.000000000 +0200; +++ salmon-0.4.2/CMakeLists.txt 2015-08-18 21:13:29.684010359 +0200; @@ -357,14 +366,14 @@; message(""==================================================================""); ExternalProject_Add(libjellyfish; DOWNLOAD_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external; - URL ftp://ftp.genome.umd.edu/pub/jellyfish/jellyfish-2.1.3.tar.gz; - SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3; + URL https://github.com/gmarcais/Jellyfish/releases/download/v2.2.3/jellyfish-2.2.3.tar.gz; + SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3; INSTALL_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/install; - CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3/configure --prefix=<INSTALL_DIR> CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; + CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3/configure --prefix=<INSTALL_DIR> CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; BUILD_COMMAND ${MAKE} CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; BUILD_IN_SOURCE 1; INSTALL_COMMAND make install && ; - cp config.h <INSTALL_DIR>/include/jellyfish-2.1.3/jellyfish/ &&; + cp config.h <INSTALL_DIR>/include/jellyfish-2.2.3/jellyfish/ &&; cp config.h <INSTALL_DIR>/include/; ). --- salmon-0.4.2/src/CMakeLists.txt.orig 2015-08-18 21:21:14.892734948 +0200; +++ salmon-0.4.2/src/CMakeLists.txt 2015-08-18 21:20:51.292295094 +0200; @@ -42,7 +42,7 @@; ${GAT_SOURCE_DIR}/external; ${GAT_SOURCE_DIR}/external/cereal/include; ${GAT_SOURCE_DIR}/external/install/include; -${GAT_SOURCE_DIR}/external/install/include/jellyfish-2.1.3; +${GAT_SOURCE_DIR}/external/install/include/jellyfish-2.2.3; ${GAT_SOURCE_DIR}/external/install/include/bwa; ${ZLIB_INCLUDE_DIR}; ${TBB_INCLUDE_DIRS}; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/11
https://github.com/COMBINE-lab/salmon/issues/11:2585,Modifiability,config,config,2585,"itHub, but after adding `autoreconf -i` to the `CONFIGURE_COMMAND`, this leads to the same problem. ``` diff; --- salmon-0.4.2/CMakeLists.txt.orig 2015-06-15 02:31:09.000000000 +0200; +++ salmon-0.4.2/CMakeLists.txt 2015-08-18 21:13:29.684010359 +0200; @@ -357,14 +366,14 @@; message(""==================================================================""); ExternalProject_Add(libjellyfish; DOWNLOAD_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external; - URL ftp://ftp.genome.umd.edu/pub/jellyfish/jellyfish-2.1.3.tar.gz; - SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3; + URL https://github.com/gmarcais/Jellyfish/releases/download/v2.2.3/jellyfish-2.2.3.tar.gz; + SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3; INSTALL_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/install; - CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3/configure --prefix=<INSTALL_DIR> CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; + CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3/configure --prefix=<INSTALL_DIR> CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; BUILD_COMMAND ${MAKE} CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; BUILD_IN_SOURCE 1; INSTALL_COMMAND make install && ; - cp config.h <INSTALL_DIR>/include/jellyfish-2.1.3/jellyfish/ &&; + cp config.h <INSTALL_DIR>/include/jellyfish-2.2.3/jellyfish/ &&; cp config.h <INSTALL_DIR>/include/; ). --- salmon-0.4.2/src/CMakeLists.txt.orig 2015-08-18 21:21:14.892734948 +0200; +++ salmon-0.4.2/src/CMakeLists.txt 2015-08-18 21:20:51.292295094 +0200; @@ -42,7 +42,7 @@; ${GAT_SOURCE_DIR}/external; ${GAT_SOURCE_DIR}/external/cereal/include; ${GAT_SOURCE_DIR}/external/install/include; -${GAT_SOURCE_DIR}/external/install/include/jellyfish-2.1.3; +${GAT_SOURCE_DIR}/external/install/include/jellyfish-2.2.3; ${GAT_SOURCE_DIR}/external/install/include/bwa; ${ZLIB_INCLUDE_DIR}; ${TBB_INCLUDE_DIRS}; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/11
https://github.com/COMBINE-lab/salmon/issues/11:680,Safety,abort,aborted,680,"On the system I'm trying to install Salmon 0.4.2 on, downloading from `ftp://` is blocked for security reasons. Therefore, the automagic download the Jellyfish 2.1.3 source tarball fails. I tried adjusting the `CMakeLists.txt` files to use the latest Jellyfish 2.2.3 instead, but this leads to an issue with a Jellyfish include file not being found:. ```; checking whether we are using the GNU C compiler... In file included from /tmp/Salmon/0.4.2/intel-2015a/salmon-0.4.2/src/merge_files.cc(17):; /tmp/Salmon/0.4.2/intel-2015a/salmon-0.4.2/include/merge_files.hpp(21): catastrophic error: cannot open source file ""jellyfish/err.hpp""; #include <jellyfish/err.hpp>; ^. compilation aborted for /tmp/Salmon/0.4.2/intel-2015a/salmon-0.4.2/src/merge_files.cc (code 4); make[2]: *** [src/CMakeFiles/salmon_core.dir/merge_files.cc.o] Error 4; ```. This is weird, because the correct `include` directory is shown in the compiler command, and the file is there!. Here's my patch. Any idea what may be wrong with it, or which different approach I could try to get this to work?; I also tried using the `2.1.3.tar.gz` tarball from GitHub, but after adding `autoreconf -i` to the `CONFIGURE_COMMAND`, this leads to the same problem. ``` diff; --- salmon-0.4.2/CMakeLists.txt.orig 2015-06-15 02:31:09.000000000 +0200; +++ salmon-0.4.2/CMakeLists.txt 2015-08-18 21:13:29.684010359 +0200; @@ -357,14 +366,14 @@; message(""==================================================================""); ExternalProject_Add(libjellyfish; DOWNLOAD_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external; - URL ftp://ftp.genome.umd.edu/pub/jellyfish/jellyfish-2.1.3.tar.gz; - SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3; + URL https://github.com/gmarcais/Jellyfish/releases/download/v2.2.3/jellyfish-2.2.3.tar.gz; + SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3; INSTALL_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/install; - CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3/configure --p",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/11
https://github.com/COMBINE-lab/salmon/issues/11:94,Security,secur,security,94,"On the system I'm trying to install Salmon 0.4.2 on, downloading from `ftp://` is blocked for security reasons. Therefore, the automagic download the Jellyfish 2.1.3 source tarball fails. I tried adjusting the `CMakeLists.txt` files to use the latest Jellyfish 2.2.3 instead, but this leads to an issue with a Jellyfish include file not being found:. ```; checking whether we are using the GNU C compiler... In file included from /tmp/Salmon/0.4.2/intel-2015a/salmon-0.4.2/src/merge_files.cc(17):; /tmp/Salmon/0.4.2/intel-2015a/salmon-0.4.2/include/merge_files.hpp(21): catastrophic error: cannot open source file ""jellyfish/err.hpp""; #include <jellyfish/err.hpp>; ^. compilation aborted for /tmp/Salmon/0.4.2/intel-2015a/salmon-0.4.2/src/merge_files.cc (code 4); make[2]: *** [src/CMakeFiles/salmon_core.dir/merge_files.cc.o] Error 4; ```. This is weird, because the correct `include` directory is shown in the compiler command, and the file is there!. Here's my patch. Any idea what may be wrong with it, or which different approach I could try to get this to work?; I also tried using the `2.1.3.tar.gz` tarball from GitHub, but after adding `autoreconf -i` to the `CONFIGURE_COMMAND`, this leads to the same problem. ``` diff; --- salmon-0.4.2/CMakeLists.txt.orig 2015-06-15 02:31:09.000000000 +0200; +++ salmon-0.4.2/CMakeLists.txt 2015-08-18 21:13:29.684010359 +0200; @@ -357,14 +366,14 @@; message(""==================================================================""); ExternalProject_Add(libjellyfish; DOWNLOAD_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external; - URL ftp://ftp.genome.umd.edu/pub/jellyfish/jellyfish-2.1.3.tar.gz; - SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3; + URL https://github.com/gmarcais/Jellyfish/releases/download/v2.2.3/jellyfish-2.2.3.tar.gz; + SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3; INSTALL_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/install; - CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3/configure --p",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/11
https://github.com/COMBINE-lab/salmon/issues/12:947,Availability,error,error,947,"Hi folks,. I'm trying to run DebianSqueeze Salmon v0.4.2 with some issue in the 'quant' step. Here is the skinny:; - ERCC + latest human ensembl transcriptome; - Index builds fine -- no apparent issues; - Quant step fails with the following output:. ``` bash; LD_LIBRARY_PATH=~/software/SalmonBeta-0.4.2_DebianSqueeze/lib; ~/software/SalmonBeta-0.4.2_DebianSqueeze/bin/salmon quant -i index/hs_ens_ercc.sidx --libType IU --output output/salmon -1 reads_1.fastq -2 reads_2.fastq; Version Info: This is the most recent version of Salmon.; # salmon (smem-based) v0.4.2; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { index/hs_ens_ercc.sidx }; # [ libType ] => { IU }; # [ output ] => { output/salmon }; # [ mates1 ] => { reads_1.fastq }; # [ mates2 ] => { reads_2.fastq }; Logs will be written to output/salmon/logs; there is 1 lib; [2015-08-23 21:58:57.438] [jointLog] [info] parsing read library format; [bns_restore_core] Parse error reading index/hs_ens_ercc.sidx/bwaidx.amb; ```. I've provided a reproducible and self-contained Snakefile that only depends on the binaries being dumped in `~/software` and the reads_*fastq below. Let me know if there is anything I can do to help. Thanks a bunch!. Harold. ---. ``` python; ercc_fa = 'index/ERCC.fa'; ens_fa = 'index/Homo_sapiens.GRCh38.cdna.all.fa'; ens_ercc_fa = 'index/hs_ens_ercc.fa'; ens_ercc_sidx = 'index/hs_ens_ercc.sidx'. SALMON_PRE = '~/software/SalmonBeta-0.4.2_DebianSqueeze'; SALMON = 'LD_LIBRARY_PATH={0}/lib; {0}/bin/salmon'.format(SALMON_PRE). rule all:; input:; ens_ercc_fa,; ens_ercc_sidx,; 'output/salmon/quant.sf'. rule download_ens:; output:; ens_fa; params:; dl = 'ftp://ftp.ensembl.org/pub/release-81/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz'; threads: 1; shell:; 'curl {params.dl} | zcat > {output}'. rule download_ercc:; output:; ercc_fa; params:; dl = 'http://bio.math.berkeley.edu/kallisto/transcriptomes/ERCC.fa.gz'; threads: 1; shell:; 'curl {params.dl} | zcat > {output}'. rule merge_",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/12
https://github.com/COMBINE-lab/salmon/issues/12:1682,Deployability,release,release-,1682,"output/salmon }; # [ mates1 ] => { reads_1.fastq }; # [ mates2 ] => { reads_2.fastq }; Logs will be written to output/salmon/logs; there is 1 lib; [2015-08-23 21:58:57.438] [jointLog] [info] parsing read library format; [bns_restore_core] Parse error reading index/hs_ens_ercc.sidx/bwaidx.amb; ```. I've provided a reproducible and self-contained Snakefile that only depends on the binaries being dumped in `~/software` and the reads_*fastq below. Let me know if there is anything I can do to help. Thanks a bunch!. Harold. ---. ``` python; ercc_fa = 'index/ERCC.fa'; ens_fa = 'index/Homo_sapiens.GRCh38.cdna.all.fa'; ens_ercc_fa = 'index/hs_ens_ercc.fa'; ens_ercc_sidx = 'index/hs_ens_ercc.sidx'. SALMON_PRE = '~/software/SalmonBeta-0.4.2_DebianSqueeze'; SALMON = 'LD_LIBRARY_PATH={0}/lib; {0}/bin/salmon'.format(SALMON_PRE). rule all:; input:; ens_ercc_fa,; ens_ercc_sidx,; 'output/salmon/quant.sf'. rule download_ens:; output:; ens_fa; params:; dl = 'ftp://ftp.ensembl.org/pub/release-81/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz'; threads: 1; shell:; 'curl {params.dl} | zcat > {output}'. rule download_ercc:; output:; ercc_fa; params:; dl = 'http://bio.math.berkeley.edu/kallisto/transcriptomes/ERCC.fa.gz'; threads: 1; shell:; 'curl {params.dl} | zcat > {output}'. rule merge_ercc:; input:; ens_fa,; ercc_fa; output:; ens_ercc_fa; shell:; 'cat {input[0]} {input[1]} > {output}'. rule sal_ens_ercc:; input:; ens_ercc_fa; output:; ens_ercc_sidx; threads: 20; shell:; '{SALMON} index -i {output} -p {threads} -t {input}'. rule salmon:; input:; 'reads_1.fastq',; 'reads_2.fastq',; ens_ercc_sidx; output:; 'output/salmon',; 'output/salmon/quant.sf'; shell:; '{SALMON} quant '; '-i {ens_ercc_sidx} '; '--libType IU '; '--output {output[0]} '; '-1 {input[0]} -2 {input[1]}'; ```. Finally, here are the reads:. `reads_1.fastq`:. ```; @SRR896663.1 FCC0AYTACXX:1:1101:1460:1869 length=100; NAAGTGCTTCATTGTCATCCAACTTCAACTCGTTGACTTTATCTATCAGTCCTTCAATGTCGCCCATACCAAGAAGTTTGCTAATAAAAGGCTGTGT",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/12
https://github.com/COMBINE-lab/salmon/issues/12:1069,Integrability,depend,depends,1069,"n the 'quant' step. Here is the skinny:; - ERCC + latest human ensembl transcriptome; - Index builds fine -- no apparent issues; - Quant step fails with the following output:. ``` bash; LD_LIBRARY_PATH=~/software/SalmonBeta-0.4.2_DebianSqueeze/lib; ~/software/SalmonBeta-0.4.2_DebianSqueeze/bin/salmon quant -i index/hs_ens_ercc.sidx --libType IU --output output/salmon -1 reads_1.fastq -2 reads_2.fastq; Version Info: This is the most recent version of Salmon.; # salmon (smem-based) v0.4.2; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { index/hs_ens_ercc.sidx }; # [ libType ] => { IU }; # [ output ] => { output/salmon }; # [ mates1 ] => { reads_1.fastq }; # [ mates2 ] => { reads_2.fastq }; Logs will be written to output/salmon/logs; there is 1 lib; [2015-08-23 21:58:57.438] [jointLog] [info] parsing read library format; [bns_restore_core] Parse error reading index/hs_ens_ercc.sidx/bwaidx.amb; ```. I've provided a reproducible and self-contained Snakefile that only depends on the binaries being dumped in `~/software` and the reads_*fastq below. Let me know if there is anything I can do to help. Thanks a bunch!. Harold. ---. ``` python; ercc_fa = 'index/ERCC.fa'; ens_fa = 'index/Homo_sapiens.GRCh38.cdna.all.fa'; ens_ercc_fa = 'index/hs_ens_ercc.fa'; ens_ercc_sidx = 'index/hs_ens_ercc.sidx'. SALMON_PRE = '~/software/SalmonBeta-0.4.2_DebianSqueeze'; SALMON = 'LD_LIBRARY_PATH={0}/lib; {0}/bin/salmon'.format(SALMON_PRE). rule all:; input:; ens_ercc_fa,; ens_ercc_sidx,; 'output/salmon/quant.sf'. rule download_ens:; output:; ens_fa; params:; dl = 'ftp://ftp.ensembl.org/pub/release-81/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz'; threads: 1; shell:; 'curl {params.dl} | zcat > {output}'. rule download_ercc:; output:; ercc_fa; params:; dl = 'http://bio.math.berkeley.edu/kallisto/transcriptomes/ERCC.fa.gz'; threads: 1; shell:; 'curl {params.dl} | zcat > {output}'. rule merge_ercc:; input:; ens_fa,; ercc_fa; output:; ens_ercc_fa; shell:; 'cat {input",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/12
https://github.com/COMBINE-lab/salmon/issues/12:789,Testability,Log,Logs,789,"Hi folks,. I'm trying to run DebianSqueeze Salmon v0.4.2 with some issue in the 'quant' step. Here is the skinny:; - ERCC + latest human ensembl transcriptome; - Index builds fine -- no apparent issues; - Quant step fails with the following output:. ``` bash; LD_LIBRARY_PATH=~/software/SalmonBeta-0.4.2_DebianSqueeze/lib; ~/software/SalmonBeta-0.4.2_DebianSqueeze/bin/salmon quant -i index/hs_ens_ercc.sidx --libType IU --output output/salmon -1 reads_1.fastq -2 reads_2.fastq; Version Info: This is the most recent version of Salmon.; # salmon (smem-based) v0.4.2; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { index/hs_ens_ercc.sidx }; # [ libType ] => { IU }; # [ output ] => { output/salmon }; # [ mates1 ] => { reads_1.fastq }; # [ mates2 ] => { reads_2.fastq }; Logs will be written to output/salmon/logs; there is 1 lib; [2015-08-23 21:58:57.438] [jointLog] [info] parsing read library format; [bns_restore_core] Parse error reading index/hs_ens_ercc.sidx/bwaidx.amb; ```. I've provided a reproducible and self-contained Snakefile that only depends on the binaries being dumped in `~/software` and the reads_*fastq below. Let me know if there is anything I can do to help. Thanks a bunch!. Harold. ---. ``` python; ercc_fa = 'index/ERCC.fa'; ens_fa = 'index/Homo_sapiens.GRCh38.cdna.all.fa'; ens_ercc_fa = 'index/hs_ens_ercc.fa'; ens_ercc_sidx = 'index/hs_ens_ercc.sidx'. SALMON_PRE = '~/software/SalmonBeta-0.4.2_DebianSqueeze'; SALMON = 'LD_LIBRARY_PATH={0}/lib; {0}/bin/salmon'.format(SALMON_PRE). rule all:; input:; ens_ercc_fa,; ens_ercc_sidx,; 'output/salmon/quant.sf'. rule download_ens:; output:; ens_fa; params:; dl = 'ftp://ftp.ensembl.org/pub/release-81/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz'; threads: 1; shell:; 'curl {params.dl} | zcat > {output}'. rule download_ercc:; output:; ercc_fa; params:; dl = 'http://bio.math.berkeley.edu/kallisto/transcriptomes/ERCC.fa.gz'; threads: 1; shell:; 'curl {params.dl} | zcat > {output}'. rule merge_",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/12
https://github.com/COMBINE-lab/salmon/issues/12:827,Testability,log,logs,827,"Hi folks,. I'm trying to run DebianSqueeze Salmon v0.4.2 with some issue in the 'quant' step. Here is the skinny:; - ERCC + latest human ensembl transcriptome; - Index builds fine -- no apparent issues; - Quant step fails with the following output:. ``` bash; LD_LIBRARY_PATH=~/software/SalmonBeta-0.4.2_DebianSqueeze/lib; ~/software/SalmonBeta-0.4.2_DebianSqueeze/bin/salmon quant -i index/hs_ens_ercc.sidx --libType IU --output output/salmon -1 reads_1.fastq -2 reads_2.fastq; Version Info: This is the most recent version of Salmon.; # salmon (smem-based) v0.4.2; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { index/hs_ens_ercc.sidx }; # [ libType ] => { IU }; # [ output ] => { output/salmon }; # [ mates1 ] => { reads_1.fastq }; # [ mates2 ] => { reads_2.fastq }; Logs will be written to output/salmon/logs; there is 1 lib; [2015-08-23 21:58:57.438] [jointLog] [info] parsing read library format; [bns_restore_core] Parse error reading index/hs_ens_ercc.sidx/bwaidx.amb; ```. I've provided a reproducible and self-contained Snakefile that only depends on the binaries being dumped in `~/software` and the reads_*fastq below. Let me know if there is anything I can do to help. Thanks a bunch!. Harold. ---. ``` python; ercc_fa = 'index/ERCC.fa'; ens_fa = 'index/Homo_sapiens.GRCh38.cdna.all.fa'; ens_ercc_fa = 'index/hs_ens_ercc.fa'; ens_ercc_sidx = 'index/hs_ens_ercc.sidx'. SALMON_PRE = '~/software/SalmonBeta-0.4.2_DebianSqueeze'; SALMON = 'LD_LIBRARY_PATH={0}/lib; {0}/bin/salmon'.format(SALMON_PRE). rule all:; input:; ens_ercc_fa,; ens_ercc_sidx,; 'output/salmon/quant.sf'. rule download_ens:; output:; ens_fa; params:; dl = 'ftp://ftp.ensembl.org/pub/release-81/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz'; threads: 1; shell:; 'curl {params.dl} | zcat > {output}'. rule download_ercc:; output:; ercc_fa; params:; dl = 'http://bio.math.berkeley.edu/kallisto/transcriptomes/ERCC.fa.gz'; threads: 1; shell:; 'curl {params.dl} | zcat > {output}'. rule merge_",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/12
https://github.com/COMBINE-lab/salmon/issues/14:271,Deployability,release,release,271,"The ""effective"" mapping rate is the true mapping rate that is used e.g. in the TPM / estimated number of reads calculations. The overall mapping rate, in addition to being poorly named, is a historical artifact. The proposal here (which should be implemented in the next release) is to report only a single ""mapping rate"" (which will be equal to what is currently the ""effective"" mapping rate), that represents the quantities used in comping the TPM and estimated number of reads columns.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/14
https://github.com/COMBINE-lab/salmon/issues/16:2427,Availability,down,down,2427,"; observed = }; Library format { type:paired end, relative orientation:inward, strandedness:(sense, antisense) }; observed = Library format { type:paired end, relative orientation:inward, strandedness:(antisense, sense) }; expected = Library format { type:observed = Library format { type: }; paired endLibrary format { type:paired end, relative orientation:, relative orientation:inward, strandedness:(sense, antisense) }; observed = Library format { type:paired end, relative orientation:inward, strandedness:observed = inward, strandedness:(antisense, sense) }; (antisense, sense) }paired end, relative orientation:inward, strandedness:(antisense, sense) }; expected = Library format { type:paired end, relative orientation:inward, strandedness:(sense, antisense)expected = Library format { type:Library format { type:; }paired endpaired endexpected = Library format { type:paired end, relative orientation:; , relative orientation:inwardinward, strandedness:(sense, antisense)observed = , strandedness:(antisense, sense) }; }; observed = Library format { type:paired end, relative orientation:inward, strandedness:(antisense, sense) }expected = Library format { type:, relative orientation:Library format { type:paired end; ```. and so on... It seems that the [`LibraryFormat` class](https://github.com/COMBINE-lab/salmon/blob/a6a4fe0dcf71674a59eb901d5ec6933df40de7f2/src/LibraryFormat.cpp#L52) is performing this check, and that the string format method is producing all of this output on stderr. . I believe that the Salmon index I'm using contains some transcript sequences from the ""wrong"" strand, and it would be helpful if the program gave information about the observed mapping (maybe just the transcript sequence ID) so that I could track down the error during index generation. . It also seems that all of the above error output contains no line terminators, although maybe this has been fixed in a more recent version. ```; -bash-4.1$ salmon --version; version : 0.4.0; ```. cc @jmerkin",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/16
https://github.com/COMBINE-lab/salmon/issues/16:2436,Availability,error,error,2436,"; observed = }; Library format { type:paired end, relative orientation:inward, strandedness:(sense, antisense) }; observed = Library format { type:paired end, relative orientation:inward, strandedness:(antisense, sense) }; expected = Library format { type:observed = Library format { type: }; paired endLibrary format { type:paired end, relative orientation:, relative orientation:inward, strandedness:(sense, antisense) }; observed = Library format { type:paired end, relative orientation:inward, strandedness:observed = inward, strandedness:(antisense, sense) }; (antisense, sense) }paired end, relative orientation:inward, strandedness:(antisense, sense) }; expected = Library format { type:paired end, relative orientation:inward, strandedness:(sense, antisense)expected = Library format { type:Library format { type:; }paired endpaired endexpected = Library format { type:paired end, relative orientation:; , relative orientation:inwardinward, strandedness:(sense, antisense)observed = , strandedness:(antisense, sense) }; }; observed = Library format { type:paired end, relative orientation:inward, strandedness:(antisense, sense) }expected = Library format { type:, relative orientation:Library format { type:paired end; ```. and so on... It seems that the [`LibraryFormat` class](https://github.com/COMBINE-lab/salmon/blob/a6a4fe0dcf71674a59eb901d5ec6933df40de7f2/src/LibraryFormat.cpp#L52) is performing this check, and that the string format method is producing all of this output on stderr. . I believe that the Salmon index I'm using contains some transcript sequences from the ""wrong"" strand, and it would be helpful if the program gave information about the observed mapping (maybe just the transcript sequence ID) so that I could track down the error during index generation. . It also seems that all of the above error output contains no line terminators, although maybe this has been fixed in a more recent version. ```; -bash-4.1$ salmon --version; version : 0.4.0; ```. cc @jmerkin",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/16
https://github.com/COMBINE-lab/salmon/issues/16:2505,Availability,error,error,2505,"; observed = }; Library format { type:paired end, relative orientation:inward, strandedness:(sense, antisense) }; observed = Library format { type:paired end, relative orientation:inward, strandedness:(antisense, sense) }; expected = Library format { type:observed = Library format { type: }; paired endLibrary format { type:paired end, relative orientation:, relative orientation:inward, strandedness:(sense, antisense) }; observed = Library format { type:paired end, relative orientation:inward, strandedness:observed = inward, strandedness:(antisense, sense) }; (antisense, sense) }paired end, relative orientation:inward, strandedness:(antisense, sense) }; expected = Library format { type:paired end, relative orientation:inward, strandedness:(sense, antisense)expected = Library format { type:Library format { type:; }paired endpaired endexpected = Library format { type:paired end, relative orientation:; , relative orientation:inwardinward, strandedness:(sense, antisense)observed = , strandedness:(antisense, sense) }; }; observed = Library format { type:paired end, relative orientation:inward, strandedness:(antisense, sense) }expected = Library format { type:, relative orientation:Library format { type:paired end; ```. and so on... It seems that the [`LibraryFormat` class](https://github.com/COMBINE-lab/salmon/blob/a6a4fe0dcf71674a59eb901d5ec6933df40de7f2/src/LibraryFormat.cpp#L52) is performing this check, and that the string format method is producing all of this output on stderr. . I believe that the Salmon index I'm using contains some transcript sequences from the ""wrong"" strand, and it would be helpful if the program gave information about the observed mapping (maybe just the transcript sequence ID) so that I could track down the error during index generation. . It also seems that all of the above error output contains no line terminators, although maybe this has been fixed in a more recent version. ```; -bash-4.1$ salmon --version; version : 0.4.0; ```. cc @jmerkin",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/16
https://github.com/COMBINE-lab/salmon/issues/16:144,Integrability,message,messages,144,"I've just been testing Salmon using Illumina TruSeq stranded (dUTP) libraries. Using either `ISF` (correct libType) or `ISR` I get a **ton** of messages like this:. ```; expected = Library format { type: }; paired end, relative orientation:inwardexpected = Library format { type:paired end, relative orientation:Library format { type:paired end, relative orientation:inwardpaired endinward, strandedness:, relative orientation:inward, strandedness:(sense, antisense) }; observed = Library format { type:paired end, relative orientation:inward, strandedness:(antisense, sense) }; (sense, antisense)expected = , strandedness:(sense, antisense), strandedness:(sense, antisense) }; observed = }; Library format { type:paired end, relative orientation:inward, strandedness:(sense, antisense) }; observed = Library format { type:paired end, relative orientation:inward, strandedness:(antisense, sense) }; expected = Library format { type:observed = Library format { type: }; paired endLibrary format { type:paired end, relative orientation:, relative orientation:inward, strandedness:(sense, antisense) }; observed = Library format { type:paired end, relative orientation:inward, strandedness:observed = inward, strandedness:(antisense, sense) }; (antisense, sense) }paired end, relative orientation:inward, strandedness:(antisense, sense) }; expected = Library format { type:paired end, relative orientation:inward, strandedness:(sense, antisense)expected = Library format { type:Library format { type:; }paired endpaired endexpected = Library format { type:paired end, relative orientation:; , relative orientation:inwardinward, strandedness:(sense, antisense)observed = , strandedness:(antisense, sense) }; }; observed = Library format { type:paired end, relative orientation:inward, strandedness:(antisense, sense) }expected = Library format { type:, relative orientation:Library format { type:paired end; ```. and so on... It seems that the [`LibraryFormat` class](https://github.com/COMBINE-lab/salmon",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/16
https://github.com/COMBINE-lab/salmon/issues/16:2078,Performance,perform,performing,2078,"; observed = }; Library format { type:paired end, relative orientation:inward, strandedness:(sense, antisense) }; observed = Library format { type:paired end, relative orientation:inward, strandedness:(antisense, sense) }; expected = Library format { type:observed = Library format { type: }; paired endLibrary format { type:paired end, relative orientation:, relative orientation:inward, strandedness:(sense, antisense) }; observed = Library format { type:paired end, relative orientation:inward, strandedness:observed = inward, strandedness:(antisense, sense) }; (antisense, sense) }paired end, relative orientation:inward, strandedness:(antisense, sense) }; expected = Library format { type:paired end, relative orientation:inward, strandedness:(sense, antisense)expected = Library format { type:Library format { type:; }paired endpaired endexpected = Library format { type:paired end, relative orientation:; , relative orientation:inwardinward, strandedness:(sense, antisense)observed = , strandedness:(antisense, sense) }; }; observed = Library format { type:paired end, relative orientation:inward, strandedness:(antisense, sense) }expected = Library format { type:, relative orientation:Library format { type:paired end; ```. and so on... It seems that the [`LibraryFormat` class](https://github.com/COMBINE-lab/salmon/blob/a6a4fe0dcf71674a59eb901d5ec6933df40de7f2/src/LibraryFormat.cpp#L52) is performing this check, and that the string format method is producing all of this output on stderr. . I believe that the Salmon index I'm using contains some transcript sequences from the ""wrong"" strand, and it would be helpful if the program gave information about the observed mapping (maybe just the transcript sequence ID) so that I could track down the error during index generation. . It also seems that all of the above error output contains no line terminators, although maybe this has been fixed in a more recent version. ```; -bash-4.1$ salmon --version; version : 0.4.0; ```. cc @jmerkin",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/16
https://github.com/COMBINE-lab/salmon/issues/16:15,Testability,test,testing,15,"I've just been testing Salmon using Illumina TruSeq stranded (dUTP) libraries. Using either `ISF` (correct libType) or `ISR` I get a **ton** of messages like this:. ```; expected = Library format { type: }; paired end, relative orientation:inwardexpected = Library format { type:paired end, relative orientation:Library format { type:paired end, relative orientation:inwardpaired endinward, strandedness:, relative orientation:inward, strandedness:(sense, antisense) }; observed = Library format { type:paired end, relative orientation:inward, strandedness:(antisense, sense) }; (sense, antisense)expected = , strandedness:(sense, antisense), strandedness:(sense, antisense) }; observed = }; Library format { type:paired end, relative orientation:inward, strandedness:(sense, antisense) }; observed = Library format { type:paired end, relative orientation:inward, strandedness:(antisense, sense) }; expected = Library format { type:observed = Library format { type: }; paired endLibrary format { type:paired end, relative orientation:, relative orientation:inward, strandedness:(sense, antisense) }; observed = Library format { type:paired end, relative orientation:inward, strandedness:observed = inward, strandedness:(antisense, sense) }; (antisense, sense) }paired end, relative orientation:inward, strandedness:(antisense, sense) }; expected = Library format { type:paired end, relative orientation:inward, strandedness:(sense, antisense)expected = Library format { type:Library format { type:; }paired endpaired endexpected = Library format { type:paired end, relative orientation:; , relative orientation:inwardinward, strandedness:(sense, antisense)observed = , strandedness:(antisense, sense) }; }; observed = Library format { type:paired end, relative orientation:inward, strandedness:(antisense, sense) }expected = Library format { type:, relative orientation:Library format { type:paired end; ```. and so on... It seems that the [`LibraryFormat` class](https://github.com/COMBINE-lab/salmon",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/16
https://github.com/COMBINE-lab/salmon/issues/19:214,Availability,down,downloaded,214,"Hello!. I'm packaging salmon and many of its dependencies for Debian in support of https://github.com/Blahah/transrate/issues/160. I have a messy patch to enable the use of external libraries instead of bundled or downloaded copies at http://anonscm.debian.org/cgit/debian-med/salmon.git/plain/debian/patches/dependency-fix. As I'm not a CMake expert I was only able to make it work for Debian instead of a generic solution that would fall back to the shipped copies or downloading as it is now. Perhaps you all are better with CMake than I am? A generic solution would be best so I don't have to adjust the patch with every change to the CMakeLists.txt. Specifically it would be great to support; - [ ] external copy of spdlog headers and the cereal serialization headers; - linking to external dynamic libraries for; - [ ] boost; - Headers: https://packages.debian.org/sid/amd64/libboost1.58-dev/filelist; - Sample library layout: https://packages.debian.org/sid/amd64/libboost-filesystem1.58-dev/filelist; - [ ] bwa; - Headers & library: https://ftp-master.debian.org/new/bwa_0.7.12-5.html; - [ ] jellyfish; - Headers & library: https://packages.debian.org/sid/amd64/libjellyfish-2.0-dev/filelist; - [ ] tbb; - Headers & library: https://packages.debian.org/sid/amd64/libtbb-dev/filelist; - [ ] libgff; - Headers & library: https://ftp-master.debian.org/new/libgff_1.0-1.html; - [ ] staden IOLib; - Headers & library: https://packages.debian.org/sid/amd64/libstaden-read-dev/filelist. I also have a patch to support the latest release of jellyfish that I can turn into a pull request, should you want it: http://anonscm.debian.org/cgit/debian-med/salmon.git/plain/debian/patches/jellyfish-update. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19
https://github.com/COMBINE-lab/salmon/issues/19:470,Availability,down,downloading,470,"Hello!. I'm packaging salmon and many of its dependencies for Debian in support of https://github.com/Blahah/transrate/issues/160. I have a messy patch to enable the use of external libraries instead of bundled or downloaded copies at http://anonscm.debian.org/cgit/debian-med/salmon.git/plain/debian/patches/dependency-fix. As I'm not a CMake expert I was only able to make it work for Debian instead of a generic solution that would fall back to the shipped copies or downloading as it is now. Perhaps you all are better with CMake than I am? A generic solution would be best so I don't have to adjust the patch with every change to the CMakeLists.txt. Specifically it would be great to support; - [ ] external copy of spdlog headers and the cereal serialization headers; - linking to external dynamic libraries for; - [ ] boost; - Headers: https://packages.debian.org/sid/amd64/libboost1.58-dev/filelist; - Sample library layout: https://packages.debian.org/sid/amd64/libboost-filesystem1.58-dev/filelist; - [ ] bwa; - Headers & library: https://ftp-master.debian.org/new/bwa_0.7.12-5.html; - [ ] jellyfish; - Headers & library: https://packages.debian.org/sid/amd64/libjellyfish-2.0-dev/filelist; - [ ] tbb; - Headers & library: https://packages.debian.org/sid/amd64/libtbb-dev/filelist; - [ ] libgff; - Headers & library: https://ftp-master.debian.org/new/libgff_1.0-1.html; - [ ] staden IOLib; - Headers & library: https://packages.debian.org/sid/amd64/libstaden-read-dev/filelist. I also have a patch to support the latest release of jellyfish that I can turn into a pull request, should you want it: http://anonscm.debian.org/cgit/debian-med/salmon.git/plain/debian/patches/jellyfish-update. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19
https://github.com/COMBINE-lab/salmon/issues/19:146,Deployability,patch,patch,146,"Hello!. I'm packaging salmon and many of its dependencies for Debian in support of https://github.com/Blahah/transrate/issues/160. I have a messy patch to enable the use of external libraries instead of bundled or downloaded copies at http://anonscm.debian.org/cgit/debian-med/salmon.git/plain/debian/patches/dependency-fix. As I'm not a CMake expert I was only able to make it work for Debian instead of a generic solution that would fall back to the shipped copies or downloading as it is now. Perhaps you all are better with CMake than I am? A generic solution would be best so I don't have to adjust the patch with every change to the CMakeLists.txt. Specifically it would be great to support; - [ ] external copy of spdlog headers and the cereal serialization headers; - linking to external dynamic libraries for; - [ ] boost; - Headers: https://packages.debian.org/sid/amd64/libboost1.58-dev/filelist; - Sample library layout: https://packages.debian.org/sid/amd64/libboost-filesystem1.58-dev/filelist; - [ ] bwa; - Headers & library: https://ftp-master.debian.org/new/bwa_0.7.12-5.html; - [ ] jellyfish; - Headers & library: https://packages.debian.org/sid/amd64/libjellyfish-2.0-dev/filelist; - [ ] tbb; - Headers & library: https://packages.debian.org/sid/amd64/libtbb-dev/filelist; - [ ] libgff; - Headers & library: https://ftp-master.debian.org/new/libgff_1.0-1.html; - [ ] staden IOLib; - Headers & library: https://packages.debian.org/sid/amd64/libstaden-read-dev/filelist. I also have a patch to support the latest release of jellyfish that I can turn into a pull request, should you want it: http://anonscm.debian.org/cgit/debian-med/salmon.git/plain/debian/patches/jellyfish-update. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19
https://github.com/COMBINE-lab/salmon/issues/19:301,Deployability,patch,patches,301,"Hello!. I'm packaging salmon and many of its dependencies for Debian in support of https://github.com/Blahah/transrate/issues/160. I have a messy patch to enable the use of external libraries instead of bundled or downloaded copies at http://anonscm.debian.org/cgit/debian-med/salmon.git/plain/debian/patches/dependency-fix. As I'm not a CMake expert I was only able to make it work for Debian instead of a generic solution that would fall back to the shipped copies or downloading as it is now. Perhaps you all are better with CMake than I am? A generic solution would be best so I don't have to adjust the patch with every change to the CMakeLists.txt. Specifically it would be great to support; - [ ] external copy of spdlog headers and the cereal serialization headers; - linking to external dynamic libraries for; - [ ] boost; - Headers: https://packages.debian.org/sid/amd64/libboost1.58-dev/filelist; - Sample library layout: https://packages.debian.org/sid/amd64/libboost-filesystem1.58-dev/filelist; - [ ] bwa; - Headers & library: https://ftp-master.debian.org/new/bwa_0.7.12-5.html; - [ ] jellyfish; - Headers & library: https://packages.debian.org/sid/amd64/libjellyfish-2.0-dev/filelist; - [ ] tbb; - Headers & library: https://packages.debian.org/sid/amd64/libtbb-dev/filelist; - [ ] libgff; - Headers & library: https://ftp-master.debian.org/new/libgff_1.0-1.html; - [ ] staden IOLib; - Headers & library: https://packages.debian.org/sid/amd64/libstaden-read-dev/filelist. I also have a patch to support the latest release of jellyfish that I can turn into a pull request, should you want it: http://anonscm.debian.org/cgit/debian-med/salmon.git/plain/debian/patches/jellyfish-update. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19
https://github.com/COMBINE-lab/salmon/issues/19:608,Deployability,patch,patch,608,"Hello!. I'm packaging salmon and many of its dependencies for Debian in support of https://github.com/Blahah/transrate/issues/160. I have a messy patch to enable the use of external libraries instead of bundled or downloaded copies at http://anonscm.debian.org/cgit/debian-med/salmon.git/plain/debian/patches/dependency-fix. As I'm not a CMake expert I was only able to make it work for Debian instead of a generic solution that would fall back to the shipped copies or downloading as it is now. Perhaps you all are better with CMake than I am? A generic solution would be best so I don't have to adjust the patch with every change to the CMakeLists.txt. Specifically it would be great to support; - [ ] external copy of spdlog headers and the cereal serialization headers; - linking to external dynamic libraries for; - [ ] boost; - Headers: https://packages.debian.org/sid/amd64/libboost1.58-dev/filelist; - Sample library layout: https://packages.debian.org/sid/amd64/libboost-filesystem1.58-dev/filelist; - [ ] bwa; - Headers & library: https://ftp-master.debian.org/new/bwa_0.7.12-5.html; - [ ] jellyfish; - Headers & library: https://packages.debian.org/sid/amd64/libjellyfish-2.0-dev/filelist; - [ ] tbb; - Headers & library: https://packages.debian.org/sid/amd64/libtbb-dev/filelist; - [ ] libgff; - Headers & library: https://ftp-master.debian.org/new/libgff_1.0-1.html; - [ ] staden IOLib; - Headers & library: https://packages.debian.org/sid/amd64/libstaden-read-dev/filelist. I also have a patch to support the latest release of jellyfish that I can turn into a pull request, should you want it: http://anonscm.debian.org/cgit/debian-med/salmon.git/plain/debian/patches/jellyfish-update. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19
https://github.com/COMBINE-lab/salmon/issues/19:1502,Deployability,patch,patch,1502,"Hello!. I'm packaging salmon and many of its dependencies for Debian in support of https://github.com/Blahah/transrate/issues/160. I have a messy patch to enable the use of external libraries instead of bundled or downloaded copies at http://anonscm.debian.org/cgit/debian-med/salmon.git/plain/debian/patches/dependency-fix. As I'm not a CMake expert I was only able to make it work for Debian instead of a generic solution that would fall back to the shipped copies or downloading as it is now. Perhaps you all are better with CMake than I am? A generic solution would be best so I don't have to adjust the patch with every change to the CMakeLists.txt. Specifically it would be great to support; - [ ] external copy of spdlog headers and the cereal serialization headers; - linking to external dynamic libraries for; - [ ] boost; - Headers: https://packages.debian.org/sid/amd64/libboost1.58-dev/filelist; - Sample library layout: https://packages.debian.org/sid/amd64/libboost-filesystem1.58-dev/filelist; - [ ] bwa; - Headers & library: https://ftp-master.debian.org/new/bwa_0.7.12-5.html; - [ ] jellyfish; - Headers & library: https://packages.debian.org/sid/amd64/libjellyfish-2.0-dev/filelist; - [ ] tbb; - Headers & library: https://packages.debian.org/sid/amd64/libtbb-dev/filelist; - [ ] libgff; - Headers & library: https://ftp-master.debian.org/new/libgff_1.0-1.html; - [ ] staden IOLib; - Headers & library: https://packages.debian.org/sid/amd64/libstaden-read-dev/filelist. I also have a patch to support the latest release of jellyfish that I can turn into a pull request, should you want it: http://anonscm.debian.org/cgit/debian-med/salmon.git/plain/debian/patches/jellyfish-update. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19
https://github.com/COMBINE-lab/salmon/issues/19:1530,Deployability,release,release,1530,"Hello!. I'm packaging salmon and many of its dependencies for Debian in support of https://github.com/Blahah/transrate/issues/160. I have a messy patch to enable the use of external libraries instead of bundled or downloaded copies at http://anonscm.debian.org/cgit/debian-med/salmon.git/plain/debian/patches/dependency-fix. As I'm not a CMake expert I was only able to make it work for Debian instead of a generic solution that would fall back to the shipped copies or downloading as it is now. Perhaps you all are better with CMake than I am? A generic solution would be best so I don't have to adjust the patch with every change to the CMakeLists.txt. Specifically it would be great to support; - [ ] external copy of spdlog headers and the cereal serialization headers; - linking to external dynamic libraries for; - [ ] boost; - Headers: https://packages.debian.org/sid/amd64/libboost1.58-dev/filelist; - Sample library layout: https://packages.debian.org/sid/amd64/libboost-filesystem1.58-dev/filelist; - [ ] bwa; - Headers & library: https://ftp-master.debian.org/new/bwa_0.7.12-5.html; - [ ] jellyfish; - Headers & library: https://packages.debian.org/sid/amd64/libjellyfish-2.0-dev/filelist; - [ ] tbb; - Headers & library: https://packages.debian.org/sid/amd64/libtbb-dev/filelist; - [ ] libgff; - Headers & library: https://ftp-master.debian.org/new/libgff_1.0-1.html; - [ ] staden IOLib; - Headers & library: https://packages.debian.org/sid/amd64/libstaden-read-dev/filelist. I also have a patch to support the latest release of jellyfish that I can turn into a pull request, should you want it: http://anonscm.debian.org/cgit/debian-med/salmon.git/plain/debian/patches/jellyfish-update. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19
https://github.com/COMBINE-lab/salmon/issues/19:1674,Deployability,patch,patches,1674,"Hello!. I'm packaging salmon and many of its dependencies for Debian in support of https://github.com/Blahah/transrate/issues/160. I have a messy patch to enable the use of external libraries instead of bundled or downloaded copies at http://anonscm.debian.org/cgit/debian-med/salmon.git/plain/debian/patches/dependency-fix. As I'm not a CMake expert I was only able to make it work for Debian instead of a generic solution that would fall back to the shipped copies or downloading as it is now. Perhaps you all are better with CMake than I am? A generic solution would be best so I don't have to adjust the patch with every change to the CMakeLists.txt. Specifically it would be great to support; - [ ] external copy of spdlog headers and the cereal serialization headers; - linking to external dynamic libraries for; - [ ] boost; - Headers: https://packages.debian.org/sid/amd64/libboost1.58-dev/filelist; - Sample library layout: https://packages.debian.org/sid/amd64/libboost-filesystem1.58-dev/filelist; - [ ] bwa; - Headers & library: https://ftp-master.debian.org/new/bwa_0.7.12-5.html; - [ ] jellyfish; - Headers & library: https://packages.debian.org/sid/amd64/libjellyfish-2.0-dev/filelist; - [ ] tbb; - Headers & library: https://packages.debian.org/sid/amd64/libtbb-dev/filelist; - [ ] libgff; - Headers & library: https://ftp-master.debian.org/new/libgff_1.0-1.html; - [ ] staden IOLib; - Headers & library: https://packages.debian.org/sid/amd64/libstaden-read-dev/filelist. I also have a patch to support the latest release of jellyfish that I can turn into a pull request, should you want it: http://anonscm.debian.org/cgit/debian-med/salmon.git/plain/debian/patches/jellyfish-update. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19
https://github.com/COMBINE-lab/salmon/issues/19:1692,Deployability,update,update,1692,"Hello!. I'm packaging salmon and many of its dependencies for Debian in support of https://github.com/Blahah/transrate/issues/160. I have a messy patch to enable the use of external libraries instead of bundled or downloaded copies at http://anonscm.debian.org/cgit/debian-med/salmon.git/plain/debian/patches/dependency-fix. As I'm not a CMake expert I was only able to make it work for Debian instead of a generic solution that would fall back to the shipped copies or downloading as it is now. Perhaps you all are better with CMake than I am? A generic solution would be best so I don't have to adjust the patch with every change to the CMakeLists.txt. Specifically it would be great to support; - [ ] external copy of spdlog headers and the cereal serialization headers; - linking to external dynamic libraries for; - [ ] boost; - Headers: https://packages.debian.org/sid/amd64/libboost1.58-dev/filelist; - Sample library layout: https://packages.debian.org/sid/amd64/libboost-filesystem1.58-dev/filelist; - [ ] bwa; - Headers & library: https://ftp-master.debian.org/new/bwa_0.7.12-5.html; - [ ] jellyfish; - Headers & library: https://packages.debian.org/sid/amd64/libjellyfish-2.0-dev/filelist; - [ ] tbb; - Headers & library: https://packages.debian.org/sid/amd64/libtbb-dev/filelist; - [ ] libgff; - Headers & library: https://ftp-master.debian.org/new/libgff_1.0-1.html; - [ ] staden IOLib; - Headers & library: https://packages.debian.org/sid/amd64/libstaden-read-dev/filelist. I also have a patch to support the latest release of jellyfish that I can turn into a pull request, should you want it: http://anonscm.debian.org/cgit/debian-med/salmon.git/plain/debian/patches/jellyfish-update. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19
https://github.com/COMBINE-lab/salmon/issues/19:45,Integrability,depend,dependencies,45,"Hello!. I'm packaging salmon and many of its dependencies for Debian in support of https://github.com/Blahah/transrate/issues/160. I have a messy patch to enable the use of external libraries instead of bundled or downloaded copies at http://anonscm.debian.org/cgit/debian-med/salmon.git/plain/debian/patches/dependency-fix. As I'm not a CMake expert I was only able to make it work for Debian instead of a generic solution that would fall back to the shipped copies or downloading as it is now. Perhaps you all are better with CMake than I am? A generic solution would be best so I don't have to adjust the patch with every change to the CMakeLists.txt. Specifically it would be great to support; - [ ] external copy of spdlog headers and the cereal serialization headers; - linking to external dynamic libraries for; - [ ] boost; - Headers: https://packages.debian.org/sid/amd64/libboost1.58-dev/filelist; - Sample library layout: https://packages.debian.org/sid/amd64/libboost-filesystem1.58-dev/filelist; - [ ] bwa; - Headers & library: https://ftp-master.debian.org/new/bwa_0.7.12-5.html; - [ ] jellyfish; - Headers & library: https://packages.debian.org/sid/amd64/libjellyfish-2.0-dev/filelist; - [ ] tbb; - Headers & library: https://packages.debian.org/sid/amd64/libtbb-dev/filelist; - [ ] libgff; - Headers & library: https://ftp-master.debian.org/new/libgff_1.0-1.html; - [ ] staden IOLib; - Headers & library: https://packages.debian.org/sid/amd64/libstaden-read-dev/filelist. I also have a patch to support the latest release of jellyfish that I can turn into a pull request, should you want it: http://anonscm.debian.org/cgit/debian-med/salmon.git/plain/debian/patches/jellyfish-update. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19
https://github.com/COMBINE-lab/salmon/issues/19:309,Integrability,depend,dependency-fix,309,"Hello!. I'm packaging salmon and many of its dependencies for Debian in support of https://github.com/Blahah/transrate/issues/160. I have a messy patch to enable the use of external libraries instead of bundled or downloaded copies at http://anonscm.debian.org/cgit/debian-med/salmon.git/plain/debian/patches/dependency-fix. As I'm not a CMake expert I was only able to make it work for Debian instead of a generic solution that would fall back to the shipped copies or downloading as it is now. Perhaps you all are better with CMake than I am? A generic solution would be best so I don't have to adjust the patch with every change to the CMakeLists.txt. Specifically it would be great to support; - [ ] external copy of spdlog headers and the cereal serialization headers; - linking to external dynamic libraries for; - [ ] boost; - Headers: https://packages.debian.org/sid/amd64/libboost1.58-dev/filelist; - Sample library layout: https://packages.debian.org/sid/amd64/libboost-filesystem1.58-dev/filelist; - [ ] bwa; - Headers & library: https://ftp-master.debian.org/new/bwa_0.7.12-5.html; - [ ] jellyfish; - Headers & library: https://packages.debian.org/sid/amd64/libjellyfish-2.0-dev/filelist; - [ ] tbb; - Headers & library: https://packages.debian.org/sid/amd64/libtbb-dev/filelist; - [ ] libgff; - Headers & library: https://ftp-master.debian.org/new/libgff_1.0-1.html; - [ ] staden IOLib; - Headers & library: https://packages.debian.org/sid/amd64/libstaden-read-dev/filelist. I also have a patch to support the latest release of jellyfish that I can turn into a pull request, should you want it: http://anonscm.debian.org/cgit/debian-med/salmon.git/plain/debian/patches/jellyfish-update. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19
https://github.com/COMBINE-lab/salmon/issues/20:1180,Availability,Error,Error,1180,"al/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss && make ""CXXFLAGS= -UDO_ITT_NOTIFY"" lambdas=1 compiler=gcc cfg=release tbb_build_prefix=LIBS; make[3]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss'; Created ./build/LIBS_release and ..._debug directories; make -C ""./build/LIBS_debug"" -r -f ../../build/Makefile.tbb cfg=debug; make[4]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss/build/LIBS_debug'; ../../build/Makefile.tbb:31: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc4.8_libc2.15_kernel4.0.9; g++ -o x86_rtm_rw_mutex.o -c -MMD -DTBB_USE_DEBUG -DDO_ITT_NOTIFY -g -O0 -DUSE_PTHREAD -m64 -mrtm -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -UDO_ITT_NOTIFY -std=c++0x -D_TBB_CPP0X -I../../src -I../../src/rml/include -I../../include ../../src/tbb/x86_rtm_rw_mutex.cpp; /tmp/ccgalJzL.s: Assembler messages:; /tmp/ccgalJzL.s:628: Error: no such instruction: `xtest'; /tmp/ccgalJzL.s:656: Error: no such instruction: `xabort $255'; /tmp/ccgalJzL.s:665: Error: no such instruction: `xabort $255'; /tmp/ccgalJzL.s:671: Error: no such instruction: `xend'; /tmp/ccgalJzL.s:840: Error: no such instruction: `xbegin .L56'; /tmp/ccgalJzL.s:1012: Error: no such instruction: `xbegin .L73'; /tmp/ccgalJzL.s:1269: Error: no such instruction: `xabort $255'; make[4]: *** [x86_rtm_rw_mutex.o] Error 1; make[4]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss/build/LIBS_debug'; make[3]: *** [tbb] Error 2; make[3]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss'; make[2]: *** [libtbb-prefix/src/libtbb-stamp/libtbb-build] Error 2; make[2]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make[1]: *** [CMakeFiles/libtbb.dir/all] Error 2; make[1]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make: *** [all] Error 2; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/20
https://github.com/COMBINE-lab/salmon/issues/20:1238,Availability,Error,Error,1238,"al/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss && make ""CXXFLAGS= -UDO_ITT_NOTIFY"" lambdas=1 compiler=gcc cfg=release tbb_build_prefix=LIBS; make[3]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss'; Created ./build/LIBS_release and ..._debug directories; make -C ""./build/LIBS_debug"" -r -f ../../build/Makefile.tbb cfg=debug; make[4]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss/build/LIBS_debug'; ../../build/Makefile.tbb:31: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc4.8_libc2.15_kernel4.0.9; g++ -o x86_rtm_rw_mutex.o -c -MMD -DTBB_USE_DEBUG -DDO_ITT_NOTIFY -g -O0 -DUSE_PTHREAD -m64 -mrtm -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -UDO_ITT_NOTIFY -std=c++0x -D_TBB_CPP0X -I../../src -I../../src/rml/include -I../../include ../../src/tbb/x86_rtm_rw_mutex.cpp; /tmp/ccgalJzL.s: Assembler messages:; /tmp/ccgalJzL.s:628: Error: no such instruction: `xtest'; /tmp/ccgalJzL.s:656: Error: no such instruction: `xabort $255'; /tmp/ccgalJzL.s:665: Error: no such instruction: `xabort $255'; /tmp/ccgalJzL.s:671: Error: no such instruction: `xend'; /tmp/ccgalJzL.s:840: Error: no such instruction: `xbegin .L56'; /tmp/ccgalJzL.s:1012: Error: no such instruction: `xbegin .L73'; /tmp/ccgalJzL.s:1269: Error: no such instruction: `xabort $255'; make[4]: *** [x86_rtm_rw_mutex.o] Error 1; make[4]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss/build/LIBS_debug'; make[3]: *** [tbb] Error 2; make[3]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss'; make[2]: *** [libtbb-prefix/src/libtbb-stamp/libtbb-build] Error 2; make[2]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make[1]: *** [CMakeFiles/libtbb.dir/all] Error 2; make[1]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make: *** [all] Error 2; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/20
https://github.com/COMBINE-lab/salmon/issues/20:1302,Availability,Error,Error,1302,"al/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss && make ""CXXFLAGS= -UDO_ITT_NOTIFY"" lambdas=1 compiler=gcc cfg=release tbb_build_prefix=LIBS; make[3]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss'; Created ./build/LIBS_release and ..._debug directories; make -C ""./build/LIBS_debug"" -r -f ../../build/Makefile.tbb cfg=debug; make[4]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss/build/LIBS_debug'; ../../build/Makefile.tbb:31: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc4.8_libc2.15_kernel4.0.9; g++ -o x86_rtm_rw_mutex.o -c -MMD -DTBB_USE_DEBUG -DDO_ITT_NOTIFY -g -O0 -DUSE_PTHREAD -m64 -mrtm -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -UDO_ITT_NOTIFY -std=c++0x -D_TBB_CPP0X -I../../src -I../../src/rml/include -I../../include ../../src/tbb/x86_rtm_rw_mutex.cpp; /tmp/ccgalJzL.s: Assembler messages:; /tmp/ccgalJzL.s:628: Error: no such instruction: `xtest'; /tmp/ccgalJzL.s:656: Error: no such instruction: `xabort $255'; /tmp/ccgalJzL.s:665: Error: no such instruction: `xabort $255'; /tmp/ccgalJzL.s:671: Error: no such instruction: `xend'; /tmp/ccgalJzL.s:840: Error: no such instruction: `xbegin .L56'; /tmp/ccgalJzL.s:1012: Error: no such instruction: `xbegin .L73'; /tmp/ccgalJzL.s:1269: Error: no such instruction: `xabort $255'; make[4]: *** [x86_rtm_rw_mutex.o] Error 1; make[4]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss/build/LIBS_debug'; make[3]: *** [tbb] Error 2; make[3]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss'; make[2]: *** [libtbb-prefix/src/libtbb-stamp/libtbb-build] Error 2; make[2]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make[1]: *** [CMakeFiles/libtbb.dir/all] Error 2; make[1]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make: *** [all] Error 2; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/20
https://github.com/COMBINE-lab/salmon/issues/20:1366,Availability,Error,Error,1366,"al/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss && make ""CXXFLAGS= -UDO_ITT_NOTIFY"" lambdas=1 compiler=gcc cfg=release tbb_build_prefix=LIBS; make[3]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss'; Created ./build/LIBS_release and ..._debug directories; make -C ""./build/LIBS_debug"" -r -f ../../build/Makefile.tbb cfg=debug; make[4]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss/build/LIBS_debug'; ../../build/Makefile.tbb:31: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc4.8_libc2.15_kernel4.0.9; g++ -o x86_rtm_rw_mutex.o -c -MMD -DTBB_USE_DEBUG -DDO_ITT_NOTIFY -g -O0 -DUSE_PTHREAD -m64 -mrtm -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -UDO_ITT_NOTIFY -std=c++0x -D_TBB_CPP0X -I../../src -I../../src/rml/include -I../../include ../../src/tbb/x86_rtm_rw_mutex.cpp; /tmp/ccgalJzL.s: Assembler messages:; /tmp/ccgalJzL.s:628: Error: no such instruction: `xtest'; /tmp/ccgalJzL.s:656: Error: no such instruction: `xabort $255'; /tmp/ccgalJzL.s:665: Error: no such instruction: `xabort $255'; /tmp/ccgalJzL.s:671: Error: no such instruction: `xend'; /tmp/ccgalJzL.s:840: Error: no such instruction: `xbegin .L56'; /tmp/ccgalJzL.s:1012: Error: no such instruction: `xbegin .L73'; /tmp/ccgalJzL.s:1269: Error: no such instruction: `xabort $255'; make[4]: *** [x86_rtm_rw_mutex.o] Error 1; make[4]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss/build/LIBS_debug'; make[3]: *** [tbb] Error 2; make[3]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss'; make[2]: *** [libtbb-prefix/src/libtbb-stamp/libtbb-build] Error 2; make[2]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make[1]: *** [CMakeFiles/libtbb.dir/all] Error 2; make[1]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make: *** [all] Error 2; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/20
https://github.com/COMBINE-lab/salmon/issues/20:1423,Availability,Error,Error,1423,"al/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss && make ""CXXFLAGS= -UDO_ITT_NOTIFY"" lambdas=1 compiler=gcc cfg=release tbb_build_prefix=LIBS; make[3]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss'; Created ./build/LIBS_release and ..._debug directories; make -C ""./build/LIBS_debug"" -r -f ../../build/Makefile.tbb cfg=debug; make[4]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss/build/LIBS_debug'; ../../build/Makefile.tbb:31: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc4.8_libc2.15_kernel4.0.9; g++ -o x86_rtm_rw_mutex.o -c -MMD -DTBB_USE_DEBUG -DDO_ITT_NOTIFY -g -O0 -DUSE_PTHREAD -m64 -mrtm -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -UDO_ITT_NOTIFY -std=c++0x -D_TBB_CPP0X -I../../src -I../../src/rml/include -I../../include ../../src/tbb/x86_rtm_rw_mutex.cpp; /tmp/ccgalJzL.s: Assembler messages:; /tmp/ccgalJzL.s:628: Error: no such instruction: `xtest'; /tmp/ccgalJzL.s:656: Error: no such instruction: `xabort $255'; /tmp/ccgalJzL.s:665: Error: no such instruction: `xabort $255'; /tmp/ccgalJzL.s:671: Error: no such instruction: `xend'; /tmp/ccgalJzL.s:840: Error: no such instruction: `xbegin .L56'; /tmp/ccgalJzL.s:1012: Error: no such instruction: `xbegin .L73'; /tmp/ccgalJzL.s:1269: Error: no such instruction: `xabort $255'; make[4]: *** [x86_rtm_rw_mutex.o] Error 1; make[4]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss/build/LIBS_debug'; make[3]: *** [tbb] Error 2; make[3]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss'; make[2]: *** [libtbb-prefix/src/libtbb-stamp/libtbb-build] Error 2; make[2]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make[1]: *** [CMakeFiles/libtbb.dir/all] Error 2; make[1]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make: *** [all] Error 2; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/20
https://github.com/COMBINE-lab/salmon/issues/20:1488,Availability,Error,Error,1488,"al/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss && make ""CXXFLAGS= -UDO_ITT_NOTIFY"" lambdas=1 compiler=gcc cfg=release tbb_build_prefix=LIBS; make[3]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss'; Created ./build/LIBS_release and ..._debug directories; make -C ""./build/LIBS_debug"" -r -f ../../build/Makefile.tbb cfg=debug; make[4]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss/build/LIBS_debug'; ../../build/Makefile.tbb:31: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc4.8_libc2.15_kernel4.0.9; g++ -o x86_rtm_rw_mutex.o -c -MMD -DTBB_USE_DEBUG -DDO_ITT_NOTIFY -g -O0 -DUSE_PTHREAD -m64 -mrtm -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -UDO_ITT_NOTIFY -std=c++0x -D_TBB_CPP0X -I../../src -I../../src/rml/include -I../../include ../../src/tbb/x86_rtm_rw_mutex.cpp; /tmp/ccgalJzL.s: Assembler messages:; /tmp/ccgalJzL.s:628: Error: no such instruction: `xtest'; /tmp/ccgalJzL.s:656: Error: no such instruction: `xabort $255'; /tmp/ccgalJzL.s:665: Error: no such instruction: `xabort $255'; /tmp/ccgalJzL.s:671: Error: no such instruction: `xend'; /tmp/ccgalJzL.s:840: Error: no such instruction: `xbegin .L56'; /tmp/ccgalJzL.s:1012: Error: no such instruction: `xbegin .L73'; /tmp/ccgalJzL.s:1269: Error: no such instruction: `xabort $255'; make[4]: *** [x86_rtm_rw_mutex.o] Error 1; make[4]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss/build/LIBS_debug'; make[3]: *** [tbb] Error 2; make[3]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss'; make[2]: *** [libtbb-prefix/src/libtbb-stamp/libtbb-build] Error 2; make[2]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make[1]: *** [CMakeFiles/libtbb.dir/all] Error 2; make[1]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make: *** [all] Error 2; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/20
https://github.com/COMBINE-lab/salmon/issues/20:1553,Availability,Error,Error,1553,"al/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss && make ""CXXFLAGS= -UDO_ITT_NOTIFY"" lambdas=1 compiler=gcc cfg=release tbb_build_prefix=LIBS; make[3]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss'; Created ./build/LIBS_release and ..._debug directories; make -C ""./build/LIBS_debug"" -r -f ../../build/Makefile.tbb cfg=debug; make[4]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss/build/LIBS_debug'; ../../build/Makefile.tbb:31: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc4.8_libc2.15_kernel4.0.9; g++ -o x86_rtm_rw_mutex.o -c -MMD -DTBB_USE_DEBUG -DDO_ITT_NOTIFY -g -O0 -DUSE_PTHREAD -m64 -mrtm -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -UDO_ITT_NOTIFY -std=c++0x -D_TBB_CPP0X -I../../src -I../../src/rml/include -I../../include ../../src/tbb/x86_rtm_rw_mutex.cpp; /tmp/ccgalJzL.s: Assembler messages:; /tmp/ccgalJzL.s:628: Error: no such instruction: `xtest'; /tmp/ccgalJzL.s:656: Error: no such instruction: `xabort $255'; /tmp/ccgalJzL.s:665: Error: no such instruction: `xabort $255'; /tmp/ccgalJzL.s:671: Error: no such instruction: `xend'; /tmp/ccgalJzL.s:840: Error: no such instruction: `xbegin .L56'; /tmp/ccgalJzL.s:1012: Error: no such instruction: `xbegin .L73'; /tmp/ccgalJzL.s:1269: Error: no such instruction: `xabort $255'; make[4]: *** [x86_rtm_rw_mutex.o] Error 1; make[4]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss/build/LIBS_debug'; make[3]: *** [tbb] Error 2; make[3]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss'; make[2]: *** [libtbb-prefix/src/libtbb-stamp/libtbb-build] Error 2; make[2]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make[1]: *** [CMakeFiles/libtbb.dir/all] Error 2; make[1]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make: *** [all] Error 2; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/20
https://github.com/COMBINE-lab/salmon/issues/20:1630,Availability,Error,Error,1630,"al/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss && make ""CXXFLAGS= -UDO_ITT_NOTIFY"" lambdas=1 compiler=gcc cfg=release tbb_build_prefix=LIBS; make[3]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss'; Created ./build/LIBS_release and ..._debug directories; make -C ""./build/LIBS_debug"" -r -f ../../build/Makefile.tbb cfg=debug; make[4]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss/build/LIBS_debug'; ../../build/Makefile.tbb:31: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc4.8_libc2.15_kernel4.0.9; g++ -o x86_rtm_rw_mutex.o -c -MMD -DTBB_USE_DEBUG -DDO_ITT_NOTIFY -g -O0 -DUSE_PTHREAD -m64 -mrtm -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -UDO_ITT_NOTIFY -std=c++0x -D_TBB_CPP0X -I../../src -I../../src/rml/include -I../../include ../../src/tbb/x86_rtm_rw_mutex.cpp; /tmp/ccgalJzL.s: Assembler messages:; /tmp/ccgalJzL.s:628: Error: no such instruction: `xtest'; /tmp/ccgalJzL.s:656: Error: no such instruction: `xabort $255'; /tmp/ccgalJzL.s:665: Error: no such instruction: `xabort $255'; /tmp/ccgalJzL.s:671: Error: no such instruction: `xend'; /tmp/ccgalJzL.s:840: Error: no such instruction: `xbegin .L56'; /tmp/ccgalJzL.s:1012: Error: no such instruction: `xbegin .L73'; /tmp/ccgalJzL.s:1269: Error: no such instruction: `xabort $255'; make[4]: *** [x86_rtm_rw_mutex.o] Error 1; make[4]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss/build/LIBS_debug'; make[3]: *** [tbb] Error 2; make[3]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss'; make[2]: *** [libtbb-prefix/src/libtbb-stamp/libtbb-build] Error 2; make[2]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make[1]: *** [CMakeFiles/libtbb.dir/all] Error 2; make[1]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make: *** [all] Error 2; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/20
https://github.com/COMBINE-lab/salmon/issues/20:1779,Availability,Error,Error,1779,"al/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss && make ""CXXFLAGS= -UDO_ITT_NOTIFY"" lambdas=1 compiler=gcc cfg=release tbb_build_prefix=LIBS; make[3]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss'; Created ./build/LIBS_release and ..._debug directories; make -C ""./build/LIBS_debug"" -r -f ../../build/Makefile.tbb cfg=debug; make[4]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss/build/LIBS_debug'; ../../build/Makefile.tbb:31: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc4.8_libc2.15_kernel4.0.9; g++ -o x86_rtm_rw_mutex.o -c -MMD -DTBB_USE_DEBUG -DDO_ITT_NOTIFY -g -O0 -DUSE_PTHREAD -m64 -mrtm -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -UDO_ITT_NOTIFY -std=c++0x -D_TBB_CPP0X -I../../src -I../../src/rml/include -I../../include ../../src/tbb/x86_rtm_rw_mutex.cpp; /tmp/ccgalJzL.s: Assembler messages:; /tmp/ccgalJzL.s:628: Error: no such instruction: `xtest'; /tmp/ccgalJzL.s:656: Error: no such instruction: `xabort $255'; /tmp/ccgalJzL.s:665: Error: no such instruction: `xabort $255'; /tmp/ccgalJzL.s:671: Error: no such instruction: `xend'; /tmp/ccgalJzL.s:840: Error: no such instruction: `xbegin .L56'; /tmp/ccgalJzL.s:1012: Error: no such instruction: `xbegin .L73'; /tmp/ccgalJzL.s:1269: Error: no such instruction: `xabort $255'; make[4]: *** [x86_rtm_rw_mutex.o] Error 1; make[4]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss/build/LIBS_debug'; make[3]: *** [tbb] Error 2; make[3]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss'; make[2]: *** [libtbb-prefix/src/libtbb-stamp/libtbb-build] Error 2; make[2]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make[1]: *** [CMakeFiles/libtbb.dir/all] Error 2; make[1]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make: *** [all] Error 2; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/20
https://github.com/COMBINE-lab/salmon/issues/20:1951,Availability,Error,Error,1951,"al/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss && make ""CXXFLAGS= -UDO_ITT_NOTIFY"" lambdas=1 compiler=gcc cfg=release tbb_build_prefix=LIBS; make[3]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss'; Created ./build/LIBS_release and ..._debug directories; make -C ""./build/LIBS_debug"" -r -f ../../build/Makefile.tbb cfg=debug; make[4]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss/build/LIBS_debug'; ../../build/Makefile.tbb:31: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc4.8_libc2.15_kernel4.0.9; g++ -o x86_rtm_rw_mutex.o -c -MMD -DTBB_USE_DEBUG -DDO_ITT_NOTIFY -g -O0 -DUSE_PTHREAD -m64 -mrtm -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -UDO_ITT_NOTIFY -std=c++0x -D_TBB_CPP0X -I../../src -I../../src/rml/include -I../../include ../../src/tbb/x86_rtm_rw_mutex.cpp; /tmp/ccgalJzL.s: Assembler messages:; /tmp/ccgalJzL.s:628: Error: no such instruction: `xtest'; /tmp/ccgalJzL.s:656: Error: no such instruction: `xabort $255'; /tmp/ccgalJzL.s:665: Error: no such instruction: `xabort $255'; /tmp/ccgalJzL.s:671: Error: no such instruction: `xend'; /tmp/ccgalJzL.s:840: Error: no such instruction: `xbegin .L56'; /tmp/ccgalJzL.s:1012: Error: no such instruction: `xbegin .L73'; /tmp/ccgalJzL.s:1269: Error: no such instruction: `xabort $255'; make[4]: *** [x86_rtm_rw_mutex.o] Error 1; make[4]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss/build/LIBS_debug'; make[3]: *** [tbb] Error 2; make[3]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss'; make[2]: *** [libtbb-prefix/src/libtbb-stamp/libtbb-build] Error 2; make[2]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make[1]: *** [CMakeFiles/libtbb.dir/all] Error 2; make[1]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make: *** [all] Error 2; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/20
https://github.com/COMBINE-lab/salmon/issues/20:2078,Availability,Error,Error,2078,"al/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss && make ""CXXFLAGS= -UDO_ITT_NOTIFY"" lambdas=1 compiler=gcc cfg=release tbb_build_prefix=LIBS; make[3]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss'; Created ./build/LIBS_release and ..._debug directories; make -C ""./build/LIBS_debug"" -r -f ../../build/Makefile.tbb cfg=debug; make[4]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss/build/LIBS_debug'; ../../build/Makefile.tbb:31: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc4.8_libc2.15_kernel4.0.9; g++ -o x86_rtm_rw_mutex.o -c -MMD -DTBB_USE_DEBUG -DDO_ITT_NOTIFY -g -O0 -DUSE_PTHREAD -m64 -mrtm -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -UDO_ITT_NOTIFY -std=c++0x -D_TBB_CPP0X -I../../src -I../../src/rml/include -I../../include ../../src/tbb/x86_rtm_rw_mutex.cpp; /tmp/ccgalJzL.s: Assembler messages:; /tmp/ccgalJzL.s:628: Error: no such instruction: `xtest'; /tmp/ccgalJzL.s:656: Error: no such instruction: `xabort $255'; /tmp/ccgalJzL.s:665: Error: no such instruction: `xabort $255'; /tmp/ccgalJzL.s:671: Error: no such instruction: `xend'; /tmp/ccgalJzL.s:840: Error: no such instruction: `xbegin .L56'; /tmp/ccgalJzL.s:1012: Error: no such instruction: `xbegin .L73'; /tmp/ccgalJzL.s:1269: Error: no such instruction: `xabort $255'; make[4]: *** [x86_rtm_rw_mutex.o] Error 1; make[4]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss/build/LIBS_debug'; make[3]: *** [tbb] Error 2; make[3]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss'; make[2]: *** [libtbb-prefix/src/libtbb-stamp/libtbb-build] Error 2; make[2]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make[1]: *** [CMakeFiles/libtbb.dir/all] Error 2; make[1]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make: *** [all] Error 2; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/20
https://github.com/COMBINE-lab/salmon/issues/20:2180,Availability,Error,Error,2180,"al/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss && make ""CXXFLAGS= -UDO_ITT_NOTIFY"" lambdas=1 compiler=gcc cfg=release tbb_build_prefix=LIBS; make[3]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss'; Created ./build/LIBS_release and ..._debug directories; make -C ""./build/LIBS_debug"" -r -f ../../build/Makefile.tbb cfg=debug; make[4]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss/build/LIBS_debug'; ../../build/Makefile.tbb:31: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc4.8_libc2.15_kernel4.0.9; g++ -o x86_rtm_rw_mutex.o -c -MMD -DTBB_USE_DEBUG -DDO_ITT_NOTIFY -g -O0 -DUSE_PTHREAD -m64 -mrtm -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -UDO_ITT_NOTIFY -std=c++0x -D_TBB_CPP0X -I../../src -I../../src/rml/include -I../../include ../../src/tbb/x86_rtm_rw_mutex.cpp; /tmp/ccgalJzL.s: Assembler messages:; /tmp/ccgalJzL.s:628: Error: no such instruction: `xtest'; /tmp/ccgalJzL.s:656: Error: no such instruction: `xabort $255'; /tmp/ccgalJzL.s:665: Error: no such instruction: `xabort $255'; /tmp/ccgalJzL.s:671: Error: no such instruction: `xend'; /tmp/ccgalJzL.s:840: Error: no such instruction: `xbegin .L56'; /tmp/ccgalJzL.s:1012: Error: no such instruction: `xbegin .L73'; /tmp/ccgalJzL.s:1269: Error: no such instruction: `xabort $255'; make[4]: *** [x86_rtm_rw_mutex.o] Error 1; make[4]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss/build/LIBS_debug'; make[3]: *** [tbb] Error 2; make[3]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss'; make[2]: *** [libtbb-prefix/src/libtbb-stamp/libtbb-build] Error 2; make[2]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make[1]: *** [CMakeFiles/libtbb.dir/all] Error 2; make[1]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make: *** [all] Error 2; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/20
https://github.com/COMBINE-lab/salmon/issues/20:321,Deployability,release,release,321,"Hi,. I am getting the following when building Salmon (gcc/g++ 4.8.2, and boost from `-DFETCH_BOOST=TRUE` when calling cmake). ```; (...); [ 64%] Performing build step for 'libtbb'; cd /opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss && make ""CXXFLAGS= -UDO_ITT_NOTIFY"" lambdas=1 compiler=gcc cfg=release tbb_build_prefix=LIBS; make[3]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss'; Created ./build/LIBS_release and ..._debug directories; make -C ""./build/LIBS_debug"" -r -f ../../build/Makefile.tbb cfg=debug; make[4]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss/build/LIBS_debug'; ../../build/Makefile.tbb:31: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc4.8_libc2.15_kernel4.0.9; g++ -o x86_rtm_rw_mutex.o -c -MMD -DTBB_USE_DEBUG -DDO_ITT_NOTIFY -g -O0 -DUSE_PTHREAD -m64 -mrtm -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -UDO_ITT_NOTIFY -std=c++0x -D_TBB_CPP0X -I../../src -I../../src/rml/include -I../../include ../../src/tbb/x86_rtm_rw_mutex.cpp; /tmp/ccgalJzL.s: Assembler messages:; /tmp/ccgalJzL.s:628: Error: no such instruction: `xtest'; /tmp/ccgalJzL.s:656: Error: no such instruction: `xabort $255'; /tmp/ccgalJzL.s:665: Error: no such instruction: `xabort $255'; /tmp/ccgalJzL.s:671: Error: no such instruction: `xend'; /tmp/ccgalJzL.s:840: Error: no such instruction: `xbegin .L56'; /tmp/ccgalJzL.s:1012: Error: no such instruction: `xbegin .L73'; /tmp/ccgalJzL.s:1269: Error: no such instruction: `xabort $255'; make[4]: *** [x86_rtm_rw_mutex.o] Error 1; make[4]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss/build/LIBS_debug'; make[3]: *** [tbb] Error 2; make[3]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss'; make[2]: *** [libtbb-prefix/src/libtbb-stamp/libtbb-build] Error 2; make[2]: Leaving directory `/opt/local/sa",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/20
https://github.com/COMBINE-lab/salmon/issues/20:1148,Integrability,message,messages,1148,"g build step for 'libtbb'; cd /opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss && make ""CXXFLAGS= -UDO_ITT_NOTIFY"" lambdas=1 compiler=gcc cfg=release tbb_build_prefix=LIBS; make[3]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss'; Created ./build/LIBS_release and ..._debug directories; make -C ""./build/LIBS_debug"" -r -f ../../build/Makefile.tbb cfg=debug; make[4]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss/build/LIBS_debug'; ../../build/Makefile.tbb:31: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc4.8_libc2.15_kernel4.0.9; g++ -o x86_rtm_rw_mutex.o -c -MMD -DTBB_USE_DEBUG -DDO_ITT_NOTIFY -g -O0 -DUSE_PTHREAD -m64 -mrtm -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -UDO_ITT_NOTIFY -std=c++0x -D_TBB_CPP0X -I../../src -I../../src/rml/include -I../../include ../../src/tbb/x86_rtm_rw_mutex.cpp; /tmp/ccgalJzL.s: Assembler messages:; /tmp/ccgalJzL.s:628: Error: no such instruction: `xtest'; /tmp/ccgalJzL.s:656: Error: no such instruction: `xabort $255'; /tmp/ccgalJzL.s:665: Error: no such instruction: `xabort $255'; /tmp/ccgalJzL.s:671: Error: no such instruction: `xend'; /tmp/ccgalJzL.s:840: Error: no such instruction: `xbegin .L56'; /tmp/ccgalJzL.s:1012: Error: no such instruction: `xbegin .L73'; /tmp/ccgalJzL.s:1269: Error: no such instruction: `xabort $255'; make[4]: *** [x86_rtm_rw_mutex.o] Error 1; make[4]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss/build/LIBS_debug'; make[3]: *** [tbb] Error 2; make[3]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss'; make[2]: *** [libtbb-prefix/src/libtbb-stamp/libtbb-build] Error 2; make[2]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make[1]: *** [CMakeFiles/libtbb.dir/all] Error 2; make[1]: Leaving directory `/opt/local/salmon-index/resources/salmo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/20
https://github.com/COMBINE-lab/salmon/issues/20:735,Modifiability,CONFIG,CONFIG,735,"Hi,. I am getting the following when building Salmon (gcc/g++ 4.8.2, and boost from `-DFETCH_BOOST=TRUE` when calling cmake). ```; (...); [ 64%] Performing build step for 'libtbb'; cd /opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss && make ""CXXFLAGS= -UDO_ITT_NOTIFY"" lambdas=1 compiler=gcc cfg=release tbb_build_prefix=LIBS; make[3]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss'; Created ./build/LIBS_release and ..._debug directories; make -C ""./build/LIBS_debug"" -r -f ../../build/Makefile.tbb cfg=debug; make[4]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss/build/LIBS_debug'; ../../build/Makefile.tbb:31: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc4.8_libc2.15_kernel4.0.9; g++ -o x86_rtm_rw_mutex.o -c -MMD -DTBB_USE_DEBUG -DDO_ITT_NOTIFY -g -O0 -DUSE_PTHREAD -m64 -mrtm -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -UDO_ITT_NOTIFY -std=c++0x -D_TBB_CPP0X -I../../src -I../../src/rml/include -I../../include ../../src/tbb/x86_rtm_rw_mutex.cpp; /tmp/ccgalJzL.s: Assembler messages:; /tmp/ccgalJzL.s:628: Error: no such instruction: `xtest'; /tmp/ccgalJzL.s:656: Error: no such instruction: `xabort $255'; /tmp/ccgalJzL.s:665: Error: no such instruction: `xabort $255'; /tmp/ccgalJzL.s:671: Error: no such instruction: `xend'; /tmp/ccgalJzL.s:840: Error: no such instruction: `xbegin .L56'; /tmp/ccgalJzL.s:1012: Error: no such instruction: `xbegin .L73'; /tmp/ccgalJzL.s:1269: Error: no such instruction: `xabort $255'; make[4]: *** [x86_rtm_rw_mutex.o] Error 1; make[4]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss/build/LIBS_debug'; make[3]: *** [tbb] Error 2; make[3]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss'; make[2]: *** [libtbb-prefix/src/libtbb-stamp/libtbb-build] Error 2; make[2]: Leaving directory `/opt/local/sa",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/20
https://github.com/COMBINE-lab/salmon/issues/20:145,Performance,Perform,Performing,145,"Hi,. I am getting the following when building Salmon (gcc/g++ 4.8.2, and boost from `-DFETCH_BOOST=TRUE` when calling cmake). ```; (...); [ 64%] Performing build step for 'libtbb'; cd /opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss && make ""CXXFLAGS= -UDO_ITT_NOTIFY"" lambdas=1 compiler=gcc cfg=release tbb_build_prefix=LIBS; make[3]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss'; Created ./build/LIBS_release and ..._debug directories; make -C ""./build/LIBS_debug"" -r -f ../../build/Makefile.tbb cfg=debug; make[4]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss/build/LIBS_debug'; ../../build/Makefile.tbb:31: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc4.8_libc2.15_kernel4.0.9; g++ -o x86_rtm_rw_mutex.o -c -MMD -DTBB_USE_DEBUG -DDO_ITT_NOTIFY -g -O0 -DUSE_PTHREAD -m64 -mrtm -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -UDO_ITT_NOTIFY -std=c++0x -D_TBB_CPP0X -I../../src -I../../src/rml/include -I../../include ../../src/tbb/x86_rtm_rw_mutex.cpp; /tmp/ccgalJzL.s: Assembler messages:; /tmp/ccgalJzL.s:628: Error: no such instruction: `xtest'; /tmp/ccgalJzL.s:656: Error: no such instruction: `xabort $255'; /tmp/ccgalJzL.s:665: Error: no such instruction: `xabort $255'; /tmp/ccgalJzL.s:671: Error: no such instruction: `xend'; /tmp/ccgalJzL.s:840: Error: no such instruction: `xbegin .L56'; /tmp/ccgalJzL.s:1012: Error: no such instruction: `xbegin .L73'; /tmp/ccgalJzL.s:1269: Error: no such instruction: `xabort $255'; make[4]: *** [x86_rtm_rw_mutex.o] Error 1; make[4]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss/build/LIBS_debug'; make[3]: *** [tbb] Error 2; make[3]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss'; make[2]: *** [libtbb-prefix/src/libtbb-stamp/libtbb-build] Error 2; make[2]: Leaving directory `/opt/local/sa",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/20
https://github.com/COMBINE-lab/salmon/issues/21:60,Availability,error,error,60,"Hi,. Building salmon with `-DFETCH_BOOST=TRUE` ends with an error that might be caused by the build process looking to iostreams in the wrong place. The end of the ouput on the terminal is:. ```; [ 80%] Built target salmon_core; make -f src/CMakeFiles/salmon.dir/build.make src/CMakeFiles/salmon.dir/depend; make[2]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2'; cd /opt/local/salmon-index/resources/salmon-0.4.2 && /usr/bin/cmake -E cmake_depends ""Unix Makefiles"" /opt/local/salmon-index/resources/salmon-0.4.2 /opt/local/salmon-index/resources/salmon-0.4.2/src /opt/local/salmon-index/resources/salmon-0.4.2 /opt/local/salmon-index/resources/salmon-0.4.2/src /opt/local/salmon-index/resources/salmon-0.4.2/src/CMakeFiles/salmon.dir/DependInfo.cmake --color=; make[2]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make -f src/CMakeFiles/salmon.dir/build.make src/CMakeFiles/salmon.dir/build; make[2]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make[2]: *** No rule to make target `/usr/lib/libboost_iostreams-mt.a', needed by `src/salmon'. Stop.; make[2]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make[1]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make: *** [all] Error 2; ```. Earlier in the output I can spot this:. ```; cc1plus: warning: unrecognized command line option ""-Wno-deprecated-register"" [enabled by default]; make[2]: *** No rule to make target `/usr/lib/libboost_iostreams-mt.a', needed by `src/salmon'. Stop.; make[2]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make[1]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make: *** [all] Error 2; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/21
https://github.com/COMBINE-lab/salmon/issues/21:1242,Availability,Error,Error,1242,"Hi,. Building salmon with `-DFETCH_BOOST=TRUE` ends with an error that might be caused by the build process looking to iostreams in the wrong place. The end of the ouput on the terminal is:. ```; [ 80%] Built target salmon_core; make -f src/CMakeFiles/salmon.dir/build.make src/CMakeFiles/salmon.dir/depend; make[2]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2'; cd /opt/local/salmon-index/resources/salmon-0.4.2 && /usr/bin/cmake -E cmake_depends ""Unix Makefiles"" /opt/local/salmon-index/resources/salmon-0.4.2 /opt/local/salmon-index/resources/salmon-0.4.2/src /opt/local/salmon-index/resources/salmon-0.4.2 /opt/local/salmon-index/resources/salmon-0.4.2/src /opt/local/salmon-index/resources/salmon-0.4.2/src/CMakeFiles/salmon.dir/DependInfo.cmake --color=; make[2]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make -f src/CMakeFiles/salmon.dir/build.make src/CMakeFiles/salmon.dir/build; make[2]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make[2]: *** No rule to make target `/usr/lib/libboost_iostreams-mt.a', needed by `src/salmon'. Stop.; make[2]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make[1]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make: *** [all] Error 2; ```. Earlier in the output I can spot this:. ```; cc1plus: warning: unrecognized command line option ""-Wno-deprecated-register"" [enabled by default]; make[2]: *** No rule to make target `/usr/lib/libboost_iostreams-mt.a', needed by `src/salmon'. Stop.; make[2]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make[1]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make: *** [all] Error 2; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/21
https://github.com/COMBINE-lab/salmon/issues/21:1344,Availability,Error,Error,1344,"Hi,. Building salmon with `-DFETCH_BOOST=TRUE` ends with an error that might be caused by the build process looking to iostreams in the wrong place. The end of the ouput on the terminal is:. ```; [ 80%] Built target salmon_core; make -f src/CMakeFiles/salmon.dir/build.make src/CMakeFiles/salmon.dir/depend; make[2]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2'; cd /opt/local/salmon-index/resources/salmon-0.4.2 && /usr/bin/cmake -E cmake_depends ""Unix Makefiles"" /opt/local/salmon-index/resources/salmon-0.4.2 /opt/local/salmon-index/resources/salmon-0.4.2/src /opt/local/salmon-index/resources/salmon-0.4.2 /opt/local/salmon-index/resources/salmon-0.4.2/src /opt/local/salmon-index/resources/salmon-0.4.2/src/CMakeFiles/salmon.dir/DependInfo.cmake --color=; make[2]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make -f src/CMakeFiles/salmon.dir/build.make src/CMakeFiles/salmon.dir/build; make[2]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make[2]: *** No rule to make target `/usr/lib/libboost_iostreams-mt.a', needed by `src/salmon'. Stop.; make[2]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make[1]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make: *** [all] Error 2; ```. Earlier in the output I can spot this:. ```; cc1plus: warning: unrecognized command line option ""-Wno-deprecated-register"" [enabled by default]; make[2]: *** No rule to make target `/usr/lib/libboost_iostreams-mt.a', needed by `src/salmon'. Stop.; make[2]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make[1]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make: *** [all] Error 2; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/21
https://github.com/COMBINE-lab/salmon/issues/21:1728,Availability,Error,Error,1728,"Hi,. Building salmon with `-DFETCH_BOOST=TRUE` ends with an error that might be caused by the build process looking to iostreams in the wrong place. The end of the ouput on the terminal is:. ```; [ 80%] Built target salmon_core; make -f src/CMakeFiles/salmon.dir/build.make src/CMakeFiles/salmon.dir/depend; make[2]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2'; cd /opt/local/salmon-index/resources/salmon-0.4.2 && /usr/bin/cmake -E cmake_depends ""Unix Makefiles"" /opt/local/salmon-index/resources/salmon-0.4.2 /opt/local/salmon-index/resources/salmon-0.4.2/src /opt/local/salmon-index/resources/salmon-0.4.2 /opt/local/salmon-index/resources/salmon-0.4.2/src /opt/local/salmon-index/resources/salmon-0.4.2/src/CMakeFiles/salmon.dir/DependInfo.cmake --color=; make[2]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make -f src/CMakeFiles/salmon.dir/build.make src/CMakeFiles/salmon.dir/build; make[2]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make[2]: *** No rule to make target `/usr/lib/libboost_iostreams-mt.a', needed by `src/salmon'. Stop.; make[2]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make[1]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make: *** [all] Error 2; ```. Earlier in the output I can spot this:. ```; cc1plus: warning: unrecognized command line option ""-Wno-deprecated-register"" [enabled by default]; make[2]: *** No rule to make target `/usr/lib/libboost_iostreams-mt.a', needed by `src/salmon'. Stop.; make[2]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make[1]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make: *** [all] Error 2; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/21
https://github.com/COMBINE-lab/salmon/issues/21:1830,Availability,Error,Error,1830,"Hi,. Building salmon with `-DFETCH_BOOST=TRUE` ends with an error that might be caused by the build process looking to iostreams in the wrong place. The end of the ouput on the terminal is:. ```; [ 80%] Built target salmon_core; make -f src/CMakeFiles/salmon.dir/build.make src/CMakeFiles/salmon.dir/depend; make[2]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2'; cd /opt/local/salmon-index/resources/salmon-0.4.2 && /usr/bin/cmake -E cmake_depends ""Unix Makefiles"" /opt/local/salmon-index/resources/salmon-0.4.2 /opt/local/salmon-index/resources/salmon-0.4.2/src /opt/local/salmon-index/resources/salmon-0.4.2 /opt/local/salmon-index/resources/salmon-0.4.2/src /opt/local/salmon-index/resources/salmon-0.4.2/src/CMakeFiles/salmon.dir/DependInfo.cmake --color=; make[2]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make -f src/CMakeFiles/salmon.dir/build.make src/CMakeFiles/salmon.dir/build; make[2]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make[2]: *** No rule to make target `/usr/lib/libboost_iostreams-mt.a', needed by `src/salmon'. Stop.; make[2]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make[1]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make: *** [all] Error 2; ```. Earlier in the output I can spot this:. ```; cc1plus: warning: unrecognized command line option ""-Wno-deprecated-register"" [enabled by default]; make[2]: *** No rule to make target `/usr/lib/libboost_iostreams-mt.a', needed by `src/salmon'. Stop.; make[2]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make[1]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make: *** [all] Error 2; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/21
https://github.com/COMBINE-lab/salmon/issues/21:300,Integrability,depend,depend,300,"Hi,. Building salmon with `-DFETCH_BOOST=TRUE` ends with an error that might be caused by the build process looking to iostreams in the wrong place. The end of the ouput on the terminal is:. ```; [ 80%] Built target salmon_core; make -f src/CMakeFiles/salmon.dir/build.make src/CMakeFiles/salmon.dir/depend; make[2]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2'; cd /opt/local/salmon-index/resources/salmon-0.4.2 && /usr/bin/cmake -E cmake_depends ""Unix Makefiles"" /opt/local/salmon-index/resources/salmon-0.4.2 /opt/local/salmon-index/resources/salmon-0.4.2/src /opt/local/salmon-index/resources/salmon-0.4.2 /opt/local/salmon-index/resources/salmon-0.4.2/src /opt/local/salmon-index/resources/salmon-0.4.2/src/CMakeFiles/salmon.dir/DependInfo.cmake --color=; make[2]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make -f src/CMakeFiles/salmon.dir/build.make src/CMakeFiles/salmon.dir/build; make[2]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make[2]: *** No rule to make target `/usr/lib/libboost_iostreams-mt.a', needed by `src/salmon'. Stop.; make[2]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make[1]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make: *** [all] Error 2; ```. Earlier in the output I can spot this:. ```; cc1plus: warning: unrecognized command line option ""-Wno-deprecated-register"" [enabled by default]; make[2]: *** No rule to make target `/usr/lib/libboost_iostreams-mt.a', needed by `src/salmon'. Stop.; make[2]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make[1]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make: *** [all] Error 2; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/21
https://github.com/COMBINE-lab/salmon/issues/21:757,Integrability,Depend,DependInfo,757,"Hi,. Building salmon with `-DFETCH_BOOST=TRUE` ends with an error that might be caused by the build process looking to iostreams in the wrong place. The end of the ouput on the terminal is:. ```; [ 80%] Built target salmon_core; make -f src/CMakeFiles/salmon.dir/build.make src/CMakeFiles/salmon.dir/depend; make[2]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2'; cd /opt/local/salmon-index/resources/salmon-0.4.2 && /usr/bin/cmake -E cmake_depends ""Unix Makefiles"" /opt/local/salmon-index/resources/salmon-0.4.2 /opt/local/salmon-index/resources/salmon-0.4.2/src /opt/local/salmon-index/resources/salmon-0.4.2 /opt/local/salmon-index/resources/salmon-0.4.2/src /opt/local/salmon-index/resources/salmon-0.4.2/src/CMakeFiles/salmon.dir/DependInfo.cmake --color=; make[2]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make -f src/CMakeFiles/salmon.dir/build.make src/CMakeFiles/salmon.dir/build; make[2]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make[2]: *** No rule to make target `/usr/lib/libboost_iostreams-mt.a', needed by `src/salmon'. Stop.; make[2]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make[1]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make: *** [all] Error 2; ```. Earlier in the output I can spot this:. ```; cc1plus: warning: unrecognized command line option ""-Wno-deprecated-register"" [enabled by default]; make[2]: *** No rule to make target `/usr/lib/libboost_iostreams-mt.a', needed by `src/salmon'. Stop.; make[2]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make[1]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make: *** [all] Error 2; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/21
https://github.com/COMBINE-lab/salmon/issues/22:409,Availability,error,error,409,"I had a fasta file with an space at the end of a sequence line. This caused salmon to fail, somewhat quietly (no output files are produced). It would be nice to report the specific problem with the input or position of the failing line, ... log:. <pre>; Logs will be written to output_dir/logs; there is 1 lib; [2015-10-09 15:47:13.170] [jointLog] [info] parsing read library format; [bns_restore_core] Parse error reading ./current_index/bwaidx.amb; </pre>",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/22
https://github.com/COMBINE-lab/salmon/issues/22:241,Testability,log,log,241,"I had a fasta file with an space at the end of a sequence line. This caused salmon to fail, somewhat quietly (no output files are produced). It would be nice to report the specific problem with the input or position of the failing line, ... log:. <pre>; Logs will be written to output_dir/logs; there is 1 lib; [2015-10-09 15:47:13.170] [jointLog] [info] parsing read library format; [bns_restore_core] Parse error reading ./current_index/bwaidx.amb; </pre>",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/22
https://github.com/COMBINE-lab/salmon/issues/22:254,Testability,Log,Logs,254,"I had a fasta file with an space at the end of a sequence line. This caused salmon to fail, somewhat quietly (no output files are produced). It would be nice to report the specific problem with the input or position of the failing line, ... log:. <pre>; Logs will be written to output_dir/logs; there is 1 lib; [2015-10-09 15:47:13.170] [jointLog] [info] parsing read library format; [bns_restore_core] Parse error reading ./current_index/bwaidx.amb; </pre>",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/22
https://github.com/COMBINE-lab/salmon/issues/22:289,Testability,log,logs,289,"I had a fasta file with an space at the end of a sequence line. This caused salmon to fail, somewhat quietly (no output files are produced). It would be nice to report the specific problem with the input or position of the failing line, ... log:. <pre>; Logs will be written to output_dir/logs; there is 1 lib; [2015-10-09 15:47:13.170] [jointLog] [info] parsing read library format; [bns_restore_core] Parse error reading ./current_index/bwaidx.amb; </pre>",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/22
https://github.com/COMBINE-lab/salmon/pull/23:22,Availability,avail,available,22,"xz-5.2.0 is no longer available on tukaani.org. More generally, this is the source of future issues (next one with the next release of xz, since no archiving of previous releases on tukaani.org)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/23
https://github.com/COMBINE-lab/salmon/pull/23:124,Deployability,release,release,124,"xz-5.2.0 is no longer available on tukaani.org. More generally, this is the source of future issues (next one with the next release of xz, since no archiving of previous releases on tukaani.org)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/23
https://github.com/COMBINE-lab/salmon/pull/23:170,Deployability,release,releases,170,"xz-5.2.0 is no longer available on tukaani.org. More generally, this is the source of future issues (next one with the next release of xz, since no archiving of previous releases on tukaani.org)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/23
https://github.com/COMBINE-lab/salmon/issues/24:919,Availability,error,error,919,"After starting a blank Ubuntu machine, and then executing:. ```; sudo apt-get update && \; sudo apt-get -y install screen git curl gcc make g++ python-dev unzip \; default-jre pkg-config libncurses5-dev r-base-core r-cran-gplots \; python-matplotlib python-pip python-virtualenv sysstat fastqc \; trimmomatic bowtie samtools blast2; sudo apt-get -y install cmake libboost-all-dev liblzma-dev. curl -O -L https://github.com/COMBINE-lab/salmon/archive/v0.5.0.tar.gz. tar xzf v0.5.0.tar.gz; cd salmon-0.5.0; cmake .; make; ```. gives. ```; In file included from /home/ubuntu/salmon-0.5.0/include/BAMQueue.hpp:146:0,; from /home/ubuntu/salmon-0.5.0/include/AlignmentLibrary.hpp:14,; from /home/ubuntu/salmon-0.5.0/src/SalmonUtils.cpp:13:; /home/ubuntu/salmon-0.5.0/include/BAMQueue.tpp: In function 'bool checkProperPairedNames_(const char*, const char*, uint32_t)':; /home/ubuntu/salmon-0.5.0/include/BAMQueue.tpp:247:33: error: 'BOOST_LIKELY' was not declared in this scope; if (BOOST_LIKELY(nameLen > 1)) {; ^; ```. I'm not sure if this is a Boost version requirement, or what -- looks like I have boost 1.54 installed. Suggestions welcome!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/24
https://github.com/COMBINE-lab/salmon/issues/24:78,Deployability,update,update,78,"After starting a blank Ubuntu machine, and then executing:. ```; sudo apt-get update && \; sudo apt-get -y install screen git curl gcc make g++ python-dev unzip \; default-jre pkg-config libncurses5-dev r-base-core r-cran-gplots \; python-matplotlib python-pip python-virtualenv sysstat fastqc \; trimmomatic bowtie samtools blast2; sudo apt-get -y install cmake libboost-all-dev liblzma-dev. curl -O -L https://github.com/COMBINE-lab/salmon/archive/v0.5.0.tar.gz. tar xzf v0.5.0.tar.gz; cd salmon-0.5.0; cmake .; make; ```. gives. ```; In file included from /home/ubuntu/salmon-0.5.0/include/BAMQueue.hpp:146:0,; from /home/ubuntu/salmon-0.5.0/include/AlignmentLibrary.hpp:14,; from /home/ubuntu/salmon-0.5.0/src/SalmonUtils.cpp:13:; /home/ubuntu/salmon-0.5.0/include/BAMQueue.tpp: In function 'bool checkProperPairedNames_(const char*, const char*, uint32_t)':; /home/ubuntu/salmon-0.5.0/include/BAMQueue.tpp:247:33: error: 'BOOST_LIKELY' was not declared in this scope; if (BOOST_LIKELY(nameLen > 1)) {; ^; ```. I'm not sure if this is a Boost version requirement, or what -- looks like I have boost 1.54 installed. Suggestions welcome!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/24
https://github.com/COMBINE-lab/salmon/issues/24:107,Deployability,install,install,107,"After starting a blank Ubuntu machine, and then executing:. ```; sudo apt-get update && \; sudo apt-get -y install screen git curl gcc make g++ python-dev unzip \; default-jre pkg-config libncurses5-dev r-base-core r-cran-gplots \; python-matplotlib python-pip python-virtualenv sysstat fastqc \; trimmomatic bowtie samtools blast2; sudo apt-get -y install cmake libboost-all-dev liblzma-dev. curl -O -L https://github.com/COMBINE-lab/salmon/archive/v0.5.0.tar.gz. tar xzf v0.5.0.tar.gz; cd salmon-0.5.0; cmake .; make; ```. gives. ```; In file included from /home/ubuntu/salmon-0.5.0/include/BAMQueue.hpp:146:0,; from /home/ubuntu/salmon-0.5.0/include/AlignmentLibrary.hpp:14,; from /home/ubuntu/salmon-0.5.0/src/SalmonUtils.cpp:13:; /home/ubuntu/salmon-0.5.0/include/BAMQueue.tpp: In function 'bool checkProperPairedNames_(const char*, const char*, uint32_t)':; /home/ubuntu/salmon-0.5.0/include/BAMQueue.tpp:247:33: error: 'BOOST_LIKELY' was not declared in this scope; if (BOOST_LIKELY(nameLen > 1)) {; ^; ```. I'm not sure if this is a Boost version requirement, or what -- looks like I have boost 1.54 installed. Suggestions welcome!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/24
https://github.com/COMBINE-lab/salmon/issues/24:349,Deployability,install,install,349,"After starting a blank Ubuntu machine, and then executing:. ```; sudo apt-get update && \; sudo apt-get -y install screen git curl gcc make g++ python-dev unzip \; default-jre pkg-config libncurses5-dev r-base-core r-cran-gplots \; python-matplotlib python-pip python-virtualenv sysstat fastqc \; trimmomatic bowtie samtools blast2; sudo apt-get -y install cmake libboost-all-dev liblzma-dev. curl -O -L https://github.com/COMBINE-lab/salmon/archive/v0.5.0.tar.gz. tar xzf v0.5.0.tar.gz; cd salmon-0.5.0; cmake .; make; ```. gives. ```; In file included from /home/ubuntu/salmon-0.5.0/include/BAMQueue.hpp:146:0,; from /home/ubuntu/salmon-0.5.0/include/AlignmentLibrary.hpp:14,; from /home/ubuntu/salmon-0.5.0/src/SalmonUtils.cpp:13:; /home/ubuntu/salmon-0.5.0/include/BAMQueue.tpp: In function 'bool checkProperPairedNames_(const char*, const char*, uint32_t)':; /home/ubuntu/salmon-0.5.0/include/BAMQueue.tpp:247:33: error: 'BOOST_LIKELY' was not declared in this scope; if (BOOST_LIKELY(nameLen > 1)) {; ^; ```. I'm not sure if this is a Boost version requirement, or what -- looks like I have boost 1.54 installed. Suggestions welcome!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/24
https://github.com/COMBINE-lab/salmon/issues/24:1108,Deployability,install,installed,1108,"After starting a blank Ubuntu machine, and then executing:. ```; sudo apt-get update && \; sudo apt-get -y install screen git curl gcc make g++ python-dev unzip \; default-jre pkg-config libncurses5-dev r-base-core r-cran-gplots \; python-matplotlib python-pip python-virtualenv sysstat fastqc \; trimmomatic bowtie samtools blast2; sudo apt-get -y install cmake libboost-all-dev liblzma-dev. curl -O -L https://github.com/COMBINE-lab/salmon/archive/v0.5.0.tar.gz. tar xzf v0.5.0.tar.gz; cd salmon-0.5.0; cmake .; make; ```. gives. ```; In file included from /home/ubuntu/salmon-0.5.0/include/BAMQueue.hpp:146:0,; from /home/ubuntu/salmon-0.5.0/include/AlignmentLibrary.hpp:14,; from /home/ubuntu/salmon-0.5.0/src/SalmonUtils.cpp:13:; /home/ubuntu/salmon-0.5.0/include/BAMQueue.tpp: In function 'bool checkProperPairedNames_(const char*, const char*, uint32_t)':; /home/ubuntu/salmon-0.5.0/include/BAMQueue.tpp:247:33: error: 'BOOST_LIKELY' was not declared in this scope; if (BOOST_LIKELY(nameLen > 1)) {; ^; ```. I'm not sure if this is a Boost version requirement, or what -- looks like I have boost 1.54 installed. Suggestions welcome!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/24
https://github.com/COMBINE-lab/salmon/issues/24:180,Modifiability,config,config,180,"After starting a blank Ubuntu machine, and then executing:. ```; sudo apt-get update && \; sudo apt-get -y install screen git curl gcc make g++ python-dev unzip \; default-jre pkg-config libncurses5-dev r-base-core r-cran-gplots \; python-matplotlib python-pip python-virtualenv sysstat fastqc \; trimmomatic bowtie samtools blast2; sudo apt-get -y install cmake libboost-all-dev liblzma-dev. curl -O -L https://github.com/COMBINE-lab/salmon/archive/v0.5.0.tar.gz. tar xzf v0.5.0.tar.gz; cd salmon-0.5.0; cmake .; make; ```. gives. ```; In file included from /home/ubuntu/salmon-0.5.0/include/BAMQueue.hpp:146:0,; from /home/ubuntu/salmon-0.5.0/include/AlignmentLibrary.hpp:14,; from /home/ubuntu/salmon-0.5.0/src/SalmonUtils.cpp:13:; /home/ubuntu/salmon-0.5.0/include/BAMQueue.tpp: In function 'bool checkProperPairedNames_(const char*, const char*, uint32_t)':; /home/ubuntu/salmon-0.5.0/include/BAMQueue.tpp:247:33: error: 'BOOST_LIKELY' was not declared in this scope; if (BOOST_LIKELY(nameLen > 1)) {; ^; ```. I'm not sure if this is a Boost version requirement, or what -- looks like I have boost 1.54 installed. Suggestions welcome!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/24
https://github.com/COMBINE-lab/salmon/issues/28:109,Usability,simpl,simply,109,"So, it won't let me use .fq.1 and .fq.2 - it has to be .1.fq and .2.fq. I think either allowing a 'force' or simply checking to see if the file is FASTQ would be great.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/28
https://github.com/COMBINE-lab/salmon/issues/30:326,Integrability,protocol,protocol,326,"Hi, we're having trouble with salmon on a stranded library -- we're executing. ```; salmon index --index idx --transcript equCabs.fa --type quasi; ```. and then. ```; salmon quant -i idx -1 leftReads.fq -2 rightReads.fq --libType ISF -o xxx.quant; ```. We then get the warning that there is a big strand bias in an unstranded protocol, despite having specified stranded (S) in libType. Inspection of the libFormatCounts.txt file confirms this, with ""expected format"" specifying ""strandedness:unstranded"".",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/30
https://github.com/COMBINE-lab/salmon/issues/31:492,Performance,optimiz,optimizer,492,"When doing paired mapping, we get a lot of single-mapped reads (probably indicative of a crappy transcriptome - we know, we know). Do these reads count towards quantification?. ```; salmon quant -i cDNA_transcripts.index --libType ISR -1 L101_resync_R1.fastq -2 L101_resync_R2.fastq -o L101.quant. [2015-11-03 14:08:26.861] [jointLog] [info] Mapping rate = 26.4703%. [2015-11-03 14:08:26.861] [jointLog] [info] finished quantifyLibrary(); [2015-11-03 14:08:26.861] [jointLog] [info] Starting optimizer; [2015-11-03 14:08:26.878] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2015-11-03 14:08:26.889] [jointLog] [info] iteration = 0 | max rel diff. = 499.998; [2015-11-03 14:08:27.264] [jointLog] [info] iteration = 100 | max rel diff. = 0.216535; [2015-11-03 14:08:27.647] [jointLog] [info] iteration = 200 | max rel diff. = 0.123972; [2015-11-03 14:08:28.032] [jointLog] [info] iteration = 300 | max rel diff. = 0.108899; [2015-11-03 14:08:28.403] [jointLog] [info] iteration = 400 | max rel diff. = 0.0560467; [2015-11-03 14:08:28.772] [jointLog] [info] iteration = 500 | max rel diff. = 0.0441335; [2015-11-03 14:08:29.147] [jointLog] [info] iteration = 600 | max rel diff. = 0.0387812; [2015-11-03 14:08:29.524] [jointLog] [info] iteration = 700 | max rel diff. = 0.0333914; [2015-11-03 14:08:29.901] [jointLog] [info] iteration = 800 | max rel diff. = 0.0282682; [2015-11-03 14:08:30.279] [jointLog] [info] iteration = 900 | max rel diff. = 0.0253705; [2015-11-03 14:08:30.659] [jointLog] [info] iteration = 1000 | max rel diff. = 0.0229764; [2015-11-03 14:08:31.040] [jointLog] [info] iteration = 1100 | max rel diff. = 0.0223721; [2015-11-03 14:08:31.414] [jointLog] [info] iteration = 1200 | max rel diff. = 0.0202505; [2015-11-03 14:08:31.792] [jointLog] [info] iteration = 1300 | max rel diff. = 0.0186214; [2015-11-03 14:08:32.177] [jointLog] [info] iteration = 1400 | max rel diff. = 0.0181308; [2015-11-03 14:08:32.568] [jointLog] [info] iteration = 1500 | max r",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/31
https://github.com/COMBINE-lab/salmon/issues/31:2707,Performance,optimiz,optimizer,2707,"iteration = 1200 | max rel diff. = 0.0202505; [2015-11-03 14:08:31.792] [jointLog] [info] iteration = 1300 | max rel diff. = 0.0186214; [2015-11-03 14:08:32.177] [jointLog] [info] iteration = 1400 | max rel diff. = 0.0181308; [2015-11-03 14:08:32.568] [jointLog] [info] iteration = 1500 | max rel diff. = 0.0159512; [2015-11-03 14:08:32.948] [jointLog] [info] iteration = 1600 | max rel diff. = 0.0156004; [2015-11-03 14:08:33.323] [jointLog] [info] iteration = 1700 | max rel diff. = 0.0134322; [2015-11-03 14:08:33.700] [jointLog] [info] iteration = 1800 | max rel diff. = 0.0131983; [2015-11-03 14:08:34.077] [jointLog] [info] iteration = 1900 | max rel diff. = 0.0123282; [2015-11-03 14:08:34.453] [jointLog] [info] iteration = 2000 | max rel diff. = 0.0123282; [2015-11-03 14:08:34.835] [jointLog] [info] iteration = 2100 | max rel diff. = 0.0105099; [2015-11-03 14:08:35.439] [jointLog] [info] iteration = 2261 | max rel diff. = 0.00994575; [2015-11-03 14:08:35.441] [jointLog] [info] Finished optimizer; [2015-11-03 14:08:35.441] [jointLog] [info] writing output ; [2015-11-03 14:08:35.213] [jointLog] [info] iteration = 2200 | max rel diff. = 0.0105132. [2015-11-03 14:08:35.481] [jointLog] [warning] NOTE: Read Lib [( L101_resync_R1.fastq, L101_resync_R2.fastq )] :. Greater than 5% of the alignments (but not, necessarily reads) disagreed with the provided library type; check the file: L101.quant/libFormatCounts.txt for details. L101.quant/libFormatCounts.txt. ========; Read library consisting of files: ( L101_resync_R1.fastq, L101_resync_R2.fastq ). Expected format: Library format { type:paired end, relative orientation:inward, strandedness:(antisense, sense) }. # of consistent alignments: 6342265; # of inconsistent alignments: 2277243. ========; ---- counts for each format type ---; Library format { type:single end, relative orientation:matching, strandedness:(sense, antisense) } : 0; Library format { type:paired end, relative orientation:matching, strandedness:(sense, antise",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/31
https://github.com/COMBINE-lab/salmon/issues/34:3367,Availability,fault,fault,3367," 0.0984302; [2016-01-02 00:08:58.048] [jointLog] [info] iteration = 300 | max rel diff. = 0.0774471; [2016-01-02 00:08:58.265] [jointLog] [info] iteration = 400 | max rel diff. = 0.0866256; [2016-01-02 00:08:58.472] [jointLog] [info] iteration 500, recomputing effective lengths; [2016-01-02 00:09:00.486] [jointLog] [info] iteration = 500 | max rel diff. = 0.0216284; [2016-01-02 00:09:00.696] [jointLog] [info] iteration = 600 | max rel diff. = 0.0269734; [2016-01-02 00:09:00.905] [jointLog] [info] iteration = 700 | max rel diff. = 0.0166003; [2016-01-02 00:09:01.113] [jointLog] [info] iteration = 800 | max rel diff. = 0.0136659; [2016-01-02 00:09:01.334] [jointLog] [info] iteration = 900 | max rel diff. = 0.0114614; [2016-01-02 00:09:01.542] [jointLog] [info] iteration 1000, recomputing effective lengths; [2016-01-02 00:09:03.495] [jointLog] [info] iteration = 1000 | max rel diff. = 0.0102234; [2016-01-02 00:09:03.716] [jointLog] [info] iteration = 1100 | max rel diff. = 0.0202324; [2016-01-02 00:09:03.929] [jointLog] [info] iteration = 1200 | max rel diff. = 0.010957; [2016-01-02 00:09:03.946] [jointLog] [info] iteration = 1209 | max rel diff. = 0.00996627; [2016-01-02 00:09:03.952] [jointLog] [info] Finished optimizer; [2016-01-02 00:09:03.952] [jointLog] [info] writing output. Computing gene-level abundance estimates; [2016-01-02 00:09:04.141] [jointLog] [warning] NOTE: Read Lib [( /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/ERP009633_cell20_1.fastq, /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/ERP009633_cell20_2.fastq )] :. Greater than 5% of the alignments (but not, necessarily reads) disagreed with the provided library type; check the file: /tmp/ERP009633_cell20_salmon_out/libFormatCounts.txt for details. There were 104534 transcripts mapping to 44034 genes; Parsed 104000 expression lines; done; Aggregating expressions to gene level . . . done; Segmentation fault (core dumped); ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34
https://github.com/COMBINE-lab/salmon/issues/34:944,Performance,optimiz,optimizer,944,"I was just trying out the new version. It seems to be working, but it seems to fail at the time of printing results. Here's a tail of the text output:. ```; [2016-01-02 00:08:48.445] [jointLog] [info] Computed 66783 rich equivalence classes for further processing; [2016-01-02 00:08:48.445] [jointLog] [info] Counted 2977936 total reads in the equivalence classes; [2016-01-02 00:08:54.862] [jointLog] [warning] Only 2977936 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2016-01-02 00:08:54.862] [jointLog] [warning] Since only 2977936 (< 5000000) fragments were observed, modeling of the fragment start position distribution has been disabled; [2016-01-02 00:08:54.862] [jointLog] [info] Mapping rate = 48.8134%. [2016-01-02 00:08:54.862] [jointLog] [info] finished quantifyLibrary(); [2016-01-02 00:08:54.863] [jointLog] [info] Starting optimizer; [2016-01-02 00:08:54.918] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-01-02 00:08:54.921] [jointLog] [info] iteration = 0 | max rel diff. = 48.4964; [2016-01-02 00:08:55.024] [jointLog] [info] iteration 50, recomputing effective lengths; [2016-01-02 00:08:57.626] [jointLog] [info] iteration = 100 | max rel diff. = 0.157189; [2016-01-02 00:08:57.835] [jointLog] [info] iteration = 200 | max rel diff. = 0.0984302; [2016-01-02 00:08:58.048] [jointLog] [info] iteration = 300 | max rel diff. = 0.0774471; [2016-01-02 00:08:58.265] [jointLog] [info] iteration = 400 | max rel diff. = 0.0866256; [2016-01-02 00:08:58.472] [jointLog] [info] iteration 500, recomputing effective lengths; [2016-01-02 00:09:00.486] [jointLog] [info] iteration = 500 | max rel diff. = 0.0216284; [2016-01-02 00:09:00.696] [jointLog] [info] iteration = 600 | max rel diff. = 0.0269734; [2016-01-02 00:09:00.905] [jointLog] [info] iteration = 700 | max rel diff. = 0.0166003; [2016-01-02 00:09:01.113] [jointLog] [info] iteration = 800 | m",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34
https://github.com/COMBINE-lab/salmon/issues/34:2620,Performance,optimiz,optimizer,2620," 0.0984302; [2016-01-02 00:08:58.048] [jointLog] [info] iteration = 300 | max rel diff. = 0.0774471; [2016-01-02 00:08:58.265] [jointLog] [info] iteration = 400 | max rel diff. = 0.0866256; [2016-01-02 00:08:58.472] [jointLog] [info] iteration 500, recomputing effective lengths; [2016-01-02 00:09:00.486] [jointLog] [info] iteration = 500 | max rel diff. = 0.0216284; [2016-01-02 00:09:00.696] [jointLog] [info] iteration = 600 | max rel diff. = 0.0269734; [2016-01-02 00:09:00.905] [jointLog] [info] iteration = 700 | max rel diff. = 0.0166003; [2016-01-02 00:09:01.113] [jointLog] [info] iteration = 800 | max rel diff. = 0.0136659; [2016-01-02 00:09:01.334] [jointLog] [info] iteration = 900 | max rel diff. = 0.0114614; [2016-01-02 00:09:01.542] [jointLog] [info] iteration 1000, recomputing effective lengths; [2016-01-02 00:09:03.495] [jointLog] [info] iteration = 1000 | max rel diff. = 0.0102234; [2016-01-02 00:09:03.716] [jointLog] [info] iteration = 1100 | max rel diff. = 0.0202324; [2016-01-02 00:09:03.929] [jointLog] [info] iteration = 1200 | max rel diff. = 0.010957; [2016-01-02 00:09:03.946] [jointLog] [info] iteration = 1209 | max rel diff. = 0.00996627; [2016-01-02 00:09:03.952] [jointLog] [info] Finished optimizer; [2016-01-02 00:09:03.952] [jointLog] [info] writing output. Computing gene-level abundance estimates; [2016-01-02 00:09:04.141] [jointLog] [warning] NOTE: Read Lib [( /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/ERP009633_cell20_1.fastq, /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/ERP009633_cell20_2.fastq )] :. Greater than 5% of the alignments (but not, necessarily reads) disagreed with the provided library type; check the file: /tmp/ERP009633_cell20_salmon_out/libFormatCounts.txt for details. There were 104534 transcripts mapping to 44034 genes; Parsed 104000 expression lines; done; Aggregating expressions to gene level . . . done; Segmentation fault (core dumped); ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34
https://github.com/COMBINE-lab/salmon/issues/34:2833,Safety,detect,detection-comparison,2833," 0.0984302; [2016-01-02 00:08:58.048] [jointLog] [info] iteration = 300 | max rel diff. = 0.0774471; [2016-01-02 00:08:58.265] [jointLog] [info] iteration = 400 | max rel diff. = 0.0866256; [2016-01-02 00:08:58.472] [jointLog] [info] iteration 500, recomputing effective lengths; [2016-01-02 00:09:00.486] [jointLog] [info] iteration = 500 | max rel diff. = 0.0216284; [2016-01-02 00:09:00.696] [jointLog] [info] iteration = 600 | max rel diff. = 0.0269734; [2016-01-02 00:09:00.905] [jointLog] [info] iteration = 700 | max rel diff. = 0.0166003; [2016-01-02 00:09:01.113] [jointLog] [info] iteration = 800 | max rel diff. = 0.0136659; [2016-01-02 00:09:01.334] [jointLog] [info] iteration = 900 | max rel diff. = 0.0114614; [2016-01-02 00:09:01.542] [jointLog] [info] iteration 1000, recomputing effective lengths; [2016-01-02 00:09:03.495] [jointLog] [info] iteration = 1000 | max rel diff. = 0.0102234; [2016-01-02 00:09:03.716] [jointLog] [info] iteration = 1100 | max rel diff. = 0.0202324; [2016-01-02 00:09:03.929] [jointLog] [info] iteration = 1200 | max rel diff. = 0.010957; [2016-01-02 00:09:03.946] [jointLog] [info] iteration = 1209 | max rel diff. = 0.00996627; [2016-01-02 00:09:03.952] [jointLog] [info] Finished optimizer; [2016-01-02 00:09:03.952] [jointLog] [info] writing output. Computing gene-level abundance estimates; [2016-01-02 00:09:04.141] [jointLog] [warning] NOTE: Read Lib [( /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/ERP009633_cell20_1.fastq, /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/ERP009633_cell20_2.fastq )] :. Greater than 5% of the alignments (but not, necessarily reads) disagreed with the provided library type; check the file: /tmp/ERP009633_cell20_salmon_out/libFormatCounts.txt for details. There were 104534 transcripts mapping to 44034 genes; Parsed 104000 expression lines; done; Aggregating expressions to gene level . . . done; Segmentation fault (core dumped); ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34
https://github.com/COMBINE-lab/salmon/issues/34:2944,Safety,detect,detection-comparison,2944," 0.0984302; [2016-01-02 00:08:58.048] [jointLog] [info] iteration = 300 | max rel diff. = 0.0774471; [2016-01-02 00:08:58.265] [jointLog] [info] iteration = 400 | max rel diff. = 0.0866256; [2016-01-02 00:08:58.472] [jointLog] [info] iteration 500, recomputing effective lengths; [2016-01-02 00:09:00.486] [jointLog] [info] iteration = 500 | max rel diff. = 0.0216284; [2016-01-02 00:09:00.696] [jointLog] [info] iteration = 600 | max rel diff. = 0.0269734; [2016-01-02 00:09:00.905] [jointLog] [info] iteration = 700 | max rel diff. = 0.0166003; [2016-01-02 00:09:01.113] [jointLog] [info] iteration = 800 | max rel diff. = 0.0136659; [2016-01-02 00:09:01.334] [jointLog] [info] iteration = 900 | max rel diff. = 0.0114614; [2016-01-02 00:09:01.542] [jointLog] [info] iteration 1000, recomputing effective lengths; [2016-01-02 00:09:03.495] [jointLog] [info] iteration = 1000 | max rel diff. = 0.0102234; [2016-01-02 00:09:03.716] [jointLog] [info] iteration = 1100 | max rel diff. = 0.0202324; [2016-01-02 00:09:03.929] [jointLog] [info] iteration = 1200 | max rel diff. = 0.010957; [2016-01-02 00:09:03.946] [jointLog] [info] iteration = 1209 | max rel diff. = 0.00996627; [2016-01-02 00:09:03.952] [jointLog] [info] Finished optimizer; [2016-01-02 00:09:03.952] [jointLog] [info] writing output. Computing gene-level abundance estimates; [2016-01-02 00:09:04.141] [jointLog] [warning] NOTE: Read Lib [( /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/ERP009633_cell20_1.fastq, /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/ERP009633_cell20_2.fastq )] :. Greater than 5% of the alignments (but not, necessarily reads) disagreed with the provided library type; check the file: /tmp/ERP009633_cell20_salmon_out/libFormatCounts.txt for details. There were 104534 transcripts mapping to 44034 genes; Parsed 104000 expression lines; done; Aggregating expressions to gene level . . . done; Segmentation fault (core dumped); ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34
https://github.com/COMBINE-lab/salmon/issues/37:92,Deployability,upgrade,upgrade,92,"I have a salmon index which fails silently when used:. ```; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (mapping-based) v0.5.1; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { ... }; # [ libType ] => { IU }; # [ mates1 ] => { ... }; # [ mates2 ] => { ... }; # [ output ] => { ... }; # [ threads ] => { 16 }; Logs will be written to ...; [2016-01-22 16:54:55.564] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi index; [2016-01-22 16:54:56.303] [jointLog] [info] Loading Quasi index; [2016-01-22 16:54:56.320] [stderrLog] [info] Loading Suffix Array; [2016-01-22 16:54:56.321] [stderrLog] [info] Loading Position Hash; [2016-01-22 16:56:17.595] [stderrLog] [info] Loading Transcript Info; [2016-01-22 16:56:36.767] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-22 16:56:40.858] [stderrLog] [info] There were 552702 set bits in the bit array; [2016-01-22 16:56:41.758] [stderrLog] [info] Computing transcript lengths; [2016-01-22 16:56:41.761] [stderrLog] [info] Waiting to finish loading hash; Index contained 552702 targets; [2016-01-22 17:00:40.648] [stderrLog] [info] Done loading index; [2016-01-22 17:00:40.648] [jointLog] [info] done; ```. Then the process exits and nothing but the `cmd_info.json` and log file are written to disk. The sequencing library is not an issue, as I can use several other index files successfully. This is reproducible with ~600 sequencing libraries as well. I believe this also occurs using v0.6.0, but will confirm. Since there is no core dump, is there any way for me to debug this?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37
https://github.com/COMBINE-lab/salmon/issues/37:144,Deployability,upgrade,upgrades,144,"I have a salmon index which fails silently when used:. ```; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (mapping-based) v0.5.1; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { ... }; # [ libType ] => { IU }; # [ mates1 ] => { ... }; # [ mates2 ] => { ... }; # [ output ] => { ... }; # [ threads ] => { 16 }; Logs will be written to ...; [2016-01-22 16:54:55.564] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi index; [2016-01-22 16:54:56.303] [jointLog] [info] Loading Quasi index; [2016-01-22 16:54:56.320] [stderrLog] [info] Loading Suffix Array; [2016-01-22 16:54:56.321] [stderrLog] [info] Loading Position Hash; [2016-01-22 16:56:17.595] [stderrLog] [info] Loading Transcript Info; [2016-01-22 16:56:36.767] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-22 16:56:40.858] [stderrLog] [info] There were 552702 set bits in the bit array; [2016-01-22 16:56:41.758] [stderrLog] [info] Computing transcript lengths; [2016-01-22 16:56:41.761] [stderrLog] [info] Waiting to finish loading hash; Index contained 552702 targets; [2016-01-22 17:00:40.648] [stderrLog] [info] Done loading index; [2016-01-22 17:00:40.648] [jointLog] [info] done; ```. Then the process exits and nothing but the `cmd_info.json` and log file are written to disk. The sequencing library is not an issue, as I can use several other index files successfully. This is reproducible with ~600 sequencing libraries as well. I believe this also occurs using v0.6.0, but will confirm. Since there is no core dump, is there any way for me to debug this?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37
https://github.com/COMBINE-lab/salmon/issues/37:552,Performance,Load,Loading,552,"I have a salmon index which fails silently when used:. ```; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (mapping-based) v0.5.1; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { ... }; # [ libType ] => { IU }; # [ mates1 ] => { ... }; # [ mates2 ] => { ... }; # [ output ] => { ... }; # [ threads ] => { 16 }; Logs will be written to ...; [2016-01-22 16:54:55.564] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi index; [2016-01-22 16:54:56.303] [jointLog] [info] Loading Quasi index; [2016-01-22 16:54:56.320] [stderrLog] [info] Loading Suffix Array; [2016-01-22 16:54:56.321] [stderrLog] [info] Loading Position Hash; [2016-01-22 16:56:17.595] [stderrLog] [info] Loading Transcript Info; [2016-01-22 16:56:36.767] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-22 16:56:40.858] [stderrLog] [info] There were 552702 set bits in the bit array; [2016-01-22 16:56:41.758] [stderrLog] [info] Computing transcript lengths; [2016-01-22 16:56:41.761] [stderrLog] [info] Waiting to finish loading hash; Index contained 552702 targets; [2016-01-22 17:00:40.648] [stderrLog] [info] Done loading index; [2016-01-22 17:00:40.648] [jointLog] [info] done; ```. Then the process exits and nothing but the `cmd_info.json` and log file are written to disk. The sequencing library is not an issue, as I can use several other index files successfully. This is reproducible with ~600 sequencing libraries as well. I believe this also occurs using v0.6.0, but will confirm. Since there is no core dump, is there any way for me to debug this?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37
https://github.com/COMBINE-lab/salmon/issues/37:624,Performance,Load,Loading,624,"I have a salmon index which fails silently when used:. ```; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (mapping-based) v0.5.1; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { ... }; # [ libType ] => { IU }; # [ mates1 ] => { ... }; # [ mates2 ] => { ... }; # [ output ] => { ... }; # [ threads ] => { 16 }; Logs will be written to ...; [2016-01-22 16:54:55.564] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi index; [2016-01-22 16:54:56.303] [jointLog] [info] Loading Quasi index; [2016-01-22 16:54:56.320] [stderrLog] [info] Loading Suffix Array; [2016-01-22 16:54:56.321] [stderrLog] [info] Loading Position Hash; [2016-01-22 16:56:17.595] [stderrLog] [info] Loading Transcript Info; [2016-01-22 16:56:36.767] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-22 16:56:40.858] [stderrLog] [info] There were 552702 set bits in the bit array; [2016-01-22 16:56:41.758] [stderrLog] [info] Computing transcript lengths; [2016-01-22 16:56:41.761] [stderrLog] [info] Waiting to finish loading hash; Index contained 552702 targets; [2016-01-22 17:00:40.648] [stderrLog] [info] Done loading index; [2016-01-22 17:00:40.648] [jointLog] [info] done; ```. Then the process exits and nothing but the `cmd_info.json` and log file are written to disk. The sequencing library is not an issue, as I can use several other index files successfully. This is reproducible with ~600 sequencing libraries as well. I believe this also occurs using v0.6.0, but will confirm. Since there is no core dump, is there any way for me to debug this?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37
https://github.com/COMBINE-lab/salmon/issues/37:690,Performance,Load,Loading,690,"I have a salmon index which fails silently when used:. ```; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (mapping-based) v0.5.1; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { ... }; # [ libType ] => { IU }; # [ mates1 ] => { ... }; # [ mates2 ] => { ... }; # [ output ] => { ... }; # [ threads ] => { 16 }; Logs will be written to ...; [2016-01-22 16:54:55.564] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi index; [2016-01-22 16:54:56.303] [jointLog] [info] Loading Quasi index; [2016-01-22 16:54:56.320] [stderrLog] [info] Loading Suffix Array; [2016-01-22 16:54:56.321] [stderrLog] [info] Loading Position Hash; [2016-01-22 16:56:17.595] [stderrLog] [info] Loading Transcript Info; [2016-01-22 16:56:36.767] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-22 16:56:40.858] [stderrLog] [info] There were 552702 set bits in the bit array; [2016-01-22 16:56:41.758] [stderrLog] [info] Computing transcript lengths; [2016-01-22 16:56:41.761] [stderrLog] [info] Waiting to finish loading hash; Index contained 552702 targets; [2016-01-22 17:00:40.648] [stderrLog] [info] Done loading index; [2016-01-22 17:00:40.648] [jointLog] [info] done; ```. Then the process exits and nothing but the `cmd_info.json` and log file are written to disk. The sequencing library is not an issue, as I can use several other index files successfully. This is reproducible with ~600 sequencing libraries as well. I believe this also occurs using v0.6.0, but will confirm. Since there is no core dump, is there any way for me to debug this?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37
https://github.com/COMBINE-lab/salmon/issues/37:757,Performance,Load,Loading,757,"I have a salmon index which fails silently when used:. ```; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (mapping-based) v0.5.1; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { ... }; # [ libType ] => { IU }; # [ mates1 ] => { ... }; # [ mates2 ] => { ... }; # [ output ] => { ... }; # [ threads ] => { 16 }; Logs will be written to ...; [2016-01-22 16:54:55.564] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi index; [2016-01-22 16:54:56.303] [jointLog] [info] Loading Quasi index; [2016-01-22 16:54:56.320] [stderrLog] [info] Loading Suffix Array; [2016-01-22 16:54:56.321] [stderrLog] [info] Loading Position Hash; [2016-01-22 16:56:17.595] [stderrLog] [info] Loading Transcript Info; [2016-01-22 16:56:36.767] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-22 16:56:40.858] [stderrLog] [info] There were 552702 set bits in the bit array; [2016-01-22 16:56:41.758] [stderrLog] [info] Computing transcript lengths; [2016-01-22 16:56:41.761] [stderrLog] [info] Waiting to finish loading hash; Index contained 552702 targets; [2016-01-22 17:00:40.648] [stderrLog] [info] Done loading index; [2016-01-22 17:00:40.648] [jointLog] [info] done; ```. Then the process exits and nothing but the `cmd_info.json` and log file are written to disk. The sequencing library is not an issue, as I can use several other index files successfully. This is reproducible with ~600 sequencing libraries as well. I believe this also occurs using v0.6.0, but will confirm. Since there is no core dump, is there any way for me to debug this?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37
https://github.com/COMBINE-lab/salmon/issues/37:825,Performance,Load,Loading,825,"I have a salmon index which fails silently when used:. ```; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (mapping-based) v0.5.1; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { ... }; # [ libType ] => { IU }; # [ mates1 ] => { ... }; # [ mates2 ] => { ... }; # [ output ] => { ... }; # [ threads ] => { 16 }; Logs will be written to ...; [2016-01-22 16:54:55.564] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi index; [2016-01-22 16:54:56.303] [jointLog] [info] Loading Quasi index; [2016-01-22 16:54:56.320] [stderrLog] [info] Loading Suffix Array; [2016-01-22 16:54:56.321] [stderrLog] [info] Loading Position Hash; [2016-01-22 16:56:17.595] [stderrLog] [info] Loading Transcript Info; [2016-01-22 16:56:36.767] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-22 16:56:40.858] [stderrLog] [info] There were 552702 set bits in the bit array; [2016-01-22 16:56:41.758] [stderrLog] [info] Computing transcript lengths; [2016-01-22 16:56:41.761] [stderrLog] [info] Waiting to finish loading hash; Index contained 552702 targets; [2016-01-22 17:00:40.648] [stderrLog] [info] Done loading index; [2016-01-22 17:00:40.648] [jointLog] [info] done; ```. Then the process exits and nothing but the `cmd_info.json` and log file are written to disk. The sequencing library is not an issue, as I can use several other index files successfully. This is reproducible with ~600 sequencing libraries as well. I believe this also occurs using v0.6.0, but will confirm. Since there is no core dump, is there any way for me to debug this?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37
https://github.com/COMBINE-lab/salmon/issues/37:895,Performance,Load,Loading,895,"I have a salmon index which fails silently when used:. ```; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (mapping-based) v0.5.1; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { ... }; # [ libType ] => { IU }; # [ mates1 ] => { ... }; # [ mates2 ] => { ... }; # [ output ] => { ... }; # [ threads ] => { 16 }; Logs will be written to ...; [2016-01-22 16:54:55.564] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi index; [2016-01-22 16:54:56.303] [jointLog] [info] Loading Quasi index; [2016-01-22 16:54:56.320] [stderrLog] [info] Loading Suffix Array; [2016-01-22 16:54:56.321] [stderrLog] [info] Loading Position Hash; [2016-01-22 16:56:17.595] [stderrLog] [info] Loading Transcript Info; [2016-01-22 16:56:36.767] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-22 16:56:40.858] [stderrLog] [info] There were 552702 set bits in the bit array; [2016-01-22 16:56:41.758] [stderrLog] [info] Computing transcript lengths; [2016-01-22 16:56:41.761] [stderrLog] [info] Waiting to finish loading hash; Index contained 552702 targets; [2016-01-22 17:00:40.648] [stderrLog] [info] Done loading index; [2016-01-22 17:00:40.648] [jointLog] [info] done; ```. Then the process exits and nothing but the `cmd_info.json` and log file are written to disk. The sequencing library is not an issue, as I can use several other index files successfully. This is reproducible with ~600 sequencing libraries as well. I believe this also occurs using v0.6.0, but will confirm. Since there is no core dump, is there any way for me to debug this?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37
https://github.com/COMBINE-lab/salmon/issues/37:1154,Performance,load,loading,1154,"I have a salmon index which fails silently when used:. ```; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (mapping-based) v0.5.1; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { ... }; # [ libType ] => { IU }; # [ mates1 ] => { ... }; # [ mates2 ] => { ... }; # [ output ] => { ... }; # [ threads ] => { 16 }; Logs will be written to ...; [2016-01-22 16:54:55.564] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi index; [2016-01-22 16:54:56.303] [jointLog] [info] Loading Quasi index; [2016-01-22 16:54:56.320] [stderrLog] [info] Loading Suffix Array; [2016-01-22 16:54:56.321] [stderrLog] [info] Loading Position Hash; [2016-01-22 16:56:17.595] [stderrLog] [info] Loading Transcript Info; [2016-01-22 16:56:36.767] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-22 16:56:40.858] [stderrLog] [info] There were 552702 set bits in the bit array; [2016-01-22 16:56:41.758] [stderrLog] [info] Computing transcript lengths; [2016-01-22 16:56:41.761] [stderrLog] [info] Waiting to finish loading hash; Index contained 552702 targets; [2016-01-22 17:00:40.648] [stderrLog] [info] Done loading index; [2016-01-22 17:00:40.648] [jointLog] [info] done; ```. Then the process exits and nothing but the `cmd_info.json` and log file are written to disk. The sequencing library is not an issue, as I can use several other index files successfully. This is reproducible with ~600 sequencing libraries as well. I believe this also occurs using v0.6.0, but will confirm. Since there is no core dump, is there any way for me to debug this?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37
https://github.com/COMBINE-lab/salmon/issues/37:1250,Performance,load,loading,1250,"I have a salmon index which fails silently when used:. ```; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (mapping-based) v0.5.1; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { ... }; # [ libType ] => { IU }; # [ mates1 ] => { ... }; # [ mates2 ] => { ... }; # [ output ] => { ... }; # [ threads ] => { 16 }; Logs will be written to ...; [2016-01-22 16:54:55.564] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi index; [2016-01-22 16:54:56.303] [jointLog] [info] Loading Quasi index; [2016-01-22 16:54:56.320] [stderrLog] [info] Loading Suffix Array; [2016-01-22 16:54:56.321] [stderrLog] [info] Loading Position Hash; [2016-01-22 16:56:17.595] [stderrLog] [info] Loading Transcript Info; [2016-01-22 16:56:36.767] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-22 16:56:40.858] [stderrLog] [info] There were 552702 set bits in the bit array; [2016-01-22 16:56:41.758] [stderrLog] [info] Computing transcript lengths; [2016-01-22 16:56:41.761] [stderrLog] [info] Waiting to finish loading hash; Index contained 552702 targets; [2016-01-22 17:00:40.648] [stderrLog] [info] Done loading index; [2016-01-22 17:00:40.648] [jointLog] [info] done; ```. Then the process exits and nothing but the `cmd_info.json` and log file are written to disk. The sequencing library is not an issue, as I can use several other index files successfully. This is reproducible with ~600 sequencing libraries as well. I believe this also occurs using v0.6.0, but will confirm. Since there is no core dump, is there any way for me to debug this?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37
https://github.com/COMBINE-lab/salmon/issues/37:774,Security,Hash,Hash,774,"I have a salmon index which fails silently when used:. ```; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (mapping-based) v0.5.1; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { ... }; # [ libType ] => { IU }; # [ mates1 ] => { ... }; # [ mates2 ] => { ... }; # [ output ] => { ... }; # [ threads ] => { 16 }; Logs will be written to ...; [2016-01-22 16:54:55.564] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi index; [2016-01-22 16:54:56.303] [jointLog] [info] Loading Quasi index; [2016-01-22 16:54:56.320] [stderrLog] [info] Loading Suffix Array; [2016-01-22 16:54:56.321] [stderrLog] [info] Loading Position Hash; [2016-01-22 16:56:17.595] [stderrLog] [info] Loading Transcript Info; [2016-01-22 16:56:36.767] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-22 16:56:40.858] [stderrLog] [info] There were 552702 set bits in the bit array; [2016-01-22 16:56:41.758] [stderrLog] [info] Computing transcript lengths; [2016-01-22 16:56:41.761] [stderrLog] [info] Waiting to finish loading hash; Index contained 552702 targets; [2016-01-22 17:00:40.648] [stderrLog] [info] Done loading index; [2016-01-22 17:00:40.648] [jointLog] [info] done; ```. Then the process exits and nothing but the `cmd_info.json` and log file are written to disk. The sequencing library is not an issue, as I can use several other index files successfully. This is reproducible with ~600 sequencing libraries as well. I believe this also occurs using v0.6.0, but will confirm. Since there is no core dump, is there any way for me to debug this?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37
https://github.com/COMBINE-lab/salmon/issues/37:1162,Security,hash,hash,1162,"I have a salmon index which fails silently when used:. ```; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (mapping-based) v0.5.1; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { ... }; # [ libType ] => { IU }; # [ mates1 ] => { ... }; # [ mates2 ] => { ... }; # [ output ] => { ... }; # [ threads ] => { 16 }; Logs will be written to ...; [2016-01-22 16:54:55.564] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi index; [2016-01-22 16:54:56.303] [jointLog] [info] Loading Quasi index; [2016-01-22 16:54:56.320] [stderrLog] [info] Loading Suffix Array; [2016-01-22 16:54:56.321] [stderrLog] [info] Loading Position Hash; [2016-01-22 16:56:17.595] [stderrLog] [info] Loading Transcript Info; [2016-01-22 16:56:36.767] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-22 16:56:40.858] [stderrLog] [info] There were 552702 set bits in the bit array; [2016-01-22 16:56:41.758] [stderrLog] [info] Computing transcript lengths; [2016-01-22 16:56:41.761] [stderrLog] [info] Waiting to finish loading hash; Index contained 552702 targets; [2016-01-22 17:00:40.648] [stderrLog] [info] Done loading index; [2016-01-22 17:00:40.648] [jointLog] [info] done; ```. Then the process exits and nothing but the `cmd_info.json` and log file are written to disk. The sequencing library is not an issue, as I can use several other index files successfully. This is reproducible with ~600 sequencing libraries as well. I believe this also occurs using v0.6.0, but will confirm. Since there is no core dump, is there any way for me to debug this?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37
https://github.com/COMBINE-lab/salmon/issues/37:434,Testability,Log,Logs,434,"I have a salmon index which fails silently when used:. ```; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (mapping-based) v0.5.1; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { ... }; # [ libType ] => { IU }; # [ mates1 ] => { ... }; # [ mates2 ] => { ... }; # [ output ] => { ... }; # [ threads ] => { 16 }; Logs will be written to ...; [2016-01-22 16:54:55.564] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi index; [2016-01-22 16:54:56.303] [jointLog] [info] Loading Quasi index; [2016-01-22 16:54:56.320] [stderrLog] [info] Loading Suffix Array; [2016-01-22 16:54:56.321] [stderrLog] [info] Loading Position Hash; [2016-01-22 16:56:17.595] [stderrLog] [info] Loading Transcript Info; [2016-01-22 16:56:36.767] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-22 16:56:40.858] [stderrLog] [info] There were 552702 set bits in the bit array; [2016-01-22 16:56:41.758] [stderrLog] [info] Computing transcript lengths; [2016-01-22 16:56:41.761] [stderrLog] [info] Waiting to finish loading hash; Index contained 552702 targets; [2016-01-22 17:00:40.648] [stderrLog] [info] Done loading index; [2016-01-22 17:00:40.648] [jointLog] [info] done; ```. Then the process exits and nothing but the `cmd_info.json` and log file are written to disk. The sequencing library is not an issue, as I can use several other index files successfully. This is reproducible with ~600 sequencing libraries as well. I believe this also occurs using v0.6.0, but will confirm. Since there is no core dump, is there any way for me to debug this?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37
https://github.com/COMBINE-lab/salmon/issues/37:1383,Testability,log,log,1383,"I have a salmon index which fails silently when used:. ```; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (mapping-based) v0.5.1; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { ... }; # [ libType ] => { IU }; # [ mates1 ] => { ... }; # [ mates2 ] => { ... }; # [ output ] => { ... }; # [ threads ] => { 16 }; Logs will be written to ...; [2016-01-22 16:54:55.564] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi index; [2016-01-22 16:54:56.303] [jointLog] [info] Loading Quasi index; [2016-01-22 16:54:56.320] [stderrLog] [info] Loading Suffix Array; [2016-01-22 16:54:56.321] [stderrLog] [info] Loading Position Hash; [2016-01-22 16:56:17.595] [stderrLog] [info] Loading Transcript Info; [2016-01-22 16:56:36.767] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-22 16:56:40.858] [stderrLog] [info] There were 552702 set bits in the bit array; [2016-01-22 16:56:41.758] [stderrLog] [info] Computing transcript lengths; [2016-01-22 16:56:41.761] [stderrLog] [info] Waiting to finish loading hash; Index contained 552702 targets; [2016-01-22 17:00:40.648] [stderrLog] [info] Done loading index; [2016-01-22 17:00:40.648] [jointLog] [info] done; ```. Then the process exits and nothing but the `cmd_info.json` and log file are written to disk. The sequencing library is not an issue, as I can use several other index files successfully. This is reproducible with ~600 sequencing libraries as well. I believe this also occurs using v0.6.0, but will confirm. Since there is no core dump, is there any way for me to debug this?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37
https://github.com/COMBINE-lab/salmon/issues/41:120,Availability,error,error,120,"If the read length in the FASTQ input files to Salmon are less than the k-mer size used when building the index then no error is produced but a mapping rate of 0% is reported. It would be useful for Salmon to throw an error telling the user that the mapping will surely fail for this reason (as opposed to others such as wrong reference transcriptome or wrong library type), and suggest rebuilding the index using a smaller k-mer size.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/41
https://github.com/COMBINE-lab/salmon/issues/41:218,Availability,error,error,218,"If the read length in the FASTQ input files to Salmon are less than the k-mer size used when building the index then no error is produced but a mapping rate of 0% is reported. It would be useful for Salmon to throw an error telling the user that the mapping will surely fail for this reason (as opposed to others such as wrong reference transcriptome or wrong library type), and suggest rebuilding the index using a smaller k-mer size.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/41
https://github.com/COMBINE-lab/salmon/issues/42:254,Availability,error,error,254,"Hi,. First of all, thank you very much for this tool! I'm excited to try it after reading your bioRxiv paper and your blog post. Following your installation instructions, I got to the step where I run `CMake [flags] ..`, and it failed with the following error:. ```; CMake Error at src/CMakeLists.txt:94 (add_executable):; Cannot find source file:. /home/wulab2015linux/warren/Software/salmon/external/install/src/rapmap/RapMapFileSystem.cpp. Tried extensions .c .C .c++ .cc .cpp .cxx .m .M .mm .h .hh .h++ .hm .hpp; .hxx .in .txx; ```. I realized that I did not have curl installed (I use `wget` all of the time, on a Ubuntu 14.04.4 system), so the `fetchRapMap.sh` script failed. I tried rerunning the `Cmake` command after installing `curl` with `apt-get`, and it still failed. However, the script worked after I manually ran `fetchRapMap.sh`, and the build was fine after that. . I'm a complete noob when it comes to CMake files, so I don't know what happened, but I wanted to bring this to your attention and provide users that might have the same issue with a workaround.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/42
https://github.com/COMBINE-lab/salmon/issues/42:273,Availability,Error,Error,273,"Hi,. First of all, thank you very much for this tool! I'm excited to try it after reading your bioRxiv paper and your blog post. Following your installation instructions, I got to the step where I run `CMake [flags] ..`, and it failed with the following error:. ```; CMake Error at src/CMakeLists.txt:94 (add_executable):; Cannot find source file:. /home/wulab2015linux/warren/Software/salmon/external/install/src/rapmap/RapMapFileSystem.cpp. Tried extensions .c .C .c++ .cc .cpp .cxx .m .M .mm .h .hh .h++ .hm .hpp; .hxx .in .txx; ```. I realized that I did not have curl installed (I use `wget` all of the time, on a Ubuntu 14.04.4 system), so the `fetchRapMap.sh` script failed. I tried rerunning the `Cmake` command after installing `curl` with `apt-get`, and it still failed. However, the script worked after I manually ran `fetchRapMap.sh`, and the build was fine after that. . I'm a complete noob when it comes to CMake files, so I don't know what happened, but I wanted to bring this to your attention and provide users that might have the same issue with a workaround.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/42
https://github.com/COMBINE-lab/salmon/issues/42:144,Deployability,install,installation,144,"Hi,. First of all, thank you very much for this tool! I'm excited to try it after reading your bioRxiv paper and your blog post. Following your installation instructions, I got to the step where I run `CMake [flags] ..`, and it failed with the following error:. ```; CMake Error at src/CMakeLists.txt:94 (add_executable):; Cannot find source file:. /home/wulab2015linux/warren/Software/salmon/external/install/src/rapmap/RapMapFileSystem.cpp. Tried extensions .c .C .c++ .cc .cpp .cxx .m .M .mm .h .hh .h++ .hm .hpp; .hxx .in .txx; ```. I realized that I did not have curl installed (I use `wget` all of the time, on a Ubuntu 14.04.4 system), so the `fetchRapMap.sh` script failed. I tried rerunning the `Cmake` command after installing `curl` with `apt-get`, and it still failed. However, the script worked after I manually ran `fetchRapMap.sh`, and the build was fine after that. . I'm a complete noob when it comes to CMake files, so I don't know what happened, but I wanted to bring this to your attention and provide users that might have the same issue with a workaround.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/42
https://github.com/COMBINE-lab/salmon/issues/42:402,Deployability,install,install,402,"Hi,. First of all, thank you very much for this tool! I'm excited to try it after reading your bioRxiv paper and your blog post. Following your installation instructions, I got to the step where I run `CMake [flags] ..`, and it failed with the following error:. ```; CMake Error at src/CMakeLists.txt:94 (add_executable):; Cannot find source file:. /home/wulab2015linux/warren/Software/salmon/external/install/src/rapmap/RapMapFileSystem.cpp. Tried extensions .c .C .c++ .cc .cpp .cxx .m .M .mm .h .hh .h++ .hm .hpp; .hxx .in .txx; ```. I realized that I did not have curl installed (I use `wget` all of the time, on a Ubuntu 14.04.4 system), so the `fetchRapMap.sh` script failed. I tried rerunning the `Cmake` command after installing `curl` with `apt-get`, and it still failed. However, the script worked after I manually ran `fetchRapMap.sh`, and the build was fine after that. . I'm a complete noob when it comes to CMake files, so I don't know what happened, but I wanted to bring this to your attention and provide users that might have the same issue with a workaround.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/42
https://github.com/COMBINE-lab/salmon/issues/42:573,Deployability,install,installed,573,"Hi,. First of all, thank you very much for this tool! I'm excited to try it after reading your bioRxiv paper and your blog post. Following your installation instructions, I got to the step where I run `CMake [flags] ..`, and it failed with the following error:. ```; CMake Error at src/CMakeLists.txt:94 (add_executable):; Cannot find source file:. /home/wulab2015linux/warren/Software/salmon/external/install/src/rapmap/RapMapFileSystem.cpp. Tried extensions .c .C .c++ .cc .cpp .cxx .m .M .mm .h .hh .h++ .hm .hpp; .hxx .in .txx; ```. I realized that I did not have curl installed (I use `wget` all of the time, on a Ubuntu 14.04.4 system), so the `fetchRapMap.sh` script failed. I tried rerunning the `Cmake` command after installing `curl` with `apt-get`, and it still failed. However, the script worked after I manually ran `fetchRapMap.sh`, and the build was fine after that. . I'm a complete noob when it comes to CMake files, so I don't know what happened, but I wanted to bring this to your attention and provide users that might have the same issue with a workaround.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/42
https://github.com/COMBINE-lab/salmon/issues/42:726,Deployability,install,installing,726,"Hi,. First of all, thank you very much for this tool! I'm excited to try it after reading your bioRxiv paper and your blog post. Following your installation instructions, I got to the step where I run `CMake [flags] ..`, and it failed with the following error:. ```; CMake Error at src/CMakeLists.txt:94 (add_executable):; Cannot find source file:. /home/wulab2015linux/warren/Software/salmon/external/install/src/rapmap/RapMapFileSystem.cpp. Tried extensions .c .C .c++ .cc .cpp .cxx .m .M .mm .h .hh .h++ .hm .hpp; .hxx .in .txx; ```. I realized that I did not have curl installed (I use `wget` all of the time, on a Ubuntu 14.04.4 system), so the `fetchRapMap.sh` script failed. I tried rerunning the `Cmake` command after installing `curl` with `apt-get`, and it still failed. However, the script worked after I manually ran `fetchRapMap.sh`, and the build was fine after that. . I'm a complete noob when it comes to CMake files, so I don't know what happened, but I wanted to bring this to your attention and provide users that might have the same issue with a workaround.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/42
https://github.com/COMBINE-lab/salmon/issues/43:56,Availability,error,error,56,I'm trying to build version 0.6 and I get the following error:. ```; cd /root/soft/salmon/salmon-0.6.0/build/src && /usr/local/bin/cmake -E cmake_link_script CMakeFiles/salmon.dir/link.txt --verbose=1; /opt/rh/devtoolset-2/root/usr/bin/c++ -pthread -funroll-loops -fPIC -fomit-frame-pointer -Ofast -DRAPMAP_SALMON_SUPPORT -DHAVE_ANSI_TERM -DHAVE_SSTREAM -Wall -Wno-reorder -Wno-unused-variable -std=c++11 -Wreturn-type -Werror=return-type -static-libstdc++ -Wno-deprecated-register -Wno-unused-local-typedefs -L/opt/rh/devtoolset-2/root/usr/lib64 -L/opt/rh/devtoolset-2/root/usr/lib CMakeFiles/salmon.dir/QSufSort.c.o CMakeFiles/salmon.dir/is.c.o CMakeFiles/salmon.dir/bwt_gen.c.o CMakeFiles/salmon.dir/bwtindex.c.o CMakeFiles/salmon.dir/xxhash.c.o CMakeFiles/salmon.dir/CollapsedEMOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedGibbsSampler.cpp.o CMakeFiles/salmon.dir/Salmon.cpp.o CMakeFiles/salmon.dir/BuildSalmonIndex.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMakeFiles/salmon.dir/FragmentStartPositionDistribution.cpp.o CMakeFiles/salmon.dir/SequenceBiasModel.cpp.o CMakeFiles/salmon.dir/StadenUtils.cpp.o CMakeFiles/salmon.dir/TranscriptGroup.cpp.o CMakeFiles/salmon.dir/GZipWriter.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapFileSystem.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAIndexer.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAIndex.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAMapper.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapUtils.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/HitManager.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/rank9b.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/bit_array.c.o CMakeFiles/salmon.dir/FASTAParser.cpp.o CMakeFiles/salmon.dir/ErrorModel.cpp.o CMakeFiles/salmon.dir/AlignmentModel.cpp.o CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/43
https://github.com/COMBINE-lab/salmon/issues/43:1891,Availability,Error,ErrorModel,1891,salmon.dir/BuildSalmonIndex.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMakeFiles/salmon.dir/FragmentStartPositionDistribution.cpp.o CMakeFiles/salmon.dir/SequenceBiasModel.cpp.o CMakeFiles/salmon.dir/StadenUtils.cpp.o CMakeFiles/salmon.dir/TranscriptGroup.cpp.o CMakeFiles/salmon.dir/GZipWriter.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapFileSystem.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAIndexer.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAIndex.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAMapper.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapUtils.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/HitManager.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/rank9b.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/bit_array.c.o CMakeFiles/salmon.dir/FASTAParser.cpp.o CMakeFiles/salmon.dir/ErrorModel.cpp.o CMakeFiles/salmon.dir/AlignmentModel.cpp.o CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o -o salmon -L/root/soft/salmon/salmon-0.6.0/lib -L/root/soft/salmon/salmon-0.6.0/external/install/lib -L/opt/boost/boost_1_57_0/lib -rdynamic libsalmon_core.a -lgff -lpthread /opt/boost/boost_1_57_0/lib/libboost_iostreams.a /opt/boost/boost_1_57_0/lib/libboost_filesystem.a /opt/boost/boost_1_57_0/lib/libboost_system.a /opt/boost/boost_1_57_0/lib/libboost_thread.a /opt/boost/boost_1_57_0/lib/libboost_timer.a /opt/boost/boost_1_57_0/lib/libboost_chrono.a /opt/boost/boost_1_57_0/lib/libboost_program_options.a /opt/boost/boost_1_57_0/lib/libboost_serialization.a ../../external/install/lib/libstaden-read.a -lz ../../external/install/lib/libdivsufsort.a ../../external/install/lib/libdivsufsort64.a ../../external/install/lib/libjellyfish-2.0.a ../../external/install/lib/libbwa.a -lm ../../external/install/lib/liblzma.a -lbz2 -ltbb -ltbbmalloc -lgomp -lrt ../../external/install/lib/libje,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/43
https://github.com/COMBINE-lab/salmon/issues/43:1291,Deployability,install,install,1291,APMAP_SALMON_SUPPORT -DHAVE_ANSI_TERM -DHAVE_SSTREAM -Wall -Wno-reorder -Wno-unused-variable -std=c++11 -Wreturn-type -Werror=return-type -static-libstdc++ -Wno-deprecated-register -Wno-unused-local-typedefs -L/opt/rh/devtoolset-2/root/usr/lib64 -L/opt/rh/devtoolset-2/root/usr/lib CMakeFiles/salmon.dir/QSufSort.c.o CMakeFiles/salmon.dir/is.c.o CMakeFiles/salmon.dir/bwt_gen.c.o CMakeFiles/salmon.dir/bwtindex.c.o CMakeFiles/salmon.dir/xxhash.c.o CMakeFiles/salmon.dir/CollapsedEMOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedGibbsSampler.cpp.o CMakeFiles/salmon.dir/Salmon.cpp.o CMakeFiles/salmon.dir/BuildSalmonIndex.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMakeFiles/salmon.dir/FragmentStartPositionDistribution.cpp.o CMakeFiles/salmon.dir/SequenceBiasModel.cpp.o CMakeFiles/salmon.dir/StadenUtils.cpp.o CMakeFiles/salmon.dir/TranscriptGroup.cpp.o CMakeFiles/salmon.dir/GZipWriter.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapFileSystem.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAIndexer.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAIndex.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAMapper.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapUtils.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/HitManager.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/rank9b.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/bit_array.c.o CMakeFiles/salmon.dir/FASTAParser.cpp.o CMakeFiles/salmon.dir/ErrorModel.cpp.o CMakeFiles/salmon.dir/AlignmentModel.cpp.o CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o -o salmon -L/root/soft/salmon/salmon-0.6.0/lib -L/root/soft/salmon/salmon-0.6.0/external/install/lib -L/opt/boost/boost_1_57_0/lib -rdynamic libsalmon_core.a -lgff -lpthread /opt/boost/boost_1_57_0/lib/libboost_iostreams.a /opt/boost/boost_1_57_0/lib/libboost_filesystem.a /opt/boost/boost_1_57_0/,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/43
https://github.com/COMBINE-lab/salmon/issues/43:1367,Deployability,install,install,1367,o-unused-variable -std=c++11 -Wreturn-type -Werror=return-type -static-libstdc++ -Wno-deprecated-register -Wno-unused-local-typedefs -L/opt/rh/devtoolset-2/root/usr/lib64 -L/opt/rh/devtoolset-2/root/usr/lib CMakeFiles/salmon.dir/QSufSort.c.o CMakeFiles/salmon.dir/is.c.o CMakeFiles/salmon.dir/bwt_gen.c.o CMakeFiles/salmon.dir/bwtindex.c.o CMakeFiles/salmon.dir/xxhash.c.o CMakeFiles/salmon.dir/CollapsedEMOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedGibbsSampler.cpp.o CMakeFiles/salmon.dir/Salmon.cpp.o CMakeFiles/salmon.dir/BuildSalmonIndex.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMakeFiles/salmon.dir/FragmentStartPositionDistribution.cpp.o CMakeFiles/salmon.dir/SequenceBiasModel.cpp.o CMakeFiles/salmon.dir/StadenUtils.cpp.o CMakeFiles/salmon.dir/TranscriptGroup.cpp.o CMakeFiles/salmon.dir/GZipWriter.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapFileSystem.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAIndexer.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAIndex.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAMapper.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapUtils.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/HitManager.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/rank9b.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/bit_array.c.o CMakeFiles/salmon.dir/FASTAParser.cpp.o CMakeFiles/salmon.dir/ErrorModel.cpp.o CMakeFiles/salmon.dir/AlignmentModel.cpp.o CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o -o salmon -L/root/soft/salmon/salmon-0.6.0/lib -L/root/soft/salmon/salmon-0.6.0/external/install/lib -L/opt/boost/boost_1_57_0/lib -rdynamic libsalmon_core.a -lgff -lpthread /opt/boost/boost_1_57_0/lib/libboost_iostreams.a /opt/boost/boost_1_57_0/lib/libboost_filesystem.a /opt/boost/boost_1_57_0/lib/libboost_system.a /opt/boost/boost_1_57_0/lib/libboost_thread.a /opt/boo,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/43
https://github.com/COMBINE-lab/salmon/issues/43:1442,Deployability,install,install,1442,stdc++ -Wno-deprecated-register -Wno-unused-local-typedefs -L/opt/rh/devtoolset-2/root/usr/lib64 -L/opt/rh/devtoolset-2/root/usr/lib CMakeFiles/salmon.dir/QSufSort.c.o CMakeFiles/salmon.dir/is.c.o CMakeFiles/salmon.dir/bwt_gen.c.o CMakeFiles/salmon.dir/bwtindex.c.o CMakeFiles/salmon.dir/xxhash.c.o CMakeFiles/salmon.dir/CollapsedEMOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedGibbsSampler.cpp.o CMakeFiles/salmon.dir/Salmon.cpp.o CMakeFiles/salmon.dir/BuildSalmonIndex.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMakeFiles/salmon.dir/FragmentStartPositionDistribution.cpp.o CMakeFiles/salmon.dir/SequenceBiasModel.cpp.o CMakeFiles/salmon.dir/StadenUtils.cpp.o CMakeFiles/salmon.dir/TranscriptGroup.cpp.o CMakeFiles/salmon.dir/GZipWriter.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapFileSystem.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAIndexer.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAIndex.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAMapper.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapUtils.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/HitManager.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/rank9b.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/bit_array.c.o CMakeFiles/salmon.dir/FASTAParser.cpp.o CMakeFiles/salmon.dir/ErrorModel.cpp.o CMakeFiles/salmon.dir/AlignmentModel.cpp.o CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o -o salmon -L/root/soft/salmon/salmon-0.6.0/lib -L/root/soft/salmon/salmon-0.6.0/external/install/lib -L/opt/boost/boost_1_57_0/lib -rdynamic libsalmon_core.a -lgff -lpthread /opt/boost/boost_1_57_0/lib/libboost_iostreams.a /opt/boost/boost_1_57_0/lib/libboost_filesystem.a /opt/boost/boost_1_57_0/lib/libboost_system.a /opt/boost/boost_1_57_0/lib/libboost_thread.a /opt/boost/boost_1_57_0/lib/libboost_timer.a /opt/boost/boost_1_57_0/lib/libboost_,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/43
https://github.com/COMBINE-lab/salmon/issues/43:1515,Deployability,install,install,1515,olset-2/root/usr/lib64 -L/opt/rh/devtoolset-2/root/usr/lib CMakeFiles/salmon.dir/QSufSort.c.o CMakeFiles/salmon.dir/is.c.o CMakeFiles/salmon.dir/bwt_gen.c.o CMakeFiles/salmon.dir/bwtindex.c.o CMakeFiles/salmon.dir/xxhash.c.o CMakeFiles/salmon.dir/CollapsedEMOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedGibbsSampler.cpp.o CMakeFiles/salmon.dir/Salmon.cpp.o CMakeFiles/salmon.dir/BuildSalmonIndex.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMakeFiles/salmon.dir/FragmentStartPositionDistribution.cpp.o CMakeFiles/salmon.dir/SequenceBiasModel.cpp.o CMakeFiles/salmon.dir/StadenUtils.cpp.o CMakeFiles/salmon.dir/TranscriptGroup.cpp.o CMakeFiles/salmon.dir/GZipWriter.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapFileSystem.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAIndexer.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAIndex.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAMapper.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapUtils.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/HitManager.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/rank9b.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/bit_array.c.o CMakeFiles/salmon.dir/FASTAParser.cpp.o CMakeFiles/salmon.dir/ErrorModel.cpp.o CMakeFiles/salmon.dir/AlignmentModel.cpp.o CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o -o salmon -L/root/soft/salmon/salmon-0.6.0/lib -L/root/soft/salmon/salmon-0.6.0/external/install/lib -L/opt/boost/boost_1_57_0/lib -rdynamic libsalmon_core.a -lgff -lpthread /opt/boost/boost_1_57_0/lib/libboost_iostreams.a /opt/boost/boost_1_57_0/lib/libboost_filesystem.a /opt/boost/boost_1_57_0/lib/libboost_system.a /opt/boost/boost_1_57_0/lib/libboost_thread.a /opt/boost/boost_1_57_0/lib/libboost_timer.a /opt/boost/boost_1_57_0/lib/libboost_chrono.a /opt/boost/boost_1_57_0/lib/libboost_program_options.a /opt/boos,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/43
https://github.com/COMBINE-lab/salmon/issues/43:1589,Deployability,install,install,1589,lmon.dir/QSufSort.c.o CMakeFiles/salmon.dir/is.c.o CMakeFiles/salmon.dir/bwt_gen.c.o CMakeFiles/salmon.dir/bwtindex.c.o CMakeFiles/salmon.dir/xxhash.c.o CMakeFiles/salmon.dir/CollapsedEMOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedGibbsSampler.cpp.o CMakeFiles/salmon.dir/Salmon.cpp.o CMakeFiles/salmon.dir/BuildSalmonIndex.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMakeFiles/salmon.dir/FragmentStartPositionDistribution.cpp.o CMakeFiles/salmon.dir/SequenceBiasModel.cpp.o CMakeFiles/salmon.dir/StadenUtils.cpp.o CMakeFiles/salmon.dir/TranscriptGroup.cpp.o CMakeFiles/salmon.dir/GZipWriter.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapFileSystem.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAIndexer.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAIndex.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAMapper.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapUtils.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/HitManager.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/rank9b.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/bit_array.c.o CMakeFiles/salmon.dir/FASTAParser.cpp.o CMakeFiles/salmon.dir/ErrorModel.cpp.o CMakeFiles/salmon.dir/AlignmentModel.cpp.o CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o -o salmon -L/root/soft/salmon/salmon-0.6.0/lib -L/root/soft/salmon/salmon-0.6.0/external/install/lib -L/opt/boost/boost_1_57_0/lib -rdynamic libsalmon_core.a -lgff -lpthread /opt/boost/boost_1_57_0/lib/libboost_iostreams.a /opt/boost/boost_1_57_0/lib/libboost_filesystem.a /opt/boost/boost_1_57_0/lib/libboost_system.a /opt/boost/boost_1_57_0/lib/libboost_thread.a /opt/boost/boost_1_57_0/lib/libboost_timer.a /opt/boost/boost_1_57_0/lib/libboost_chrono.a /opt/boost/boost_1_57_0/lib/libboost_program_options.a /opt/boost/boost_1_57_0/lib/libboost_serialization.a ../../external/install/lib/li,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/43
https://github.com/COMBINE-lab/salmon/issues/43:1660,Deployability,install,install,1660,r/bwt_gen.c.o CMakeFiles/salmon.dir/bwtindex.c.o CMakeFiles/salmon.dir/xxhash.c.o CMakeFiles/salmon.dir/CollapsedEMOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedGibbsSampler.cpp.o CMakeFiles/salmon.dir/Salmon.cpp.o CMakeFiles/salmon.dir/BuildSalmonIndex.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMakeFiles/salmon.dir/FragmentStartPositionDistribution.cpp.o CMakeFiles/salmon.dir/SequenceBiasModel.cpp.o CMakeFiles/salmon.dir/StadenUtils.cpp.o CMakeFiles/salmon.dir/TranscriptGroup.cpp.o CMakeFiles/salmon.dir/GZipWriter.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapFileSystem.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAIndexer.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAIndex.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAMapper.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapUtils.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/HitManager.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/rank9b.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/bit_array.c.o CMakeFiles/salmon.dir/FASTAParser.cpp.o CMakeFiles/salmon.dir/ErrorModel.cpp.o CMakeFiles/salmon.dir/AlignmentModel.cpp.o CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o -o salmon -L/root/soft/salmon/salmon-0.6.0/lib -L/root/soft/salmon/salmon-0.6.0/external/install/lib -L/opt/boost/boost_1_57_0/lib -rdynamic libsalmon_core.a -lgff -lpthread /opt/boost/boost_1_57_0/lib/libboost_iostreams.a /opt/boost/boost_1_57_0/lib/libboost_filesystem.a /opt/boost/boost_1_57_0/lib/libboost_system.a /opt/boost/boost_1_57_0/lib/libboost_thread.a /opt/boost/boost_1_57_0/lib/libboost_timer.a /opt/boost/boost_1_57_0/lib/libboost_chrono.a /opt/boost/boost_1_57_0/lib/libboost_program_options.a /opt/boost/boost_1_57_0/lib/libboost_serialization.a ../../external/install/lib/libstaden-read.a -lz ../../external/install/lib/libdivsufsort.a ../../ex,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/43
https://github.com/COMBINE-lab/salmon/issues/43:1730,Deployability,install,install,1730,ir/xxhash.c.o CMakeFiles/salmon.dir/CollapsedEMOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedGibbsSampler.cpp.o CMakeFiles/salmon.dir/Salmon.cpp.o CMakeFiles/salmon.dir/BuildSalmonIndex.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMakeFiles/salmon.dir/FragmentStartPositionDistribution.cpp.o CMakeFiles/salmon.dir/SequenceBiasModel.cpp.o CMakeFiles/salmon.dir/StadenUtils.cpp.o CMakeFiles/salmon.dir/TranscriptGroup.cpp.o CMakeFiles/salmon.dir/GZipWriter.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapFileSystem.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAIndexer.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAIndex.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAMapper.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapUtils.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/HitManager.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/rank9b.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/bit_array.c.o CMakeFiles/salmon.dir/FASTAParser.cpp.o CMakeFiles/salmon.dir/ErrorModel.cpp.o CMakeFiles/salmon.dir/AlignmentModel.cpp.o CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o -o salmon -L/root/soft/salmon/salmon-0.6.0/lib -L/root/soft/salmon/salmon-0.6.0/external/install/lib -L/opt/boost/boost_1_57_0/lib -rdynamic libsalmon_core.a -lgff -lpthread /opt/boost/boost_1_57_0/lib/libboost_iostreams.a /opt/boost/boost_1_57_0/lib/libboost_filesystem.a /opt/boost/boost_1_57_0/lib/libboost_system.a /opt/boost/boost_1_57_0/lib/libboost_thread.a /opt/boost/boost_1_57_0/lib/libboost_timer.a /opt/boost/boost_1_57_0/lib/libboost_chrono.a /opt/boost/boost_1_57_0/lib/libboost_program_options.a /opt/boost/boost_1_57_0/lib/libboost_serialization.a ../../external/install/lib/libstaden-read.a -lz ../../external/install/lib/libdivsufsort.a ../../external/install/lib/libdivsufsort64.a ../../external/install/lib/libj,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/43
https://github.com/COMBINE-lab/salmon/issues/43:1796,Deployability,install,install,1796,eFiles/salmon.dir/CollapsedGibbsSampler.cpp.o CMakeFiles/salmon.dir/Salmon.cpp.o CMakeFiles/salmon.dir/BuildSalmonIndex.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMakeFiles/salmon.dir/FragmentStartPositionDistribution.cpp.o CMakeFiles/salmon.dir/SequenceBiasModel.cpp.o CMakeFiles/salmon.dir/StadenUtils.cpp.o CMakeFiles/salmon.dir/TranscriptGroup.cpp.o CMakeFiles/salmon.dir/GZipWriter.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapFileSystem.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAIndexer.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAIndex.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAMapper.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapUtils.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/HitManager.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/rank9b.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/bit_array.c.o CMakeFiles/salmon.dir/FASTAParser.cpp.o CMakeFiles/salmon.dir/ErrorModel.cpp.o CMakeFiles/salmon.dir/AlignmentModel.cpp.o CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o -o salmon -L/root/soft/salmon/salmon-0.6.0/lib -L/root/soft/salmon/salmon-0.6.0/external/install/lib -L/opt/boost/boost_1_57_0/lib -rdynamic libsalmon_core.a -lgff -lpthread /opt/boost/boost_1_57_0/lib/libboost_iostreams.a /opt/boost/boost_1_57_0/lib/libboost_filesystem.a /opt/boost/boost_1_57_0/lib/libboost_system.a /opt/boost/boost_1_57_0/lib/libboost_thread.a /opt/boost/boost_1_57_0/lib/libboost_timer.a /opt/boost/boost_1_57_0/lib/libboost_chrono.a /opt/boost/boost_1_57_0/lib/libboost_program_options.a /opt/boost/boost_1_57_0/lib/libboost_serialization.a ../../external/install/lib/libstaden-read.a -lz ../../external/install/lib/libdivsufsort.a ../../external/install/lib/libdivsufsort64.a ../../external/install/lib/libjellyfish-2.0.a ../../external/install/lib/libbwa.a -lm ../../externa,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/43
https://github.com/COMBINE-lab/salmon/issues/43:2093,Deployability,install,install,2093,"sModel.cpp.o CMakeFiles/salmon.dir/StadenUtils.cpp.o CMakeFiles/salmon.dir/TranscriptGroup.cpp.o CMakeFiles/salmon.dir/GZipWriter.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapFileSystem.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAIndexer.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAIndex.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAMapper.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapUtils.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/HitManager.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/rank9b.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/bit_array.c.o CMakeFiles/salmon.dir/FASTAParser.cpp.o CMakeFiles/salmon.dir/ErrorModel.cpp.o CMakeFiles/salmon.dir/AlignmentModel.cpp.o CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o -o salmon -L/root/soft/salmon/salmon-0.6.0/lib -L/root/soft/salmon/salmon-0.6.0/external/install/lib -L/opt/boost/boost_1_57_0/lib -rdynamic libsalmon_core.a -lgff -lpthread /opt/boost/boost_1_57_0/lib/libboost_iostreams.a /opt/boost/boost_1_57_0/lib/libboost_filesystem.a /opt/boost/boost_1_57_0/lib/libboost_system.a /opt/boost/boost_1_57_0/lib/libboost_thread.a /opt/boost/boost_1_57_0/lib/libboost_timer.a /opt/boost/boost_1_57_0/lib/libboost_chrono.a /opt/boost/boost_1_57_0/lib/libboost_program_options.a /opt/boost/boost_1_57_0/lib/libboost_serialization.a ../../external/install/lib/libstaden-read.a -lz ../../external/install/lib/libdivsufsort.a ../../external/install/lib/libdivsufsort64.a ../../external/install/lib/libjellyfish-2.0.a ../../external/install/lib/libbwa.a -lm ../../external/install/lib/liblzma.a -lbz2 -ltbb -ltbbmalloc -lgomp -lrt ../../external/install/lib/libjemalloc.a -Wl,-rpath,""\$ORIGIN/../lib:\$ORIGIN/../../lib:\$ORIGIN/:\$ORIGIN/../../external/install/lib""; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/43
https://github.com/COMBINE-lab/salmon/issues/43:2583,Deployability,install,install,2583,"stall/src/rapmap/RapMapUtils.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/HitManager.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/rank9b.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/bit_array.c.o CMakeFiles/salmon.dir/FASTAParser.cpp.o CMakeFiles/salmon.dir/ErrorModel.cpp.o CMakeFiles/salmon.dir/AlignmentModel.cpp.o CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o -o salmon -L/root/soft/salmon/salmon-0.6.0/lib -L/root/soft/salmon/salmon-0.6.0/external/install/lib -L/opt/boost/boost_1_57_0/lib -rdynamic libsalmon_core.a -lgff -lpthread /opt/boost/boost_1_57_0/lib/libboost_iostreams.a /opt/boost/boost_1_57_0/lib/libboost_filesystem.a /opt/boost/boost_1_57_0/lib/libboost_system.a /opt/boost/boost_1_57_0/lib/libboost_thread.a /opt/boost/boost_1_57_0/lib/libboost_timer.a /opt/boost/boost_1_57_0/lib/libboost_chrono.a /opt/boost/boost_1_57_0/lib/libboost_program_options.a /opt/boost/boost_1_57_0/lib/libboost_serialization.a ../../external/install/lib/libstaden-read.a -lz ../../external/install/lib/libdivsufsort.a ../../external/install/lib/libdivsufsort64.a ../../external/install/lib/libjellyfish-2.0.a ../../external/install/lib/libbwa.a -lm ../../external/install/lib/liblzma.a -lbz2 -ltbb -ltbbmalloc -lgomp -lrt ../../external/install/lib/libjemalloc.a -Wl,-rpath,""\$ORIGIN/../lib:\$ORIGIN/../../lib:\$ORIGIN/:\$ORIGIN/../../external/install/lib""; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xd26): warning: the use of `tempnam' is dangerous, better use `mkstemp'; CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o: In function `tbb::strict_ppl::internal::concurrent_queue_base_v3<UnpairedRead*>::internal_push(void const*, void (*)(UnpairedRead**, void const*)) [clone .constprop.1465]':; SalmonQuantifyAlignments.cpp:(.text+0x136d): undefined reference to `tbb::internal::throw_exception_v4(tbb::internal::exception_id)'; CMakeFiles/salmon.di",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/43
https://github.com/COMBINE-lab/salmon/issues/43:2631,Deployability,install,install,2631,"lmon.dir/__/external/install/src/rapmap/HitManager.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/rank9b.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/bit_array.c.o CMakeFiles/salmon.dir/FASTAParser.cpp.o CMakeFiles/salmon.dir/ErrorModel.cpp.o CMakeFiles/salmon.dir/AlignmentModel.cpp.o CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o -o salmon -L/root/soft/salmon/salmon-0.6.0/lib -L/root/soft/salmon/salmon-0.6.0/external/install/lib -L/opt/boost/boost_1_57_0/lib -rdynamic libsalmon_core.a -lgff -lpthread /opt/boost/boost_1_57_0/lib/libboost_iostreams.a /opt/boost/boost_1_57_0/lib/libboost_filesystem.a /opt/boost/boost_1_57_0/lib/libboost_system.a /opt/boost/boost_1_57_0/lib/libboost_thread.a /opt/boost/boost_1_57_0/lib/libboost_timer.a /opt/boost/boost_1_57_0/lib/libboost_chrono.a /opt/boost/boost_1_57_0/lib/libboost_program_options.a /opt/boost/boost_1_57_0/lib/libboost_serialization.a ../../external/install/lib/libstaden-read.a -lz ../../external/install/lib/libdivsufsort.a ../../external/install/lib/libdivsufsort64.a ../../external/install/lib/libjellyfish-2.0.a ../../external/install/lib/libbwa.a -lm ../../external/install/lib/liblzma.a -lbz2 -ltbb -ltbbmalloc -lgomp -lrt ../../external/install/lib/libjemalloc.a -Wl,-rpath,""\$ORIGIN/../lib:\$ORIGIN/../../lib:\$ORIGIN/:\$ORIGIN/../../external/install/lib""; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xd26): warning: the use of `tempnam' is dangerous, better use `mkstemp'; CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o: In function `tbb::strict_ppl::internal::concurrent_queue_base_v3<UnpairedRead*>::internal_push(void const*, void (*)(UnpairedRead**, void const*)) [clone .constprop.1465]':; SalmonQuantifyAlignments.cpp:(.text+0x136d): undefined reference to `tbb::internal::throw_exception_v4(tbb::internal::exception_id)'; CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o: In function `",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/43
https://github.com/COMBINE-lab/salmon/issues/43:2674,Deployability,install,install,2674,"anager.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/rank9b.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/bit_array.c.o CMakeFiles/salmon.dir/FASTAParser.cpp.o CMakeFiles/salmon.dir/ErrorModel.cpp.o CMakeFiles/salmon.dir/AlignmentModel.cpp.o CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o -o salmon -L/root/soft/salmon/salmon-0.6.0/lib -L/root/soft/salmon/salmon-0.6.0/external/install/lib -L/opt/boost/boost_1_57_0/lib -rdynamic libsalmon_core.a -lgff -lpthread /opt/boost/boost_1_57_0/lib/libboost_iostreams.a /opt/boost/boost_1_57_0/lib/libboost_filesystem.a /opt/boost/boost_1_57_0/lib/libboost_system.a /opt/boost/boost_1_57_0/lib/libboost_thread.a /opt/boost/boost_1_57_0/lib/libboost_timer.a /opt/boost/boost_1_57_0/lib/libboost_chrono.a /opt/boost/boost_1_57_0/lib/libboost_program_options.a /opt/boost/boost_1_57_0/lib/libboost_serialization.a ../../external/install/lib/libstaden-read.a -lz ../../external/install/lib/libdivsufsort.a ../../external/install/lib/libdivsufsort64.a ../../external/install/lib/libjellyfish-2.0.a ../../external/install/lib/libbwa.a -lm ../../external/install/lib/liblzma.a -lbz2 -ltbb -ltbbmalloc -lgomp -lrt ../../external/install/lib/libjemalloc.a -Wl,-rpath,""\$ORIGIN/../lib:\$ORIGIN/../../lib:\$ORIGIN/:\$ORIGIN/../../external/install/lib""; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xd26): warning: the use of `tempnam' is dangerous, better use `mkstemp'; CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o: In function `tbb::strict_ppl::internal::concurrent_queue_base_v3<UnpairedRead*>::internal_push(void const*, void (*)(UnpairedRead**, void const*)) [clone .constprop.1465]':; SalmonQuantifyAlignments.cpp:(.text+0x136d): undefined reference to `tbb::internal::throw_exception_v4(tbb::internal::exception_id)'; CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o: In function `tbb::strict_ppl::internal::concurrent_queue_",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/43
https://github.com/COMBINE-lab/salmon/issues/43:2719,Deployability,install,install,2719,"al/install/src/rapmap/rank9b.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/bit_array.c.o CMakeFiles/salmon.dir/FASTAParser.cpp.o CMakeFiles/salmon.dir/ErrorModel.cpp.o CMakeFiles/salmon.dir/AlignmentModel.cpp.o CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o -o salmon -L/root/soft/salmon/salmon-0.6.0/lib -L/root/soft/salmon/salmon-0.6.0/external/install/lib -L/opt/boost/boost_1_57_0/lib -rdynamic libsalmon_core.a -lgff -lpthread /opt/boost/boost_1_57_0/lib/libboost_iostreams.a /opt/boost/boost_1_57_0/lib/libboost_filesystem.a /opt/boost/boost_1_57_0/lib/libboost_system.a /opt/boost/boost_1_57_0/lib/libboost_thread.a /opt/boost/boost_1_57_0/lib/libboost_timer.a /opt/boost/boost_1_57_0/lib/libboost_chrono.a /opt/boost/boost_1_57_0/lib/libboost_program_options.a /opt/boost/boost_1_57_0/lib/libboost_serialization.a ../../external/install/lib/libstaden-read.a -lz ../../external/install/lib/libdivsufsort.a ../../external/install/lib/libdivsufsort64.a ../../external/install/lib/libjellyfish-2.0.a ../../external/install/lib/libbwa.a -lm ../../external/install/lib/liblzma.a -lbz2 -ltbb -ltbbmalloc -lgomp -lrt ../../external/install/lib/libjemalloc.a -Wl,-rpath,""\$ORIGIN/../lib:\$ORIGIN/../../lib:\$ORIGIN/:\$ORIGIN/../../external/install/lib""; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xd26): warning: the use of `tempnam' is dangerous, better use `mkstemp'; CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o: In function `tbb::strict_ppl::internal::concurrent_queue_base_v3<UnpairedRead*>::internal_push(void const*, void (*)(UnpairedRead**, void const*)) [clone .constprop.1465]':; SalmonQuantifyAlignments.cpp:(.text+0x136d): undefined reference to `tbb::internal::throw_exception_v4(tbb::internal::exception_id)'; CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o: In function `tbb::strict_ppl::internal::concurrent_queue_base_v3<ReadPair*>::internal_push(void const*",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/43
https://github.com/COMBINE-lab/salmon/issues/43:2765,Deployability,install,install,2765,"les/salmon.dir/__/external/install/src/rapmap/bit_array.c.o CMakeFiles/salmon.dir/FASTAParser.cpp.o CMakeFiles/salmon.dir/ErrorModel.cpp.o CMakeFiles/salmon.dir/AlignmentModel.cpp.o CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o -o salmon -L/root/soft/salmon/salmon-0.6.0/lib -L/root/soft/salmon/salmon-0.6.0/external/install/lib -L/opt/boost/boost_1_57_0/lib -rdynamic libsalmon_core.a -lgff -lpthread /opt/boost/boost_1_57_0/lib/libboost_iostreams.a /opt/boost/boost_1_57_0/lib/libboost_filesystem.a /opt/boost/boost_1_57_0/lib/libboost_system.a /opt/boost/boost_1_57_0/lib/libboost_thread.a /opt/boost/boost_1_57_0/lib/libboost_timer.a /opt/boost/boost_1_57_0/lib/libboost_chrono.a /opt/boost/boost_1_57_0/lib/libboost_program_options.a /opt/boost/boost_1_57_0/lib/libboost_serialization.a ../../external/install/lib/libstaden-read.a -lz ../../external/install/lib/libdivsufsort.a ../../external/install/lib/libdivsufsort64.a ../../external/install/lib/libjellyfish-2.0.a ../../external/install/lib/libbwa.a -lm ../../external/install/lib/liblzma.a -lbz2 -ltbb -ltbbmalloc -lgomp -lrt ../../external/install/lib/libjemalloc.a -Wl,-rpath,""\$ORIGIN/../lib:\$ORIGIN/../../lib:\$ORIGIN/:\$ORIGIN/../../external/install/lib""; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xd26): warning: the use of `tempnam' is dangerous, better use `mkstemp'; CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o: In function `tbb::strict_ppl::internal::concurrent_queue_base_v3<UnpairedRead*>::internal_push(void const*, void (*)(UnpairedRead**, void const*)) [clone .constprop.1465]':; SalmonQuantifyAlignments.cpp:(.text+0x136d): undefined reference to `tbb::internal::throw_exception_v4(tbb::internal::exception_id)'; CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o: In function `tbb::strict_ppl::internal::concurrent_queue_base_v3<ReadPair*>::internal_push(void const*, void (*)(ReadPair**, void const*)) [clon",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/43
https://github.com/COMBINE-lab/salmon/issues/43:2805,Deployability,install,install,2805,"pmap/bit_array.c.o CMakeFiles/salmon.dir/FASTAParser.cpp.o CMakeFiles/salmon.dir/ErrorModel.cpp.o CMakeFiles/salmon.dir/AlignmentModel.cpp.o CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o -o salmon -L/root/soft/salmon/salmon-0.6.0/lib -L/root/soft/salmon/salmon-0.6.0/external/install/lib -L/opt/boost/boost_1_57_0/lib -rdynamic libsalmon_core.a -lgff -lpthread /opt/boost/boost_1_57_0/lib/libboost_iostreams.a /opt/boost/boost_1_57_0/lib/libboost_filesystem.a /opt/boost/boost_1_57_0/lib/libboost_system.a /opt/boost/boost_1_57_0/lib/libboost_thread.a /opt/boost/boost_1_57_0/lib/libboost_timer.a /opt/boost/boost_1_57_0/lib/libboost_chrono.a /opt/boost/boost_1_57_0/lib/libboost_program_options.a /opt/boost/boost_1_57_0/lib/libboost_serialization.a ../../external/install/lib/libstaden-read.a -lz ../../external/install/lib/libdivsufsort.a ../../external/install/lib/libdivsufsort64.a ../../external/install/lib/libjellyfish-2.0.a ../../external/install/lib/libbwa.a -lm ../../external/install/lib/liblzma.a -lbz2 -ltbb -ltbbmalloc -lgomp -lrt ../../external/install/lib/libjemalloc.a -Wl,-rpath,""\$ORIGIN/../lib:\$ORIGIN/../../lib:\$ORIGIN/:\$ORIGIN/../../external/install/lib""; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xd26): warning: the use of `tempnam' is dangerous, better use `mkstemp'; CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o: In function `tbb::strict_ppl::internal::concurrent_queue_base_v3<UnpairedRead*>::internal_push(void const*, void (*)(UnpairedRead**, void const*)) [clone .constprop.1465]':; SalmonQuantifyAlignments.cpp:(.text+0x136d): undefined reference to `tbb::internal::throw_exception_v4(tbb::internal::exception_id)'; CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o: In function `tbb::strict_ppl::internal::concurrent_queue_base_v3<ReadPair*>::internal_push(void const*, void (*)(ReadPair**, void const*)) [clone .constprop.1477]':; SalmonQuantifyAlig",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/43
https://github.com/COMBINE-lab/salmon/issues/43:2878,Deployability,install,install,2878,"n.dir/ErrorModel.cpp.o CMakeFiles/salmon.dir/AlignmentModel.cpp.o CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o -o salmon -L/root/soft/salmon/salmon-0.6.0/lib -L/root/soft/salmon/salmon-0.6.0/external/install/lib -L/opt/boost/boost_1_57_0/lib -rdynamic libsalmon_core.a -lgff -lpthread /opt/boost/boost_1_57_0/lib/libboost_iostreams.a /opt/boost/boost_1_57_0/lib/libboost_filesystem.a /opt/boost/boost_1_57_0/lib/libboost_system.a /opt/boost/boost_1_57_0/lib/libboost_thread.a /opt/boost/boost_1_57_0/lib/libboost_timer.a /opt/boost/boost_1_57_0/lib/libboost_chrono.a /opt/boost/boost_1_57_0/lib/libboost_program_options.a /opt/boost/boost_1_57_0/lib/libboost_serialization.a ../../external/install/lib/libstaden-read.a -lz ../../external/install/lib/libdivsufsort.a ../../external/install/lib/libdivsufsort64.a ../../external/install/lib/libjellyfish-2.0.a ../../external/install/lib/libbwa.a -lm ../../external/install/lib/liblzma.a -lbz2 -ltbb -ltbbmalloc -lgomp -lrt ../../external/install/lib/libjemalloc.a -Wl,-rpath,""\$ORIGIN/../lib:\$ORIGIN/../../lib:\$ORIGIN/:\$ORIGIN/../../external/install/lib""; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xd26): warning: the use of `tempnam' is dangerous, better use `mkstemp'; CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o: In function `tbb::strict_ppl::internal::concurrent_queue_base_v3<UnpairedRead*>::internal_push(void const*, void (*)(UnpairedRead**, void const*)) [clone .constprop.1465]':; SalmonQuantifyAlignments.cpp:(.text+0x136d): undefined reference to `tbb::internal::throw_exception_v4(tbb::internal::exception_id)'; CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o: In function `tbb::strict_ppl::internal::concurrent_queue_base_v3<ReadPair*>::internal_push(void const*, void (*)(ReadPair**, void const*)) [clone .constprop.1477]':; SalmonQuantifyAlignments.cpp:(.text+0x161d): undefined reference to `tbb::internal::throw_exc",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/43
https://github.com/COMBINE-lab/salmon/issues/43:2985,Deployability,install,install,2985,"yAlignments.cpp.o -o salmon -L/root/soft/salmon/salmon-0.6.0/lib -L/root/soft/salmon/salmon-0.6.0/external/install/lib -L/opt/boost/boost_1_57_0/lib -rdynamic libsalmon_core.a -lgff -lpthread /opt/boost/boost_1_57_0/lib/libboost_iostreams.a /opt/boost/boost_1_57_0/lib/libboost_filesystem.a /opt/boost/boost_1_57_0/lib/libboost_system.a /opt/boost/boost_1_57_0/lib/libboost_thread.a /opt/boost/boost_1_57_0/lib/libboost_timer.a /opt/boost/boost_1_57_0/lib/libboost_chrono.a /opt/boost/boost_1_57_0/lib/libboost_program_options.a /opt/boost/boost_1_57_0/lib/libboost_serialization.a ../../external/install/lib/libstaden-read.a -lz ../../external/install/lib/libdivsufsort.a ../../external/install/lib/libdivsufsort64.a ../../external/install/lib/libjellyfish-2.0.a ../../external/install/lib/libbwa.a -lm ../../external/install/lib/liblzma.a -lbz2 -ltbb -ltbbmalloc -lgomp -lrt ../../external/install/lib/libjemalloc.a -Wl,-rpath,""\$ORIGIN/../lib:\$ORIGIN/../../lib:\$ORIGIN/:\$ORIGIN/../../external/install/lib""; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xd26): warning: the use of `tempnam' is dangerous, better use `mkstemp'; CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o: In function `tbb::strict_ppl::internal::concurrent_queue_base_v3<UnpairedRead*>::internal_push(void const*, void (*)(UnpairedRead**, void const*)) [clone .constprop.1465]':; SalmonQuantifyAlignments.cpp:(.text+0x136d): undefined reference to `tbb::internal::throw_exception_v4(tbb::internal::exception_id)'; CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o: In function `tbb::strict_ppl::internal::concurrent_queue_base_v3<ReadPair*>::internal_push(void const*, void (*)(ReadPair**, void const*)) [clone .constprop.1477]':; SalmonQuantifyAlignments.cpp:(.text+0x161d): undefined reference to `tbb::internal::throw_exception_v4(tbb::internal::exception_id)'; ```. I'm using ; gcc 4.8.2; boost 1.5.7; icc 15.0.0 20140723",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/43
https://github.com/COMBINE-lab/salmon/issues/43:3014,Deployability,install,install,3014,"yAlignments.cpp.o -o salmon -L/root/soft/salmon/salmon-0.6.0/lib -L/root/soft/salmon/salmon-0.6.0/external/install/lib -L/opt/boost/boost_1_57_0/lib -rdynamic libsalmon_core.a -lgff -lpthread /opt/boost/boost_1_57_0/lib/libboost_iostreams.a /opt/boost/boost_1_57_0/lib/libboost_filesystem.a /opt/boost/boost_1_57_0/lib/libboost_system.a /opt/boost/boost_1_57_0/lib/libboost_thread.a /opt/boost/boost_1_57_0/lib/libboost_timer.a /opt/boost/boost_1_57_0/lib/libboost_chrono.a /opt/boost/boost_1_57_0/lib/libboost_program_options.a /opt/boost/boost_1_57_0/lib/libboost_serialization.a ../../external/install/lib/libstaden-read.a -lz ../../external/install/lib/libdivsufsort.a ../../external/install/lib/libdivsufsort64.a ../../external/install/lib/libjellyfish-2.0.a ../../external/install/lib/libbwa.a -lm ../../external/install/lib/liblzma.a -lbz2 -ltbb -ltbbmalloc -lgomp -lrt ../../external/install/lib/libjemalloc.a -Wl,-rpath,""\$ORIGIN/../lib:\$ORIGIN/../../lib:\$ORIGIN/:\$ORIGIN/../../external/install/lib""; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xd26): warning: the use of `tempnam' is dangerous, better use `mkstemp'; CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o: In function `tbb::strict_ppl::internal::concurrent_queue_base_v3<UnpairedRead*>::internal_push(void const*, void (*)(UnpairedRead**, void const*)) [clone .constprop.1465]':; SalmonQuantifyAlignments.cpp:(.text+0x136d): undefined reference to `tbb::internal::throw_exception_v4(tbb::internal::exception_id)'; CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o: In function `tbb::strict_ppl::internal::concurrent_queue_base_v3<ReadPair*>::internal_push(void const*, void (*)(ReadPair**, void const*)) [clone .constprop.1477]':; SalmonQuantifyAlignments.cpp:(.text+0x161d): undefined reference to `tbb::internal::throw_exception_v4(tbb::internal::exception_id)'; ```. I'm using ; gcc 4.8.2; boost 1.5.7; icc 15.0.0 20140723",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/43
https://github.com/COMBINE-lab/salmon/issues/43:385,Modifiability,variab,variable,385,I'm trying to build version 0.6 and I get the following error:. ```; cd /root/soft/salmon/salmon-0.6.0/build/src && /usr/local/bin/cmake -E cmake_link_script CMakeFiles/salmon.dir/link.txt --verbose=1; /opt/rh/devtoolset-2/root/usr/bin/c++ -pthread -funroll-loops -fPIC -fomit-frame-pointer -Ofast -DRAPMAP_SALMON_SUPPORT -DHAVE_ANSI_TERM -DHAVE_SSTREAM -Wall -Wno-reorder -Wno-unused-variable -std=c++11 -Wreturn-type -Werror=return-type -static-libstdc++ -Wno-deprecated-register -Wno-unused-local-typedefs -L/opt/rh/devtoolset-2/root/usr/lib64 -L/opt/rh/devtoolset-2/root/usr/lib CMakeFiles/salmon.dir/QSufSort.c.o CMakeFiles/salmon.dir/is.c.o CMakeFiles/salmon.dir/bwt_gen.c.o CMakeFiles/salmon.dir/bwtindex.c.o CMakeFiles/salmon.dir/xxhash.c.o CMakeFiles/salmon.dir/CollapsedEMOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedGibbsSampler.cpp.o CMakeFiles/salmon.dir/Salmon.cpp.o CMakeFiles/salmon.dir/BuildSalmonIndex.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMakeFiles/salmon.dir/FragmentStartPositionDistribution.cpp.o CMakeFiles/salmon.dir/SequenceBiasModel.cpp.o CMakeFiles/salmon.dir/StadenUtils.cpp.o CMakeFiles/salmon.dir/TranscriptGroup.cpp.o CMakeFiles/salmon.dir/GZipWriter.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapFileSystem.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAIndexer.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAIndex.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAMapper.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapUtils.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/HitManager.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/rank9b.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/bit_array.c.o CMakeFiles/salmon.dir/FASTAParser.cpp.o CMakeFiles/salmon.dir/ErrorModel.cpp.o CMakeFiles/salmon.dir/AlignmentModel.cpp.o CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/43
https://github.com/COMBINE-lab/salmon/pull/44:34,Integrability,message,message,34,Fixes just a small typo in a user message.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/44
https://github.com/COMBINE-lab/salmon/issues/45:365,Availability,echo,echo,365,https://travis-ci.org/Homebrew/homebrew-science/jobs/114404533#L1110-L1115. ```; /bin/sh ../libtool --tag=CC --mode=compile /usr/local/Library/ENV/4.3/clang -DHAVE_CONFIG_H -I. -I.. -I.. -I/usr/local/include -L/usr/local/lib -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c -o libstaden_read_la-cram_io.lo `test -f 'cram_io.c' || echo './'`cram_io.c; libtool: compile: /usr/local/Library/ENV/4.3/clang -DHAVE_CONFIG_H -I. -I.. -I.. -I/usr/local/include -L/usr/local/lib -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:10: fatal error: 'lzma.h' file not found; #include <lzma.h>; ^; 1 error generated.; make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; make[4]: *** [all-recursive] Error 1; make[3]: *** [all] Error 2; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; make: *** [all] Error 2; ```,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/45
https://github.com/COMBINE-lab/salmon/issues/45:654,Availability,error,error,654,https://travis-ci.org/Homebrew/homebrew-science/jobs/114404533#L1110-L1115. ```; /bin/sh ../libtool --tag=CC --mode=compile /usr/local/Library/ENV/4.3/clang -DHAVE_CONFIG_H -I. -I.. -I.. -I/usr/local/include -L/usr/local/lib -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c -o libstaden_read_la-cram_io.lo `test -f 'cram_io.c' || echo './'`cram_io.c; libtool: compile: /usr/local/Library/ENV/4.3/clang -DHAVE_CONFIG_H -I. -I.. -I.. -I/usr/local/include -L/usr/local/lib -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:10: fatal error: 'lzma.h' file not found; #include <lzma.h>; ^; 1 error generated.; make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; make[4]: *** [all-recursive] Error 1; make[3]: *** [all] Error 2; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; make: *** [all] Error 2; ```,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/45
https://github.com/COMBINE-lab/salmon/issues/45:710,Availability,error,error,710,https://travis-ci.org/Homebrew/homebrew-science/jobs/114404533#L1110-L1115. ```; /bin/sh ../libtool --tag=CC --mode=compile /usr/local/Library/ENV/4.3/clang -DHAVE_CONFIG_H -I. -I.. -I.. -I/usr/local/include -L/usr/local/lib -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c -o libstaden_read_la-cram_io.lo `test -f 'cram_io.c' || echo './'`cram_io.c; libtool: compile: /usr/local/Library/ENV/4.3/clang -DHAVE_CONFIG_H -I. -I.. -I.. -I/usr/local/include -L/usr/local/lib -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:10: fatal error: 'lzma.h' file not found; #include <lzma.h>; ^; 1 error generated.; make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; make[4]: *** [all-recursive] Error 1; make[3]: *** [all] Error 2; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; make: *** [all] Error 2; ```,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/45
https://github.com/COMBINE-lab/salmon/issues/45:772,Availability,Error,Error,772,https://travis-ci.org/Homebrew/homebrew-science/jobs/114404533#L1110-L1115. ```; /bin/sh ../libtool --tag=CC --mode=compile /usr/local/Library/ENV/4.3/clang -DHAVE_CONFIG_H -I. -I.. -I.. -I/usr/local/include -L/usr/local/lib -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c -o libstaden_read_la-cram_io.lo `test -f 'cram_io.c' || echo './'`cram_io.c; libtool: compile: /usr/local/Library/ENV/4.3/clang -DHAVE_CONFIG_H -I. -I.. -I.. -I/usr/local/include -L/usr/local/lib -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:10: fatal error: 'lzma.h' file not found; #include <lzma.h>; ^; 1 error generated.; make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; make[4]: *** [all-recursive] Error 1; make[3]: *** [all] Error 2; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; make: *** [all] Error 2; ```,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/45
https://github.com/COMBINE-lab/salmon/issues/45:810,Availability,Error,Error,810,https://travis-ci.org/Homebrew/homebrew-science/jobs/114404533#L1110-L1115. ```; /bin/sh ../libtool --tag=CC --mode=compile /usr/local/Library/ENV/4.3/clang -DHAVE_CONFIG_H -I. -I.. -I.. -I/usr/local/include -L/usr/local/lib -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c -o libstaden_read_la-cram_io.lo `test -f 'cram_io.c' || echo './'`cram_io.c; libtool: compile: /usr/local/Library/ENV/4.3/clang -DHAVE_CONFIG_H -I. -I.. -I.. -I/usr/local/include -L/usr/local/lib -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:10: fatal error: 'lzma.h' file not found; #include <lzma.h>; ^; 1 error generated.; make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; make[4]: *** [all-recursive] Error 1; make[3]: *** [all] Error 2; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; make: *** [all] Error 2; ```,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/45
https://github.com/COMBINE-lab/salmon/issues/45:838,Availability,Error,Error,838,https://travis-ci.org/Homebrew/homebrew-science/jobs/114404533#L1110-L1115. ```; /bin/sh ../libtool --tag=CC --mode=compile /usr/local/Library/ENV/4.3/clang -DHAVE_CONFIG_H -I. -I.. -I.. -I/usr/local/include -L/usr/local/lib -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c -o libstaden_read_la-cram_io.lo `test -f 'cram_io.c' || echo './'`cram_io.c; libtool: compile: /usr/local/Library/ENV/4.3/clang -DHAVE_CONFIG_H -I. -I.. -I.. -I/usr/local/include -L/usr/local/lib -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:10: fatal error: 'lzma.h' file not found; #include <lzma.h>; ^; 1 error generated.; make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; make[4]: *** [all-recursive] Error 1; make[3]: *** [all] Error 2; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; make: *** [all] Error 2; ```,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/45
https://github.com/COMBINE-lab/salmon/issues/45:921,Availability,Error,Error,921,https://travis-ci.org/Homebrew/homebrew-science/jobs/114404533#L1110-L1115. ```; /bin/sh ../libtool --tag=CC --mode=compile /usr/local/Library/ENV/4.3/clang -DHAVE_CONFIG_H -I. -I.. -I.. -I/usr/local/include -L/usr/local/lib -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c -o libstaden_read_la-cram_io.lo `test -f 'cram_io.c' || echo './'`cram_io.c; libtool: compile: /usr/local/Library/ENV/4.3/clang -DHAVE_CONFIG_H -I. -I.. -I.. -I/usr/local/include -L/usr/local/lib -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:10: fatal error: 'lzma.h' file not found; #include <lzma.h>; ^; 1 error generated.; make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; make[4]: *** [all-recursive] Error 1; make[3]: *** [all] Error 2; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; make: *** [all] Error 2; ```,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/45
https://github.com/COMBINE-lab/salmon/issues/45:976,Availability,Error,Error,976,https://travis-ci.org/Homebrew/homebrew-science/jobs/114404533#L1110-L1115. ```; /bin/sh ../libtool --tag=CC --mode=compile /usr/local/Library/ENV/4.3/clang -DHAVE_CONFIG_H -I. -I.. -I.. -I/usr/local/include -L/usr/local/lib -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c -o libstaden_read_la-cram_io.lo `test -f 'cram_io.c' || echo './'`cram_io.c; libtool: compile: /usr/local/Library/ENV/4.3/clang -DHAVE_CONFIG_H -I. -I.. -I.. -I/usr/local/include -L/usr/local/lib -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:10: fatal error: 'lzma.h' file not found; #include <lzma.h>; ^; 1 error generated.; make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; make[4]: *** [all-recursive] Error 1; make[3]: *** [all] Error 2; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; make: *** [all] Error 2; ```,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/45
https://github.com/COMBINE-lab/salmon/issues/45:1001,Availability,Error,Error,1001,https://travis-ci.org/Homebrew/homebrew-science/jobs/114404533#L1110-L1115. ```; /bin/sh ../libtool --tag=CC --mode=compile /usr/local/Library/ENV/4.3/clang -DHAVE_CONFIG_H -I. -I.. -I.. -I/usr/local/include -L/usr/local/lib -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c -o libstaden_read_la-cram_io.lo `test -f 'cram_io.c' || echo './'`cram_io.c; libtool: compile: /usr/local/Library/ENV/4.3/clang -DHAVE_CONFIG_H -I. -I.. -I.. -I/usr/local/include -L/usr/local/lib -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:10: fatal error: 'lzma.h' file not found; #include <lzma.h>; ^; 1 error generated.; make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; make[4]: *** [all-recursive] Error 1; make[3]: *** [all] Error 2; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; make: *** [all] Error 2; ```,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/45
https://github.com/COMBINE-lab/salmon/issues/45:342,Testability,test,test,342,https://travis-ci.org/Homebrew/homebrew-science/jobs/114404533#L1110-L1115. ```; /bin/sh ../libtool --tag=CC --mode=compile /usr/local/Library/ENV/4.3/clang -DHAVE_CONFIG_H -I. -I.. -I.. -I/usr/local/include -L/usr/local/lib -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c -o libstaden_read_la-cram_io.lo `test -f 'cram_io.c' || echo './'`cram_io.c; libtool: compile: /usr/local/Library/ENV/4.3/clang -DHAVE_CONFIG_H -I. -I.. -I.. -I/usr/local/include -L/usr/local/lib -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:10: fatal error: 'lzma.h' file not found; #include <lzma.h>; ^; 1 error generated.; make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; make[4]: *** [all-recursive] Error 1; make[3]: *** [all] Error 2; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; make: *** [all] Error 2; ```,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/45
https://github.com/COMBINE-lab/salmon/issues/46:21,Testability,log,logs,21,Here's a gist of the logs:; https://gist.github.com/sjackman/8b0c2be77efeb9507ca3#file-02-make-L4938,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/46
https://github.com/COMBINE-lab/salmon/issues/48:501,Availability,error,error,501,"Hi Rob,. I've been running another group's samples (single-end, second-strand protocol), and I have a script that iterates through each sample and runs salmon. I'm running the latest version (0.6.0) with the following arguments: salmon quant -i salmon_index --libType SF -r <(gzip -c -d $IN_FILE) -o $OUTPUT --numBootstraps 100 --useVBOpt --useFSPD --geneMap $GENES --biasCorrect -p 59. During the EM iteration step (soon after the 500th round, when salmon recalculates effective lengths), I get this error: . ```; [jointLog] [info] iteration 500, recomputing effective lengths; [jointLog] [info] iteration = 500 | max rel diff. = 64.1299; Exception : [Error in function boost::math::digamma<long double>(long double): Evaluation of function at pole -nan]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; ```. I can't tell if this is just a regular possible occurrence with the non-deterministic algorithm or if this is never supposed to happen. These particular samples are extremely high depth (about ~170-190M reads per sample), so that might be the cause, but I don't understand enough of how the algorithm works to know how to troubleshoot or to put together a toy dataset that reproduces the error. Rerunning the sample that causes the error often works. If I can throw in a feature request here, it would be great to be able to set the seed to make the runs deterministic. Is that possible?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/48
https://github.com/COMBINE-lab/salmon/issues/48:653,Availability,Error,Error,653,"Hi Rob,. I've been running another group's samples (single-end, second-strand protocol), and I have a script that iterates through each sample and runs salmon. I'm running the latest version (0.6.0) with the following arguments: salmon quant -i salmon_index --libType SF -r <(gzip -c -d $IN_FILE) -o $OUTPUT --numBootstraps 100 --useVBOpt --useFSPD --geneMap $GENES --biasCorrect -p 59. During the EM iteration step (soon after the 500th round, when salmon recalculates effective lengths), I get this error: . ```; [jointLog] [info] iteration 500, recomputing effective lengths; [jointLog] [info] iteration = 500 | max rel diff. = 64.1299; Exception : [Error in function boost::math::digamma<long double>(long double): Evaluation of function at pole -nan]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; ```. I can't tell if this is just a regular possible occurrence with the non-deterministic algorithm or if this is never supposed to happen. These particular samples are extremely high depth (about ~170-190M reads per sample), so that might be the cause, but I don't understand enough of how the algorithm works to know how to troubleshoot or to put together a toy dataset that reproduces the error. Rerunning the sample that causes the error often works. If I can throw in a feature request here, it would be great to be able to set the seed to make the runs deterministic. Is that possible?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/48
https://github.com/COMBINE-lab/salmon/issues/48:1246,Availability,error,error,1246,"Hi Rob,. I've been running another group's samples (single-end, second-strand protocol), and I have a script that iterates through each sample and runs salmon. I'm running the latest version (0.6.0) with the following arguments: salmon quant -i salmon_index --libType SF -r <(gzip -c -d $IN_FILE) -o $OUTPUT --numBootstraps 100 --useVBOpt --useFSPD --geneMap $GENES --biasCorrect -p 59. During the EM iteration step (soon after the 500th round, when salmon recalculates effective lengths), I get this error: . ```; [jointLog] [info] iteration 500, recomputing effective lengths; [jointLog] [info] iteration = 500 | max rel diff. = 64.1299; Exception : [Error in function boost::math::digamma<long double>(long double): Evaluation of function at pole -nan]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; ```. I can't tell if this is just a regular possible occurrence with the non-deterministic algorithm or if this is never supposed to happen. These particular samples are extremely high depth (about ~170-190M reads per sample), so that might be the cause, but I don't understand enough of how the algorithm works to know how to troubleshoot or to put together a toy dataset that reproduces the error. Rerunning the sample that causes the error often works. If I can throw in a feature request here, it would be great to be able to set the seed to make the runs deterministic. Is that possible?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/48
https://github.com/COMBINE-lab/salmon/issues/48:1290,Availability,error,error,1290,"Hi Rob,. I've been running another group's samples (single-end, second-strand protocol), and I have a script that iterates through each sample and runs salmon. I'm running the latest version (0.6.0) with the following arguments: salmon quant -i salmon_index --libType SF -r <(gzip -c -d $IN_FILE) -o $OUTPUT --numBootstraps 100 --useVBOpt --useFSPD --geneMap $GENES --biasCorrect -p 59. During the EM iteration step (soon after the 500th round, when salmon recalculates effective lengths), I get this error: . ```; [jointLog] [info] iteration 500, recomputing effective lengths; [jointLog] [info] iteration = 500 | max rel diff. = 64.1299; Exception : [Error in function boost::math::digamma<long double>(long double): Evaluation of function at pole -nan]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; ```. I can't tell if this is just a regular possible occurrence with the non-deterministic algorithm or if this is never supposed to happen. These particular samples are extremely high depth (about ~170-190M reads per sample), so that might be the cause, but I don't understand enough of how the algorithm works to know how to troubleshoot or to put together a toy dataset that reproduces the error. Rerunning the sample that causes the error often works. If I can throw in a feature request here, it would be great to be able to set the seed to make the runs deterministic. Is that possible?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/48
https://github.com/COMBINE-lab/salmon/issues/48:78,Integrability,protocol,protocol,78,"Hi Rob,. I've been running another group's samples (single-end, second-strand protocol), and I have a script that iterates through each sample and runs salmon. I'm running the latest version (0.6.0) with the following arguments: salmon quant -i salmon_index --libType SF -r <(gzip -c -d $IN_FILE) -o $OUTPUT --numBootstraps 100 --useVBOpt --useFSPD --geneMap $GENES --biasCorrect -p 59. During the EM iteration step (soon after the 500th round, when salmon recalculates effective lengths), I get this error: . ```; [jointLog] [info] iteration 500, recomputing effective lengths; [jointLog] [info] iteration = 500 | max rel diff. = 64.1299; Exception : [Error in function boost::math::digamma<long double>(long double): Evaluation of function at pole -nan]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; ```. I can't tell if this is just a regular possible occurrence with the non-deterministic algorithm or if this is never supposed to happen. These particular samples are extremely high depth (about ~170-190M reads per sample), so that might be the cause, but I don't understand enough of how the algorithm works to know how to troubleshoot or to put together a toy dataset that reproduces the error. Rerunning the sample that causes the error often works. If I can throw in a feature request here, it would be great to be able to set the seed to make the runs deterministic. Is that possible?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/48
https://github.com/COMBINE-lab/salmon/issues/49:383,Availability,down,download,383,"I am intending to run salmon on a set of RNA-Seq data lying in our lab for a long time. They are for mm9 and since there are >50 samples I was intending to run it using Salmon `version : 0.6.0`. I have used earlier versions of salmon on hg19 data from both UCSC, NCBI (spiked-in and non-spiked in data) without alignment mode and have run them successfully. Recently we were able to download the latest version and compile and trying to run the indexing on the UCSC mm9 genome.fa file so that I can use quasi-mapping indexes that can be then used to run quant for my samples downstream so getting read counts as well as TPM much faster than any other tool. Can you tell me what is the problem. . Command line used; `salmon index -t /path_to/genome.fa -i salmonquasi-indexes --type quasi -k 31`. Here is the error message while using the Ram-Map. ```; Version Info: This is the most recent version of Salmon.; index [""salmonquasi-indexes""] did not previously exist . . . creating it; [2016-03-17 10:41:34.655] [jointLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; Elapsed time: 53.9731s. Replaced 96385738 non-ATCG nucleotides; Clipped poly-A tails from 0 transcripts; Building rank-select dictionary and saving to disk done; Elapsed time: 0.196609s; Writing sequence data to file . . . done; Elapsed time: 1.56391s; [info] Building 64-bit suffix array (length of generalized text is 2654911539 ); Building suffix array . . . success; saving to disk . . . done; Elapsed time: 126.003s; done; Elapsed time: 883.472s; processed 615000000 positionssalmon: /home/vagrant/salmon/external/install/include/sparsehash/internal/densehashtable.h:782: void google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::clear_to_size(google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::size_type) [with Value = std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> >; Key = long unsigned int; HashFcn = rapmap::utils",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/49
https://github.com/COMBINE-lab/salmon/issues/49:575,Availability,down,downstream,575,"I am intending to run salmon on a set of RNA-Seq data lying in our lab for a long time. They are for mm9 and since there are >50 samples I was intending to run it using Salmon `version : 0.6.0`. I have used earlier versions of salmon on hg19 data from both UCSC, NCBI (spiked-in and non-spiked in data) without alignment mode and have run them successfully. Recently we were able to download the latest version and compile and trying to run the indexing on the UCSC mm9 genome.fa file so that I can use quasi-mapping indexes that can be then used to run quant for my samples downstream so getting read counts as well as TPM much faster than any other tool. Can you tell me what is the problem. . Command line used; `salmon index -t /path_to/genome.fa -i salmonquasi-indexes --type quasi -k 31`. Here is the error message while using the Ram-Map. ```; Version Info: This is the most recent version of Salmon.; index [""salmonquasi-indexes""] did not previously exist . . . creating it; [2016-03-17 10:41:34.655] [jointLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; Elapsed time: 53.9731s. Replaced 96385738 non-ATCG nucleotides; Clipped poly-A tails from 0 transcripts; Building rank-select dictionary and saving to disk done; Elapsed time: 0.196609s; Writing sequence data to file . . . done; Elapsed time: 1.56391s; [info] Building 64-bit suffix array (length of generalized text is 2654911539 ); Building suffix array . . . success; saving to disk . . . done; Elapsed time: 126.003s; done; Elapsed time: 883.472s; processed 615000000 positionssalmon: /home/vagrant/salmon/external/install/include/sparsehash/internal/densehashtable.h:782: void google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::clear_to_size(google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::size_type) [with Value = std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> >; Key = long unsigned int; HashFcn = rapmap::utils",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/49
https://github.com/COMBINE-lab/salmon/issues/49:807,Availability,error,error,807,"I am intending to run salmon on a set of RNA-Seq data lying in our lab for a long time. They are for mm9 and since there are >50 samples I was intending to run it using Salmon `version : 0.6.0`. I have used earlier versions of salmon on hg19 data from both UCSC, NCBI (spiked-in and non-spiked in data) without alignment mode and have run them successfully. Recently we were able to download the latest version and compile and trying to run the indexing on the UCSC mm9 genome.fa file so that I can use quasi-mapping indexes that can be then used to run quant for my samples downstream so getting read counts as well as TPM much faster than any other tool. Can you tell me what is the problem. . Command line used; `salmon index -t /path_to/genome.fa -i salmonquasi-indexes --type quasi -k 31`. Here is the error message while using the Ram-Map. ```; Version Info: This is the most recent version of Salmon.; index [""salmonquasi-indexes""] did not previously exist . . . creating it; [2016-03-17 10:41:34.655] [jointLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; Elapsed time: 53.9731s. Replaced 96385738 non-ATCG nucleotides; Clipped poly-A tails from 0 transcripts; Building rank-select dictionary and saving to disk done; Elapsed time: 0.196609s; Writing sequence data to file . . . done; Elapsed time: 1.56391s; [info] Building 64-bit suffix array (length of generalized text is 2654911539 ); Building suffix array . . . success; saving to disk . . . done; Elapsed time: 126.003s; done; Elapsed time: 883.472s; processed 615000000 positionssalmon: /home/vagrant/salmon/external/install/include/sparsehash/internal/densehashtable.h:782: void google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::clear_to_size(google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::size_type) [with Value = std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> >; Key = long unsigned int; HashFcn = rapmap::utils",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/49
https://github.com/COMBINE-lab/salmon/issues/49:1611,Deployability,install,install,1611,"d counts as well as TPM much faster than any other tool. Can you tell me what is the problem. . Command line used; `salmon index -t /path_to/genome.fa -i salmonquasi-indexes --type quasi -k 31`. Here is the error message while using the Ram-Map. ```; Version Info: This is the most recent version of Salmon.; index [""salmonquasi-indexes""] did not previously exist . . . creating it; [2016-03-17 10:41:34.655] [jointLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; Elapsed time: 53.9731s. Replaced 96385738 non-ATCG nucleotides; Clipped poly-A tails from 0 transcripts; Building rank-select dictionary and saving to disk done; Elapsed time: 0.196609s; Writing sequence data to file . . . done; Elapsed time: 1.56391s; [info] Building 64-bit suffix array (length of generalized text is 2654911539 ); Building suffix array . . . success; saving to disk . . . done; Elapsed time: 126.003s; done; Elapsed time: 883.472s; processed 615000000 positionssalmon: /home/vagrant/salmon/external/install/include/sparsehash/internal/densehashtable.h:782: void google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::clear_to_size(google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::size_type) [with Value = std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> >; Key = long unsigned int; HashFcn = rapmap::utils::KmerKeyHasher; ExtractKey = google::dense_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > >::SelectKey; SetKey = google::dense_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > >::SetKey; EqualKey = std::equal_to<lo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/49
https://github.com/COMBINE-lab/salmon/issues/49:813,Integrability,message,message,813,"I am intending to run salmon on a set of RNA-Seq data lying in our lab for a long time. They are for mm9 and since there are >50 samples I was intending to run it using Salmon `version : 0.6.0`. I have used earlier versions of salmon on hg19 data from both UCSC, NCBI (spiked-in and non-spiked in data) without alignment mode and have run them successfully. Recently we were able to download the latest version and compile and trying to run the indexing on the UCSC mm9 genome.fa file so that I can use quasi-mapping indexes that can be then used to run quant for my samples downstream so getting read counts as well as TPM much faster than any other tool. Can you tell me what is the problem. . Command line used; `salmon index -t /path_to/genome.fa -i salmonquasi-indexes --type quasi -k 31`. Here is the error message while using the Ram-Map. ```; Version Info: This is the most recent version of Salmon.; index [""salmonquasi-indexes""] did not previously exist . . . creating it; [2016-03-17 10:41:34.655] [jointLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; Elapsed time: 53.9731s. Replaced 96385738 non-ATCG nucleotides; Clipped poly-A tails from 0 transcripts; Building rank-select dictionary and saving to disk done; Elapsed time: 0.196609s; Writing sequence data to file . . . done; Elapsed time: 1.56391s; [info] Building 64-bit suffix array (length of generalized text is 2654911539 ); Building suffix array . . . success; saving to disk . . . done; Elapsed time: 126.003s; done; Elapsed time: 883.472s; processed 615000000 positionssalmon: /home/vagrant/salmon/external/install/include/sparsehash/internal/densehashtable.h:782: void google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::clear_to_size(google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::size_type) [with Value = std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> >; Key = long unsigned int; HashFcn = rapmap::utils",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/49
https://github.com/COMBINE-lab/salmon/issues/49:2879,Safety,Abort,Aborted,2879,"nfo] Building 64-bit suffix array (length of generalized text is 2654911539 ); Building suffix array . . . success; saving to disk . . . done; Elapsed time: 126.003s; done; Elapsed time: 883.472s; processed 615000000 positionssalmon: /home/vagrant/salmon/external/install/include/sparsehash/internal/densehashtable.h:782: void google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::clear_to_size(google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::size_type) [with Value = std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> >; Key = long unsigned int; HashFcn = rapmap::utils::KmerKeyHasher; ExtractKey = google::dense_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > >::SelectKey; SetKey = google::dense_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > >::SetKey; EqualKey = std::equal_to<long unsigned int>; Alloc = google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > >; google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::size_type = long unsigned int]: Assertion table' failed.; Aborted; ```. I also checked the log file and it shows nothing except. ```; more indexing.log; [2016-03-17 10:41:34.655] [jointLog] [info] building index; ```. output:. ```; -rw-r--r-- 1 vdas DPT 59 Mar 17 10:41 indexing.log; -rw-r--r-- 1 vdas DPT 331863951 Mar 17 10:42 rsd.bin; -rw-r--r-- 1 vdas DPT 2654912013 Mar 17 10:43 txpInfo.bin; -rw-r--r-- 1 vdas DPT 21239292320 Mar 17 10:59 sa.bin; ```. So can you give me a workaround or inputs to solve this issue? Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/49
https://github.com/COMBINE-lab/salmon/issues/49:1710,Security,Hash,HashFcn,1710,".196609s; Writing sequence data to file . . . done; Elapsed time: 1.56391s; [info] Building 64-bit suffix array (length of generalized text is 2654911539 ); Building suffix array . . . success; saving to disk . . . done; Elapsed time: 126.003s; done; Elapsed time: 883.472s; processed 615000000 positionssalmon: /home/vagrant/salmon/external/install/include/sparsehash/internal/densehashtable.h:782: void google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::clear_to_size(google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::size_type) [with Value = std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> >; Key = long unsigned int; HashFcn = rapmap::utils::KmerKeyHasher; ExtractKey = google::dense_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > >::SelectKey; SetKey = google::dense_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > >::SetKey; EqualKey = std::equal_to<long unsigned int>; Alloc = google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > >; google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::size_type = long unsigned int]: Assertion table' failed.; Aborted; ```. I also checked the log file and it shows nothing except. ```; more indexing.log; [2016-03-17 10:41:34.655] [jointLog] [info] building index; ```. output:. ```; -rw-r--r-- 1 vdas DPT 59 Mar 17 10:41 indexing.log; -rw-r--r-- 1 vdas DPT 331863951 Mar 17 10:42 rsd.bin; -rw-r--r-- 1 vdas DPT 2654912013 Mar 17 10:43 txpInfo.bin; -rw-r--r-- 1 vdas DPT 21239292320 Mar 17 10:59 sa.bi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/49
https://github.com/COMBINE-lab/salmon/issues/49:1807,Security,Hash,HashFcn,1807,".196609s; Writing sequence data to file . . . done; Elapsed time: 1.56391s; [info] Building 64-bit suffix array (length of generalized text is 2654911539 ); Building suffix array . . . success; saving to disk . . . done; Elapsed time: 126.003s; done; Elapsed time: 883.472s; processed 615000000 positionssalmon: /home/vagrant/salmon/external/install/include/sparsehash/internal/densehashtable.h:782: void google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::clear_to_size(google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::size_type) [with Value = std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> >; Key = long unsigned int; HashFcn = rapmap::utils::KmerKeyHasher; ExtractKey = google::dense_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > >::SelectKey; SetKey = google::dense_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > >::SetKey; EqualKey = std::equal_to<long unsigned int>; Alloc = google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > >; google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::size_type = long unsigned int]: Assertion table' failed.; Aborted; ```. I also checked the log file and it shows nothing except. ```; more indexing.log; [2016-03-17 10:41:34.655] [jointLog] [info] building index; ```. output:. ```; -rw-r--r-- 1 vdas DPT 59 Mar 17 10:41 indexing.log; -rw-r--r-- 1 vdas DPT 331863951 Mar 17 10:42 rsd.bin; -rw-r--r-- 1 vdas DPT 2654912013 Mar 17 10:43 txpInfo.bin; -rw-r--r-- 1 vdas DPT 21239292320 Mar 17 10:59 sa.bi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/49
https://github.com/COMBINE-lab/salmon/issues/49:1978,Security,Hash,HashFcn,1978,".196609s; Writing sequence data to file . . . done; Elapsed time: 1.56391s; [info] Building 64-bit suffix array (length of generalized text is 2654911539 ); Building suffix array . . . success; saving to disk . . . done; Elapsed time: 126.003s; done; Elapsed time: 883.472s; processed 615000000 positionssalmon: /home/vagrant/salmon/external/install/include/sparsehash/internal/densehashtable.h:782: void google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::clear_to_size(google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::size_type) [with Value = std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> >; Key = long unsigned int; HashFcn = rapmap::utils::KmerKeyHasher; ExtractKey = google::dense_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > >::SelectKey; SetKey = google::dense_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > >::SetKey; EqualKey = std::equal_to<long unsigned int>; Alloc = google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > >; google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::size_type = long unsigned int]: Assertion table' failed.; Aborted; ```. I also checked the log file and it shows nothing except. ```; more indexing.log; [2016-03-17 10:41:34.655] [jointLog] [info] building index; ```. output:. ```; -rw-r--r-- 1 vdas DPT 59 Mar 17 10:41 indexing.log; -rw-r--r-- 1 vdas DPT 331863951 Mar 17 10:42 rsd.bin; -rw-r--r-- 1 vdas DPT 2654912013 Mar 17 10:43 txpInfo.bin; -rw-r--r-- 1 vdas DPT 21239292320 Mar 17 10:59 sa.bi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/49
https://github.com/COMBINE-lab/salmon/issues/49:2774,Security,Hash,HashFcn,2774,".196609s; Writing sequence data to file . . . done; Elapsed time: 1.56391s; [info] Building 64-bit suffix array (length of generalized text is 2654911539 ); Building suffix array . . . success; saving to disk . . . done; Elapsed time: 126.003s; done; Elapsed time: 883.472s; processed 615000000 positionssalmon: /home/vagrant/salmon/external/install/include/sparsehash/internal/densehashtable.h:782: void google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::clear_to_size(google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::size_type) [with Value = std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> >; Key = long unsigned int; HashFcn = rapmap::utils::KmerKeyHasher; ExtractKey = google::dense_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > >::SelectKey; SetKey = google::dense_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > >::SetKey; EqualKey = std::equal_to<long unsigned int>; Alloc = google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > >; google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::size_type = long unsigned int]: Assertion table' failed.; Aborted; ```. I also checked the log file and it shows nothing except. ```; more indexing.log; [2016-03-17 10:41:34.655] [jointLog] [info] building index; ```. output:. ```; -rw-r--r-- 1 vdas DPT 59 Mar 17 10:41 indexing.log; -rw-r--r-- 1 vdas DPT 331863951 Mar 17 10:42 rsd.bin; -rw-r--r-- 1 vdas DPT 2654912013 Mar 17 10:43 txpInfo.bin; -rw-r--r-- 1 vdas DPT 21239292320 Mar 17 10:59 sa.bi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/49
https://github.com/COMBINE-lab/salmon/issues/49:2853,Testability,Assert,Assertion,2853,".196609s; Writing sequence data to file . . . done; Elapsed time: 1.56391s; [info] Building 64-bit suffix array (length of generalized text is 2654911539 ); Building suffix array . . . success; saving to disk . . . done; Elapsed time: 126.003s; done; Elapsed time: 883.472s; processed 615000000 positionssalmon: /home/vagrant/salmon/external/install/include/sparsehash/internal/densehashtable.h:782: void google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::clear_to_size(google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::size_type) [with Value = std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> >; Key = long unsigned int; HashFcn = rapmap::utils::KmerKeyHasher; ExtractKey = google::dense_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > >::SelectKey; SetKey = google::dense_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > >::SetKey; EqualKey = std::equal_to<long unsigned int>; Alloc = google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > >; google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::size_type = long unsigned int]: Assertion table' failed.; Aborted; ```. I also checked the log file and it shows nothing except. ```; more indexing.log; [2016-03-17 10:41:34.655] [jointLog] [info] building index; ```. output:. ```; -rw-r--r-- 1 vdas DPT 59 Mar 17 10:41 indexing.log; -rw-r--r-- 1 vdas DPT 331863951 Mar 17 10:42 rsd.bin; -rw-r--r-- 1 vdas DPT 2654912013 Mar 17 10:43 txpInfo.bin; -rw-r--r-- 1 vdas DPT 21239292320 Mar 17 10:59 sa.bi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/49
https://github.com/COMBINE-lab/salmon/issues/49:2912,Testability,log,log,2912,"nfo] Building 64-bit suffix array (length of generalized text is 2654911539 ); Building suffix array . . . success; saving to disk . . . done; Elapsed time: 126.003s; done; Elapsed time: 883.472s; processed 615000000 positionssalmon: /home/vagrant/salmon/external/install/include/sparsehash/internal/densehashtable.h:782: void google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::clear_to_size(google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::size_type) [with Value = std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> >; Key = long unsigned int; HashFcn = rapmap::utils::KmerKeyHasher; ExtractKey = google::dense_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > >::SelectKey; SetKey = google::dense_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > >::SetKey; EqualKey = std::equal_to<long unsigned int>; Alloc = google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > >; google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::size_type = long unsigned int]: Assertion table' failed.; Aborted; ```. I also checked the log file and it shows nothing except. ```; more indexing.log; [2016-03-17 10:41:34.655] [jointLog] [info] building index; ```. output:. ```; -rw-r--r-- 1 vdas DPT 59 Mar 17 10:41 indexing.log; -rw-r--r-- 1 vdas DPT 331863951 Mar 17 10:42 rsd.bin; -rw-r--r-- 1 vdas DPT 2654912013 Mar 17 10:43 txpInfo.bin; -rw-r--r-- 1 vdas DPT 21239292320 Mar 17 10:59 sa.bin; ```. So can you give me a workaround or inputs to solve this issue? Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/49
https://github.com/COMBINE-lab/salmon/issues/49:2969,Testability,log,log,2969,"nfo] Building 64-bit suffix array (length of generalized text is 2654911539 ); Building suffix array . . . success; saving to disk . . . done; Elapsed time: 126.003s; done; Elapsed time: 883.472s; processed 615000000 positionssalmon: /home/vagrant/salmon/external/install/include/sparsehash/internal/densehashtable.h:782: void google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::clear_to_size(google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::size_type) [with Value = std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> >; Key = long unsigned int; HashFcn = rapmap::utils::KmerKeyHasher; ExtractKey = google::dense_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > >::SelectKey; SetKey = google::dense_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > >::SetKey; EqualKey = std::equal_to<long unsigned int>; Alloc = google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > >; google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::size_type = long unsigned int]: Assertion table' failed.; Aborted; ```. I also checked the log file and it shows nothing except. ```; more indexing.log; [2016-03-17 10:41:34.655] [jointLog] [info] building index; ```. output:. ```; -rw-r--r-- 1 vdas DPT 59 Mar 17 10:41 indexing.log; -rw-r--r-- 1 vdas DPT 331863951 Mar 17 10:42 rsd.bin; -rw-r--r-- 1 vdas DPT 2654912013 Mar 17 10:43 txpInfo.bin; -rw-r--r-- 1 vdas DPT 21239292320 Mar 17 10:59 sa.bin; ```. So can you give me a workaround or inputs to solve this issue? Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/49
https://github.com/COMBINE-lab/salmon/issues/49:3100,Testability,log,log,3100,"nfo] Building 64-bit suffix array (length of generalized text is 2654911539 ); Building suffix array . . . success; saving to disk . . . done; Elapsed time: 126.003s; done; Elapsed time: 883.472s; processed 615000000 positionssalmon: /home/vagrant/salmon/external/install/include/sparsehash/internal/densehashtable.h:782: void google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::clear_to_size(google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::size_type) [with Value = std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> >; Key = long unsigned int; HashFcn = rapmap::utils::KmerKeyHasher; ExtractKey = google::dense_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > >::SelectKey; SetKey = google::dense_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > >::SetKey; EqualKey = std::equal_to<long unsigned int>; Alloc = google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > >; google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::size_type = long unsigned int]: Assertion table' failed.; Aborted; ```. I also checked the log file and it shows nothing except. ```; more indexing.log; [2016-03-17 10:41:34.655] [jointLog] [info] building index; ```. output:. ```; -rw-r--r-- 1 vdas DPT 59 Mar 17 10:41 indexing.log; -rw-r--r-- 1 vdas DPT 331863951 Mar 17 10:42 rsd.bin; -rw-r--r-- 1 vdas DPT 2654912013 Mar 17 10:43 txpInfo.bin; -rw-r--r-- 1 vdas DPT 21239292320 Mar 17 10:59 sa.bin; ```. So can you give me a workaround or inputs to solve this issue? Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/49
https://github.com/COMBINE-lab/salmon/issues/50:690,Availability,error,error,690,"After generating issue #48, I took the recommendation of switching to the standard EM algorithm, but I'm having further problems. However, I don't think the problem was with the Variational EM algorithm, but an issue with how the dataset is behaving. . This is with the same dataset as before (single end, rRNA-depleted, second-strand protocol, extreme depth of 170M+ reads). I have the options --useFSPD and --biasCorrect turned on with library type ""SF""; the full call is . ```; salmon quant -i $SALMON_DIR -l SF -r <(gzip -c -d $IN_FILE) -o $OUTPUT \; --numBootstraps 100 --useFSPD --geneMap $GENES \; --biasCorrect -p 59; ```. I had attempted to use wasabi and run sleuth, but I got an error where the number of transcripts passing the initial filter was ""NA"". I then discovered that for four samples, many of the transcripts had ""-nan"" generated for the ""NumReads"" column, and this led to all of them having ""-nan"" for the TPM column. One sample had ~100 that failed, but the other three had a variable 106K-109K out of 176K total transcripts fail. No warning or error was thrown during the quantifying or EM optimization steps, so I don't know what happened. Interesting, I should note that the NaNs are only generated when both biasCorrect and useFSPD are turned on. NaNs are not generated when I use only one or neither option. (this was only tested with one sample though). If you have immediate suggestions, that would be great. Otherwise, I can work on generating a test dataset.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/50
https://github.com/COMBINE-lab/salmon/issues/50:1068,Availability,error,error,1068,"After generating issue #48, I took the recommendation of switching to the standard EM algorithm, but I'm having further problems. However, I don't think the problem was with the Variational EM algorithm, but an issue with how the dataset is behaving. . This is with the same dataset as before (single end, rRNA-depleted, second-strand protocol, extreme depth of 170M+ reads). I have the options --useFSPD and --biasCorrect turned on with library type ""SF""; the full call is . ```; salmon quant -i $SALMON_DIR -l SF -r <(gzip -c -d $IN_FILE) -o $OUTPUT \; --numBootstraps 100 --useFSPD --geneMap $GENES \; --biasCorrect -p 59; ```. I had attempted to use wasabi and run sleuth, but I got an error where the number of transcripts passing the initial filter was ""NA"". I then discovered that for four samples, many of the transcripts had ""-nan"" generated for the ""NumReads"" column, and this led to all of them having ""-nan"" for the TPM column. One sample had ~100 that failed, but the other three had a variable 106K-109K out of 176K total transcripts fail. No warning or error was thrown during the quantifying or EM optimization steps, so I don't know what happened. Interesting, I should note that the NaNs are only generated when both biasCorrect and useFSPD are turned on. NaNs are not generated when I use only one or neither option. (this was only tested with one sample though). If you have immediate suggestions, that would be great. Otherwise, I can work on generating a test dataset.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/50
https://github.com/COMBINE-lab/salmon/issues/50:335,Integrability,protocol,protocol,335,"After generating issue #48, I took the recommendation of switching to the standard EM algorithm, but I'm having further problems. However, I don't think the problem was with the Variational EM algorithm, but an issue with how the dataset is behaving. . This is with the same dataset as before (single end, rRNA-depleted, second-strand protocol, extreme depth of 170M+ reads). I have the options --useFSPD and --biasCorrect turned on with library type ""SF""; the full call is . ```; salmon quant -i $SALMON_DIR -l SF -r <(gzip -c -d $IN_FILE) -o $OUTPUT \; --numBootstraps 100 --useFSPD --geneMap $GENES \; --biasCorrect -p 59; ```. I had attempted to use wasabi and run sleuth, but I got an error where the number of transcripts passing the initial filter was ""NA"". I then discovered that for four samples, many of the transcripts had ""-nan"" generated for the ""NumReads"" column, and this led to all of them having ""-nan"" for the TPM column. One sample had ~100 that failed, but the other three had a variable 106K-109K out of 176K total transcripts fail. No warning or error was thrown during the quantifying or EM optimization steps, so I don't know what happened. Interesting, I should note that the NaNs are only generated when both biasCorrect and useFSPD are turned on. NaNs are not generated when I use only one or neither option. (this was only tested with one sample though). If you have immediate suggestions, that would be great. Otherwise, I can work on generating a test dataset.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/50
https://github.com/COMBINE-lab/salmon/issues/50:999,Modifiability,variab,variable,999,"After generating issue #48, I took the recommendation of switching to the standard EM algorithm, but I'm having further problems. However, I don't think the problem was with the Variational EM algorithm, but an issue with how the dataset is behaving. . This is with the same dataset as before (single end, rRNA-depleted, second-strand protocol, extreme depth of 170M+ reads). I have the options --useFSPD and --biasCorrect turned on with library type ""SF""; the full call is . ```; salmon quant -i $SALMON_DIR -l SF -r <(gzip -c -d $IN_FILE) -o $OUTPUT \; --numBootstraps 100 --useFSPD --geneMap $GENES \; --biasCorrect -p 59; ```. I had attempted to use wasabi and run sleuth, but I got an error where the number of transcripts passing the initial filter was ""NA"". I then discovered that for four samples, many of the transcripts had ""-nan"" generated for the ""NumReads"" column, and this led to all of them having ""-nan"" for the TPM column. One sample had ~100 that failed, but the other three had a variable 106K-109K out of 176K total transcripts fail. No warning or error was thrown during the quantifying or EM optimization steps, so I don't know what happened. Interesting, I should note that the NaNs are only generated when both biasCorrect and useFSPD are turned on. NaNs are not generated when I use only one or neither option. (this was only tested with one sample though). If you have immediate suggestions, that would be great. Otherwise, I can work on generating a test dataset.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/50
https://github.com/COMBINE-lab/salmon/issues/50:1114,Performance,optimiz,optimization,1114,"After generating issue #48, I took the recommendation of switching to the standard EM algorithm, but I'm having further problems. However, I don't think the problem was with the Variational EM algorithm, but an issue with how the dataset is behaving. . This is with the same dataset as before (single end, rRNA-depleted, second-strand protocol, extreme depth of 170M+ reads). I have the options --useFSPD and --biasCorrect turned on with library type ""SF""; the full call is . ```; salmon quant -i $SALMON_DIR -l SF -r <(gzip -c -d $IN_FILE) -o $OUTPUT \; --numBootstraps 100 --useFSPD --geneMap $GENES \; --biasCorrect -p 59; ```. I had attempted to use wasabi and run sleuth, but I got an error where the number of transcripts passing the initial filter was ""NA"". I then discovered that for four samples, many of the transcripts had ""-nan"" generated for the ""NumReads"" column, and this led to all of them having ""-nan"" for the TPM column. One sample had ~100 that failed, but the other three had a variable 106K-109K out of 176K total transcripts fail. No warning or error was thrown during the quantifying or EM optimization steps, so I don't know what happened. Interesting, I should note that the NaNs are only generated when both biasCorrect and useFSPD are turned on. NaNs are not generated when I use only one or neither option. (this was only tested with one sample though). If you have immediate suggestions, that would be great. Otherwise, I can work on generating a test dataset.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/50
https://github.com/COMBINE-lab/salmon/issues/50:1351,Testability,test,tested,1351,"After generating issue #48, I took the recommendation of switching to the standard EM algorithm, but I'm having further problems. However, I don't think the problem was with the Variational EM algorithm, but an issue with how the dataset is behaving. . This is with the same dataset as before (single end, rRNA-depleted, second-strand protocol, extreme depth of 170M+ reads). I have the options --useFSPD and --biasCorrect turned on with library type ""SF""; the full call is . ```; salmon quant -i $SALMON_DIR -l SF -r <(gzip -c -d $IN_FILE) -o $OUTPUT \; --numBootstraps 100 --useFSPD --geneMap $GENES \; --biasCorrect -p 59; ```. I had attempted to use wasabi and run sleuth, but I got an error where the number of transcripts passing the initial filter was ""NA"". I then discovered that for four samples, many of the transcripts had ""-nan"" generated for the ""NumReads"" column, and this led to all of them having ""-nan"" for the TPM column. One sample had ~100 that failed, but the other three had a variable 106K-109K out of 176K total transcripts fail. No warning or error was thrown during the quantifying or EM optimization steps, so I don't know what happened. Interesting, I should note that the NaNs are only generated when both biasCorrect and useFSPD are turned on. NaNs are not generated when I use only one or neither option. (this was only tested with one sample though). If you have immediate suggestions, that would be great. Otherwise, I can work on generating a test dataset.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/50
https://github.com/COMBINE-lab/salmon/issues/50:1477,Testability,test,test,1477,"After generating issue #48, I took the recommendation of switching to the standard EM algorithm, but I'm having further problems. However, I don't think the problem was with the Variational EM algorithm, but an issue with how the dataset is behaving. . This is with the same dataset as before (single end, rRNA-depleted, second-strand protocol, extreme depth of 170M+ reads). I have the options --useFSPD and --biasCorrect turned on with library type ""SF""; the full call is . ```; salmon quant -i $SALMON_DIR -l SF -r <(gzip -c -d $IN_FILE) -o $OUTPUT \; --numBootstraps 100 --useFSPD --geneMap $GENES \; --biasCorrect -p 59; ```. I had attempted to use wasabi and run sleuth, but I got an error where the number of transcripts passing the initial filter was ""NA"". I then discovered that for four samples, many of the transcripts had ""-nan"" generated for the ""NumReads"" column, and this led to all of them having ""-nan"" for the TPM column. One sample had ~100 that failed, but the other three had a variable 106K-109K out of 176K total transcripts fail. No warning or error was thrown during the quantifying or EM optimization steps, so I don't know what happened. Interesting, I should note that the NaNs are only generated when both biasCorrect and useFSPD are turned on. NaNs are not generated when I use only one or neither option. (this was only tested with one sample though). If you have immediate suggestions, that would be great. Otherwise, I can work on generating a test dataset.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/50
https://github.com/COMBINE-lab/salmon/issues/51:566,Availability,failure,failure,566,"My first attempt at building salmon failed during what appears to be the tbblib build step. I'm going to continue by building tbb on my own and starting over, but wanted to post notes here. Steps:. ```; $ uname -a; Linux jorvisvm-lx 2.6.18-371.1.2.el5 #1 SMP Mon Oct 7 16:34:35 EDT 2013 x86_64 x86_64 x86_64 GNU/Linux. $ pwd; /tmp/salmon-0.6.1-pre. $ mkdir build && cd build. ## set up environment:; export PATH=/usr/local/packages/gcc-5.3.0/bin:$PATH. $ cmake -DFETCH_BOOST=TRUE -DCMAKE_INSTALL_PREFIX=/usr/local/packages/salmon-v0.6.1-pre ../; $ make; ```. [build.failure.txt](https://github.com/COMBINE-lab/salmon/files/189095/build.failure.txt)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/51
https://github.com/COMBINE-lab/salmon/issues/51:636,Availability,failure,failure,636,"My first attempt at building salmon failed during what appears to be the tbblib build step. I'm going to continue by building tbb on my own and starting over, but wanted to post notes here. Steps:. ```; $ uname -a; Linux jorvisvm-lx 2.6.18-371.1.2.el5 #1 SMP Mon Oct 7 16:34:35 EDT 2013 x86_64 x86_64 x86_64 GNU/Linux. $ pwd; /tmp/salmon-0.6.1-pre. $ mkdir build && cd build. ## set up environment:; export PATH=/usr/local/packages/gcc-5.3.0/bin:$PATH. $ cmake -DFETCH_BOOST=TRUE -DCMAKE_INSTALL_PREFIX=/usr/local/packages/salmon-v0.6.1-pre ../; $ make; ```. [build.failure.txt](https://github.com/COMBINE-lab/salmon/files/189095/build.failure.txt)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/51
https://github.com/COMBINE-lab/salmon/issues/52:43,Modifiability,extend,extend,43,"Wicked fast indeed! Are there any plans to extend salmon to also detect gene fusion events? There isn't a fast and accurate way to do that yet, only approaches requiring full alignments. Most often a base-perfect breakpoint isn't required, an estimate within a hash length is fine. We are a heavy user of bcbio and are also running the full STAR alignment just for gene fusions, which really sucks. Any ideas would be much appreciated.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/52
https://github.com/COMBINE-lab/salmon/issues/52:65,Safety,detect,detect,65,"Wicked fast indeed! Are there any plans to extend salmon to also detect gene fusion events? There isn't a fast and accurate way to do that yet, only approaches requiring full alignments. Most often a base-perfect breakpoint isn't required, an estimate within a hash length is fine. We are a heavy user of bcbio and are also running the full STAR alignment just for gene fusions, which really sucks. Any ideas would be much appreciated.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/52
https://github.com/COMBINE-lab/salmon/issues/52:261,Security,hash,hash,261,"Wicked fast indeed! Are there any plans to extend salmon to also detect gene fusion events? There isn't a fast and accurate way to do that yet, only approaches requiring full alignments. Most often a base-perfect breakpoint isn't required, an estimate within a hash length is fine. We are a heavy user of bcbio and are also running the full STAR alignment just for gene fusions, which really sucks. Any ideas would be much appreciated.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/52
https://github.com/COMBINE-lab/salmon/issues/53:572,Availability,avail,available,572,"Hi all,. So I'm having a similar problem to whats found in issue https://github.com/COMBINE-lab/salmon/issues/49. I'm want to see how much intron RNA is quantified in my experiment, but it seems like the number of ""transcripts"" (i.e. introns) from the fasta is too many. Any ideas as to how to approach this?. Best. ```; /labseq/tools/SalmonBeta-0.5.0_DebianSqueeze/bin/salmon index -t /labseq/Genomes/introns/hg19.introns.fasta -i /labseq/Genomes/salmon/SalmonBeta-0.5.0_DebianSqueeze.quasi.intron/ --type quasi ; ```. ```; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases ; contains **important bug fixes**; please upgrade at your; earliest convenience.; ###; index [""/labseq/Genomes/salmon/SalmonBeta-0.5.0_DebianSqueeze.quasi.intron/""] did not previously exist . . . creating it; [2016-03-28 13:52:29.407] [jointLog] [info] computeBiasFeatures( {[/labseq/Genomes/introns/hg19.introns.fasta] , /labseq/Genomes/salmon/SalmonBeta-0.5.0_DebianSqueeze.quasi.intron/bias_feats.txt, 1, 24). readFile: /labseq/Genomes/introns/hg19.introns.fasta, ; file /labseq/Genomes/introns/hg19.introns.fasta: ; processed 659300 transcripts (4515) transcripts/snscripts/sipts/s transcripts/sts/s; [2016-03-28 13:54:55.658] [jointLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; counted k-mers for 650000 transcriptsElapsed time: 128.964s. Clipped poly-A tails from 0 transcripts; Building rank-select dictionary and saving to disk done; Elapsed time: 5.40482s; Writing sequence data to file . . . done; Elapsed time: 40.1748s; [info] Building 64-bit suffix array (length of generalized text is 4128215243 ); Building suffix array . . . ; success; saving to disk . . . done; Elapsed time: 358.792s; done; Elapsed time: 3065.92s; processed 3810000000 positionssalmon: /home/vagrant/salmon/external/install/include/sparsehash/internal/densehashtable.h:782: void google::dense_hashtable<Value, ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53
https://github.com/COMBINE-lab/salmon/issues/53:614,Availability,avail,available,614,"Hi all,. So I'm having a similar problem to whats found in issue https://github.com/COMBINE-lab/salmon/issues/49. I'm want to see how much intron RNA is quantified in my experiment, but it seems like the number of ""transcripts"" (i.e. introns) from the fasta is too many. Any ideas as to how to approach this?. Best. ```; /labseq/tools/SalmonBeta-0.5.0_DebianSqueeze/bin/salmon index -t /labseq/Genomes/introns/hg19.introns.fasta -i /labseq/Genomes/salmon/SalmonBeta-0.5.0_DebianSqueeze.quasi.intron/ --type quasi ; ```. ```; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases ; contains **important bug fixes**; please upgrade at your; earliest convenience.; ###; index [""/labseq/Genomes/salmon/SalmonBeta-0.5.0_DebianSqueeze.quasi.intron/""] did not previously exist . . . creating it; [2016-03-28 13:52:29.407] [jointLog] [info] computeBiasFeatures( {[/labseq/Genomes/introns/hg19.introns.fasta] , /labseq/Genomes/salmon/SalmonBeta-0.5.0_DebianSqueeze.quasi.intron/bias_feats.txt, 1, 24). readFile: /labseq/Genomes/introns/hg19.introns.fasta, ; file /labseq/Genomes/introns/hg19.introns.fasta: ; processed 659300 transcripts (4515) transcripts/snscripts/sipts/s transcripts/sts/s; [2016-03-28 13:54:55.658] [jointLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; counted k-mers for 650000 transcriptsElapsed time: 128.964s. Clipped poly-A tails from 0 transcripts; Building rank-select dictionary and saving to disk done; Elapsed time: 5.40482s; Writing sequence data to file . . . done; Elapsed time: 40.1748s; [info] Building 64-bit suffix array (length of generalized text is 4128215243 ); Building suffix array . . . ; success; saving to disk . . . done; Elapsed time: 358.792s; done; Elapsed time: 3065.92s; processed 3810000000 positionssalmon: /home/vagrant/salmon/external/install/include/sparsehash/internal/densehashtable.h:782: void google::dense_hashtable<Value, ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53
https://github.com/COMBINE-lab/salmon/issues/53:665,Deployability,release,releases,665,"Hi all,. So I'm having a similar problem to whats found in issue https://github.com/COMBINE-lab/salmon/issues/49. I'm want to see how much intron RNA is quantified in my experiment, but it seems like the number of ""transcripts"" (i.e. introns) from the fasta is too many. Any ideas as to how to approach this?. Best. ```; /labseq/tools/SalmonBeta-0.5.0_DebianSqueeze/bin/salmon index -t /labseq/Genomes/introns/hg19.introns.fasta -i /labseq/Genomes/salmon/SalmonBeta-0.5.0_DebianSqueeze.quasi.intron/ --type quasi ; ```. ```; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases ; contains **important bug fixes**; please upgrade at your; earliest convenience.; ###; index [""/labseq/Genomes/salmon/SalmonBeta-0.5.0_DebianSqueeze.quasi.intron/""] did not previously exist . . . creating it; [2016-03-28 13:52:29.407] [jointLog] [info] computeBiasFeatures( {[/labseq/Genomes/introns/hg19.introns.fasta] , /labseq/Genomes/salmon/SalmonBeta-0.5.0_DebianSqueeze.quasi.intron/bias_feats.txt, 1, 24). readFile: /labseq/Genomes/introns/hg19.introns.fasta, ; file /labseq/Genomes/introns/hg19.introns.fasta: ; processed 659300 transcripts (4515) transcripts/snscripts/sipts/s transcripts/sts/s; [2016-03-28 13:54:55.658] [jointLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; counted k-mers for 650000 transcriptsElapsed time: 128.964s. Clipped poly-A tails from 0 transcripts; Building rank-select dictionary and saving to disk done; Elapsed time: 5.40482s; Writing sequence data to file . . . done; Elapsed time: 40.1748s; [info] Building 64-bit suffix array (length of generalized text is 4128215243 ); Building suffix array . . . ; success; saving to disk . . . done; Elapsed time: 358.792s; done; Elapsed time: 3065.92s; processed 3810000000 positionssalmon: /home/vagrant/salmon/external/install/include/sparsehash/internal/densehashtable.h:782: void google::dense_hashtable<Value, ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53
https://github.com/COMBINE-lab/salmon/issues/53:717,Deployability,upgrade,upgrade,717,"Hi all,. So I'm having a similar problem to whats found in issue https://github.com/COMBINE-lab/salmon/issues/49. I'm want to see how much intron RNA is quantified in my experiment, but it seems like the number of ""transcripts"" (i.e. introns) from the fasta is too many. Any ideas as to how to approach this?. Best. ```; /labseq/tools/SalmonBeta-0.5.0_DebianSqueeze/bin/salmon index -t /labseq/Genomes/introns/hg19.introns.fasta -i /labseq/Genomes/salmon/SalmonBeta-0.5.0_DebianSqueeze.quasi.intron/ --type quasi ; ```. ```; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases ; contains **important bug fixes**; please upgrade at your; earliest convenience.; ###; index [""/labseq/Genomes/salmon/SalmonBeta-0.5.0_DebianSqueeze.quasi.intron/""] did not previously exist . . . creating it; [2016-03-28 13:52:29.407] [jointLog] [info] computeBiasFeatures( {[/labseq/Genomes/introns/hg19.introns.fasta] , /labseq/Genomes/salmon/SalmonBeta-0.5.0_DebianSqueeze.quasi.intron/bias_feats.txt, 1, 24). readFile: /labseq/Genomes/introns/hg19.introns.fasta, ; file /labseq/Genomes/introns/hg19.introns.fasta: ; processed 659300 transcripts (4515) transcripts/snscripts/sipts/s transcripts/sts/s; [2016-03-28 13:54:55.658] [jointLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; counted k-mers for 650000 transcriptsElapsed time: 128.964s. Clipped poly-A tails from 0 transcripts; Building rank-select dictionary and saving to disk done; Elapsed time: 5.40482s; Writing sequence data to file . . . done; Elapsed time: 40.1748s; [info] Building 64-bit suffix array (length of generalized text is 4128215243 ); Building suffix array . . . ; success; saving to disk . . . done; Elapsed time: 358.792s; done; Elapsed time: 3065.92s; processed 3810000000 positionssalmon: /home/vagrant/salmon/external/install/include/sparsehash/internal/densehashtable.h:782: void google::dense_hashtable<Value, ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53
https://github.com/COMBINE-lab/salmon/issues/53:1907,Deployability,install,install,1907,"13:52:29.407] [jointLog] [info] computeBiasFeatures( {[/labseq/Genomes/introns/hg19.introns.fasta] , /labseq/Genomes/salmon/SalmonBeta-0.5.0_DebianSqueeze.quasi.intron/bias_feats.txt, 1, 24). readFile: /labseq/Genomes/introns/hg19.introns.fasta, ; file /labseq/Genomes/introns/hg19.introns.fasta: ; processed 659300 transcripts (4515) transcripts/snscripts/sipts/s transcripts/sts/s; [2016-03-28 13:54:55.658] [jointLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; counted k-mers for 650000 transcriptsElapsed time: 128.964s. Clipped poly-A tails from 0 transcripts; Building rank-select dictionary and saving to disk done; Elapsed time: 5.40482s; Writing sequence data to file . . . done; Elapsed time: 40.1748s; [info] Building 64-bit suffix array (length of generalized text is 4128215243 ); Building suffix array . . . ; success; saving to disk . . . done; Elapsed time: 358.792s; done; Elapsed time: 3065.92s; processed 3810000000 positionssalmon: /home/vagrant/salmon/external/install/include/sparsehash/internal/densehashtable.h:782: void google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::clear_to_size(google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::size_type) [with Value = std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> >; Key = long unsigned int; HashFcn = rapmap::utils::KmerKeyHasher; ExtractKey = google::dense_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > >::SelectKey; SetKey = google::dense_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > >::SetKey; EqualKey = std::equal_to<lo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53
https://github.com/COMBINE-lab/salmon/issues/53:3175,Safety,Abort,Aborted,3175,"air<const long unsigned int, rapmap::utils::SAInterval<long int> >; Key = long unsigned int; HashFcn = rapmap::utils::KmerKeyHasher; ExtractKey = google::dense_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > >::SelectKey; SetKey = google::dense_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > >::SetKey; EqualKey = std::equal_to<long unsigned int>; Alloc = google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > >; google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::size_type = long unsigned int]: Assertion `table' failed. Aborted; ```. head of fasta file:. ```; >uc001aaa.3_intron_0_0_chr1_12228_f| chr1:12227-12612; GTAAGTAGTGCTTGTGCTCATCTCCTTGGCTGTGATACGTGGCCGGCCCTCGCTCCAGCAGCTGGACCCCTACCTGCCGTCTGCTGCCATCGGAGCCCAAAGCCGGGCTGTGACTGCTCAGACCAGCCGGCTGGAGGGAGGGGCTCAGCAGGTCTGGCTTTGGCCCTGGGAGAGCAGGTGGAAGATCAGGCAGGCCATCGCTGCCACAGAACCCAGTGGATTGGCCTAGGTGGGATCTCTGAGCTCAACAAGCCCTCTCTGGGTGGTAGGTGCAGAGACGGGAGGGGCAGAGCCGCAGGCACAGCCAAGAGGGCTGAAGAAATGGTAGAACGGAGCAGCTGGTGATGTGTGGGCCCACCGGCCCCAGGCTCCTGTCTCCCCCCAG; >uc001aaa.3_intron_1_0_chr1_12722_f| chr1:12721-13220; GTGAGAGGAGAGTAGACAGTGAGTGGGAGTGGCGTCGCCCCTAGGGCTCTACGGGGCCGGCGTCTCCTGTCTCCTGGAGAGGCTTCGATGCCCCTCCACACCCTCTTGATCTTCCCTGTGATGTCATCTGGAGCCCTGCTGCTTGCGGTGGCCTATAAAGCCTCCTAGTCTGGCTCCAAGGCCTGGCAGAGTCTTTCCCAGGGAAAGCTACAAGCAGCAAACAGTCTGCATGGGTCATCCCCTTCACTCCCAGCTCAGAGCCCAGGCCAGGGGCCCCCAAGAAAGGCTCTGGTGGAGAACCTGTGCATGAAGGCTGTCAACCAGTCCATAGGCAAGCCTGGCTGCCTCCAGCTGGGTCGACAGACAGGGGCTGGAGAAGGGGAGAAGAGGAAAGTGAGGTTGCCTGCCCTGTCTCCTACCTGAGGCTGAGGAAGGAGAAGGGGATGCACTGTTGGGGAGGCAGCTGTAA",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53
https://github.com/COMBINE-lab/salmon/issues/53:2006,Security,Hash,HashFcn,2006,"482s; Writing sequence data to file . . . done; Elapsed time: 40.1748s; [info] Building 64-bit suffix array (length of generalized text is 4128215243 ); Building suffix array . . . ; success; saving to disk . . . done; Elapsed time: 358.792s; done; Elapsed time: 3065.92s; processed 3810000000 positionssalmon: /home/vagrant/salmon/external/install/include/sparsehash/internal/densehashtable.h:782: void google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::clear_to_size(google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::size_type) [with Value = std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> >; Key = long unsigned int; HashFcn = rapmap::utils::KmerKeyHasher; ExtractKey = google::dense_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > >::SelectKey; SetKey = google::dense_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > >::SetKey; EqualKey = std::equal_to<long unsigned int>; Alloc = google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > >; google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::size_type = long unsigned int]: Assertion `table' failed. Aborted; ```. head of fasta file:. ```; >uc001aaa.3_intron_0_0_chr1_12228_f| chr1:12227-12612; GTAAGTAGTGCTTGTGCTCATCTCCTTGGCTGTGATACGTGGCCGGCCCTCGCTCCAGCAGCTGGACCCCTACCTGCCGTCTGCTGCCATCGGAGCCCAAAGCCGGGCTGTGACTGCTCAGACCAGCCGGCTGGAGGGAGGGGCTCAGCAGGTCTGGCTTTGGCCCTGGGAGAGCAGGTGGAAGATCAGGCAGGCCATCGCTGCCACAGAACCCAGTGGATTGGCCTAGGTGGGATCTCTGAGCTCAACAAGCCCTCTCTGGGTGGTAGGTGCAGAGACGGGAGGGGCAGAGCCGC",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53
https://github.com/COMBINE-lab/salmon/issues/53:2103,Security,Hash,HashFcn,2103,"482s; Writing sequence data to file . . . done; Elapsed time: 40.1748s; [info] Building 64-bit suffix array (length of generalized text is 4128215243 ); Building suffix array . . . ; success; saving to disk . . . done; Elapsed time: 358.792s; done; Elapsed time: 3065.92s; processed 3810000000 positionssalmon: /home/vagrant/salmon/external/install/include/sparsehash/internal/densehashtable.h:782: void google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::clear_to_size(google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::size_type) [with Value = std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> >; Key = long unsigned int; HashFcn = rapmap::utils::KmerKeyHasher; ExtractKey = google::dense_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > >::SelectKey; SetKey = google::dense_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > >::SetKey; EqualKey = std::equal_to<long unsigned int>; Alloc = google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > >; google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::size_type = long unsigned int]: Assertion `table' failed. Aborted; ```. head of fasta file:. ```; >uc001aaa.3_intron_0_0_chr1_12228_f| chr1:12227-12612; GTAAGTAGTGCTTGTGCTCATCTCCTTGGCTGTGATACGTGGCCGGCCCTCGCTCCAGCAGCTGGACCCCTACCTGCCGTCTGCTGCCATCGGAGCCCAAAGCCGGGCTGTGACTGCTCAGACCAGCCGGCTGGAGGGAGGGGCTCAGCAGGTCTGGCTTTGGCCCTGGGAGAGCAGGTGGAAGATCAGGCAGGCCATCGCTGCCACAGAACCCAGTGGATTGGCCTAGGTGGGATCTCTGAGCTCAACAAGCCCTCTCTGGGTGGTAGGTGCAGAGACGGGAGGGGCAGAGCCGC",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53
https://github.com/COMBINE-lab/salmon/issues/53:2274,Security,Hash,HashFcn,2274,"482s; Writing sequence data to file . . . done; Elapsed time: 40.1748s; [info] Building 64-bit suffix array (length of generalized text is 4128215243 ); Building suffix array . . . ; success; saving to disk . . . done; Elapsed time: 358.792s; done; Elapsed time: 3065.92s; processed 3810000000 positionssalmon: /home/vagrant/salmon/external/install/include/sparsehash/internal/densehashtable.h:782: void google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::clear_to_size(google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::size_type) [with Value = std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> >; Key = long unsigned int; HashFcn = rapmap::utils::KmerKeyHasher; ExtractKey = google::dense_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > >::SelectKey; SetKey = google::dense_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > >::SetKey; EqualKey = std::equal_to<long unsigned int>; Alloc = google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > >; google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::size_type = long unsigned int]: Assertion `table' failed. Aborted; ```. head of fasta file:. ```; >uc001aaa.3_intron_0_0_chr1_12228_f| chr1:12227-12612; GTAAGTAGTGCTTGTGCTCATCTCCTTGGCTGTGATACGTGGCCGGCCCTCGCTCCAGCAGCTGGACCCCTACCTGCCGTCTGCTGCCATCGGAGCCCAAAGCCGGGCTGTGACTGCTCAGACCAGCCGGCTGGAGGGAGGGGCTCAGCAGGTCTGGCTTTGGCCCTGGGAGAGCAGGTGGAAGATCAGGCAGGCCATCGCTGCCACAGAACCCAGTGGATTGGCCTAGGTGGGATCTCTGAGCTCAACAAGCCCTCTCTGGGTGGTAGGTGCAGAGACGGGAGGGGCAGAGCCGC",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53
https://github.com/COMBINE-lab/salmon/issues/53:3070,Security,Hash,HashFcn,3070,"482s; Writing sequence data to file . . . done; Elapsed time: 40.1748s; [info] Building 64-bit suffix array (length of generalized text is 4128215243 ); Building suffix array . . . ; success; saving to disk . . . done; Elapsed time: 358.792s; done; Elapsed time: 3065.92s; processed 3810000000 positionssalmon: /home/vagrant/salmon/external/install/include/sparsehash/internal/densehashtable.h:782: void google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::clear_to_size(google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::size_type) [with Value = std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> >; Key = long unsigned int; HashFcn = rapmap::utils::KmerKeyHasher; ExtractKey = google::dense_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > >::SelectKey; SetKey = google::dense_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > >::SetKey; EqualKey = std::equal_to<long unsigned int>; Alloc = google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > >; google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::size_type = long unsigned int]: Assertion `table' failed. Aborted; ```. head of fasta file:. ```; >uc001aaa.3_intron_0_0_chr1_12228_f| chr1:12227-12612; GTAAGTAGTGCTTGTGCTCATCTCCTTGGCTGTGATACGTGGCCGGCCCTCGCTCCAGCAGCTGGACCCCTACCTGCCGTCTGCTGCCATCGGAGCCCAAAGCCGGGCTGTGACTGCTCAGACCAGCCGGCTGGAGGGAGGGGCTCAGCAGGTCTGGCTTTGGCCCTGGGAGAGCAGGTGGAAGATCAGGCAGGCCATCGCTGCCACAGAACCCAGTGGATTGGCCTAGGTGGGATCTCTGAGCTCAACAAGCCCTCTCTGGGTGGTAGGTGCAGAGACGGGAGGGGCAGAGCCGC",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53
https://github.com/COMBINE-lab/salmon/issues/53:3149,Testability,Assert,Assertion,3149,"482s; Writing sequence data to file . . . done; Elapsed time: 40.1748s; [info] Building 64-bit suffix array (length of generalized text is 4128215243 ); Building suffix array . . . ; success; saving to disk . . . done; Elapsed time: 358.792s; done; Elapsed time: 3065.92s; processed 3810000000 positionssalmon: /home/vagrant/salmon/external/install/include/sparsehash/internal/densehashtable.h:782: void google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::clear_to_size(google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::size_type) [with Value = std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> >; Key = long unsigned int; HashFcn = rapmap::utils::KmerKeyHasher; ExtractKey = google::dense_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > >::SelectKey; SetKey = google::dense_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > >::SetKey; EqualKey = std::equal_to<long unsigned int>; Alloc = google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > >; google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::size_type = long unsigned int]: Assertion `table' failed. Aborted; ```. head of fasta file:. ```; >uc001aaa.3_intron_0_0_chr1_12228_f| chr1:12227-12612; GTAAGTAGTGCTTGTGCTCATCTCCTTGGCTGTGATACGTGGCCGGCCCTCGCTCCAGCAGCTGGACCCCTACCTGCCGTCTGCTGCCATCGGAGCCCAAAGCCGGGCTGTGACTGCTCAGACCAGCCGGCTGGAGGGAGGGGCTCAGCAGGTCTGGCTTTGGCCCTGGGAGAGCAGGTGGAAGATCAGGCAGGCCATCGCTGCCACAGAACCCAGTGGATTGGCCTAGGTGGGATCTCTGAGCTCAACAAGCCCTCTCTGGGTGGTAGGTGCAGAGACGGGAGGGGCAGAGCCGC",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53
https://github.com/COMBINE-lab/salmon/issues/54:1710,Availability,fault,fault,1710,"hed to using precompiled binaries, version 0.6.0. Now working on a new server running CentOS Linux release 7.1.1503. I was able to successfully generate my index, then started running the quantification step. Here is my command:. `$ /home/jorvis/salmon/bin/salmon quant -p 24 -i transcripts_index -l IU -1 R1.trimmed.PE.fastq -2 R2.trimmed.PE.fastq -o transcripts_quan`. This host has 48 cores and 128GB RAM. . And here is the STDOUT. ```; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ threads ] => { 24 }; # [ index ] => { transcripts_index }; # [ libType ] => { IU }; # [ mates1 ] => { R1.trimmed.PE.fastq }; # [ mates2 ] => { R2.trimmed.PE.fastq }; # [ output ] => { transcripts_quan }; Logs will be written to transcripts_quan/logs; [2016-03-30 15:50:48.489] [jointLog] [info] parsing read library format; there is 1 lib; Loading 64-bit quasi index[2016-03-30 15:50:48.543] [jointLog] [info] Loading Quasi index; [2016-03-30 15:50:48.544] [stderrLog] [info] Loading Suffix Array; [2016-03-30 15:50:48.544] [stderrLog] [info] Loading Position Hash; [2016-03-30 15:50:58.359] [stderrLog] [info] Loading Transcript Info; [2016-03-30 15:50:59.932] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-03-30 15:51:00.610] [stderrLog] [info] There were 2027284 set bits in the bit array; [2016-03-30 15:51:00.917] [stderrLog] [info] Computing transcript lengths; [2016-03-30 15:51:00.925] [stderrLog] [info] Waiting to finish loading hash; Index contained 2027284 targets; [2016-03-30 15:51:08.499] [jointLog] [info] done; [2016-03-30 15:51:08.499] [stderrLog] [info] Done loading index. Segmentation fault; ```. The only log file I see is this one: transcripts_quan/logs/salmon_quant.log. $ cat salmon_quant.log ; [2016-03-30 15:50:48.489] [jointLog] [info] parsing read library format; [2016-03-30 15:50:48.543] [jointLog] [info] Loading Quasi index; [2016-03-30 15:51:08.499] [jointLog] [info] done",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54
https://github.com/COMBINE-lab/salmon/issues/54:109,Deployability,release,release,109,"I've switched to using precompiled binaries, version 0.6.0. Now working on a new server running CentOS Linux release 7.1.1503. I was able to successfully generate my index, then started running the quantification step. Here is my command:. `$ /home/jorvis/salmon/bin/salmon quant -p 24 -i transcripts_index -l IU -1 R1.trimmed.PE.fastq -2 R2.trimmed.PE.fastq -o transcripts_quan`. This host has 48 cores and 128GB RAM. . And here is the STDOUT. ```; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ threads ] => { 24 }; # [ index ] => { transcripts_index }; # [ libType ] => { IU }; # [ mates1 ] => { R1.trimmed.PE.fastq }; # [ mates2 ] => { R2.trimmed.PE.fastq }; # [ output ] => { transcripts_quan }; Logs will be written to transcripts_quan/logs; [2016-03-30 15:50:48.489] [jointLog] [info] parsing read library format; there is 1 lib; Loading 64-bit quasi index[2016-03-30 15:50:48.543] [jointLog] [info] Loading Quasi index; [2016-03-30 15:50:48.544] [stderrLog] [info] Loading Suffix Array; [2016-03-30 15:50:48.544] [stderrLog] [info] Loading Position Hash; [2016-03-30 15:50:58.359] [stderrLog] [info] Loading Transcript Info; [2016-03-30 15:50:59.932] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-03-30 15:51:00.610] [stderrLog] [info] There were 2027284 set bits in the bit array; [2016-03-30 15:51:00.917] [stderrLog] [info] Computing transcript lengths; [2016-03-30 15:51:00.925] [stderrLog] [info] Waiting to finish loading hash; Index contained 2027284 targets; [2016-03-30 15:51:08.499] [jointLog] [info] done; [2016-03-30 15:51:08.499] [stderrLog] [info] Done loading index. Segmentation fault; ```. The only log file I see is this one: transcripts_quan/logs/salmon_quant.log. $ cat salmon_quant.log ; [2016-03-30 15:50:48.489] [jointLog] [info] parsing read library format; [2016-03-30 15:50:48.543] [jointLog] [info] Loading Quasi index; [2016-03-30 15:51:08.499] [jointLog] [i",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54
https://github.com/COMBINE-lab/salmon/issues/54:934,Performance,Load,Loading,934,"I've switched to using precompiled binaries, version 0.6.0. Now working on a new server running CentOS Linux release 7.1.1503. I was able to successfully generate my index, then started running the quantification step. Here is my command:. `$ /home/jorvis/salmon/bin/salmon quant -p 24 -i transcripts_index -l IU -1 R1.trimmed.PE.fastq -2 R2.trimmed.PE.fastq -o transcripts_quan`. This host has 48 cores and 128GB RAM. . And here is the STDOUT. ```; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ threads ] => { 24 }; # [ index ] => { transcripts_index }; # [ libType ] => { IU }; # [ mates1 ] => { R1.trimmed.PE.fastq }; # [ mates2 ] => { R2.trimmed.PE.fastq }; # [ output ] => { transcripts_quan }; Logs will be written to transcripts_quan/logs; [2016-03-30 15:50:48.489] [jointLog] [info] parsing read library format; there is 1 lib; Loading 64-bit quasi index[2016-03-30 15:50:48.543] [jointLog] [info] Loading Quasi index; [2016-03-30 15:50:48.544] [stderrLog] [info] Loading Suffix Array; [2016-03-30 15:50:48.544] [stderrLog] [info] Loading Position Hash; [2016-03-30 15:50:58.359] [stderrLog] [info] Loading Transcript Info; [2016-03-30 15:50:59.932] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-03-30 15:51:00.610] [stderrLog] [info] There were 2027284 set bits in the bit array; [2016-03-30 15:51:00.917] [stderrLog] [info] Computing transcript lengths; [2016-03-30 15:51:00.925] [stderrLog] [info] Waiting to finish loading hash; Index contained 2027284 targets; [2016-03-30 15:51:08.499] [jointLog] [info] done; [2016-03-30 15:51:08.499] [stderrLog] [info] Done loading index. Segmentation fault; ```. The only log file I see is this one: transcripts_quan/logs/salmon_quant.log. $ cat salmon_quant.log ; [2016-03-30 15:50:48.489] [jointLog] [info] parsing read library format; [2016-03-30 15:50:48.543] [jointLog] [info] Loading Quasi index; [2016-03-30 15:51:08.499] [jointLog] [i",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54
https://github.com/COMBINE-lab/salmon/issues/54:1004,Performance,Load,Loading,1004,"hed to using precompiled binaries, version 0.6.0. Now working on a new server running CentOS Linux release 7.1.1503. I was able to successfully generate my index, then started running the quantification step. Here is my command:. `$ /home/jorvis/salmon/bin/salmon quant -p 24 -i transcripts_index -l IU -1 R1.trimmed.PE.fastq -2 R2.trimmed.PE.fastq -o transcripts_quan`. This host has 48 cores and 128GB RAM. . And here is the STDOUT. ```; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ threads ] => { 24 }; # [ index ] => { transcripts_index }; # [ libType ] => { IU }; # [ mates1 ] => { R1.trimmed.PE.fastq }; # [ mates2 ] => { R2.trimmed.PE.fastq }; # [ output ] => { transcripts_quan }; Logs will be written to transcripts_quan/logs; [2016-03-30 15:50:48.489] [jointLog] [info] parsing read library format; there is 1 lib; Loading 64-bit quasi index[2016-03-30 15:50:48.543] [jointLog] [info] Loading Quasi index; [2016-03-30 15:50:48.544] [stderrLog] [info] Loading Suffix Array; [2016-03-30 15:50:48.544] [stderrLog] [info] Loading Position Hash; [2016-03-30 15:50:58.359] [stderrLog] [info] Loading Transcript Info; [2016-03-30 15:50:59.932] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-03-30 15:51:00.610] [stderrLog] [info] There were 2027284 set bits in the bit array; [2016-03-30 15:51:00.917] [stderrLog] [info] Computing transcript lengths; [2016-03-30 15:51:00.925] [stderrLog] [info] Waiting to finish loading hash; Index contained 2027284 targets; [2016-03-30 15:51:08.499] [jointLog] [info] done; [2016-03-30 15:51:08.499] [stderrLog] [info] Done loading index. Segmentation fault; ```. The only log file I see is this one: transcripts_quan/logs/salmon_quant.log. $ cat salmon_quant.log ; [2016-03-30 15:50:48.489] [jointLog] [info] parsing read library format; [2016-03-30 15:50:48.543] [jointLog] [info] Loading Quasi index; [2016-03-30 15:51:08.499] [jointLog] [info] done",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54
https://github.com/COMBINE-lab/salmon/issues/54:1070,Performance,Load,Loading,1070,"hed to using precompiled binaries, version 0.6.0. Now working on a new server running CentOS Linux release 7.1.1503. I was able to successfully generate my index, then started running the quantification step. Here is my command:. `$ /home/jorvis/salmon/bin/salmon quant -p 24 -i transcripts_index -l IU -1 R1.trimmed.PE.fastq -2 R2.trimmed.PE.fastq -o transcripts_quan`. This host has 48 cores and 128GB RAM. . And here is the STDOUT. ```; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ threads ] => { 24 }; # [ index ] => { transcripts_index }; # [ libType ] => { IU }; # [ mates1 ] => { R1.trimmed.PE.fastq }; # [ mates2 ] => { R2.trimmed.PE.fastq }; # [ output ] => { transcripts_quan }; Logs will be written to transcripts_quan/logs; [2016-03-30 15:50:48.489] [jointLog] [info] parsing read library format; there is 1 lib; Loading 64-bit quasi index[2016-03-30 15:50:48.543] [jointLog] [info] Loading Quasi index; [2016-03-30 15:50:48.544] [stderrLog] [info] Loading Suffix Array; [2016-03-30 15:50:48.544] [stderrLog] [info] Loading Position Hash; [2016-03-30 15:50:58.359] [stderrLog] [info] Loading Transcript Info; [2016-03-30 15:50:59.932] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-03-30 15:51:00.610] [stderrLog] [info] There were 2027284 set bits in the bit array; [2016-03-30 15:51:00.917] [stderrLog] [info] Computing transcript lengths; [2016-03-30 15:51:00.925] [stderrLog] [info] Waiting to finish loading hash; Index contained 2027284 targets; [2016-03-30 15:51:08.499] [jointLog] [info] done; [2016-03-30 15:51:08.499] [stderrLog] [info] Done loading index. Segmentation fault; ```. The only log file I see is this one: transcripts_quan/logs/salmon_quant.log. $ cat salmon_quant.log ; [2016-03-30 15:50:48.489] [jointLog] [info] parsing read library format; [2016-03-30 15:50:48.543] [jointLog] [info] Loading Quasi index; [2016-03-30 15:51:08.499] [jointLog] [info] done",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54
https://github.com/COMBINE-lab/salmon/issues/54:1137,Performance,Load,Loading,1137,"hed to using precompiled binaries, version 0.6.0. Now working on a new server running CentOS Linux release 7.1.1503. I was able to successfully generate my index, then started running the quantification step. Here is my command:. `$ /home/jorvis/salmon/bin/salmon quant -p 24 -i transcripts_index -l IU -1 R1.trimmed.PE.fastq -2 R2.trimmed.PE.fastq -o transcripts_quan`. This host has 48 cores and 128GB RAM. . And here is the STDOUT. ```; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ threads ] => { 24 }; # [ index ] => { transcripts_index }; # [ libType ] => { IU }; # [ mates1 ] => { R1.trimmed.PE.fastq }; # [ mates2 ] => { R2.trimmed.PE.fastq }; # [ output ] => { transcripts_quan }; Logs will be written to transcripts_quan/logs; [2016-03-30 15:50:48.489] [jointLog] [info] parsing read library format; there is 1 lib; Loading 64-bit quasi index[2016-03-30 15:50:48.543] [jointLog] [info] Loading Quasi index; [2016-03-30 15:50:48.544] [stderrLog] [info] Loading Suffix Array; [2016-03-30 15:50:48.544] [stderrLog] [info] Loading Position Hash; [2016-03-30 15:50:58.359] [stderrLog] [info] Loading Transcript Info; [2016-03-30 15:50:59.932] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-03-30 15:51:00.610] [stderrLog] [info] There were 2027284 set bits in the bit array; [2016-03-30 15:51:00.917] [stderrLog] [info] Computing transcript lengths; [2016-03-30 15:51:00.925] [stderrLog] [info] Waiting to finish loading hash; Index contained 2027284 targets; [2016-03-30 15:51:08.499] [jointLog] [info] done; [2016-03-30 15:51:08.499] [stderrLog] [info] Done loading index. Segmentation fault; ```. The only log file I see is this one: transcripts_quan/logs/salmon_quant.log. $ cat salmon_quant.log ; [2016-03-30 15:50:48.489] [jointLog] [info] parsing read library format; [2016-03-30 15:50:48.543] [jointLog] [info] Loading Quasi index; [2016-03-30 15:51:08.499] [jointLog] [info] done",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54
https://github.com/COMBINE-lab/salmon/issues/54:1205,Performance,Load,Loading,1205,"hed to using precompiled binaries, version 0.6.0. Now working on a new server running CentOS Linux release 7.1.1503. I was able to successfully generate my index, then started running the quantification step. Here is my command:. `$ /home/jorvis/salmon/bin/salmon quant -p 24 -i transcripts_index -l IU -1 R1.trimmed.PE.fastq -2 R2.trimmed.PE.fastq -o transcripts_quan`. This host has 48 cores and 128GB RAM. . And here is the STDOUT. ```; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ threads ] => { 24 }; # [ index ] => { transcripts_index }; # [ libType ] => { IU }; # [ mates1 ] => { R1.trimmed.PE.fastq }; # [ mates2 ] => { R2.trimmed.PE.fastq }; # [ output ] => { transcripts_quan }; Logs will be written to transcripts_quan/logs; [2016-03-30 15:50:48.489] [jointLog] [info] parsing read library format; there is 1 lib; Loading 64-bit quasi index[2016-03-30 15:50:48.543] [jointLog] [info] Loading Quasi index; [2016-03-30 15:50:48.544] [stderrLog] [info] Loading Suffix Array; [2016-03-30 15:50:48.544] [stderrLog] [info] Loading Position Hash; [2016-03-30 15:50:58.359] [stderrLog] [info] Loading Transcript Info; [2016-03-30 15:50:59.932] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-03-30 15:51:00.610] [stderrLog] [info] There were 2027284 set bits in the bit array; [2016-03-30 15:51:00.917] [stderrLog] [info] Computing transcript lengths; [2016-03-30 15:51:00.925] [stderrLog] [info] Waiting to finish loading hash; Index contained 2027284 targets; [2016-03-30 15:51:08.499] [jointLog] [info] done; [2016-03-30 15:51:08.499] [stderrLog] [info] Done loading index. Segmentation fault; ```. The only log file I see is this one: transcripts_quan/logs/salmon_quant.log. $ cat salmon_quant.log ; [2016-03-30 15:50:48.489] [jointLog] [info] parsing read library format; [2016-03-30 15:50:48.543] [jointLog] [info] Loading Quasi index; [2016-03-30 15:51:08.499] [jointLog] [info] done",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54
https://github.com/COMBINE-lab/salmon/issues/54:1275,Performance,Load,Loading,1275,"hed to using precompiled binaries, version 0.6.0. Now working on a new server running CentOS Linux release 7.1.1503. I was able to successfully generate my index, then started running the quantification step. Here is my command:. `$ /home/jorvis/salmon/bin/salmon quant -p 24 -i transcripts_index -l IU -1 R1.trimmed.PE.fastq -2 R2.trimmed.PE.fastq -o transcripts_quan`. This host has 48 cores and 128GB RAM. . And here is the STDOUT. ```; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ threads ] => { 24 }; # [ index ] => { transcripts_index }; # [ libType ] => { IU }; # [ mates1 ] => { R1.trimmed.PE.fastq }; # [ mates2 ] => { R2.trimmed.PE.fastq }; # [ output ] => { transcripts_quan }; Logs will be written to transcripts_quan/logs; [2016-03-30 15:50:48.489] [jointLog] [info] parsing read library format; there is 1 lib; Loading 64-bit quasi index[2016-03-30 15:50:48.543] [jointLog] [info] Loading Quasi index; [2016-03-30 15:50:48.544] [stderrLog] [info] Loading Suffix Array; [2016-03-30 15:50:48.544] [stderrLog] [info] Loading Position Hash; [2016-03-30 15:50:58.359] [stderrLog] [info] Loading Transcript Info; [2016-03-30 15:50:59.932] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-03-30 15:51:00.610] [stderrLog] [info] There were 2027284 set bits in the bit array; [2016-03-30 15:51:00.917] [stderrLog] [info] Computing transcript lengths; [2016-03-30 15:51:00.925] [stderrLog] [info] Waiting to finish loading hash; Index contained 2027284 targets; [2016-03-30 15:51:08.499] [jointLog] [info] done; [2016-03-30 15:51:08.499] [stderrLog] [info] Done loading index. Segmentation fault; ```. The only log file I see is this one: transcripts_quan/logs/salmon_quant.log. $ cat salmon_quant.log ; [2016-03-30 15:50:48.489] [jointLog] [info] parsing read library format; [2016-03-30 15:50:48.543] [jointLog] [info] Loading Quasi index; [2016-03-30 15:51:08.499] [jointLog] [info] done",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54
https://github.com/COMBINE-lab/salmon/issues/54:1535,Performance,load,loading,1535,"hed to using precompiled binaries, version 0.6.0. Now working on a new server running CentOS Linux release 7.1.1503. I was able to successfully generate my index, then started running the quantification step. Here is my command:. `$ /home/jorvis/salmon/bin/salmon quant -p 24 -i transcripts_index -l IU -1 R1.trimmed.PE.fastq -2 R2.trimmed.PE.fastq -o transcripts_quan`. This host has 48 cores and 128GB RAM. . And here is the STDOUT. ```; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ threads ] => { 24 }; # [ index ] => { transcripts_index }; # [ libType ] => { IU }; # [ mates1 ] => { R1.trimmed.PE.fastq }; # [ mates2 ] => { R2.trimmed.PE.fastq }; # [ output ] => { transcripts_quan }; Logs will be written to transcripts_quan/logs; [2016-03-30 15:50:48.489] [jointLog] [info] parsing read library format; there is 1 lib; Loading 64-bit quasi index[2016-03-30 15:50:48.543] [jointLog] [info] Loading Quasi index; [2016-03-30 15:50:48.544] [stderrLog] [info] Loading Suffix Array; [2016-03-30 15:50:48.544] [stderrLog] [info] Loading Position Hash; [2016-03-30 15:50:58.359] [stderrLog] [info] Loading Transcript Info; [2016-03-30 15:50:59.932] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-03-30 15:51:00.610] [stderrLog] [info] There were 2027284 set bits in the bit array; [2016-03-30 15:51:00.917] [stderrLog] [info] Computing transcript lengths; [2016-03-30 15:51:00.925] [stderrLog] [info] Waiting to finish loading hash; Index contained 2027284 targets; [2016-03-30 15:51:08.499] [jointLog] [info] done; [2016-03-30 15:51:08.499] [stderrLog] [info] Done loading index. Segmentation fault; ```. The only log file I see is this one: transcripts_quan/logs/salmon_quant.log. $ cat salmon_quant.log ; [2016-03-30 15:50:48.489] [jointLog] [info] parsing read library format; [2016-03-30 15:50:48.543] [jointLog] [info] Loading Quasi index; [2016-03-30 15:51:08.499] [jointLog] [info] done",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54
https://github.com/COMBINE-lab/salmon/issues/54:1682,Performance,load,loading,1682,"hed to using precompiled binaries, version 0.6.0. Now working on a new server running CentOS Linux release 7.1.1503. I was able to successfully generate my index, then started running the quantification step. Here is my command:. `$ /home/jorvis/salmon/bin/salmon quant -p 24 -i transcripts_index -l IU -1 R1.trimmed.PE.fastq -2 R2.trimmed.PE.fastq -o transcripts_quan`. This host has 48 cores and 128GB RAM. . And here is the STDOUT. ```; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ threads ] => { 24 }; # [ index ] => { transcripts_index }; # [ libType ] => { IU }; # [ mates1 ] => { R1.trimmed.PE.fastq }; # [ mates2 ] => { R2.trimmed.PE.fastq }; # [ output ] => { transcripts_quan }; Logs will be written to transcripts_quan/logs; [2016-03-30 15:50:48.489] [jointLog] [info] parsing read library format; there is 1 lib; Loading 64-bit quasi index[2016-03-30 15:50:48.543] [jointLog] [info] Loading Quasi index; [2016-03-30 15:50:48.544] [stderrLog] [info] Loading Suffix Array; [2016-03-30 15:50:48.544] [stderrLog] [info] Loading Position Hash; [2016-03-30 15:50:58.359] [stderrLog] [info] Loading Transcript Info; [2016-03-30 15:50:59.932] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-03-30 15:51:00.610] [stderrLog] [info] There were 2027284 set bits in the bit array; [2016-03-30 15:51:00.917] [stderrLog] [info] Computing transcript lengths; [2016-03-30 15:51:00.925] [stderrLog] [info] Waiting to finish loading hash; Index contained 2027284 targets; [2016-03-30 15:51:08.499] [jointLog] [info] done; [2016-03-30 15:51:08.499] [stderrLog] [info] Done loading index. Segmentation fault; ```. The only log file I see is this one: transcripts_quan/logs/salmon_quant.log. $ cat salmon_quant.log ; [2016-03-30 15:50:48.489] [jointLog] [info] parsing read library format; [2016-03-30 15:50:48.543] [jointLog] [info] Loading Quasi index; [2016-03-30 15:51:08.499] [jointLog] [info] done",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54
https://github.com/COMBINE-lab/salmon/issues/54:1941,Performance,Load,Loading,1941,"hed to using precompiled binaries, version 0.6.0. Now working on a new server running CentOS Linux release 7.1.1503. I was able to successfully generate my index, then started running the quantification step. Here is my command:. `$ /home/jorvis/salmon/bin/salmon quant -p 24 -i transcripts_index -l IU -1 R1.trimmed.PE.fastq -2 R2.trimmed.PE.fastq -o transcripts_quan`. This host has 48 cores and 128GB RAM. . And here is the STDOUT. ```; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ threads ] => { 24 }; # [ index ] => { transcripts_index }; # [ libType ] => { IU }; # [ mates1 ] => { R1.trimmed.PE.fastq }; # [ mates2 ] => { R2.trimmed.PE.fastq }; # [ output ] => { transcripts_quan }; Logs will be written to transcripts_quan/logs; [2016-03-30 15:50:48.489] [jointLog] [info] parsing read library format; there is 1 lib; Loading 64-bit quasi index[2016-03-30 15:50:48.543] [jointLog] [info] Loading Quasi index; [2016-03-30 15:50:48.544] [stderrLog] [info] Loading Suffix Array; [2016-03-30 15:50:48.544] [stderrLog] [info] Loading Position Hash; [2016-03-30 15:50:58.359] [stderrLog] [info] Loading Transcript Info; [2016-03-30 15:50:59.932] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-03-30 15:51:00.610] [stderrLog] [info] There were 2027284 set bits in the bit array; [2016-03-30 15:51:00.917] [stderrLog] [info] Computing transcript lengths; [2016-03-30 15:51:00.925] [stderrLog] [info] Waiting to finish loading hash; Index contained 2027284 targets; [2016-03-30 15:51:08.499] [jointLog] [info] done; [2016-03-30 15:51:08.499] [stderrLog] [info] Done loading index. Segmentation fault; ```. The only log file I see is this one: transcripts_quan/logs/salmon_quant.log. $ cat salmon_quant.log ; [2016-03-30 15:50:48.489] [jointLog] [info] parsing read library format; [2016-03-30 15:50:48.543] [jointLog] [info] Loading Quasi index; [2016-03-30 15:51:08.499] [jointLog] [info] done",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54
https://github.com/COMBINE-lab/salmon/issues/54:1154,Security,Hash,Hash,1154,"hed to using precompiled binaries, version 0.6.0. Now working on a new server running CentOS Linux release 7.1.1503. I was able to successfully generate my index, then started running the quantification step. Here is my command:. `$ /home/jorvis/salmon/bin/salmon quant -p 24 -i transcripts_index -l IU -1 R1.trimmed.PE.fastq -2 R2.trimmed.PE.fastq -o transcripts_quan`. This host has 48 cores and 128GB RAM. . And here is the STDOUT. ```; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ threads ] => { 24 }; # [ index ] => { transcripts_index }; # [ libType ] => { IU }; # [ mates1 ] => { R1.trimmed.PE.fastq }; # [ mates2 ] => { R2.trimmed.PE.fastq }; # [ output ] => { transcripts_quan }; Logs will be written to transcripts_quan/logs; [2016-03-30 15:50:48.489] [jointLog] [info] parsing read library format; there is 1 lib; Loading 64-bit quasi index[2016-03-30 15:50:48.543] [jointLog] [info] Loading Quasi index; [2016-03-30 15:50:48.544] [stderrLog] [info] Loading Suffix Array; [2016-03-30 15:50:48.544] [stderrLog] [info] Loading Position Hash; [2016-03-30 15:50:58.359] [stderrLog] [info] Loading Transcript Info; [2016-03-30 15:50:59.932] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-03-30 15:51:00.610] [stderrLog] [info] There were 2027284 set bits in the bit array; [2016-03-30 15:51:00.917] [stderrLog] [info] Computing transcript lengths; [2016-03-30 15:51:00.925] [stderrLog] [info] Waiting to finish loading hash; Index contained 2027284 targets; [2016-03-30 15:51:08.499] [jointLog] [info] done; [2016-03-30 15:51:08.499] [stderrLog] [info] Done loading index. Segmentation fault; ```. The only log file I see is this one: transcripts_quan/logs/salmon_quant.log. $ cat salmon_quant.log ; [2016-03-30 15:50:48.489] [jointLog] [info] parsing read library format; [2016-03-30 15:50:48.543] [jointLog] [info] Loading Quasi index; [2016-03-30 15:51:08.499] [jointLog] [info] done",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54
https://github.com/COMBINE-lab/salmon/issues/54:1543,Security,hash,hash,1543,"hed to using precompiled binaries, version 0.6.0. Now working on a new server running CentOS Linux release 7.1.1503. I was able to successfully generate my index, then started running the quantification step. Here is my command:. `$ /home/jorvis/salmon/bin/salmon quant -p 24 -i transcripts_index -l IU -1 R1.trimmed.PE.fastq -2 R2.trimmed.PE.fastq -o transcripts_quan`. This host has 48 cores and 128GB RAM. . And here is the STDOUT. ```; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ threads ] => { 24 }; # [ index ] => { transcripts_index }; # [ libType ] => { IU }; # [ mates1 ] => { R1.trimmed.PE.fastq }; # [ mates2 ] => { R2.trimmed.PE.fastq }; # [ output ] => { transcripts_quan }; Logs will be written to transcripts_quan/logs; [2016-03-30 15:50:48.489] [jointLog] [info] parsing read library format; there is 1 lib; Loading 64-bit quasi index[2016-03-30 15:50:48.543] [jointLog] [info] Loading Quasi index; [2016-03-30 15:50:48.544] [stderrLog] [info] Loading Suffix Array; [2016-03-30 15:50:48.544] [stderrLog] [info] Loading Position Hash; [2016-03-30 15:50:58.359] [stderrLog] [info] Loading Transcript Info; [2016-03-30 15:50:59.932] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-03-30 15:51:00.610] [stderrLog] [info] There were 2027284 set bits in the bit array; [2016-03-30 15:51:00.917] [stderrLog] [info] Computing transcript lengths; [2016-03-30 15:51:00.925] [stderrLog] [info] Waiting to finish loading hash; Index contained 2027284 targets; [2016-03-30 15:51:08.499] [jointLog] [info] done; [2016-03-30 15:51:08.499] [stderrLog] [info] Done loading index. Segmentation fault; ```. The only log file I see is this one: transcripts_quan/logs/salmon_quant.log. $ cat salmon_quant.log ; [2016-03-30 15:50:48.489] [jointLog] [info] parsing read library format; [2016-03-30 15:50:48.543] [jointLog] [info] Loading Quasi index; [2016-03-30 15:51:08.499] [jointLog] [info] done",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54
https://github.com/COMBINE-lab/salmon/issues/54:798,Testability,Log,Logs,798,"I've switched to using precompiled binaries, version 0.6.0. Now working on a new server running CentOS Linux release 7.1.1503. I was able to successfully generate my index, then started running the quantification step. Here is my command:. `$ /home/jorvis/salmon/bin/salmon quant -p 24 -i transcripts_index -l IU -1 R1.trimmed.PE.fastq -2 R2.trimmed.PE.fastq -o transcripts_quan`. This host has 48 cores and 128GB RAM. . And here is the STDOUT. ```; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ threads ] => { 24 }; # [ index ] => { transcripts_index }; # [ libType ] => { IU }; # [ mates1 ] => { R1.trimmed.PE.fastq }; # [ mates2 ] => { R2.trimmed.PE.fastq }; # [ output ] => { transcripts_quan }; Logs will be written to transcripts_quan/logs; [2016-03-30 15:50:48.489] [jointLog] [info] parsing read library format; there is 1 lib; Loading 64-bit quasi index[2016-03-30 15:50:48.543] [jointLog] [info] Loading Quasi index; [2016-03-30 15:50:48.544] [stderrLog] [info] Loading Suffix Array; [2016-03-30 15:50:48.544] [stderrLog] [info] Loading Position Hash; [2016-03-30 15:50:58.359] [stderrLog] [info] Loading Transcript Info; [2016-03-30 15:50:59.932] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-03-30 15:51:00.610] [stderrLog] [info] There were 2027284 set bits in the bit array; [2016-03-30 15:51:00.917] [stderrLog] [info] Computing transcript lengths; [2016-03-30 15:51:00.925] [stderrLog] [info] Waiting to finish loading hash; Index contained 2027284 targets; [2016-03-30 15:51:08.499] [jointLog] [info] done; [2016-03-30 15:51:08.499] [stderrLog] [info] Done loading index. Segmentation fault; ```. The only log file I see is this one: transcripts_quan/logs/salmon_quant.log. $ cat salmon_quant.log ; [2016-03-30 15:50:48.489] [jointLog] [info] parsing read library format; [2016-03-30 15:50:48.543] [jointLog] [info] Loading Quasi index; [2016-03-30 15:51:08.499] [jointLog] [i",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54
https://github.com/COMBINE-lab/salmon/issues/54:839,Testability,log,logs,839,"I've switched to using precompiled binaries, version 0.6.0. Now working on a new server running CentOS Linux release 7.1.1503. I was able to successfully generate my index, then started running the quantification step. Here is my command:. `$ /home/jorvis/salmon/bin/salmon quant -p 24 -i transcripts_index -l IU -1 R1.trimmed.PE.fastq -2 R2.trimmed.PE.fastq -o transcripts_quan`. This host has 48 cores and 128GB RAM. . And here is the STDOUT. ```; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ threads ] => { 24 }; # [ index ] => { transcripts_index }; # [ libType ] => { IU }; # [ mates1 ] => { R1.trimmed.PE.fastq }; # [ mates2 ] => { R2.trimmed.PE.fastq }; # [ output ] => { transcripts_quan }; Logs will be written to transcripts_quan/logs; [2016-03-30 15:50:48.489] [jointLog] [info] parsing read library format; there is 1 lib; Loading 64-bit quasi index[2016-03-30 15:50:48.543] [jointLog] [info] Loading Quasi index; [2016-03-30 15:50:48.544] [stderrLog] [info] Loading Suffix Array; [2016-03-30 15:50:48.544] [stderrLog] [info] Loading Position Hash; [2016-03-30 15:50:58.359] [stderrLog] [info] Loading Transcript Info; [2016-03-30 15:50:59.932] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-03-30 15:51:00.610] [stderrLog] [info] There were 2027284 set bits in the bit array; [2016-03-30 15:51:00.917] [stderrLog] [info] Computing transcript lengths; [2016-03-30 15:51:00.925] [stderrLog] [info] Waiting to finish loading hash; Index contained 2027284 targets; [2016-03-30 15:51:08.499] [jointLog] [info] done; [2016-03-30 15:51:08.499] [stderrLog] [info] Done loading index. Segmentation fault; ```. The only log file I see is this one: transcripts_quan/logs/salmon_quant.log. $ cat salmon_quant.log ; [2016-03-30 15:50:48.489] [jointLog] [info] parsing read library format; [2016-03-30 15:50:48.543] [jointLog] [info] Loading Quasi index; [2016-03-30 15:51:08.499] [jointLog] [i",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54
https://github.com/COMBINE-lab/salmon/issues/54:1731,Testability,log,log,1731,"hed to using precompiled binaries, version 0.6.0. Now working on a new server running CentOS Linux release 7.1.1503. I was able to successfully generate my index, then started running the quantification step. Here is my command:. `$ /home/jorvis/salmon/bin/salmon quant -p 24 -i transcripts_index -l IU -1 R1.trimmed.PE.fastq -2 R2.trimmed.PE.fastq -o transcripts_quan`. This host has 48 cores and 128GB RAM. . And here is the STDOUT. ```; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ threads ] => { 24 }; # [ index ] => { transcripts_index }; # [ libType ] => { IU }; # [ mates1 ] => { R1.trimmed.PE.fastq }; # [ mates2 ] => { R2.trimmed.PE.fastq }; # [ output ] => { transcripts_quan }; Logs will be written to transcripts_quan/logs; [2016-03-30 15:50:48.489] [jointLog] [info] parsing read library format; there is 1 lib; Loading 64-bit quasi index[2016-03-30 15:50:48.543] [jointLog] [info] Loading Quasi index; [2016-03-30 15:50:48.544] [stderrLog] [info] Loading Suffix Array; [2016-03-30 15:50:48.544] [stderrLog] [info] Loading Position Hash; [2016-03-30 15:50:58.359] [stderrLog] [info] Loading Transcript Info; [2016-03-30 15:50:59.932] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-03-30 15:51:00.610] [stderrLog] [info] There were 2027284 set bits in the bit array; [2016-03-30 15:51:00.917] [stderrLog] [info] Computing transcript lengths; [2016-03-30 15:51:00.925] [stderrLog] [info] Waiting to finish loading hash; Index contained 2027284 targets; [2016-03-30 15:51:08.499] [jointLog] [info] done; [2016-03-30 15:51:08.499] [stderrLog] [info] Done loading index. Segmentation fault; ```. The only log file I see is this one: transcripts_quan/logs/salmon_quant.log. $ cat salmon_quant.log ; [2016-03-30 15:50:48.489] [jointLog] [info] parsing read library format; [2016-03-30 15:50:48.543] [jointLog] [info] Loading Quasi index; [2016-03-30 15:51:08.499] [jointLog] [info] done",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54
https://github.com/COMBINE-lab/salmon/issues/54:1776,Testability,log,logs,1776,"hed to using precompiled binaries, version 0.6.0. Now working on a new server running CentOS Linux release 7.1.1503. I was able to successfully generate my index, then started running the quantification step. Here is my command:. `$ /home/jorvis/salmon/bin/salmon quant -p 24 -i transcripts_index -l IU -1 R1.trimmed.PE.fastq -2 R2.trimmed.PE.fastq -o transcripts_quan`. This host has 48 cores and 128GB RAM. . And here is the STDOUT. ```; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ threads ] => { 24 }; # [ index ] => { transcripts_index }; # [ libType ] => { IU }; # [ mates1 ] => { R1.trimmed.PE.fastq }; # [ mates2 ] => { R2.trimmed.PE.fastq }; # [ output ] => { transcripts_quan }; Logs will be written to transcripts_quan/logs; [2016-03-30 15:50:48.489] [jointLog] [info] parsing read library format; there is 1 lib; Loading 64-bit quasi index[2016-03-30 15:50:48.543] [jointLog] [info] Loading Quasi index; [2016-03-30 15:50:48.544] [stderrLog] [info] Loading Suffix Array; [2016-03-30 15:50:48.544] [stderrLog] [info] Loading Position Hash; [2016-03-30 15:50:58.359] [stderrLog] [info] Loading Transcript Info; [2016-03-30 15:50:59.932] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-03-30 15:51:00.610] [stderrLog] [info] There were 2027284 set bits in the bit array; [2016-03-30 15:51:00.917] [stderrLog] [info] Computing transcript lengths; [2016-03-30 15:51:00.925] [stderrLog] [info] Waiting to finish loading hash; Index contained 2027284 targets; [2016-03-30 15:51:08.499] [jointLog] [info] done; [2016-03-30 15:51:08.499] [stderrLog] [info] Done loading index. Segmentation fault; ```. The only log file I see is this one: transcripts_quan/logs/salmon_quant.log. $ cat salmon_quant.log ; [2016-03-30 15:50:48.489] [jointLog] [info] parsing read library format; [2016-03-30 15:50:48.543] [jointLog] [info] Loading Quasi index; [2016-03-30 15:51:08.499] [jointLog] [info] done",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54
https://github.com/COMBINE-lab/salmon/issues/54:1794,Testability,log,log,1794,"hed to using precompiled binaries, version 0.6.0. Now working on a new server running CentOS Linux release 7.1.1503. I was able to successfully generate my index, then started running the quantification step. Here is my command:. `$ /home/jorvis/salmon/bin/salmon quant -p 24 -i transcripts_index -l IU -1 R1.trimmed.PE.fastq -2 R2.trimmed.PE.fastq -o transcripts_quan`. This host has 48 cores and 128GB RAM. . And here is the STDOUT. ```; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ threads ] => { 24 }; # [ index ] => { transcripts_index }; # [ libType ] => { IU }; # [ mates1 ] => { R1.trimmed.PE.fastq }; # [ mates2 ] => { R2.trimmed.PE.fastq }; # [ output ] => { transcripts_quan }; Logs will be written to transcripts_quan/logs; [2016-03-30 15:50:48.489] [jointLog] [info] parsing read library format; there is 1 lib; Loading 64-bit quasi index[2016-03-30 15:50:48.543] [jointLog] [info] Loading Quasi index; [2016-03-30 15:50:48.544] [stderrLog] [info] Loading Suffix Array; [2016-03-30 15:50:48.544] [stderrLog] [info] Loading Position Hash; [2016-03-30 15:50:58.359] [stderrLog] [info] Loading Transcript Info; [2016-03-30 15:50:59.932] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-03-30 15:51:00.610] [stderrLog] [info] There were 2027284 set bits in the bit array; [2016-03-30 15:51:00.917] [stderrLog] [info] Computing transcript lengths; [2016-03-30 15:51:00.925] [stderrLog] [info] Waiting to finish loading hash; Index contained 2027284 targets; [2016-03-30 15:51:08.499] [jointLog] [info] done; [2016-03-30 15:51:08.499] [stderrLog] [info] Done loading index. Segmentation fault; ```. The only log file I see is this one: transcripts_quan/logs/salmon_quant.log. $ cat salmon_quant.log ; [2016-03-30 15:50:48.489] [jointLog] [info] parsing read library format; [2016-03-30 15:50:48.543] [jointLog] [info] Loading Quasi index; [2016-03-30 15:51:08.499] [jointLog] [info] done",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54
https://github.com/COMBINE-lab/salmon/issues/54:1818,Testability,log,log,1818,"hed to using precompiled binaries, version 0.6.0. Now working on a new server running CentOS Linux release 7.1.1503. I was able to successfully generate my index, then started running the quantification step. Here is my command:. `$ /home/jorvis/salmon/bin/salmon quant -p 24 -i transcripts_index -l IU -1 R1.trimmed.PE.fastq -2 R2.trimmed.PE.fastq -o transcripts_quan`. This host has 48 cores and 128GB RAM. . And here is the STDOUT. ```; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ threads ] => { 24 }; # [ index ] => { transcripts_index }; # [ libType ] => { IU }; # [ mates1 ] => { R1.trimmed.PE.fastq }; # [ mates2 ] => { R2.trimmed.PE.fastq }; # [ output ] => { transcripts_quan }; Logs will be written to transcripts_quan/logs; [2016-03-30 15:50:48.489] [jointLog] [info] parsing read library format; there is 1 lib; Loading 64-bit quasi index[2016-03-30 15:50:48.543] [jointLog] [info] Loading Quasi index; [2016-03-30 15:50:48.544] [stderrLog] [info] Loading Suffix Array; [2016-03-30 15:50:48.544] [stderrLog] [info] Loading Position Hash; [2016-03-30 15:50:58.359] [stderrLog] [info] Loading Transcript Info; [2016-03-30 15:50:59.932] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-03-30 15:51:00.610] [stderrLog] [info] There were 2027284 set bits in the bit array; [2016-03-30 15:51:00.917] [stderrLog] [info] Computing transcript lengths; [2016-03-30 15:51:00.925] [stderrLog] [info] Waiting to finish loading hash; Index contained 2027284 targets; [2016-03-30 15:51:08.499] [jointLog] [info] done; [2016-03-30 15:51:08.499] [stderrLog] [info] Done loading index. Segmentation fault; ```. The only log file I see is this one: transcripts_quan/logs/salmon_quant.log. $ cat salmon_quant.log ; [2016-03-30 15:50:48.489] [jointLog] [info] parsing read library format; [2016-03-30 15:50:48.543] [jointLog] [info] Loading Quasi index; [2016-03-30 15:51:08.499] [jointLog] [info] done",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54
https://github.com/COMBINE-lab/salmon/issues/55:55,Availability,error,error,55,"As suggested by Nick Schurch, we should be writing non-error output (including simple logging and informative messages) to stdout rather than stderr.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/55
https://github.com/COMBINE-lab/salmon/issues/55:110,Integrability,message,messages,110,"As suggested by Nick Schurch, we should be writing non-error output (including simple logging and informative messages) to stdout rather than stderr.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/55
https://github.com/COMBINE-lab/salmon/issues/55:86,Testability,log,logging,86,"As suggested by Nick Schurch, we should be writing non-error output (including simple logging and informative messages) to stdout rather than stderr.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/55
https://github.com/COMBINE-lab/salmon/issues/55:79,Usability,simpl,simple,79,"As suggested by Nick Schurch, we should be writing non-error output (including simple logging and informative messages) to stdout rather than stderr.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/55
https://github.com/COMBINE-lab/salmon/issues/56:840,Deployability,integrat,integrate,840,"A lot of the times when we are assessing our samples before we move on to fragmenting cDNA in to fragments, we look at the distribution of full length cDNA using a Bioanalyzer. See for example panel **a** of [this figure](http://www.nature.com/nprot/journal/v9/n1/fig_tab/nprot.2014.006_F2.html); ![](http://www.nature.com/nprot/journal/v9/n1/images/nprot.2014.006-F2.jpg). With the reference transcriptome, we know the distribution of transcripts with given lengths. We can view the reference transcript length distribution as unweighted distribution of lengths, and the electropherogram as the distribution when weighing transcript lengths by their relative abundances. Thus it seems the distribution of full length cDNA could be informative when inferring the TPMs (relative abundances) in a sample. Do you think it could be possible to integrate with the quantification model?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/56
https://github.com/COMBINE-lab/salmon/issues/56:840,Integrability,integrat,integrate,840,"A lot of the times when we are assessing our samples before we move on to fragmenting cDNA in to fragments, we look at the distribution of full length cDNA using a Bioanalyzer. See for example panel **a** of [this figure](http://www.nature.com/nprot/journal/v9/n1/fig_tab/nprot.2014.006_F2.html); ![](http://www.nature.com/nprot/journal/v9/n1/images/nprot.2014.006-F2.jpg). With the reference transcriptome, we know the distribution of transcripts with given lengths. We can view the reference transcript length distribution as unweighted distribution of lengths, and the electropherogram as the distribution when weighing transcript lengths by their relative abundances. Thus it seems the distribution of full length cDNA could be informative when inferring the TPMs (relative abundances) in a sample. Do you think it could be possible to integrate with the quantification model?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/56
https://github.com/COMBINE-lab/salmon/pull/63:0,Deployability,Update,Updated,0,Updated README.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/63
https://github.com/COMBINE-lab/salmon/issues/64:119,Availability,fault,fault,119,"I've been running Salmon on some data from accession SRP034543. For some it works fine, but some there is segmentation fault when using the `--useFSPD`. For an example run where it fails, have a look at accession SRR2048254. Here is the command I ran along with output. ```; $ salmon quant \; > -i /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna_38.p4.83_repbase20.11_ercc_SIRV.fa \; > -l IU \; > -1 <(zcat /nfs/research2/teichmann/valentine/data/SRP034543/SRR2048254_1.fastq.gz) \; > -2 <(zcat /nfs/research2/teichmann/valentine/data/SRP034543/SRR2048254_2.fastq.gz) \; > -o /tmp/SRR2048254_salmon_out \; > --biasCorrect \; > --useFSPD; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna_38.p4.83_repbase20.11_ercc_SIRV.fa }; # [ libType ] => { IU }; # [ mates1 ] => { /dev/fd/63 }; # [ mates2 ] => { /dev/fd/62 }; # [ output ] => { /tmp/SRR2048254_salmon_out }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to /tmp/SRR2048254_salmon_out/logs; [2016-06-21 10:04:29.524] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi indextcmalloc: large alloc 4294967296 bytes == 0x4d084000 @; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Suffix Array; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Position Hash; [2016-06-21 10:04:30.158] [jointLog] [info] Loading Quasi index; [2016-06-21 10:04:32.681] [stderrLog] [info] Loading Transcript Info; [2016-06-21 10:04:33.686] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-06-21 10:04:34.050] [stderrLog] [info] There were 115426 set bits in the bit array; [2016-06-21 10:04:34.376] [stderrLog] [info] Computing transcript lengths; [2016-06-21 10:04:34.377] [stderrLog] [info] Waiting to finish loading hash; Index contained 115426 targets; [2016-06-21 10:04:47.033] [jointLog] [info] done; [",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/64
https://github.com/COMBINE-lab/salmon/issues/64:2561,Availability,fault,fault,2561,"--biasCorrect \; > --useFSPD; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna_38.p4.83_repbase20.11_ercc_SIRV.fa }; # [ libType ] => { IU }; # [ mates1 ] => { /dev/fd/63 }; # [ mates2 ] => { /dev/fd/62 }; # [ output ] => { /tmp/SRR2048254_salmon_out }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to /tmp/SRR2048254_salmon_out/logs; [2016-06-21 10:04:29.524] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi indextcmalloc: large alloc 4294967296 bytes == 0x4d084000 @; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Suffix Array; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Position Hash; [2016-06-21 10:04:30.158] [jointLog] [info] Loading Quasi index; [2016-06-21 10:04:32.681] [stderrLog] [info] Loading Transcript Info; [2016-06-21 10:04:33.686] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-06-21 10:04:34.050] [stderrLog] [info] There were 115426 set bits in the bit array; [2016-06-21 10:04:34.376] [stderrLog] [info] Computing transcript lengths; [2016-06-21 10:04:34.377] [stderrLog] [info] Waiting to finish loading hash; Index contained 115426 targets; [2016-06-21 10:04:47.033] [jointLog] [info] done; [2016-06-21 10:04:47.033] [stderrLog] [info] Done loading index. processed 6500000 fragments; hits: 13927069, hits per frag: 2.15389. [2016-06-21 10:05:13.847] [jointLog] [info] Computed 165969 rich equivalence classes for further processing; [2016-06-21 10:05:13.847] [jointLog] [info] Counted 6514601 total reads in the equivalence classes; [2016-06-21 10:05:13.893] [jointLog] [info] Mapping rate = 95.0922%. [2016-06-21 10:05:13.893] [jointLog] [info] finished quantifyLibrary(); [2016-06-21 10:05:13.894] [jointLog] [info] Starting optimizer; Segmentation fault (core dumped); ```. It runs fine when disabling `--useFSPD`",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/64
https://github.com/COMBINE-lab/salmon/issues/64:1248,Performance,Load,Loading,1248,"put. ```; $ salmon quant \; > -i /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna_38.p4.83_repbase20.11_ercc_SIRV.fa \; > -l IU \; > -1 <(zcat /nfs/research2/teichmann/valentine/data/SRP034543/SRR2048254_1.fastq.gz) \; > -2 <(zcat /nfs/research2/teichmann/valentine/data/SRP034543/SRR2048254_2.fastq.gz) \; > -o /tmp/SRR2048254_salmon_out \; > --biasCorrect \; > --useFSPD; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna_38.p4.83_repbase20.11_ercc_SIRV.fa }; # [ libType ] => { IU }; # [ mates1 ] => { /dev/fd/63 }; # [ mates2 ] => { /dev/fd/62 }; # [ output ] => { /tmp/SRR2048254_salmon_out }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to /tmp/SRR2048254_salmon_out/logs; [2016-06-21 10:04:29.524] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi indextcmalloc: large alloc 4294967296 bytes == 0x4d084000 @; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Suffix Array; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Position Hash; [2016-06-21 10:04:30.158] [jointLog] [info] Loading Quasi index; [2016-06-21 10:04:32.681] [stderrLog] [info] Loading Transcript Info; [2016-06-21 10:04:33.686] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-06-21 10:04:34.050] [stderrLog] [info] There were 115426 set bits in the bit array; [2016-06-21 10:04:34.376] [stderrLog] [info] Computing transcript lengths; [2016-06-21 10:04:34.377] [stderrLog] [info] Waiting to finish loading hash; Index contained 115426 targets; [2016-06-21 10:04:47.033] [jointLog] [info] done; [2016-06-21 10:04:47.033] [stderrLog] [info] Done loading index. processed 6500000 fragments; hits: 13927069, hits per frag: 2.15389. [2016-06-21 10:05:13.847] [jointLog] [info] Computed 165969 rich equivalence classes for further processing; [2016-06-21 10:05:13.84",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/64
https://github.com/COMBINE-lab/salmon/issues/64:1375,Performance,Load,Loading,1375,"1_ercc_SIRV.fa \; > -l IU \; > -1 <(zcat /nfs/research2/teichmann/valentine/data/SRP034543/SRR2048254_1.fastq.gz) \; > -2 <(zcat /nfs/research2/teichmann/valentine/data/SRP034543/SRR2048254_2.fastq.gz) \; > -o /tmp/SRR2048254_salmon_out \; > --biasCorrect \; > --useFSPD; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna_38.p4.83_repbase20.11_ercc_SIRV.fa }; # [ libType ] => { IU }; # [ mates1 ] => { /dev/fd/63 }; # [ mates2 ] => { /dev/fd/62 }; # [ output ] => { /tmp/SRR2048254_salmon_out }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to /tmp/SRR2048254_salmon_out/logs; [2016-06-21 10:04:29.524] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi indextcmalloc: large alloc 4294967296 bytes == 0x4d084000 @; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Suffix Array; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Position Hash; [2016-06-21 10:04:30.158] [jointLog] [info] Loading Quasi index; [2016-06-21 10:04:32.681] [stderrLog] [info] Loading Transcript Info; [2016-06-21 10:04:33.686] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-06-21 10:04:34.050] [stderrLog] [info] There were 115426 set bits in the bit array; [2016-06-21 10:04:34.376] [stderrLog] [info] Computing transcript lengths; [2016-06-21 10:04:34.377] [stderrLog] [info] Waiting to finish loading hash; Index contained 115426 targets; [2016-06-21 10:04:47.033] [jointLog] [info] done; [2016-06-21 10:04:47.033] [stderrLog] [info] Done loading index. processed 6500000 fragments; hits: 13927069, hits per frag: 2.15389. [2016-06-21 10:05:13.847] [jointLog] [info] Computed 165969 rich equivalence classes for further processing; [2016-06-21 10:05:13.847] [jointLog] [info] Counted 6514601 total reads in the equivalence classes; [2016-06-21 10:05:13.893] [jointLog] [info",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/64
https://github.com/COMBINE-lab/salmon/issues/64:1442,Performance,Load,Loading,1442,"lentine/data/SRP034543/SRR2048254_1.fastq.gz) \; > -2 <(zcat /nfs/research2/teichmann/valentine/data/SRP034543/SRR2048254_2.fastq.gz) \; > -o /tmp/SRR2048254_salmon_out \; > --biasCorrect \; > --useFSPD; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna_38.p4.83_repbase20.11_ercc_SIRV.fa }; # [ libType ] => { IU }; # [ mates1 ] => { /dev/fd/63 }; # [ mates2 ] => { /dev/fd/62 }; # [ output ] => { /tmp/SRR2048254_salmon_out }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to /tmp/SRR2048254_salmon_out/logs; [2016-06-21 10:04:29.524] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi indextcmalloc: large alloc 4294967296 bytes == 0x4d084000 @; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Suffix Array; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Position Hash; [2016-06-21 10:04:30.158] [jointLog] [info] Loading Quasi index; [2016-06-21 10:04:32.681] [stderrLog] [info] Loading Transcript Info; [2016-06-21 10:04:33.686] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-06-21 10:04:34.050] [stderrLog] [info] There were 115426 set bits in the bit array; [2016-06-21 10:04:34.376] [stderrLog] [info] Computing transcript lengths; [2016-06-21 10:04:34.377] [stderrLog] [info] Waiting to finish loading hash; Index contained 115426 targets; [2016-06-21 10:04:47.033] [jointLog] [info] done; [2016-06-21 10:04:47.033] [stderrLog] [info] Done loading index. processed 6500000 fragments; hits: 13927069, hits per frag: 2.15389. [2016-06-21 10:05:13.847] [jointLog] [info] Computed 165969 rich equivalence classes for further processing; [2016-06-21 10:05:13.847] [jointLog] [info] Counted 6514601 total reads in the equivalence classes; [2016-06-21 10:05:13.893] [jointLog] [info] Mapping rate = 95.0922%. [2016-06-21 10:05:13.893] [jointLog] [in",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/64
https://github.com/COMBINE-lab/salmon/issues/64:1509,Performance,Load,Loading,1509,"research2/teichmann/valentine/data/SRP034543/SRR2048254_2.fastq.gz) \; > -o /tmp/SRR2048254_salmon_out \; > --biasCorrect \; > --useFSPD; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna_38.p4.83_repbase20.11_ercc_SIRV.fa }; # [ libType ] => { IU }; # [ mates1 ] => { /dev/fd/63 }; # [ mates2 ] => { /dev/fd/62 }; # [ output ] => { /tmp/SRR2048254_salmon_out }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to /tmp/SRR2048254_salmon_out/logs; [2016-06-21 10:04:29.524] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi indextcmalloc: large alloc 4294967296 bytes == 0x4d084000 @; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Suffix Array; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Position Hash; [2016-06-21 10:04:30.158] [jointLog] [info] Loading Quasi index; [2016-06-21 10:04:32.681] [stderrLog] [info] Loading Transcript Info; [2016-06-21 10:04:33.686] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-06-21 10:04:34.050] [stderrLog] [info] There were 115426 set bits in the bit array; [2016-06-21 10:04:34.376] [stderrLog] [info] Computing transcript lengths; [2016-06-21 10:04:34.377] [stderrLog] [info] Waiting to finish loading hash; Index contained 115426 targets; [2016-06-21 10:04:47.033] [jointLog] [info] done; [2016-06-21 10:04:47.033] [stderrLog] [info] Done loading index. processed 6500000 fragments; hits: 13927069, hits per frag: 2.15389. [2016-06-21 10:05:13.847] [jointLog] [info] Computed 165969 rich equivalence classes for further processing; [2016-06-21 10:05:13.847] [jointLog] [info] Counted 6514601 total reads in the equivalence classes; [2016-06-21 10:05:13.893] [jointLog] [info] Mapping rate = 95.0922%. [2016-06-21 10:05:13.893] [jointLog] [info] finished quantifyLibrary(); [2016-06-21 10:05:13.894] [jointLog",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/64
https://github.com/COMBINE-lab/salmon/issues/64:1575,Performance,Load,Loading,1575,"\; > -o /tmp/SRR2048254_salmon_out \; > --biasCorrect \; > --useFSPD; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna_38.p4.83_repbase20.11_ercc_SIRV.fa }; # [ libType ] => { IU }; # [ mates1 ] => { /dev/fd/63 }; # [ mates2 ] => { /dev/fd/62 }; # [ output ] => { /tmp/SRR2048254_salmon_out }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to /tmp/SRR2048254_salmon_out/logs; [2016-06-21 10:04:29.524] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi indextcmalloc: large alloc 4294967296 bytes == 0x4d084000 @; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Suffix Array; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Position Hash; [2016-06-21 10:04:30.158] [jointLog] [info] Loading Quasi index; [2016-06-21 10:04:32.681] [stderrLog] [info] Loading Transcript Info; [2016-06-21 10:04:33.686] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-06-21 10:04:34.050] [stderrLog] [info] There were 115426 set bits in the bit array; [2016-06-21 10:04:34.376] [stderrLog] [info] Computing transcript lengths; [2016-06-21 10:04:34.377] [stderrLog] [info] Waiting to finish loading hash; Index contained 115426 targets; [2016-06-21 10:04:47.033] [jointLog] [info] done; [2016-06-21 10:04:47.033] [stderrLog] [info] Done loading index. processed 6500000 fragments; hits: 13927069, hits per frag: 2.15389. [2016-06-21 10:05:13.847] [jointLog] [info] Computed 165969 rich equivalence classes for further processing; [2016-06-21 10:05:13.847] [jointLog] [info] Counted 6514601 total reads in the equivalence classes; [2016-06-21 10:05:13.893] [jointLog] [info] Mapping rate = 95.0922%. [2016-06-21 10:05:13.893] [jointLog] [info] finished quantifyLibrary(); [2016-06-21 10:05:13.894] [jointLog] [info] Starting optimizer; Segmentation fault (core dumped); ```.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/64
https://github.com/COMBINE-lab/salmon/issues/64:1645,Performance,Load,Loading,1645,"--biasCorrect \; > --useFSPD; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna_38.p4.83_repbase20.11_ercc_SIRV.fa }; # [ libType ] => { IU }; # [ mates1 ] => { /dev/fd/63 }; # [ mates2 ] => { /dev/fd/62 }; # [ output ] => { /tmp/SRR2048254_salmon_out }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to /tmp/SRR2048254_salmon_out/logs; [2016-06-21 10:04:29.524] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi indextcmalloc: large alloc 4294967296 bytes == 0x4d084000 @; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Suffix Array; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Position Hash; [2016-06-21 10:04:30.158] [jointLog] [info] Loading Quasi index; [2016-06-21 10:04:32.681] [stderrLog] [info] Loading Transcript Info; [2016-06-21 10:04:33.686] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-06-21 10:04:34.050] [stderrLog] [info] There were 115426 set bits in the bit array; [2016-06-21 10:04:34.376] [stderrLog] [info] Computing transcript lengths; [2016-06-21 10:04:34.377] [stderrLog] [info] Waiting to finish loading hash; Index contained 115426 targets; [2016-06-21 10:04:47.033] [jointLog] [info] done; [2016-06-21 10:04:47.033] [stderrLog] [info] Done loading index. processed 6500000 fragments; hits: 13927069, hits per frag: 2.15389. [2016-06-21 10:05:13.847] [jointLog] [info] Computed 165969 rich equivalence classes for further processing; [2016-06-21 10:05:13.847] [jointLog] [info] Counted 6514601 total reads in the equivalence classes; [2016-06-21 10:05:13.893] [jointLog] [info] Mapping rate = 95.0922%. [2016-06-21 10:05:13.893] [jointLog] [info] finished quantifyLibrary(); [2016-06-21 10:05:13.894] [jointLog] [info] Starting optimizer; Segmentation fault (core dumped); ```. It runs fine when disabling `--useFSPD`",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/64
https://github.com/COMBINE-lab/salmon/issues/64:1904,Performance,load,loading,1904,"--biasCorrect \; > --useFSPD; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna_38.p4.83_repbase20.11_ercc_SIRV.fa }; # [ libType ] => { IU }; # [ mates1 ] => { /dev/fd/63 }; # [ mates2 ] => { /dev/fd/62 }; # [ output ] => { /tmp/SRR2048254_salmon_out }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to /tmp/SRR2048254_salmon_out/logs; [2016-06-21 10:04:29.524] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi indextcmalloc: large alloc 4294967296 bytes == 0x4d084000 @; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Suffix Array; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Position Hash; [2016-06-21 10:04:30.158] [jointLog] [info] Loading Quasi index; [2016-06-21 10:04:32.681] [stderrLog] [info] Loading Transcript Info; [2016-06-21 10:04:33.686] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-06-21 10:04:34.050] [stderrLog] [info] There were 115426 set bits in the bit array; [2016-06-21 10:04:34.376] [stderrLog] [info] Computing transcript lengths; [2016-06-21 10:04:34.377] [stderrLog] [info] Waiting to finish loading hash; Index contained 115426 targets; [2016-06-21 10:04:47.033] [jointLog] [info] done; [2016-06-21 10:04:47.033] [stderrLog] [info] Done loading index. processed 6500000 fragments; hits: 13927069, hits per frag: 2.15389. [2016-06-21 10:05:13.847] [jointLog] [info] Computed 165969 rich equivalence classes for further processing; [2016-06-21 10:05:13.847] [jointLog] [info] Counted 6514601 total reads in the equivalence classes; [2016-06-21 10:05:13.893] [jointLog] [info] Mapping rate = 95.0922%. [2016-06-21 10:05:13.893] [jointLog] [info] finished quantifyLibrary(); [2016-06-21 10:05:13.894] [jointLog] [info] Starting optimizer; Segmentation fault (core dumped); ```. It runs fine when disabling `--useFSPD`",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/64
https://github.com/COMBINE-lab/salmon/issues/64:2050,Performance,load,loading,2050,"--biasCorrect \; > --useFSPD; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna_38.p4.83_repbase20.11_ercc_SIRV.fa }; # [ libType ] => { IU }; # [ mates1 ] => { /dev/fd/63 }; # [ mates2 ] => { /dev/fd/62 }; # [ output ] => { /tmp/SRR2048254_salmon_out }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to /tmp/SRR2048254_salmon_out/logs; [2016-06-21 10:04:29.524] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi indextcmalloc: large alloc 4294967296 bytes == 0x4d084000 @; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Suffix Array; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Position Hash; [2016-06-21 10:04:30.158] [jointLog] [info] Loading Quasi index; [2016-06-21 10:04:32.681] [stderrLog] [info] Loading Transcript Info; [2016-06-21 10:04:33.686] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-06-21 10:04:34.050] [stderrLog] [info] There were 115426 set bits in the bit array; [2016-06-21 10:04:34.376] [stderrLog] [info] Computing transcript lengths; [2016-06-21 10:04:34.377] [stderrLog] [info] Waiting to finish loading hash; Index contained 115426 targets; [2016-06-21 10:04:47.033] [jointLog] [info] done; [2016-06-21 10:04:47.033] [stderrLog] [info] Done loading index. processed 6500000 fragments; hits: 13927069, hits per frag: 2.15389. [2016-06-21 10:05:13.847] [jointLog] [info] Computed 165969 rich equivalence classes for further processing; [2016-06-21 10:05:13.847] [jointLog] [info] Counted 6514601 total reads in the equivalence classes; [2016-06-21 10:05:13.893] [jointLog] [info] Mapping rate = 95.0922%. [2016-06-21 10:05:13.893] [jointLog] [info] finished quantifyLibrary(); [2016-06-21 10:05:13.894] [jointLog] [info] Starting optimizer; Segmentation fault (core dumped); ```. It runs fine when disabling `--useFSPD`",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/64
https://github.com/COMBINE-lab/salmon/issues/64:2537,Performance,optimiz,optimizer,2537,"--biasCorrect \; > --useFSPD; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna_38.p4.83_repbase20.11_ercc_SIRV.fa }; # [ libType ] => { IU }; # [ mates1 ] => { /dev/fd/63 }; # [ mates2 ] => { /dev/fd/62 }; # [ output ] => { /tmp/SRR2048254_salmon_out }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to /tmp/SRR2048254_salmon_out/logs; [2016-06-21 10:04:29.524] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi indextcmalloc: large alloc 4294967296 bytes == 0x4d084000 @; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Suffix Array; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Position Hash; [2016-06-21 10:04:30.158] [jointLog] [info] Loading Quasi index; [2016-06-21 10:04:32.681] [stderrLog] [info] Loading Transcript Info; [2016-06-21 10:04:33.686] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-06-21 10:04:34.050] [stderrLog] [info] There were 115426 set bits in the bit array; [2016-06-21 10:04:34.376] [stderrLog] [info] Computing transcript lengths; [2016-06-21 10:04:34.377] [stderrLog] [info] Waiting to finish loading hash; Index contained 115426 targets; [2016-06-21 10:04:47.033] [jointLog] [info] done; [2016-06-21 10:04:47.033] [stderrLog] [info] Done loading index. processed 6500000 fragments; hits: 13927069, hits per frag: 2.15389. [2016-06-21 10:05:13.847] [jointLog] [info] Computed 165969 rich equivalence classes for further processing; [2016-06-21 10:05:13.847] [jointLog] [info] Counted 6514601 total reads in the equivalence classes; [2016-06-21 10:05:13.893] [jointLog] [info] Mapping rate = 95.0922%. [2016-06-21 10:05:13.893] [jointLog] [info] finished quantifyLibrary(); [2016-06-21 10:05:13.894] [jointLog] [info] Starting optimizer; Segmentation fault (core dumped); ```. It runs fine when disabling `--useFSPD`",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/64
https://github.com/COMBINE-lab/salmon/issues/64:43,Security,access,accession,43,"I've been running Salmon on some data from accession SRP034543. For some it works fine, but some there is segmentation fault when using the `--useFSPD`. For an example run where it fails, have a look at accession SRR2048254. Here is the command I ran along with output. ```; $ salmon quant \; > -i /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna_38.p4.83_repbase20.11_ercc_SIRV.fa \; > -l IU \; > -1 <(zcat /nfs/research2/teichmann/valentine/data/SRP034543/SRR2048254_1.fastq.gz) \; > -2 <(zcat /nfs/research2/teichmann/valentine/data/SRP034543/SRR2048254_2.fastq.gz) \; > -o /tmp/SRR2048254_salmon_out \; > --biasCorrect \; > --useFSPD; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna_38.p4.83_repbase20.11_ercc_SIRV.fa }; # [ libType ] => { IU }; # [ mates1 ] => { /dev/fd/63 }; # [ mates2 ] => { /dev/fd/62 }; # [ output ] => { /tmp/SRR2048254_salmon_out }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to /tmp/SRR2048254_salmon_out/logs; [2016-06-21 10:04:29.524] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi indextcmalloc: large alloc 4294967296 bytes == 0x4d084000 @; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Suffix Array; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Position Hash; [2016-06-21 10:04:30.158] [jointLog] [info] Loading Quasi index; [2016-06-21 10:04:32.681] [stderrLog] [info] Loading Transcript Info; [2016-06-21 10:04:33.686] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-06-21 10:04:34.050] [stderrLog] [info] There were 115426 set bits in the bit array; [2016-06-21 10:04:34.376] [stderrLog] [info] Computing transcript lengths; [2016-06-21 10:04:34.377] [stderrLog] [info] Waiting to finish loading hash; Index contained 115426 targets; [2016-06-21 10:04:47.033] [jointLog] [info] done; [",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/64
https://github.com/COMBINE-lab/salmon/issues/64:203,Security,access,accession,203,"I've been running Salmon on some data from accession SRP034543. For some it works fine, but some there is segmentation fault when using the `--useFSPD`. For an example run where it fails, have a look at accession SRR2048254. Here is the command I ran along with output. ```; $ salmon quant \; > -i /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna_38.p4.83_repbase20.11_ercc_SIRV.fa \; > -l IU \; > -1 <(zcat /nfs/research2/teichmann/valentine/data/SRP034543/SRR2048254_1.fastq.gz) \; > -2 <(zcat /nfs/research2/teichmann/valentine/data/SRP034543/SRR2048254_2.fastq.gz) \; > -o /tmp/SRR2048254_salmon_out \; > --biasCorrect \; > --useFSPD; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna_38.p4.83_repbase20.11_ercc_SIRV.fa }; # [ libType ] => { IU }; # [ mates1 ] => { /dev/fd/63 }; # [ mates2 ] => { /dev/fd/62 }; # [ output ] => { /tmp/SRR2048254_salmon_out }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to /tmp/SRR2048254_salmon_out/logs; [2016-06-21 10:04:29.524] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi indextcmalloc: large alloc 4294967296 bytes == 0x4d084000 @; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Suffix Array; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Position Hash; [2016-06-21 10:04:30.158] [jointLog] [info] Loading Quasi index; [2016-06-21 10:04:32.681] [stderrLog] [info] Loading Transcript Info; [2016-06-21 10:04:33.686] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-06-21 10:04:34.050] [stderrLog] [info] There were 115426 set bits in the bit array; [2016-06-21 10:04:34.376] [stderrLog] [info] Computing transcript lengths; [2016-06-21 10:04:34.377] [stderrLog] [info] Waiting to finish loading hash; Index contained 115426 targets; [2016-06-21 10:04:47.033] [jointLog] [info] done; [",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/64
https://github.com/COMBINE-lab/salmon/issues/64:1459,Security,Hash,Hash,1459,"lentine/data/SRP034543/SRR2048254_1.fastq.gz) \; > -2 <(zcat /nfs/research2/teichmann/valentine/data/SRP034543/SRR2048254_2.fastq.gz) \; > -o /tmp/SRR2048254_salmon_out \; > --biasCorrect \; > --useFSPD; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna_38.p4.83_repbase20.11_ercc_SIRV.fa }; # [ libType ] => { IU }; # [ mates1 ] => { /dev/fd/63 }; # [ mates2 ] => { /dev/fd/62 }; # [ output ] => { /tmp/SRR2048254_salmon_out }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to /tmp/SRR2048254_salmon_out/logs; [2016-06-21 10:04:29.524] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi indextcmalloc: large alloc 4294967296 bytes == 0x4d084000 @; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Suffix Array; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Position Hash; [2016-06-21 10:04:30.158] [jointLog] [info] Loading Quasi index; [2016-06-21 10:04:32.681] [stderrLog] [info] Loading Transcript Info; [2016-06-21 10:04:33.686] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-06-21 10:04:34.050] [stderrLog] [info] There were 115426 set bits in the bit array; [2016-06-21 10:04:34.376] [stderrLog] [info] Computing transcript lengths; [2016-06-21 10:04:34.377] [stderrLog] [info] Waiting to finish loading hash; Index contained 115426 targets; [2016-06-21 10:04:47.033] [jointLog] [info] done; [2016-06-21 10:04:47.033] [stderrLog] [info] Done loading index. processed 6500000 fragments; hits: 13927069, hits per frag: 2.15389. [2016-06-21 10:05:13.847] [jointLog] [info] Computed 165969 rich equivalence classes for further processing; [2016-06-21 10:05:13.847] [jointLog] [info] Counted 6514601 total reads in the equivalence classes; [2016-06-21 10:05:13.893] [jointLog] [info] Mapping rate = 95.0922%. [2016-06-21 10:05:13.893] [jointLog] [in",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/64
https://github.com/COMBINE-lab/salmon/issues/64:1912,Security,hash,hash,1912,"--biasCorrect \; > --useFSPD; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna_38.p4.83_repbase20.11_ercc_SIRV.fa }; # [ libType ] => { IU }; # [ mates1 ] => { /dev/fd/63 }; # [ mates2 ] => { /dev/fd/62 }; # [ output ] => { /tmp/SRR2048254_salmon_out }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to /tmp/SRR2048254_salmon_out/logs; [2016-06-21 10:04:29.524] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi indextcmalloc: large alloc 4294967296 bytes == 0x4d084000 @; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Suffix Array; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Position Hash; [2016-06-21 10:04:30.158] [jointLog] [info] Loading Quasi index; [2016-06-21 10:04:32.681] [stderrLog] [info] Loading Transcript Info; [2016-06-21 10:04:33.686] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-06-21 10:04:34.050] [stderrLog] [info] There were 115426 set bits in the bit array; [2016-06-21 10:04:34.376] [stderrLog] [info] Computing transcript lengths; [2016-06-21 10:04:34.377] [stderrLog] [info] Waiting to finish loading hash; Index contained 115426 targets; [2016-06-21 10:04:47.033] [jointLog] [info] done; [2016-06-21 10:04:47.033] [stderrLog] [info] Done loading index. processed 6500000 fragments; hits: 13927069, hits per frag: 2.15389. [2016-06-21 10:05:13.847] [jointLog] [info] Computed 165969 rich equivalence classes for further processing; [2016-06-21 10:05:13.847] [jointLog] [info] Counted 6514601 total reads in the equivalence classes; [2016-06-21 10:05:13.893] [jointLog] [info] Mapping rate = 95.0922%. [2016-06-21 10:05:13.893] [jointLog] [info] finished quantifyLibrary(); [2016-06-21 10:05:13.894] [jointLog] [info] Starting optimizer; Segmentation fault (core dumped); ```. It runs fine when disabling `--useFSPD`",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/64
https://github.com/COMBINE-lab/salmon/issues/64:1102,Testability,Log,Logs,1102,"cession SRP034543. For some it works fine, but some there is segmentation fault when using the `--useFSPD`. For an example run where it fails, have a look at accession SRR2048254. Here is the command I ran along with output. ```; $ salmon quant \; > -i /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna_38.p4.83_repbase20.11_ercc_SIRV.fa \; > -l IU \; > -1 <(zcat /nfs/research2/teichmann/valentine/data/SRP034543/SRR2048254_1.fastq.gz) \; > -2 <(zcat /nfs/research2/teichmann/valentine/data/SRP034543/SRR2048254_2.fastq.gz) \; > -o /tmp/SRR2048254_salmon_out \; > --biasCorrect \; > --useFSPD; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna_38.p4.83_repbase20.11_ercc_SIRV.fa }; # [ libType ] => { IU }; # [ mates1 ] => { /dev/fd/63 }; # [ mates2 ] => { /dev/fd/62 }; # [ output ] => { /tmp/SRR2048254_salmon_out }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to /tmp/SRR2048254_salmon_out/logs; [2016-06-21 10:04:29.524] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi indextcmalloc: large alloc 4294967296 bytes == 0x4d084000 @; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Suffix Array; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Position Hash; [2016-06-21 10:04:30.158] [jointLog] [info] Loading Quasi index; [2016-06-21 10:04:32.681] [stderrLog] [info] Loading Transcript Info; [2016-06-21 10:04:33.686] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-06-21 10:04:34.050] [stderrLog] [info] There were 115426 set bits in the bit array; [2016-06-21 10:04:34.376] [stderrLog] [info] Computing transcript lengths; [2016-06-21 10:04:34.377] [stderrLog] [info] Waiting to finish loading hash; Index contained 115426 targets; [2016-06-21 10:04:47.033] [jointLog] [info] done; [2016-06-21 10:04:47.033] [stderrLog] [info] D",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/64
https://github.com/COMBINE-lab/salmon/issues/64:1153,Testability,log,logs,1153,"cession SRP034543. For some it works fine, but some there is segmentation fault when using the `--useFSPD`. For an example run where it fails, have a look at accession SRR2048254. Here is the command I ran along with output. ```; $ salmon quant \; > -i /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna_38.p4.83_repbase20.11_ercc_SIRV.fa \; > -l IU \; > -1 <(zcat /nfs/research2/teichmann/valentine/data/SRP034543/SRR2048254_1.fastq.gz) \; > -2 <(zcat /nfs/research2/teichmann/valentine/data/SRP034543/SRR2048254_2.fastq.gz) \; > -o /tmp/SRR2048254_salmon_out \; > --biasCorrect \; > --useFSPD; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna_38.p4.83_repbase20.11_ercc_SIRV.fa }; # [ libType ] => { IU }; # [ mates1 ] => { /dev/fd/63 }; # [ mates2 ] => { /dev/fd/62 }; # [ output ] => { /tmp/SRR2048254_salmon_out }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to /tmp/SRR2048254_salmon_out/logs; [2016-06-21 10:04:29.524] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi indextcmalloc: large alloc 4294967296 bytes == 0x4d084000 @; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Suffix Array; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Position Hash; [2016-06-21 10:04:30.158] [jointLog] [info] Loading Quasi index; [2016-06-21 10:04:32.681] [stderrLog] [info] Loading Transcript Info; [2016-06-21 10:04:33.686] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-06-21 10:04:34.050] [stderrLog] [info] There were 115426 set bits in the bit array; [2016-06-21 10:04:34.376] [stderrLog] [info] Computing transcript lengths; [2016-06-21 10:04:34.377] [stderrLog] [info] Waiting to finish loading hash; Index contained 115426 targets; [2016-06-21 10:04:47.033] [jointLog] [info] done; [2016-06-21 10:04:47.033] [stderrLog] [info] D",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/64
https://github.com/COMBINE-lab/salmon/issues/65:821,Performance,Load,Loading,821,"Hi,. I am running salom 0.6.0 on a Ubuntu server. here is my command as well as the STDOUT output:. ```; salmon quant -p 16 --biasCorrect --libType IU -i ~./Salmon/Salmon.index/Homo_sapiens.GRCh38.rel79/ --numBootstraps 100 -o $base <(zcat ${base}_1.fastq.gz ) <(zcat ${base}_2.fastq.gz); Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0 ; # [ program ] => salmon; # [ command ] => quant; # [ threads ] => { 16 }; # [ biasCorrect ] => { }; # [ libType ] => { IU }; # [ index ] => { ./Salmon/Salmon.index/Homo_sapiens.GRCh38.rel79/ }; # [ numBootstraps ] => { 100 }; # [ output ] => { 61LP1AAXX_8 } ; # [ ] => { /dev/fd/63 }; # [ ] => { /dev/fd/62 }; Logs will be written to 61LP1AAXX_8/logs; there is 0[2016-07-11 09:51:45.206] [jointLog] [info] parsing read library format; lib; Loading 32-bit quasi index[2016-07-11 09:51:45.328] [jointLog] [info] Loading Quasi index; [2016-07-11 09:51:45.736] [stderrLog] [info] Loading Suffix Array; [2016-07-11 09:51:45.771] [stderrLog] [info] Loading Position Hash; [2016-07-11 09:52:13.781] [stderrLog] [info] Loading Transcript Info; [2016-07-11 09:52:20.821] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-07-11 09:52:21.877] [stderrLog] [info] There were 173259 set bits in the bit array; [2016-07-11 09:52:22.030] [stderrLog] [info] Computing transcript lengths; [2016-07-11 09:52:22.030] [stderrLog] [info] Waiting to finish loading hash; Index contained 173259 targets; [2016-07-11 09:52:26.970] [jointLog] [info] done; [2016-07-11 09:52:26.970] [stderrLog] [info] Done loading index. [2016-07-11 09:52:27.327] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2016-07-11 09:52:27.327] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2016-07-11 09:52:39.858] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. **[2016-07-11 09",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/65
https://github.com/COMBINE-lab/salmon/issues/65:891,Performance,Load,Loading,891,"Hi,. I am running salom 0.6.0 on a Ubuntu server. here is my command as well as the STDOUT output:. ```; salmon quant -p 16 --biasCorrect --libType IU -i ~./Salmon/Salmon.index/Homo_sapiens.GRCh38.rel79/ --numBootstraps 100 -o $base <(zcat ${base}_1.fastq.gz ) <(zcat ${base}_2.fastq.gz); Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0 ; # [ program ] => salmon; # [ command ] => quant; # [ threads ] => { 16 }; # [ biasCorrect ] => { }; # [ libType ] => { IU }; # [ index ] => { ./Salmon/Salmon.index/Homo_sapiens.GRCh38.rel79/ }; # [ numBootstraps ] => { 100 }; # [ output ] => { 61LP1AAXX_8 } ; # [ ] => { /dev/fd/63 }; # [ ] => { /dev/fd/62 }; Logs will be written to 61LP1AAXX_8/logs; there is 0[2016-07-11 09:51:45.206] [jointLog] [info] parsing read library format; lib; Loading 32-bit quasi index[2016-07-11 09:51:45.328] [jointLog] [info] Loading Quasi index; [2016-07-11 09:51:45.736] [stderrLog] [info] Loading Suffix Array; [2016-07-11 09:51:45.771] [stderrLog] [info] Loading Position Hash; [2016-07-11 09:52:13.781] [stderrLog] [info] Loading Transcript Info; [2016-07-11 09:52:20.821] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-07-11 09:52:21.877] [stderrLog] [info] There were 173259 set bits in the bit array; [2016-07-11 09:52:22.030] [stderrLog] [info] Computing transcript lengths; [2016-07-11 09:52:22.030] [stderrLog] [info] Waiting to finish loading hash; Index contained 173259 targets; [2016-07-11 09:52:26.970] [jointLog] [info] done; [2016-07-11 09:52:26.970] [stderrLog] [info] Done loading index. [2016-07-11 09:52:27.327] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2016-07-11 09:52:27.327] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2016-07-11 09:52:39.858] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. **[2016-07-11 09",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/65
https://github.com/COMBINE-lab/salmon/issues/65:957,Performance,Load,Loading,957,"Hi,. I am running salom 0.6.0 on a Ubuntu server. here is my command as well as the STDOUT output:. ```; salmon quant -p 16 --biasCorrect --libType IU -i ~./Salmon/Salmon.index/Homo_sapiens.GRCh38.rel79/ --numBootstraps 100 -o $base <(zcat ${base}_1.fastq.gz ) <(zcat ${base}_2.fastq.gz); Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0 ; # [ program ] => salmon; # [ command ] => quant; # [ threads ] => { 16 }; # [ biasCorrect ] => { }; # [ libType ] => { IU }; # [ index ] => { ./Salmon/Salmon.index/Homo_sapiens.GRCh38.rel79/ }; # [ numBootstraps ] => { 100 }; # [ output ] => { 61LP1AAXX_8 } ; # [ ] => { /dev/fd/63 }; # [ ] => { /dev/fd/62 }; Logs will be written to 61LP1AAXX_8/logs; there is 0[2016-07-11 09:51:45.206] [jointLog] [info] parsing read library format; lib; Loading 32-bit quasi index[2016-07-11 09:51:45.328] [jointLog] [info] Loading Quasi index; [2016-07-11 09:51:45.736] [stderrLog] [info] Loading Suffix Array; [2016-07-11 09:51:45.771] [stderrLog] [info] Loading Position Hash; [2016-07-11 09:52:13.781] [stderrLog] [info] Loading Transcript Info; [2016-07-11 09:52:20.821] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-07-11 09:52:21.877] [stderrLog] [info] There were 173259 set bits in the bit array; [2016-07-11 09:52:22.030] [stderrLog] [info] Computing transcript lengths; [2016-07-11 09:52:22.030] [stderrLog] [info] Waiting to finish loading hash; Index contained 173259 targets; [2016-07-11 09:52:26.970] [jointLog] [info] done; [2016-07-11 09:52:26.970] [stderrLog] [info] Done loading index. [2016-07-11 09:52:27.327] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2016-07-11 09:52:27.327] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2016-07-11 09:52:39.858] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. **[2016-07-11 09",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/65
https://github.com/COMBINE-lab/salmon/issues/65:1024,Performance,Load,Loading,1024," Ubuntu server. here is my command as well as the STDOUT output:. ```; salmon quant -p 16 --biasCorrect --libType IU -i ~./Salmon/Salmon.index/Homo_sapiens.GRCh38.rel79/ --numBootstraps 100 -o $base <(zcat ${base}_1.fastq.gz ) <(zcat ${base}_2.fastq.gz); Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0 ; # [ program ] => salmon; # [ command ] => quant; # [ threads ] => { 16 }; # [ biasCorrect ] => { }; # [ libType ] => { IU }; # [ index ] => { ./Salmon/Salmon.index/Homo_sapiens.GRCh38.rel79/ }; # [ numBootstraps ] => { 100 }; # [ output ] => { 61LP1AAXX_8 } ; # [ ] => { /dev/fd/63 }; # [ ] => { /dev/fd/62 }; Logs will be written to 61LP1AAXX_8/logs; there is 0[2016-07-11 09:51:45.206] [jointLog] [info] parsing read library format; lib; Loading 32-bit quasi index[2016-07-11 09:51:45.328] [jointLog] [info] Loading Quasi index; [2016-07-11 09:51:45.736] [stderrLog] [info] Loading Suffix Array; [2016-07-11 09:51:45.771] [stderrLog] [info] Loading Position Hash; [2016-07-11 09:52:13.781] [stderrLog] [info] Loading Transcript Info; [2016-07-11 09:52:20.821] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-07-11 09:52:21.877] [stderrLog] [info] There were 173259 set bits in the bit array; [2016-07-11 09:52:22.030] [stderrLog] [info] Computing transcript lengths; [2016-07-11 09:52:22.030] [stderrLog] [info] Waiting to finish loading hash; Index contained 173259 targets; [2016-07-11 09:52:26.970] [jointLog] [info] done; [2016-07-11 09:52:26.970] [stderrLog] [info] Done loading index. [2016-07-11 09:52:27.327] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2016-07-11 09:52:27.327] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2016-07-11 09:52:39.858] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. **[2016-07-11 09:52:39.858] [jointLog] [warning] ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/65
https://github.com/COMBINE-lab/salmon/issues/65:1092,Performance,Load,Loading,1092,"; salmon quant -p 16 --biasCorrect --libType IU -i ~./Salmon/Salmon.index/Homo_sapiens.GRCh38.rel79/ --numBootstraps 100 -o $base <(zcat ${base}_1.fastq.gz ) <(zcat ${base}_2.fastq.gz); Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0 ; # [ program ] => salmon; # [ command ] => quant; # [ threads ] => { 16 }; # [ biasCorrect ] => { }; # [ libType ] => { IU }; # [ index ] => { ./Salmon/Salmon.index/Homo_sapiens.GRCh38.rel79/ }; # [ numBootstraps ] => { 100 }; # [ output ] => { 61LP1AAXX_8 } ; # [ ] => { /dev/fd/63 }; # [ ] => { /dev/fd/62 }; Logs will be written to 61LP1AAXX_8/logs; there is 0[2016-07-11 09:51:45.206] [jointLog] [info] parsing read library format; lib; Loading 32-bit quasi index[2016-07-11 09:51:45.328] [jointLog] [info] Loading Quasi index; [2016-07-11 09:51:45.736] [stderrLog] [info] Loading Suffix Array; [2016-07-11 09:51:45.771] [stderrLog] [info] Loading Position Hash; [2016-07-11 09:52:13.781] [stderrLog] [info] Loading Transcript Info; [2016-07-11 09:52:20.821] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-07-11 09:52:21.877] [stderrLog] [info] There were 173259 set bits in the bit array; [2016-07-11 09:52:22.030] [stderrLog] [info] Computing transcript lengths; [2016-07-11 09:52:22.030] [stderrLog] [info] Waiting to finish loading hash; Index contained 173259 targets; [2016-07-11 09:52:26.970] [jointLog] [info] done; [2016-07-11 09:52:26.970] [stderrLog] [info] Done loading index. [2016-07-11 09:52:27.327] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2016-07-11 09:52:27.327] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2016-07-11 09:52:39.858] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. **[2016-07-11 09:52:39.858] [jointLog] [warning] Something seems to be wrong with the calculation of the mapping rate.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/65
https://github.com/COMBINE-lab/salmon/issues/65:1162,Performance,Load,Loading,1162,"/Homo_sapiens.GRCh38.rel79/ --numBootstraps 100 -o $base <(zcat ${base}_1.fastq.gz ) <(zcat ${base}_2.fastq.gz); Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0 ; # [ program ] => salmon; # [ command ] => quant; # [ threads ] => { 16 }; # [ biasCorrect ] => { }; # [ libType ] => { IU }; # [ index ] => { ./Salmon/Salmon.index/Homo_sapiens.GRCh38.rel79/ }; # [ numBootstraps ] => { 100 }; # [ output ] => { 61LP1AAXX_8 } ; # [ ] => { /dev/fd/63 }; # [ ] => { /dev/fd/62 }; Logs will be written to 61LP1AAXX_8/logs; there is 0[2016-07-11 09:51:45.206] [jointLog] [info] parsing read library format; lib; Loading 32-bit quasi index[2016-07-11 09:51:45.328] [jointLog] [info] Loading Quasi index; [2016-07-11 09:51:45.736] [stderrLog] [info] Loading Suffix Array; [2016-07-11 09:51:45.771] [stderrLog] [info] Loading Position Hash; [2016-07-11 09:52:13.781] [stderrLog] [info] Loading Transcript Info; [2016-07-11 09:52:20.821] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-07-11 09:52:21.877] [stderrLog] [info] There were 173259 set bits in the bit array; [2016-07-11 09:52:22.030] [stderrLog] [info] Computing transcript lengths; [2016-07-11 09:52:22.030] [stderrLog] [info] Waiting to finish loading hash; Index contained 173259 targets; [2016-07-11 09:52:26.970] [jointLog] [info] done; [2016-07-11 09:52:26.970] [stderrLog] [info] Done loading index. [2016-07-11 09:52:27.327] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2016-07-11 09:52:27.327] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2016-07-11 09:52:39.858] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. **[2016-07-11 09:52:39.858] [jointLog] [warning] Something seems to be wrong with the calculation of the mapping rate. The recorded ratio is likely wrong. Please file this as a bug report.**.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/65
https://github.com/COMBINE-lab/salmon/issues/65:1421,Performance,load,loading,1421," threads ] => { 16 }; # [ biasCorrect ] => { }; # [ libType ] => { IU }; # [ index ] => { ./Salmon/Salmon.index/Homo_sapiens.GRCh38.rel79/ }; # [ numBootstraps ] => { 100 }; # [ output ] => { 61LP1AAXX_8 } ; # [ ] => { /dev/fd/63 }; # [ ] => { /dev/fd/62 }; Logs will be written to 61LP1AAXX_8/logs; there is 0[2016-07-11 09:51:45.206] [jointLog] [info] parsing read library format; lib; Loading 32-bit quasi index[2016-07-11 09:51:45.328] [jointLog] [info] Loading Quasi index; [2016-07-11 09:51:45.736] [stderrLog] [info] Loading Suffix Array; [2016-07-11 09:51:45.771] [stderrLog] [info] Loading Position Hash; [2016-07-11 09:52:13.781] [stderrLog] [info] Loading Transcript Info; [2016-07-11 09:52:20.821] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-07-11 09:52:21.877] [stderrLog] [info] There were 173259 set bits in the bit array; [2016-07-11 09:52:22.030] [stderrLog] [info] Computing transcript lengths; [2016-07-11 09:52:22.030] [stderrLog] [info] Waiting to finish loading hash; Index contained 173259 targets; [2016-07-11 09:52:26.970] [jointLog] [info] done; [2016-07-11 09:52:26.970] [stderrLog] [info] Done loading index. [2016-07-11 09:52:27.327] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2016-07-11 09:52:27.327] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2016-07-11 09:52:39.858] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. **[2016-07-11 09:52:39.858] [jointLog] [warning] Something seems to be wrong with the calculation of the mapping rate. The recorded ratio is likely wrong. Please file this as a bug report.**. [2016-07-11 09:52:39.858] [jointLog] [info] Mapping rate = 0%. [2016-07-11 09:52:39.858] [jointLog] [info] finished quantifyLibrary(); [2016-07-11 09:52:39.858] [jointLog] [info] Starting optimizer; [2016-07-11 09:52:39.894] [jointLog] [info] Marked 0 weigh",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/65
https://github.com/COMBINE-lab/salmon/issues/65:1567,Performance,load,loading,1567,"RCh38.rel79/ }; # [ numBootstraps ] => { 100 }; # [ output ] => { 61LP1AAXX_8 } ; # [ ] => { /dev/fd/63 }; # [ ] => { /dev/fd/62 }; Logs will be written to 61LP1AAXX_8/logs; there is 0[2016-07-11 09:51:45.206] [jointLog] [info] parsing read library format; lib; Loading 32-bit quasi index[2016-07-11 09:51:45.328] [jointLog] [info] Loading Quasi index; [2016-07-11 09:51:45.736] [stderrLog] [info] Loading Suffix Array; [2016-07-11 09:51:45.771] [stderrLog] [info] Loading Position Hash; [2016-07-11 09:52:13.781] [stderrLog] [info] Loading Transcript Info; [2016-07-11 09:52:20.821] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-07-11 09:52:21.877] [stderrLog] [info] There were 173259 set bits in the bit array; [2016-07-11 09:52:22.030] [stderrLog] [info] Computing transcript lengths; [2016-07-11 09:52:22.030] [stderrLog] [info] Waiting to finish loading hash; Index contained 173259 targets; [2016-07-11 09:52:26.970] [jointLog] [info] done; [2016-07-11 09:52:26.970] [stderrLog] [info] Done loading index. [2016-07-11 09:52:27.327] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2016-07-11 09:52:27.327] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2016-07-11 09:52:39.858] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. **[2016-07-11 09:52:39.858] [jointLog] [warning] Something seems to be wrong with the calculation of the mapping rate. The recorded ratio is likely wrong. Please file this as a bug report.**. [2016-07-11 09:52:39.858] [jointLog] [info] Mapping rate = 0%. [2016-07-11 09:52:39.858] [jointLog] [info] finished quantifyLibrary(); [2016-07-11 09:52:39.858] [jointLog] [info] Starting optimizer; [2016-07-11 09:52:39.894] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-07-11 09:52:39.895] [jointLog] [info] iteration = 0 | max rel diff. = -1.79769e+3",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/65
https://github.com/COMBINE-lab/salmon/issues/65:2365,Performance,optimiz,optimizer,2365,"; [2016-07-11 09:52:20.821] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-07-11 09:52:21.877] [stderrLog] [info] There were 173259 set bits in the bit array; [2016-07-11 09:52:22.030] [stderrLog] [info] Computing transcript lengths; [2016-07-11 09:52:22.030] [stderrLog] [info] Waiting to finish loading hash; Index contained 173259 targets; [2016-07-11 09:52:26.970] [jointLog] [info] done; [2016-07-11 09:52:26.970] [stderrLog] [info] Done loading index. [2016-07-11 09:52:27.327] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2016-07-11 09:52:27.327] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2016-07-11 09:52:39.858] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. **[2016-07-11 09:52:39.858] [jointLog] [warning] Something seems to be wrong with the calculation of the mapping rate. The recorded ratio is likely wrong. Please file this as a bug report.**. [2016-07-11 09:52:39.858] [jointLog] [info] Mapping rate = 0%. [2016-07-11 09:52:39.858] [jointLog] [info] finished quantifyLibrary(); [2016-07-11 09:52:39.858] [jointLog] [info] Starting optimizer; [2016-07-11 09:52:39.894] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-07-11 09:52:39.895] [jointLog] [info] iteration = 0 | max rel diff. = -1.79769e+308; [2016-07-11 09:52:39.921] [jointLog] [info] iteration = 50 | max rel diff. = -1.79769e+308; [2016-07-11 09:52:39.932] [jointLog] [info] Finished optimizer; [2016-07-11 09:52:39.932] [jointLog] [info] writing output ; ```. I am not exactly sure where the problem is. The output file is created, but all the transcripts are '0'. Any ideas, what was done wrong?. thanks. Assa. PS.; this is how I have indexed the data. `salmon index -t Homo_sapiens.GRCh38.rel79.cdna.all.fa -i Homo_sapiens.GRCh38.rel79 --type quasi -k 31 -p 24`. it is is also important.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/65
https://github.com/COMBINE-lab/salmon/issues/65:2709,Performance,optimiz,optimizer,2709,"; [2016-07-11 09:52:20.821] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-07-11 09:52:21.877] [stderrLog] [info] There were 173259 set bits in the bit array; [2016-07-11 09:52:22.030] [stderrLog] [info] Computing transcript lengths; [2016-07-11 09:52:22.030] [stderrLog] [info] Waiting to finish loading hash; Index contained 173259 targets; [2016-07-11 09:52:26.970] [jointLog] [info] done; [2016-07-11 09:52:26.970] [stderrLog] [info] Done loading index. [2016-07-11 09:52:27.327] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2016-07-11 09:52:27.327] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2016-07-11 09:52:39.858] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. **[2016-07-11 09:52:39.858] [jointLog] [warning] Something seems to be wrong with the calculation of the mapping rate. The recorded ratio is likely wrong. Please file this as a bug report.**. [2016-07-11 09:52:39.858] [jointLog] [info] Mapping rate = 0%. [2016-07-11 09:52:39.858] [jointLog] [info] finished quantifyLibrary(); [2016-07-11 09:52:39.858] [jointLog] [info] Starting optimizer; [2016-07-11 09:52:39.894] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-07-11 09:52:39.895] [jointLog] [info] iteration = 0 | max rel diff. = -1.79769e+308; [2016-07-11 09:52:39.921] [jointLog] [info] iteration = 50 | max rel diff. = -1.79769e+308; [2016-07-11 09:52:39.932] [jointLog] [info] Finished optimizer; [2016-07-11 09:52:39.932] [jointLog] [info] writing output ; ```. I am not exactly sure where the problem is. The output file is created, but all the transcripts are '0'. Any ideas, what was done wrong?. thanks. Assa. PS.; this is how I have indexed the data. `salmon index -t Homo_sapiens.GRCh38.rel79.cdna.all.fa -i Homo_sapiens.GRCh38.rel79 --type quasi -k 31 -p 24`. it is is also important.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/65
https://github.com/COMBINE-lab/salmon/issues/65:1041,Security,Hash,Hash,1041," Ubuntu server. here is my command as well as the STDOUT output:. ```; salmon quant -p 16 --biasCorrect --libType IU -i ~./Salmon/Salmon.index/Homo_sapiens.GRCh38.rel79/ --numBootstraps 100 -o $base <(zcat ${base}_1.fastq.gz ) <(zcat ${base}_2.fastq.gz); Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0 ; # [ program ] => salmon; # [ command ] => quant; # [ threads ] => { 16 }; # [ biasCorrect ] => { }; # [ libType ] => { IU }; # [ index ] => { ./Salmon/Salmon.index/Homo_sapiens.GRCh38.rel79/ }; # [ numBootstraps ] => { 100 }; # [ output ] => { 61LP1AAXX_8 } ; # [ ] => { /dev/fd/63 }; # [ ] => { /dev/fd/62 }; Logs will be written to 61LP1AAXX_8/logs; there is 0[2016-07-11 09:51:45.206] [jointLog] [info] parsing read library format; lib; Loading 32-bit quasi index[2016-07-11 09:51:45.328] [jointLog] [info] Loading Quasi index; [2016-07-11 09:51:45.736] [stderrLog] [info] Loading Suffix Array; [2016-07-11 09:51:45.771] [stderrLog] [info] Loading Position Hash; [2016-07-11 09:52:13.781] [stderrLog] [info] Loading Transcript Info; [2016-07-11 09:52:20.821] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-07-11 09:52:21.877] [stderrLog] [info] There were 173259 set bits in the bit array; [2016-07-11 09:52:22.030] [stderrLog] [info] Computing transcript lengths; [2016-07-11 09:52:22.030] [stderrLog] [info] Waiting to finish loading hash; Index contained 173259 targets; [2016-07-11 09:52:26.970] [jointLog] [info] done; [2016-07-11 09:52:26.970] [stderrLog] [info] Done loading index. [2016-07-11 09:52:27.327] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2016-07-11 09:52:27.327] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2016-07-11 09:52:39.858] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. **[2016-07-11 09:52:39.858] [jointLog] [warning] ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/65
https://github.com/COMBINE-lab/salmon/issues/65:1429,Security,hash,hash,1429," threads ] => { 16 }; # [ biasCorrect ] => { }; # [ libType ] => { IU }; # [ index ] => { ./Salmon/Salmon.index/Homo_sapiens.GRCh38.rel79/ }; # [ numBootstraps ] => { 100 }; # [ output ] => { 61LP1AAXX_8 } ; # [ ] => { /dev/fd/63 }; # [ ] => { /dev/fd/62 }; Logs will be written to 61LP1AAXX_8/logs; there is 0[2016-07-11 09:51:45.206] [jointLog] [info] parsing read library format; lib; Loading 32-bit quasi index[2016-07-11 09:51:45.328] [jointLog] [info] Loading Quasi index; [2016-07-11 09:51:45.736] [stderrLog] [info] Loading Suffix Array; [2016-07-11 09:51:45.771] [stderrLog] [info] Loading Position Hash; [2016-07-11 09:52:13.781] [stderrLog] [info] Loading Transcript Info; [2016-07-11 09:52:20.821] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-07-11 09:52:21.877] [stderrLog] [info] There were 173259 set bits in the bit array; [2016-07-11 09:52:22.030] [stderrLog] [info] Computing transcript lengths; [2016-07-11 09:52:22.030] [stderrLog] [info] Waiting to finish loading hash; Index contained 173259 targets; [2016-07-11 09:52:26.970] [jointLog] [info] done; [2016-07-11 09:52:26.970] [stderrLog] [info] Done loading index. [2016-07-11 09:52:27.327] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2016-07-11 09:52:27.327] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2016-07-11 09:52:39.858] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. **[2016-07-11 09:52:39.858] [jointLog] [warning] Something seems to be wrong with the calculation of the mapping rate. The recorded ratio is likely wrong. Please file this as a bug report.**. [2016-07-11 09:52:39.858] [jointLog] [info] Mapping rate = 0%. [2016-07-11 09:52:39.858] [jointLog] [info] finished quantifyLibrary(); [2016-07-11 09:52:39.858] [jointLog] [info] Starting optimizer; [2016-07-11 09:52:39.894] [jointLog] [info] Marked 0 weigh",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/65
https://github.com/COMBINE-lab/salmon/issues/65:691,Testability,Log,Logs,691,"Hi,. I am running salom 0.6.0 on a Ubuntu server. here is my command as well as the STDOUT output:. ```; salmon quant -p 16 --biasCorrect --libType IU -i ~./Salmon/Salmon.index/Homo_sapiens.GRCh38.rel79/ --numBootstraps 100 -o $base <(zcat ${base}_1.fastq.gz ) <(zcat ${base}_2.fastq.gz); Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0 ; # [ program ] => salmon; # [ command ] => quant; # [ threads ] => { 16 }; # [ biasCorrect ] => { }; # [ libType ] => { IU }; # [ index ] => { ./Salmon/Salmon.index/Homo_sapiens.GRCh38.rel79/ }; # [ numBootstraps ] => { 100 }; # [ output ] => { 61LP1AAXX_8 } ; # [ ] => { /dev/fd/63 }; # [ ] => { /dev/fd/62 }; Logs will be written to 61LP1AAXX_8/logs; there is 0[2016-07-11 09:51:45.206] [jointLog] [info] parsing read library format; lib; Loading 32-bit quasi index[2016-07-11 09:51:45.328] [jointLog] [info] Loading Quasi index; [2016-07-11 09:51:45.736] [stderrLog] [info] Loading Suffix Array; [2016-07-11 09:51:45.771] [stderrLog] [info] Loading Position Hash; [2016-07-11 09:52:13.781] [stderrLog] [info] Loading Transcript Info; [2016-07-11 09:52:20.821] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-07-11 09:52:21.877] [stderrLog] [info] There were 173259 set bits in the bit array; [2016-07-11 09:52:22.030] [stderrLog] [info] Computing transcript lengths; [2016-07-11 09:52:22.030] [stderrLog] [info] Waiting to finish loading hash; Index contained 173259 targets; [2016-07-11 09:52:26.970] [jointLog] [info] done; [2016-07-11 09:52:26.970] [stderrLog] [info] Done loading index. [2016-07-11 09:52:27.327] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2016-07-11 09:52:27.327] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2016-07-11 09:52:39.858] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. **[2016-07-11 09",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/65
https://github.com/COMBINE-lab/salmon/issues/65:727,Testability,log,logs,727,"Hi,. I am running salom 0.6.0 on a Ubuntu server. here is my command as well as the STDOUT output:. ```; salmon quant -p 16 --biasCorrect --libType IU -i ~./Salmon/Salmon.index/Homo_sapiens.GRCh38.rel79/ --numBootstraps 100 -o $base <(zcat ${base}_1.fastq.gz ) <(zcat ${base}_2.fastq.gz); Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0 ; # [ program ] => salmon; # [ command ] => quant; # [ threads ] => { 16 }; # [ biasCorrect ] => { }; # [ libType ] => { IU }; # [ index ] => { ./Salmon/Salmon.index/Homo_sapiens.GRCh38.rel79/ }; # [ numBootstraps ] => { 100 }; # [ output ] => { 61LP1AAXX_8 } ; # [ ] => { /dev/fd/63 }; # [ ] => { /dev/fd/62 }; Logs will be written to 61LP1AAXX_8/logs; there is 0[2016-07-11 09:51:45.206] [jointLog] [info] parsing read library format; lib; Loading 32-bit quasi index[2016-07-11 09:51:45.328] [jointLog] [info] Loading Quasi index; [2016-07-11 09:51:45.736] [stderrLog] [info] Loading Suffix Array; [2016-07-11 09:51:45.771] [stderrLog] [info] Loading Position Hash; [2016-07-11 09:52:13.781] [stderrLog] [info] Loading Transcript Info; [2016-07-11 09:52:20.821] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-07-11 09:52:21.877] [stderrLog] [info] There were 173259 set bits in the bit array; [2016-07-11 09:52:22.030] [stderrLog] [info] Computing transcript lengths; [2016-07-11 09:52:22.030] [stderrLog] [info] Waiting to finish loading hash; Index contained 173259 targets; [2016-07-11 09:52:26.970] [jointLog] [info] done; [2016-07-11 09:52:26.970] [stderrLog] [info] Done loading index. [2016-07-11 09:52:27.327] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2016-07-11 09:52:27.327] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2016-07-11 09:52:39.858] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. **[2016-07-11 09",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/65
https://github.com/COMBINE-lab/salmon/issues/66:1740,Deployability,pipeline,pipeline,1740,"Hi,; I am processing canine data (replicates SRR636842 and SRR636843) and Salmon segfaults with no (?) useful information in the log that would help me to identify the problem. Other data from the same study are processed fine (mouse, cow and pig; all 51nt reads). ```; # salmon (mapping-based) v0.6.0; # [ program ] => salmon ; # [ command ] => quant ; # [ index ] => { /[...path...]/genemodel/cfa_canFam3_ensembl_vN.pctr_norm.k19.idx }; # [ threads ] => { 16 }; # [ libType ] => { IU }; # [ mates1 ] => { /dev/fd/63 }; # [ mates2 ] => { /dev/fd/62 }; # [ biasCorrect ] => { }; # [ output ] => { /[...path...]/tmp/SRX211583 }; # [ forgettingFactor ] => { 0.8 }; # [ useVBOpt ] => { }; # [ sensitive ] => { }; # [ geneMap ] => { /[...path...]/genemodel/cfa_canFam3_ensembl_vN.pctr_map.tsv }; Logs will be written to /[...path...]/tmp/SRX211583/logs; there is 1 lib; [2016-07-19 09:35:23.827] [jointLog] [info] parsing read library format; Loading 32-bit quasi index[2016-07-19 09:35:23.895] [jointLog] [info] Loading Quasi index; [2016-07-19 09:35:23.898] [stderrLog] [info] Loading Suffix Array ; [2016-07-19 09:35:23.899] [stderrLog] [info] Loading Position Hash; [2016-07-19 09:35:29.545] [stderrLog] [info] Loading Transcript Info ; [2016-07-19 09:35:30.913] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-07-19 09:35:31.452] [stderrLog] [info] There were 24526 set bits in the bit array; [2016-07-19 09:35:31.737] [stderrLog] [info] Computing transcript lengths; [2016-07-19 09:35:31.737] [stderrLog] [info] Waiting to finish loading hash; Index contained 24526 targets; [2016-07-19 09:36:30.462] [jointLog] [info] done; [2016-07-19 09:36:30.462] [stderrLog] [info] Done loading index; ```. All data are processed in the same pipeline, so I guess there is something particular about this dataset - but given this information, I have no clue where to start looking.; I have seen ticket #64, but I am not using the `--useFSPD` parameter, so I assume it's a different problem. +Peter",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/66
https://github.com/COMBINE-lab/salmon/issues/66:939,Performance,Load,Loading,939,"Hi,; I am processing canine data (replicates SRR636842 and SRR636843) and Salmon segfaults with no (?) useful information in the log that would help me to identify the problem. Other data from the same study are processed fine (mouse, cow and pig; all 51nt reads). ```; # salmon (mapping-based) v0.6.0; # [ program ] => salmon ; # [ command ] => quant ; # [ index ] => { /[...path...]/genemodel/cfa_canFam3_ensembl_vN.pctr_norm.k19.idx }; # [ threads ] => { 16 }; # [ libType ] => { IU }; # [ mates1 ] => { /dev/fd/63 }; # [ mates2 ] => { /dev/fd/62 }; # [ biasCorrect ] => { }; # [ output ] => { /[...path...]/tmp/SRX211583 }; # [ forgettingFactor ] => { 0.8 }; # [ useVBOpt ] => { }; # [ sensitive ] => { }; # [ geneMap ] => { /[...path...]/genemodel/cfa_canFam3_ensembl_vN.pctr_map.tsv }; Logs will be written to /[...path...]/tmp/SRX211583/logs; there is 1 lib; [2016-07-19 09:35:23.827] [jointLog] [info] parsing read library format; Loading 32-bit quasi index[2016-07-19 09:35:23.895] [jointLog] [info] Loading Quasi index; [2016-07-19 09:35:23.898] [stderrLog] [info] Loading Suffix Array ; [2016-07-19 09:35:23.899] [stderrLog] [info] Loading Position Hash; [2016-07-19 09:35:29.545] [stderrLog] [info] Loading Transcript Info ; [2016-07-19 09:35:30.913] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-07-19 09:35:31.452] [stderrLog] [info] There were 24526 set bits in the bit array; [2016-07-19 09:35:31.737] [stderrLog] [info] Computing transcript lengths; [2016-07-19 09:35:31.737] [stderrLog] [info] Waiting to finish loading hash; Index contained 24526 targets; [2016-07-19 09:36:30.462] [jointLog] [info] done; [2016-07-19 09:36:30.462] [stderrLog] [info] Done loading index; ```. All data are processed in the same pipeline, so I guess there is something particular about this dataset - but given this information, I have no clue where to start looking.; I have seen ticket #64, but I am not using the `--useFSPD` parameter, so I assume it's a different problem. +Peter",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/66
https://github.com/COMBINE-lab/salmon/issues/66:1009,Performance,Load,Loading,1009,"Hi,; I am processing canine data (replicates SRR636842 and SRR636843) and Salmon segfaults with no (?) useful information in the log that would help me to identify the problem. Other data from the same study are processed fine (mouse, cow and pig; all 51nt reads). ```; # salmon (mapping-based) v0.6.0; # [ program ] => salmon ; # [ command ] => quant ; # [ index ] => { /[...path...]/genemodel/cfa_canFam3_ensembl_vN.pctr_norm.k19.idx }; # [ threads ] => { 16 }; # [ libType ] => { IU }; # [ mates1 ] => { /dev/fd/63 }; # [ mates2 ] => { /dev/fd/62 }; # [ biasCorrect ] => { }; # [ output ] => { /[...path...]/tmp/SRX211583 }; # [ forgettingFactor ] => { 0.8 }; # [ useVBOpt ] => { }; # [ sensitive ] => { }; # [ geneMap ] => { /[...path...]/genemodel/cfa_canFam3_ensembl_vN.pctr_map.tsv }; Logs will be written to /[...path...]/tmp/SRX211583/logs; there is 1 lib; [2016-07-19 09:35:23.827] [jointLog] [info] parsing read library format; Loading 32-bit quasi index[2016-07-19 09:35:23.895] [jointLog] [info] Loading Quasi index; [2016-07-19 09:35:23.898] [stderrLog] [info] Loading Suffix Array ; [2016-07-19 09:35:23.899] [stderrLog] [info] Loading Position Hash; [2016-07-19 09:35:29.545] [stderrLog] [info] Loading Transcript Info ; [2016-07-19 09:35:30.913] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-07-19 09:35:31.452] [stderrLog] [info] There were 24526 set bits in the bit array; [2016-07-19 09:35:31.737] [stderrLog] [info] Computing transcript lengths; [2016-07-19 09:35:31.737] [stderrLog] [info] Waiting to finish loading hash; Index contained 24526 targets; [2016-07-19 09:36:30.462] [jointLog] [info] done; [2016-07-19 09:36:30.462] [stderrLog] [info] Done loading index; ```. All data are processed in the same pipeline, so I guess there is something particular about this dataset - but given this information, I have no clue where to start looking.; I have seen ticket #64, but I am not using the `--useFSPD` parameter, so I assume it's a different problem. +Peter",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/66
https://github.com/COMBINE-lab/salmon/issues/66:1075,Performance,Load,Loading,1075,"Hi,; I am processing canine data (replicates SRR636842 and SRR636843) and Salmon segfaults with no (?) useful information in the log that would help me to identify the problem. Other data from the same study are processed fine (mouse, cow and pig; all 51nt reads). ```; # salmon (mapping-based) v0.6.0; # [ program ] => salmon ; # [ command ] => quant ; # [ index ] => { /[...path...]/genemodel/cfa_canFam3_ensembl_vN.pctr_norm.k19.idx }; # [ threads ] => { 16 }; # [ libType ] => { IU }; # [ mates1 ] => { /dev/fd/63 }; # [ mates2 ] => { /dev/fd/62 }; # [ biasCorrect ] => { }; # [ output ] => { /[...path...]/tmp/SRX211583 }; # [ forgettingFactor ] => { 0.8 }; # [ useVBOpt ] => { }; # [ sensitive ] => { }; # [ geneMap ] => { /[...path...]/genemodel/cfa_canFam3_ensembl_vN.pctr_map.tsv }; Logs will be written to /[...path...]/tmp/SRX211583/logs; there is 1 lib; [2016-07-19 09:35:23.827] [jointLog] [info] parsing read library format; Loading 32-bit quasi index[2016-07-19 09:35:23.895] [jointLog] [info] Loading Quasi index; [2016-07-19 09:35:23.898] [stderrLog] [info] Loading Suffix Array ; [2016-07-19 09:35:23.899] [stderrLog] [info] Loading Position Hash; [2016-07-19 09:35:29.545] [stderrLog] [info] Loading Transcript Info ; [2016-07-19 09:35:30.913] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-07-19 09:35:31.452] [stderrLog] [info] There were 24526 set bits in the bit array; [2016-07-19 09:35:31.737] [stderrLog] [info] Computing transcript lengths; [2016-07-19 09:35:31.737] [stderrLog] [info] Waiting to finish loading hash; Index contained 24526 targets; [2016-07-19 09:36:30.462] [jointLog] [info] done; [2016-07-19 09:36:30.462] [stderrLog] [info] Done loading index; ```. All data are processed in the same pipeline, so I guess there is something particular about this dataset - but given this information, I have no clue where to start looking.; I have seen ticket #64, but I am not using the `--useFSPD` parameter, so I assume it's a different problem. +Peter",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/66
https://github.com/COMBINE-lab/salmon/issues/66:1143,Performance,Load,Loading,1143,"Hi,; I am processing canine data (replicates SRR636842 and SRR636843) and Salmon segfaults with no (?) useful information in the log that would help me to identify the problem. Other data from the same study are processed fine (mouse, cow and pig; all 51nt reads). ```; # salmon (mapping-based) v0.6.0; # [ program ] => salmon ; # [ command ] => quant ; # [ index ] => { /[...path...]/genemodel/cfa_canFam3_ensembl_vN.pctr_norm.k19.idx }; # [ threads ] => { 16 }; # [ libType ] => { IU }; # [ mates1 ] => { /dev/fd/63 }; # [ mates2 ] => { /dev/fd/62 }; # [ biasCorrect ] => { }; # [ output ] => { /[...path...]/tmp/SRX211583 }; # [ forgettingFactor ] => { 0.8 }; # [ useVBOpt ] => { }; # [ sensitive ] => { }; # [ geneMap ] => { /[...path...]/genemodel/cfa_canFam3_ensembl_vN.pctr_map.tsv }; Logs will be written to /[...path...]/tmp/SRX211583/logs; there is 1 lib; [2016-07-19 09:35:23.827] [jointLog] [info] parsing read library format; Loading 32-bit quasi index[2016-07-19 09:35:23.895] [jointLog] [info] Loading Quasi index; [2016-07-19 09:35:23.898] [stderrLog] [info] Loading Suffix Array ; [2016-07-19 09:35:23.899] [stderrLog] [info] Loading Position Hash; [2016-07-19 09:35:29.545] [stderrLog] [info] Loading Transcript Info ; [2016-07-19 09:35:30.913] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-07-19 09:35:31.452] [stderrLog] [info] There were 24526 set bits in the bit array; [2016-07-19 09:35:31.737] [stderrLog] [info] Computing transcript lengths; [2016-07-19 09:35:31.737] [stderrLog] [info] Waiting to finish loading hash; Index contained 24526 targets; [2016-07-19 09:36:30.462] [jointLog] [info] done; [2016-07-19 09:36:30.462] [stderrLog] [info] Done loading index; ```. All data are processed in the same pipeline, so I guess there is something particular about this dataset - but given this information, I have no clue where to start looking.; I have seen ticket #64, but I am not using the `--useFSPD` parameter, so I assume it's a different problem. +Peter",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/66
https://github.com/COMBINE-lab/salmon/issues/66:1211,Performance,Load,Loading,1211,"Hi,; I am processing canine data (replicates SRR636842 and SRR636843) and Salmon segfaults with no (?) useful information in the log that would help me to identify the problem. Other data from the same study are processed fine (mouse, cow and pig; all 51nt reads). ```; # salmon (mapping-based) v0.6.0; # [ program ] => salmon ; # [ command ] => quant ; # [ index ] => { /[...path...]/genemodel/cfa_canFam3_ensembl_vN.pctr_norm.k19.idx }; # [ threads ] => { 16 }; # [ libType ] => { IU }; # [ mates1 ] => { /dev/fd/63 }; # [ mates2 ] => { /dev/fd/62 }; # [ biasCorrect ] => { }; # [ output ] => { /[...path...]/tmp/SRX211583 }; # [ forgettingFactor ] => { 0.8 }; # [ useVBOpt ] => { }; # [ sensitive ] => { }; # [ geneMap ] => { /[...path...]/genemodel/cfa_canFam3_ensembl_vN.pctr_map.tsv }; Logs will be written to /[...path...]/tmp/SRX211583/logs; there is 1 lib; [2016-07-19 09:35:23.827] [jointLog] [info] parsing read library format; Loading 32-bit quasi index[2016-07-19 09:35:23.895] [jointLog] [info] Loading Quasi index; [2016-07-19 09:35:23.898] [stderrLog] [info] Loading Suffix Array ; [2016-07-19 09:35:23.899] [stderrLog] [info] Loading Position Hash; [2016-07-19 09:35:29.545] [stderrLog] [info] Loading Transcript Info ; [2016-07-19 09:35:30.913] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-07-19 09:35:31.452] [stderrLog] [info] There were 24526 set bits in the bit array; [2016-07-19 09:35:31.737] [stderrLog] [info] Computing transcript lengths; [2016-07-19 09:35:31.737] [stderrLog] [info] Waiting to finish loading hash; Index contained 24526 targets; [2016-07-19 09:36:30.462] [jointLog] [info] done; [2016-07-19 09:36:30.462] [stderrLog] [info] Done loading index; ```. All data are processed in the same pipeline, so I guess there is something particular about this dataset - but given this information, I have no clue where to start looking.; I have seen ticket #64, but I am not using the `--useFSPD` parameter, so I assume it's a different problem. +Peter",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/66
https://github.com/COMBINE-lab/salmon/issues/66:1282,Performance,Load,Loading,1282,"Hi,; I am processing canine data (replicates SRR636842 and SRR636843) and Salmon segfaults with no (?) useful information in the log that would help me to identify the problem. Other data from the same study are processed fine (mouse, cow and pig; all 51nt reads). ```; # salmon (mapping-based) v0.6.0; # [ program ] => salmon ; # [ command ] => quant ; # [ index ] => { /[...path...]/genemodel/cfa_canFam3_ensembl_vN.pctr_norm.k19.idx }; # [ threads ] => { 16 }; # [ libType ] => { IU }; # [ mates1 ] => { /dev/fd/63 }; # [ mates2 ] => { /dev/fd/62 }; # [ biasCorrect ] => { }; # [ output ] => { /[...path...]/tmp/SRX211583 }; # [ forgettingFactor ] => { 0.8 }; # [ useVBOpt ] => { }; # [ sensitive ] => { }; # [ geneMap ] => { /[...path...]/genemodel/cfa_canFam3_ensembl_vN.pctr_map.tsv }; Logs will be written to /[...path...]/tmp/SRX211583/logs; there is 1 lib; [2016-07-19 09:35:23.827] [jointLog] [info] parsing read library format; Loading 32-bit quasi index[2016-07-19 09:35:23.895] [jointLog] [info] Loading Quasi index; [2016-07-19 09:35:23.898] [stderrLog] [info] Loading Suffix Array ; [2016-07-19 09:35:23.899] [stderrLog] [info] Loading Position Hash; [2016-07-19 09:35:29.545] [stderrLog] [info] Loading Transcript Info ; [2016-07-19 09:35:30.913] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-07-19 09:35:31.452] [stderrLog] [info] There were 24526 set bits in the bit array; [2016-07-19 09:35:31.737] [stderrLog] [info] Computing transcript lengths; [2016-07-19 09:35:31.737] [stderrLog] [info] Waiting to finish loading hash; Index contained 24526 targets; [2016-07-19 09:36:30.462] [jointLog] [info] done; [2016-07-19 09:36:30.462] [stderrLog] [info] Done loading index; ```. All data are processed in the same pipeline, so I guess there is something particular about this dataset - but given this information, I have no clue where to start looking.; I have seen ticket #64, but I am not using the `--useFSPD` parameter, so I assume it's a different problem. +Peter",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/66
https://github.com/COMBINE-lab/salmon/issues/66:1540,Performance,load,loading,1540,"Hi,; I am processing canine data (replicates SRR636842 and SRR636843) and Salmon segfaults with no (?) useful information in the log that would help me to identify the problem. Other data from the same study are processed fine (mouse, cow and pig; all 51nt reads). ```; # salmon (mapping-based) v0.6.0; # [ program ] => salmon ; # [ command ] => quant ; # [ index ] => { /[...path...]/genemodel/cfa_canFam3_ensembl_vN.pctr_norm.k19.idx }; # [ threads ] => { 16 }; # [ libType ] => { IU }; # [ mates1 ] => { /dev/fd/63 }; # [ mates2 ] => { /dev/fd/62 }; # [ biasCorrect ] => { }; # [ output ] => { /[...path...]/tmp/SRX211583 }; # [ forgettingFactor ] => { 0.8 }; # [ useVBOpt ] => { }; # [ sensitive ] => { }; # [ geneMap ] => { /[...path...]/genemodel/cfa_canFam3_ensembl_vN.pctr_map.tsv }; Logs will be written to /[...path...]/tmp/SRX211583/logs; there is 1 lib; [2016-07-19 09:35:23.827] [jointLog] [info] parsing read library format; Loading 32-bit quasi index[2016-07-19 09:35:23.895] [jointLog] [info] Loading Quasi index; [2016-07-19 09:35:23.898] [stderrLog] [info] Loading Suffix Array ; [2016-07-19 09:35:23.899] [stderrLog] [info] Loading Position Hash; [2016-07-19 09:35:29.545] [stderrLog] [info] Loading Transcript Info ; [2016-07-19 09:35:30.913] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-07-19 09:35:31.452] [stderrLog] [info] There were 24526 set bits in the bit array; [2016-07-19 09:35:31.737] [stderrLog] [info] Computing transcript lengths; [2016-07-19 09:35:31.737] [stderrLog] [info] Waiting to finish loading hash; Index contained 24526 targets; [2016-07-19 09:36:30.462] [jointLog] [info] done; [2016-07-19 09:36:30.462] [stderrLog] [info] Done loading index; ```. All data are processed in the same pipeline, so I guess there is something particular about this dataset - but given this information, I have no clue where to start looking.; I have seen ticket #64, but I am not using the `--useFSPD` parameter, so I assume it's a different problem. +Peter",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/66
https://github.com/COMBINE-lab/salmon/issues/66:1685,Performance,load,loading,1685,"Hi,; I am processing canine data (replicates SRR636842 and SRR636843) and Salmon segfaults with no (?) useful information in the log that would help me to identify the problem. Other data from the same study are processed fine (mouse, cow and pig; all 51nt reads). ```; # salmon (mapping-based) v0.6.0; # [ program ] => salmon ; # [ command ] => quant ; # [ index ] => { /[...path...]/genemodel/cfa_canFam3_ensembl_vN.pctr_norm.k19.idx }; # [ threads ] => { 16 }; # [ libType ] => { IU }; # [ mates1 ] => { /dev/fd/63 }; # [ mates2 ] => { /dev/fd/62 }; # [ biasCorrect ] => { }; # [ output ] => { /[...path...]/tmp/SRX211583 }; # [ forgettingFactor ] => { 0.8 }; # [ useVBOpt ] => { }; # [ sensitive ] => { }; # [ geneMap ] => { /[...path...]/genemodel/cfa_canFam3_ensembl_vN.pctr_map.tsv }; Logs will be written to /[...path...]/tmp/SRX211583/logs; there is 1 lib; [2016-07-19 09:35:23.827] [jointLog] [info] parsing read library format; Loading 32-bit quasi index[2016-07-19 09:35:23.895] [jointLog] [info] Loading Quasi index; [2016-07-19 09:35:23.898] [stderrLog] [info] Loading Suffix Array ; [2016-07-19 09:35:23.899] [stderrLog] [info] Loading Position Hash; [2016-07-19 09:35:29.545] [stderrLog] [info] Loading Transcript Info ; [2016-07-19 09:35:30.913] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-07-19 09:35:31.452] [stderrLog] [info] There were 24526 set bits in the bit array; [2016-07-19 09:35:31.737] [stderrLog] [info] Computing transcript lengths; [2016-07-19 09:35:31.737] [stderrLog] [info] Waiting to finish loading hash; Index contained 24526 targets; [2016-07-19 09:36:30.462] [jointLog] [info] done; [2016-07-19 09:36:30.462] [stderrLog] [info] Done loading index; ```. All data are processed in the same pipeline, so I guess there is something particular about this dataset - but given this information, I have no clue where to start looking.; I have seen ticket #64, but I am not using the `--useFSPD` parameter, so I assume it's a different problem. +Peter",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/66
https://github.com/COMBINE-lab/salmon/issues/66:1160,Security,Hash,Hash,1160,"Hi,; I am processing canine data (replicates SRR636842 and SRR636843) and Salmon segfaults with no (?) useful information in the log that would help me to identify the problem. Other data from the same study are processed fine (mouse, cow and pig; all 51nt reads). ```; # salmon (mapping-based) v0.6.0; # [ program ] => salmon ; # [ command ] => quant ; # [ index ] => { /[...path...]/genemodel/cfa_canFam3_ensembl_vN.pctr_norm.k19.idx }; # [ threads ] => { 16 }; # [ libType ] => { IU }; # [ mates1 ] => { /dev/fd/63 }; # [ mates2 ] => { /dev/fd/62 }; # [ biasCorrect ] => { }; # [ output ] => { /[...path...]/tmp/SRX211583 }; # [ forgettingFactor ] => { 0.8 }; # [ useVBOpt ] => { }; # [ sensitive ] => { }; # [ geneMap ] => { /[...path...]/genemodel/cfa_canFam3_ensembl_vN.pctr_map.tsv }; Logs will be written to /[...path...]/tmp/SRX211583/logs; there is 1 lib; [2016-07-19 09:35:23.827] [jointLog] [info] parsing read library format; Loading 32-bit quasi index[2016-07-19 09:35:23.895] [jointLog] [info] Loading Quasi index; [2016-07-19 09:35:23.898] [stderrLog] [info] Loading Suffix Array ; [2016-07-19 09:35:23.899] [stderrLog] [info] Loading Position Hash; [2016-07-19 09:35:29.545] [stderrLog] [info] Loading Transcript Info ; [2016-07-19 09:35:30.913] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-07-19 09:35:31.452] [stderrLog] [info] There were 24526 set bits in the bit array; [2016-07-19 09:35:31.737] [stderrLog] [info] Computing transcript lengths; [2016-07-19 09:35:31.737] [stderrLog] [info] Waiting to finish loading hash; Index contained 24526 targets; [2016-07-19 09:36:30.462] [jointLog] [info] done; [2016-07-19 09:36:30.462] [stderrLog] [info] Done loading index; ```. All data are processed in the same pipeline, so I guess there is something particular about this dataset - but given this information, I have no clue where to start looking.; I have seen ticket #64, but I am not using the `--useFSPD` parameter, so I assume it's a different problem. +Peter",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/66
https://github.com/COMBINE-lab/salmon/issues/66:1548,Security,hash,hash,1548,"Hi,; I am processing canine data (replicates SRR636842 and SRR636843) and Salmon segfaults with no (?) useful information in the log that would help me to identify the problem. Other data from the same study are processed fine (mouse, cow and pig; all 51nt reads). ```; # salmon (mapping-based) v0.6.0; # [ program ] => salmon ; # [ command ] => quant ; # [ index ] => { /[...path...]/genemodel/cfa_canFam3_ensembl_vN.pctr_norm.k19.idx }; # [ threads ] => { 16 }; # [ libType ] => { IU }; # [ mates1 ] => { /dev/fd/63 }; # [ mates2 ] => { /dev/fd/62 }; # [ biasCorrect ] => { }; # [ output ] => { /[...path...]/tmp/SRX211583 }; # [ forgettingFactor ] => { 0.8 }; # [ useVBOpt ] => { }; # [ sensitive ] => { }; # [ geneMap ] => { /[...path...]/genemodel/cfa_canFam3_ensembl_vN.pctr_map.tsv }; Logs will be written to /[...path...]/tmp/SRX211583/logs; there is 1 lib; [2016-07-19 09:35:23.827] [jointLog] [info] parsing read library format; Loading 32-bit quasi index[2016-07-19 09:35:23.895] [jointLog] [info] Loading Quasi index; [2016-07-19 09:35:23.898] [stderrLog] [info] Loading Suffix Array ; [2016-07-19 09:35:23.899] [stderrLog] [info] Loading Position Hash; [2016-07-19 09:35:29.545] [stderrLog] [info] Loading Transcript Info ; [2016-07-19 09:35:30.913] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-07-19 09:35:31.452] [stderrLog] [info] There were 24526 set bits in the bit array; [2016-07-19 09:35:31.737] [stderrLog] [info] Computing transcript lengths; [2016-07-19 09:35:31.737] [stderrLog] [info] Waiting to finish loading hash; Index contained 24526 targets; [2016-07-19 09:36:30.462] [jointLog] [info] done; [2016-07-19 09:36:30.462] [stderrLog] [info] Done loading index; ```. All data are processed in the same pipeline, so I guess there is something particular about this dataset - but given this information, I have no clue where to start looking.; I have seen ticket #64, but I am not using the `--useFSPD` parameter, so I assume it's a different problem. +Peter",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/66
https://github.com/COMBINE-lab/salmon/issues/66:129,Testability,log,log,129,"Hi,; I am processing canine data (replicates SRR636842 and SRR636843) and Salmon segfaults with no (?) useful information in the log that would help me to identify the problem. Other data from the same study are processed fine (mouse, cow and pig; all 51nt reads). ```; # salmon (mapping-based) v0.6.0; # [ program ] => salmon ; # [ command ] => quant ; # [ index ] => { /[...path...]/genemodel/cfa_canFam3_ensembl_vN.pctr_norm.k19.idx }; # [ threads ] => { 16 }; # [ libType ] => { IU }; # [ mates1 ] => { /dev/fd/63 }; # [ mates2 ] => { /dev/fd/62 }; # [ biasCorrect ] => { }; # [ output ] => { /[...path...]/tmp/SRX211583 }; # [ forgettingFactor ] => { 0.8 }; # [ useVBOpt ] => { }; # [ sensitive ] => { }; # [ geneMap ] => { /[...path...]/genemodel/cfa_canFam3_ensembl_vN.pctr_map.tsv }; Logs will be written to /[...path...]/tmp/SRX211583/logs; there is 1 lib; [2016-07-19 09:35:23.827] [jointLog] [info] parsing read library format; Loading 32-bit quasi index[2016-07-19 09:35:23.895] [jointLog] [info] Loading Quasi index; [2016-07-19 09:35:23.898] [stderrLog] [info] Loading Suffix Array ; [2016-07-19 09:35:23.899] [stderrLog] [info] Loading Position Hash; [2016-07-19 09:35:29.545] [stderrLog] [info] Loading Transcript Info ; [2016-07-19 09:35:30.913] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-07-19 09:35:31.452] [stderrLog] [info] There were 24526 set bits in the bit array; [2016-07-19 09:35:31.737] [stderrLog] [info] Computing transcript lengths; [2016-07-19 09:35:31.737] [stderrLog] [info] Waiting to finish loading hash; Index contained 24526 targets; [2016-07-19 09:36:30.462] [jointLog] [info] done; [2016-07-19 09:36:30.462] [stderrLog] [info] Done loading index; ```. All data are processed in the same pipeline, so I guess there is something particular about this dataset - but given this information, I have no clue where to start looking.; I have seen ticket #64, but I am not using the `--useFSPD` parameter, so I assume it's a different problem. +Peter",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/66
https://github.com/COMBINE-lab/salmon/issues/66:792,Testability,Log,Logs,792,"Hi,; I am processing canine data (replicates SRR636842 and SRR636843) and Salmon segfaults with no (?) useful information in the log that would help me to identify the problem. Other data from the same study are processed fine (mouse, cow and pig; all 51nt reads). ```; # salmon (mapping-based) v0.6.0; # [ program ] => salmon ; # [ command ] => quant ; # [ index ] => { /[...path...]/genemodel/cfa_canFam3_ensembl_vN.pctr_norm.k19.idx }; # [ threads ] => { 16 }; # [ libType ] => { IU }; # [ mates1 ] => { /dev/fd/63 }; # [ mates2 ] => { /dev/fd/62 }; # [ biasCorrect ] => { }; # [ output ] => { /[...path...]/tmp/SRX211583 }; # [ forgettingFactor ] => { 0.8 }; # [ useVBOpt ] => { }; # [ sensitive ] => { }; # [ geneMap ] => { /[...path...]/genemodel/cfa_canFam3_ensembl_vN.pctr_map.tsv }; Logs will be written to /[...path...]/tmp/SRX211583/logs; there is 1 lib; [2016-07-19 09:35:23.827] [jointLog] [info] parsing read library format; Loading 32-bit quasi index[2016-07-19 09:35:23.895] [jointLog] [info] Loading Quasi index; [2016-07-19 09:35:23.898] [stderrLog] [info] Loading Suffix Array ; [2016-07-19 09:35:23.899] [stderrLog] [info] Loading Position Hash; [2016-07-19 09:35:29.545] [stderrLog] [info] Loading Transcript Info ; [2016-07-19 09:35:30.913] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-07-19 09:35:31.452] [stderrLog] [info] There were 24526 set bits in the bit array; [2016-07-19 09:35:31.737] [stderrLog] [info] Computing transcript lengths; [2016-07-19 09:35:31.737] [stderrLog] [info] Waiting to finish loading hash; Index contained 24526 targets; [2016-07-19 09:36:30.462] [jointLog] [info] done; [2016-07-19 09:36:30.462] [stderrLog] [info] Done loading index; ```. All data are processed in the same pipeline, so I guess there is something particular about this dataset - but given this information, I have no clue where to start looking.; I have seen ticket #64, but I am not using the `--useFSPD` parameter, so I assume it's a different problem. +Peter",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/66
https://github.com/COMBINE-lab/salmon/issues/66:844,Testability,log,logs,844,"Hi,; I am processing canine data (replicates SRR636842 and SRR636843) and Salmon segfaults with no (?) useful information in the log that would help me to identify the problem. Other data from the same study are processed fine (mouse, cow and pig; all 51nt reads). ```; # salmon (mapping-based) v0.6.0; # [ program ] => salmon ; # [ command ] => quant ; # [ index ] => { /[...path...]/genemodel/cfa_canFam3_ensembl_vN.pctr_norm.k19.idx }; # [ threads ] => { 16 }; # [ libType ] => { IU }; # [ mates1 ] => { /dev/fd/63 }; # [ mates2 ] => { /dev/fd/62 }; # [ biasCorrect ] => { }; # [ output ] => { /[...path...]/tmp/SRX211583 }; # [ forgettingFactor ] => { 0.8 }; # [ useVBOpt ] => { }; # [ sensitive ] => { }; # [ geneMap ] => { /[...path...]/genemodel/cfa_canFam3_ensembl_vN.pctr_map.tsv }; Logs will be written to /[...path...]/tmp/SRX211583/logs; there is 1 lib; [2016-07-19 09:35:23.827] [jointLog] [info] parsing read library format; Loading 32-bit quasi index[2016-07-19 09:35:23.895] [jointLog] [info] Loading Quasi index; [2016-07-19 09:35:23.898] [stderrLog] [info] Loading Suffix Array ; [2016-07-19 09:35:23.899] [stderrLog] [info] Loading Position Hash; [2016-07-19 09:35:29.545] [stderrLog] [info] Loading Transcript Info ; [2016-07-19 09:35:30.913] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-07-19 09:35:31.452] [stderrLog] [info] There were 24526 set bits in the bit array; [2016-07-19 09:35:31.737] [stderrLog] [info] Computing transcript lengths; [2016-07-19 09:35:31.737] [stderrLog] [info] Waiting to finish loading hash; Index contained 24526 targets; [2016-07-19 09:36:30.462] [jointLog] [info] done; [2016-07-19 09:36:30.462] [stderrLog] [info] Done loading index; ```. All data are processed in the same pipeline, so I guess there is something particular about this dataset - but given this information, I have no clue where to start looking.; I have seen ticket #64, but I am not using the `--useFSPD` parameter, so I assume it's a different problem. +Peter",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/66
https://github.com/COMBINE-lab/salmon/issues/67:13,Testability,test,testing,13,"Hi Rob,. I'm testing Salmon 0.6.0 in read-based mode and it seems awesome, fast and accurate. Moreover, it's very well documented, which I really appreciate. My question is about the library type specification. In the libFormatCounts.txt file, library type as well as consistent and inconsistent mappings are correctly reported. However, transcript TPM and NumReads in quant.sf file are the same regardless of the library type specified when playing with different library types combinations. I would expect Salmon to take only into account the consistent mappings for the quantification. I'm specifying the -l parameter before the -1 and -2 parameters. . I'm pretty sure that I'm missing something. I would really appreciate if you could shed light on this issue. Thanks in advance.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/67
https://github.com/COMBINE-lab/salmon/issues/72:452,Integrability,message,message,452,"I think something like this (like samtools, kallisto etc. ```; salmon v0.6.0 - description here. Usage: salmon <COMMAND> [-h | options]. Commands:; index Create a salmon index; quant Count blah; swim Whatever; ```. would be _much_ clearer than the current help. ```; salmon --help; Allowed Options:; -v [ --version ] print version string; --no-version-check don't check with the server to see if this is the; latest version; -h [ --help ] produce help message. Salmon v0.6.0; ===============. Please invoke salmon with one of the following commands {index, quant, swim}.; For more information on the options for these particular methods, use the -h; flag along with the method name. For example:. salmon index -h. will give you detailed help information about the index command.; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/72
https://github.com/COMBINE-lab/salmon/issues/72:231,Usability,clear,clearer,231,"I think something like this (like samtools, kallisto etc. ```; salmon v0.6.0 - description here. Usage: salmon <COMMAND> [-h | options]. Commands:; index Create a salmon index; quant Count blah; swim Whatever; ```. would be _much_ clearer than the current help. ```; salmon --help; Allowed Options:; -v [ --version ] print version string; --no-version-check don't check with the server to see if this is the; latest version; -h [ --help ] produce help message. Salmon v0.6.0; ===============. Please invoke salmon with one of the following commands {index, quant, swim}.; For more information on the options for these particular methods, use the -h; flag along with the method name. For example:. salmon index -h. will give you detailed help information about the index command.; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/72
https://github.com/COMBINE-lab/salmon/issues/75:47,Integrability,interface,interfaces,47,"I don't really have a feel for the RAW and BAM interfaces for Salmon `quant`, but given that they have different help screens and usage, maybe consider splitting them into separate commands?. This is just a minor suggestion, coming from a n00b user of Salmon.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/75
https://github.com/COMBINE-lab/salmon/issues/78:855,Performance,optimiz,optimizer,855,"Hi!; Thank you for making salmon. Great work!. my command line is ; salmon quant -t /hpc/grid/shared/ngsdb/fasta/gencode.v24.transcripts.no_annotation.fa -l ISR -a RC-140808-00004.tx.bam -p 8 -o salmon_aln --useVBOpt --incompatPrior 0. The end of log file looks like:. 1008 Completed first pass through the alignment file.; 1009 Total # of mapped reads : 53203073; 1010 # of uniquely mapped reads : 14377795; 1011 # ambiguously mapped reads : 38825278; 1012; 1013; 1014; 1015 [2016-08-19 14:45:45.648] [fileLog] [info] quantification processed 53203073 fragments so far; 1016; 1017 [2016-08-19 14:45:45.982] [jointLog] [info] Computed 292761 rich equivalence classes for further processing; 1018 [2016-08-19 14:45:45.982] [jointLog] [info] Counted 53203073 total reads in the equivalence classes; 1019 [2016-08-19 14:45:45.983] [jointLog] [info] starting optimizer; 1020 [2016-08-19 14:45:48.932] [jointLog] [info] Marked 1 weighted equivalence classes as degenerate. I tried dropping the --useVBOpt and it only outputs ""nan"". I also tried --useVBOpt in quasi-mapping base mode.; salmon quant -i /hpc/grid/shared/ngsdb/annotation/gencode/salmon_0.6.1_v24/ -l ISR -1 /hpc/grid/ngsws/btx_clinical/zhanc120/test/longitudinal/fastq/RC-140808-00004_1.fq.gz -2 /hpc/grid/ngsws/btx_clinical/zhanc120/test/longitudinal/fastq/RC-140808-00004_2.fq.gz -p 8 -o salmon --useVBOpt --incompatPrior 0; That worked fine. More on the bam file:; it was generated by STAR with write alignments to transcriptome option. STAR --genomeDir /hpc/grid/shared/ngsdb/STAR/GRCh38_gencode24_100 --readFilesIn /hpc/grid/ngsws/ptx_clinical/zhanc120/test/longitudinal/fastq/RC-140808-00004_1.fq.gz /hpc/grid/ngsws/ptx_clinical/zhanc120/test/longitudinal/fastq/RC-140808-00004_2.fq.gz --readFilesCommand zcat --runThreadN 8 --alignSJDBoverhangMin 1 --outFilterScoreMinOverLread 0.90 --outFilterMatchNminOverLread 0.90 --outFilterMis matchNoverLmax 0.05 --quantMode TranscriptomeSAM --alignEndsType EndToEnd --alignIntronMax 1000000 --o",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/78
https://github.com/COMBINE-lab/salmon/issues/78:247,Testability,log,log,247,"Hi!; Thank you for making salmon. Great work!. my command line is ; salmon quant -t /hpc/grid/shared/ngsdb/fasta/gencode.v24.transcripts.no_annotation.fa -l ISR -a RC-140808-00004.tx.bam -p 8 -o salmon_aln --useVBOpt --incompatPrior 0. The end of log file looks like:. 1008 Completed first pass through the alignment file.; 1009 Total # of mapped reads : 53203073; 1010 # of uniquely mapped reads : 14377795; 1011 # ambiguously mapped reads : 38825278; 1012; 1013; 1014; 1015 [2016-08-19 14:45:45.648] [fileLog] [info] quantification processed 53203073 fragments so far; 1016; 1017 [2016-08-19 14:45:45.982] [jointLog] [info] Computed 292761 rich equivalence classes for further processing; 1018 [2016-08-19 14:45:45.982] [jointLog] [info] Counted 53203073 total reads in the equivalence classes; 1019 [2016-08-19 14:45:45.983] [jointLog] [info] starting optimizer; 1020 [2016-08-19 14:45:48.932] [jointLog] [info] Marked 1 weighted equivalence classes as degenerate. I tried dropping the --useVBOpt and it only outputs ""nan"". I also tried --useVBOpt in quasi-mapping base mode.; salmon quant -i /hpc/grid/shared/ngsdb/annotation/gencode/salmon_0.6.1_v24/ -l ISR -1 /hpc/grid/ngsws/btx_clinical/zhanc120/test/longitudinal/fastq/RC-140808-00004_1.fq.gz -2 /hpc/grid/ngsws/btx_clinical/zhanc120/test/longitudinal/fastq/RC-140808-00004_2.fq.gz -p 8 -o salmon --useVBOpt --incompatPrior 0; That worked fine. More on the bam file:; it was generated by STAR with write alignments to transcriptome option. STAR --genomeDir /hpc/grid/shared/ngsdb/STAR/GRCh38_gencode24_100 --readFilesIn /hpc/grid/ngsws/ptx_clinical/zhanc120/test/longitudinal/fastq/RC-140808-00004_1.fq.gz /hpc/grid/ngsws/ptx_clinical/zhanc120/test/longitudinal/fastq/RC-140808-00004_2.fq.gz --readFilesCommand zcat --runThreadN 8 --alignSJDBoverhangMin 1 --outFilterScoreMinOverLread 0.90 --outFilterMatchNminOverLread 0.90 --outFilterMis matchNoverLmax 0.05 --quantMode TranscriptomeSAM --alignEndsType EndToEnd --alignIntronMax 1000000 --o",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/78
https://github.com/COMBINE-lab/salmon/issues/78:1204,Testability,test,test,1204,"-00004.tx.bam -p 8 -o salmon_aln --useVBOpt --incompatPrior 0. The end of log file looks like:. 1008 Completed first pass through the alignment file.; 1009 Total # of mapped reads : 53203073; 1010 # of uniquely mapped reads : 14377795; 1011 # ambiguously mapped reads : 38825278; 1012; 1013; 1014; 1015 [2016-08-19 14:45:45.648] [fileLog] [info] quantification processed 53203073 fragments so far; 1016; 1017 [2016-08-19 14:45:45.982] [jointLog] [info] Computed 292761 rich equivalence classes for further processing; 1018 [2016-08-19 14:45:45.982] [jointLog] [info] Counted 53203073 total reads in the equivalence classes; 1019 [2016-08-19 14:45:45.983] [jointLog] [info] starting optimizer; 1020 [2016-08-19 14:45:48.932] [jointLog] [info] Marked 1 weighted equivalence classes as degenerate. I tried dropping the --useVBOpt and it only outputs ""nan"". I also tried --useVBOpt in quasi-mapping base mode.; salmon quant -i /hpc/grid/shared/ngsdb/annotation/gencode/salmon_0.6.1_v24/ -l ISR -1 /hpc/grid/ngsws/btx_clinical/zhanc120/test/longitudinal/fastq/RC-140808-00004_1.fq.gz -2 /hpc/grid/ngsws/btx_clinical/zhanc120/test/longitudinal/fastq/RC-140808-00004_2.fq.gz -p 8 -o salmon --useVBOpt --incompatPrior 0; That worked fine. More on the bam file:; it was generated by STAR with write alignments to transcriptome option. STAR --genomeDir /hpc/grid/shared/ngsdb/STAR/GRCh38_gencode24_100 --readFilesIn /hpc/grid/ngsws/ptx_clinical/zhanc120/test/longitudinal/fastq/RC-140808-00004_1.fq.gz /hpc/grid/ngsws/ptx_clinical/zhanc120/test/longitudinal/fastq/RC-140808-00004_2.fq.gz --readFilesCommand zcat --runThreadN 8 --alignSJDBoverhangMin 1 --outFilterScoreMinOverLread 0.90 --outFilterMatchNminOverLread 0.90 --outFilterMis matchNoverLmax 0.05 --quantMode TranscriptomeSAM --alignEndsType EndToEnd --alignIntronMax 1000000 --outSAMtype BAM SortedByCoordinate;. The bam file worked with salmon 0.6.1 in alignment mode without --incompatPrior 0, (--useVBOpt was not an option in alignment based mode)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/78
https://github.com/COMBINE-lab/salmon/issues/78:1293,Testability,test,test,1293,"-00004.tx.bam -p 8 -o salmon_aln --useVBOpt --incompatPrior 0. The end of log file looks like:. 1008 Completed first pass through the alignment file.; 1009 Total # of mapped reads : 53203073; 1010 # of uniquely mapped reads : 14377795; 1011 # ambiguously mapped reads : 38825278; 1012; 1013; 1014; 1015 [2016-08-19 14:45:45.648] [fileLog] [info] quantification processed 53203073 fragments so far; 1016; 1017 [2016-08-19 14:45:45.982] [jointLog] [info] Computed 292761 rich equivalence classes for further processing; 1018 [2016-08-19 14:45:45.982] [jointLog] [info] Counted 53203073 total reads in the equivalence classes; 1019 [2016-08-19 14:45:45.983] [jointLog] [info] starting optimizer; 1020 [2016-08-19 14:45:48.932] [jointLog] [info] Marked 1 weighted equivalence classes as degenerate. I tried dropping the --useVBOpt and it only outputs ""nan"". I also tried --useVBOpt in quasi-mapping base mode.; salmon quant -i /hpc/grid/shared/ngsdb/annotation/gencode/salmon_0.6.1_v24/ -l ISR -1 /hpc/grid/ngsws/btx_clinical/zhanc120/test/longitudinal/fastq/RC-140808-00004_1.fq.gz -2 /hpc/grid/ngsws/btx_clinical/zhanc120/test/longitudinal/fastq/RC-140808-00004_2.fq.gz -p 8 -o salmon --useVBOpt --incompatPrior 0; That worked fine. More on the bam file:; it was generated by STAR with write alignments to transcriptome option. STAR --genomeDir /hpc/grid/shared/ngsdb/STAR/GRCh38_gencode24_100 --readFilesIn /hpc/grid/ngsws/ptx_clinical/zhanc120/test/longitudinal/fastq/RC-140808-00004_1.fq.gz /hpc/grid/ngsws/ptx_clinical/zhanc120/test/longitudinal/fastq/RC-140808-00004_2.fq.gz --readFilesCommand zcat --runThreadN 8 --alignSJDBoverhangMin 1 --outFilterScoreMinOverLread 0.90 --outFilterMatchNminOverLread 0.90 --outFilterMis matchNoverLmax 0.05 --quantMode TranscriptomeSAM --alignEndsType EndToEnd --alignIntronMax 1000000 --outSAMtype BAM SortedByCoordinate;. The bam file worked with salmon 0.6.1 in alignment mode without --incompatPrior 0, (--useVBOpt was not an option in alignment based mode)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/78
https://github.com/COMBINE-lab/salmon/issues/78:1617,Testability,test,test,1617,"-00004.tx.bam -p 8 -o salmon_aln --useVBOpt --incompatPrior 0. The end of log file looks like:. 1008 Completed first pass through the alignment file.; 1009 Total # of mapped reads : 53203073; 1010 # of uniquely mapped reads : 14377795; 1011 # ambiguously mapped reads : 38825278; 1012; 1013; 1014; 1015 [2016-08-19 14:45:45.648] [fileLog] [info] quantification processed 53203073 fragments so far; 1016; 1017 [2016-08-19 14:45:45.982] [jointLog] [info] Computed 292761 rich equivalence classes for further processing; 1018 [2016-08-19 14:45:45.982] [jointLog] [info] Counted 53203073 total reads in the equivalence classes; 1019 [2016-08-19 14:45:45.983] [jointLog] [info] starting optimizer; 1020 [2016-08-19 14:45:48.932] [jointLog] [info] Marked 1 weighted equivalence classes as degenerate. I tried dropping the --useVBOpt and it only outputs ""nan"". I also tried --useVBOpt in quasi-mapping base mode.; salmon quant -i /hpc/grid/shared/ngsdb/annotation/gencode/salmon_0.6.1_v24/ -l ISR -1 /hpc/grid/ngsws/btx_clinical/zhanc120/test/longitudinal/fastq/RC-140808-00004_1.fq.gz -2 /hpc/grid/ngsws/btx_clinical/zhanc120/test/longitudinal/fastq/RC-140808-00004_2.fq.gz -p 8 -o salmon --useVBOpt --incompatPrior 0; That worked fine. More on the bam file:; it was generated by STAR with write alignments to transcriptome option. STAR --genomeDir /hpc/grid/shared/ngsdb/STAR/GRCh38_gencode24_100 --readFilesIn /hpc/grid/ngsws/ptx_clinical/zhanc120/test/longitudinal/fastq/RC-140808-00004_1.fq.gz /hpc/grid/ngsws/ptx_clinical/zhanc120/test/longitudinal/fastq/RC-140808-00004_2.fq.gz --readFilesCommand zcat --runThreadN 8 --alignSJDBoverhangMin 1 --outFilterScoreMinOverLread 0.90 --outFilterMatchNminOverLread 0.90 --outFilterMis matchNoverLmax 0.05 --quantMode TranscriptomeSAM --alignEndsType EndToEnd --alignIntronMax 1000000 --outSAMtype BAM SortedByCoordinate;. The bam file worked with salmon 0.6.1 in alignment mode without --incompatPrior 0, (--useVBOpt was not an option in alignment based mode)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/78
https://github.com/COMBINE-lab/salmon/issues/78:1703,Testability,test,test,1703,"-00004.tx.bam -p 8 -o salmon_aln --useVBOpt --incompatPrior 0. The end of log file looks like:. 1008 Completed first pass through the alignment file.; 1009 Total # of mapped reads : 53203073; 1010 # of uniquely mapped reads : 14377795; 1011 # ambiguously mapped reads : 38825278; 1012; 1013; 1014; 1015 [2016-08-19 14:45:45.648] [fileLog] [info] quantification processed 53203073 fragments so far; 1016; 1017 [2016-08-19 14:45:45.982] [jointLog] [info] Computed 292761 rich equivalence classes for further processing; 1018 [2016-08-19 14:45:45.982] [jointLog] [info] Counted 53203073 total reads in the equivalence classes; 1019 [2016-08-19 14:45:45.983] [jointLog] [info] starting optimizer; 1020 [2016-08-19 14:45:48.932] [jointLog] [info] Marked 1 weighted equivalence classes as degenerate. I tried dropping the --useVBOpt and it only outputs ""nan"". I also tried --useVBOpt in quasi-mapping base mode.; salmon quant -i /hpc/grid/shared/ngsdb/annotation/gencode/salmon_0.6.1_v24/ -l ISR -1 /hpc/grid/ngsws/btx_clinical/zhanc120/test/longitudinal/fastq/RC-140808-00004_1.fq.gz -2 /hpc/grid/ngsws/btx_clinical/zhanc120/test/longitudinal/fastq/RC-140808-00004_2.fq.gz -p 8 -o salmon --useVBOpt --incompatPrior 0; That worked fine. More on the bam file:; it was generated by STAR with write alignments to transcriptome option. STAR --genomeDir /hpc/grid/shared/ngsdb/STAR/GRCh38_gencode24_100 --readFilesIn /hpc/grid/ngsws/ptx_clinical/zhanc120/test/longitudinal/fastq/RC-140808-00004_1.fq.gz /hpc/grid/ngsws/ptx_clinical/zhanc120/test/longitudinal/fastq/RC-140808-00004_2.fq.gz --readFilesCommand zcat --runThreadN 8 --alignSJDBoverhangMin 1 --outFilterScoreMinOverLread 0.90 --outFilterMatchNminOverLread 0.90 --outFilterMis matchNoverLmax 0.05 --quantMode TranscriptomeSAM --alignEndsType EndToEnd --alignIntronMax 1000000 --outSAMtype BAM SortedByCoordinate;. The bam file worked with salmon 0.6.1 in alignment mode without --incompatPrior 0, (--useVBOpt was not an option in alignment based mode)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/78
https://github.com/COMBINE-lab/salmon/issues/81:544,Testability,log,log,544,"Hey, I ran into couple of more typos in the --help documentation.; In Salmon Quant Reads mode, the option --writeUnmappedNames says the the file created is named unmapped.txt, while it is actually named unmapped_names.txt; In Salmon Quant Alignment mode, the option --sampleUnaligned says the un-aligned reads are also written to the file ""posSample.bam"", I suppose a 't' is missing there?; Also, when I ran Salmon Quant with Alignment mode, the output auxiliary directory was still named just 'aux' instead of 'aux_info' per the newest change log. ; Sorry if I'm bothering with these pesky details, I though it might help when clearing the documentation a bit.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/81
https://github.com/COMBINE-lab/salmon/issues/81:628,Usability,clear,clearing,628,"Hey, I ran into couple of more typos in the --help documentation.; In Salmon Quant Reads mode, the option --writeUnmappedNames says the the file created is named unmapped.txt, while it is actually named unmapped_names.txt; In Salmon Quant Alignment mode, the option --sampleUnaligned says the un-aligned reads are also written to the file ""posSample.bam"", I suppose a 't' is missing there?; Also, when I ran Salmon Quant with Alignment mode, the output auxiliary directory was still named just 'aux' instead of 'aux_info' per the newest change log. ; Sorry if I'm bothering with these pesky details, I though it might help when clearing the documentation a bit.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/81
https://github.com/COMBINE-lab/salmon/issues/82:410,Testability,test,tested,410,"Version 0.7.1 seems to refer to ""SF"" libtype as just ""F"". Maybe this is an abbreviation done on purpose since ""F"" alone necessarily implies ""stranded"" but I think that can be confusing. Moreover, in lib_format_counts.json file, both ""F"" and ""SF"" are listed, but only ""F"" gets counts whereas ""SF"" is 0. ""F"" is not recognized as a valid library type for the parameter `-l`, only ""SF"" is (as expected). I haven't tested it but the same probably happens with ""R"" and ""SR"".",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/82
https://github.com/COMBINE-lab/salmon/issues/83:531,Modifiability,extend,extends,531,"Is there any possibility of implementing the `--gcBias` option for single-end reads? I have a dataset where this would be very useful. I suppose in order to do this you'd need to assign an end point to each transcript whose start point is represented by a single read. You could either just assume every fragment's length is equal to the given mean fragment length, or maybe use the fragment length distribution implied by the mean and SD to compute, for each nucleotide past the end of the read, the probability that the fragment extends to that nucleotide, and then use that as a weight. Obviously this would require a warning to the user to set the fragment length mean and SD parameters to appropriate values for their data.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/83
https://github.com/COMBINE-lab/salmon/issues/87:29,Deployability,update,update,29,"Hi, I am currently trying to update the version of Salmon in Debian to the latest version (0.7.x) and it seems that it now embeds a copy of the RapMap code that is mixed with the salmon code and compiled together. Unfortunately Debian policy discourages embedded code copies, and the preferred way of solving this would be to have RapMap build a shared library (and/or the necessary C++ headers) that can then be used by other tools like salmon to build against. This would allow for better separation and also probably allow other interested parties to make use of RapMap's functionality. Currently RapMap only builds an executable binary for the RapMap tool itself, which -- correct me if I'm wrong -- is not used in salmon.; I was wondering what your thoughts are on this. It would help tremendously IMHO. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/87
https://github.com/COMBINE-lab/salmon/issues/89:348,Availability,error,errors,348,"Hi Rob,. I've been trying to update the bioconda package, but I can't get it to build. The bioconda package pulls in gperftools so Salmon gets built with tcmalloc, to fix some problems over NFS on CentOS < 6: https://github.com/chapmanb/bcbio-nextgen/issues/1376 I can get that to work by pulling in libunwind, but I end up with a bunch of linking errors I don't know how to fix. I could use a hand debugging it. Alternatively, and maybe easier, we could use the Linux binary if it was built with tcmalloc. Is there any chance the Linux binary could get built with tcmalloc?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/89
https://github.com/COMBINE-lab/salmon/issues/89:29,Deployability,update,update,29,"Hi Rob,. I've been trying to update the bioconda package, but I can't get it to build. The bioconda package pulls in gperftools so Salmon gets built with tcmalloc, to fix some problems over NFS on CentOS < 6: https://github.com/chapmanb/bcbio-nextgen/issues/1376 I can get that to work by pulling in libunwind, but I end up with a bunch of linking errors I don't know how to fix. I could use a hand debugging it. Alternatively, and maybe easier, we could use the Linux binary if it was built with tcmalloc. Is there any chance the Linux binary could get built with tcmalloc?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/89
https://github.com/COMBINE-lab/salmon/issues/90:237,Integrability,message,messages,237,"Running Salmon-0.7.2_linux_x86_64 with --writeMappings=map.out and it crashes with:. Exception : [boost::filesystem::create_directory: No such file or directory]. When I run without a file name, it outputs to stdout, but it also outputs messages such as:; ESC[1m[2016-09-14 11:06:07.550] [jointLog] [info] parsing read library format; ESC[00mESC[1m[2016-09-14 11:06:07.550] [jointLog] [info] There is 1 library.; ESC[00mESC[1m[2016-09-14 11:06:08.300] [jointLog] [info] Loading Quasi index; ESC[00mESC[1m[2016-09-14 11:06:08.300] [jointLog] [info] Loading 32-bit quasi index; So the output is not a clean .sam file. ~/programs/Salmon-0.7.2_linux_x86_64/bin/salmon quant -i /data/reference/salmon/gencode.grch37.v19/ -r test.fastq --seqBias --gcBias --posBias -p 12 --writeMappings=map.out --geneMap /data/reference/salmon/gencode.grch37.v19/geneMap.txt --libType U -o x",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/90
https://github.com/COMBINE-lab/salmon/issues/90:470,Performance,Load,Loading,470,"Running Salmon-0.7.2_linux_x86_64 with --writeMappings=map.out and it crashes with:. Exception : [boost::filesystem::create_directory: No such file or directory]. When I run without a file name, it outputs to stdout, but it also outputs messages such as:; ESC[1m[2016-09-14 11:06:07.550] [jointLog] [info] parsing read library format; ESC[00mESC[1m[2016-09-14 11:06:07.550] [jointLog] [info] There is 1 library.; ESC[00mESC[1m[2016-09-14 11:06:08.300] [jointLog] [info] Loading Quasi index; ESC[00mESC[1m[2016-09-14 11:06:08.300] [jointLog] [info] Loading 32-bit quasi index; So the output is not a clean .sam file. ~/programs/Salmon-0.7.2_linux_x86_64/bin/salmon quant -i /data/reference/salmon/gencode.grch37.v19/ -r test.fastq --seqBias --gcBias --posBias -p 12 --writeMappings=map.out --geneMap /data/reference/salmon/gencode.grch37.v19/geneMap.txt --libType U -o x",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/90
https://github.com/COMBINE-lab/salmon/issues/90:548,Performance,Load,Loading,548,"Running Salmon-0.7.2_linux_x86_64 with --writeMappings=map.out and it crashes with:. Exception : [boost::filesystem::create_directory: No such file or directory]. When I run without a file name, it outputs to stdout, but it also outputs messages such as:; ESC[1m[2016-09-14 11:06:07.550] [jointLog] [info] parsing read library format; ESC[00mESC[1m[2016-09-14 11:06:07.550] [jointLog] [info] There is 1 library.; ESC[00mESC[1m[2016-09-14 11:06:08.300] [jointLog] [info] Loading Quasi index; ESC[00mESC[1m[2016-09-14 11:06:08.300] [jointLog] [info] Loading 32-bit quasi index; So the output is not a clean .sam file. ~/programs/Salmon-0.7.2_linux_x86_64/bin/salmon quant -i /data/reference/salmon/gencode.grch37.v19/ -r test.fastq --seqBias --gcBias --posBias -p 12 --writeMappings=map.out --geneMap /data/reference/salmon/gencode.grch37.v19/geneMap.txt --libType U -o x",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/90
https://github.com/COMBINE-lab/salmon/issues/90:719,Testability,test,test,719,"Running Salmon-0.7.2_linux_x86_64 with --writeMappings=map.out and it crashes with:. Exception : [boost::filesystem::create_directory: No such file or directory]. When I run without a file name, it outputs to stdout, but it also outputs messages such as:; ESC[1m[2016-09-14 11:06:07.550] [jointLog] [info] parsing read library format; ESC[00mESC[1m[2016-09-14 11:06:07.550] [jointLog] [info] There is 1 library.; ESC[00mESC[1m[2016-09-14 11:06:08.300] [jointLog] [info] Loading Quasi index; ESC[00mESC[1m[2016-09-14 11:06:08.300] [jointLog] [info] Loading 32-bit quasi index; So the output is not a clean .sam file. ~/programs/Salmon-0.7.2_linux_x86_64/bin/salmon quant -i /data/reference/salmon/gencode.grch37.v19/ -r test.fastq --seqBias --gcBias --posBias -p 12 --writeMappings=map.out --geneMap /data/reference/salmon/gencode.grch37.v19/geneMap.txt --libType U -o x",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/90
https://github.com/COMBINE-lab/salmon/pull/92:157,Testability,test,tested,157,"Hi Rob,. I took a shot at adding a CONDA_BUILD flag to make it work with conda builds rather than editing the CMakeLists.txt with sed in the build script. I tested it and it seems to work, but it could use a review by someone who has used cmake before. It might be that editing with sed is a cleaner solution, getting the flags in the right place made the CMakeLists.txt file a little ugly. Totally happy to do either solution.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/92
https://github.com/COMBINE-lab/salmon/issues/93:373,Availability,avail,available,373,"Hi Salmon team. Are there plans afoot to support quantification of scRNA-seq data with unique molecular identifiers (UMIs)? UMIs are very commonly used in scRNA-seq data now, and correct quantification requires ""de-duplication"" of the reads so that each UMI is only counted once for expression quantification. Doing this is not entirely trivial, as a quick survey of tools available shows (e.g. [UMI-tools](https://github.com/CGATOxford/UMI-tools), [umitools](https://github.com/brwnj/umitools), [umis](https://github.com/vals/umis), [umi](https://github.com/aryeelab/umi/wiki)). . Nevertheless, it would be _very_ convenient for those Salmon fans amongst us dealing with scRNA-seq data to be able to process scRNA-seq data with UMIs directly with Salmon. Selfishly, this would be awesome for the Salmon integration with the scater package (now fully implemented). . Not to make a thing of it, but kallisto is now providing some support for UMI quantification (https://pachterlab.github.io/kallisto/singlecell.html) ;P. Best; Davis",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/93
https://github.com/COMBINE-lab/salmon/issues/93:804,Deployability,integrat,integration,804,"Hi Salmon team. Are there plans afoot to support quantification of scRNA-seq data with unique molecular identifiers (UMIs)? UMIs are very commonly used in scRNA-seq data now, and correct quantification requires ""de-duplication"" of the reads so that each UMI is only counted once for expression quantification. Doing this is not entirely trivial, as a quick survey of tools available shows (e.g. [UMI-tools](https://github.com/CGATOxford/UMI-tools), [umitools](https://github.com/brwnj/umitools), [umis](https://github.com/vals/umis), [umi](https://github.com/aryeelab/umi/wiki)). . Nevertheless, it would be _very_ convenient for those Salmon fans amongst us dealing with scRNA-seq data to be able to process scRNA-seq data with UMIs directly with Salmon. Selfishly, this would be awesome for the Salmon integration with the scater package (now fully implemented). . Not to make a thing of it, but kallisto is now providing some support for UMI quantification (https://pachterlab.github.io/kallisto/singlecell.html) ;P. Best; Davis",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/93
https://github.com/COMBINE-lab/salmon/issues/93:804,Integrability,integrat,integration,804,"Hi Salmon team. Are there plans afoot to support quantification of scRNA-seq data with unique molecular identifiers (UMIs)? UMIs are very commonly used in scRNA-seq data now, and correct quantification requires ""de-duplication"" of the reads so that each UMI is only counted once for expression quantification. Doing this is not entirely trivial, as a quick survey of tools available shows (e.g. [UMI-tools](https://github.com/CGATOxford/UMI-tools), [umitools](https://github.com/brwnj/umitools), [umis](https://github.com/vals/umis), [umi](https://github.com/aryeelab/umi/wiki)). . Nevertheless, it would be _very_ convenient for those Salmon fans amongst us dealing with scRNA-seq data to be able to process scRNA-seq data with UMIs directly with Salmon. Selfishly, this would be awesome for the Salmon integration with the scater package (now fully implemented). . Not to make a thing of it, but kallisto is now providing some support for UMI quantification (https://pachterlab.github.io/kallisto/singlecell.html) ;P. Best; Davis",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/93
https://github.com/COMBINE-lab/salmon/issues/95:1203,Integrability,message,messages,1203,"Currently the indexer has a --gencode flag to handle the composite fasta headers in GENCODE transcript fasta files and `split the transcript name at the first '|' character`. However, the alignment-based mode doesn't use an index, and the current behavior is to read the fasta headers from -t verbatim. So, if I run the STAR aligner with the standard workflow using GENCODE files as index, the Aligned.toTranscriptome.out.bam output would already be aligned to the transcriptome, with the RNAME fields set in the same way `salmon index --gencode`, for example:. `ST-J00106:110:H5NY5BBXX:3:2211:22495:7240 99 ENSMUST00000195335.1 799 60 76M = 945 222 CTCAGTAGGAAGATTATAACTAATACTCCCCCATCAAACAGTTTTAAGGACAGAAGAGAACAAAGCATGTAAAGTG <AFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJJJJJJJJJJJJJJJJFFJA<AFJJFFA NH:i:1 HI:i:1 RG:Z:160212_ST-J00106_0110.3`. As a result, Salmon won't quantify anything if I run Salmon in the Alignment-based mode with the official GENCODE transcripts.fa, for example, `salmon quant -l IU -a Aligned.toTranscriptome.out.bam -o $OUTPUT_DIR -t gencode.vM9.pc_transcripts.fa -g gencode.vM9.annotation.gtf` since the RNAME and the FASTA headers don't match, causing a large number of messages like `WARNING: Transcript ENSMUST00000082421.1|ENSMUSG00000064370.1|-|-|mt-Cytb-201|mt-Cytb|1144|CDS:1-1144| appears in the reference but did not appear in the BAM`. Similarly, the gene quantification mode won't work either, since the names in -t and -g will never match. While for the immediate need I can just trim the fasta headers from the GENCODE transctipts.fa using a simple script, it must be an oversight that the same functionality is provided in quasi-alignment mode only.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/95
https://github.com/COMBINE-lab/salmon/issues/95:1587,Usability,simpl,simple,1587,"Currently the indexer has a --gencode flag to handle the composite fasta headers in GENCODE transcript fasta files and `split the transcript name at the first '|' character`. However, the alignment-based mode doesn't use an index, and the current behavior is to read the fasta headers from -t verbatim. So, if I run the STAR aligner with the standard workflow using GENCODE files as index, the Aligned.toTranscriptome.out.bam output would already be aligned to the transcriptome, with the RNAME fields set in the same way `salmon index --gencode`, for example:. `ST-J00106:110:H5NY5BBXX:3:2211:22495:7240 99 ENSMUST00000195335.1 799 60 76M = 945 222 CTCAGTAGGAAGATTATAACTAATACTCCCCCATCAAACAGTTTTAAGGACAGAAGAGAACAAAGCATGTAAAGTG <AFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJJJJJJJJJJJJJJJJFFJA<AFJJFFA NH:i:1 HI:i:1 RG:Z:160212_ST-J00106_0110.3`. As a result, Salmon won't quantify anything if I run Salmon in the Alignment-based mode with the official GENCODE transcripts.fa, for example, `salmon quant -l IU -a Aligned.toTranscriptome.out.bam -o $OUTPUT_DIR -t gencode.vM9.pc_transcripts.fa -g gencode.vM9.annotation.gtf` since the RNAME and the FASTA headers don't match, causing a large number of messages like `WARNING: Transcript ENSMUST00000082421.1|ENSMUSG00000064370.1|-|-|mt-Cytb-201|mt-Cytb|1144|CDS:1-1144| appears in the reference but did not appear in the BAM`. Similarly, the gene quantification mode won't work either, since the names in -t and -g will never match. While for the immediate need I can just trim the fasta headers from the GENCODE transctipts.fa using a simple script, it must be an oversight that the same functionality is provided in quasi-alignment mode only.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/95
https://github.com/COMBINE-lab/salmon/issues/97:165,Energy Efficiency,schedul,scheduling,165,"I'm looking at using Salmon on metatranscriptomes (environmental de novo assemblies). Our assemblies are typically very large, i.e. many millions of sequences. When scheduling jobs on my university's cluster (LSF), I'm required to set a memory limit. When salmon exceeds this limit, the job is killed, and I must restart the process. Is there a recommendation for predicting how much memory salmon will use to index/quant based on the size of the transcriptome? Could it be possible to set a memory limit for salmon so that it doesn't attempt to call more than is allocated?. Thank you!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/97
https://github.com/COMBINE-lab/salmon/issues/97:564,Energy Efficiency,allocate,allocated,564,"I'm looking at using Salmon on metatranscriptomes (environmental de novo assemblies). Our assemblies are typically very large, i.e. many millions of sequences. When scheduling jobs on my university's cluster (LSF), I'm required to set a memory limit. When salmon exceeds this limit, the job is killed, and I must restart the process. Is there a recommendation for predicting how much memory salmon will use to index/quant based on the size of the transcriptome? Could it be possible to set a memory limit for salmon so that it doesn't attempt to call more than is allocated?. Thank you!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/97
https://github.com/COMBINE-lab/salmon/issues/97:364,Safety,predict,predicting,364,"I'm looking at using Salmon on metatranscriptomes (environmental de novo assemblies). Our assemblies are typically very large, i.e. many millions of sequences. When scheduling jobs on my university's cluster (LSF), I'm required to set a memory limit. When salmon exceeds this limit, the job is killed, and I must restart the process. Is there a recommendation for predicting how much memory salmon will use to index/quant based on the size of the transcriptome? Could it be possible to set a memory limit for salmon so that it doesn't attempt to call more than is allocated?. Thank you!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/97
https://github.com/COMBINE-lab/salmon/issues/98:44,Integrability,message,message,44,"Hi Robb,. I'm getting the following warning message in all my runs of Salmon (0.7.2). Always the same transcript for all the libraries. The transcript reported has, indeed, no gene associated in the genemap file but it appears in the ""quant.gene.sf"" output file. I've checked with a different dataset (different species, libraries and transcriptome reference) and there's always also one transcript reported. I'm feeding Salmon with the genemap in the 2-columns format. Do you have any clue about what could be happening?. Thanks!. ```; Computing gene-level abundance estimates; There were 25081 transcripts mapping to 11607 genes; Parsed 54000 expression linesWARNING: couldn't find transcript named [v3_99998_1_1]; returning transcript as it's own gene. done; Aggregating expressions to gene level . . . done; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/98
https://github.com/COMBINE-lab/salmon/issues/99:100,Availability,error,errors,100,"After cloning the develop branch and following the initial installation steps, cmake worked with no errors but make didn't. I'm working on a remote server. ```; cmake .. -DCMAKE_CXX_COMPILER=/data/apps/gcc/4.9.3/bin/c++ -DCMAKE_C_COMPILER=/data/apps/gcc/4.9.3/bin/gcc; make; ...; make[5]: Entering directory `/lustre/projects/staton/software/salmon/external/staden-io_lib/io_lib'; /bin/sh ../libtool --tag=CC --mode=compile /data/apps/gcc/4.9.3/bin/gcc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c -o libstaden_read_la-cram_io.lo `test -f 'cram_io.c' || echo './'`cram_io.c; libtool: compile: /data/apps/gcc/4.9.3/bin/gcc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: fatal error: lzma.h: No such file or directory; #include <lzma.h>; ^; compilation terminated.; make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; make[5]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib/io_lib'; make[4]: *** [all-recursive] Error 1; make[4]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib'; make[3]: *** [all] Error 2; make[3]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib'; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; make[2]: Leaving directory `/lustre/projects/staton/software/salmon/build'; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; make[1]: Leaving directory `/lustre/projects/staton/software/salmon/build'; make: *** [all] Error 2; ```. [make.log.txt](https://github.com/COMBINE-lab/salmon/files/554165/make.log.txt). From the salmon directory, I find lzma.h in two locations:; ./external/xz-5.2.2/src/liblzma/api/lzma.h; ./external/install/include/lzma.h",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/99
https://github.com/COMBINE-lab/salmon/issues/99:623,Availability,echo,echo,623,"After cloning the develop branch and following the initial installation steps, cmake worked with no errors but make didn't. I'm working on a remote server. ```; cmake .. -DCMAKE_CXX_COMPILER=/data/apps/gcc/4.9.3/bin/c++ -DCMAKE_C_COMPILER=/data/apps/gcc/4.9.3/bin/gcc; make; ...; make[5]: Entering directory `/lustre/projects/staton/software/salmon/external/staden-io_lib/io_lib'; /bin/sh ../libtool --tag=CC --mode=compile /data/apps/gcc/4.9.3/bin/gcc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c -o libstaden_read_la-cram_io.lo `test -f 'cram_io.c' || echo './'`cram_io.c; libtool: compile: /data/apps/gcc/4.9.3/bin/gcc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: fatal error: lzma.h: No such file or directory; #include <lzma.h>; ^; compilation terminated.; make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; make[5]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib/io_lib'; make[4]: *** [all-recursive] Error 1; make[4]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib'; make[3]: *** [all] Error 2; make[3]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib'; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; make[2]: Leaving directory `/lustre/projects/staton/software/salmon/build'; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; make[1]: Leaving directory `/lustre/projects/staton/software/salmon/build'; make: *** [all] Error 2; ```. [make.log.txt](https://github.com/COMBINE-lab/salmon/files/554165/make.log.txt). From the salmon directory, I find lzma.h in two locations:; ./external/xz-5.2.2/src/liblzma/api/lzma.h; ./external/install/include/lzma.h",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/99
https://github.com/COMBINE-lab/salmon/issues/99:870,Availability,error,error,870,"After cloning the develop branch and following the initial installation steps, cmake worked with no errors but make didn't. I'm working on a remote server. ```; cmake .. -DCMAKE_CXX_COMPILER=/data/apps/gcc/4.9.3/bin/c++ -DCMAKE_C_COMPILER=/data/apps/gcc/4.9.3/bin/gcc; make; ...; make[5]: Entering directory `/lustre/projects/staton/software/salmon/external/staden-io_lib/io_lib'; /bin/sh ../libtool --tag=CC --mode=compile /data/apps/gcc/4.9.3/bin/gcc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c -o libstaden_read_la-cram_io.lo `test -f 'cram_io.c' || echo './'`cram_io.c; libtool: compile: /data/apps/gcc/4.9.3/bin/gcc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: fatal error: lzma.h: No such file or directory; #include <lzma.h>; ^; compilation terminated.; make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; make[5]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib/io_lib'; make[4]: *** [all-recursive] Error 1; make[4]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib'; make[3]: *** [all] Error 2; make[3]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib'; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; make[2]: Leaving directory `/lustre/projects/staton/software/salmon/build'; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; make[1]: Leaving directory `/lustre/projects/staton/software/salmon/build'; make: *** [all] Error 2; ```. [make.log.txt](https://github.com/COMBINE-lab/salmon/files/554165/make.log.txt). From the salmon directory, I find lzma.h in two locations:; ./external/xz-5.2.2/src/liblzma/api/lzma.h; ./external/install/include/lzma.h",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/99
https://github.com/COMBINE-lab/salmon/issues/99:1003,Availability,Error,Error,1003,"After cloning the develop branch and following the initial installation steps, cmake worked with no errors but make didn't. I'm working on a remote server. ```; cmake .. -DCMAKE_CXX_COMPILER=/data/apps/gcc/4.9.3/bin/c++ -DCMAKE_C_COMPILER=/data/apps/gcc/4.9.3/bin/gcc; make; ...; make[5]: Entering directory `/lustre/projects/staton/software/salmon/external/staden-io_lib/io_lib'; /bin/sh ../libtool --tag=CC --mode=compile /data/apps/gcc/4.9.3/bin/gcc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c -o libstaden_read_la-cram_io.lo `test -f 'cram_io.c' || echo './'`cram_io.c; libtool: compile: /data/apps/gcc/4.9.3/bin/gcc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: fatal error: lzma.h: No such file or directory; #include <lzma.h>; ^; compilation terminated.; make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; make[5]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib/io_lib'; make[4]: *** [all-recursive] Error 1; make[4]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib'; make[3]: *** [all] Error 2; make[3]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib'; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; make[2]: Leaving directory `/lustre/projects/staton/software/salmon/build'; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; make[1]: Leaving directory `/lustre/projects/staton/software/salmon/build'; make: *** [all] Error 2; ```. [make.log.txt](https://github.com/COMBINE-lab/salmon/files/554165/make.log.txt). From the salmon directory, I find lzma.h in two locations:; ./external/xz-5.2.2/src/liblzma/api/lzma.h; ./external/install/include/lzma.h",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/99
https://github.com/COMBINE-lab/salmon/issues/99:1141,Availability,Error,Error,1141,"After cloning the develop branch and following the initial installation steps, cmake worked with no errors but make didn't. I'm working on a remote server. ```; cmake .. -DCMAKE_CXX_COMPILER=/data/apps/gcc/4.9.3/bin/c++ -DCMAKE_C_COMPILER=/data/apps/gcc/4.9.3/bin/gcc; make; ...; make[5]: Entering directory `/lustre/projects/staton/software/salmon/external/staden-io_lib/io_lib'; /bin/sh ../libtool --tag=CC --mode=compile /data/apps/gcc/4.9.3/bin/gcc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c -o libstaden_read_la-cram_io.lo `test -f 'cram_io.c' || echo './'`cram_io.c; libtool: compile: /data/apps/gcc/4.9.3/bin/gcc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: fatal error: lzma.h: No such file or directory; #include <lzma.h>; ^; compilation terminated.; make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; make[5]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib/io_lib'; make[4]: *** [all-recursive] Error 1; make[4]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib'; make[3]: *** [all] Error 2; make[3]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib'; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; make[2]: Leaving directory `/lustre/projects/staton/software/salmon/build'; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; make[1]: Leaving directory `/lustre/projects/staton/software/salmon/build'; make: *** [all] Error 2; ```. [make.log.txt](https://github.com/COMBINE-lab/salmon/files/554165/make.log.txt). From the salmon directory, I find lzma.h in two locations:; ./external/xz-5.2.2/src/liblzma/api/lzma.h; ./external/install/include/lzma.h",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/99
https://github.com/COMBINE-lab/salmon/issues/99:1262,Availability,Error,Error,1262,"After cloning the develop branch and following the initial installation steps, cmake worked with no errors but make didn't. I'm working on a remote server. ```; cmake .. -DCMAKE_CXX_COMPILER=/data/apps/gcc/4.9.3/bin/c++ -DCMAKE_C_COMPILER=/data/apps/gcc/4.9.3/bin/gcc; make; ...; make[5]: Entering directory `/lustre/projects/staton/software/salmon/external/staden-io_lib/io_lib'; /bin/sh ../libtool --tag=CC --mode=compile /data/apps/gcc/4.9.3/bin/gcc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c -o libstaden_read_la-cram_io.lo `test -f 'cram_io.c' || echo './'`cram_io.c; libtool: compile: /data/apps/gcc/4.9.3/bin/gcc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: fatal error: lzma.h: No such file or directory; #include <lzma.h>; ^; compilation terminated.; make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; make[5]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib/io_lib'; make[4]: *** [all-recursive] Error 1; make[4]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib'; make[3]: *** [all] Error 2; make[3]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib'; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; make[2]: Leaving directory `/lustre/projects/staton/software/salmon/build'; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; make[1]: Leaving directory `/lustre/projects/staton/software/salmon/build'; make: *** [all] Error 2; ```. [make.log.txt](https://github.com/COMBINE-lab/salmon/files/554165/make.log.txt). From the salmon directory, I find lzma.h in two locations:; ./external/xz-5.2.2/src/liblzma/api/lzma.h; ./external/install/include/lzma.h",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/99
https://github.com/COMBINE-lab/salmon/issues/99:1438,Availability,Error,Error,1438,"After cloning the develop branch and following the initial installation steps, cmake worked with no errors but make didn't. I'm working on a remote server. ```; cmake .. -DCMAKE_CXX_COMPILER=/data/apps/gcc/4.9.3/bin/c++ -DCMAKE_C_COMPILER=/data/apps/gcc/4.9.3/bin/gcc; make; ...; make[5]: Entering directory `/lustre/projects/staton/software/salmon/external/staden-io_lib/io_lib'; /bin/sh ../libtool --tag=CC --mode=compile /data/apps/gcc/4.9.3/bin/gcc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c -o libstaden_read_la-cram_io.lo `test -f 'cram_io.c' || echo './'`cram_io.c; libtool: compile: /data/apps/gcc/4.9.3/bin/gcc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: fatal error: lzma.h: No such file or directory; #include <lzma.h>; ^; compilation terminated.; make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; make[5]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib/io_lib'; make[4]: *** [all-recursive] Error 1; make[4]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib'; make[3]: *** [all] Error 2; make[3]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib'; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; make[2]: Leaving directory `/lustre/projects/staton/software/salmon/build'; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; make[1]: Leaving directory `/lustre/projects/staton/software/salmon/build'; make: *** [all] Error 2; ```. [make.log.txt](https://github.com/COMBINE-lab/salmon/files/554165/make.log.txt). From the salmon directory, I find lzma.h in two locations:; ./external/xz-5.2.2/src/liblzma/api/lzma.h; ./external/install/include/lzma.h",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/99
https://github.com/COMBINE-lab/salmon/issues/99:1569,Availability,Error,Error,1569,"After cloning the develop branch and following the initial installation steps, cmake worked with no errors but make didn't. I'm working on a remote server. ```; cmake .. -DCMAKE_CXX_COMPILER=/data/apps/gcc/4.9.3/bin/c++ -DCMAKE_C_COMPILER=/data/apps/gcc/4.9.3/bin/gcc; make; ...; make[5]: Entering directory `/lustre/projects/staton/software/salmon/external/staden-io_lib/io_lib'; /bin/sh ../libtool --tag=CC --mode=compile /data/apps/gcc/4.9.3/bin/gcc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c -o libstaden_read_la-cram_io.lo `test -f 'cram_io.c' || echo './'`cram_io.c; libtool: compile: /data/apps/gcc/4.9.3/bin/gcc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: fatal error: lzma.h: No such file or directory; #include <lzma.h>; ^; compilation terminated.; make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; make[5]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib/io_lib'; make[4]: *** [all-recursive] Error 1; make[4]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib'; make[3]: *** [all] Error 2; make[3]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib'; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; make[2]: Leaving directory `/lustre/projects/staton/software/salmon/build'; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; make[1]: Leaving directory `/lustre/projects/staton/software/salmon/build'; make: *** [all] Error 2; ```. [make.log.txt](https://github.com/COMBINE-lab/salmon/files/554165/make.log.txt). From the salmon directory, I find lzma.h in two locations:; ./external/xz-5.2.2/src/liblzma/api/lzma.h; ./external/install/include/lzma.h",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/99
https://github.com/COMBINE-lab/salmon/issues/99:1670,Availability,Error,Error,1670,"After cloning the develop branch and following the initial installation steps, cmake worked with no errors but make didn't. I'm working on a remote server. ```; cmake .. -DCMAKE_CXX_COMPILER=/data/apps/gcc/4.9.3/bin/c++ -DCMAKE_C_COMPILER=/data/apps/gcc/4.9.3/bin/gcc; make; ...; make[5]: Entering directory `/lustre/projects/staton/software/salmon/external/staden-io_lib/io_lib'; /bin/sh ../libtool --tag=CC --mode=compile /data/apps/gcc/4.9.3/bin/gcc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c -o libstaden_read_la-cram_io.lo `test -f 'cram_io.c' || echo './'`cram_io.c; libtool: compile: /data/apps/gcc/4.9.3/bin/gcc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: fatal error: lzma.h: No such file or directory; #include <lzma.h>; ^; compilation terminated.; make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; make[5]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib/io_lib'; make[4]: *** [all-recursive] Error 1; make[4]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib'; make[3]: *** [all] Error 2; make[3]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib'; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; make[2]: Leaving directory `/lustre/projects/staton/software/salmon/build'; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; make[1]: Leaving directory `/lustre/projects/staton/software/salmon/build'; make: *** [all] Error 2; ```. [make.log.txt](https://github.com/COMBINE-lab/salmon/files/554165/make.log.txt). From the salmon directory, I find lzma.h in two locations:; ./external/xz-5.2.2/src/liblzma/api/lzma.h; ./external/install/include/lzma.h",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/99
https://github.com/COMBINE-lab/salmon/issues/99:59,Deployability,install,installation,59,"After cloning the develop branch and following the initial installation steps, cmake worked with no errors but make didn't. I'm working on a remote server. ```; cmake .. -DCMAKE_CXX_COMPILER=/data/apps/gcc/4.9.3/bin/c++ -DCMAKE_C_COMPILER=/data/apps/gcc/4.9.3/bin/gcc; make; ...; make[5]: Entering directory `/lustre/projects/staton/software/salmon/external/staden-io_lib/io_lib'; /bin/sh ../libtool --tag=CC --mode=compile /data/apps/gcc/4.9.3/bin/gcc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c -o libstaden_read_la-cram_io.lo `test -f 'cram_io.c' || echo './'`cram_io.c; libtool: compile: /data/apps/gcc/4.9.3/bin/gcc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: fatal error: lzma.h: No such file or directory; #include <lzma.h>; ^; compilation terminated.; make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; make[5]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib/io_lib'; make[4]: *** [all-recursive] Error 1; make[4]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib'; make[3]: *** [all] Error 2; make[3]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib'; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; make[2]: Leaving directory `/lustre/projects/staton/software/salmon/build'; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; make[1]: Leaving directory `/lustre/projects/staton/software/salmon/build'; make: *** [all] Error 2; ```. [make.log.txt](https://github.com/COMBINE-lab/salmon/files/554165/make.log.txt). From the salmon directory, I find lzma.h in two locations:; ./external/xz-5.2.2/src/liblzma/api/lzma.h; ./external/install/include/lzma.h",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/99
https://github.com/COMBINE-lab/salmon/issues/99:1880,Deployability,install,install,1880,"After cloning the develop branch and following the initial installation steps, cmake worked with no errors but make didn't. I'm working on a remote server. ```; cmake .. -DCMAKE_CXX_COMPILER=/data/apps/gcc/4.9.3/bin/c++ -DCMAKE_C_COMPILER=/data/apps/gcc/4.9.3/bin/gcc; make; ...; make[5]: Entering directory `/lustre/projects/staton/software/salmon/external/staden-io_lib/io_lib'; /bin/sh ../libtool --tag=CC --mode=compile /data/apps/gcc/4.9.3/bin/gcc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c -o libstaden_read_la-cram_io.lo `test -f 'cram_io.c' || echo './'`cram_io.c; libtool: compile: /data/apps/gcc/4.9.3/bin/gcc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: fatal error: lzma.h: No such file or directory; #include <lzma.h>; ^; compilation terminated.; make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; make[5]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib/io_lib'; make[4]: *** [all-recursive] Error 1; make[4]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib'; make[3]: *** [all] Error 2; make[3]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib'; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; make[2]: Leaving directory `/lustre/projects/staton/software/salmon/build'; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; make[1]: Leaving directory `/lustre/projects/staton/software/salmon/build'; make: *** [all] Error 2; ```. [make.log.txt](https://github.com/COMBINE-lab/salmon/files/554165/make.log.txt). From the salmon directory, I find lzma.h in two locations:; ./external/xz-5.2.2/src/liblzma/api/lzma.h; ./external/install/include/lzma.h",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/99
https://github.com/COMBINE-lab/salmon/issues/99:600,Testability,test,test,600,"After cloning the develop branch and following the initial installation steps, cmake worked with no errors but make didn't. I'm working on a remote server. ```; cmake .. -DCMAKE_CXX_COMPILER=/data/apps/gcc/4.9.3/bin/c++ -DCMAKE_C_COMPILER=/data/apps/gcc/4.9.3/bin/gcc; make; ...; make[5]: Entering directory `/lustre/projects/staton/software/salmon/external/staden-io_lib/io_lib'; /bin/sh ../libtool --tag=CC --mode=compile /data/apps/gcc/4.9.3/bin/gcc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c -o libstaden_read_la-cram_io.lo `test -f 'cram_io.c' || echo './'`cram_io.c; libtool: compile: /data/apps/gcc/4.9.3/bin/gcc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: fatal error: lzma.h: No such file or directory; #include <lzma.h>; ^; compilation terminated.; make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; make[5]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib/io_lib'; make[4]: *** [all-recursive] Error 1; make[4]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib'; make[3]: *** [all] Error 2; make[3]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib'; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; make[2]: Leaving directory `/lustre/projects/staton/software/salmon/build'; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; make[1]: Leaving directory `/lustre/projects/staton/software/salmon/build'; make: *** [all] Error 2; ```. [make.log.txt](https://github.com/COMBINE-lab/salmon/files/554165/make.log.txt). From the salmon directory, I find lzma.h in two locations:; ./external/xz-5.2.2/src/liblzma/api/lzma.h; ./external/install/include/lzma.h",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/99
https://github.com/COMBINE-lab/salmon/issues/99:1690,Testability,log,log,1690,"After cloning the develop branch and following the initial installation steps, cmake worked with no errors but make didn't. I'm working on a remote server. ```; cmake .. -DCMAKE_CXX_COMPILER=/data/apps/gcc/4.9.3/bin/c++ -DCMAKE_C_COMPILER=/data/apps/gcc/4.9.3/bin/gcc; make; ...; make[5]: Entering directory `/lustre/projects/staton/software/salmon/external/staden-io_lib/io_lib'; /bin/sh ../libtool --tag=CC --mode=compile /data/apps/gcc/4.9.3/bin/gcc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c -o libstaden_read_la-cram_io.lo `test -f 'cram_io.c' || echo './'`cram_io.c; libtool: compile: /data/apps/gcc/4.9.3/bin/gcc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: fatal error: lzma.h: No such file or directory; #include <lzma.h>; ^; compilation terminated.; make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; make[5]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib/io_lib'; make[4]: *** [all-recursive] Error 1; make[4]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib'; make[3]: *** [all] Error 2; make[3]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib'; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; make[2]: Leaving directory `/lustre/projects/staton/software/salmon/build'; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; make[1]: Leaving directory `/lustre/projects/staton/software/salmon/build'; make: *** [all] Error 2; ```. [make.log.txt](https://github.com/COMBINE-lab/salmon/files/554165/make.log.txt). From the salmon directory, I find lzma.h in two locations:; ./external/xz-5.2.2/src/liblzma/api/lzma.h; ./external/install/include/lzma.h",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/99
https://github.com/COMBINE-lab/salmon/issues/99:1755,Testability,log,log,1755,"After cloning the develop branch and following the initial installation steps, cmake worked with no errors but make didn't. I'm working on a remote server. ```; cmake .. -DCMAKE_CXX_COMPILER=/data/apps/gcc/4.9.3/bin/c++ -DCMAKE_C_COMPILER=/data/apps/gcc/4.9.3/bin/gcc; make; ...; make[5]: Entering directory `/lustre/projects/staton/software/salmon/external/staden-io_lib/io_lib'; /bin/sh ../libtool --tag=CC --mode=compile /data/apps/gcc/4.9.3/bin/gcc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c -o libstaden_read_la-cram_io.lo `test -f 'cram_io.c' || echo './'`cram_io.c; libtool: compile: /data/apps/gcc/4.9.3/bin/gcc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: fatal error: lzma.h: No such file or directory; #include <lzma.h>; ^; compilation terminated.; make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; make[5]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib/io_lib'; make[4]: *** [all-recursive] Error 1; make[4]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib'; make[3]: *** [all] Error 2; make[3]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib'; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; make[2]: Leaving directory `/lustre/projects/staton/software/salmon/build'; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; make[1]: Leaving directory `/lustre/projects/staton/software/salmon/build'; make: *** [all] Error 2; ```. [make.log.txt](https://github.com/COMBINE-lab/salmon/files/554165/make.log.txt). From the salmon directory, I find lzma.h in two locations:; ./external/xz-5.2.2/src/liblzma/api/lzma.h; ./external/install/include/lzma.h",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/99
https://github.com/COMBINE-lab/salmon/issues/100:276,Availability,avail,available,276,"I've been using 0.7.1 without problems until today.; I'm trying to index the transcriptome (made with gffread) of human GRCh37 from archived Ensembl 60. The process has been running for hours, with no messages beyond this:. ```; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases ; contains some new features and minor bug fixes; please upgrade at your; earliest convenience.; ###; [2016-11-04 13:45:38.583] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers. ```. This is all there is in the index.log. `[2016-11-04 13:45:38.583] [jLog] [info] building index`. None of me previous indexes have taken so long, especially not in total silence. So I'm guessing it gets stuck somewhere, but where? Why?. I know there is a newer version, but getting our busy sysadmin to install things takes time and I didn;t see anything critical for my usage case listed in the release notes.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/100
https://github.com/COMBINE-lab/salmon/issues/100:318,Availability,avail,available,318,"I've been using 0.7.1 without problems until today.; I'm trying to index the transcriptome (made with gffread) of human GRCh37 from archived Ensembl 60. The process has been running for hours, with no messages beyond this:. ```; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases ; contains some new features and minor bug fixes; please upgrade at your; earliest convenience.; ###; [2016-11-04 13:45:38.583] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers. ```. This is all there is in the index.log. `[2016-11-04 13:45:38.583] [jLog] [info] building index`. None of me previous indexes have taken so long, especially not in total silence. So I'm guessing it gets stuck somewhere, but where? Why?. I know there is a newer version, but getting our busy sysadmin to install things takes time and I didn;t see anything critical for my usage case listed in the release notes.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/100
https://github.com/COMBINE-lab/salmon/issues/100:369,Deployability,release,releases,369,"I've been using 0.7.1 without problems until today.; I'm trying to index the transcriptome (made with gffread) of human GRCh37 from archived Ensembl 60. The process has been running for hours, with no messages beyond this:. ```; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases ; contains some new features and minor bug fixes; please upgrade at your; earliest convenience.; ###; [2016-11-04 13:45:38.583] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers. ```. This is all there is in the index.log. `[2016-11-04 13:45:38.583] [jLog] [info] building index`. None of me previous indexes have taken so long, especially not in total silence. So I'm guessing it gets stuck somewhere, but where? Why?. I know there is a newer version, but getting our busy sysadmin to install things takes time and I didn;t see anything critical for my usage case listed in the release notes.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/100
https://github.com/COMBINE-lab/salmon/issues/100:435,Deployability,upgrade,upgrade,435,"I've been using 0.7.1 without problems until today.; I'm trying to index the transcriptome (made with gffread) of human GRCh37 from archived Ensembl 60. The process has been running for hours, with no messages beyond this:. ```; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases ; contains some new features and minor bug fixes; please upgrade at your; earliest convenience.; ###; [2016-11-04 13:45:38.583] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers. ```. This is all there is in the index.log. `[2016-11-04 13:45:38.583] [jLog] [info] building index`. None of me previous indexes have taken so long, especially not in total silence. So I'm guessing it gets stuck somewhere, but where? Why?. I know there is a newer version, but getting our busy sysadmin to install things takes time and I didn;t see anything critical for my usage case listed in the release notes.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/100
https://github.com/COMBINE-lab/salmon/issues/100:892,Deployability,install,install,892,"I've been using 0.7.1 without problems until today.; I'm trying to index the transcriptome (made with gffread) of human GRCh37 from archived Ensembl 60. The process has been running for hours, with no messages beyond this:. ```; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases ; contains some new features and minor bug fixes; please upgrade at your; earliest convenience.; ###; [2016-11-04 13:45:38.583] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers. ```. This is all there is in the index.log. `[2016-11-04 13:45:38.583] [jLog] [info] building index`. None of me previous indexes have taken so long, especially not in total silence. So I'm guessing it gets stuck somewhere, but where? Why?. I know there is a newer version, but getting our busy sysadmin to install things takes time and I didn;t see anything critical for my usage case listed in the release notes.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/100
https://github.com/COMBINE-lab/salmon/issues/100:985,Deployability,release,release,985,"I've been using 0.7.1 without problems until today.; I'm trying to index the transcriptome (made with gffread) of human GRCh37 from archived Ensembl 60. The process has been running for hours, with no messages beyond this:. ```; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases ; contains some new features and minor bug fixes; please upgrade at your; earliest convenience.; ###; [2016-11-04 13:45:38.583] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers. ```. This is all there is in the index.log. `[2016-11-04 13:45:38.583] [jLog] [info] building index`. None of me previous indexes have taken so long, especially not in total silence. So I'm guessing it gets stuck somewhere, but where? Why?. I know there is a newer version, but getting our busy sysadmin to install things takes time and I didn;t see anything critical for my usage case listed in the release notes.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/100
https://github.com/COMBINE-lab/salmon/issues/100:201,Integrability,message,messages,201,"I've been using 0.7.1 without problems until today.; I'm trying to index the transcriptome (made with gffread) of human GRCh37 from archived Ensembl 60. The process has been running for hours, with no messages beyond this:. ```; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases ; contains some new features and minor bug fixes; please upgrade at your; earliest convenience.; ###; [2016-11-04 13:45:38.583] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers. ```. This is all there is in the index.log. `[2016-11-04 13:45:38.583] [jLog] [info] building index`. None of me previous indexes have taken so long, especially not in total silence. So I'm guessing it gets stuck somewhere, but where? Why?. I know there is a newer version, but getting our busy sysadmin to install things takes time and I didn;t see anything critical for my usage case listed in the release notes.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/100
https://github.com/COMBINE-lab/salmon/issues/100:624,Testability,log,log,624,"I've been using 0.7.1 without problems until today.; I'm trying to index the transcriptome (made with gffread) of human GRCh37 from archived Ensembl 60. The process has been running for hours, with no messages beyond this:. ```; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases ; contains some new features and minor bug fixes; please upgrade at your; earliest convenience.; ###; [2016-11-04 13:45:38.583] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers. ```. This is all there is in the index.log. `[2016-11-04 13:45:38.583] [jLog] [info] building index`. None of me previous indexes have taken so long, especially not in total silence. So I'm guessing it gets stuck somewhere, but where? Why?. I know there is a newer version, but getting our busy sysadmin to install things takes time and I didn;t see anything critical for my usage case listed in the release notes.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/100
https://github.com/COMBINE-lab/salmon/issues/101:381,Availability,error,error,381,"This is not exactly a bug, but a comment and a question regarding how Salmon uses the positioning data in fastq files. We had a series a RNASeq samples where the majority of the reads were listed at 0:0 in the fastq file. We think this is some obscure issue with one of the trimming/demultiplexing pipelines. No one noticed, as this data is not generally used, but it did throw an error with rsem. Luckily, this error had been previously [reported](https://groups.google.com/forum/#!topic/rsem-users/qXDCpSbEn6Q). Notably, Salmon using quasi mapping was fine. It was only when I tried again using STAR aligned bam files that I noticed that only those reads not listed at 0:0 were used by Salmon (STAR does not seem to care one way or the other). Obviously, badly formated fastq files do not constitute a bug and we are working on fixing them, but we were curious why the positioning data was being used in alignment mode but not quasi mode. Moreover, why is it being used at all? Is it used to weed out potential artifacts?. Many thanks and happy to share an example file if your are interested.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/101
https://github.com/COMBINE-lab/salmon/issues/101:412,Availability,error,error,412,"This is not exactly a bug, but a comment and a question regarding how Salmon uses the positioning data in fastq files. We had a series a RNASeq samples where the majority of the reads were listed at 0:0 in the fastq file. We think this is some obscure issue with one of the trimming/demultiplexing pipelines. No one noticed, as this data is not generally used, but it did throw an error with rsem. Luckily, this error had been previously [reported](https://groups.google.com/forum/#!topic/rsem-users/qXDCpSbEn6Q). Notably, Salmon using quasi mapping was fine. It was only when I tried again using STAR aligned bam files that I noticed that only those reads not listed at 0:0 were used by Salmon (STAR does not seem to care one way or the other). Obviously, badly formated fastq files do not constitute a bug and we are working on fixing them, but we were curious why the positioning data was being used in alignment mode but not quasi mode. Moreover, why is it being used at all? Is it used to weed out potential artifacts?. Many thanks and happy to share an example file if your are interested.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/101
https://github.com/COMBINE-lab/salmon/issues/101:298,Deployability,pipeline,pipelines,298,"This is not exactly a bug, but a comment and a question regarding how Salmon uses the positioning data in fastq files. We had a series a RNASeq samples where the majority of the reads were listed at 0:0 in the fastq file. We think this is some obscure issue with one of the trimming/demultiplexing pipelines. No one noticed, as this data is not generally used, but it did throw an error with rsem. Luckily, this error had been previously [reported](https://groups.google.com/forum/#!topic/rsem-users/qXDCpSbEn6Q). Notably, Salmon using quasi mapping was fine. It was only when I tried again using STAR aligned bam files that I noticed that only those reads not listed at 0:0 were used by Salmon (STAR does not seem to care one way or the other). Obviously, badly formated fastq files do not constitute a bug and we are working on fixing them, but we were curious why the positioning data was being used in alignment mode but not quasi mode. Moreover, why is it being used at all? Is it used to weed out potential artifacts?. Many thanks and happy to share an example file if your are interested.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/101
https://github.com/COMBINE-lab/salmon/issues/102:15,Testability,test,test,15,"I am trying to test salmon ver 0.7.2 using commandline:. salmon index -t test-data/transcripts.fasta -i output --type quasi -k 31 --threads 4 --sasamp 1; salmon quant -l IU -index output -1 test-data/reads_1.fastq -2 test-data/reads_2.fastq -o output_quant. the .sf file is not reproducible, any clue???",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/102
https://github.com/COMBINE-lab/salmon/issues/102:73,Testability,test,test-data,73,"I am trying to test salmon ver 0.7.2 using commandline:. salmon index -t test-data/transcripts.fasta -i output --type quasi -k 31 --threads 4 --sasamp 1; salmon quant -l IU -index output -1 test-data/reads_1.fastq -2 test-data/reads_2.fastq -o output_quant. the .sf file is not reproducible, any clue???",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/102
https://github.com/COMBINE-lab/salmon/issues/102:190,Testability,test,test-data,190,"I am trying to test salmon ver 0.7.2 using commandline:. salmon index -t test-data/transcripts.fasta -i output --type quasi -k 31 --threads 4 --sasamp 1; salmon quant -l IU -index output -1 test-data/reads_1.fastq -2 test-data/reads_2.fastq -o output_quant. the .sf file is not reproducible, any clue???",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/102
https://github.com/COMBINE-lab/salmon/issues/102:217,Testability,test,test-data,217,"I am trying to test salmon ver 0.7.2 using commandline:. salmon index -t test-data/transcripts.fasta -i output --type quasi -k 31 --threads 4 --sasamp 1; salmon quant -l IU -index output -1 test-data/reads_1.fastq -2 test-data/reads_2.fastq -o output_quant. the .sf file is not reproducible, any clue???",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/102
https://github.com/COMBINE-lab/salmon/issues/103:32,Availability,error,error,32,"I'm getting a memory allocation error when I try to run the salmon binary after updating my OS. Here is the error:. salmon(65515,0x7fffdb32f3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffdb325000",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/103
https://github.com/COMBINE-lab/salmon/issues/103:108,Availability,error,error,108,"I'm getting a memory allocation error when I try to run the salmon binary after updating my OS. Here is the error:. salmon(65515,0x7fffdb32f3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffdb325000",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/103
https://github.com/COMBINE-lab/salmon/issues/104:731,Availability,error,error,731,"The documentation states. >If your alignments for the sample you want to quantify appear in multiple .bam/.sam files, then you can simply provide the Salmon -a parameter with a (space-separated) list of these files. But I somehow can't get that to work. I have two bam files, each of them with (different) STAR alignments to the same reference. When I pass either one of them, salmon works just fine, e.g. with the following commands:. ```; salmon quant -t transcripts.fasta -l IU -p 2 -o quantitation/quant.sf -a run1/Aligned.toTranscriptome.out.bam; # or; salmon quant -t transcripts.fasta -l IU -p 2 -o quantitation/quant.sf -a run2/Aligned.toTranscriptome.out.bam; ```; But when I try to pass both of them, I get the following error:. ```; salmon quant -t transcripts.fasta -l IU -p 2 -o quantitation/quant.sf) -a run1/Aligned.toTranscriptome.out.bam run2/Aligned.toTranscriptome.out.bam. Version Info: This is the most recent version of Salmon.; # salmon (alignment-based) v0.7.2; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { transcripts.fasta }; # [ libType ] => { IU }; # [ threads ] => { 2 }; # [ output ] => { sample1/quantitation }; # [ alignments ] => { run1/Aligned.toTranscriptome.out.bam run2/Aligned.toTranscriptome.out.bam }; Library format { type:paired end, relative orientation:inward, strandedness:unstranded }; Logs will be written to quantitation/logs; numQuantThreads = 2; parseThreads = 2; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""run1/Aligned.toTranscriptome.out.bam"", fasta = ""transcripts.fasta"" . . .replaced 0 non-ACGT nucleotides with random nucleotides; done. processed 0 reads in current roundSegmentation fault (core dumped); ```. The `Checking that provided alignment files have consistent headers . . . done` line seems to indicate that both bam files were recognized and that the headers matched. . Any hints on what might be going on?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104
https://github.com/COMBINE-lab/salmon/issues/104:1725,Availability,fault,fault,1725,"The documentation states. >If your alignments for the sample you want to quantify appear in multiple .bam/.sam files, then you can simply provide the Salmon -a parameter with a (space-separated) list of these files. But I somehow can't get that to work. I have two bam files, each of them with (different) STAR alignments to the same reference. When I pass either one of them, salmon works just fine, e.g. with the following commands:. ```; salmon quant -t transcripts.fasta -l IU -p 2 -o quantitation/quant.sf -a run1/Aligned.toTranscriptome.out.bam; # or; salmon quant -t transcripts.fasta -l IU -p 2 -o quantitation/quant.sf -a run2/Aligned.toTranscriptome.out.bam; ```; But when I try to pass both of them, I get the following error:. ```; salmon quant -t transcripts.fasta -l IU -p 2 -o quantitation/quant.sf) -a run1/Aligned.toTranscriptome.out.bam run2/Aligned.toTranscriptome.out.bam. Version Info: This is the most recent version of Salmon.; # salmon (alignment-based) v0.7.2; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { transcripts.fasta }; # [ libType ] => { IU }; # [ threads ] => { 2 }; # [ output ] => { sample1/quantitation }; # [ alignments ] => { run1/Aligned.toTranscriptome.out.bam run2/Aligned.toTranscriptome.out.bam }; Library format { type:paired end, relative orientation:inward, strandedness:unstranded }; Logs will be written to quantitation/logs; numQuantThreads = 2; parseThreads = 2; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""run1/Aligned.toTranscriptome.out.bam"", fasta = ""transcripts.fasta"" . . .replaced 0 non-ACGT nucleotides with random nucleotides; done. processed 0 reads in current roundSegmentation fault (core dumped); ```. The `Checking that provided alignment files have consistent headers . . . done` line seems to indicate that both bam files were recognized and that the headers matched. . Any hints on what might be going on?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104
https://github.com/COMBINE-lab/salmon/issues/104:1355,Testability,Log,Logs,1355,"The documentation states. >If your alignments for the sample you want to quantify appear in multiple .bam/.sam files, then you can simply provide the Salmon -a parameter with a (space-separated) list of these files. But I somehow can't get that to work. I have two bam files, each of them with (different) STAR alignments to the same reference. When I pass either one of them, salmon works just fine, e.g. with the following commands:. ```; salmon quant -t transcripts.fasta -l IU -p 2 -o quantitation/quant.sf -a run1/Aligned.toTranscriptome.out.bam; # or; salmon quant -t transcripts.fasta -l IU -p 2 -o quantitation/quant.sf -a run2/Aligned.toTranscriptome.out.bam; ```; But when I try to pass both of them, I get the following error:. ```; salmon quant -t transcripts.fasta -l IU -p 2 -o quantitation/quant.sf) -a run1/Aligned.toTranscriptome.out.bam run2/Aligned.toTranscriptome.out.bam. Version Info: This is the most recent version of Salmon.; # salmon (alignment-based) v0.7.2; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { transcripts.fasta }; # [ libType ] => { IU }; # [ threads ] => { 2 }; # [ output ] => { sample1/quantitation }; # [ alignments ] => { run1/Aligned.toTranscriptome.out.bam run2/Aligned.toTranscriptome.out.bam }; Library format { type:paired end, relative orientation:inward, strandedness:unstranded }; Logs will be written to quantitation/logs; numQuantThreads = 2; parseThreads = 2; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""run1/Aligned.toTranscriptome.out.bam"", fasta = ""transcripts.fasta"" . . .replaced 0 non-ACGT nucleotides with random nucleotides; done. processed 0 reads in current roundSegmentation fault (core dumped); ```. The `Checking that provided alignment files have consistent headers . . . done` line seems to indicate that both bam files were recognized and that the headers matched. . Any hints on what might be going on?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104
https://github.com/COMBINE-lab/salmon/issues/104:1392,Testability,log,logs,1392,"The documentation states. >If your alignments for the sample you want to quantify appear in multiple .bam/.sam files, then you can simply provide the Salmon -a parameter with a (space-separated) list of these files. But I somehow can't get that to work. I have two bam files, each of them with (different) STAR alignments to the same reference. When I pass either one of them, salmon works just fine, e.g. with the following commands:. ```; salmon quant -t transcripts.fasta -l IU -p 2 -o quantitation/quant.sf -a run1/Aligned.toTranscriptome.out.bam; # or; salmon quant -t transcripts.fasta -l IU -p 2 -o quantitation/quant.sf -a run2/Aligned.toTranscriptome.out.bam; ```; But when I try to pass both of them, I get the following error:. ```; salmon quant -t transcripts.fasta -l IU -p 2 -o quantitation/quant.sf) -a run1/Aligned.toTranscriptome.out.bam run2/Aligned.toTranscriptome.out.bam. Version Info: This is the most recent version of Salmon.; # salmon (alignment-based) v0.7.2; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { transcripts.fasta }; # [ libType ] => { IU }; # [ threads ] => { 2 }; # [ output ] => { sample1/quantitation }; # [ alignments ] => { run1/Aligned.toTranscriptome.out.bam run2/Aligned.toTranscriptome.out.bam }; Library format { type:paired end, relative orientation:inward, strandedness:unstranded }; Logs will be written to quantitation/logs; numQuantThreads = 2; parseThreads = 2; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""run1/Aligned.toTranscriptome.out.bam"", fasta = ""transcripts.fasta"" . . .replaced 0 non-ACGT nucleotides with random nucleotides; done. processed 0 reads in current roundSegmentation fault (core dumped); ```. The `Checking that provided alignment files have consistent headers . . . done` line seems to indicate that both bam files were recognized and that the headers matched. . Any hints on what might be going on?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104
https://github.com/COMBINE-lab/salmon/issues/104:131,Usability,simpl,simply,131,"The documentation states. >If your alignments for the sample you want to quantify appear in multiple .bam/.sam files, then you can simply provide the Salmon -a parameter with a (space-separated) list of these files. But I somehow can't get that to work. I have two bam files, each of them with (different) STAR alignments to the same reference. When I pass either one of them, salmon works just fine, e.g. with the following commands:. ```; salmon quant -t transcripts.fasta -l IU -p 2 -o quantitation/quant.sf -a run1/Aligned.toTranscriptome.out.bam; # or; salmon quant -t transcripts.fasta -l IU -p 2 -o quantitation/quant.sf -a run2/Aligned.toTranscriptome.out.bam; ```; But when I try to pass both of them, I get the following error:. ```; salmon quant -t transcripts.fasta -l IU -p 2 -o quantitation/quant.sf) -a run1/Aligned.toTranscriptome.out.bam run2/Aligned.toTranscriptome.out.bam. Version Info: This is the most recent version of Salmon.; # salmon (alignment-based) v0.7.2; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { transcripts.fasta }; # [ libType ] => { IU }; # [ threads ] => { 2 }; # [ output ] => { sample1/quantitation }; # [ alignments ] => { run1/Aligned.toTranscriptome.out.bam run2/Aligned.toTranscriptome.out.bam }; Library format { type:paired end, relative orientation:inward, strandedness:unstranded }; Logs will be written to quantitation/logs; numQuantThreads = 2; parseThreads = 2; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""run1/Aligned.toTranscriptome.out.bam"", fasta = ""transcripts.fasta"" . . .replaced 0 non-ACGT nucleotides with random nucleotides; done. processed 0 reads in current roundSegmentation fault (core dumped); ```. The `Checking that provided alignment files have consistent headers . . . done` line seems to indicate that both bam files were recognized and that the headers matched. . Any hints on what might be going on?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104
https://github.com/COMBINE-lab/salmon/issues/105:299,Availability,error,error,299,"I ran the following command: . ```; salmon index -t metagG.ffn -i transcript_index --type quasi -k 31; ```; to a symlink to a file (metaG.ffn) that didn't actually exist and salmon was stuck on ; ```; [Step 1 of 4] : counting k-mers; ```; for an hour instead of spitting out a ""file does not exist"" error.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/105
https://github.com/COMBINE-lab/salmon/issues/106:95,Security,firewall,firewalls,95,Hi . Is there any way to suppress the version checking during start-up phase?; As we have here firewalls with blocks the connection. Kind regards,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/106
https://github.com/COMBINE-lab/salmon/issues/107:779,Deployability,pipeline,pipeline,779,"We have a partly assembled genome with some almost identical gene modes which can be either allele or paralogs. Usually there are only a few nuclear tide differences between them. We expected Salmon return similar expression levels for these similar genes. However, it came out one gene had normal counts(in my case it was roughly 12,000 mapping reads) and another gene got zero in mapping read counts. I guess Salmon re-assigned read counts between highly similarly genes based on estimated mapping quality. In addition, the same gene model would get significantly different counts across runs due to the re-assignment, which made thing worse. I also tested RSEM and found the similar problem. I noticed the RSEM set the column #5 (mapping quality) in BAM from upstream mapping pipeline which might be reason for this issue. The third software I tried is eXpress which assigns mapping counts evenly between similar genes. . My suggestion is to allow users to switch off the re-assignment between similar genes.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/107
https://github.com/COMBINE-lab/salmon/issues/107:652,Testability,test,tested,652,"We have a partly assembled genome with some almost identical gene modes which can be either allele or paralogs. Usually there are only a few nuclear tide differences between them. We expected Salmon return similar expression levels for these similar genes. However, it came out one gene had normal counts(in my case it was roughly 12,000 mapping reads) and another gene got zero in mapping read counts. I guess Salmon re-assigned read counts between highly similarly genes based on estimated mapping quality. In addition, the same gene model would get significantly different counts across runs due to the re-assignment, which made thing worse. I also tested RSEM and found the similar problem. I noticed the RSEM set the column #5 (mapping quality) in BAM from upstream mapping pipeline which might be reason for this issue. The third software I tried is eXpress which assigns mapping counts evenly between similar genes. . My suggestion is to allow users to switch off the re-assignment between similar genes.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/107
https://github.com/COMBINE-lab/salmon/issues/109:965,Testability,test,testing,965,"Hi all,. I just wanted to provide this space to start a discussion and get feedback about what people believe to be the most sensible _default_ settings for Salmon (in different modes). We're happy to discuss any suggestions, but can start with some specific questions. Here is the most basic. Right now, Salmon has an ""opt-in"" philosophy. That is, a default run starts with the most basic features, and users opt-in to anything that has non-trivial cost (e.g. gibbs sampling, bias correction, and even things that have close to trivial cost but may not always be useful like dumping the equivalence classes to disk). Perhaps some of these defaults should be re-considered, or perhaps this philosophy makes sense as long as the ""opt-in"" behavior is made clear? It's worth noting that one current benefit of this ""opt-in"" mentality is that defaults are more _consistent_ among data-types. For example, GC-bias modeling for single-end libraries is still a feature in testing (on the develop branch), and so could not reasonably be made default at the current time.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/109
https://github.com/COMBINE-lab/salmon/issues/109:75,Usability,feedback,feedback,75,"Hi all,. I just wanted to provide this space to start a discussion and get feedback about what people believe to be the most sensible _default_ settings for Salmon (in different modes). We're happy to discuss any suggestions, but can start with some specific questions. Here is the most basic. Right now, Salmon has an ""opt-in"" philosophy. That is, a default run starts with the most basic features, and users opt-in to anything that has non-trivial cost (e.g. gibbs sampling, bias correction, and even things that have close to trivial cost but may not always be useful like dumping the equivalence classes to disk). Perhaps some of these defaults should be re-considered, or perhaps this philosophy makes sense as long as the ""opt-in"" behavior is made clear? It's worth noting that one current benefit of this ""opt-in"" mentality is that defaults are more _consistent_ among data-types. For example, GC-bias modeling for single-end libraries is still a feature in testing (on the develop branch), and so could not reasonably be made default at the current time.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/109
https://github.com/COMBINE-lab/salmon/issues/109:754,Usability,clear,clear,754,"Hi all,. I just wanted to provide this space to start a discussion and get feedback about what people believe to be the most sensible _default_ settings for Salmon (in different modes). We're happy to discuss any suggestions, but can start with some specific questions. Here is the most basic. Right now, Salmon has an ""opt-in"" philosophy. That is, a default run starts with the most basic features, and users opt-in to anything that has non-trivial cost (e.g. gibbs sampling, bias correction, and even things that have close to trivial cost but may not always be useful like dumping the equivalence classes to disk). Perhaps some of these defaults should be re-considered, or perhaps this philosophy makes sense as long as the ""opt-in"" behavior is made clear? It's worth noting that one current benefit of this ""opt-in"" mentality is that defaults are more _consistent_ among data-types. For example, GC-bias modeling for single-end libraries is still a feature in testing (on the develop branch), and so could not reasonably be made default at the current time.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/109
https://github.com/COMBINE-lab/salmon/issues/111:1483,Performance,Load,Loading,1483, Info: This is the most recent **development version** of Salmon.; ### salmon (mapping-based) v0.7.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /home/ryan/references/hg38/Salmon_index_hg38.analysisSet_knownGene }; ### [ unmatedReads ] => { fastq_files/SRR2454059.fq.gz }; ### [ threads ] => { 8 }; ### [ libType ] => { ISF }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ useVBOpt ] => { }; ### [ dumpEq ] => { }; ### [ dumpEqWeights ] => { }; ### [ geneMap ] => { /home/ryan/references/hg38/Salmon_index_hg38.analysisSet_knownGene/genemap.txt }; ### [ output ] => { salmon_quant/hg38.analysisSet_knownGene/SRR2454059 }; ### [ auxDir ] => { aux_info }; ### [ numGibbsSamples ] => { 100 }; Logs will be written to salmon_quant/hg38.analysisSet_knownGene/SRR2454059/logs; [2016-12-13 12:44:39.271] [jointLog] [info] parsing read library format; [2016-12-13 12:44:39.271] [jointLog] [info] There is 1 library.; [2016-12-13 12:44:39.836] [jointLog] [info] Loading Quasi index; [2016-12-13 12:44:39.836] [jointLog] [info] Loading 32-bit quasi index; [2016-12-13 12:44:39.836] [stderrLog] [info] Loading Suffix Array ; [2016-12-13 12:44:43.439] [stderrLog] [info] Loading Transcript Info ; [2016-12-13 12:44:44.355] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-13 12:44:44.613] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-13 12:44:44.629] [stderrLog] [info] Computing transcript lengths; [2016-12-13 12:44:44.629] [stderrLog] [info] Waiting to finish loading hash; [2016-12-13 12:44:44.629] [stderrLog] [info] Done loading index; [2016-12-13 12:44:44.629] [jointLog] [info] done; [2016-12-13 12:44:44.629] [jointLog] [info] Index contained 182608 targets; [2016-12-13 12:44:49.583] [jointLog] [warning] Fragment GC bias correction is currently *experimental* in ; single-end libraries. Please use this option with caution. processed 19000000 fragments; hits: 65897660; hits per frag: 3.46963. [2016-12-13 12:46:51.776] [joint,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111
https://github.com/COMBINE-lab/salmon/issues/111:1548,Performance,Load,Loading,1548,# salmon (mapping-based) v0.7.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /home/ryan/references/hg38/Salmon_index_hg38.analysisSet_knownGene }; ### [ unmatedReads ] => { fastq_files/SRR2454059.fq.gz }; ### [ threads ] => { 8 }; ### [ libType ] => { ISF }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ useVBOpt ] => { }; ### [ dumpEq ] => { }; ### [ dumpEqWeights ] => { }; ### [ geneMap ] => { /home/ryan/references/hg38/Salmon_index_hg38.analysisSet_knownGene/genemap.txt }; ### [ output ] => { salmon_quant/hg38.analysisSet_knownGene/SRR2454059 }; ### [ auxDir ] => { aux_info }; ### [ numGibbsSamples ] => { 100 }; Logs will be written to salmon_quant/hg38.analysisSet_knownGene/SRR2454059/logs; [2016-12-13 12:44:39.271] [jointLog] [info] parsing read library format; [2016-12-13 12:44:39.271] [jointLog] [info] There is 1 library.; [2016-12-13 12:44:39.836] [jointLog] [info] Loading Quasi index; [2016-12-13 12:44:39.836] [jointLog] [info] Loading 32-bit quasi index; [2016-12-13 12:44:39.836] [stderrLog] [info] Loading Suffix Array ; [2016-12-13 12:44:43.439] [stderrLog] [info] Loading Transcript Info ; [2016-12-13 12:44:44.355] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-13 12:44:44.613] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-13 12:44:44.629] [stderrLog] [info] Computing transcript lengths; [2016-12-13 12:44:44.629] [stderrLog] [info] Waiting to finish loading hash; [2016-12-13 12:44:44.629] [stderrLog] [info] Done loading index; [2016-12-13 12:44:44.629] [jointLog] [info] done; [2016-12-13 12:44:44.629] [jointLog] [info] Index contained 182608 targets; [2016-12-13 12:44:49.583] [jointLog] [warning] Fragment GC bias correction is currently *experimental* in ; single-end libraries. Please use this option with caution. processed 19000000 fragments; hits: 65897660; hits per frag: 3.46963. [2016-12-13 12:46:51.776] [jointLog] [info] Computed 137534 rich equivalence classes for further pro,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111
https://github.com/COMBINE-lab/salmon/issues/111:1621,Performance,Load,Loading,1621,mand ] => quant ; ### [ index ] => { /home/ryan/references/hg38/Salmon_index_hg38.analysisSet_knownGene }; ### [ unmatedReads ] => { fastq_files/SRR2454059.fq.gz }; ### [ threads ] => { 8 }; ### [ libType ] => { ISF }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ useVBOpt ] => { }; ### [ dumpEq ] => { }; ### [ dumpEqWeights ] => { }; ### [ geneMap ] => { /home/ryan/references/hg38/Salmon_index_hg38.analysisSet_knownGene/genemap.txt }; ### [ output ] => { salmon_quant/hg38.analysisSet_knownGene/SRR2454059 }; ### [ auxDir ] => { aux_info }; ### [ numGibbsSamples ] => { 100 }; Logs will be written to salmon_quant/hg38.analysisSet_knownGene/SRR2454059/logs; [2016-12-13 12:44:39.271] [jointLog] [info] parsing read library format; [2016-12-13 12:44:39.271] [jointLog] [info] There is 1 library.; [2016-12-13 12:44:39.836] [jointLog] [info] Loading Quasi index; [2016-12-13 12:44:39.836] [jointLog] [info] Loading 32-bit quasi index; [2016-12-13 12:44:39.836] [stderrLog] [info] Loading Suffix Array ; [2016-12-13 12:44:43.439] [stderrLog] [info] Loading Transcript Info ; [2016-12-13 12:44:44.355] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-13 12:44:44.613] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-13 12:44:44.629] [stderrLog] [info] Computing transcript lengths; [2016-12-13 12:44:44.629] [stderrLog] [info] Waiting to finish loading hash; [2016-12-13 12:44:44.629] [stderrLog] [info] Done loading index; [2016-12-13 12:44:44.629] [jointLog] [info] done; [2016-12-13 12:44:44.629] [jointLog] [info] Index contained 182608 targets; [2016-12-13 12:44:49.583] [jointLog] [warning] Fragment GC bias correction is currently *experimental* in ; single-end libraries. Please use this option with caution. processed 19000000 fragments; hits: 65897660; hits per frag: 3.46963. [2016-12-13 12:46:51.776] [jointLog] [info] Computed 137534 rich equivalence classes for further processin; g; [2016-12-13 12:46:51.776] [jointLog] [info] Counted 1626596,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111
https://github.com/COMBINE-lab/salmon/issues/111:1689,Performance,Load,Loading,1689,n_index_hg38.analysisSet_knownGene }; ### [ unmatedReads ] => { fastq_files/SRR2454059.fq.gz }; ### [ threads ] => { 8 }; ### [ libType ] => { ISF }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ useVBOpt ] => { }; ### [ dumpEq ] => { }; ### [ dumpEqWeights ] => { }; ### [ geneMap ] => { /home/ryan/references/hg38/Salmon_index_hg38.analysisSet_knownGene/genemap.txt }; ### [ output ] => { salmon_quant/hg38.analysisSet_knownGene/SRR2454059 }; ### [ auxDir ] => { aux_info }; ### [ numGibbsSamples ] => { 100 }; Logs will be written to salmon_quant/hg38.analysisSet_knownGene/SRR2454059/logs; [2016-12-13 12:44:39.271] [jointLog] [info] parsing read library format; [2016-12-13 12:44:39.271] [jointLog] [info] There is 1 library.; [2016-12-13 12:44:39.836] [jointLog] [info] Loading Quasi index; [2016-12-13 12:44:39.836] [jointLog] [info] Loading 32-bit quasi index; [2016-12-13 12:44:39.836] [stderrLog] [info] Loading Suffix Array ; [2016-12-13 12:44:43.439] [stderrLog] [info] Loading Transcript Info ; [2016-12-13 12:44:44.355] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-13 12:44:44.613] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-13 12:44:44.629] [stderrLog] [info] Computing transcript lengths; [2016-12-13 12:44:44.629] [stderrLog] [info] Waiting to finish loading hash; [2016-12-13 12:44:44.629] [stderrLog] [info] Done loading index; [2016-12-13 12:44:44.629] [jointLog] [info] done; [2016-12-13 12:44:44.629] [jointLog] [info] Index contained 182608 targets; [2016-12-13 12:44:49.583] [jointLog] [warning] Fragment GC bias correction is currently *experimental* in ; single-end libraries. Please use this option with caution. processed 19000000 fragments; hits: 65897660; hits per frag: 3.46963. [2016-12-13 12:46:51.776] [jointLog] [info] Computed 137534 rich equivalence classes for further processin; g; [2016-12-13 12:46:51.776] [jointLog] [info] Counted 16265961 total reads in the equivalence classes . [2016-12-13 12:46:51.786] [,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111
https://github.com/COMBINE-lab/salmon/issues/111:1760,Performance,Load,Loading,1760,s/SRR2454059.fq.gz }; ### [ threads ] => { 8 }; ### [ libType ] => { ISF }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ useVBOpt ] => { }; ### [ dumpEq ] => { }; ### [ dumpEqWeights ] => { }; ### [ geneMap ] => { /home/ryan/references/hg38/Salmon_index_hg38.analysisSet_knownGene/genemap.txt }; ### [ output ] => { salmon_quant/hg38.analysisSet_knownGene/SRR2454059 }; ### [ auxDir ] => { aux_info }; ### [ numGibbsSamples ] => { 100 }; Logs will be written to salmon_quant/hg38.analysisSet_knownGene/SRR2454059/logs; [2016-12-13 12:44:39.271] [jointLog] [info] parsing read library format; [2016-12-13 12:44:39.271] [jointLog] [info] There is 1 library.; [2016-12-13 12:44:39.836] [jointLog] [info] Loading Quasi index; [2016-12-13 12:44:39.836] [jointLog] [info] Loading 32-bit quasi index; [2016-12-13 12:44:39.836] [stderrLog] [info] Loading Suffix Array ; [2016-12-13 12:44:43.439] [stderrLog] [info] Loading Transcript Info ; [2016-12-13 12:44:44.355] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-13 12:44:44.613] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-13 12:44:44.629] [stderrLog] [info] Computing transcript lengths; [2016-12-13 12:44:44.629] [stderrLog] [info] Waiting to finish loading hash; [2016-12-13 12:44:44.629] [stderrLog] [info] Done loading index; [2016-12-13 12:44:44.629] [jointLog] [info] done; [2016-12-13 12:44:44.629] [jointLog] [info] Index contained 182608 targets; [2016-12-13 12:44:49.583] [jointLog] [warning] Fragment GC bias correction is currently *experimental* in ; single-end libraries. Please use this option with caution. processed 19000000 fragments; hits: 65897660; hits per frag: 3.46963. [2016-12-13 12:46:51.776] [jointLog] [info] Computed 137534 rich equivalence classes for further processin; g; [2016-12-13 12:46:51.776] [jointLog] [info] Counted 16265961 total reads in the equivalence classes . [2016-12-13 12:46:51.786] [jointLog] [info] Mapping rate = 83.509%. [2016-12-13 12:46:51.786] [joint,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111
https://github.com/COMBINE-lab/salmon/issues/111:2019,Performance,load,loading,2019,es/hg38/Salmon_index_hg38.analysisSet_knownGene/genemap.txt }; ### [ output ] => { salmon_quant/hg38.analysisSet_knownGene/SRR2454059 }; ### [ auxDir ] => { aux_info }; ### [ numGibbsSamples ] => { 100 }; Logs will be written to salmon_quant/hg38.analysisSet_knownGene/SRR2454059/logs; [2016-12-13 12:44:39.271] [jointLog] [info] parsing read library format; [2016-12-13 12:44:39.271] [jointLog] [info] There is 1 library.; [2016-12-13 12:44:39.836] [jointLog] [info] Loading Quasi index; [2016-12-13 12:44:39.836] [jointLog] [info] Loading 32-bit quasi index; [2016-12-13 12:44:39.836] [stderrLog] [info] Loading Suffix Array ; [2016-12-13 12:44:43.439] [stderrLog] [info] Loading Transcript Info ; [2016-12-13 12:44:44.355] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-13 12:44:44.613] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-13 12:44:44.629] [stderrLog] [info] Computing transcript lengths; [2016-12-13 12:44:44.629] [stderrLog] [info] Waiting to finish loading hash; [2016-12-13 12:44:44.629] [stderrLog] [info] Done loading index; [2016-12-13 12:44:44.629] [jointLog] [info] done; [2016-12-13 12:44:44.629] [jointLog] [info] Index contained 182608 targets; [2016-12-13 12:44:49.583] [jointLog] [warning] Fragment GC bias correction is currently *experimental* in ; single-end libraries. Please use this option with caution. processed 19000000 fragments; hits: 65897660; hits per frag: 3.46963. [2016-12-13 12:46:51.776] [jointLog] [info] Computed 137534 rich equivalence classes for further processin; g; [2016-12-13 12:46:51.776] [jointLog] [info] Counted 16265961 total reads in the equivalence classes . [2016-12-13 12:46:51.786] [jointLog] [info] Mapping rate = 83.509%. [2016-12-13 12:46:51.786] [jointLog] [info] finished quantifyLibrary(); [2016-12-13 12:46:51.786] [jointLog] [info] Starting optimizer; [2016-12-13 12:46:51.867] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-12-13 12:46:51.877] [jointLog] [inf,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111
https://github.com/COMBINE-lab/salmon/issues/111:2083,Performance,load,loading,2083,tput ] => { salmon_quant/hg38.analysisSet_knownGene/SRR2454059 }; ### [ auxDir ] => { aux_info }; ### [ numGibbsSamples ] => { 100 }; Logs will be written to salmon_quant/hg38.analysisSet_knownGene/SRR2454059/logs; [2016-12-13 12:44:39.271] [jointLog] [info] parsing read library format; [2016-12-13 12:44:39.271] [jointLog] [info] There is 1 library.; [2016-12-13 12:44:39.836] [jointLog] [info] Loading Quasi index; [2016-12-13 12:44:39.836] [jointLog] [info] Loading 32-bit quasi index; [2016-12-13 12:44:39.836] [stderrLog] [info] Loading Suffix Array ; [2016-12-13 12:44:43.439] [stderrLog] [info] Loading Transcript Info ; [2016-12-13 12:44:44.355] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-13 12:44:44.613] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-13 12:44:44.629] [stderrLog] [info] Computing transcript lengths; [2016-12-13 12:44:44.629] [stderrLog] [info] Waiting to finish loading hash; [2016-12-13 12:44:44.629] [stderrLog] [info] Done loading index; [2016-12-13 12:44:44.629] [jointLog] [info] done; [2016-12-13 12:44:44.629] [jointLog] [info] Index contained 182608 targets; [2016-12-13 12:44:49.583] [jointLog] [warning] Fragment GC bias correction is currently *experimental* in ; single-end libraries. Please use this option with caution. processed 19000000 fragments; hits: 65897660; hits per frag: 3.46963. [2016-12-13 12:46:51.776] [jointLog] [info] Computed 137534 rich equivalence classes for further processin; g; [2016-12-13 12:46:51.776] [jointLog] [info] Counted 16265961 total reads in the equivalence classes . [2016-12-13 12:46:51.786] [jointLog] [info] Mapping rate = 83.509%. [2016-12-13 12:46:51.786] [jointLog] [info] finished quantifyLibrary(); [2016-12-13 12:46:51.786] [jointLog] [info] Starting optimizer; [2016-12-13 12:46:51.867] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-12-13 12:46:51.877] [jointLog] [info] iteration = 0 | max rel diff. = 299.948; [2016-12-13 12:46:51.959] [,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111
https://github.com/COMBINE-lab/salmon/issues/111:2867,Performance,optimiz,optimizer,2867,"he bit array; [2016-12-13 12:44:44.629] [stderrLog] [info] Computing transcript lengths; [2016-12-13 12:44:44.629] [stderrLog] [info] Waiting to finish loading hash; [2016-12-13 12:44:44.629] [stderrLog] [info] Done loading index; [2016-12-13 12:44:44.629] [jointLog] [info] done; [2016-12-13 12:44:44.629] [jointLog] [info] Index contained 182608 targets; [2016-12-13 12:44:49.583] [jointLog] [warning] Fragment GC bias correction is currently *experimental* in ; single-end libraries. Please use this option with caution. processed 19000000 fragments; hits: 65897660; hits per frag: 3.46963. [2016-12-13 12:46:51.776] [jointLog] [info] Computed 137534 rich equivalence classes for further processin; g; [2016-12-13 12:46:51.776] [jointLog] [info] Counted 16265961 total reads in the equivalence classes . [2016-12-13 12:46:51.786] [jointLog] [info] Mapping rate = 83.509%. [2016-12-13 12:46:51.786] [jointLog] [info] finished quantifyLibrary(); [2016-12-13 12:46:51.786] [jointLog] [info] Starting optimizer; [2016-12-13 12:46:51.867] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-12-13 12:46:51.877] [jointLog] [info] iteration = 0 | max rel diff. = 299.948; [2016-12-13 12:46:51.959] [jointLog] [info] iteration 11, adjusting effective lengths to account for biase; s; [2016-12-13 12:52:42.161] [jointLog] [info] Computed expected counts (for bias correction); [2016-12-13 12:52:42.162] [jointLog] [info] processed bias for 0.0% of the transcripts; [2016-12-13 12:53:40.240] [jointLog] [info] processed bias for 10.0% of the transcripts; [2016-12-13 12:54:40.032] [jointLog] [info] processed bias for 20.0% of the transcripts; [2016-12-13 12:55:40.277] [jointLog] [info] processed bias for 30.0% of the transcripts; [2016-12-13 12:56:41.225] [jointLog] [info] processed bias for 40.0% of the transcripts; [2016-12-13 12:57:41.888] [jointLog] [info] processed bias for 50.0% of the transcripts; [2016-12-13 12:58:37.148] [jointLog] [info] processed bias for 100.0% o",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111
https://github.com/COMBINE-lab/salmon/issues/111:4647,Performance,optimiz,optimizer,4647,"g] [info] iteration 11, adjusting effective lengths to account for biase; s; [2016-12-13 12:52:42.161] [jointLog] [info] Computed expected counts (for bias correction); [2016-12-13 12:52:42.162] [jointLog] [info] processed bias for 0.0% of the transcripts; [2016-12-13 12:53:40.240] [jointLog] [info] processed bias for 10.0% of the transcripts; [2016-12-13 12:54:40.032] [jointLog] [info] processed bias for 20.0% of the transcripts; [2016-12-13 12:55:40.277] [jointLog] [info] processed bias for 30.0% of the transcripts; [2016-12-13 12:56:41.225] [jointLog] [info] processed bias for 40.0% of the transcripts; [2016-12-13 12:57:41.888] [jointLog] [info] processed bias for 50.0% of the transcripts; [2016-12-13 12:58:37.148] [jointLog] [info] processed bias for 100.0% of the transcripts; [2016-12-13 12:58:37.809] [jointLog] [info] iteration = 100 | max rel diff. = 0.272558; [2016-12-13 12:58:38.544] [jointLog] [info] iteration = 200 | max rel diff. = 0.213603; [2016-12-13 12:58:39.275] [jointLog] [info] iteration = 300 | max rel diff. = 0.254034; [2016-12-13 12:58:40.017] [jointLog] [info] iteration = 400 | max rel diff. = 0.120455; [2016-12-13 12:58:40.754] [jointLog] [info] iteration = 500 | max rel diff. = 0.020828; [2016-12-13 12:58:41.487] [jointLog] [info] iteration = 600 | max rel diff. = 0.0153173; [2016-12-13 12:58:42.222] [jointLog] [info] iteration = 700 | max rel diff. = 0.0746574; [2016-12-13 12:58:42.359] [jointLog] [info] iteration = 720 | max rel diff. = 0.00908527; [2016-12-13 12:58:42.368] [jointLog] [info] Finished optimizer; [2016-12-13 12:58:42.368] [jointLog] [info] writing output . [2016-12-13 12:58:42.943] [jointLog] [info] Starting Gibbs Sampler; 0% [> ] ETA > 1 week ; ```. It remained stuck at 0% until I terminated it with Control+C around 2016-12-13 14:21, nearly 1.5 hours after the Gibbs sample started. Running it again on the same sample, I see the same behavior. I'm currently re-running with different options to see if that makes a difference.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111
https://github.com/COMBINE-lab/salmon/issues/111:2027,Security,hash,hash,2027,es/hg38/Salmon_index_hg38.analysisSet_knownGene/genemap.txt }; ### [ output ] => { salmon_quant/hg38.analysisSet_knownGene/SRR2454059 }; ### [ auxDir ] => { aux_info }; ### [ numGibbsSamples ] => { 100 }; Logs will be written to salmon_quant/hg38.analysisSet_knownGene/SRR2454059/logs; [2016-12-13 12:44:39.271] [jointLog] [info] parsing read library format; [2016-12-13 12:44:39.271] [jointLog] [info] There is 1 library.; [2016-12-13 12:44:39.836] [jointLog] [info] Loading Quasi index; [2016-12-13 12:44:39.836] [jointLog] [info] Loading 32-bit quasi index; [2016-12-13 12:44:39.836] [stderrLog] [info] Loading Suffix Array ; [2016-12-13 12:44:43.439] [stderrLog] [info] Loading Transcript Info ; [2016-12-13 12:44:44.355] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-13 12:44:44.613] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-13 12:44:44.629] [stderrLog] [info] Computing transcript lengths; [2016-12-13 12:44:44.629] [stderrLog] [info] Waiting to finish loading hash; [2016-12-13 12:44:44.629] [stderrLog] [info] Done loading index; [2016-12-13 12:44:44.629] [jointLog] [info] done; [2016-12-13 12:44:44.629] [jointLog] [info] Index contained 182608 targets; [2016-12-13 12:44:49.583] [jointLog] [warning] Fragment GC bias correction is currently *experimental* in ; single-end libraries. Please use this option with caution. processed 19000000 fragments; hits: 65897660; hits per frag: 3.46963. [2016-12-13 12:46:51.776] [jointLog] [info] Computed 137534 rich equivalence classes for further processin; g; [2016-12-13 12:46:51.776] [jointLog] [info] Counted 16265961 total reads in the equivalence classes . [2016-12-13 12:46:51.786] [jointLog] [info] Mapping rate = 83.509%. [2016-12-13 12:46:51.786] [jointLog] [info] finished quantifyLibrary(); [2016-12-13 12:46:51.786] [jointLog] [info] Starting optimizer; [2016-12-13 12:46:51.867] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-12-13 12:46:51.877] [jointLog] [inf,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111
https://github.com/COMBINE-lab/salmon/issues/111:1220,Testability,Log,Logs,1220,q_files/SRR2454059.fq.gz --threads 8 --libType ISF --seqBias --gcBias --useVBOpt --dumpEq --dumpEqWeights --geneMap /home/ryan/references/hg38/Salmon_index_hg38.analysisSet_knownGene/genemap.txt --output salmon_quant/hg38.analysisSet_knownGene/SRR2454059 --auxDir aux_info --numGibbsSamples 100; Version Info: This is the most recent **development version** of Salmon.; ### salmon (mapping-based) v0.7.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /home/ryan/references/hg38/Salmon_index_hg38.analysisSet_knownGene }; ### [ unmatedReads ] => { fastq_files/SRR2454059.fq.gz }; ### [ threads ] => { 8 }; ### [ libType ] => { ISF }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ useVBOpt ] => { }; ### [ dumpEq ] => { }; ### [ dumpEqWeights ] => { }; ### [ geneMap ] => { /home/ryan/references/hg38/Salmon_index_hg38.analysisSet_knownGene/genemap.txt }; ### [ output ] => { salmon_quant/hg38.analysisSet_knownGene/SRR2454059 }; ### [ auxDir ] => { aux_info }; ### [ numGibbsSamples ] => { 100 }; Logs will be written to salmon_quant/hg38.analysisSet_knownGene/SRR2454059/logs; [2016-12-13 12:44:39.271] [jointLog] [info] parsing read library format; [2016-12-13 12:44:39.271] [jointLog] [info] There is 1 library.; [2016-12-13 12:44:39.836] [jointLog] [info] Loading Quasi index; [2016-12-13 12:44:39.836] [jointLog] [info] Loading 32-bit quasi index; [2016-12-13 12:44:39.836] [stderrLog] [info] Loading Suffix Array ; [2016-12-13 12:44:43.439] [stderrLog] [info] Loading Transcript Info ; [2016-12-13 12:44:44.355] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-13 12:44:44.613] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-13 12:44:44.629] [stderrLog] [info] Computing transcript lengths; [2016-12-13 12:44:44.629] [stderrLog] [info] Waiting to finish loading hash; [2016-12-13 12:44:44.629] [stderrLog] [info] Done loading index; [2016-12-13 12:44:44.629] [jointLog] [info] done; [2016-12-13 12:44:44.629] [jointLog] [inf,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111
https://github.com/COMBINE-lab/salmon/issues/111:1295,Testability,log,logs,1295,ts --geneMap /home/ryan/references/hg38/Salmon_index_hg38.analysisSet_knownGene/genemap.txt --output salmon_quant/hg38.analysisSet_knownGene/SRR2454059 --auxDir aux_info --numGibbsSamples 100; Version Info: This is the most recent **development version** of Salmon.; ### salmon (mapping-based) v0.7.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /home/ryan/references/hg38/Salmon_index_hg38.analysisSet_knownGene }; ### [ unmatedReads ] => { fastq_files/SRR2454059.fq.gz }; ### [ threads ] => { 8 }; ### [ libType ] => { ISF }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ useVBOpt ] => { }; ### [ dumpEq ] => { }; ### [ dumpEqWeights ] => { }; ### [ geneMap ] => { /home/ryan/references/hg38/Salmon_index_hg38.analysisSet_knownGene/genemap.txt }; ### [ output ] => { salmon_quant/hg38.analysisSet_knownGene/SRR2454059 }; ### [ auxDir ] => { aux_info }; ### [ numGibbsSamples ] => { 100 }; Logs will be written to salmon_quant/hg38.analysisSet_knownGene/SRR2454059/logs; [2016-12-13 12:44:39.271] [jointLog] [info] parsing read library format; [2016-12-13 12:44:39.271] [jointLog] [info] There is 1 library.; [2016-12-13 12:44:39.836] [jointLog] [info] Loading Quasi index; [2016-12-13 12:44:39.836] [jointLog] [info] Loading 32-bit quasi index; [2016-12-13 12:44:39.836] [stderrLog] [info] Loading Suffix Array ; [2016-12-13 12:44:43.439] [stderrLog] [info] Loading Transcript Info ; [2016-12-13 12:44:44.355] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-13 12:44:44.613] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-13 12:44:44.629] [stderrLog] [info] Computing transcript lengths; [2016-12-13 12:44:44.629] [stderrLog] [info] Waiting to finish loading hash; [2016-12-13 12:44:44.629] [stderrLog] [info] Done loading index; [2016-12-13 12:44:44.629] [jointLog] [info] done; [2016-12-13 12:44:44.629] [jointLog] [info] Index contained 182608 targets; [2016-12-13 12:44:49.583] [jointLog] [warning] Fragment GC bias corr,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111
https://github.com/COMBINE-lab/salmon/issues/112:345,Availability,Down,Downloading,345,"Hi,; I seem to be having problems with installing Salmon on my mac.; I've tried doing this using ; **1. brew install salmon:**; brew install salmon; Updating Homebrew...; ==> Auto-updated Homebrew!; Updated 2 taps (homebrew/core, homebrew/science).; ==> Updated Formulae; homebrew/science/seqan. ==> Installing salmon from homebrew/science; ==> Downloading https://github.com/COMBINE-lab/salmon/archive/v0.7.2.tar.gz; Already downloaded: /Users/sangrim/Library/Caches/Homebrew/salmon-0.7.2.tar.gz; ==> cmake . -DCMAKE_C_FLAGS_RELEASE=-DNDEBUG -DCMAKE_CXX_FLAGS_RELEASE=-DNDEBUG -DCMAKE_INSTALL_PREFIX=/usr/local/Cellar/salmon/0.7.2 -DCMA; ==> make install; 🍺 /usr/local/Cellar/salmon/0.7.2: 6 files, 8.5M, built in 7 minutes 8 seconds; sangrim@C02Q7CT1G8WN:~/bin$> salmon; **salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000**. and also,; **2. compiling from the osx tarball; the installation seemingly succeeds,**; Install the project...; /usr/local/Cellar/cmake/3.7.1/bin/cmake -P cmake_install.cmake; -- Install configuration: """"; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib/pkgconfig; -- Installing: /Users/../bin/salmon-0.7.2/bin/salmon; -- Installing: /Users/../bin/salmon-0.7.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly. Please add /Users/../bin/salmon-0.7.2/bin to your PATH; Please add /Users/../bin/salmon-0.7.2/lib to your DYLD_FALLBACK_LIBRARY_PATH. ...and then make test, hangs...; Running tests...; /usr/local/Cellar/cmake/3.7.1/bin/ctest --force-new-ctest-process ; Test project /Users/maheshsangrithi/bin/salmon-0.7.2/build; Start 1: unit_tests; ........Ctrl+C to cancel...; then if ./salmon is run, I get the same error...; salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000. Thanks in advance for your help.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/112
https://github.com/COMBINE-lab/salmon/issues/112:426,Availability,down,downloaded,426,"Hi,; I seem to be having problems with installing Salmon on my mac.; I've tried doing this using ; **1. brew install salmon:**; brew install salmon; Updating Homebrew...; ==> Auto-updated Homebrew!; Updated 2 taps (homebrew/core, homebrew/science).; ==> Updated Formulae; homebrew/science/seqan. ==> Installing salmon from homebrew/science; ==> Downloading https://github.com/COMBINE-lab/salmon/archive/v0.7.2.tar.gz; Already downloaded: /Users/sangrim/Library/Caches/Homebrew/salmon-0.7.2.tar.gz; ==> cmake . -DCMAKE_C_FLAGS_RELEASE=-DNDEBUG -DCMAKE_CXX_FLAGS_RELEASE=-DNDEBUG -DCMAKE_INSTALL_PREFIX=/usr/local/Cellar/salmon/0.7.2 -DCMA; ==> make install; 🍺 /usr/local/Cellar/salmon/0.7.2: 6 files, 8.5M, built in 7 minutes 8 seconds; sangrim@C02Q7CT1G8WN:~/bin$> salmon; **salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000**. and also,; **2. compiling from the osx tarball; the installation seemingly succeeds,**; Install the project...; /usr/local/Cellar/cmake/3.7.1/bin/cmake -P cmake_install.cmake; -- Install configuration: """"; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib/pkgconfig; -- Installing: /Users/../bin/salmon-0.7.2/bin/salmon; -- Installing: /Users/../bin/salmon-0.7.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly. Please add /Users/../bin/salmon-0.7.2/bin to your PATH; Please add /Users/../bin/salmon-0.7.2/lib to your DYLD_FALLBACK_LIBRARY_PATH. ...and then make test, hangs...; Running tests...; /usr/local/Cellar/cmake/3.7.1/bin/ctest --force-new-ctest-process ; Test project /Users/maheshsangrithi/bin/salmon-0.7.2/build; Start 1: unit_tests; ........Ctrl+C to cancel...; then if ./salmon is run, I get the same error...; salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000. Thanks in advance for your help.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/112
https://github.com/COMBINE-lab/salmon/issues/112:1775,Availability,error,error,1775,"Hi,; I seem to be having problems with installing Salmon on my mac.; I've tried doing this using ; **1. brew install salmon:**; brew install salmon; Updating Homebrew...; ==> Auto-updated Homebrew!; Updated 2 taps (homebrew/core, homebrew/science).; ==> Updated Formulae; homebrew/science/seqan. ==> Installing salmon from homebrew/science; ==> Downloading https://github.com/COMBINE-lab/salmon/archive/v0.7.2.tar.gz; Already downloaded: /Users/sangrim/Library/Caches/Homebrew/salmon-0.7.2.tar.gz; ==> cmake . -DCMAKE_C_FLAGS_RELEASE=-DNDEBUG -DCMAKE_CXX_FLAGS_RELEASE=-DNDEBUG -DCMAKE_INSTALL_PREFIX=/usr/local/Cellar/salmon/0.7.2 -DCMA; ==> make install; 🍺 /usr/local/Cellar/salmon/0.7.2: 6 files, 8.5M, built in 7 minutes 8 seconds; sangrim@C02Q7CT1G8WN:~/bin$> salmon; **salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000**. and also,; **2. compiling from the osx tarball; the installation seemingly succeeds,**; Install the project...; /usr/local/Cellar/cmake/3.7.1/bin/cmake -P cmake_install.cmake; -- Install configuration: """"; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib/pkgconfig; -- Installing: /Users/../bin/salmon-0.7.2/bin/salmon; -- Installing: /Users/../bin/salmon-0.7.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly. Please add /Users/../bin/salmon-0.7.2/bin to your PATH; Please add /Users/../bin/salmon-0.7.2/lib to your DYLD_FALLBACK_LIBRARY_PATH. ...and then make test, hangs...; Running tests...; /usr/local/Cellar/cmake/3.7.1/bin/ctest --force-new-ctest-process ; Test project /Users/maheshsangrithi/bin/salmon-0.7.2/build; Start 1: unit_tests; ........Ctrl+C to cancel...; then if ./salmon is run, I get the same error...; salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000. Thanks in advance for your help.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/112
https://github.com/COMBINE-lab/salmon/issues/112:39,Deployability,install,installing,39,"Hi,; I seem to be having problems with installing Salmon on my mac.; I've tried doing this using ; **1. brew install salmon:**; brew install salmon; Updating Homebrew...; ==> Auto-updated Homebrew!; Updated 2 taps (homebrew/core, homebrew/science).; ==> Updated Formulae; homebrew/science/seqan. ==> Installing salmon from homebrew/science; ==> Downloading https://github.com/COMBINE-lab/salmon/archive/v0.7.2.tar.gz; Already downloaded: /Users/sangrim/Library/Caches/Homebrew/salmon-0.7.2.tar.gz; ==> cmake . -DCMAKE_C_FLAGS_RELEASE=-DNDEBUG -DCMAKE_CXX_FLAGS_RELEASE=-DNDEBUG -DCMAKE_INSTALL_PREFIX=/usr/local/Cellar/salmon/0.7.2 -DCMA; ==> make install; 🍺 /usr/local/Cellar/salmon/0.7.2: 6 files, 8.5M, built in 7 minutes 8 seconds; sangrim@C02Q7CT1G8WN:~/bin$> salmon; **salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000**. and also,; **2. compiling from the osx tarball; the installation seemingly succeeds,**; Install the project...; /usr/local/Cellar/cmake/3.7.1/bin/cmake -P cmake_install.cmake; -- Install configuration: """"; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib/pkgconfig; -- Installing: /Users/../bin/salmon-0.7.2/bin/salmon; -- Installing: /Users/../bin/salmon-0.7.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly. Please add /Users/../bin/salmon-0.7.2/bin to your PATH; Please add /Users/../bin/salmon-0.7.2/lib to your DYLD_FALLBACK_LIBRARY_PATH. ...and then make test, hangs...; Running tests...; /usr/local/Cellar/cmake/3.7.1/bin/ctest --force-new-ctest-process ; Test project /Users/maheshsangrithi/bin/salmon-0.7.2/build; Start 1: unit_tests; ........Ctrl+C to cancel...; then if ./salmon is run, I get the same error...; salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000. Thanks in advance for your help.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/112
https://github.com/COMBINE-lab/salmon/issues/112:109,Deployability,install,install,109,"Hi,; I seem to be having problems with installing Salmon on my mac.; I've tried doing this using ; **1. brew install salmon:**; brew install salmon; Updating Homebrew...; ==> Auto-updated Homebrew!; Updated 2 taps (homebrew/core, homebrew/science).; ==> Updated Formulae; homebrew/science/seqan. ==> Installing salmon from homebrew/science; ==> Downloading https://github.com/COMBINE-lab/salmon/archive/v0.7.2.tar.gz; Already downloaded: /Users/sangrim/Library/Caches/Homebrew/salmon-0.7.2.tar.gz; ==> cmake . -DCMAKE_C_FLAGS_RELEASE=-DNDEBUG -DCMAKE_CXX_FLAGS_RELEASE=-DNDEBUG -DCMAKE_INSTALL_PREFIX=/usr/local/Cellar/salmon/0.7.2 -DCMA; ==> make install; 🍺 /usr/local/Cellar/salmon/0.7.2: 6 files, 8.5M, built in 7 minutes 8 seconds; sangrim@C02Q7CT1G8WN:~/bin$> salmon; **salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000**. and also,; **2. compiling from the osx tarball; the installation seemingly succeeds,**; Install the project...; /usr/local/Cellar/cmake/3.7.1/bin/cmake -P cmake_install.cmake; -- Install configuration: """"; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib/pkgconfig; -- Installing: /Users/../bin/salmon-0.7.2/bin/salmon; -- Installing: /Users/../bin/salmon-0.7.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly. Please add /Users/../bin/salmon-0.7.2/bin to your PATH; Please add /Users/../bin/salmon-0.7.2/lib to your DYLD_FALLBACK_LIBRARY_PATH. ...and then make test, hangs...; Running tests...; /usr/local/Cellar/cmake/3.7.1/bin/ctest --force-new-ctest-process ; Test project /Users/maheshsangrithi/bin/salmon-0.7.2/build; Start 1: unit_tests; ........Ctrl+C to cancel...; then if ./salmon is run, I get the same error...; salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000. Thanks in advance for your help.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/112
https://github.com/COMBINE-lab/salmon/issues/112:133,Deployability,install,install,133,"Hi,; I seem to be having problems with installing Salmon on my mac.; I've tried doing this using ; **1. brew install salmon:**; brew install salmon; Updating Homebrew...; ==> Auto-updated Homebrew!; Updated 2 taps (homebrew/core, homebrew/science).; ==> Updated Formulae; homebrew/science/seqan. ==> Installing salmon from homebrew/science; ==> Downloading https://github.com/COMBINE-lab/salmon/archive/v0.7.2.tar.gz; Already downloaded: /Users/sangrim/Library/Caches/Homebrew/salmon-0.7.2.tar.gz; ==> cmake . -DCMAKE_C_FLAGS_RELEASE=-DNDEBUG -DCMAKE_CXX_FLAGS_RELEASE=-DNDEBUG -DCMAKE_INSTALL_PREFIX=/usr/local/Cellar/salmon/0.7.2 -DCMA; ==> make install; 🍺 /usr/local/Cellar/salmon/0.7.2: 6 files, 8.5M, built in 7 minutes 8 seconds; sangrim@C02Q7CT1G8WN:~/bin$> salmon; **salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000**. and also,; **2. compiling from the osx tarball; the installation seemingly succeeds,**; Install the project...; /usr/local/Cellar/cmake/3.7.1/bin/cmake -P cmake_install.cmake; -- Install configuration: """"; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib/pkgconfig; -- Installing: /Users/../bin/salmon-0.7.2/bin/salmon; -- Installing: /Users/../bin/salmon-0.7.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly. Please add /Users/../bin/salmon-0.7.2/bin to your PATH; Please add /Users/../bin/salmon-0.7.2/lib to your DYLD_FALLBACK_LIBRARY_PATH. ...and then make test, hangs...; Running tests...; /usr/local/Cellar/cmake/3.7.1/bin/ctest --force-new-ctest-process ; Test project /Users/maheshsangrithi/bin/salmon-0.7.2/build; Start 1: unit_tests; ........Ctrl+C to cancel...; then if ./salmon is run, I get the same error...; salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000. Thanks in advance for your help.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/112
https://github.com/COMBINE-lab/salmon/issues/112:180,Deployability,update,updated,180,"Hi,; I seem to be having problems with installing Salmon on my mac.; I've tried doing this using ; **1. brew install salmon:**; brew install salmon; Updating Homebrew...; ==> Auto-updated Homebrew!; Updated 2 taps (homebrew/core, homebrew/science).; ==> Updated Formulae; homebrew/science/seqan. ==> Installing salmon from homebrew/science; ==> Downloading https://github.com/COMBINE-lab/salmon/archive/v0.7.2.tar.gz; Already downloaded: /Users/sangrim/Library/Caches/Homebrew/salmon-0.7.2.tar.gz; ==> cmake . -DCMAKE_C_FLAGS_RELEASE=-DNDEBUG -DCMAKE_CXX_FLAGS_RELEASE=-DNDEBUG -DCMAKE_INSTALL_PREFIX=/usr/local/Cellar/salmon/0.7.2 -DCMA; ==> make install; 🍺 /usr/local/Cellar/salmon/0.7.2: 6 files, 8.5M, built in 7 minutes 8 seconds; sangrim@C02Q7CT1G8WN:~/bin$> salmon; **salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000**. and also,; **2. compiling from the osx tarball; the installation seemingly succeeds,**; Install the project...; /usr/local/Cellar/cmake/3.7.1/bin/cmake -P cmake_install.cmake; -- Install configuration: """"; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib/pkgconfig; -- Installing: /Users/../bin/salmon-0.7.2/bin/salmon; -- Installing: /Users/../bin/salmon-0.7.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly. Please add /Users/../bin/salmon-0.7.2/bin to your PATH; Please add /Users/../bin/salmon-0.7.2/lib to your DYLD_FALLBACK_LIBRARY_PATH. ...and then make test, hangs...; Running tests...; /usr/local/Cellar/cmake/3.7.1/bin/ctest --force-new-ctest-process ; Test project /Users/maheshsangrithi/bin/salmon-0.7.2/build; Start 1: unit_tests; ........Ctrl+C to cancel...; then if ./salmon is run, I get the same error...; salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000. Thanks in advance for your help.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/112
https://github.com/COMBINE-lab/salmon/issues/112:199,Deployability,Update,Updated,199,"Hi,; I seem to be having problems with installing Salmon on my mac.; I've tried doing this using ; **1. brew install salmon:**; brew install salmon; Updating Homebrew...; ==> Auto-updated Homebrew!; Updated 2 taps (homebrew/core, homebrew/science).; ==> Updated Formulae; homebrew/science/seqan. ==> Installing salmon from homebrew/science; ==> Downloading https://github.com/COMBINE-lab/salmon/archive/v0.7.2.tar.gz; Already downloaded: /Users/sangrim/Library/Caches/Homebrew/salmon-0.7.2.tar.gz; ==> cmake . -DCMAKE_C_FLAGS_RELEASE=-DNDEBUG -DCMAKE_CXX_FLAGS_RELEASE=-DNDEBUG -DCMAKE_INSTALL_PREFIX=/usr/local/Cellar/salmon/0.7.2 -DCMA; ==> make install; 🍺 /usr/local/Cellar/salmon/0.7.2: 6 files, 8.5M, built in 7 minutes 8 seconds; sangrim@C02Q7CT1G8WN:~/bin$> salmon; **salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000**. and also,; **2. compiling from the osx tarball; the installation seemingly succeeds,**; Install the project...; /usr/local/Cellar/cmake/3.7.1/bin/cmake -P cmake_install.cmake; -- Install configuration: """"; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib/pkgconfig; -- Installing: /Users/../bin/salmon-0.7.2/bin/salmon; -- Installing: /Users/../bin/salmon-0.7.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly. Please add /Users/../bin/salmon-0.7.2/bin to your PATH; Please add /Users/../bin/salmon-0.7.2/lib to your DYLD_FALLBACK_LIBRARY_PATH. ...and then make test, hangs...; Running tests...; /usr/local/Cellar/cmake/3.7.1/bin/ctest --force-new-ctest-process ; Test project /Users/maheshsangrithi/bin/salmon-0.7.2/build; Start 1: unit_tests; ........Ctrl+C to cancel...; then if ./salmon is run, I get the same error...; salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000. Thanks in advance for your help.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/112
https://github.com/COMBINE-lab/salmon/issues/112:254,Deployability,Update,Updated,254,"Hi,; I seem to be having problems with installing Salmon on my mac.; I've tried doing this using ; **1. brew install salmon:**; brew install salmon; Updating Homebrew...; ==> Auto-updated Homebrew!; Updated 2 taps (homebrew/core, homebrew/science).; ==> Updated Formulae; homebrew/science/seqan. ==> Installing salmon from homebrew/science; ==> Downloading https://github.com/COMBINE-lab/salmon/archive/v0.7.2.tar.gz; Already downloaded: /Users/sangrim/Library/Caches/Homebrew/salmon-0.7.2.tar.gz; ==> cmake . -DCMAKE_C_FLAGS_RELEASE=-DNDEBUG -DCMAKE_CXX_FLAGS_RELEASE=-DNDEBUG -DCMAKE_INSTALL_PREFIX=/usr/local/Cellar/salmon/0.7.2 -DCMA; ==> make install; 🍺 /usr/local/Cellar/salmon/0.7.2: 6 files, 8.5M, built in 7 minutes 8 seconds; sangrim@C02Q7CT1G8WN:~/bin$> salmon; **salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000**. and also,; **2. compiling from the osx tarball; the installation seemingly succeeds,**; Install the project...; /usr/local/Cellar/cmake/3.7.1/bin/cmake -P cmake_install.cmake; -- Install configuration: """"; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib/pkgconfig; -- Installing: /Users/../bin/salmon-0.7.2/bin/salmon; -- Installing: /Users/../bin/salmon-0.7.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly. Please add /Users/../bin/salmon-0.7.2/bin to your PATH; Please add /Users/../bin/salmon-0.7.2/lib to your DYLD_FALLBACK_LIBRARY_PATH. ...and then make test, hangs...; Running tests...; /usr/local/Cellar/cmake/3.7.1/bin/ctest --force-new-ctest-process ; Test project /Users/maheshsangrithi/bin/salmon-0.7.2/build; Start 1: unit_tests; ........Ctrl+C to cancel...; then if ./salmon is run, I get the same error...; salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000. Thanks in advance for your help.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/112
https://github.com/COMBINE-lab/salmon/issues/112:300,Deployability,Install,Installing,300,"Hi,; I seem to be having problems with installing Salmon on my mac.; I've tried doing this using ; **1. brew install salmon:**; brew install salmon; Updating Homebrew...; ==> Auto-updated Homebrew!; Updated 2 taps (homebrew/core, homebrew/science).; ==> Updated Formulae; homebrew/science/seqan. ==> Installing salmon from homebrew/science; ==> Downloading https://github.com/COMBINE-lab/salmon/archive/v0.7.2.tar.gz; Already downloaded: /Users/sangrim/Library/Caches/Homebrew/salmon-0.7.2.tar.gz; ==> cmake . -DCMAKE_C_FLAGS_RELEASE=-DNDEBUG -DCMAKE_CXX_FLAGS_RELEASE=-DNDEBUG -DCMAKE_INSTALL_PREFIX=/usr/local/Cellar/salmon/0.7.2 -DCMA; ==> make install; 🍺 /usr/local/Cellar/salmon/0.7.2: 6 files, 8.5M, built in 7 minutes 8 seconds; sangrim@C02Q7CT1G8WN:~/bin$> salmon; **salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000**. and also,; **2. compiling from the osx tarball; the installation seemingly succeeds,**; Install the project...; /usr/local/Cellar/cmake/3.7.1/bin/cmake -P cmake_install.cmake; -- Install configuration: """"; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib/pkgconfig; -- Installing: /Users/../bin/salmon-0.7.2/bin/salmon; -- Installing: /Users/../bin/salmon-0.7.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly. Please add /Users/../bin/salmon-0.7.2/bin to your PATH; Please add /Users/../bin/salmon-0.7.2/lib to your DYLD_FALLBACK_LIBRARY_PATH. ...and then make test, hangs...; Running tests...; /usr/local/Cellar/cmake/3.7.1/bin/ctest --force-new-ctest-process ; Test project /Users/maheshsangrithi/bin/salmon-0.7.2/build; Start 1: unit_tests; ........Ctrl+C to cancel...; then if ./salmon is run, I get the same error...; salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000. Thanks in advance for your help.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/112
https://github.com/COMBINE-lab/salmon/issues/112:648,Deployability,install,install,648,"Hi,; I seem to be having problems with installing Salmon on my mac.; I've tried doing this using ; **1. brew install salmon:**; brew install salmon; Updating Homebrew...; ==> Auto-updated Homebrew!; Updated 2 taps (homebrew/core, homebrew/science).; ==> Updated Formulae; homebrew/science/seqan. ==> Installing salmon from homebrew/science; ==> Downloading https://github.com/COMBINE-lab/salmon/archive/v0.7.2.tar.gz; Already downloaded: /Users/sangrim/Library/Caches/Homebrew/salmon-0.7.2.tar.gz; ==> cmake . -DCMAKE_C_FLAGS_RELEASE=-DNDEBUG -DCMAKE_CXX_FLAGS_RELEASE=-DNDEBUG -DCMAKE_INSTALL_PREFIX=/usr/local/Cellar/salmon/0.7.2 -DCMA; ==> make install; 🍺 /usr/local/Cellar/salmon/0.7.2: 6 files, 8.5M, built in 7 minutes 8 seconds; sangrim@C02Q7CT1G8WN:~/bin$> salmon; **salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000**. and also,; **2. compiling from the osx tarball; the installation seemingly succeeds,**; Install the project...; /usr/local/Cellar/cmake/3.7.1/bin/cmake -P cmake_install.cmake; -- Install configuration: """"; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib/pkgconfig; -- Installing: /Users/../bin/salmon-0.7.2/bin/salmon; -- Installing: /Users/../bin/salmon-0.7.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly. Please add /Users/../bin/salmon-0.7.2/bin to your PATH; Please add /Users/../bin/salmon-0.7.2/lib to your DYLD_FALLBACK_LIBRARY_PATH. ...and then make test, hangs...; Running tests...; /usr/local/Cellar/cmake/3.7.1/bin/ctest --force-new-ctest-process ; Test project /Users/maheshsangrithi/bin/salmon-0.7.2/build; Start 1: unit_tests; ........Ctrl+C to cancel...; then if ./salmon is run, I get the same error...; salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000. Thanks in advance for your help.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/112
https://github.com/COMBINE-lab/salmon/issues/112:921,Deployability,install,installation,921,"Hi,; I seem to be having problems with installing Salmon on my mac.; I've tried doing this using ; **1. brew install salmon:**; brew install salmon; Updating Homebrew...; ==> Auto-updated Homebrew!; Updated 2 taps (homebrew/core, homebrew/science).; ==> Updated Formulae; homebrew/science/seqan. ==> Installing salmon from homebrew/science; ==> Downloading https://github.com/COMBINE-lab/salmon/archive/v0.7.2.tar.gz; Already downloaded: /Users/sangrim/Library/Caches/Homebrew/salmon-0.7.2.tar.gz; ==> cmake . -DCMAKE_C_FLAGS_RELEASE=-DNDEBUG -DCMAKE_CXX_FLAGS_RELEASE=-DNDEBUG -DCMAKE_INSTALL_PREFIX=/usr/local/Cellar/salmon/0.7.2 -DCMA; ==> make install; 🍺 /usr/local/Cellar/salmon/0.7.2: 6 files, 8.5M, built in 7 minutes 8 seconds; sangrim@C02Q7CT1G8WN:~/bin$> salmon; **salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000**. and also,; **2. compiling from the osx tarball; the installation seemingly succeeds,**; Install the project...; /usr/local/Cellar/cmake/3.7.1/bin/cmake -P cmake_install.cmake; -- Install configuration: """"; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib/pkgconfig; -- Installing: /Users/../bin/salmon-0.7.2/bin/salmon; -- Installing: /Users/../bin/salmon-0.7.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly. Please add /Users/../bin/salmon-0.7.2/bin to your PATH; Please add /Users/../bin/salmon-0.7.2/lib to your DYLD_FALLBACK_LIBRARY_PATH. ...and then make test, hangs...; Running tests...; /usr/local/Cellar/cmake/3.7.1/bin/ctest --force-new-ctest-process ; Test project /Users/maheshsangrithi/bin/salmon-0.7.2/build; Start 1: unit_tests; ........Ctrl+C to cancel...; then if ./salmon is run, I get the same error...; salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000. Thanks in advance for your help.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/112
https://github.com/COMBINE-lab/salmon/issues/112:957,Deployability,Install,Install,957,"Hi,; I seem to be having problems with installing Salmon on my mac.; I've tried doing this using ; **1. brew install salmon:**; brew install salmon; Updating Homebrew...; ==> Auto-updated Homebrew!; Updated 2 taps (homebrew/core, homebrew/science).; ==> Updated Formulae; homebrew/science/seqan. ==> Installing salmon from homebrew/science; ==> Downloading https://github.com/COMBINE-lab/salmon/archive/v0.7.2.tar.gz; Already downloaded: /Users/sangrim/Library/Caches/Homebrew/salmon-0.7.2.tar.gz; ==> cmake . -DCMAKE_C_FLAGS_RELEASE=-DNDEBUG -DCMAKE_CXX_FLAGS_RELEASE=-DNDEBUG -DCMAKE_INSTALL_PREFIX=/usr/local/Cellar/salmon/0.7.2 -DCMA; ==> make install; 🍺 /usr/local/Cellar/salmon/0.7.2: 6 files, 8.5M, built in 7 minutes 8 seconds; sangrim@C02Q7CT1G8WN:~/bin$> salmon; **salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000**. and also,; **2. compiling from the osx tarball; the installation seemingly succeeds,**; Install the project...; /usr/local/Cellar/cmake/3.7.1/bin/cmake -P cmake_install.cmake; -- Install configuration: """"; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib/pkgconfig; -- Installing: /Users/../bin/salmon-0.7.2/bin/salmon; -- Installing: /Users/../bin/salmon-0.7.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly. Please add /Users/../bin/salmon-0.7.2/bin to your PATH; Please add /Users/../bin/salmon-0.7.2/lib to your DYLD_FALLBACK_LIBRARY_PATH. ...and then make test, hangs...; Running tests...; /usr/local/Cellar/cmake/3.7.1/bin/ctest --force-new-ctest-process ; Test project /Users/maheshsangrithi/bin/salmon-0.7.2/build; Start 1: unit_tests; ........Ctrl+C to cancel...; then if ./salmon is run, I get the same error...; salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000. Thanks in advance for your help.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/112
https://github.com/COMBINE-lab/salmon/issues/112:1048,Deployability,Install,Install,1048,"Hi,; I seem to be having problems with installing Salmon on my mac.; I've tried doing this using ; **1. brew install salmon:**; brew install salmon; Updating Homebrew...; ==> Auto-updated Homebrew!; Updated 2 taps (homebrew/core, homebrew/science).; ==> Updated Formulae; homebrew/science/seqan. ==> Installing salmon from homebrew/science; ==> Downloading https://github.com/COMBINE-lab/salmon/archive/v0.7.2.tar.gz; Already downloaded: /Users/sangrim/Library/Caches/Homebrew/salmon-0.7.2.tar.gz; ==> cmake . -DCMAKE_C_FLAGS_RELEASE=-DNDEBUG -DCMAKE_CXX_FLAGS_RELEASE=-DNDEBUG -DCMAKE_INSTALL_PREFIX=/usr/local/Cellar/salmon/0.7.2 -DCMA; ==> make install; 🍺 /usr/local/Cellar/salmon/0.7.2: 6 files, 8.5M, built in 7 minutes 8 seconds; sangrim@C02Q7CT1G8WN:~/bin$> salmon; **salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000**. and also,; **2. compiling from the osx tarball; the installation seemingly succeeds,**; Install the project...; /usr/local/Cellar/cmake/3.7.1/bin/cmake -P cmake_install.cmake; -- Install configuration: """"; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib/pkgconfig; -- Installing: /Users/../bin/salmon-0.7.2/bin/salmon; -- Installing: /Users/../bin/salmon-0.7.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly. Please add /Users/../bin/salmon-0.7.2/bin to your PATH; Please add /Users/../bin/salmon-0.7.2/lib to your DYLD_FALLBACK_LIBRARY_PATH. ...and then make test, hangs...; Running tests...; /usr/local/Cellar/cmake/3.7.1/bin/ctest --force-new-ctest-process ; Test project /Users/maheshsangrithi/bin/salmon-0.7.2/build; Start 1: unit_tests; ........Ctrl+C to cancel...; then if ./salmon is run, I get the same error...; salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000. Thanks in advance for your help.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/112
https://github.com/COMBINE-lab/salmon/issues/112:1056,Deployability,configurat,configuration,1056,"Hi,; I seem to be having problems with installing Salmon on my mac.; I've tried doing this using ; **1. brew install salmon:**; brew install salmon; Updating Homebrew...; ==> Auto-updated Homebrew!; Updated 2 taps (homebrew/core, homebrew/science).; ==> Updated Formulae; homebrew/science/seqan. ==> Installing salmon from homebrew/science; ==> Downloading https://github.com/COMBINE-lab/salmon/archive/v0.7.2.tar.gz; Already downloaded: /Users/sangrim/Library/Caches/Homebrew/salmon-0.7.2.tar.gz; ==> cmake . -DCMAKE_C_FLAGS_RELEASE=-DNDEBUG -DCMAKE_CXX_FLAGS_RELEASE=-DNDEBUG -DCMAKE_INSTALL_PREFIX=/usr/local/Cellar/salmon/0.7.2 -DCMA; ==> make install; 🍺 /usr/local/Cellar/salmon/0.7.2: 6 files, 8.5M, built in 7 minutes 8 seconds; sangrim@C02Q7CT1G8WN:~/bin$> salmon; **salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000**. and also,; **2. compiling from the osx tarball; the installation seemingly succeeds,**; Install the project...; /usr/local/Cellar/cmake/3.7.1/bin/cmake -P cmake_install.cmake; -- Install configuration: """"; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib/pkgconfig; -- Installing: /Users/../bin/salmon-0.7.2/bin/salmon; -- Installing: /Users/../bin/salmon-0.7.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly. Please add /Users/../bin/salmon-0.7.2/bin to your PATH; Please add /Users/../bin/salmon-0.7.2/lib to your DYLD_FALLBACK_LIBRARY_PATH. ...and then make test, hangs...; Running tests...; /usr/local/Cellar/cmake/3.7.1/bin/ctest --force-new-ctest-process ; Test project /Users/maheshsangrithi/bin/salmon-0.7.2/build; Start 1: unit_tests; ........Ctrl+C to cancel...; then if ./salmon is run, I get the same error...; salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000. Thanks in advance for your help.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/112
https://github.com/COMBINE-lab/salmon/issues/112:1182,Deployability,Install,Installing,1182,"Hi,; I seem to be having problems with installing Salmon on my mac.; I've tried doing this using ; **1. brew install salmon:**; brew install salmon; Updating Homebrew...; ==> Auto-updated Homebrew!; Updated 2 taps (homebrew/core, homebrew/science).; ==> Updated Formulae; homebrew/science/seqan. ==> Installing salmon from homebrew/science; ==> Downloading https://github.com/COMBINE-lab/salmon/archive/v0.7.2.tar.gz; Already downloaded: /Users/sangrim/Library/Caches/Homebrew/salmon-0.7.2.tar.gz; ==> cmake . -DCMAKE_C_FLAGS_RELEASE=-DNDEBUG -DCMAKE_CXX_FLAGS_RELEASE=-DNDEBUG -DCMAKE_INSTALL_PREFIX=/usr/local/Cellar/salmon/0.7.2 -DCMA; ==> make install; 🍺 /usr/local/Cellar/salmon/0.7.2: 6 files, 8.5M, built in 7 minutes 8 seconds; sangrim@C02Q7CT1G8WN:~/bin$> salmon; **salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000**. and also,; **2. compiling from the osx tarball; the installation seemingly succeeds,**; Install the project...; /usr/local/Cellar/cmake/3.7.1/bin/cmake -P cmake_install.cmake; -- Install configuration: """"; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib/pkgconfig; -- Installing: /Users/../bin/salmon-0.7.2/bin/salmon; -- Installing: /Users/../bin/salmon-0.7.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly. Please add /Users/../bin/salmon-0.7.2/bin to your PATH; Please add /Users/../bin/salmon-0.7.2/lib to your DYLD_FALLBACK_LIBRARY_PATH. ...and then make test, hangs...; Running tests...; /usr/local/Cellar/cmake/3.7.1/bin/ctest --force-new-ctest-process ; Test project /Users/maheshsangrithi/bin/salmon-0.7.2/build; Start 1: unit_tests; ........Ctrl+C to cancel...; then if ./salmon is run, I get the same error...; salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000. Thanks in advance for your help.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/112
https://github.com/COMBINE-lab/salmon/issues/112:1236,Deployability,Install,Installing,1236,"Hi,; I seem to be having problems with installing Salmon on my mac.; I've tried doing this using ; **1. brew install salmon:**; brew install salmon; Updating Homebrew...; ==> Auto-updated Homebrew!; Updated 2 taps (homebrew/core, homebrew/science).; ==> Updated Formulae; homebrew/science/seqan. ==> Installing salmon from homebrew/science; ==> Downloading https://github.com/COMBINE-lab/salmon/archive/v0.7.2.tar.gz; Already downloaded: /Users/sangrim/Library/Caches/Homebrew/salmon-0.7.2.tar.gz; ==> cmake . -DCMAKE_C_FLAGS_RELEASE=-DNDEBUG -DCMAKE_CXX_FLAGS_RELEASE=-DNDEBUG -DCMAKE_INSTALL_PREFIX=/usr/local/Cellar/salmon/0.7.2 -DCMA; ==> make install; 🍺 /usr/local/Cellar/salmon/0.7.2: 6 files, 8.5M, built in 7 minutes 8 seconds; sangrim@C02Q7CT1G8WN:~/bin$> salmon; **salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000**. and also,; **2. compiling from the osx tarball; the installation seemingly succeeds,**; Install the project...; /usr/local/Cellar/cmake/3.7.1/bin/cmake -P cmake_install.cmake; -- Install configuration: """"; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib/pkgconfig; -- Installing: /Users/../bin/salmon-0.7.2/bin/salmon; -- Installing: /Users/../bin/salmon-0.7.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly. Please add /Users/../bin/salmon-0.7.2/bin to your PATH; Please add /Users/../bin/salmon-0.7.2/lib to your DYLD_FALLBACK_LIBRARY_PATH. ...and then make test, hangs...; Running tests...; /usr/local/Cellar/cmake/3.7.1/bin/ctest --force-new-ctest-process ; Test project /Users/maheshsangrithi/bin/salmon-0.7.2/build; Start 1: unit_tests; ........Ctrl+C to cancel...; then if ./salmon is run, I get the same error...; salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000. Thanks in advance for your help.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/112
https://github.com/COMBINE-lab/salmon/issues/112:1297,Deployability,Install,Installation,1297,"Hi,; I seem to be having problems with installing Salmon on my mac.; I've tried doing this using ; **1. brew install salmon:**; brew install salmon; Updating Homebrew...; ==> Auto-updated Homebrew!; Updated 2 taps (homebrew/core, homebrew/science).; ==> Updated Formulae; homebrew/science/seqan. ==> Installing salmon from homebrew/science; ==> Downloading https://github.com/COMBINE-lab/salmon/archive/v0.7.2.tar.gz; Already downloaded: /Users/sangrim/Library/Caches/Homebrew/salmon-0.7.2.tar.gz; ==> cmake . -DCMAKE_C_FLAGS_RELEASE=-DNDEBUG -DCMAKE_CXX_FLAGS_RELEASE=-DNDEBUG -DCMAKE_INSTALL_PREFIX=/usr/local/Cellar/salmon/0.7.2 -DCMA; ==> make install; 🍺 /usr/local/Cellar/salmon/0.7.2: 6 files, 8.5M, built in 7 minutes 8 seconds; sangrim@C02Q7CT1G8WN:~/bin$> salmon; **salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000**. and also,; **2. compiling from the osx tarball; the installation seemingly succeeds,**; Install the project...; /usr/local/Cellar/cmake/3.7.1/bin/cmake -P cmake_install.cmake; -- Install configuration: """"; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib/pkgconfig; -- Installing: /Users/../bin/salmon-0.7.2/bin/salmon; -- Installing: /Users/../bin/salmon-0.7.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly. Please add /Users/../bin/salmon-0.7.2/bin to your PATH; Please add /Users/../bin/salmon-0.7.2/lib to your DYLD_FALLBACK_LIBRARY_PATH. ...and then make test, hangs...; Running tests...; /usr/local/Cellar/cmake/3.7.1/bin/ctest --force-new-ctest-process ; Test project /Users/maheshsangrithi/bin/salmon-0.7.2/build; Start 1: unit_tests; ........Ctrl+C to cancel...; then if ./salmon is run, I get the same error...; salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000. Thanks in advance for your help.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/112
https://github.com/COMBINE-lab/salmon/issues/112:1056,Modifiability,config,configuration,1056,"Hi,; I seem to be having problems with installing Salmon on my mac.; I've tried doing this using ; **1. brew install salmon:**; brew install salmon; Updating Homebrew...; ==> Auto-updated Homebrew!; Updated 2 taps (homebrew/core, homebrew/science).; ==> Updated Formulae; homebrew/science/seqan. ==> Installing salmon from homebrew/science; ==> Downloading https://github.com/COMBINE-lab/salmon/archive/v0.7.2.tar.gz; Already downloaded: /Users/sangrim/Library/Caches/Homebrew/salmon-0.7.2.tar.gz; ==> cmake . -DCMAKE_C_FLAGS_RELEASE=-DNDEBUG -DCMAKE_CXX_FLAGS_RELEASE=-DNDEBUG -DCMAKE_INSTALL_PREFIX=/usr/local/Cellar/salmon/0.7.2 -DCMA; ==> make install; 🍺 /usr/local/Cellar/salmon/0.7.2: 6 files, 8.5M, built in 7 minutes 8 seconds; sangrim@C02Q7CT1G8WN:~/bin$> salmon; **salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000**. and also,; **2. compiling from the osx tarball; the installation seemingly succeeds,**; Install the project...; /usr/local/Cellar/cmake/3.7.1/bin/cmake -P cmake_install.cmake; -- Install configuration: """"; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib/pkgconfig; -- Installing: /Users/../bin/salmon-0.7.2/bin/salmon; -- Installing: /Users/../bin/salmon-0.7.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly. Please add /Users/../bin/salmon-0.7.2/bin to your PATH; Please add /Users/../bin/salmon-0.7.2/lib to your DYLD_FALLBACK_LIBRARY_PATH. ...and then make test, hangs...; Running tests...; /usr/local/Cellar/cmake/3.7.1/bin/ctest --force-new-ctest-process ; Test project /Users/maheshsangrithi/bin/salmon-0.7.2/build; Start 1: unit_tests; ........Ctrl+C to cancel...; then if ./salmon is run, I get the same error...; salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000. Thanks in advance for your help.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/112
https://github.com/COMBINE-lab/salmon/issues/112:461,Performance,Cache,Caches,461,"Hi,; I seem to be having problems with installing Salmon on my mac.; I've tried doing this using ; **1. brew install salmon:**; brew install salmon; Updating Homebrew...; ==> Auto-updated Homebrew!; Updated 2 taps (homebrew/core, homebrew/science).; ==> Updated Formulae; homebrew/science/seqan. ==> Installing salmon from homebrew/science; ==> Downloading https://github.com/COMBINE-lab/salmon/archive/v0.7.2.tar.gz; Already downloaded: /Users/sangrim/Library/Caches/Homebrew/salmon-0.7.2.tar.gz; ==> cmake . -DCMAKE_C_FLAGS_RELEASE=-DNDEBUG -DCMAKE_CXX_FLAGS_RELEASE=-DNDEBUG -DCMAKE_INSTALL_PREFIX=/usr/local/Cellar/salmon/0.7.2 -DCMA; ==> make install; 🍺 /usr/local/Cellar/salmon/0.7.2: 6 files, 8.5M, built in 7 minutes 8 seconds; sangrim@C02Q7CT1G8WN:~/bin$> salmon; **salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000**. and also,; **2. compiling from the osx tarball; the installation seemingly succeeds,**; Install the project...; /usr/local/Cellar/cmake/3.7.1/bin/cmake -P cmake_install.cmake; -- Install configuration: """"; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib/pkgconfig; -- Installing: /Users/../bin/salmon-0.7.2/bin/salmon; -- Installing: /Users/../bin/salmon-0.7.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly. Please add /Users/../bin/salmon-0.7.2/bin to your PATH; Please add /Users/../bin/salmon-0.7.2/lib to your DYLD_FALLBACK_LIBRARY_PATH. ...and then make test, hangs...; Running tests...; /usr/local/Cellar/cmake/3.7.1/bin/ctest --force-new-ctest-process ; Test project /Users/maheshsangrithi/bin/salmon-0.7.2/build; Start 1: unit_tests; ........Ctrl+C to cancel...; then if ./salmon is run, I get the same error...; salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000. Thanks in advance for your help.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/112
https://github.com/COMBINE-lab/salmon/issues/112:1523,Testability,test,test,1523,"Hi,; I seem to be having problems with installing Salmon on my mac.; I've tried doing this using ; **1. brew install salmon:**; brew install salmon; Updating Homebrew...; ==> Auto-updated Homebrew!; Updated 2 taps (homebrew/core, homebrew/science).; ==> Updated Formulae; homebrew/science/seqan. ==> Installing salmon from homebrew/science; ==> Downloading https://github.com/COMBINE-lab/salmon/archive/v0.7.2.tar.gz; Already downloaded: /Users/sangrim/Library/Caches/Homebrew/salmon-0.7.2.tar.gz; ==> cmake . -DCMAKE_C_FLAGS_RELEASE=-DNDEBUG -DCMAKE_CXX_FLAGS_RELEASE=-DNDEBUG -DCMAKE_INSTALL_PREFIX=/usr/local/Cellar/salmon/0.7.2 -DCMA; ==> make install; 🍺 /usr/local/Cellar/salmon/0.7.2: 6 files, 8.5M, built in 7 minutes 8 seconds; sangrim@C02Q7CT1G8WN:~/bin$> salmon; **salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000**. and also,; **2. compiling from the osx tarball; the installation seemingly succeeds,**; Install the project...; /usr/local/Cellar/cmake/3.7.1/bin/cmake -P cmake_install.cmake; -- Install configuration: """"; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib/pkgconfig; -- Installing: /Users/../bin/salmon-0.7.2/bin/salmon; -- Installing: /Users/../bin/salmon-0.7.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly. Please add /Users/../bin/salmon-0.7.2/bin to your PATH; Please add /Users/../bin/salmon-0.7.2/lib to your DYLD_FALLBACK_LIBRARY_PATH. ...and then make test, hangs...; Running tests...; /usr/local/Cellar/cmake/3.7.1/bin/ctest --force-new-ctest-process ; Test project /Users/maheshsangrithi/bin/salmon-0.7.2/build; Start 1: unit_tests; ........Ctrl+C to cancel...; then if ./salmon is run, I get the same error...; salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000. Thanks in advance for your help.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/112
https://github.com/COMBINE-lab/salmon/issues/112:1547,Testability,test,tests,1547,"Hi,; I seem to be having problems with installing Salmon on my mac.; I've tried doing this using ; **1. brew install salmon:**; brew install salmon; Updating Homebrew...; ==> Auto-updated Homebrew!; Updated 2 taps (homebrew/core, homebrew/science).; ==> Updated Formulae; homebrew/science/seqan. ==> Installing salmon from homebrew/science; ==> Downloading https://github.com/COMBINE-lab/salmon/archive/v0.7.2.tar.gz; Already downloaded: /Users/sangrim/Library/Caches/Homebrew/salmon-0.7.2.tar.gz; ==> cmake . -DCMAKE_C_FLAGS_RELEASE=-DNDEBUG -DCMAKE_CXX_FLAGS_RELEASE=-DNDEBUG -DCMAKE_INSTALL_PREFIX=/usr/local/Cellar/salmon/0.7.2 -DCMA; ==> make install; 🍺 /usr/local/Cellar/salmon/0.7.2: 6 files, 8.5M, built in 7 minutes 8 seconds; sangrim@C02Q7CT1G8WN:~/bin$> salmon; **salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000**. and also,; **2. compiling from the osx tarball; the installation seemingly succeeds,**; Install the project...; /usr/local/Cellar/cmake/3.7.1/bin/cmake -P cmake_install.cmake; -- Install configuration: """"; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib/pkgconfig; -- Installing: /Users/../bin/salmon-0.7.2/bin/salmon; -- Installing: /Users/../bin/salmon-0.7.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly. Please add /Users/../bin/salmon-0.7.2/bin to your PATH; Please add /Users/../bin/salmon-0.7.2/lib to your DYLD_FALLBACK_LIBRARY_PATH. ...and then make test, hangs...; Running tests...; /usr/local/Cellar/cmake/3.7.1/bin/ctest --force-new-ctest-process ; Test project /Users/maheshsangrithi/bin/salmon-0.7.2/build; Start 1: unit_tests; ........Ctrl+C to cancel...; then if ./salmon is run, I get the same error...; salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000. Thanks in advance for your help.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/112
https://github.com/COMBINE-lab/salmon/issues/112:1625,Testability,Test,Test,1625,"Hi,; I seem to be having problems with installing Salmon on my mac.; I've tried doing this using ; **1. brew install salmon:**; brew install salmon; Updating Homebrew...; ==> Auto-updated Homebrew!; Updated 2 taps (homebrew/core, homebrew/science).; ==> Updated Formulae; homebrew/science/seqan. ==> Installing salmon from homebrew/science; ==> Downloading https://github.com/COMBINE-lab/salmon/archive/v0.7.2.tar.gz; Already downloaded: /Users/sangrim/Library/Caches/Homebrew/salmon-0.7.2.tar.gz; ==> cmake . -DCMAKE_C_FLAGS_RELEASE=-DNDEBUG -DCMAKE_CXX_FLAGS_RELEASE=-DNDEBUG -DCMAKE_INSTALL_PREFIX=/usr/local/Cellar/salmon/0.7.2 -DCMA; ==> make install; 🍺 /usr/local/Cellar/salmon/0.7.2: 6 files, 8.5M, built in 7 minutes 8 seconds; sangrim@C02Q7CT1G8WN:~/bin$> salmon; **salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000**. and also,; **2. compiling from the osx tarball; the installation seemingly succeeds,**; Install the project...; /usr/local/Cellar/cmake/3.7.1/bin/cmake -P cmake_install.cmake; -- Install configuration: """"; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib/pkgconfig; -- Installing: /Users/../bin/salmon-0.7.2/bin/salmon; -- Installing: /Users/../bin/salmon-0.7.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly. Please add /Users/../bin/salmon-0.7.2/bin to your PATH; Please add /Users/../bin/salmon-0.7.2/lib to your DYLD_FALLBACK_LIBRARY_PATH. ...and then make test, hangs...; Running tests...; /usr/local/Cellar/cmake/3.7.1/bin/ctest --force-new-ctest-process ; Test project /Users/maheshsangrithi/bin/salmon-0.7.2/build; Start 1: unit_tests; ........Ctrl+C to cancel...; then if ./salmon is run, I get the same error...; salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000. Thanks in advance for your help.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/112
https://github.com/COMBINE-lab/salmon/issues/113:277,Availability,error,error,277,"I have single ended reads in a fastq file which I aligned with bowtie against the transcriptome. Now I am running the following command:; ./bin/salmon quant -t ../Data/DRR029379.fq -p 6 -l A -a ../Data/DRR029379_after_bowtie.bam -o ../Data/DRR029379_after_salmon; and this the error I am getting. Version Info: This is the most recent version of Salmon.; # salmon (alignment-based) v0.7.2; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { ../Data/DRR029379.fq }; # [ threads ] => { 6 }; # [ libType ] => { A }; # [ alignments ] => { ../Data/DRR029379_after_bowtie.bam }; # [ output ] => { ../Data/DRR029379_after_salmon }; Error: @RG lines are at odds with binary encoded reference data; ============; Exception : [ERROR: Failed to open file ../Data/DRR029379_after_bowtie.bam, exiting!; ]; ============; ./bin/salmon alignment-quant was invoked improperly.; For usage information, try ./bin/salmon quant --help-alignments; Exiting. I cannot figure out anything from this message. Please help. Thank you",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/113
https://github.com/COMBINE-lab/salmon/issues/113:642,Availability,Error,Error,642,"I have single ended reads in a fastq file which I aligned with bowtie against the transcriptome. Now I am running the following command:; ./bin/salmon quant -t ../Data/DRR029379.fq -p 6 -l A -a ../Data/DRR029379_after_bowtie.bam -o ../Data/DRR029379_after_salmon; and this the error I am getting. Version Info: This is the most recent version of Salmon.; # salmon (alignment-based) v0.7.2; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { ../Data/DRR029379.fq }; # [ threads ] => { 6 }; # [ libType ] => { A }; # [ alignments ] => { ../Data/DRR029379_after_bowtie.bam }; # [ output ] => { ../Data/DRR029379_after_salmon }; Error: @RG lines are at odds with binary encoded reference data; ============; Exception : [ERROR: Failed to open file ../Data/DRR029379_after_bowtie.bam, exiting!; ]; ============; ./bin/salmon alignment-quant was invoked improperly.; For usage information, try ./bin/salmon quant --help-alignments; Exiting. I cannot figure out anything from this message. Please help. Thank you",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/113
https://github.com/COMBINE-lab/salmon/issues/113:734,Availability,ERROR,ERROR,734,"I have single ended reads in a fastq file which I aligned with bowtie against the transcriptome. Now I am running the following command:; ./bin/salmon quant -t ../Data/DRR029379.fq -p 6 -l A -a ../Data/DRR029379_after_bowtie.bam -o ../Data/DRR029379_after_salmon; and this the error I am getting. Version Info: This is the most recent version of Salmon.; # salmon (alignment-based) v0.7.2; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { ../Data/DRR029379.fq }; # [ threads ] => { 6 }; # [ libType ] => { A }; # [ alignments ] => { ../Data/DRR029379_after_bowtie.bam }; # [ output ] => { ../Data/DRR029379_after_salmon }; Error: @RG lines are at odds with binary encoded reference data; ============; Exception : [ERROR: Failed to open file ../Data/DRR029379_after_bowtie.bam, exiting!; ]; ============; ./bin/salmon alignment-quant was invoked improperly.; For usage information, try ./bin/salmon quant --help-alignments; Exiting. I cannot figure out anything from this message. Please help. Thank you",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/113
https://github.com/COMBINE-lab/salmon/issues/113:991,Integrability,message,message,991,"I have single ended reads in a fastq file which I aligned with bowtie against the transcriptome. Now I am running the following command:; ./bin/salmon quant -t ../Data/DRR029379.fq -p 6 -l A -a ../Data/DRR029379_after_bowtie.bam -o ../Data/DRR029379_after_salmon; and this the error I am getting. Version Info: This is the most recent version of Salmon.; # salmon (alignment-based) v0.7.2; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { ../Data/DRR029379.fq }; # [ threads ] => { 6 }; # [ libType ] => { A }; # [ alignments ] => { ../Data/DRR029379_after_bowtie.bam }; # [ output ] => { ../Data/DRR029379_after_salmon }; Error: @RG lines are at odds with binary encoded reference data; ============; Exception : [ERROR: Failed to open file ../Data/DRR029379_after_bowtie.bam, exiting!; ]; ============; ./bin/salmon alignment-quant was invoked improperly.; For usage information, try ./bin/salmon quant --help-alignments; Exiting. I cannot figure out anything from this message. Please help. Thank you",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/113
https://github.com/COMBINE-lab/salmon/issues/114:58,Safety,detect,detecting,58,"Hi Rob and team,. the geneMap option wasn't automatically detecting my gff file as a transcript->gene mapping in the correct format, instead treating it as a simple mapping and yielding interestingly a single result in `quant.gene.sf`, ""UTR"" (which lies in column 3 of the GFF; unclear to me why it didn't pull from column 2 instead, yielding gene names ""Ensembl"" and ""Havana""). Anyway, I found that Salmon is really only matching on the extension `.gtf` , **instead of `.gtf or .gff` as the help text indicates** :; ```; -g [ --geneMap ] arg File containing a mapping of; transcripts to genes. If this file is; provided Salmon will output both; quant.sf and quant.genes.sf files,; where the latter contains aggregated; gene-level abundance estimates. The; transcript to gene mapping should be; provided as either a GTF file, or a in; a simple tab-delimited format where; each line contains the name of a; transcript and the gene to which it; belongs separated by a tab. The; extension of the file is used to; determine how the file should be; parsed. Files ending in '.gtf' or; '.gff' are assumed to be in GTF format;; files with any other extension are; assumed to be in the simple format. ```; The offending comparison in `SalmonUtils.cpp` is here:; https://github.com/COMBINE-lab/salmon/blob/335c34b196205c6aebe4ddcc12c380eb47f5043a/src/SalmonUtils.cpp#L2241. While I have brought this to attention, it would be nice to also check for the extension `gff3` as well, since this is what Gencode supplies (and many people tend to append the `3` to the extension in practice). Kind regards and thanks for doing great science",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/114
https://github.com/COMBINE-lab/salmon/issues/114:158,Usability,simpl,simple,158,"Hi Rob and team,. the geneMap option wasn't automatically detecting my gff file as a transcript->gene mapping in the correct format, instead treating it as a simple mapping and yielding interestingly a single result in `quant.gene.sf`, ""UTR"" (which lies in column 3 of the GFF; unclear to me why it didn't pull from column 2 instead, yielding gene names ""Ensembl"" and ""Havana""). Anyway, I found that Salmon is really only matching on the extension `.gtf` , **instead of `.gtf or .gff` as the help text indicates** :; ```; -g [ --geneMap ] arg File containing a mapping of; transcripts to genes. If this file is; provided Salmon will output both; quant.sf and quant.genes.sf files,; where the latter contains aggregated; gene-level abundance estimates. The; transcript to gene mapping should be; provided as either a GTF file, or a in; a simple tab-delimited format where; each line contains the name of a; transcript and the gene to which it; belongs separated by a tab. The; extension of the file is used to; determine how the file should be; parsed. Files ending in '.gtf' or; '.gff' are assumed to be in GTF format;; files with any other extension are; assumed to be in the simple format. ```; The offending comparison in `SalmonUtils.cpp` is here:; https://github.com/COMBINE-lab/salmon/blob/335c34b196205c6aebe4ddcc12c380eb47f5043a/src/SalmonUtils.cpp#L2241. While I have brought this to attention, it would be nice to also check for the extension `gff3` as well, since this is what Gencode supplies (and many people tend to append the `3` to the extension in practice). Kind regards and thanks for doing great science",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/114
https://github.com/COMBINE-lab/salmon/issues/114:837,Usability,simpl,simple,837,"Hi Rob and team,. the geneMap option wasn't automatically detecting my gff file as a transcript->gene mapping in the correct format, instead treating it as a simple mapping and yielding interestingly a single result in `quant.gene.sf`, ""UTR"" (which lies in column 3 of the GFF; unclear to me why it didn't pull from column 2 instead, yielding gene names ""Ensembl"" and ""Havana""). Anyway, I found that Salmon is really only matching on the extension `.gtf` , **instead of `.gtf or .gff` as the help text indicates** :; ```; -g [ --geneMap ] arg File containing a mapping of; transcripts to genes. If this file is; provided Salmon will output both; quant.sf and quant.genes.sf files,; where the latter contains aggregated; gene-level abundance estimates. The; transcript to gene mapping should be; provided as either a GTF file, or a in; a simple tab-delimited format where; each line contains the name of a; transcript and the gene to which it; belongs separated by a tab. The; extension of the file is used to; determine how the file should be; parsed. Files ending in '.gtf' or; '.gff' are assumed to be in GTF format;; files with any other extension are; assumed to be in the simple format. ```; The offending comparison in `SalmonUtils.cpp` is here:; https://github.com/COMBINE-lab/salmon/blob/335c34b196205c6aebe4ddcc12c380eb47f5043a/src/SalmonUtils.cpp#L2241. While I have brought this to attention, it would be nice to also check for the extension `gff3` as well, since this is what Gencode supplies (and many people tend to append the `3` to the extension in practice). Kind regards and thanks for doing great science",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/114
https://github.com/COMBINE-lab/salmon/issues/114:1177,Usability,simpl,simple,1177,"Hi Rob and team,. the geneMap option wasn't automatically detecting my gff file as a transcript->gene mapping in the correct format, instead treating it as a simple mapping and yielding interestingly a single result in `quant.gene.sf`, ""UTR"" (which lies in column 3 of the GFF; unclear to me why it didn't pull from column 2 instead, yielding gene names ""Ensembl"" and ""Havana""). Anyway, I found that Salmon is really only matching on the extension `.gtf` , **instead of `.gtf or .gff` as the help text indicates** :; ```; -g [ --geneMap ] arg File containing a mapping of; transcripts to genes. If this file is; provided Salmon will output both; quant.sf and quant.genes.sf files,; where the latter contains aggregated; gene-level abundance estimates. The; transcript to gene mapping should be; provided as either a GTF file, or a in; a simple tab-delimited format where; each line contains the name of a; transcript and the gene to which it; belongs separated by a tab. The; extension of the file is used to; determine how the file should be; parsed. Files ending in '.gtf' or; '.gff' are assumed to be in GTF format;; files with any other extension are; assumed to be in the simple format. ```; The offending comparison in `SalmonUtils.cpp` is here:; https://github.com/COMBINE-lab/salmon/blob/335c34b196205c6aebe4ddcc12c380eb47f5043a/src/SalmonUtils.cpp#L2241. While I have brought this to attention, it would be nice to also check for the extension `gff3` as well, since this is what Gencode supplies (and many people tend to append the `3` to the extension in practice). Kind regards and thanks for doing great science",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/114
https://github.com/COMBINE-lab/salmon/issues/117:79,Availability,error,error,79,"Hi,. I was able to build and install salmon on my mac, but it's giving me this error when I try to run it:. salmon; dyld: Symbol not found: __ZNSs4_Rep20_S_empty_rep_storageE; Referenced from: /usr/local/bin/salmon; Expected in: flat namespace; in /usr/local/bin/salmon; Trace/BPT trap: 5. I have the env vars set:; DYLD_FALLBACK_LIBRARY_PATH=/usr/local/lib; DYLD_LIBRARY_PATH=/usr/local/lib. but it's still not finding something it needs. Thanks in advance for any help!. Note, I tried using the pre-packaged binary and had a similar issue:. salmon; wme18-ed2:bin bhaas$ ; wme18-ed2:bin bhaas$ ./salmon ; dyld: lazy symbol binding failed: Symbol not found: _os_unfair_lock_lock; Referenced from: /Users/bhaas/BioIfx/SALMON/Salmon-v0.8.0_macOS_10.12/bin/./salmon (which was built for Mac OS X 10.12); Expected in: /usr/lib/libSystem.B.dylib. dyld: Symbol not found: _os_unfair_lock_lock; Referenced from: /Users/bhaas/BioIfx/SALMON/Salmon-v0.8.0_macOS_10.12/bin/./salmon (which was built for Mac OS X 10.12); Expected in: /usr/lib/libSystem.B.dylib. Trace/BPT trap: 5. I",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/117
https://github.com/COMBINE-lab/salmon/issues/117:29,Deployability,install,install,29,"Hi,. I was able to build and install salmon on my mac, but it's giving me this error when I try to run it:. salmon; dyld: Symbol not found: __ZNSs4_Rep20_S_empty_rep_storageE; Referenced from: /usr/local/bin/salmon; Expected in: flat namespace; in /usr/local/bin/salmon; Trace/BPT trap: 5. I have the env vars set:; DYLD_FALLBACK_LIBRARY_PATH=/usr/local/lib; DYLD_LIBRARY_PATH=/usr/local/lib. but it's still not finding something it needs. Thanks in advance for any help!. Note, I tried using the pre-packaged binary and had a similar issue:. salmon; wme18-ed2:bin bhaas$ ; wme18-ed2:bin bhaas$ ./salmon ; dyld: lazy symbol binding failed: Symbol not found: _os_unfair_lock_lock; Referenced from: /Users/bhaas/BioIfx/SALMON/Salmon-v0.8.0_macOS_10.12/bin/./salmon (which was built for Mac OS X 10.12); Expected in: /usr/lib/libSystem.B.dylib. dyld: Symbol not found: _os_unfair_lock_lock; Referenced from: /Users/bhaas/BioIfx/SALMON/Salmon-v0.8.0_macOS_10.12/bin/./salmon (which was built for Mac OS X 10.12); Expected in: /usr/lib/libSystem.B.dylib. Trace/BPT trap: 5. I",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/117
https://github.com/COMBINE-lab/salmon/issues/119:46,Availability,error,errors,46,"Hi Rob and team. I am obtaining the following errors in some of my samples but not all and I cannot figure out what is happening. I am using salmon to see if specific genes are present (apart from a general quantification). I. In order to do that I run the following code:; Code (example):; `salmon quant -l A -i /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/spikein/Flox5YFP0_B07_R/index -p 6 -o /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/bcbiotx/tmpTest2/quant -1 <(gzip -cd /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/trimmed/Flox5YFP0_B07.R1_Flox5YFP0_B07_R.trimmed.fastq.gz) -2 <(gzip -cd /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/trimmed/Flox5YFP0_B07.R2_Flox5YFP0_B07_R.trimmed.fastq.gz); `; Some samples finish the quantification while others return the error. Some samples should have the genes while others not. The reads are 25 long and there is variability in the total number of reads among all the samples. . Please, indicate me what other information you may need. Thank you in advance,. Best,. Victor. ERROR:; `[2017-02-09 13:51:38.119] [jointLog] [info] parsing read library format; [2017-02-09 13:51:38.119] [jointLog] [info] There is 1 library.; [2017-02-09 13:51:38.559] [stderrLog] [info] Loading Suffix Array; [2017-02-09 13:51:38.560] [stderrLog] [info] Loading Transcript Info; [2017-02-09 13:51:38.561] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-02-09 13:51:38.562] [stderrLog] [info] There were 2 set bits in the bit array; [2017-02-09 13:51:38.562] [stderrLog] [info] Computing transcript lengths; [2017-02-09 13:51:38.562] [stderrLog] [info] Waiting to finish loading hash; [2017-02-09 13:51:38.562] [stderrLog] [info] Done loading index; [2017-02-09 13:51:38.557] [jointLog] [info] Loading Quasi index; [2017-02-09 13:51:38.558] [jointLog] [info] Loading 32-bit quasi index; [2017-02-09 13:51:38.562] [jointLog] [info] done; processed 3500000 fragmentsjointLog] [info] Index contained 2 targets; hits: 0, hits per frag: 0; [2017-02-09 13:51:48.488] [",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/119
https://github.com/COMBINE-lab/salmon/issues/119:771,Availability,error,error,771,"Hi Rob and team. I am obtaining the following errors in some of my samples but not all and I cannot figure out what is happening. I am using salmon to see if specific genes are present (apart from a general quantification). I. In order to do that I run the following code:; Code (example):; `salmon quant -l A -i /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/spikein/Flox5YFP0_B07_R/index -p 6 -o /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/bcbiotx/tmpTest2/quant -1 <(gzip -cd /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/trimmed/Flox5YFP0_B07.R1_Flox5YFP0_B07_R.trimmed.fastq.gz) -2 <(gzip -cd /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/trimmed/Flox5YFP0_B07.R2_Flox5YFP0_B07_R.trimmed.fastq.gz); `; Some samples finish the quantification while others return the error. Some samples should have the genes while others not. The reads are 25 long and there is variability in the total number of reads among all the samples. . Please, indicate me what other information you may need. Thank you in advance,. Best,. Victor. ERROR:; `[2017-02-09 13:51:38.119] [jointLog] [info] parsing read library format; [2017-02-09 13:51:38.119] [jointLog] [info] There is 1 library.; [2017-02-09 13:51:38.559] [stderrLog] [info] Loading Suffix Array; [2017-02-09 13:51:38.560] [stderrLog] [info] Loading Transcript Info; [2017-02-09 13:51:38.561] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-02-09 13:51:38.562] [stderrLog] [info] There were 2 set bits in the bit array; [2017-02-09 13:51:38.562] [stderrLog] [info] Computing transcript lengths; [2017-02-09 13:51:38.562] [stderrLog] [info] Waiting to finish loading hash; [2017-02-09 13:51:38.562] [stderrLog] [info] Done loading index; [2017-02-09 13:51:38.557] [jointLog] [info] Loading Quasi index; [2017-02-09 13:51:38.558] [jointLog] [info] Loading 32-bit quasi index; [2017-02-09 13:51:38.562] [jointLog] [info] done; processed 3500000 fragmentsjointLog] [info] Index contained 2 targets; hits: 0, hits per frag: 0; [2017-02-09 13:51:48.488] [",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/119
https://github.com/COMBINE-lab/salmon/issues/119:1027,Availability,ERROR,ERROR,1027,"wing errors in some of my samples but not all and I cannot figure out what is happening. I am using salmon to see if specific genes are present (apart from a general quantification). I. In order to do that I run the following code:; Code (example):; `salmon quant -l A -i /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/spikein/Flox5YFP0_B07_R/index -p 6 -o /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/bcbiotx/tmpTest2/quant -1 <(gzip -cd /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/trimmed/Flox5YFP0_B07.R1_Flox5YFP0_B07_R.trimmed.fastq.gz) -2 <(gzip -cd /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/trimmed/Flox5YFP0_B07.R2_Flox5YFP0_B07_R.trimmed.fastq.gz); `; Some samples finish the quantification while others return the error. Some samples should have the genes while others not. The reads are 25 long and there is variability in the total number of reads among all the samples. . Please, indicate me what other information you may need. Thank you in advance,. Best,. Victor. ERROR:; `[2017-02-09 13:51:38.119] [jointLog] [info] parsing read library format; [2017-02-09 13:51:38.119] [jointLog] [info] There is 1 library.; [2017-02-09 13:51:38.559] [stderrLog] [info] Loading Suffix Array; [2017-02-09 13:51:38.560] [stderrLog] [info] Loading Transcript Info; [2017-02-09 13:51:38.561] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-02-09 13:51:38.562] [stderrLog] [info] There were 2 set bits in the bit array; [2017-02-09 13:51:38.562] [stderrLog] [info] Computing transcript lengths; [2017-02-09 13:51:38.562] [stderrLog] [info] Waiting to finish loading hash; [2017-02-09 13:51:38.562] [stderrLog] [info] Done loading index; [2017-02-09 13:51:38.557] [jointLog] [info] Loading Quasi index; [2017-02-09 13:51:38.558] [jointLog] [info] Loading 32-bit quasi index; [2017-02-09 13:51:38.562] [jointLog] [info] done; processed 3500000 fragmentsjointLog] [info] Index contained 2 targets; hits: 0, hits per frag: 0; [2017-02-09 13:51:48.488] [jointLog] [info] Computed 0 rich equivale",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/119
https://github.com/COMBINE-lab/salmon/issues/119:2886,Availability,error,error,2886,"rary.; [2017-02-09 13:51:38.559] [stderrLog] [info] Loading Suffix Array; [2017-02-09 13:51:38.560] [stderrLog] [info] Loading Transcript Info; [2017-02-09 13:51:38.561] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-02-09 13:51:38.562] [stderrLog] [info] There were 2 set bits in the bit array; [2017-02-09 13:51:38.562] [stderrLog] [info] Computing transcript lengths; [2017-02-09 13:51:38.562] [stderrLog] [info] Waiting to finish loading hash; [2017-02-09 13:51:38.562] [stderrLog] [info] Done loading index; [2017-02-09 13:51:38.557] [jointLog] [info] Loading Quasi index; [2017-02-09 13:51:38.558] [jointLog] [info] Loading 32-bit quasi index; [2017-02-09 13:51:38.562] [jointLog] [info] done; processed 3500000 fragmentsjointLog] [info] Index contained 2 targets; hits: 0, hits per frag: 0; [2017-02-09 13:51:48.488] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2017-02-09 13:51:48.488] [jointLog] [info] Counted 0 total reads in the equivalence classes; [2017-02-09 13:51:48.502] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-02-09 13:51:48.502] [jointLog] [info] Mapping rate = 0%. [2017-02-09 13:51:48.502] [jointLog] [info] finished quantifyLibrary(); [2017-02-09 13:51:48.512] [jointLog] [info] Starting optimizer; [2017-02-09 13:51:48.514] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2017-02-09 13:51:48.514] [jointLog] [info] iteration = 0 | max rel diff. = 0.548; [2017-02-09 13:51:48.514] [jointLog] [info] iteration = 100 | max rel diff. = -1.79769e+308; [2017-02-09 13:51:48.514] [jointLog] [error] Total alpha weight was too small! Make sure you ran salmon correclty.; [2017-02-09 13:51:48.514] [jointLog] [error] The optimization algorithm failed. This is likely the result of bad input (or a bug). If you cannot track down the cause, please report this issue on GitHub.`",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/119
https://github.com/COMBINE-lab/salmon/issues/119:3002,Availability,error,error,3002,"rary.; [2017-02-09 13:51:38.559] [stderrLog] [info] Loading Suffix Array; [2017-02-09 13:51:38.560] [stderrLog] [info] Loading Transcript Info; [2017-02-09 13:51:38.561] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-02-09 13:51:38.562] [stderrLog] [info] There were 2 set bits in the bit array; [2017-02-09 13:51:38.562] [stderrLog] [info] Computing transcript lengths; [2017-02-09 13:51:38.562] [stderrLog] [info] Waiting to finish loading hash; [2017-02-09 13:51:38.562] [stderrLog] [info] Done loading index; [2017-02-09 13:51:38.557] [jointLog] [info] Loading Quasi index; [2017-02-09 13:51:38.558] [jointLog] [info] Loading 32-bit quasi index; [2017-02-09 13:51:38.562] [jointLog] [info] done; processed 3500000 fragmentsjointLog] [info] Index contained 2 targets; hits: 0, hits per frag: 0; [2017-02-09 13:51:48.488] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2017-02-09 13:51:48.488] [jointLog] [info] Counted 0 total reads in the equivalence classes; [2017-02-09 13:51:48.502] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-02-09 13:51:48.502] [jointLog] [info] Mapping rate = 0%. [2017-02-09 13:51:48.502] [jointLog] [info] finished quantifyLibrary(); [2017-02-09 13:51:48.512] [jointLog] [info] Starting optimizer; [2017-02-09 13:51:48.514] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2017-02-09 13:51:48.514] [jointLog] [info] iteration = 0 | max rel diff. = 0.548; [2017-02-09 13:51:48.514] [jointLog] [info] iteration = 100 | max rel diff. = -1.79769e+308; [2017-02-09 13:51:48.514] [jointLog] [error] Total alpha weight was too small! Make sure you ran salmon correclty.; [2017-02-09 13:51:48.514] [jointLog] [error] The optimization algorithm failed. This is likely the result of bad input (or a bug). If you cannot track down the cause, please report this issue on GitHub.`",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/119
https://github.com/COMBINE-lab/salmon/issues/119:3115,Availability,down,down,3115,"rary.; [2017-02-09 13:51:38.559] [stderrLog] [info] Loading Suffix Array; [2017-02-09 13:51:38.560] [stderrLog] [info] Loading Transcript Info; [2017-02-09 13:51:38.561] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-02-09 13:51:38.562] [stderrLog] [info] There were 2 set bits in the bit array; [2017-02-09 13:51:38.562] [stderrLog] [info] Computing transcript lengths; [2017-02-09 13:51:38.562] [stderrLog] [info] Waiting to finish loading hash; [2017-02-09 13:51:38.562] [stderrLog] [info] Done loading index; [2017-02-09 13:51:38.557] [jointLog] [info] Loading Quasi index; [2017-02-09 13:51:38.558] [jointLog] [info] Loading 32-bit quasi index; [2017-02-09 13:51:38.562] [jointLog] [info] done; processed 3500000 fragmentsjointLog] [info] Index contained 2 targets; hits: 0, hits per frag: 0; [2017-02-09 13:51:48.488] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2017-02-09 13:51:48.488] [jointLog] [info] Counted 0 total reads in the equivalence classes; [2017-02-09 13:51:48.502] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-02-09 13:51:48.502] [jointLog] [info] Mapping rate = 0%. [2017-02-09 13:51:48.502] [jointLog] [info] finished quantifyLibrary(); [2017-02-09 13:51:48.512] [jointLog] [info] Starting optimizer; [2017-02-09 13:51:48.514] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2017-02-09 13:51:48.514] [jointLog] [info] iteration = 0 | max rel diff. = 0.548; [2017-02-09 13:51:48.514] [jointLog] [info] iteration = 100 | max rel diff. = -1.79769e+308; [2017-02-09 13:51:48.514] [jointLog] [error] Total alpha weight was too small! Make sure you ran salmon correclty.; [2017-02-09 13:51:48.514] [jointLog] [error] The optimization algorithm failed. This is likely the result of bad input (or a bug). If you cannot track down the cause, please report this issue on GitHub.`",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/119
https://github.com/COMBINE-lab/salmon/issues/119:866,Modifiability,variab,variability,866,"Hi Rob and team. I am obtaining the following errors in some of my samples but not all and I cannot figure out what is happening. I am using salmon to see if specific genes are present (apart from a general quantification). I. In order to do that I run the following code:; Code (example):; `salmon quant -l A -i /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/spikein/Flox5YFP0_B07_R/index -p 6 -o /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/bcbiotx/tmpTest2/quant -1 <(gzip -cd /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/trimmed/Flox5YFP0_B07.R1_Flox5YFP0_B07_R.trimmed.fastq.gz) -2 <(gzip -cd /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/trimmed/Flox5YFP0_B07.R2_Flox5YFP0_B07_R.trimmed.fastq.gz); `; Some samples finish the quantification while others return the error. Some samples should have the genes while others not. The reads are 25 long and there is variability in the total number of reads among all the samples. . Please, indicate me what other information you may need. Thank you in advance,. Best,. Victor. ERROR:; `[2017-02-09 13:51:38.119] [jointLog] [info] parsing read library format; [2017-02-09 13:51:38.119] [jointLog] [info] There is 1 library.; [2017-02-09 13:51:38.559] [stderrLog] [info] Loading Suffix Array; [2017-02-09 13:51:38.560] [stderrLog] [info] Loading Transcript Info; [2017-02-09 13:51:38.561] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-02-09 13:51:38.562] [stderrLog] [info] There were 2 set bits in the bit array; [2017-02-09 13:51:38.562] [stderrLog] [info] Computing transcript lengths; [2017-02-09 13:51:38.562] [stderrLog] [info] Waiting to finish loading hash; [2017-02-09 13:51:38.562] [stderrLog] [info] Done loading index; [2017-02-09 13:51:38.557] [jointLog] [info] Loading Quasi index; [2017-02-09 13:51:38.558] [jointLog] [info] Loading 32-bit quasi index; [2017-02-09 13:51:38.562] [jointLog] [info] done; processed 3500000 fragmentsjointLog] [info] Index contained 2 targets; hits: 0, hits per frag: 0; [2017-02-09 13:51:48.488] [",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/119
https://github.com/COMBINE-lab/salmon/issues/119:1219,Performance,Load,Loading,1219,"n order to do that I run the following code:; Code (example):; `salmon quant -l A -i /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/spikein/Flox5YFP0_B07_R/index -p 6 -o /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/bcbiotx/tmpTest2/quant -1 <(gzip -cd /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/trimmed/Flox5YFP0_B07.R1_Flox5YFP0_B07_R.trimmed.fastq.gz) -2 <(gzip -cd /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/trimmed/Flox5YFP0_B07.R2_Flox5YFP0_B07_R.trimmed.fastq.gz); `; Some samples finish the quantification while others return the error. Some samples should have the genes while others not. The reads are 25 long and there is variability in the total number of reads among all the samples. . Please, indicate me what other information you may need. Thank you in advance,. Best,. Victor. ERROR:; `[2017-02-09 13:51:38.119] [jointLog] [info] parsing read library format; [2017-02-09 13:51:38.119] [jointLog] [info] There is 1 library.; [2017-02-09 13:51:38.559] [stderrLog] [info] Loading Suffix Array; [2017-02-09 13:51:38.560] [stderrLog] [info] Loading Transcript Info; [2017-02-09 13:51:38.561] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-02-09 13:51:38.562] [stderrLog] [info] There were 2 set bits in the bit array; [2017-02-09 13:51:38.562] [stderrLog] [info] Computing transcript lengths; [2017-02-09 13:51:38.562] [stderrLog] [info] Waiting to finish loading hash; [2017-02-09 13:51:38.562] [stderrLog] [info] Done loading index; [2017-02-09 13:51:38.557] [jointLog] [info] Loading Quasi index; [2017-02-09 13:51:38.558] [jointLog] [info] Loading 32-bit quasi index; [2017-02-09 13:51:38.562] [jointLog] [info] done; processed 3500000 fragmentsjointLog] [info] Index contained 2 targets; hits: 0, hits per frag: 0; [2017-02-09 13:51:48.488] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2017-02-09 13:51:48.488] [jointLog] [info] Counted 0 total reads in the equivalence classes; [2017-02-09 13:51:48.502] [jointLog] [warning] Only 0 fra",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/119
https://github.com/COMBINE-lab/salmon/issues/119:1286,Performance,Load,Loading,1286,"n quant -l A -i /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/spikein/Flox5YFP0_B07_R/index -p 6 -o /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/bcbiotx/tmpTest2/quant -1 <(gzip -cd /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/trimmed/Flox5YFP0_B07.R1_Flox5YFP0_B07_R.trimmed.fastq.gz) -2 <(gzip -cd /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/trimmed/Flox5YFP0_B07.R2_Flox5YFP0_B07_R.trimmed.fastq.gz); `; Some samples finish the quantification while others return the error. Some samples should have the genes while others not. The reads are 25 long and there is variability in the total number of reads among all the samples. . Please, indicate me what other information you may need. Thank you in advance,. Best,. Victor. ERROR:; `[2017-02-09 13:51:38.119] [jointLog] [info] parsing read library format; [2017-02-09 13:51:38.119] [jointLog] [info] There is 1 library.; [2017-02-09 13:51:38.559] [stderrLog] [info] Loading Suffix Array; [2017-02-09 13:51:38.560] [stderrLog] [info] Loading Transcript Info; [2017-02-09 13:51:38.561] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-02-09 13:51:38.562] [stderrLog] [info] There were 2 set bits in the bit array; [2017-02-09 13:51:38.562] [stderrLog] [info] Computing transcript lengths; [2017-02-09 13:51:38.562] [stderrLog] [info] Waiting to finish loading hash; [2017-02-09 13:51:38.562] [stderrLog] [info] Done loading index; [2017-02-09 13:51:38.557] [jointLog] [info] Loading Quasi index; [2017-02-09 13:51:38.558] [jointLog] [info] Loading 32-bit quasi index; [2017-02-09 13:51:38.562] [jointLog] [info] done; processed 3500000 fragmentsjointLog] [info] Index contained 2 targets; hits: 0, hits per frag: 0; [2017-02-09 13:51:48.488] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2017-02-09 13:51:48.488] [jointLog] [info] Counted 0 total reads in the equivalence classes; [2017-02-09 13:51:48.502] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/119
https://github.com/COMBINE-lab/salmon/issues/119:1356,Performance,Load,Loading,1356,"x5YFP0_B07_R/index -p 6 -o /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/bcbiotx/tmpTest2/quant -1 <(gzip -cd /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/trimmed/Flox5YFP0_B07.R1_Flox5YFP0_B07_R.trimmed.fastq.gz) -2 <(gzip -cd /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/trimmed/Flox5YFP0_B07.R2_Flox5YFP0_B07_R.trimmed.fastq.gz); `; Some samples finish the quantification while others return the error. Some samples should have the genes while others not. The reads are 25 long and there is variability in the total number of reads among all the samples. . Please, indicate me what other information you may need. Thank you in advance,. Best,. Victor. ERROR:; `[2017-02-09 13:51:38.119] [jointLog] [info] parsing read library format; [2017-02-09 13:51:38.119] [jointLog] [info] There is 1 library.; [2017-02-09 13:51:38.559] [stderrLog] [info] Loading Suffix Array; [2017-02-09 13:51:38.560] [stderrLog] [info] Loading Transcript Info; [2017-02-09 13:51:38.561] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-02-09 13:51:38.562] [stderrLog] [info] There were 2 set bits in the bit array; [2017-02-09 13:51:38.562] [stderrLog] [info] Computing transcript lengths; [2017-02-09 13:51:38.562] [stderrLog] [info] Waiting to finish loading hash; [2017-02-09 13:51:38.562] [stderrLog] [info] Done loading index; [2017-02-09 13:51:38.557] [jointLog] [info] Loading Quasi index; [2017-02-09 13:51:38.558] [jointLog] [info] Loading 32-bit quasi index; [2017-02-09 13:51:38.562] [jointLog] [info] done; processed 3500000 fragmentsjointLog] [info] Index contained 2 targets; hits: 0, hits per frag: 0; [2017-02-09 13:51:48.488] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2017-02-09 13:51:48.488] [jointLog] [info] Counted 0 total reads in the equivalence classes; [2017-02-09 13:51:48.502] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mapp",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/119
https://github.com/COMBINE-lab/salmon/issues/119:1610,Performance,load,loading,1610,"1/cores/bcbio/ej_rnaseq/tCells_KO/work/trimmed/Flox5YFP0_B07.R2_Flox5YFP0_B07_R.trimmed.fastq.gz); `; Some samples finish the quantification while others return the error. Some samples should have the genes while others not. The reads are 25 long and there is variability in the total number of reads among all the samples. . Please, indicate me what other information you may need. Thank you in advance,. Best,. Victor. ERROR:; `[2017-02-09 13:51:38.119] [jointLog] [info] parsing read library format; [2017-02-09 13:51:38.119] [jointLog] [info] There is 1 library.; [2017-02-09 13:51:38.559] [stderrLog] [info] Loading Suffix Array; [2017-02-09 13:51:38.560] [stderrLog] [info] Loading Transcript Info; [2017-02-09 13:51:38.561] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-02-09 13:51:38.562] [stderrLog] [info] There were 2 set bits in the bit array; [2017-02-09 13:51:38.562] [stderrLog] [info] Computing transcript lengths; [2017-02-09 13:51:38.562] [stderrLog] [info] Waiting to finish loading hash; [2017-02-09 13:51:38.562] [stderrLog] [info] Done loading index; [2017-02-09 13:51:38.557] [jointLog] [info] Loading Quasi index; [2017-02-09 13:51:38.558] [jointLog] [info] Loading 32-bit quasi index; [2017-02-09 13:51:38.562] [jointLog] [info] done; processed 3500000 fragmentsjointLog] [info] Index contained 2 targets; hits: 0, hits per frag: 0; [2017-02-09 13:51:48.488] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2017-02-09 13:51:48.488] [jointLog] [info] Counted 0 total reads in the equivalence classes; [2017-02-09 13:51:48.502] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-02-09 13:51:48.502] [jointLog] [info] Mapping rate = 0%. [2017-02-09 13:51:48.502] [jointLog] [info] finished quantifyLibrary(); [2017-02-09 13:51:48.512] [jointLog] [info] Starting optimizer; [2017-02-09 13:51:48.514] [joint",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/119
https://github.com/COMBINE-lab/salmon/issues/119:1674,Performance,load,loading,1674,"P0_B07_R.trimmed.fastq.gz); `; Some samples finish the quantification while others return the error. Some samples should have the genes while others not. The reads are 25 long and there is variability in the total number of reads among all the samples. . Please, indicate me what other information you may need. Thank you in advance,. Best,. Victor. ERROR:; `[2017-02-09 13:51:38.119] [jointLog] [info] parsing read library format; [2017-02-09 13:51:38.119] [jointLog] [info] There is 1 library.; [2017-02-09 13:51:38.559] [stderrLog] [info] Loading Suffix Array; [2017-02-09 13:51:38.560] [stderrLog] [info] Loading Transcript Info; [2017-02-09 13:51:38.561] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-02-09 13:51:38.562] [stderrLog] [info] There were 2 set bits in the bit array; [2017-02-09 13:51:38.562] [stderrLog] [info] Computing transcript lengths; [2017-02-09 13:51:38.562] [stderrLog] [info] Waiting to finish loading hash; [2017-02-09 13:51:38.562] [stderrLog] [info] Done loading index; [2017-02-09 13:51:38.557] [jointLog] [info] Loading Quasi index; [2017-02-09 13:51:38.558] [jointLog] [info] Loading 32-bit quasi index; [2017-02-09 13:51:38.562] [jointLog] [info] done; processed 3500000 fragmentsjointLog] [info] Index contained 2 targets; hits: 0, hits per frag: 0; [2017-02-09 13:51:48.488] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2017-02-09 13:51:48.488] [jointLog] [info] Counted 0 total reads in the equivalence classes; [2017-02-09 13:51:48.502] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-02-09 13:51:48.502] [jointLog] [info] Mapping rate = 0%. [2017-02-09 13:51:48.502] [jointLog] [info] finished quantifyLibrary(); [2017-02-09 13:51:48.512] [jointLog] [info] Starting optimizer; [2017-02-09 13:51:48.514] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2017-",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/119
https://github.com/COMBINE-lab/salmon/issues/119:1733,Performance,Load,Loading,1733,"tion while others return the error. Some samples should have the genes while others not. The reads are 25 long and there is variability in the total number of reads among all the samples. . Please, indicate me what other information you may need. Thank you in advance,. Best,. Victor. ERROR:; `[2017-02-09 13:51:38.119] [jointLog] [info] parsing read library format; [2017-02-09 13:51:38.119] [jointLog] [info] There is 1 library.; [2017-02-09 13:51:38.559] [stderrLog] [info] Loading Suffix Array; [2017-02-09 13:51:38.560] [stderrLog] [info] Loading Transcript Info; [2017-02-09 13:51:38.561] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-02-09 13:51:38.562] [stderrLog] [info] There were 2 set bits in the bit array; [2017-02-09 13:51:38.562] [stderrLog] [info] Computing transcript lengths; [2017-02-09 13:51:38.562] [stderrLog] [info] Waiting to finish loading hash; [2017-02-09 13:51:38.562] [stderrLog] [info] Done loading index; [2017-02-09 13:51:38.557] [jointLog] [info] Loading Quasi index; [2017-02-09 13:51:38.558] [jointLog] [info] Loading 32-bit quasi index; [2017-02-09 13:51:38.562] [jointLog] [info] done; processed 3500000 fragmentsjointLog] [info] Index contained 2 targets; hits: 0, hits per frag: 0; [2017-02-09 13:51:48.488] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2017-02-09 13:51:48.488] [jointLog] [info] Counted 0 total reads in the equivalence classes; [2017-02-09 13:51:48.502] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-02-09 13:51:48.502] [jointLog] [info] Mapping rate = 0%. [2017-02-09 13:51:48.502] [jointLog] [info] finished quantifyLibrary(); [2017-02-09 13:51:48.512] [jointLog] [info] Starting optimizer; [2017-02-09 13:51:48.514] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2017-02-09 13:51:48.514] [jointLog] [info] iteration = 0 | max rel dif",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/119
https://github.com/COMBINE-lab/salmon/issues/119:1798,Performance,Load,Loading,1798,"s while others not. The reads are 25 long and there is variability in the total number of reads among all the samples. . Please, indicate me what other information you may need. Thank you in advance,. Best,. Victor. ERROR:; `[2017-02-09 13:51:38.119] [jointLog] [info] parsing read library format; [2017-02-09 13:51:38.119] [jointLog] [info] There is 1 library.; [2017-02-09 13:51:38.559] [stderrLog] [info] Loading Suffix Array; [2017-02-09 13:51:38.560] [stderrLog] [info] Loading Transcript Info; [2017-02-09 13:51:38.561] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-02-09 13:51:38.562] [stderrLog] [info] There were 2 set bits in the bit array; [2017-02-09 13:51:38.562] [stderrLog] [info] Computing transcript lengths; [2017-02-09 13:51:38.562] [stderrLog] [info] Waiting to finish loading hash; [2017-02-09 13:51:38.562] [stderrLog] [info] Done loading index; [2017-02-09 13:51:38.557] [jointLog] [info] Loading Quasi index; [2017-02-09 13:51:38.558] [jointLog] [info] Loading 32-bit quasi index; [2017-02-09 13:51:38.562] [jointLog] [info] done; processed 3500000 fragmentsjointLog] [info] Index contained 2 targets; hits: 0, hits per frag: 0; [2017-02-09 13:51:48.488] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2017-02-09 13:51:48.488] [jointLog] [info] Counted 0 total reads in the equivalence classes; [2017-02-09 13:51:48.502] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-02-09 13:51:48.502] [jointLog] [info] Mapping rate = 0%. [2017-02-09 13:51:48.502] [jointLog] [info] finished quantifyLibrary(); [2017-02-09 13:51:48.512] [jointLog] [info] Starting optimizer; [2017-02-09 13:51:48.514] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2017-02-09 13:51:48.514] [jointLog] [info] iteration = 0 | max rel diff. = 0.548; [2017-02-09 13:51:48.514] [jointLog] [info] iteration = ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/119
https://github.com/COMBINE-lab/salmon/issues/119:2564,Performance,optimiz,optimizer,2564,"rary.; [2017-02-09 13:51:38.559] [stderrLog] [info] Loading Suffix Array; [2017-02-09 13:51:38.560] [stderrLog] [info] Loading Transcript Info; [2017-02-09 13:51:38.561] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-02-09 13:51:38.562] [stderrLog] [info] There were 2 set bits in the bit array; [2017-02-09 13:51:38.562] [stderrLog] [info] Computing transcript lengths; [2017-02-09 13:51:38.562] [stderrLog] [info] Waiting to finish loading hash; [2017-02-09 13:51:38.562] [stderrLog] [info] Done loading index; [2017-02-09 13:51:38.557] [jointLog] [info] Loading Quasi index; [2017-02-09 13:51:38.558] [jointLog] [info] Loading 32-bit quasi index; [2017-02-09 13:51:38.562] [jointLog] [info] done; processed 3500000 fragmentsjointLog] [info] Index contained 2 targets; hits: 0, hits per frag: 0; [2017-02-09 13:51:48.488] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2017-02-09 13:51:48.488] [jointLog] [info] Counted 0 total reads in the equivalence classes; [2017-02-09 13:51:48.502] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-02-09 13:51:48.502] [jointLog] [info] Mapping rate = 0%. [2017-02-09 13:51:48.502] [jointLog] [info] finished quantifyLibrary(); [2017-02-09 13:51:48.512] [jointLog] [info] Starting optimizer; [2017-02-09 13:51:48.514] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2017-02-09 13:51:48.514] [jointLog] [info] iteration = 0 | max rel diff. = 0.548; [2017-02-09 13:51:48.514] [jointLog] [info] iteration = 100 | max rel diff. = -1.79769e+308; [2017-02-09 13:51:48.514] [jointLog] [error] Total alpha weight was too small! Make sure you ran salmon correclty.; [2017-02-09 13:51:48.514] [jointLog] [error] The optimization algorithm failed. This is likely the result of bad input (or a bug). If you cannot track down the cause, please report this issue on GitHub.`",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/119
https://github.com/COMBINE-lab/salmon/issues/119:3013,Performance,optimiz,optimization,3013,"rary.; [2017-02-09 13:51:38.559] [stderrLog] [info] Loading Suffix Array; [2017-02-09 13:51:38.560] [stderrLog] [info] Loading Transcript Info; [2017-02-09 13:51:38.561] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-02-09 13:51:38.562] [stderrLog] [info] There were 2 set bits in the bit array; [2017-02-09 13:51:38.562] [stderrLog] [info] Computing transcript lengths; [2017-02-09 13:51:38.562] [stderrLog] [info] Waiting to finish loading hash; [2017-02-09 13:51:38.562] [stderrLog] [info] Done loading index; [2017-02-09 13:51:38.557] [jointLog] [info] Loading Quasi index; [2017-02-09 13:51:38.558] [jointLog] [info] Loading 32-bit quasi index; [2017-02-09 13:51:38.562] [jointLog] [info] done; processed 3500000 fragmentsjointLog] [info] Index contained 2 targets; hits: 0, hits per frag: 0; [2017-02-09 13:51:48.488] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2017-02-09 13:51:48.488] [jointLog] [info] Counted 0 total reads in the equivalence classes; [2017-02-09 13:51:48.502] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-02-09 13:51:48.502] [jointLog] [info] Mapping rate = 0%. [2017-02-09 13:51:48.502] [jointLog] [info] finished quantifyLibrary(); [2017-02-09 13:51:48.512] [jointLog] [info] Starting optimizer; [2017-02-09 13:51:48.514] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2017-02-09 13:51:48.514] [jointLog] [info] iteration = 0 | max rel diff. = 0.548; [2017-02-09 13:51:48.514] [jointLog] [info] iteration = 100 | max rel diff. = -1.79769e+308; [2017-02-09 13:51:48.514] [jointLog] [error] Total alpha weight was too small! Make sure you ran salmon correclty.; [2017-02-09 13:51:48.514] [jointLog] [error] The optimization algorithm failed. This is likely the result of bad input (or a bug). If you cannot track down the cause, please report this issue on GitHub.`",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/119
https://github.com/COMBINE-lab/salmon/issues/119:1618,Security,hash,hash,1618,"1/cores/bcbio/ej_rnaseq/tCells_KO/work/trimmed/Flox5YFP0_B07.R2_Flox5YFP0_B07_R.trimmed.fastq.gz); `; Some samples finish the quantification while others return the error. Some samples should have the genes while others not. The reads are 25 long and there is variability in the total number of reads among all the samples. . Please, indicate me what other information you may need. Thank you in advance,. Best,. Victor. ERROR:; `[2017-02-09 13:51:38.119] [jointLog] [info] parsing read library format; [2017-02-09 13:51:38.119] [jointLog] [info] There is 1 library.; [2017-02-09 13:51:38.559] [stderrLog] [info] Loading Suffix Array; [2017-02-09 13:51:38.560] [stderrLog] [info] Loading Transcript Info; [2017-02-09 13:51:38.561] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-02-09 13:51:38.562] [stderrLog] [info] There were 2 set bits in the bit array; [2017-02-09 13:51:38.562] [stderrLog] [info] Computing transcript lengths; [2017-02-09 13:51:38.562] [stderrLog] [info] Waiting to finish loading hash; [2017-02-09 13:51:38.562] [stderrLog] [info] Done loading index; [2017-02-09 13:51:38.557] [jointLog] [info] Loading Quasi index; [2017-02-09 13:51:38.558] [jointLog] [info] Loading 32-bit quasi index; [2017-02-09 13:51:38.562] [jointLog] [info] done; processed 3500000 fragmentsjointLog] [info] Index contained 2 targets; hits: 0, hits per frag: 0; [2017-02-09 13:51:48.488] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2017-02-09 13:51:48.488] [jointLog] [info] Counted 0 total reads in the equivalence classes; [2017-02-09 13:51:48.502] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-02-09 13:51:48.502] [jointLog] [info] Mapping rate = 0%. [2017-02-09 13:51:48.502] [jointLog] [info] finished quantifyLibrary(); [2017-02-09 13:51:48.512] [jointLog] [info] Starting optimizer; [2017-02-09 13:51:48.514] [joint",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/119
https://github.com/COMBINE-lab/salmon/issues/120:88,Availability,down,downloaded,88,"Hi everyone,; Lately I was trying to use Salmon (v0.8.0) along with tximport to study a downloaded single-cell data on gene-level. And I came across something werid that I found almost 20k genes on average per cell, which is way higher than expected. Realistically, the scRNA-seq protocol I followed will only have a gene number detection of roughly 10k. I re-do the analysis with STAR + featurecounts and I observed a per-cell gene number of 6k on average. Just wonder which part of my code goes wrong. Attached please find my code for Salmon and subsequent R script for tximport. Any advice or suggestion will be much appreciated! I do love Salmon for its speed and convenience. Salmon index; #!/bin/bash. salmon index -t /home1/garyhe/workingdir/ref/gencode/gencode.v25.transcripts.ercc.fa -i /home1/garyhe/workingdir/ref/index/salmonindex/v25/19mer --gencode --type quasi -k 19. Salmon quant; #!/bin/bash. cd /home1/garyhe/workingdir/data/bjorklund2016ni/00_raw. for i in $(ls *.gz | cut -c 1-10 | uniq). do. salmon quant -i /home1/garyhe/workingdir/ref/index/salmonindex/v25/19mer \; -l U \; -r ${i}_1.fastq.gz \; --writeMappings=/home1/garyhe/workingdir/data/bjorklund2016ni/01_aligned/${i}.sam \; -o /home1/garyhe/workingdir/data/bjorklund2016ni/02_quant/${i}. Done. R script for tximport; #condense the ensemble transcript ID counts to gene ID counts; library(GenomicFeatures); txdb <- makeTxDbFromGFF(""./Sequencing_run/gencode.vM12.primary_assembly.annotation.ercc.gtf""); k <- keys(txdb, keytype = ""GENEID""); df <- select(txdb, keys = k, keytype = ""GENEID"", columns = ""TXNAME""); tx2gene <- df[, 2:1]; head(tx2gene). library(tximport); library(readr); dir <- ""./Sequencing_run/salmon_output/sc/""; list.files(dir); samples <- read.table(""./Sequencing_run/salmon_output/scsampleinfo.txt"", header=TRUE); samples; files <- file.path(dir, samples$Sample_ID, ""quant.sf""); names(files) <- paste0(samples$Sample_ID); names(files) <- gsub(""[:_:].*$"", """", names(files)). #gene-level; txi.salmon.g <- txi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/120
https://github.com/COMBINE-lab/salmon/issues/120:280,Integrability,protocol,protocol,280,"Hi everyone,; Lately I was trying to use Salmon (v0.8.0) along with tximport to study a downloaded single-cell data on gene-level. And I came across something werid that I found almost 20k genes on average per cell, which is way higher than expected. Realistically, the scRNA-seq protocol I followed will only have a gene number detection of roughly 10k. I re-do the analysis with STAR + featurecounts and I observed a per-cell gene number of 6k on average. Just wonder which part of my code goes wrong. Attached please find my code for Salmon and subsequent R script for tximport. Any advice or suggestion will be much appreciated! I do love Salmon for its speed and convenience. Salmon index; #!/bin/bash. salmon index -t /home1/garyhe/workingdir/ref/gencode/gencode.v25.transcripts.ercc.fa -i /home1/garyhe/workingdir/ref/index/salmonindex/v25/19mer --gencode --type quasi -k 19. Salmon quant; #!/bin/bash. cd /home1/garyhe/workingdir/data/bjorklund2016ni/00_raw. for i in $(ls *.gz | cut -c 1-10 | uniq). do. salmon quant -i /home1/garyhe/workingdir/ref/index/salmonindex/v25/19mer \; -l U \; -r ${i}_1.fastq.gz \; --writeMappings=/home1/garyhe/workingdir/data/bjorklund2016ni/01_aligned/${i}.sam \; -o /home1/garyhe/workingdir/data/bjorklund2016ni/02_quant/${i}. Done. R script for tximport; #condense the ensemble transcript ID counts to gene ID counts; library(GenomicFeatures); txdb <- makeTxDbFromGFF(""./Sequencing_run/gencode.vM12.primary_assembly.annotation.ercc.gtf""); k <- keys(txdb, keytype = ""GENEID""); df <- select(txdb, keys = k, keytype = ""GENEID"", columns = ""TXNAME""); tx2gene <- df[, 2:1]; head(tx2gene). library(tximport); library(readr); dir <- ""./Sequencing_run/salmon_output/sc/""; list.files(dir); samples <- read.table(""./Sequencing_run/salmon_output/scsampleinfo.txt"", header=TRUE); samples; files <- file.path(dir, samples$Sample_ID, ""quant.sf""); names(files) <- paste0(samples$Sample_ID); names(files) <- gsub(""[:_:].*$"", """", names(files)). #gene-level; txi.salmon.g <- txi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/120
https://github.com/COMBINE-lab/salmon/issues/120:329,Safety,detect,detection,329,"Hi everyone,; Lately I was trying to use Salmon (v0.8.0) along with tximport to study a downloaded single-cell data on gene-level. And I came across something werid that I found almost 20k genes on average per cell, which is way higher than expected. Realistically, the scRNA-seq protocol I followed will only have a gene number detection of roughly 10k. I re-do the analysis with STAR + featurecounts and I observed a per-cell gene number of 6k on average. Just wonder which part of my code goes wrong. Attached please find my code for Salmon and subsequent R script for tximport. Any advice or suggestion will be much appreciated! I do love Salmon for its speed and convenience. Salmon index; #!/bin/bash. salmon index -t /home1/garyhe/workingdir/ref/gencode/gencode.v25.transcripts.ercc.fa -i /home1/garyhe/workingdir/ref/index/salmonindex/v25/19mer --gencode --type quasi -k 19. Salmon quant; #!/bin/bash. cd /home1/garyhe/workingdir/data/bjorklund2016ni/00_raw. for i in $(ls *.gz | cut -c 1-10 | uniq). do. salmon quant -i /home1/garyhe/workingdir/ref/index/salmonindex/v25/19mer \; -l U \; -r ${i}_1.fastq.gz \; --writeMappings=/home1/garyhe/workingdir/data/bjorklund2016ni/01_aligned/${i}.sam \; -o /home1/garyhe/workingdir/data/bjorklund2016ni/02_quant/${i}. Done. R script for tximport; #condense the ensemble transcript ID counts to gene ID counts; library(GenomicFeatures); txdb <- makeTxDbFromGFF(""./Sequencing_run/gencode.vM12.primary_assembly.annotation.ercc.gtf""); k <- keys(txdb, keytype = ""GENEID""); df <- select(txdb, keys = k, keytype = ""GENEID"", columns = ""TXNAME""); tx2gene <- df[, 2:1]; head(tx2gene). library(tximport); library(readr); dir <- ""./Sequencing_run/salmon_output/sc/""; list.files(dir); samples <- read.table(""./Sequencing_run/salmon_output/scsampleinfo.txt"", header=TRUE); samples; files <- file.path(dir, samples$Sample_ID, ""quant.sf""); names(files) <- paste0(samples$Sample_ID); names(files) <- gsub(""[:_:].*$"", """", names(files)). #gene-level; txi.salmon.g <- txi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/120
https://github.com/COMBINE-lab/salmon/issues/122:109,Deployability,release,release-,109,"@COMBINE-lab. Generate gene level summary count:. Got the following files: ; `wget ftp://ftp.ensembl.org/pub/release-87/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz`. `wget ftp://ftp.ensembl.org/pub/release-87/fasta/homo_sapiens/ncrna/Homo_sapiens.GRCh38.ncrna.fa.gz`. `zcat Homo_sapiens.GRCh38.cdna.all.fa.gz Homo_sapiens.GRCh38.ncrna.fa.gz >Homo_sapiens.GRCh38.87.cdna.ncrna.fa`. `salmon index -t Homo_sapiens.GRCh38.87.cdna.ncrna.fa -i Homo_sapiens.GRCh38.cdna.ncrna.quasi.index` . `salmon quant -i /data1/genome/hg38_r87/Homo_sapiens.GRCh38.cdna.ncrna.quasi.index -l ISR -1 1013_S7_R1_001.fastq.gz -2 1013_S7_R2_001.fastq.gz -p 8 -o 1013_quant -g /data1/genome/hg38_r87/Homo_sapiens.GRCh38.87.chr.gtf`. `[2017-02-22 17:28:03.310] [jointLog] [warning] couldn't find transcript named [ENST00000384587.1] in transcript <-> gene map; returning transcript as it's own gene`. I see the fasta file has a transcript name as ""ENST00000448914.1"", but the gtf has in the form of ""ENST00000448914"", any idea how salmon resolve this? There is no ""."" after transcript name in gtf file. Thanks; @demis001",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/122
https://github.com/COMBINE-lab/salmon/issues/122:213,Deployability,release,release-,213,"@COMBINE-lab. Generate gene level summary count:. Got the following files: ; `wget ftp://ftp.ensembl.org/pub/release-87/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz`. `wget ftp://ftp.ensembl.org/pub/release-87/fasta/homo_sapiens/ncrna/Homo_sapiens.GRCh38.ncrna.fa.gz`. `zcat Homo_sapiens.GRCh38.cdna.all.fa.gz Homo_sapiens.GRCh38.ncrna.fa.gz >Homo_sapiens.GRCh38.87.cdna.ncrna.fa`. `salmon index -t Homo_sapiens.GRCh38.87.cdna.ncrna.fa -i Homo_sapiens.GRCh38.cdna.ncrna.quasi.index` . `salmon quant -i /data1/genome/hg38_r87/Homo_sapiens.GRCh38.cdna.ncrna.quasi.index -l ISR -1 1013_S7_R1_001.fastq.gz -2 1013_S7_R2_001.fastq.gz -p 8 -o 1013_quant -g /data1/genome/hg38_r87/Homo_sapiens.GRCh38.87.chr.gtf`. `[2017-02-22 17:28:03.310] [jointLog] [warning] couldn't find transcript named [ENST00000384587.1] in transcript <-> gene map; returning transcript as it's own gene`. I see the fasta file has a transcript name as ""ENST00000448914.1"", but the gtf has in the form of ""ENST00000448914"", any idea how salmon resolve this? There is no ""."" after transcript name in gtf file. Thanks; @demis001",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/122
https://github.com/COMBINE-lab/salmon/issues/124:262,Usability,simpl,simply,262,"Currently, the default (and only) behavior of Salmon when aggregating from the transcript to gene level is to return transcripts with no corresponding gene in the `GTF` or 2-column format file as their own gene. In some cases, it would be desirable, instead, to simply filter out or ""drop"" such transcripts from the gene-level output. We should add a flag to optionally enable this behavior. Feature requested by @demis001.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/124
https://github.com/COMBINE-lab/salmon/issues/126:833,Availability,echo,echo,833,"Hi,. We (@emilyburke, @andrewejaffe and me) can successfully run salmon using 1 core in the SGE-managed cluster we have access to. The problem is that for some reason we have to request a lot of memory, thus reducing the number of jobs we can run simultaneously and increasing the overall time it takes to process datasets. . I see in https://github.com/COMBINE-lab/salmon/issues/97 that you suggest using `--perfectHash` and a newer `salmon` version, which we haven't tried and might end up being the solution. Here is the bash script we used to run `salmon` for a 422 sample dataset:. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=80G,h_vmem=90G,h_fsize=100G; #$ -N step6-txQuant-alzheimer.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/txQuant-alzheimer.$TASK_ID.txt; #$ -e ./logs/txQuant-alzheimer.$TASK_ID.txt; #$ -t 1-422; #$ -m a; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. echo ""**** Job ends ****""; date; ```. The important part is that we are requesting 1 single core with 80 GB of free memory and setting the limit at 90 GB. We are also using the `-p 1`",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:868,Availability,echo,echo,868,"Hi,. We (@emilyburke, @andrewejaffe and me) can successfully run salmon using 1 core in the SGE-managed cluster we have access to. The problem is that for some reason we have to request a lot of memory, thus reducing the number of jobs we can run simultaneously and increasing the overall time it takes to process datasets. . I see in https://github.com/COMBINE-lab/salmon/issues/97 that you suggest using `--perfectHash` and a newer `salmon` version, which we haven't tried and might end up being the solution. Here is the bash script we used to run `salmon` for a 422 sample dataset:. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=80G,h_vmem=90G,h_fsize=100G; #$ -N step6-txQuant-alzheimer.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/txQuant-alzheimer.$TASK_ID.txt; #$ -e ./logs/txQuant-alzheimer.$TASK_ID.txt; #$ -t 1-422; #$ -m a; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. echo ""**** Job ends ****""; date; ```. The important part is that we are requesting 1 single core with 80 GB of free memory and setting the limit at 90 GB. We are also using the `-p 1`",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:897,Availability,echo,echo,897,"Hi,. We (@emilyburke, @andrewejaffe and me) can successfully run salmon using 1 core in the SGE-managed cluster we have access to. The problem is that for some reason we have to request a lot of memory, thus reducing the number of jobs we can run simultaneously and increasing the overall time it takes to process datasets. . I see in https://github.com/COMBINE-lab/salmon/issues/97 that you suggest using `--perfectHash` and a newer `salmon` version, which we haven't tried and might end up being the solution. Here is the bash script we used to run `salmon` for a 422 sample dataset:. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=80G,h_vmem=90G,h_fsize=100G; #$ -N step6-txQuant-alzheimer.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/txQuant-alzheimer.$TASK_ID.txt; #$ -e ./logs/txQuant-alzheimer.$TASK_ID.txt; #$ -t 1-422; #$ -m a; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. echo ""**** Job ends ****""; date; ```. The important part is that we are requesting 1 single core with 80 GB of free memory and setting the limit at 90 GB. We are also using the `-p 1`",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:919,Availability,echo,echo,919,"Hi,. We (@emilyburke, @andrewejaffe and me) can successfully run salmon using 1 core in the SGE-managed cluster we have access to. The problem is that for some reason we have to request a lot of memory, thus reducing the number of jobs we can run simultaneously and increasing the overall time it takes to process datasets. . I see in https://github.com/COMBINE-lab/salmon/issues/97 that you suggest using `--perfectHash` and a newer `salmon` version, which we haven't tried and might end up being the solution. Here is the bash script we used to run `salmon` for a 422 sample dataset:. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=80G,h_vmem=90G,h_fsize=100G; #$ -N step6-txQuant-alzheimer.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/txQuant-alzheimer.$TASK_ID.txt; #$ -e ./logs/txQuant-alzheimer.$TASK_ID.txt; #$ -t 1-422; #$ -m a; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. echo ""**** Job ends ****""; date; ```. The important part is that we are requesting 1 single core with 80 GB of free memory and setting the limit at 90 GB. We are also using the `-p 1`",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:945,Availability,echo,echo,945,"Hi,. We (@emilyburke, @andrewejaffe and me) can successfully run salmon using 1 core in the SGE-managed cluster we have access to. The problem is that for some reason we have to request a lot of memory, thus reducing the number of jobs we can run simultaneously and increasing the overall time it takes to process datasets. . I see in https://github.com/COMBINE-lab/salmon/issues/97 that you suggest using `--perfectHash` and a newer `salmon` version, which we haven't tried and might end up being the solution. Here is the bash script we used to run `salmon` for a 422 sample dataset:. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=80G,h_vmem=90G,h_fsize=100G; #$ -N step6-txQuant-alzheimer.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/txQuant-alzheimer.$TASK_ID.txt; #$ -e ./logs/txQuant-alzheimer.$TASK_ID.txt; #$ -t 1-422; #$ -m a; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. echo ""**** Job ends ****""; date; ```. The important part is that we are requesting 1 single core with 80 GB of free memory and setting the limit at 90 GB. We are also using the `-p 1`",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:975,Availability,echo,echo,975,"Hi,. We (@emilyburke, @andrewejaffe and me) can successfully run salmon using 1 core in the SGE-managed cluster we have access to. The problem is that for some reason we have to request a lot of memory, thus reducing the number of jobs we can run simultaneously and increasing the overall time it takes to process datasets. . I see in https://github.com/COMBINE-lab/salmon/issues/97 that you suggest using `--perfectHash` and a newer `salmon` version, which we haven't tried and might end up being the solution. Here is the bash script we used to run `salmon` for a 422 sample dataset:. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=80G,h_vmem=90G,h_fsize=100G; #$ -N step6-txQuant-alzheimer.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/txQuant-alzheimer.$TASK_ID.txt; #$ -e ./logs/txQuant-alzheimer.$TASK_ID.txt; #$ -t 1-422; #$ -m a; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. echo ""**** Job ends ****""; date; ```. The important part is that we are requesting 1 single core with 80 GB of free memory and setting the limit at 90 GB. We are also using the `-p 1`",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:1005,Availability,echo,echo,1005,"Hi,. We (@emilyburke, @andrewejaffe and me) can successfully run salmon using 1 core in the SGE-managed cluster we have access to. The problem is that for some reason we have to request a lot of memory, thus reducing the number of jobs we can run simultaneously and increasing the overall time it takes to process datasets. . I see in https://github.com/COMBINE-lab/salmon/issues/97 that you suggest using `--perfectHash` and a newer `salmon` version, which we haven't tried and might end up being the solution. Here is the bash script we used to run `salmon` for a 422 sample dataset:. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=80G,h_vmem=90G,h_fsize=100G; #$ -N step6-txQuant-alzheimer.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/txQuant-alzheimer.$TASK_ID.txt; #$ -e ./logs/txQuant-alzheimer.$TASK_ID.txt; #$ -t 1-422; #$ -m a; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. echo ""**** Job ends ****""; date; ```. The important part is that we are requesting 1 single core with 80 GB of free memory and setting the limit at 90 GB. We are also using the `-p 1`",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:1818,Availability,echo,echo,1818,"o ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. echo ""**** Job ends ****""; date; ```. The important part is that we are requesting 1 single core with 80 GB of free memory and setting the limit at 90 GB. We are also using the `-p 1` option. . Here is the log file for one of them (task 3):. ```; **** Job starts ****; Mon Mar 6 23:19:13 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9958683; Job name: step6-txQuant-alzheimer.gsk_phaseII; Hostname: compute-068; Task id: ; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases ; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:2299,Availability,avail,available,2299,"les.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. echo ""**** Job ends ****""; date; ```. The important part is that we are requesting 1 single core with 80 GB of free memory and setting the limit at 90 GB. We are also using the `-p 1` option. . Here is the log file for one of them (task 3):. ```; **** Job starts ****; Mon Mar 6 23:19:13 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9958683; Job name: step6-txQuant-alzheimer.gsk_phaseII; Hostname: compute-068; Task id: ; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases ; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX/logs; [1m[2017-03-07 03:00:05.319] [joi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:2341,Availability,avail,available,2341,"lzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. echo ""**** Job ends ****""; date; ```. The important part is that we are requesting 1 single core with 80 GB of free memory and setting the limit at 90 GB. We are also using the `-p 1` option. . Here is the log file for one of them (task 3):. ```; **** Job starts ****; Mon Mar 6 23:19:13 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9958683; Job name: step6-txQuant-alzheimer.gsk_phaseII; Hostname: compute-068; Task id: ; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases ; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX/logs; [1m[2017-03-07 03:00:05.319] [jointLog] [info] parsing read library format; [00m[1m[2017-03-07 03:00:05.337] [joi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:21459,Availability,echo,echo,21459,"priority 0; qsub_time Mon Mar 6 23:18:58 2017; start_time Mon Mar 6 23:19:12 2017; end_time Tue Mar 7 17:27:45 2017; granted_pe local; slots 1; failed 0; exit_status 0; ru_wallclock 65313; ru_utime 25600.565; ru_stime 29552.966; ru_maxrss 6548296; ru_ixrss 0; ru_ismrss 0; ru_idrss 0; ru_isrss 0; ru_minflt 1662027; ru_majflt 369; ru_nswap 0; ru_inblock 0; ru_oublock 56256; ru_msgsnd 0; ru_msgrcv 0; ru_nsignals 0; ru_nvcsw 801190; ru_nivcsw 2880329; cpu 55153.531; mem 403295.295; io 17.447; iow 0.000; maxvmem 9.065G; arid undefined; ```. For task 1 the maxvmem was 9.072G and for task 2 9.061G. I then ran a test requesting a minimum of 10 GB of free RAM and a max of 11 GB, which in theory should work unless `salmon` uses variable amounts of memory with the same data. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=10G,h_vmem=11G,h_fsize=100G; #$ -N step6-salmon_test.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test.$TASK_ID.txt; #$ -e ./logs/salmon_test.$TASK_ID.txt; #$ -m a; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. echo ""**** Job ends *",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:21494,Availability,echo,echo,21494,"7:45 2017; granted_pe local; slots 1; failed 0; exit_status 0; ru_wallclock 65313; ru_utime 25600.565; ru_stime 29552.966; ru_maxrss 6548296; ru_ixrss 0; ru_ismrss 0; ru_idrss 0; ru_isrss 0; ru_minflt 1662027; ru_majflt 369; ru_nswap 0; ru_inblock 0; ru_oublock 56256; ru_msgsnd 0; ru_msgrcv 0; ru_nsignals 0; ru_nvcsw 801190; ru_nivcsw 2880329; cpu 55153.531; mem 403295.295; io 17.447; iow 0.000; maxvmem 9.065G; arid undefined; ```. For task 1 the maxvmem was 9.072G and for task 2 9.061G. I then ran a test requesting a minimum of 10 GB of free RAM and a max of 11 GB, which in theory should work unless `salmon` uses variable amounts of memory with the same data. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=10G,h_vmem=11G,h_fsize=100G; #$ -N step6-salmon_test.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test.$TASK_ID.txt; #$ -e ./logs/salmon_test.$TASK_ID.txt; #$ -m a; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. echo ""**** Job ends ****""; date; ```. The log file for the same file (task 3) now shows that there was a problem:. ```; **** Job",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:21523,Availability,echo,echo,21523,"7:45 2017; granted_pe local; slots 1; failed 0; exit_status 0; ru_wallclock 65313; ru_utime 25600.565; ru_stime 29552.966; ru_maxrss 6548296; ru_ixrss 0; ru_ismrss 0; ru_idrss 0; ru_isrss 0; ru_minflt 1662027; ru_majflt 369; ru_nswap 0; ru_inblock 0; ru_oublock 56256; ru_msgsnd 0; ru_msgrcv 0; ru_nsignals 0; ru_nvcsw 801190; ru_nivcsw 2880329; cpu 55153.531; mem 403295.295; io 17.447; iow 0.000; maxvmem 9.065G; arid undefined; ```. For task 1 the maxvmem was 9.072G and for task 2 9.061G. I then ran a test requesting a minimum of 10 GB of free RAM and a max of 11 GB, which in theory should work unless `salmon` uses variable amounts of memory with the same data. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=10G,h_vmem=11G,h_fsize=100G; #$ -N step6-salmon_test.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test.$TASK_ID.txt; #$ -e ./logs/salmon_test.$TASK_ID.txt; #$ -m a; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. echo ""**** Job ends ****""; date; ```. The log file for the same file (task 3) now shows that there was a problem:. ```; **** Job",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:21545,Availability,echo,echo,21545,"7:45 2017; granted_pe local; slots 1; failed 0; exit_status 0; ru_wallclock 65313; ru_utime 25600.565; ru_stime 29552.966; ru_maxrss 6548296; ru_ixrss 0; ru_ismrss 0; ru_idrss 0; ru_isrss 0; ru_minflt 1662027; ru_majflt 369; ru_nswap 0; ru_inblock 0; ru_oublock 56256; ru_msgsnd 0; ru_msgrcv 0; ru_nsignals 0; ru_nvcsw 801190; ru_nivcsw 2880329; cpu 55153.531; mem 403295.295; io 17.447; iow 0.000; maxvmem 9.065G; arid undefined; ```. For task 1 the maxvmem was 9.072G and for task 2 9.061G. I then ran a test requesting a minimum of 10 GB of free RAM and a max of 11 GB, which in theory should work unless `salmon` uses variable amounts of memory with the same data. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=10G,h_vmem=11G,h_fsize=100G; #$ -N step6-salmon_test.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test.$TASK_ID.txt; #$ -e ./logs/salmon_test.$TASK_ID.txt; #$ -m a; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. echo ""**** Job ends ****""; date; ```. The log file for the same file (task 3) now shows that there was a problem:. ```; **** Job",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:21571,Availability,echo,echo,21571,"7:45 2017; granted_pe local; slots 1; failed 0; exit_status 0; ru_wallclock 65313; ru_utime 25600.565; ru_stime 29552.966; ru_maxrss 6548296; ru_ixrss 0; ru_ismrss 0; ru_idrss 0; ru_isrss 0; ru_minflt 1662027; ru_majflt 369; ru_nswap 0; ru_inblock 0; ru_oublock 56256; ru_msgsnd 0; ru_msgrcv 0; ru_nsignals 0; ru_nvcsw 801190; ru_nivcsw 2880329; cpu 55153.531; mem 403295.295; io 17.447; iow 0.000; maxvmem 9.065G; arid undefined; ```. For task 1 the maxvmem was 9.072G and for task 2 9.061G. I then ran a test requesting a minimum of 10 GB of free RAM and a max of 11 GB, which in theory should work unless `salmon` uses variable amounts of memory with the same data. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=10G,h_vmem=11G,h_fsize=100G; #$ -N step6-salmon_test.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test.$TASK_ID.txt; #$ -e ./logs/salmon_test.$TASK_ID.txt; #$ -m a; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. echo ""**** Job ends ****""; date; ```. The log file for the same file (task 3) now shows that there was a problem:. ```; **** Job",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:21601,Availability,echo,echo,21601,"7:45 2017; granted_pe local; slots 1; failed 0; exit_status 0; ru_wallclock 65313; ru_utime 25600.565; ru_stime 29552.966; ru_maxrss 6548296; ru_ixrss 0; ru_ismrss 0; ru_idrss 0; ru_isrss 0; ru_minflt 1662027; ru_majflt 369; ru_nswap 0; ru_inblock 0; ru_oublock 56256; ru_msgsnd 0; ru_msgrcv 0; ru_nsignals 0; ru_nvcsw 801190; ru_nivcsw 2880329; cpu 55153.531; mem 403295.295; io 17.447; iow 0.000; maxvmem 9.065G; arid undefined; ```. For task 1 the maxvmem was 9.072G and for task 2 9.061G. I then ran a test requesting a minimum of 10 GB of free RAM and a max of 11 GB, which in theory should work unless `salmon` uses variable amounts of memory with the same data. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=10G,h_vmem=11G,h_fsize=100G; #$ -N step6-salmon_test.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test.$TASK_ID.txt; #$ -e ./logs/salmon_test.$TASK_ID.txt; #$ -m a; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. echo ""**** Job ends ****""; date; ```. The log file for the same file (task 3) now shows that there was a problem:. ```; **** Job",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:21631,Availability,echo,echo,21631,"7:45 2017; granted_pe local; slots 1; failed 0; exit_status 0; ru_wallclock 65313; ru_utime 25600.565; ru_stime 29552.966; ru_maxrss 6548296; ru_ixrss 0; ru_ismrss 0; ru_idrss 0; ru_isrss 0; ru_minflt 1662027; ru_majflt 369; ru_nswap 0; ru_inblock 0; ru_oublock 56256; ru_msgsnd 0; ru_msgrcv 0; ru_nsignals 0; ru_nvcsw 801190; ru_nivcsw 2880329; cpu 55153.531; mem 403295.295; io 17.447; iow 0.000; maxvmem 9.065G; arid undefined; ```. For task 1 the maxvmem was 9.072G and for task 2 9.061G. I then ran a test requesting a minimum of 10 GB of free RAM and a max of 11 GB, which in theory should work unless `salmon` uses variable amounts of memory with the same data. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=10G,h_vmem=11G,h_fsize=100G; #$ -N step6-salmon_test.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test.$TASK_ID.txt; #$ -e ./logs/salmon_test.$TASK_ID.txt; #$ -m a; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. echo ""**** Job ends ****""; date; ```. The log file for the same file (task 3) now shows that there was a problem:. ```; **** Job",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:22448,Availability,echo,echo,22448,"*** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. echo ""**** Job ends ****""; date; ```. The log file for the same file (task 3) now shows that there was a problem:. ```; **** Job starts ****; Wed Mar 8 11:37:31 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9987275; Job name: step6-salmon_test.gsk_phaseII; Hostname: compute-051; Task id:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:22795,Availability,avail,available,22795,".manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. echo ""**** Job ends ****""; date; ```. The log file for the same file (task 3) now shows that there was a problem:. ```; **** Job starts ****; Wed Mar 8 11:37:31 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9987275; Job name: step6-salmon_test.gsk_phaseII; Hostname: compute-051; Task id:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/R10003_D19KGACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/R10003_D19KGACXX/logs; [2017-03-08 11:37:32.888] [jointLo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:22837,Availability,avail,available,22837,"cl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. echo ""**** Job ends ****""; date; ```. The log file for the same file (task 3) now shows that there was a problem:. ```; **** Job starts ****; Wed Mar 8 11:37:31 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9987275; Job name: step6-salmon_test.gsk_phaseII; Hostname: compute-051; Task id:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/R10003_D19KGACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/R10003_D19KGACXX/logs; [2017-03-08 11:37:32.888] [jointLog] [info] parsing read library format; [2017-03-08 11:37:32.893] [jointLog] [info",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:27201,Availability,echo,echo,27201,"_isrss 0; ru_minflt 21951; ru_majflt 282; ru_nswap 0; ru_inblock 56; ru_oublock 1066296; ru_msgsnd 0; ru_msgrcv 0; ru_nsignals 0; ru_nvcsw 1230; ru_nivcsw 53; cpu 4.048; mem 27.889; io 0.002; iow 0.000; maxvmem 10.736G; arid undefined; ```. I'm sure that the job got terminated because the memory reached the limit of 11 GB. . I previously did several tests where for a file the max memory reported was about 9 GB when requesting about 100G of RAM, and the same job kept failing even if I requested 10G, 20G, 30G, 40G... I didn't save the info then to report the problem. . Back on these tests, I then increased the memory requested a bit more (and used the `-m e` SGE option to get an email with the max vmem, which matches the `qacct` output). Here is the bash script:. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=14G,h_vmem=15G,h_fsize=100G; #$ -N step6-salmon_test2.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test2.$TASK_ID.txt; #$ -e ./logs/salmon_test2.$TASK_ID.txt; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. echo ""**** Job ends",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:27236,Availability,echo,echo,27236,"sgrcv 0; ru_nsignals 0; ru_nvcsw 1230; ru_nivcsw 53; cpu 4.048; mem 27.889; io 0.002; iow 0.000; maxvmem 10.736G; arid undefined; ```. I'm sure that the job got terminated because the memory reached the limit of 11 GB. . I previously did several tests where for a file the max memory reported was about 9 GB when requesting about 100G of RAM, and the same job kept failing even if I requested 10G, 20G, 30G, 40G... I didn't save the info then to report the problem. . Back on these tests, I then increased the memory requested a bit more (and used the `-m e` SGE option to get an email with the max vmem, which matches the `qacct` output). Here is the bash script:. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=14G,h_vmem=15G,h_fsize=100G; #$ -N step6-salmon_test2.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test2.$TASK_ID.txt; #$ -e ./logs/salmon_test2.$TASK_ID.txt; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. echo ""**** Job ends ****""; date; ```. and the log file for task 2:. ```bash; $ more logs/salmon_test2.2.txt; **** Job starts *",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:27265,Availability,echo,echo,27265,"sgrcv 0; ru_nsignals 0; ru_nvcsw 1230; ru_nivcsw 53; cpu 4.048; mem 27.889; io 0.002; iow 0.000; maxvmem 10.736G; arid undefined; ```. I'm sure that the job got terminated because the memory reached the limit of 11 GB. . I previously did several tests where for a file the max memory reported was about 9 GB when requesting about 100G of RAM, and the same job kept failing even if I requested 10G, 20G, 30G, 40G... I didn't save the info then to report the problem. . Back on these tests, I then increased the memory requested a bit more (and used the `-m e` SGE option to get an email with the max vmem, which matches the `qacct` output). Here is the bash script:. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=14G,h_vmem=15G,h_fsize=100G; #$ -N step6-salmon_test2.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test2.$TASK_ID.txt; #$ -e ./logs/salmon_test2.$TASK_ID.txt; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. echo ""**** Job ends ****""; date; ```. and the log file for task 2:. ```bash; $ more logs/salmon_test2.2.txt; **** Job starts *",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:27287,Availability,echo,echo,27287,"sgrcv 0; ru_nsignals 0; ru_nvcsw 1230; ru_nivcsw 53; cpu 4.048; mem 27.889; io 0.002; iow 0.000; maxvmem 10.736G; arid undefined; ```. I'm sure that the job got terminated because the memory reached the limit of 11 GB. . I previously did several tests where for a file the max memory reported was about 9 GB when requesting about 100G of RAM, and the same job kept failing even if I requested 10G, 20G, 30G, 40G... I didn't save the info then to report the problem. . Back on these tests, I then increased the memory requested a bit more (and used the `-m e` SGE option to get an email with the max vmem, which matches the `qacct` output). Here is the bash script:. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=14G,h_vmem=15G,h_fsize=100G; #$ -N step6-salmon_test2.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test2.$TASK_ID.txt; #$ -e ./logs/salmon_test2.$TASK_ID.txt; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. echo ""**** Job ends ****""; date; ```. and the log file for task 2:. ```bash; $ more logs/salmon_test2.2.txt; **** Job starts *",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:27313,Availability,echo,echo,27313,"sgrcv 0; ru_nsignals 0; ru_nvcsw 1230; ru_nivcsw 53; cpu 4.048; mem 27.889; io 0.002; iow 0.000; maxvmem 10.736G; arid undefined; ```. I'm sure that the job got terminated because the memory reached the limit of 11 GB. . I previously did several tests where for a file the max memory reported was about 9 GB when requesting about 100G of RAM, and the same job kept failing even if I requested 10G, 20G, 30G, 40G... I didn't save the info then to report the problem. . Back on these tests, I then increased the memory requested a bit more (and used the `-m e` SGE option to get an email with the max vmem, which matches the `qacct` output). Here is the bash script:. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=14G,h_vmem=15G,h_fsize=100G; #$ -N step6-salmon_test2.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test2.$TASK_ID.txt; #$ -e ./logs/salmon_test2.$TASK_ID.txt; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. echo ""**** Job ends ****""; date; ```. and the log file for task 2:. ```bash; $ more logs/salmon_test2.2.txt; **** Job starts *",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:27343,Availability,echo,echo,27343,"sgrcv 0; ru_nsignals 0; ru_nvcsw 1230; ru_nivcsw 53; cpu 4.048; mem 27.889; io 0.002; iow 0.000; maxvmem 10.736G; arid undefined; ```. I'm sure that the job got terminated because the memory reached the limit of 11 GB. . I previously did several tests where for a file the max memory reported was about 9 GB when requesting about 100G of RAM, and the same job kept failing even if I requested 10G, 20G, 30G, 40G... I didn't save the info then to report the problem. . Back on these tests, I then increased the memory requested a bit more (and used the `-m e` SGE option to get an email with the max vmem, which matches the `qacct` output). Here is the bash script:. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=14G,h_vmem=15G,h_fsize=100G; #$ -N step6-salmon_test2.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test2.$TASK_ID.txt; #$ -e ./logs/salmon_test2.$TASK_ID.txt; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. echo ""**** Job ends ****""; date; ```. and the log file for task 2:. ```bash; $ more logs/salmon_test2.2.txt; **** Job starts *",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:27373,Availability,echo,echo,27373,"sgrcv 0; ru_nsignals 0; ru_nvcsw 1230; ru_nivcsw 53; cpu 4.048; mem 27.889; io 0.002; iow 0.000; maxvmem 10.736G; arid undefined; ```. I'm sure that the job got terminated because the memory reached the limit of 11 GB. . I previously did several tests where for a file the max memory reported was about 9 GB when requesting about 100G of RAM, and the same job kept failing even if I requested 10G, 20G, 30G, 40G... I didn't save the info then to report the problem. . Back on these tests, I then increased the memory requested a bit more (and used the `-m e` SGE option to get an email with the max vmem, which matches the `qacct` output). Here is the bash script:. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=14G,h_vmem=15G,h_fsize=100G; #$ -N step6-salmon_test2.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test2.$TASK_ID.txt; #$ -e ./logs/salmon_test2.$TASK_ID.txt; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. echo ""**** Job ends ****""; date; ```. and the log file for task 2:. ```bash; $ more logs/salmon_test2.2.txt; **** Job starts *",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:28192,Availability,echo,echo,28192,"* Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. echo ""**** Job ends ****""; date; ```. and the log file for task 2:. ```bash; $ more logs/salmon_test2.2.txt; **** Job starts ****; Wed Mar 8 11:53:17 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9987283; Job name: step6-salmon_test2.gsk_phaseII; Hostname: compute-060; Task id:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:28529,Availability,avail,available,28529,"/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. echo ""**** Job ends ****""; date; ```. and the log file for task 2:. ```bash; $ more logs/salmon_test2.2.txt; **** Job starts ****; Wed Mar 8 11:53:17 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9987283; Job name: step6-salmon_test2.gsk_phaseII; Hostname: compute-060; Task id:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/R10002_C29P7ACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/R10002_C29P7ACXX/logs; [2017-03-08 11:53:36.762] [joint",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:28571,Availability,avail,available,28571," $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. echo ""**** Job ends ****""; date; ```. and the log file for task 2:. ```bash; $ more logs/salmon_test2.2.txt; **** Job starts ****; Wed Mar 8 11:53:17 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9987283; Job name: step6-salmon_test2.gsk_phaseII; Hostname: compute-060; Task id:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/R10002_C29P7ACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/R10002_C29P7ACXX/logs; [2017-03-08 11:53:36.762] [jointLog] [info] parsing read library format; [2017-03-08 11:53:36.763] [jointLog] [in",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:1526,Deployability,pipeline,pipeline,1526,"e bash script we used to run `salmon` for a 422 sample dataset:. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=80G,h_vmem=90G,h_fsize=100G; #$ -N step6-txQuant-alzheimer.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/txQuant-alzheimer.$TASK_ID.txt; #$ -e ./logs/txQuant-alzheimer.$TASK_ID.txt; #$ -t 1-422; #$ -m a; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. echo ""**** Job ends ****""; date; ```. The important part is that we are requesting 1 single core with 80 GB of free memory and setting the limit at 90 GB. We are also using the `-p 1` option. . Here is the log file for one of them (task 3):. ```; **** Job starts ****; Mon Mar 6 23:19:13 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9958683; Job name: step6-txQuant-alzheimer.gsk_phaseII; Hostname: compute-068; Task id: ; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases ; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:1625,Deployability,pipeline,pipeline,1625,"m_free=80G,h_vmem=90G,h_fsize=100G; #$ -N step6-txQuant-alzheimer.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/txQuant-alzheimer.$TASK_ID.txt; #$ -e ./logs/txQuant-alzheimer.$TASK_ID.txt; #$ -t 1-422; #$ -m a; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. echo ""**** Job ends ****""; date; ```. The important part is that we are requesting 1 single core with 80 GB of free memory and setting the limit at 90 GB. We are also using the `-p 1` option. . Here is the log file for one of them (task 3):. ```; **** Job starts ****; Mon Mar 6 23:19:13 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9958683; Job name: step6-txQuant-alzheimer.gsk_phaseII; Hostname: compute-068; Task id: ; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases ; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /dcl0",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:2392,Deployability,release,releases,2392,"ieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. echo ""**** Job ends ****""; date; ```. The important part is that we are requesting 1 single core with 80 GB of free memory and setting the limit at 90 GB. We are also using the `-p 1` option. . Here is the log file for one of them (task 3):. ```; **** Job starts ****; Mon Mar 6 23:19:13 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9958683; Job name: step6-txQuant-alzheimer.gsk_phaseII; Hostname: compute-068; Task id: ; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases ; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX/logs; [1m[2017-03-07 03:00:05.319] [jointLog] [info] parsing read library format; [00m[1m[2017-03-07 03:00:05.337] [jointLog] [info] There is 1 library.; [00m[1m[2017-03-07 03:00:41.948] [jointLog] [info] Loading Qua",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:2468,Deployability,upgrade,upgrade,2468,"ieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. echo ""**** Job ends ****""; date; ```. The important part is that we are requesting 1 single core with 80 GB of free memory and setting the limit at 90 GB. We are also using the `-p 1` option. . Here is the log file for one of them (task 3):. ```; **** Job starts ****; Mon Mar 6 23:19:13 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9958683; Job name: step6-txQuant-alzheimer.gsk_phaseII; Hostname: compute-068; Task id: ; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases ; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX/logs; [1m[2017-03-07 03:00:05.319] [jointLog] [info] parsing read library format; [00m[1m[2017-03-07 03:00:05.337] [jointLog] [info] There is 1 library.; [00m[1m[2017-03-07 03:00:41.948] [jointLog] [info] Loading Qua",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:2656,Deployability,pipeline,pipeline,2656,"otation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. echo ""**** Job ends ****""; date; ```. The important part is that we are requesting 1 single core with 80 GB of free memory and setting the limit at 90 GB. We are also using the `-p 1` option. . Here is the log file for one of them (task 3):. ```; **** Job starts ****; Mon Mar 6 23:19:13 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9958683; Job name: step6-txQuant-alzheimer.gsk_phaseII; Hostname: compute-068; Task id: ; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases ; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX/logs; [1m[2017-03-07 03:00:05.319] [jointLog] [info] parsing read library format; [00m[1m[2017-03-07 03:00:05.337] [jointLog] [info] There is 1 library.; [00m[1m[2017-03-07 03:00:41.948] [jointLog] [info] Loading Quasi index; [00m[1m[2017-03-07 03:00:41.972] [jointLog] [info] Loading 32-bit quasi index; [00m[1m[2017-03-07 03:42:43.689] [stderrLog] [info] Loading Suffix Array ; [00m[1m[2017-03-07 04:54:34.7",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:22154,Deployability,pipeline,pipeline,22154,"ich in theory should work unless `salmon` uses variable amounts of memory with the same data. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=10G,h_vmem=11G,h_fsize=100G; #$ -N step6-salmon_test.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test.$TASK_ID.txt; #$ -e ./logs/salmon_test.$TASK_ID.txt; #$ -m a; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. echo ""**** Job ends ****""; date; ```. The log file for the same file (task 3) now shows that there was a problem:. ```; **** Job starts ****; Wed Mar 8 11:37:31 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9987275; Job name: step6-salmon_test.gsk_phaseII; Hostname: compute-051; Task id:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-p",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:22253,Deployability,pipeline,pipeline,22253,"!/bin/bash; #$ -cwd; #$ -l mem_free=10G,h_vmem=11G,h_fsize=100G; #$ -N step6-salmon_test.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test.$TASK_ID.txt; #$ -e ./logs/salmon_test.$TASK_ID.txt; #$ -m a; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. echo ""**** Job ends ****""; date; ```. The log file for the same file (task 3) now shows that there was a problem:. ```; **** Job starts ****; Wed Mar 8 11:37:31 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9987275; Job name: step6-salmon_test.gsk_phaseII; Hostname: compute-051; Task id:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:22888,Deployability,release,releases,22888," /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. echo ""**** Job ends ****""; date; ```. The log file for the same file (task 3) now shows that there was a problem:. ```; **** Job starts ****; Wed Mar 8 11:37:31 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9987275; Job name: step6-salmon_test.gsk_phaseII; Hostname: compute-051; Task id:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/R10003_D19KGACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/R10003_D19KGACXX/logs; [2017-03-08 11:37:32.888] [jointLog] [info] parsing read library format; [2017-03-08 11:37:32.893] [jointLog] [info] There is 1 library.; terminate called without an active exception; /cm/local/apps/sge/var/spool/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:22963,Deployability,upgrade,upgrade,22963," /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. echo ""**** Job ends ****""; date; ```. The log file for the same file (task 3) now shows that there was a problem:. ```; **** Job starts ****; Wed Mar 8 11:37:31 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9987275; Job name: step6-salmon_test.gsk_phaseII; Hostname: compute-051; Task id:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/R10003_D19KGACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/R10003_D19KGACXX/logs; [2017-03-08 11:37:32.888] [jointLog] [info] parsing read library format; [2017-03-08 11:37:32.893] [jointLog] [info] There is 1 library.; terminate called without an active exception; /cm/local/apps/sge/var/spool/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:23149,Deployability,pipeline,pipeline,23149,"er/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. echo ""**** Job ends ****""; date; ```. The log file for the same file (task 3) now shows that there was a problem:. ```; **** Job starts ****; Wed Mar 8 11:37:31 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9987275; Job name: step6-salmon_test.gsk_phaseII; Hostname: compute-051; Task id:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/R10003_D19KGACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/R10003_D19KGACXX/logs; [2017-03-08 11:37:32.888] [jointLog] [info] parsing read library format; [2017-03-08 11:37:32.893] [jointLog] [info] There is 1 library.; terminate called without an active exception; /cm/local/apps/sge/var/spool/compute-051/job_scripts/9987275: line 31: 41232 Aborted (core dumped) /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Softw; are/Salmon-0.7.2_linux_x86_64/bin/salmon quant -i /dcl01/lieber/ajaffe/Emily/R",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:24037,Deployability,pipeline,pipeline,24037,"e upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/R10003_D19KGACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/R10003_D19KGACXX/logs; [2017-03-08 11:37:32.888] [jointLog] [info] parsing read library format; [2017-03-08 11:37:32.893] [jointLog] [info] There is 1 library.; terminate called without an active exception; /cm/local/apps/sge/var/spool/compute-051/job_scripts/9987275: line 31: 41232 Aborted (core dumped) /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Softw; are/Salmon-0.7.2_linux_x86_64/bin/salmon quant -i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.tr; anscripts -p 1 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}; **** Job ends ****; Wed Mar 8 11:37:36 EST 2017; ```. and the core dump file shows that the program was terminated:. ```bash; $ gdb core.41232; GNU gdb (GDB) Red Hat Enterprise Linux (7.2-60.el6_4.1); Copyright (C) 2010 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-redhat-linux-gnu"".; For bug reporting instructions, please see:; <http://www.gnu.org/s",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:24137,Deployability,pipeline,pipeline,24137,"ly/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/R10003_D19KGACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/R10003_D19KGACXX/logs; [2017-03-08 11:37:32.888] [jointLog] [info] parsing read library format; [2017-03-08 11:37:32.893] [jointLog] [info] There is 1 library.; terminate called without an active exception; /cm/local/apps/sge/var/spool/compute-051/job_scripts/9987275: line 31: 41232 Aborted (core dumped) /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Softw; are/Salmon-0.7.2_linux_x86_64/bin/salmon quant -i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.tr; anscripts -p 1 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}; **** Job ends ****; Wed Mar 8 11:37:36 EST 2017; ```. and the core dump file shows that the program was terminated:. ```bash; $ gdb core.41232; GNU gdb (GDB) Red Hat Enterprise Linux (7.2-60.el6_4.1); Copyright (C) 2010 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-redhat-linux-gnu"".; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>...; Missing separate debuginfo for the main executable file; Try: yum --disablerepo='*' --enablerepo='*-debug*' install /usr/lib/debug/.build-id/f2/3c99ed06abf",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:25092,Deployability,install,install,25092,"tw; are/Salmon-0.7.2_linux_x86_64/bin/salmon quant -i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.tr; anscripts -p 1 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}; **** Job ends ****; Wed Mar 8 11:37:36 EST 2017; ```. and the core dump file shows that the program was terminated:. ```bash; $ gdb core.41232; GNU gdb (GDB) Red Hat Enterprise Linux (7.2-60.el6_4.1); Copyright (C) 2010 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-redhat-linux-gnu"".; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>...; Missing separate debuginfo for the main executable file; Try: yum --disablerepo='*' --enablerepo='*-debug*' install /usr/lib/debug/.build-id/f2/3c99ed06abf17dd0ee1073eac092487ac62314; [New Thread 41232]; [New Thread 41236]; [New Thread 41235]; [New Thread 41234]; Core was generated by `/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/b'.; Program terminated with signal 6, Aborted.; #0 0x0000003612832625 in ?? (); ""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/core.41232"" is a core file.; Please specify an executable to debug.; (gdb) q; ```. The SGE information shows that it basically reached 10.7 GB of RAM:. ```bash; $ qacct -j 9987275 -t 3; ==============================================================; qname shared.q; hostname compute-051.cm.cluster; group lieber_jaffe; owner lcollado; project NONE; department defaultdepartment; jobname step6-salmon_test.gsk_phaseII; jobnumber 9987275; taskid 3; account sge; priority 0; qsub_time Wed Mar 8 11:37:17 2017; start_time Wed Mar 8 11:37:31 2017; end_time Wed Mar 8 11:37:36 2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:25305,Deployability,pipeline,pipeline,25305,"pts -p 1 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}; **** Job ends ****; Wed Mar 8 11:37:36 EST 2017; ```. and the core dump file shows that the program was terminated:. ```bash; $ gdb core.41232; GNU gdb (GDB) Red Hat Enterprise Linux (7.2-60.el6_4.1); Copyright (C) 2010 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-redhat-linux-gnu"".; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>...; Missing separate debuginfo for the main executable file; Try: yum --disablerepo='*' --enablerepo='*-debug*' install /usr/lib/debug/.build-id/f2/3c99ed06abf17dd0ee1073eac092487ac62314; [New Thread 41232]; [New Thread 41236]; [New Thread 41235]; [New Thread 41234]; Core was generated by `/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/b'.; Program terminated with signal 6, Aborted.; #0 0x0000003612832625 in ?? (); ""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/core.41232"" is a core file.; Please specify an executable to debug.; (gdb) q; ```. The SGE information shows that it basically reached 10.7 GB of RAM:. ```bash; $ qacct -j 9987275 -t 3; ==============================================================; qname shared.q; hostname compute-051.cm.cluster; group lieber_jaffe; owner lcollado; project NONE; department defaultdepartment; jobname step6-salmon_test.gsk_phaseII; jobnumber 9987275; taskid 3; account sge; priority 0; qsub_time Wed Mar 8 11:37:17 2017; start_time Wed Mar 8 11:37:31 2017; end_time Wed Mar 8 11:37:36 2017; granted_pe local; slots 1; failed 0; exit_status 0; ru_wallclock 5; ru_utime 0.368; ru_stime 3.680; ru_maxrss 537668; ru_ixrss 0; ru_ismrss 0; ru_idrss 0; ru_isrss 0; ru_",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:27897,Deployability,pipeline,pipeline,27897," an email with the max vmem, which matches the `qacct` output). Here is the bash script:. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=14G,h_vmem=15G,h_fsize=100G; #$ -N step6-salmon_test2.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test2.$TASK_ID.txt; #$ -e ./logs/salmon_test2.$TASK_ID.txt; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. echo ""**** Job ends ****""; date; ```. and the log file for task 2:. ```bash; $ more logs/salmon_test2.2.txt; **** Job starts ****; Wed Mar 8 11:53:17 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9987283; Job name: step6-salmon_test2.gsk_phaseII; Hostname: compute-060; Task id:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/A",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:27996,Deployability,pipeline,pipeline,27996,"n/bash; #$ -cwd; #$ -l mem_free=14G,h_vmem=15G,h_fsize=100G; #$ -N step6-salmon_test2.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test2.$TASK_ID.txt; #$ -e ./logs/salmon_test2.$TASK_ID.txt; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. echo ""**** Job ends ****""; date; ```. and the log file for task 2:. ```bash; $ more logs/salmon_test2.2.txt; **** Job starts ****; Wed Mar 8 11:53:17 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9987283; Job name: step6-salmon_test2.gsk_phaseII; Hostname: compute-060; Task id:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:28622,Deployability,release,releases,28622,"ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. echo ""**** Job ends ****""; date; ```. and the log file for task 2:. ```bash; $ more logs/salmon_test2.2.txt; **** Job starts ****; Wed Mar 8 11:53:17 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9987283; Job name: step6-salmon_test2.gsk_phaseII; Hostname: compute-060; Task id:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/R10002_C29P7ACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/R10002_C29P7ACXX/logs; [2017-03-08 11:53:36.762] [jointLog] [info] parsing read library format; [2017-03-08 11:53:36.763] [jointLog] [info] There is 1 library.; terminate called without an active exception; /cm/local/apps/sge/var/spoo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:28697,Deployability,upgrade,upgrade,28697,"ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. echo ""**** Job ends ****""; date; ```. and the log file for task 2:. ```bash; $ more logs/salmon_test2.2.txt; **** Job starts ****; Wed Mar 8 11:53:17 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9987283; Job name: step6-salmon_test2.gsk_phaseII; Hostname: compute-060; Task id:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/R10002_C29P7ACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/R10002_C29P7ACXX/logs; [2017-03-08 11:53:36.762] [jointLog] [info] parsing read library format; [2017-03-08 11:53:36.763] [jointLog] [info] There is 1 library.; terminate called without an active exception; /cm/local/apps/sge/var/spoo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:28883,Deployability,pipeline,pipeline,28883,"cl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. echo ""**** Job ends ****""; date; ```. and the log file for task 2:. ```bash; $ more logs/salmon_test2.2.txt; **** Job starts ****; Wed Mar 8 11:53:17 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9987283; Job name: step6-salmon_test2.gsk_phaseII; Hostname: compute-060; Task id:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/R10002_C29P7ACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/R10002_C29P7ACXX/logs; [2017-03-08 11:53:36.762] [jointLog] [info] parsing read library format; [2017-03-08 11:53:36.763] [jointLog] [info] There is 1 library.; terminate called without an active exception; /cm/local/apps/sge/var/spool/compute-060/job_scripts/9987283: line 31: 1629 Aborted (core dumped) /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Softw; are/Salmon-0.7.2_linux_x86_64/bin/salmon quant -i /dcl01/lieber/ajaffe/Emily/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:29772,Deployability,pipeline,pipeline,29772," upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/R10002_C29P7ACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/R10002_C29P7ACXX/logs; [2017-03-08 11:53:36.762] [jointLog] [info] parsing read library format; [2017-03-08 11:53:36.763] [jointLog] [info] There is 1 library.; terminate called without an active exception; /cm/local/apps/sge/var/spool/compute-060/job_scripts/9987283: line 31: 1629 Aborted (core dumped) /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Softw; are/Salmon-0.7.2_linux_x86_64/bin/salmon quant -i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.tr; anscripts -p 1 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}; **** Job ends ****; Wed Mar 8 11:53:40 EST 2017; ```. as well as the `gdb` output for it's core dump file:. ```bash; $ gdb core.1629; GNU gdb (GDB) Red Hat Enterprise Linux (7.2-60.el6_4.1); Copyright (C) 2010 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-redhat-linux-gnu"".; For bug reporting instructions, please see:; <http://www.gnu.org/software/gd",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:29872,Deployability,pipeline,pipeline,29872,"y/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/R10002_C29P7ACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/R10002_C29P7ACXX/logs; [2017-03-08 11:53:36.762] [jointLog] [info] parsing read library format; [2017-03-08 11:53:36.763] [jointLog] [info] There is 1 library.; terminate called without an active exception; /cm/local/apps/sge/var/spool/compute-060/job_scripts/9987283: line 31: 1629 Aborted (core dumped) /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Softw; are/Salmon-0.7.2_linux_x86_64/bin/salmon quant -i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.tr; anscripts -p 1 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}; **** Job ends ****; Wed Mar 8 11:53:40 EST 2017; ```. as well as the `gdb` output for it's core dump file:. ```bash; $ gdb core.1629; GNU gdb (GDB) Red Hat Enterprise Linux (7.2-60.el6_4.1); Copyright (C) 2010 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-redhat-linux-gnu"".; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>...; Missing separate debuginfo for the main executable file; Try: yum --disablerepo='*' --enablerepo='*-debug*' install /usr/lib/debug/.build-id/f2/3c99ed06abf17dd0ee10",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:30818,Deployability,install,install,30818,"eline/Softw; are/Salmon-0.7.2_linux_x86_64/bin/salmon quant -i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.tr; anscripts -p 1 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}; **** Job ends ****; Wed Mar 8 11:53:40 EST 2017; ```. as well as the `gdb` output for it's core dump file:. ```bash; $ gdb core.1629; GNU gdb (GDB) Red Hat Enterprise Linux (7.2-60.el6_4.1); Copyright (C) 2010 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-redhat-linux-gnu"".; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>...; Missing separate debuginfo for the main executable file; Try: yum --disablerepo='*' --enablerepo='*-debug*' install /usr/lib/debug/.build-id/f2/3c99ed06abf17dd0ee1073eac092487ac62314; [New Thread 1629]; [New Thread 1707]; [New Thread 1708]; [New Thread 1709]; Core was generated by `/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/b'.; Program terminated with signal 6, Aborted.; #0 0x00000037e2032625 in ?? (); ""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/core.1629"" is a core file.; Please specify an executable to debug.; (gdb) q; ```. and the SGE info:. ```bash; $ qacct -j 9987283 -t 2; ==============================================================; qname shared.q; hostname compute-060.cm.cluster; group lieber_jaffe; owner lcollado; project NONE; department defaultdepartment; jobname step6-salmon_test2.gsk_phaseII; jobnumber 9987283; taskid 2; account sge; priority 0; qsub_time Wed Mar 8 11:53:12 2017; start_time Wed Mar 8 11:53:16 2017; end_time Wed Mar 8 11:53:40 2017; granted_pe local; slots 1; failed 0; exit_status ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:31027,Deployability,pipeline,pipeline,31027,".tr; anscripts -p 1 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}; **** Job ends ****; Wed Mar 8 11:53:40 EST 2017; ```. as well as the `gdb` output for it's core dump file:. ```bash; $ gdb core.1629; GNU gdb (GDB) Red Hat Enterprise Linux (7.2-60.el6_4.1); Copyright (C) 2010 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-redhat-linux-gnu"".; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>...; Missing separate debuginfo for the main executable file; Try: yum --disablerepo='*' --enablerepo='*-debug*' install /usr/lib/debug/.build-id/f2/3c99ed06abf17dd0ee1073eac092487ac62314; [New Thread 1629]; [New Thread 1707]; [New Thread 1708]; [New Thread 1709]; Core was generated by `/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/b'.; Program terminated with signal 6, Aborted.; #0 0x00000037e2032625 in ?? (); ""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/core.1629"" is a core file.; Please specify an executable to debug.; (gdb) q; ```. and the SGE info:. ```bash; $ qacct -j 9987283 -t 2; ==============================================================; qname shared.q; hostname compute-060.cm.cluster; group lieber_jaffe; owner lcollado; project NONE; department defaultdepartment; jobname step6-salmon_test2.gsk_phaseII; jobnumber 9987283; taskid 2; account sge; priority 0; qsub_time Wed Mar 8 11:53:12 2017; start_time Wed Mar 8 11:53:16 2017; end_time Wed Mar 8 11:53:40 2017; granted_pe local; slots 1; failed 0; exit_status 0; ru_wallclock 24; ru_utime 0.302; ru_stime 21.395; ru_maxrss 533908; ru_ixrss 0; ru_ismrss 0; ru_idrss 0; ru_isrss 0; ru_minflt 22035; ru_majflt 285; ru_nswap 0; ru_inbloc",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:21197,Modifiability,variab,variable,21197,"```bash; $ qacct -j 9958683 -t 3; ==============================================================; qname shared.q; hostname compute-068.cm.cluster; group lieber_jaffe; owner lcollado; project NONE; department defaultdepartment; jobname step6-txQuant-alzheimer.gsk_phaseII; jobnumber 9958683; taskid 3; account sge; priority 0; qsub_time Mon Mar 6 23:18:58 2017; start_time Mon Mar 6 23:19:12 2017; end_time Tue Mar 7 17:27:45 2017; granted_pe local; slots 1; failed 0; exit_status 0; ru_wallclock 65313; ru_utime 25600.565; ru_stime 29552.966; ru_maxrss 6548296; ru_ixrss 0; ru_ismrss 0; ru_idrss 0; ru_isrss 0; ru_minflt 1662027; ru_majflt 369; ru_nswap 0; ru_inblock 0; ru_oublock 56256; ru_msgsnd 0; ru_msgrcv 0; ru_nsignals 0; ru_nvcsw 801190; ru_nivcsw 2880329; cpu 55153.531; mem 403295.295; io 17.447; iow 0.000; maxvmem 9.065G; arid undefined; ```. For task 1 the maxvmem was 9.072G and for task 2 9.061G. I then ran a test requesting a minimum of 10 GB of free RAM and a max of 11 GB, which in theory should work unless `salmon` uses variable amounts of memory with the same data. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=10G,h_vmem=11G,h_fsize=100G; #$ -N step6-salmon_test.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test.$TASK_ID.txt; #$ -e ./logs/salmon_test.$TASK_ID.txt; #$ -m a; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-p",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:24853,Modifiability,config,configured,24853,"te called without an active exception; /cm/local/apps/sge/var/spool/compute-051/job_scripts/9987275: line 31: 41232 Aborted (core dumped) /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Softw; are/Salmon-0.7.2_linux_x86_64/bin/salmon quant -i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.tr; anscripts -p 1 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}; **** Job ends ****; Wed Mar 8 11:37:36 EST 2017; ```. and the core dump file shows that the program was terminated:. ```bash; $ gdb core.41232; GNU gdb (GDB) Red Hat Enterprise Linux (7.2-60.el6_4.1); Copyright (C) 2010 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-redhat-linux-gnu"".; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>...; Missing separate debuginfo for the main executable file; Try: yum --disablerepo='*' --enablerepo='*-debug*' install /usr/lib/debug/.build-id/f2/3c99ed06abf17dd0ee1073eac092487ac62314; [New Thread 41232]; [New Thread 41236]; [New Thread 41235]; [New Thread 41234]; Core was generated by `/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/b'.; Program terminated with signal 6, Aborted.; #0 0x0000003612832625 in ?? (); ""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/core.41232"" is a core file.; Please specify an executable to debug.; (gdb) q; ```. The SGE information shows that it basically reached 10.7 GB of RAM:. ```bash; $ qacct -j 9987275 -t 3; ==============================================================; qname shared.q; hostname compute-051.cm.cluster; group lieber_jaffe; owner lcollado; project NONE; department defaultdepartment; jobname st",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:30579,Modifiability,config,configured,30579,".; terminate called without an active exception; /cm/local/apps/sge/var/spool/compute-060/job_scripts/9987283: line 31: 1629 Aborted (core dumped) /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Softw; are/Salmon-0.7.2_linux_x86_64/bin/salmon quant -i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.tr; anscripts -p 1 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}; **** Job ends ****; Wed Mar 8 11:53:40 EST 2017; ```. as well as the `gdb` output for it's core dump file:. ```bash; $ gdb core.1629; GNU gdb (GDB) Red Hat Enterprise Linux (7.2-60.el6_4.1); Copyright (C) 2010 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-redhat-linux-gnu"".; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>...; Missing separate debuginfo for the main executable file; Try: yum --disablerepo='*' --enablerepo='*-debug*' install /usr/lib/debug/.build-id/f2/3c99ed06abf17dd0ee1073eac092487ac62314; [New Thread 1629]; [New Thread 1707]; [New Thread 1708]; [New Thread 1709]; Core was generated by `/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/b'.; Program terminated with signal 6, Aborted.; #0 0x00000037e2032625 in ?? (); ""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/core.1629"" is a core file.; Please specify an executable to debug.; (gdb) q; ```. and the SGE info:. ```bash; $ qacct -j 9987283 -t 2; ==============================================================; qname shared.q; hostname compute-060.cm.cluster; group lieber_jaffe; owner lcollado; project NONE; department defaultdepartment; jobname step6-salmon_test2.gsk_phaseII; jobnumber 9987283; taskid",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:3427,Performance,Load,Loading,3427,"nd minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX/logs; [1m[2017-03-07 03:00:05.319] [jointLog] [info] parsing read library format; [00m[1m[2017-03-07 03:00:05.337] [jointLog] [info] There is 1 library.; [00m[1m[2017-03-07 03:00:41.948] [jointLog] [info] Loading Quasi index; [00m[1m[2017-03-07 03:00:41.972] [jointLog] [info] Loading 32-bit quasi index; [00m[1m[2017-03-07 03:42:43.689] [stderrLog] [info] Loading Suffix Array ; [00m[1m[2017-03-07 04:54:34.756] [stderrLog] [info] Loading Transcript Info ; [00m[1m[2017-03-07 04:58:51.467] [stderrLog] [info] Loading Rank-Select Bit Array; [00m[1m[2017-03-07 06:59:17.578] [stderrLog] [info] There were 198093 set bits in the bit array; [00m[1m[2017-03-07 07:29:20.417] [stderrLog] [info] Computing transcript lengths; [00m[1m[2017-03-07 07:56:34.913] [stderrLog] [info] Waiting to finish loading hash; [00m[1m[2017-03-07 08:38:09.635] [stderrLog] [info] Successfully loaded position hash; [00m[1m[2017-03-07 08:38:09.636] [stderrLog] [info] Done loading index; [00m[1m[2017-03-07 08:38:09.637] [jointLog] [info] done; [00m[1m[2017-03-07 08:38:09.655] [jointLog] [info] Index contained 198093 targets; [00m. [A. [32mprocessed[31m 500000 [32mfragments[0m; hits: 624068, hits per frag: 1.2607",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:3501,Performance,Load,Loading,3501,"almon (mapping-based) v0.7.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX/logs; [1m[2017-03-07 03:00:05.319] [jointLog] [info] parsing read library format; [00m[1m[2017-03-07 03:00:05.337] [jointLog] [info] There is 1 library.; [00m[1m[2017-03-07 03:00:41.948] [jointLog] [info] Loading Quasi index; [00m[1m[2017-03-07 03:00:41.972] [jointLog] [info] Loading 32-bit quasi index; [00m[1m[2017-03-07 03:42:43.689] [stderrLog] [info] Loading Suffix Array ; [00m[1m[2017-03-07 04:54:34.756] [stderrLog] [info] Loading Transcript Info ; [00m[1m[2017-03-07 04:58:51.467] [stderrLog] [info] Loading Rank-Select Bit Array; [00m[1m[2017-03-07 06:59:17.578] [stderrLog] [info] There were 198093 set bits in the bit array; [00m[1m[2017-03-07 07:29:20.417] [stderrLog] [info] Computing transcript lengths; [00m[1m[2017-03-07 07:56:34.913] [stderrLog] [info] Waiting to finish loading hash; [00m[1m[2017-03-07 08:38:09.635] [stderrLog] [info] Successfully loaded position hash; [00m[1m[2017-03-07 08:38:09.636] [stderrLog] [info] Done loading index; [00m[1m[2017-03-07 08:38:09.637] [jointLog] [info] done; [00m[1m[2017-03-07 08:38:09.655] [jointLog] [info] Index contained 198093 targets; [00m. [A. [32mprocessed[31m 500000 [32mfragments[0m; hits: 624068, hits per frag: 1.26074[A. [32mprocessed[31m 1000000 [32mfragments[0m; hits: 1248009, hits per ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:3583,Performance,Load,Loading,3583,"ant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX/logs; [1m[2017-03-07 03:00:05.319] [jointLog] [info] parsing read library format; [00m[1m[2017-03-07 03:00:05.337] [jointLog] [info] There is 1 library.; [00m[1m[2017-03-07 03:00:41.948] [jointLog] [info] Loading Quasi index; [00m[1m[2017-03-07 03:00:41.972] [jointLog] [info] Loading 32-bit quasi index; [00m[1m[2017-03-07 03:42:43.689] [stderrLog] [info] Loading Suffix Array ; [00m[1m[2017-03-07 04:54:34.756] [stderrLog] [info] Loading Transcript Info ; [00m[1m[2017-03-07 04:58:51.467] [stderrLog] [info] Loading Rank-Select Bit Array; [00m[1m[2017-03-07 06:59:17.578] [stderrLog] [info] There were 198093 set bits in the bit array; [00m[1m[2017-03-07 07:29:20.417] [stderrLog] [info] Computing transcript lengths; [00m[1m[2017-03-07 07:56:34.913] [stderrLog] [info] Waiting to finish loading hash; [00m[1m[2017-03-07 08:38:09.635] [stderrLog] [info] Successfully loaded position hash; [00m[1m[2017-03-07 08:38:09.636] [stderrLog] [info] Done loading index; [00m[1m[2017-03-07 08:38:09.637] [jointLog] [info] done; [00m[1m[2017-03-07 08:38:09.655] [jointLog] [info] Index contained 198093 targets; [00m. [A. [32mprocessed[31m 500000 [32mfragments[0m; hits: 624068, hits per frag: 1.26074[A. [32mprocessed[31m 1000000 [32mfragments[0m; hits: 1248009, hits per frag: 1.25428[A. [32mprocessed[31m 1500000 [32mfragments[0m; hits: 1873468",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:3660,Performance,Load,Loading,3660,"GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX/logs; [1m[2017-03-07 03:00:05.319] [jointLog] [info] parsing read library format; [00m[1m[2017-03-07 03:00:05.337] [jointLog] [info] There is 1 library.; [00m[1m[2017-03-07 03:00:41.948] [jointLog] [info] Loading Quasi index; [00m[1m[2017-03-07 03:00:41.972] [jointLog] [info] Loading 32-bit quasi index; [00m[1m[2017-03-07 03:42:43.689] [stderrLog] [info] Loading Suffix Array ; [00m[1m[2017-03-07 04:54:34.756] [stderrLog] [info] Loading Transcript Info ; [00m[1m[2017-03-07 04:58:51.467] [stderrLog] [info] Loading Rank-Select Bit Array; [00m[1m[2017-03-07 06:59:17.578] [stderrLog] [info] There were 198093 set bits in the bit array; [00m[1m[2017-03-07 07:29:20.417] [stderrLog] [info] Computing transcript lengths; [00m[1m[2017-03-07 07:56:34.913] [stderrLog] [info] Waiting to finish loading hash; [00m[1m[2017-03-07 08:38:09.635] [stderrLog] [info] Successfully loaded position hash; [00m[1m[2017-03-07 08:38:09.636] [stderrLog] [info] Done loading index; [00m[1m[2017-03-07 08:38:09.637] [jointLog] [info] done; [00m[1m[2017-03-07 08:38:09.655] [jointLog] [info] Index contained 198093 targets; [00m. [A. [32mprocessed[31m 500000 [32mfragments[0m; hits: 624068, hits per frag: 1.26074[A. [32mprocessed[31m 1000000 [32mfragments[0m; hits: 1248009, hits per frag: 1.25428[A. [32mprocessed[31m 1500000 [32mfragments[0m; hits: 1873468, hits per frag: 1.25316[A. [32mprocessed[31m 2000000 [32mfragments[0m; h",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:3740,Performance,Load,Loading,3740,"ads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX/logs; [1m[2017-03-07 03:00:05.319] [jointLog] [info] parsing read library format; [00m[1m[2017-03-07 03:00:05.337] [jointLog] [info] There is 1 library.; [00m[1m[2017-03-07 03:00:41.948] [jointLog] [info] Loading Quasi index; [00m[1m[2017-03-07 03:00:41.972] [jointLog] [info] Loading 32-bit quasi index; [00m[1m[2017-03-07 03:42:43.689] [stderrLog] [info] Loading Suffix Array ; [00m[1m[2017-03-07 04:54:34.756] [stderrLog] [info] Loading Transcript Info ; [00m[1m[2017-03-07 04:58:51.467] [stderrLog] [info] Loading Rank-Select Bit Array; [00m[1m[2017-03-07 06:59:17.578] [stderrLog] [info] There were 198093 set bits in the bit array; [00m[1m[2017-03-07 07:29:20.417] [stderrLog] [info] Computing transcript lengths; [00m[1m[2017-03-07 07:56:34.913] [stderrLog] [info] Waiting to finish loading hash; [00m[1m[2017-03-07 08:38:09.635] [stderrLog] [info] Successfully loaded position hash; [00m[1m[2017-03-07 08:38:09.636] [stderrLog] [info] Done loading index; [00m[1m[2017-03-07 08:38:09.637] [jointLog] [info] done; [00m[1m[2017-03-07 08:38:09.655] [jointLog] [info] Index contained 198093 targets; [00m. [A. [32mprocessed[31m 500000 [32mfragments[0m; hits: 624068, hits per frag: 1.26074[A. [32mprocessed[31m 1000000 [32mfragments[0m; hits: 1248009, hits per frag: 1.25428[A. [32mprocessed[31m 1500000 [32mfragments[0m; hits: 1873468, hits per frag: 1.25316[A. [32mprocessed[31m 2000000 [32mfragments[0m; hits: 2492702, hits per frag: 1.24947[A. [32mprocessed[31m 2500000 [32mfragments",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:4026,Performance,load,loading,4026," [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX/logs; [1m[2017-03-07 03:00:05.319] [jointLog] [info] parsing read library format; [00m[1m[2017-03-07 03:00:05.337] [jointLog] [info] There is 1 library.; [00m[1m[2017-03-07 03:00:41.948] [jointLog] [info] Loading Quasi index; [00m[1m[2017-03-07 03:00:41.972] [jointLog] [info] Loading 32-bit quasi index; [00m[1m[2017-03-07 03:42:43.689] [stderrLog] [info] Loading Suffix Array ; [00m[1m[2017-03-07 04:54:34.756] [stderrLog] [info] Loading Transcript Info ; [00m[1m[2017-03-07 04:58:51.467] [stderrLog] [info] Loading Rank-Select Bit Array; [00m[1m[2017-03-07 06:59:17.578] [stderrLog] [info] There were 198093 set bits in the bit array; [00m[1m[2017-03-07 07:29:20.417] [stderrLog] [info] Computing transcript lengths; [00m[1m[2017-03-07 07:56:34.913] [stderrLog] [info] Waiting to finish loading hash; [00m[1m[2017-03-07 08:38:09.635] [stderrLog] [info] Successfully loaded position hash; [00m[1m[2017-03-07 08:38:09.636] [stderrLog] [info] Done loading index; [00m[1m[2017-03-07 08:38:09.637] [jointLog] [info] done; [00m[1m[2017-03-07 08:38:09.655] [jointLog] [info] Index contained 198093 targets; [00m. [A. [32mprocessed[31m 500000 [32mfragments[0m; hits: 624068, hits per frag: 1.26074[A. [32mprocessed[31m 1000000 [32mfragments[0m; hits: 1248009, hits per frag: 1.25428[A. [32mprocessed[31m 1500000 [32mfragments[0m; hits: 1873468, hits per frag: 1.25316[A. [32mprocessed[31m 2000000 [32mfragments[0m; hits: 2492702, hits per frag: 1.24947[A. [32mprocessed[31m 2500000 [32mfragments[0m; hits: 3114558, hits per frag: 1.24832[A. [32mprocessed[31m 3000000 [32mfragments[0m; hits: 3733674, hits per frag: 1.24664[A. [32mprocessed[31m 3500000 [32mfragments[0m; hits: 4356329, hits per frag: 1.24645[A. [32mprocessed[31m 4000000 [32mfragmen",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:4107,Performance,load,loaded,4107,"XX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX/logs; [1m[2017-03-07 03:00:05.319] [jointLog] [info] parsing read library format; [00m[1m[2017-03-07 03:00:05.337] [jointLog] [info] There is 1 library.; [00m[1m[2017-03-07 03:00:41.948] [jointLog] [info] Loading Quasi index; [00m[1m[2017-03-07 03:00:41.972] [jointLog] [info] Loading 32-bit quasi index; [00m[1m[2017-03-07 03:42:43.689] [stderrLog] [info] Loading Suffix Array ; [00m[1m[2017-03-07 04:54:34.756] [stderrLog] [info] Loading Transcript Info ; [00m[1m[2017-03-07 04:58:51.467] [stderrLog] [info] Loading Rank-Select Bit Array; [00m[1m[2017-03-07 06:59:17.578] [stderrLog] [info] There were 198093 set bits in the bit array; [00m[1m[2017-03-07 07:29:20.417] [stderrLog] [info] Computing transcript lengths; [00m[1m[2017-03-07 07:56:34.913] [stderrLog] [info] Waiting to finish loading hash; [00m[1m[2017-03-07 08:38:09.635] [stderrLog] [info] Successfully loaded position hash; [00m[1m[2017-03-07 08:38:09.636] [stderrLog] [info] Done loading index; [00m[1m[2017-03-07 08:38:09.637] [jointLog] [info] done; [00m[1m[2017-03-07 08:38:09.655] [jointLog] [info] Index contained 198093 targets; [00m. [A. [32mprocessed[31m 500000 [32mfragments[0m; hits: 624068, hits per frag: 1.26074[A. [32mprocessed[31m 1000000 [32mfragments[0m; hits: 1248009, hits per frag: 1.25428[A. [32mprocessed[31m 1500000 [32mfragments[0m; hits: 1873468, hits per frag: 1.25316[A. [32mprocessed[31m 2000000 [32mfragments[0m; hits: 2492702, hits per frag: 1.24947[A. [32mprocessed[31m 2500000 [32mfragments[0m; hits: 3114558, hits per frag: 1.24832[A. [32mprocessed[31m 3000000 [32mfragments[0m; hits: 3733674, hits per frag: 1.24664[A. [32mprocessed[31m 3500000 [32mfragments[0m; hits: 4356329, hits per frag: 1.24645[A. [32mprocessed[31m 4000000 [32mfragments[0m; hits: 4978863, hits per frag: 1.24627[A. [32mprocessed[31m 4500000 [32mfragm",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:4188,Performance,load,loading,4188,"_tx/R10003_D19KGACXX/logs; [1m[2017-03-07 03:00:05.319] [jointLog] [info] parsing read library format; [00m[1m[2017-03-07 03:00:05.337] [jointLog] [info] There is 1 library.; [00m[1m[2017-03-07 03:00:41.948] [jointLog] [info] Loading Quasi index; [00m[1m[2017-03-07 03:00:41.972] [jointLog] [info] Loading 32-bit quasi index; [00m[1m[2017-03-07 03:42:43.689] [stderrLog] [info] Loading Suffix Array ; [00m[1m[2017-03-07 04:54:34.756] [stderrLog] [info] Loading Transcript Info ; [00m[1m[2017-03-07 04:58:51.467] [stderrLog] [info] Loading Rank-Select Bit Array; [00m[1m[2017-03-07 06:59:17.578] [stderrLog] [info] There were 198093 set bits in the bit array; [00m[1m[2017-03-07 07:29:20.417] [stderrLog] [info] Computing transcript lengths; [00m[1m[2017-03-07 07:56:34.913] [stderrLog] [info] Waiting to finish loading hash; [00m[1m[2017-03-07 08:38:09.635] [stderrLog] [info] Successfully loaded position hash; [00m[1m[2017-03-07 08:38:09.636] [stderrLog] [info] Done loading index; [00m[1m[2017-03-07 08:38:09.637] [jointLog] [info] done; [00m[1m[2017-03-07 08:38:09.655] [jointLog] [info] Index contained 198093 targets; [00m. [A. [32mprocessed[31m 500000 [32mfragments[0m; hits: 624068, hits per frag: 1.26074[A. [32mprocessed[31m 1000000 [32mfragments[0m; hits: 1248009, hits per frag: 1.25428[A. [32mprocessed[31m 1500000 [32mfragments[0m; hits: 1873468, hits per frag: 1.25316[A. [32mprocessed[31m 2000000 [32mfragments[0m; hits: 2492702, hits per frag: 1.24947[A. [32mprocessed[31m 2500000 [32mfragments[0m; hits: 3114558, hits per frag: 1.24832[A. [32mprocessed[31m 3000000 [32mfragments[0m; hits: 3733674, hits per frag: 1.24664[A. [32mprocessed[31m 3500000 [32mfragments[0m; hits: 4356329, hits per frag: 1.24645[A. [32mprocessed[31m 4000000 [32mfragments[0m; hits: 4978863, hits per frag: 1.24627[A. [32mprocessed[31m 4500000 [32mfragments[0m; hits: 5601788, hits per frag: 1.24623[A. [32mprocessed[31m 5000000 ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:18087,Performance,optimiz,optimizer,18087,"A. [32mprocessed[31m 70000000 [32mfragments[0m; hits: 87005981, hits per frag: 1.24303[A. [32mprocessed[31m 70500000 [32mfragments[0m; hits: 87631613, hits per frag: 1.24309[A. [32mprocessed[31m 71000000 [32mfragments[0m; hits: 88257540, hits per frag: 1.24315[A. [32mprocessed[31m 71500000 [32mfragments[0m; hits: 88882417, hits per frag: 1.2432[A. [32mprocessed[31m 72000000 [32mfragments[0m; hits: 89501627, hits per frag: 1.24316[A. [32mprocessed[31m 72500000 [32mfragments[0m; hits: 90123272, hits per frag: 1.24317. [1m[2017-03-07 17:20:23.878] [jointLog] [info] Computed 502158 rich equivalence classes for further processing; [00m[1m[2017-03-07 17:20:23.878] [jointLog] [info] Counted 29351922 total reads in the equivalence classes ; [00m[1m[2017-03-07 17:20:23.883] [jointLog] [info] Mapping rate = 40.2691%. [00m[1m[2017-03-07 17:20:23.883] [jointLog] [info] finished quantifyLibrary(); [00m[1m[2017-03-07 17:20:23.943] [jointLog] [info] Starting optimizer; [00m[1m[2017-03-07 17:20:25.002] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [00m[1m[2017-03-07 17:20:25.395] [jointLog] [info] iteration = 0 | max rel diff. = 41.1005; [00m[1m[2017-03-07 17:21:08.165] [jointLog] [info] iteration = 100 | max rel diff. = 0.102245; [00m[1m[2017-03-07 17:22:01.050] [jointLog] [info] iteration = 200 | max rel diff. = 0.0530265; [00m[1m[2017-03-07 17:22:45.312] [jointLog] [info] iteration = 300 | max rel diff. = 0.0489765; [00m[1m[2017-03-07 17:23:12.877] [jointLog] [info] iteration = 400 | max rel diff. = 0.026371; [00m[1m[2017-03-07 17:23:37.183] [jointLog] [info] iteration = 500 | max rel diff. = 0.0212965; [00m[1m[2017-03-07 17:24:04.277] [jointLog] [info] iteration = 600 | max rel diff. = 0.0183011; [00m[1m[2017-03-07 17:24:42.607] [jointLog] [info] iteration = 700 | max rel diff. = 0.0209044; [00m[1m[2017-03-07 17:25:22.112] [jointLog] [info] iteration = 800 | max rel diff. = 0.0152222; [00m[1m[20",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:19439,Performance,optimiz,optimizer,19439,"nfo] iteration = 200 | max rel diff. = 0.0530265; [00m[1m[2017-03-07 17:22:45.312] [jointLog] [info] iteration = 300 | max rel diff. = 0.0489765; [00m[1m[2017-03-07 17:23:12.877] [jointLog] [info] iteration = 400 | max rel diff. = 0.026371; [00m[1m[2017-03-07 17:23:37.183] [jointLog] [info] iteration = 500 | max rel diff. = 0.0212965; [00m[1m[2017-03-07 17:24:04.277] [jointLog] [info] iteration = 600 | max rel diff. = 0.0183011; [00m[1m[2017-03-07 17:24:42.607] [jointLog] [info] iteration = 700 | max rel diff. = 0.0209044; [00m[1m[2017-03-07 17:25:22.112] [jointLog] [info] iteration = 800 | max rel diff. = 0.0152222; [00m[1m[2017-03-07 17:26:12.037] [jointLog] [info] iteration = 900 | max rel diff. = 0.0129215; [00m[1m[2017-03-07 17:26:59.294] [jointLog] [info] iteration = 1000 | max rel diff. = 0.0111141; [00m[1m[2017-03-07 17:27:42.086] [jointLog] [info] iteration = 1080 | max rel diff. = 0.00971233; [00m[1m[2017-03-07 17:27:42.099] [jointLog] [info] Finished optimizer; [00m[1m[2017-03-07 17:27:42.099] [jointLog] [info] writing output . [00m[33m[1m[2017-03-07 17:27:42.729] [jointLog] [warning] NOTE: Read Lib [( /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX.fastq.gz, /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX_read2.fastq.gz )] :. Greater than 5% of the fragments disagreed with the provided library type; check the file: /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX/lib_format_counts.json for details. [00m**** Job ends ****; Tue Mar 7 17:27:45 EST 2017; ```. The log looks ok to us. Using `qacct` (an SGE command) I can check the memory it used, and it used ~9 GB of RAM:. ```bash; $ qacct -j 9958683 -t 3; ==============================================================; qname shared.q; hostname compute-068.cm.cluster; group lieber_jaffe; owner lcollado; project NONE; department defaultdepartment; jobname step6-txQuant-alzheimer.gsk_phaseII; jobnumber 9958683",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:23981,Safety,Abort,Aborted,23981,"e upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/R10003_D19KGACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/R10003_D19KGACXX/logs; [2017-03-08 11:37:32.888] [jointLog] [info] parsing read library format; [2017-03-08 11:37:32.893] [jointLog] [info] There is 1 library.; terminate called without an active exception; /cm/local/apps/sge/var/spool/compute-051/job_scripts/9987275: line 31: 41232 Aborted (core dumped) /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Softw; are/Salmon-0.7.2_linux_x86_64/bin/salmon quant -i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.tr; anscripts -p 1 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}; **** Job ends ****; Wed Mar 8 11:37:36 EST 2017; ```. and the core dump file shows that the program was terminated:. ```bash; $ gdb core.41232; GNU gdb (GDB) Red Hat Enterprise Linux (7.2-60.el6_4.1); Copyright (C) 2010 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-redhat-linux-gnu"".; For bug reporting instructions, please see:; <http://www.gnu.org/s",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:25388,Safety,Abort,Aborted,25388," 2017; ```. and the core dump file shows that the program was terminated:. ```bash; $ gdb core.41232; GNU gdb (GDB) Red Hat Enterprise Linux (7.2-60.el6_4.1); Copyright (C) 2010 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-redhat-linux-gnu"".; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>...; Missing separate debuginfo for the main executable file; Try: yum --disablerepo='*' --enablerepo='*-debug*' install /usr/lib/debug/.build-id/f2/3c99ed06abf17dd0ee1073eac092487ac62314; [New Thread 41232]; [New Thread 41236]; [New Thread 41235]; [New Thread 41234]; Core was generated by `/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/b'.; Program terminated with signal 6, Aborted.; #0 0x0000003612832625 in ?? (); ""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/core.41232"" is a core file.; Please specify an executable to debug.; (gdb) q; ```. The SGE information shows that it basically reached 10.7 GB of RAM:. ```bash; $ qacct -j 9987275 -t 3; ==============================================================; qname shared.q; hostname compute-051.cm.cluster; group lieber_jaffe; owner lcollado; project NONE; department defaultdepartment; jobname step6-salmon_test.gsk_phaseII; jobnumber 9987275; taskid 3; account sge; priority 0; qsub_time Wed Mar 8 11:37:17 2017; start_time Wed Mar 8 11:37:31 2017; end_time Wed Mar 8 11:37:36 2017; granted_pe local; slots 1; failed 0; exit_status 0; ru_wallclock 5; ru_utime 0.368; ru_stime 3.680; ru_maxrss 537668; ru_ixrss 0; ru_ismrss 0; ru_idrss 0; ru_isrss 0; ru_minflt 21951; ru_majflt 282; ru_nswap 0; ru_inblock 56; ru_oublock 1066296; ru_msgsnd 0; ru_msgrcv 0; ru_nsignals 0; ru_nvcsw 1230; ru_nivcsw 53; cpu ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:29716,Safety,Abort,Aborted,29716," upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/R10002_C29P7ACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/R10002_C29P7ACXX/logs; [2017-03-08 11:53:36.762] [jointLog] [info] parsing read library format; [2017-03-08 11:53:36.763] [jointLog] [info] There is 1 library.; terminate called without an active exception; /cm/local/apps/sge/var/spool/compute-060/job_scripts/9987283: line 31: 1629 Aborted (core dumped) /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Softw; are/Salmon-0.7.2_linux_x86_64/bin/salmon quant -i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.tr; anscripts -p 1 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}; **** Job ends ****; Wed Mar 8 11:53:40 EST 2017; ```. as well as the `gdb` output for it's core dump file:. ```bash; $ gdb core.1629; GNU gdb (GDB) Red Hat Enterprise Linux (7.2-60.el6_4.1); Copyright (C) 2010 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-redhat-linux-gnu"".; For bug reporting instructions, please see:; <http://www.gnu.org/software/gd",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:31110,Safety,Abort,Aborted,31110,"8 11:53:40 EST 2017; ```. as well as the `gdb` output for it's core dump file:. ```bash; $ gdb core.1629; GNU gdb (GDB) Red Hat Enterprise Linux (7.2-60.el6_4.1); Copyright (C) 2010 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-redhat-linux-gnu"".; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>...; Missing separate debuginfo for the main executable file; Try: yum --disablerepo='*' --enablerepo='*-debug*' install /usr/lib/debug/.build-id/f2/3c99ed06abf17dd0ee1073eac092487ac62314; [New Thread 1629]; [New Thread 1707]; [New Thread 1708]; [New Thread 1709]; Core was generated by `/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/b'.; Program terminated with signal 6, Aborted.; #0 0x00000037e2032625 in ?? (); ""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/core.1629"" is a core file.; Please specify an executable to debug.; (gdb) q; ```. and the SGE info:. ```bash; $ qacct -j 9987283 -t 2; ==============================================================; qname shared.q; hostname compute-060.cm.cluster; group lieber_jaffe; owner lcollado; project NONE; department defaultdepartment; jobname step6-salmon_test2.gsk_phaseII; jobnumber 9987283; taskid 2; account sge; priority 0; qsub_time Wed Mar 8 11:53:12 2017; start_time Wed Mar 8 11:53:16 2017; end_time Wed Mar 8 11:53:40 2017; granted_pe local; slots 1; failed 0; exit_status 0; ru_wallclock 24; ru_utime 0.302; ru_stime 21.395; ru_maxrss 533908; ru_ixrss 0; ru_ismrss 0; ru_idrss 0; ru_isrss 0; ru_minflt 22035; ru_majflt 285; ru_nswap 0; ru_inblock 168; ru_oublock 1058880; ru_msgsnd 0; ru_msgrcv 0; ru_nsignals 0; ru_nvcsw 1435; ru_nivcsw 107; cpu 21.697; mem 56.472; io 0.002; iow 0.000; maxvm",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:120,Security,access,access,120,"Hi,. We (@emilyburke, @andrewejaffe and me) can successfully run salmon using 1 core in the SGE-managed cluster we have access to. The problem is that for some reason we have to request a lot of memory, thus reducing the number of jobs we can run simultaneously and increasing the overall time it takes to process datasets. . I see in https://github.com/COMBINE-lab/salmon/issues/97 that you suggest using `--perfectHash` and a newer `salmon` version, which we haven't tried and might end up being the solution. Here is the bash script we used to run `salmon` for a 422 sample dataset:. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=80G,h_vmem=90G,h_fsize=100G; #$ -N step6-txQuant-alzheimer.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/txQuant-alzheimer.$TASK_ID.txt; #$ -e ./logs/txQuant-alzheimer.$TASK_ID.txt; #$ -t 1-422; #$ -m a; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. echo ""**** Job ends ****""; date; ```. The important part is that we are requesting 1 single core with 80 GB of free memory and setting the limit at 90 GB. We are also using the `-p 1`",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:4034,Security,hash,hash,4034," [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX/logs; [1m[2017-03-07 03:00:05.319] [jointLog] [info] parsing read library format; [00m[1m[2017-03-07 03:00:05.337] [jointLog] [info] There is 1 library.; [00m[1m[2017-03-07 03:00:41.948] [jointLog] [info] Loading Quasi index; [00m[1m[2017-03-07 03:00:41.972] [jointLog] [info] Loading 32-bit quasi index; [00m[1m[2017-03-07 03:42:43.689] [stderrLog] [info] Loading Suffix Array ; [00m[1m[2017-03-07 04:54:34.756] [stderrLog] [info] Loading Transcript Info ; [00m[1m[2017-03-07 04:58:51.467] [stderrLog] [info] Loading Rank-Select Bit Array; [00m[1m[2017-03-07 06:59:17.578] [stderrLog] [info] There were 198093 set bits in the bit array; [00m[1m[2017-03-07 07:29:20.417] [stderrLog] [info] Computing transcript lengths; [00m[1m[2017-03-07 07:56:34.913] [stderrLog] [info] Waiting to finish loading hash; [00m[1m[2017-03-07 08:38:09.635] [stderrLog] [info] Successfully loaded position hash; [00m[1m[2017-03-07 08:38:09.636] [stderrLog] [info] Done loading index; [00m[1m[2017-03-07 08:38:09.637] [jointLog] [info] done; [00m[1m[2017-03-07 08:38:09.655] [jointLog] [info] Index contained 198093 targets; [00m. [A. [32mprocessed[31m 500000 [32mfragments[0m; hits: 624068, hits per frag: 1.26074[A. [32mprocessed[31m 1000000 [32mfragments[0m; hits: 1248009, hits per frag: 1.25428[A. [32mprocessed[31m 1500000 [32mfragments[0m; hits: 1873468, hits per frag: 1.25316[A. [32mprocessed[31m 2000000 [32mfragments[0m; hits: 2492702, hits per frag: 1.24947[A. [32mprocessed[31m 2500000 [32mfragments[0m; hits: 3114558, hits per frag: 1.24832[A. [32mprocessed[31m 3000000 [32mfragments[0m; hits: 3733674, hits per frag: 1.24664[A. [32mprocessed[31m 3500000 [32mfragments[0m; hits: 4356329, hits per frag: 1.24645[A. [32mprocessed[31m 4000000 [32mfragmen",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:4123,Security,hash,hash,4123,"XX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX/logs; [1m[2017-03-07 03:00:05.319] [jointLog] [info] parsing read library format; [00m[1m[2017-03-07 03:00:05.337] [jointLog] [info] There is 1 library.; [00m[1m[2017-03-07 03:00:41.948] [jointLog] [info] Loading Quasi index; [00m[1m[2017-03-07 03:00:41.972] [jointLog] [info] Loading 32-bit quasi index; [00m[1m[2017-03-07 03:42:43.689] [stderrLog] [info] Loading Suffix Array ; [00m[1m[2017-03-07 04:54:34.756] [stderrLog] [info] Loading Transcript Info ; [00m[1m[2017-03-07 04:58:51.467] [stderrLog] [info] Loading Rank-Select Bit Array; [00m[1m[2017-03-07 06:59:17.578] [stderrLog] [info] There were 198093 set bits in the bit array; [00m[1m[2017-03-07 07:29:20.417] [stderrLog] [info] Computing transcript lengths; [00m[1m[2017-03-07 07:56:34.913] [stderrLog] [info] Waiting to finish loading hash; [00m[1m[2017-03-07 08:38:09.635] [stderrLog] [info] Successfully loaded position hash; [00m[1m[2017-03-07 08:38:09.636] [stderrLog] [info] Done loading index; [00m[1m[2017-03-07 08:38:09.637] [jointLog] [info] done; [00m[1m[2017-03-07 08:38:09.655] [jointLog] [info] Index contained 198093 targets; [00m. [A. [32mprocessed[31m 500000 [32mfragments[0m; hits: 624068, hits per frag: 1.26074[A. [32mprocessed[31m 1000000 [32mfragments[0m; hits: 1248009, hits per frag: 1.25428[A. [32mprocessed[31m 1500000 [32mfragments[0m; hits: 1873468, hits per frag: 1.25316[A. [32mprocessed[31m 2000000 [32mfragments[0m; hits: 2492702, hits per frag: 1.24947[A. [32mprocessed[31m 2500000 [32mfragments[0m; hits: 3114558, hits per frag: 1.24832[A. [32mprocessed[31m 3000000 [32mfragments[0m; hits: 3733674, hits per frag: 1.24664[A. [32mprocessed[31m 3500000 [32mfragments[0m; hits: 4356329, hits per frag: 1.24645[A. [32mprocessed[31m 4000000 [32mfragments[0m; hits: 4978863, hits per frag: 1.24627[A. [32mprocessed[31m 4500000 [32mfragm",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:729,Testability,log,logs,729,"Hi,. We (@emilyburke, @andrewejaffe and me) can successfully run salmon using 1 core in the SGE-managed cluster we have access to. The problem is that for some reason we have to request a lot of memory, thus reducing the number of jobs we can run simultaneously and increasing the overall time it takes to process datasets. . I see in https://github.com/COMBINE-lab/salmon/issues/97 that you suggest using `--perfectHash` and a newer `salmon` version, which we haven't tried and might end up being the solution. Here is the bash script we used to run `salmon` for a 422 sample dataset:. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=80G,h_vmem=90G,h_fsize=100G; #$ -N step6-txQuant-alzheimer.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/txQuant-alzheimer.$TASK_ID.txt; #$ -e ./logs/txQuant-alzheimer.$TASK_ID.txt; #$ -t 1-422; #$ -m a; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. echo ""**** Job ends ****""; date; ```. The important part is that we are requesting 1 single core with 80 GB of free memory and setting the limit at 90 GB. We are also using the `-p 1`",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:774,Testability,log,logs,774,"Hi,. We (@emilyburke, @andrewejaffe and me) can successfully run salmon using 1 core in the SGE-managed cluster we have access to. The problem is that for some reason we have to request a lot of memory, thus reducing the number of jobs we can run simultaneously and increasing the overall time it takes to process datasets. . I see in https://github.com/COMBINE-lab/salmon/issues/97 that you suggest using `--perfectHash` and a newer `salmon` version, which we haven't tried and might end up being the solution. Here is the bash script we used to run `salmon` for a 422 sample dataset:. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=80G,h_vmem=90G,h_fsize=100G; #$ -N step6-txQuant-alzheimer.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/txQuant-alzheimer.$TASK_ID.txt; #$ -e ./logs/txQuant-alzheimer.$TASK_ID.txt; #$ -t 1-422; #$ -m a; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. echo ""**** Job ends ****""; date; ```. The important part is that we are requesting 1 single core with 80 GB of free memory and setting the limit at 90 GB. We are also using the `-p 1`",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:2024,Testability,log,log,2024,"LE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. echo ""**** Job ends ****""; date; ```. The important part is that we are requesting 1 single core with 80 GB of free memory and setting the limit at 90 GB. We are also using the `-p 1` option. . Here is the log file for one of them (task 3):. ```; **** Job starts ****; Mon Mar 6 23:19:13 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9958683; Job name: step6-txQuant-alzheimer.gsk_phaseII; Hostname: compute-068; Task id: ; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases ; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX_read2.fastq.gz }; ### [ outpu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:3120,Testability,Log,Logs,3120,"***; User: lcollado; Job id: 9958683; Job name: step6-txQuant-alzheimer.gsk_phaseII; Hostname: compute-068; Task id: ; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases ; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX/logs; [1m[2017-03-07 03:00:05.319] [jointLog] [info] parsing read library format; [00m[1m[2017-03-07 03:00:05.337] [jointLog] [info] There is 1 library.; [00m[1m[2017-03-07 03:00:41.948] [jointLog] [info] Loading Quasi index; [00m[1m[2017-03-07 03:00:41.972] [jointLog] [info] Loading 32-bit quasi index; [00m[1m[2017-03-07 03:42:43.689] [stderrLog] [info] Loading Suffix Array ; [00m[1m[2017-03-07 04:54:34.756] [stderrLog] [info] Loading Transcript Info ; [00m[1m[2017-03-07 04:58:51.467] [stderrLog] [info] Loading Rank-Select Bit Array; [00m[1m[2017-03-07 06:59:17.578] [stderrLog] [info] There were 198093 set bits in the bit array; [00m[1m[2017-03-07 07:29:20.417] [stderrLog] [info] Computing transcript lengths; [00m[1m[2017-03-07 07:56:34.913] [stderrLog] [info] Waiting to finish loading hash; [00m[1m[2017-03-07 08:38:09.635] [stderrLog] [info] Successfully loaded position hash; [00",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:3217,Testability,log,logs,3217,"***; User: lcollado; Job id: 9958683; Job name: step6-txQuant-alzheimer.gsk_phaseII; Hostname: compute-068; Task id: ; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases ; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX/logs; [1m[2017-03-07 03:00:05.319] [jointLog] [info] parsing read library format; [00m[1m[2017-03-07 03:00:05.337] [jointLog] [info] There is 1 library.; [00m[1m[2017-03-07 03:00:41.948] [jointLog] [info] Loading Quasi index; [00m[1m[2017-03-07 03:00:41.972] [jointLog] [info] Loading 32-bit quasi index; [00m[1m[2017-03-07 03:42:43.689] [stderrLog] [info] Loading Suffix Array ; [00m[1m[2017-03-07 04:54:34.756] [stderrLog] [info] Loading Transcript Info ; [00m[1m[2017-03-07 04:58:51.467] [stderrLog] [info] Loading Rank-Select Bit Array; [00m[1m[2017-03-07 06:59:17.578] [stderrLog] [info] There were 198093 set bits in the bit array; [00m[1m[2017-03-07 07:29:20.417] [stderrLog] [info] Computing transcript lengths; [00m[1m[2017-03-07 07:56:34.913] [stderrLog] [info] Waiting to finish loading hash; [00m[1m[2017-03-07 08:38:09.635] [stderrLog] [info] Successfully loaded position hash; [00",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:20045,Testability,log,log,20045," max rel diff. = 0.0152222; [00m[1m[2017-03-07 17:26:12.037] [jointLog] [info] iteration = 900 | max rel diff. = 0.0129215; [00m[1m[2017-03-07 17:26:59.294] [jointLog] [info] iteration = 1000 | max rel diff. = 0.0111141; [00m[1m[2017-03-07 17:27:42.086] [jointLog] [info] iteration = 1080 | max rel diff. = 0.00971233; [00m[1m[2017-03-07 17:27:42.099] [jointLog] [info] Finished optimizer; [00m[1m[2017-03-07 17:27:42.099] [jointLog] [info] writing output . [00m[33m[1m[2017-03-07 17:27:42.729] [jointLog] [warning] NOTE: Read Lib [( /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX.fastq.gz, /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX_read2.fastq.gz )] :. Greater than 5% of the fragments disagreed with the provided library type; check the file: /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX/lib_format_counts.json for details. [00m**** Job ends ****; Tue Mar 7 17:27:45 EST 2017; ```. The log looks ok to us. Using `qacct` (an SGE command) I can check the memory it used, and it used ~9 GB of RAM:. ```bash; $ qacct -j 9958683 -t 3; ==============================================================; qname shared.q; hostname compute-068.cm.cluster; group lieber_jaffe; owner lcollado; project NONE; department defaultdepartment; jobname step6-txQuant-alzheimer.gsk_phaseII; jobnumber 9958683; taskid 3; account sge; priority 0; qsub_time Mon Mar 6 23:18:58 2017; start_time Mon Mar 6 23:19:12 2017; end_time Tue Mar 7 17:27:45 2017; granted_pe local; slots 1; failed 0; exit_status 0; ru_wallclock 65313; ru_utime 25600.565; ru_stime 29552.966; ru_maxrss 6548296; ru_ixrss 0; ru_ismrss 0; ru_idrss 0; ru_isrss 0; ru_minflt 1662027; ru_majflt 369; ru_nswap 0; ru_inblock 0; ru_oublock 56256; ru_msgsnd 0; ru_msgrcv 0; ru_nsignals 0; ru_nvcsw 801190; ru_nivcsw 2880329; cpu 55153.531; mem 403295.295; io 17.447; iow 0.000; maxvmem 9.065G; arid undefined; ```. For task 1 the maxvmem was 9.072G and for",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:21081,Testability,test,test,21081,"```bash; $ qacct -j 9958683 -t 3; ==============================================================; qname shared.q; hostname compute-068.cm.cluster; group lieber_jaffe; owner lcollado; project NONE; department defaultdepartment; jobname step6-txQuant-alzheimer.gsk_phaseII; jobnumber 9958683; taskid 3; account sge; priority 0; qsub_time Mon Mar 6 23:18:58 2017; start_time Mon Mar 6 23:19:12 2017; end_time Tue Mar 7 17:27:45 2017; granted_pe local; slots 1; failed 0; exit_status 0; ru_wallclock 65313; ru_utime 25600.565; ru_stime 29552.966; ru_maxrss 6548296; ru_ixrss 0; ru_ismrss 0; ru_idrss 0; ru_isrss 0; ru_minflt 1662027; ru_majflt 369; ru_nswap 0; ru_inblock 0; ru_oublock 56256; ru_msgsnd 0; ru_msgrcv 0; ru_nsignals 0; ru_nvcsw 801190; ru_nivcsw 2880329; cpu 55153.531; mem 403295.295; io 17.447; iow 0.000; maxvmem 9.065G; arid undefined; ```. For task 1 the maxvmem was 9.072G and for task 2 9.061G. I then ran a test requesting a minimum of 10 GB of free RAM and a max of 11 GB, which in theory should work unless `salmon` uses variable amounts of memory with the same data. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=10G,h_vmem=11G,h_fsize=100G; #$ -N step6-salmon_test.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test.$TASK_ID.txt; #$ -e ./logs/salmon_test.$TASK_ID.txt; #$ -m a; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-p",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:21380,Testability,log,logs,21380,"e step6-txQuant-alzheimer.gsk_phaseII; jobnumber 9958683; taskid 3; account sge; priority 0; qsub_time Mon Mar 6 23:18:58 2017; start_time Mon Mar 6 23:19:12 2017; end_time Tue Mar 7 17:27:45 2017; granted_pe local; slots 1; failed 0; exit_status 0; ru_wallclock 65313; ru_utime 25600.565; ru_stime 29552.966; ru_maxrss 6548296; ru_ixrss 0; ru_ismrss 0; ru_idrss 0; ru_isrss 0; ru_minflt 1662027; ru_majflt 369; ru_nswap 0; ru_inblock 0; ru_oublock 56256; ru_msgsnd 0; ru_msgrcv 0; ru_nsignals 0; ru_nvcsw 801190; ru_nivcsw 2880329; cpu 55153.531; mem 403295.295; io 17.447; iow 0.000; maxvmem 9.065G; arid undefined; ```. For task 1 the maxvmem was 9.072G and for task 2 9.061G. I then ran a test requesting a minimum of 10 GB of free RAM and a max of 11 GB, which in theory should work unless `salmon` uses variable amounts of memory with the same data. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=10G,h_vmem=11G,h_fsize=100G; #$ -N step6-salmon_test.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test.$TASK_ID.txt; #$ -e ./logs/salmon_test.$TASK_ID.txt; #$ -m a; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl0",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:21419,Testability,log,logs,21419,"jobnumber 9958683; taskid 3; account sge; priority 0; qsub_time Mon Mar 6 23:18:58 2017; start_time Mon Mar 6 23:19:12 2017; end_time Tue Mar 7 17:27:45 2017; granted_pe local; slots 1; failed 0; exit_status 0; ru_wallclock 65313; ru_utime 25600.565; ru_stime 29552.966; ru_maxrss 6548296; ru_ixrss 0; ru_ismrss 0; ru_idrss 0; ru_isrss 0; ru_minflt 1662027; ru_majflt 369; ru_nswap 0; ru_inblock 0; ru_oublock 56256; ru_msgsnd 0; ru_msgrcv 0; ru_nsignals 0; ru_nvcsw 801190; ru_nivcsw 2880329; cpu 55153.531; mem 403295.295; io 17.447; iow 0.000; maxvmem 9.065G; arid undefined; ```. For task 1 the maxvmem was 9.072G and for task 2 9.061G. I then ran a test requesting a minimum of 10 GB of free RAM and a max of 11 GB, which in theory should work unless `salmon` uses variable amounts of memory with the same data. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=10G,h_vmem=11G,h_fsize=100G; #$ -N step6-salmon_test.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test.$TASK_ID.txt; #$ -e ./logs/salmon_test.$TASK_ID.txt; #$ -m a; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg3",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:22490,Testability,log,log,22490,"echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. echo ""**** Job ends ****""; date; ```. The log file for the same file (task 3) now shows that there was a problem:. ```; **** Job starts ****; Wed Mar 8 11:37:31 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9987275; Job name: step6-salmon_test.gsk_phaseII; Hostname: compute-051; Task id:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX_read2.fastq.gz }; ### [ o",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:23615,Testability,Log,Logs,23615,"PCE info ****; User: lcollado; Job id: 9987275; Job name: step6-salmon_test.gsk_phaseII; Hostname: compute-051; Task id:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/R10003_D19KGACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/R10003_D19KGACXX/logs; [2017-03-08 11:37:32.888] [jointLog] [info] parsing read library format; [2017-03-08 11:37:32.893] [jointLog] [info] There is 1 library.; terminate called without an active exception; /cm/local/apps/sge/var/spool/compute-051/job_scripts/9987275: line 31: 41232 Aborted (core dumped) /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Softw; are/Salmon-0.7.2_linux_x86_64/bin/salmon quant -i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.tr; anscripts -p 1 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}; **** Job ends ****; Wed Mar 8 11:37:36 EST 2017; ```. and the core dump file shows that the program was terminated:. ```bash; $ gdb core.41232; GNU gdb (GDB) Red Hat Enterprise Linux (7.2-60.el6_4.1); Copyright (C) 2010 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:23714,Testability,log,logs,23714,"PCE info ****; User: lcollado; Job id: 9987275; Job name: step6-salmon_test.gsk_phaseII; Hostname: compute-051; Task id:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/R10003_D19KGACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/R10003_D19KGACXX/logs; [2017-03-08 11:37:32.888] [jointLog] [info] parsing read library format; [2017-03-08 11:37:32.893] [jointLog] [info] There is 1 library.; terminate called without an active exception; /cm/local/apps/sge/var/spool/compute-051/job_scripts/9987275: line 31: 41232 Aborted (core dumped) /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Softw; are/Salmon-0.7.2_linux_x86_64/bin/salmon quant -i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.tr; anscripts -p 1 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}; **** Job ends ****; Wed Mar 8 11:37:36 EST 2017; ```. and the core dump file shows that the program was terminated:. ```bash; $ gdb core.41232; GNU gdb (GDB) Red Hat Enterprise Linux (7.2-60.el6_4.1); Copyright (C) 2010 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:26563,Testability,test,tests,26563,"ash; $ qacct -j 9987275 -t 3; ==============================================================; qname shared.q; hostname compute-051.cm.cluster; group lieber_jaffe; owner lcollado; project NONE; department defaultdepartment; jobname step6-salmon_test.gsk_phaseII; jobnumber 9987275; taskid 3; account sge; priority 0; qsub_time Wed Mar 8 11:37:17 2017; start_time Wed Mar 8 11:37:31 2017; end_time Wed Mar 8 11:37:36 2017; granted_pe local; slots 1; failed 0; exit_status 0; ru_wallclock 5; ru_utime 0.368; ru_stime 3.680; ru_maxrss 537668; ru_ixrss 0; ru_ismrss 0; ru_idrss 0; ru_isrss 0; ru_minflt 21951; ru_majflt 282; ru_nswap 0; ru_inblock 56; ru_oublock 1066296; ru_msgsnd 0; ru_msgrcv 0; ru_nsignals 0; ru_nvcsw 1230; ru_nivcsw 53; cpu 4.048; mem 27.889; io 0.002; iow 0.000; maxvmem 10.736G; arid undefined; ```. I'm sure that the job got terminated because the memory reached the limit of 11 GB. . I previously did several tests where for a file the max memory reported was about 9 GB when requesting about 100G of RAM, and the same job kept failing even if I requested 10G, 20G, 30G, 40G... I didn't save the info then to report the problem. . Back on these tests, I then increased the memory requested a bit more (and used the `-m e` SGE option to get an email with the max vmem, which matches the `qacct` output). Here is the bash script:. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=14G,h_vmem=15G,h_fsize=100G; #$ -N step6-salmon_test2.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test2.$TASK_ID.txt; #$ -e ./logs/salmon_test2.$TASK_ID.txt; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.mani",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:26799,Testability,test,tests,26799,"salmon_test.gsk_phaseII; jobnumber 9987275; taskid 3; account sge; priority 0; qsub_time Wed Mar 8 11:37:17 2017; start_time Wed Mar 8 11:37:31 2017; end_time Wed Mar 8 11:37:36 2017; granted_pe local; slots 1; failed 0; exit_status 0; ru_wallclock 5; ru_utime 0.368; ru_stime 3.680; ru_maxrss 537668; ru_ixrss 0; ru_ismrss 0; ru_idrss 0; ru_isrss 0; ru_minflt 21951; ru_majflt 282; ru_nswap 0; ru_inblock 56; ru_oublock 1066296; ru_msgsnd 0; ru_msgrcv 0; ru_nsignals 0; ru_nvcsw 1230; ru_nivcsw 53; cpu 4.048; mem 27.889; io 0.002; iow 0.000; maxvmem 10.736G; arid undefined; ```. I'm sure that the job got terminated because the memory reached the limit of 11 GB. . I previously did several tests where for a file the max memory reported was about 9 GB when requesting about 100G of RAM, and the same job kept failing even if I requested 10G, 20G, 30G, 40G... I didn't save the info then to report the problem. . Back on these tests, I then increased the memory requested a bit more (and used the `-m e` SGE option to get an email with the max vmem, which matches the `qacct` output). Here is the bash script:. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=14G,h_vmem=15G,h_fsize=100G; #$ -N step6-salmon_test2.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test2.$TASK_ID.txt; #$ -e ./logs/salmon_test2.$TASK_ID.txt; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. /dcl01/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:27120,Testability,log,logs,27120,"me 0.368; ru_stime 3.680; ru_maxrss 537668; ru_ixrss 0; ru_ismrss 0; ru_idrss 0; ru_isrss 0; ru_minflt 21951; ru_majflt 282; ru_nswap 0; ru_inblock 56; ru_oublock 1066296; ru_msgsnd 0; ru_msgrcv 0; ru_nsignals 0; ru_nvcsw 1230; ru_nivcsw 53; cpu 4.048; mem 27.889; io 0.002; iow 0.000; maxvmem 10.736G; arid undefined; ```. I'm sure that the job got terminated because the memory reached the limit of 11 GB. . I previously did several tests where for a file the max memory reported was about 9 GB when requesting about 100G of RAM, and the same job kept failing even if I requested 10G, 20G, 30G, 40G... I didn't save the info then to report the problem. . Back on these tests, I then increased the memory requested a bit more (and used the `-m e` SGE option to get an email with the max vmem, which matches the `qacct` output). Here is the bash script:. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=14G,h_vmem=15G,h_fsize=100G; #$ -N step6-salmon_test2.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test2.$TASK_ID.txt; #$ -e ./logs/salmon_test2.$TASK_ID.txt; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dc",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:27160,Testability,log,logs,27160,"68; ru_ixrss 0; ru_ismrss 0; ru_idrss 0; ru_isrss 0; ru_minflt 21951; ru_majflt 282; ru_nswap 0; ru_inblock 56; ru_oublock 1066296; ru_msgsnd 0; ru_msgrcv 0; ru_nsignals 0; ru_nvcsw 1230; ru_nivcsw 53; cpu 4.048; mem 27.889; io 0.002; iow 0.000; maxvmem 10.736G; arid undefined; ```. I'm sure that the job got terminated because the memory reached the limit of 11 GB. . I previously did several tests where for a file the max memory reported was about 9 GB when requesting about 100G of RAM, and the same job kept failing even if I requested 10G, 20G, 30G, 40G... I didn't save the info then to report the problem. . Back on these tests, I then increased the memory requested a bit more (and used the `-m e` SGE option to get an email with the max vmem, which matches the `qacct` output). Here is the bash script:. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=14G,h_vmem=15G,h_fsize=100G; #$ -N step6-salmon_test2.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test2.$TASK_ID.txt; #$ -e ./logs/salmon_test2.$TASK_ID.txt; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:28238,Testability,log,log,28238,"** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. echo ""**** Job ends ****""; date; ```. and the log file for task 2:. ```bash; $ more logs/salmon_test2.2.txt; **** Job starts ****; Wed Mar 8 11:53:17 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9987283; Job name: step6-salmon_test2.gsk_phaseII; Hostname: compute-060; Task id:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX_read2.fastq",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:28276,Testability,log,logs,28276," ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. echo ""**** Job ends ****""; date; ```. and the log file for task 2:. ```bash; $ more logs/salmon_test2.2.txt; **** Job starts ****; Wed Mar 8 11:53:17 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9987283; Job name: step6-salmon_test2.gsk_phaseII; Hostname: compute-060; Task id:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX_read2.fastq.gz }; ### [ output ] => { /dcl01",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:29350,Testability,Log,Logs,29350,"E info ****; User: lcollado; Job id: 9987283; Job name: step6-salmon_test2.gsk_phaseII; Hostname: compute-060; Task id:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/R10002_C29P7ACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/R10002_C29P7ACXX/logs; [2017-03-08 11:53:36.762] [jointLog] [info] parsing read library format; [2017-03-08 11:53:36.763] [jointLog] [info] There is 1 library.; terminate called without an active exception; /cm/local/apps/sge/var/spool/compute-060/job_scripts/9987283: line 31: 1629 Aborted (core dumped) /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Softw; are/Salmon-0.7.2_linux_x86_64/bin/salmon quant -i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.tr; anscripts -p 1 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}; **** Job ends ****; Wed Mar 8 11:53:40 EST 2017; ```. as well as the `gdb` output for it's core dump file:. ```bash; $ gdb core.1629; GNU gdb (GDB) Red Hat Enterprise Linux (7.2-60.el6_4.1); Copyright (C) 2010 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/126:29450,Testability,log,logs,29450,"E info ****; User: lcollado; Job id: 9987283; Job name: step6-salmon_test2.gsk_phaseII; Hostname: compute-060; Task id:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/R10002_C29P7ACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/R10002_C29P7ACXX/logs; [2017-03-08 11:53:36.762] [jointLog] [info] parsing read library format; [2017-03-08 11:53:36.763] [jointLog] [info] There is 1 library.; terminate called without an active exception; /cm/local/apps/sge/var/spool/compute-060/job_scripts/9987283: line 31: 1629 Aborted (core dumped) /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Softw; are/Salmon-0.7.2_linux_x86_64/bin/salmon quant -i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.tr; anscripts -p 1 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}; **** Job ends ****; Wed Mar 8 11:53:40 EST 2017; ```. as well as the `gdb` output for it's core dump file:. ```bash; $ gdb core.1629; GNU gdb (GDB) Red Hat Enterprise Linux (7.2-60.el6_4.1); Copyright (C) 2010 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126
https://github.com/COMBINE-lab/salmon/issues/127:399,Modifiability,variab,variable,399,"Asked from a colleague claiming it was better to use ""correct"" values (ie, given by the RNASeq platform) for fragment length distribution, I tried to use this option. However, I did not understood a few thing about them in the documentation, and could not figure out the answer from the code...; The documentation states that these options give the mean and standard deviation of a truncated normal variable used to model the distribution. However, it is not clear if they correspond of the (µ, sigma) parameters of the Gaussian that _will_ be truncated (as is usually given) or _after_ truncation, as is easy to estimate by sample mean and sample standard deviation. These values may be quite different, I guess, if truncation is indeed important.; From the code, I found that the values are stored in the fragLenDistMean and fragLenDistPriorSD slots of the SalmonOpts, and that their default values are 200 and 80. However, I could not find any place where these slots were used again (a grep on all .cpp files in src did not found any result except the lines in SalmonQuantify.cpp and SalmonQuantifyAlignments.cpp that seem to parse the command line options:; ` (; ""fldMean"",; po::value<size_t>(&(sopt.fragLenDistPriorMean))->default_value(200),; ""The mean used in the fragment length distribution prior""); (; ""fldSD"",; po::value<size_t>(&(sopt.fragLenDistPriorSD))->default_value(80),; ""The standard deviation used in the fragment length distribution ""; ""prior""); `; However, I do not use C++ so I may have missed something in the role of the `po` namespace.; Could you give any hint of where these values are used, so I can understand what is there exact meaning?; Thanks in advance",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/127
https://github.com/COMBINE-lab/salmon/issues/127:459,Usability,clear,clear,459,"Asked from a colleague claiming it was better to use ""correct"" values (ie, given by the RNASeq platform) for fragment length distribution, I tried to use this option. However, I did not understood a few thing about them in the documentation, and could not figure out the answer from the code...; The documentation states that these options give the mean and standard deviation of a truncated normal variable used to model the distribution. However, it is not clear if they correspond of the (µ, sigma) parameters of the Gaussian that _will_ be truncated (as is usually given) or _after_ truncation, as is easy to estimate by sample mean and sample standard deviation. These values may be quite different, I guess, if truncation is indeed important.; From the code, I found that the values are stored in the fragLenDistMean and fragLenDistPriorSD slots of the SalmonOpts, and that their default values are 200 and 80. However, I could not find any place where these slots were used again (a grep on all .cpp files in src did not found any result except the lines in SalmonQuantify.cpp and SalmonQuantifyAlignments.cpp that seem to parse the command line options:; ` (; ""fldMean"",; po::value<size_t>(&(sopt.fragLenDistPriorMean))->default_value(200),; ""The mean used in the fragment length distribution prior""); (; ""fldSD"",; po::value<size_t>(&(sopt.fragLenDistPriorSD))->default_value(80),; ""The standard deviation used in the fragment length distribution ""; ""prior""); `; However, I do not use C++ so I may have missed something in the role of the `po` namespace.; Could you give any hint of where these values are used, so I can understand what is there exact meaning?; Thanks in advance",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/127
https://github.com/COMBINE-lab/salmon/issues/129:201,Availability,error,error,201,"Hello all, we are trying to use salmon quant on environmental samples using a big index but the quant step keeps crashing. While trying to quant different samples all crashed at the same step with the error message: `Exception : [Failed to read 130159192 bytes from input stream! Read 65079596]`. The system is part of a cluster and we have requested 500gb of RAM and disk available for the job and I kept track of the memory and disk usage which never exceeded 254gb. lsb_release -a; ```; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch; Distributor ID:	Scientific; Description:	Scientific Linux release 6.4 (Carbon); Release:	6.4; Codename:	Carbon; ```. Do you have any idea what can be the causing the error?. Thanks. We are using the precompiled salmon bin and running it with:. `salmon quant -i $index -1 $f1 -2 $f2 -o $output_folder --meta --incompatPrior 0.0 --libType A -p 8 --gcBias --seqBias --numBootstraps 30`. ```; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.8.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ./storage/tmm.idx }; ### [ mates1 ] => { DNA_1.fastq.gz }; ### [ mates2 ] => {DNA_2.fastq.gz }; ### [ output ] => { /DNA_tmm }; ### [ meta ] => { }; ### [ incompatPrior ] => { 0.0 }; ### [ libType ] => { A }; ### [ threads ] => { 8 }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ numBootstraps ] => { 30 }; Logs will be written to ./storage/logs; [2017-03-15 11:53:20.568] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2017-03-15 11:53:20.568] [jointLog] [info] parsing read library format; [2017-03-15 11:53:20.568] [jointLog] [info] There is 1 library.; [2017-03-15 11:53:20.653] [jointLog] [info] Loading Quasi index; [2017-03-15 11:53:20.683] [jointLog] [info] Loading 64-bit quasi index; [2017-03-15 11:53:20.684] [stderrLog]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/129
https://github.com/COMBINE-lab/salmon/issues/129:373,Availability,avail,available,373,"Hello all, we are trying to use salmon quant on environmental samples using a big index but the quant step keeps crashing. While trying to quant different samples all crashed at the same step with the error message: `Exception : [Failed to read 130159192 bytes from input stream! Read 65079596]`. The system is part of a cluster and we have requested 500gb of RAM and disk available for the job and I kept track of the memory and disk usage which never exceeded 254gb. lsb_release -a; ```; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch; Distributor ID:	Scientific; Description:	Scientific Linux release 6.4 (Carbon); Release:	6.4; Codename:	Carbon; ```. Do you have any idea what can be the causing the error?. Thanks. We are using the precompiled salmon bin and running it with:. `salmon quant -i $index -1 $f1 -2 $f2 -o $output_folder --meta --incompatPrior 0.0 --libType A -p 8 --gcBias --seqBias --numBootstraps 30`. ```; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.8.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ./storage/tmm.idx }; ### [ mates1 ] => { DNA_1.fastq.gz }; ### [ mates2 ] => {DNA_2.fastq.gz }; ### [ output ] => { /DNA_tmm }; ### [ meta ] => { }; ### [ incompatPrior ] => { 0.0 }; ### [ libType ] => { A }; ### [ threads ] => { 8 }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ numBootstraps ] => { 30 }; Logs will be written to ./storage/logs; [2017-03-15 11:53:20.568] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2017-03-15 11:53:20.568] [jointLog] [info] parsing read library format; [2017-03-15 11:53:20.568] [jointLog] [info] There is 1 library.; [2017-03-15 11:53:20.653] [jointLog] [info] Loading Quasi index; [2017-03-15 11:53:20.683] [jointLog] [info] Loading 64-bit quasi index; [2017-03-15 11:53:20.684] [stderrLog]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/129
https://github.com/COMBINE-lab/salmon/issues/129:811,Availability,error,error,811,"Hello all, we are trying to use salmon quant on environmental samples using a big index but the quant step keeps crashing. While trying to quant different samples all crashed at the same step with the error message: `Exception : [Failed to read 130159192 bytes from input stream! Read 65079596]`. The system is part of a cluster and we have requested 500gb of RAM and disk available for the job and I kept track of the memory and disk usage which never exceeded 254gb. lsb_release -a; ```; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch; Distributor ID:	Scientific; Description:	Scientific Linux release 6.4 (Carbon); Release:	6.4; Codename:	Carbon; ```. Do you have any idea what can be the causing the error?. Thanks. We are using the precompiled salmon bin and running it with:. `salmon quant -i $index -1 $f1 -2 $f2 -o $output_folder --meta --incompatPrior 0.0 --libType A -p 8 --gcBias --seqBias --numBootstraps 30`. ```; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.8.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ./storage/tmm.idx }; ### [ mates1 ] => { DNA_1.fastq.gz }; ### [ mates2 ] => {DNA_2.fastq.gz }; ### [ output ] => { /DNA_tmm }; ### [ meta ] => { }; ### [ incompatPrior ] => { 0.0 }; ### [ libType ] => { A }; ### [ threads ] => { 8 }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ numBootstraps ] => { 30 }; Logs will be written to ./storage/logs; [2017-03-15 11:53:20.568] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2017-03-15 11:53:20.568] [jointLog] [info] parsing read library format; [2017-03-15 11:53:20.568] [jointLog] [info] There is 1 library.; [2017-03-15 11:53:20.653] [jointLog] [info] Loading Quasi index; [2017-03-15 11:53:20.683] [jointLog] [info] Loading 64-bit quasi index; [2017-03-15 11:53:20.684] [stderrLog]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/129
https://github.com/COMBINE-lab/salmon/issues/129:703,Deployability,release,release,703,"Hello all, we are trying to use salmon quant on environmental samples using a big index but the quant step keeps crashing. While trying to quant different samples all crashed at the same step with the error message: `Exception : [Failed to read 130159192 bytes from input stream! Read 65079596]`. The system is part of a cluster and we have requested 500gb of RAM and disk available for the job and I kept track of the memory and disk usage which never exceeded 254gb. lsb_release -a; ```; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch; Distributor ID:	Scientific; Description:	Scientific Linux release 6.4 (Carbon); Release:	6.4; Codename:	Carbon; ```. Do you have any idea what can be the causing the error?. Thanks. We are using the precompiled salmon bin and running it with:. `salmon quant -i $index -1 $f1 -2 $f2 -o $output_folder --meta --incompatPrior 0.0 --libType A -p 8 --gcBias --seqBias --numBootstraps 30`. ```; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.8.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ./storage/tmm.idx }; ### [ mates1 ] => { DNA_1.fastq.gz }; ### [ mates2 ] => {DNA_2.fastq.gz }; ### [ output ] => { /DNA_tmm }; ### [ meta ] => { }; ### [ incompatPrior ] => { 0.0 }; ### [ libType ] => { A }; ### [ threads ] => { 8 }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ numBootstraps ] => { 30 }; Logs will be written to ./storage/logs; [2017-03-15 11:53:20.568] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2017-03-15 11:53:20.568] [jointLog] [info] parsing read library format; [2017-03-15 11:53:20.568] [jointLog] [info] There is 1 library.; [2017-03-15 11:53:20.653] [jointLog] [info] Loading Quasi index; [2017-03-15 11:53:20.683] [jointLog] [info] Loading 64-bit quasi index; [2017-03-15 11:53:20.684] [stderrLog]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/129
https://github.com/COMBINE-lab/salmon/issues/129:725,Deployability,Release,Release,725,"Hello all, we are trying to use salmon quant on environmental samples using a big index but the quant step keeps crashing. While trying to quant different samples all crashed at the same step with the error message: `Exception : [Failed to read 130159192 bytes from input stream! Read 65079596]`. The system is part of a cluster and we have requested 500gb of RAM and disk available for the job and I kept track of the memory and disk usage which never exceeded 254gb. lsb_release -a; ```; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch; Distributor ID:	Scientific; Description:	Scientific Linux release 6.4 (Carbon); Release:	6.4; Codename:	Carbon; ```. Do you have any idea what can be the causing the error?. Thanks. We are using the precompiled salmon bin and running it with:. `salmon quant -i $index -1 $f1 -2 $f2 -o $output_folder --meta --incompatPrior 0.0 --libType A -p 8 --gcBias --seqBias --numBootstraps 30`. ```; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.8.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ./storage/tmm.idx }; ### [ mates1 ] => { DNA_1.fastq.gz }; ### [ mates2 ] => {DNA_2.fastq.gz }; ### [ output ] => { /DNA_tmm }; ### [ meta ] => { }; ### [ incompatPrior ] => { 0.0 }; ### [ libType ] => { A }; ### [ threads ] => { 8 }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ numBootstraps ] => { 30 }; Logs will be written to ./storage/logs; [2017-03-15 11:53:20.568] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2017-03-15 11:53:20.568] [jointLog] [info] parsing read library format; [2017-03-15 11:53:20.568] [jointLog] [info] There is 1 library.; [2017-03-15 11:53:20.653] [jointLog] [info] Loading Quasi index; [2017-03-15 11:53:20.683] [jointLog] [info] Loading 64-bit quasi index; [2017-03-15 11:53:20.684] [stderrLog]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/129
https://github.com/COMBINE-lab/salmon/issues/129:207,Integrability,message,message,207,"Hello all, we are trying to use salmon quant on environmental samples using a big index but the quant step keeps crashing. While trying to quant different samples all crashed at the same step with the error message: `Exception : [Failed to read 130159192 bytes from input stream! Read 65079596]`. The system is part of a cluster and we have requested 500gb of RAM and disk available for the job and I kept track of the memory and disk usage which never exceeded 254gb. lsb_release -a; ```; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch; Distributor ID:	Scientific; Description:	Scientific Linux release 6.4 (Carbon); Release:	6.4; Codename:	Carbon; ```. Do you have any idea what can be the causing the error?. Thanks. We are using the precompiled salmon bin and running it with:. `salmon quant -i $index -1 $f1 -2 $f2 -o $output_folder --meta --incompatPrior 0.0 --libType A -p 8 --gcBias --seqBias --numBootstraps 30`. ```; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.8.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ./storage/tmm.idx }; ### [ mates1 ] => { DNA_1.fastq.gz }; ### [ mates2 ] => {DNA_2.fastq.gz }; ### [ output ] => { /DNA_tmm }; ### [ meta ] => { }; ### [ incompatPrior ] => { 0.0 }; ### [ libType ] => { A }; ### [ threads ] => { 8 }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ numBootstraps ] => { 30 }; Logs will be written to ./storage/logs; [2017-03-15 11:53:20.568] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2017-03-15 11:53:20.568] [jointLog] [info] parsing read library format; [2017-03-15 11:53:20.568] [jointLog] [info] There is 1 library.; [2017-03-15 11:53:20.653] [jointLog] [info] Loading Quasi index; [2017-03-15 11:53:20.683] [jointLog] [info] Loading 64-bit quasi index; [2017-03-15 11:53:20.684] [stderrLog]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/129
https://github.com/COMBINE-lab/salmon/issues/129:1871,Performance,Load,Loading,1871,"t with:. `salmon quant -i $index -1 $f1 -2 $f2 -o $output_folder --meta --incompatPrior 0.0 --libType A -p 8 --gcBias --seqBias --numBootstraps 30`. ```; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.8.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ./storage/tmm.idx }; ### [ mates1 ] => { DNA_1.fastq.gz }; ### [ mates2 ] => {DNA_2.fastq.gz }; ### [ output ] => { /DNA_tmm }; ### [ meta ] => { }; ### [ incompatPrior ] => { 0.0 }; ### [ libType ] => { A }; ### [ threads ] => { 8 }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ numBootstraps ] => { 30 }; Logs will be written to ./storage/logs; [2017-03-15 11:53:20.568] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2017-03-15 11:53:20.568] [jointLog] [info] parsing read library format; [2017-03-15 11:53:20.568] [jointLog] [info] There is 1 library.; [2017-03-15 11:53:20.653] [jointLog] [info] Loading Quasi index; [2017-03-15 11:53:20.683] [jointLog] [info] Loading 64-bit quasi index; [2017-03-15 11:53:20.684] [stderrLog] [info] Loading Suffix Array ; [2017-03-15 12:19:05.982] [stderrLog] [info] Loading Transcript Info ; Exception : [Failed to read 130159192 bytes from input stream! Read 65079596]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; ```. Index building log:. ```; Version Info: This is the most recent version of Salmon.; index ["" ./storage/tmm.idx""] did not previously exist . . . creating it; [2017-03-14 12:10:34.791] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; counted k-mers for 30000 transcripts[2017-03-14 12:10:36.701] [jointLog] [warning] Entry with header [734bf21190b56e1ed4c8d7093c340df1fc6266bd80ed60ebc0ae0f4e9343c3a4], had length less than the k-mer length of 31 (perhaps after poly-A clipping); counted k-mers for 420000 transcripts[2017-03-14 12:10:56.697] [jointLog] [warning] Entry ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/129
https://github.com/COMBINE-lab/salmon/issues/129:1936,Performance,Load,Loading,1936,"ta --incompatPrior 0.0 --libType A -p 8 --gcBias --seqBias --numBootstraps 30`. ```; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.8.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ./storage/tmm.idx }; ### [ mates1 ] => { DNA_1.fastq.gz }; ### [ mates2 ] => {DNA_2.fastq.gz }; ### [ output ] => { /DNA_tmm }; ### [ meta ] => { }; ### [ incompatPrior ] => { 0.0 }; ### [ libType ] => { A }; ### [ threads ] => { 8 }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ numBootstraps ] => { 30 }; Logs will be written to ./storage/logs; [2017-03-15 11:53:20.568] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2017-03-15 11:53:20.568] [jointLog] [info] parsing read library format; [2017-03-15 11:53:20.568] [jointLog] [info] There is 1 library.; [2017-03-15 11:53:20.653] [jointLog] [info] Loading Quasi index; [2017-03-15 11:53:20.683] [jointLog] [info] Loading 64-bit quasi index; [2017-03-15 11:53:20.684] [stderrLog] [info] Loading Suffix Array ; [2017-03-15 12:19:05.982] [stderrLog] [info] Loading Transcript Info ; Exception : [Failed to read 130159192 bytes from input stream! Read 65079596]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; ```. Index building log:. ```; Version Info: This is the most recent version of Salmon.; index ["" ./storage/tmm.idx""] did not previously exist . . . creating it; [2017-03-14 12:10:34.791] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; counted k-mers for 30000 transcripts[2017-03-14 12:10:36.701] [jointLog] [warning] Entry with header [734bf21190b56e1ed4c8d7093c340df1fc6266bd80ed60ebc0ae0f4e9343c3a4], had length less than the k-mer length of 31 (perhaps after poly-A clipping); counted k-mers for 420000 transcripts[2017-03-14 12:10:56.697] [jointLog] [warning] Entry with header [0c9d699aa70741734115dadd8175a44a013ad4122a3af7952e3b38e",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/129
https://github.com/COMBINE-lab/salmon/issues/129:2009,Performance,Load,Loading,2009,"raps 30`. ```; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.8.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ./storage/tmm.idx }; ### [ mates1 ] => { DNA_1.fastq.gz }; ### [ mates2 ] => {DNA_2.fastq.gz }; ### [ output ] => { /DNA_tmm }; ### [ meta ] => { }; ### [ incompatPrior ] => { 0.0 }; ### [ libType ] => { A }; ### [ threads ] => { 8 }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ numBootstraps ] => { 30 }; Logs will be written to ./storage/logs; [2017-03-15 11:53:20.568] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2017-03-15 11:53:20.568] [jointLog] [info] parsing read library format; [2017-03-15 11:53:20.568] [jointLog] [info] There is 1 library.; [2017-03-15 11:53:20.653] [jointLog] [info] Loading Quasi index; [2017-03-15 11:53:20.683] [jointLog] [info] Loading 64-bit quasi index; [2017-03-15 11:53:20.684] [stderrLog] [info] Loading Suffix Array ; [2017-03-15 12:19:05.982] [stderrLog] [info] Loading Transcript Info ; Exception : [Failed to read 130159192 bytes from input stream! Read 65079596]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; ```. Index building log:. ```; Version Info: This is the most recent version of Salmon.; index ["" ./storage/tmm.idx""] did not previously exist . . . creating it; [2017-03-14 12:10:34.791] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; counted k-mers for 30000 transcripts[2017-03-14 12:10:36.701] [jointLog] [warning] Entry with header [734bf21190b56e1ed4c8d7093c340df1fc6266bd80ed60ebc0ae0f4e9343c3a4], had length less than the k-mer length of 31 (perhaps after poly-A clipping); counted k-mers for 420000 transcripts[2017-03-14 12:10:56.697] [jointLog] [warning] Entry with header [0c9d699aa70741734115dadd8175a44a013ad4122a3af7952e3b38e9593da047], had length less than the k-mer length of 31 (perhaps after",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/129
https://github.com/COMBINE-lab/salmon/issues/129:2077,Performance,Load,Loading,2077,"ogram ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ./storage/tmm.idx }; ### [ mates1 ] => { DNA_1.fastq.gz }; ### [ mates2 ] => {DNA_2.fastq.gz }; ### [ output ] => { /DNA_tmm }; ### [ meta ] => { }; ### [ incompatPrior ] => { 0.0 }; ### [ libType ] => { A }; ### [ threads ] => { 8 }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ numBootstraps ] => { 30 }; Logs will be written to ./storage/logs; [2017-03-15 11:53:20.568] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2017-03-15 11:53:20.568] [jointLog] [info] parsing read library format; [2017-03-15 11:53:20.568] [jointLog] [info] There is 1 library.; [2017-03-15 11:53:20.653] [jointLog] [info] Loading Quasi index; [2017-03-15 11:53:20.683] [jointLog] [info] Loading 64-bit quasi index; [2017-03-15 11:53:20.684] [stderrLog] [info] Loading Suffix Array ; [2017-03-15 12:19:05.982] [stderrLog] [info] Loading Transcript Info ; Exception : [Failed to read 130159192 bytes from input stream! Read 65079596]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; ```. Index building log:. ```; Version Info: This is the most recent version of Salmon.; index ["" ./storage/tmm.idx""] did not previously exist . . . creating it; [2017-03-14 12:10:34.791] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; counted k-mers for 30000 transcripts[2017-03-14 12:10:36.701] [jointLog] [warning] Entry with header [734bf21190b56e1ed4c8d7093c340df1fc6266bd80ed60ebc0ae0f4e9343c3a4], had length less than the k-mer length of 31 (perhaps after poly-A clipping); counted k-mers for 420000 transcripts[2017-03-14 12:10:56.697] [jointLog] [warning] Entry with header [0c9d699aa70741734115dadd8175a44a013ad4122a3af7952e3b38e9593da047], had length less than the k-mer length of 31 (perhaps after poly-A clipping); counted k-mers for 11130000 transcripts[2017-03-14 12:20:15.975] [jointLog] [warning] Entry with h",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/129
https://github.com/COMBINE-lab/salmon/issues/129:4053,Security,hash,hash,4053,"Read 65079596]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; ```. Index building log:. ```; Version Info: This is the most recent version of Salmon.; index ["" ./storage/tmm.idx""] did not previously exist . . . creating it; [2017-03-14 12:10:34.791] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; counted k-mers for 30000 transcripts[2017-03-14 12:10:36.701] [jointLog] [warning] Entry with header [734bf21190b56e1ed4c8d7093c340df1fc6266bd80ed60ebc0ae0f4e9343c3a4], had length less than the k-mer length of 31 (perhaps after poly-A clipping); counted k-mers for 420000 transcripts[2017-03-14 12:10:56.697] [jointLog] [warning] Entry with header [0c9d699aa70741734115dadd8175a44a013ad4122a3af7952e3b38e9593da047], had length less than the k-mer length of 31 (perhaps after poly-A clipping); counted k-mers for 11130000 transcripts[2017-03-14 12:20:15.975] [jointLog] [warning] Entry with header [9067b76fbcadd65a043ddff42dccfbd201e1b7ab5307ce7712d6301e32923ff1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2017-03-14 12:20:15.975] [jointLog] [warning] Entry with header [98095e437f311b64c902b3ec0c2d0310d626e1d74e7ad46c0cae049006296647], had length less than the k-mer length of 31 (perhaps after poly-A clipping); counted k-mers for 16260000 transcriptsElapsed time: 840.275s. Replaced 257168 non-ATCG nucleotides; Clipped poly-A tails from 11 transcripts; Building rank-select dictionary and saving to disk done; Elapsed time: 15.7997s; Writing sequence data to file . . . done; Elapsed time: 140.642s; [info] Building 64-bit suffix array (length of generalized text is 15197332366 ); Building suffix array . . . success; saving to disk . . . done; Elapsed time: 1040.1s; done; Elapsed time: 5084.83s; processed 15197000000 positions; khash had 3470062382 keys; saving hash to disk . . . done; Elapsed time: 713.385s; [2017-03-14 15:50:05.359] [jLog] [info] done building index; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/129
https://github.com/COMBINE-lab/salmon/issues/129:1516,Testability,Log,Logs,1516,"d 254gb. lsb_release -a; ```; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch; Distributor ID:	Scientific; Description:	Scientific Linux release 6.4 (Carbon); Release:	6.4; Codename:	Carbon; ```. Do you have any idea what can be the causing the error?. Thanks. We are using the precompiled salmon bin and running it with:. `salmon quant -i $index -1 $f1 -2 $f2 -o $output_folder --meta --incompatPrior 0.0 --libType A -p 8 --gcBias --seqBias --numBootstraps 30`. ```; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.8.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ./storage/tmm.idx }; ### [ mates1 ] => { DNA_1.fastq.gz }; ### [ mates2 ] => {DNA_2.fastq.gz }; ### [ output ] => { /DNA_tmm }; ### [ meta ] => { }; ### [ incompatPrior ] => { 0.0 }; ### [ libType ] => { A }; ### [ threads ] => { 8 }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ numBootstraps ] => { 30 }; Logs will be written to ./storage/logs; [2017-03-15 11:53:20.568] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2017-03-15 11:53:20.568] [jointLog] [info] parsing read library format; [2017-03-15 11:53:20.568] [jointLog] [info] There is 1 library.; [2017-03-15 11:53:20.653] [jointLog] [info] Loading Quasi index; [2017-03-15 11:53:20.683] [jointLog] [info] Loading 64-bit quasi index; [2017-03-15 11:53:20.684] [stderrLog] [info] Loading Suffix Array ; [2017-03-15 12:19:05.982] [stderrLog] [info] Loading Transcript Info ; Exception : [Failed to read 130159192 bytes from input stream! Read 65079596]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; ```. Index building log:. ```; Version Info: This is the most recent version of Salmon.; index ["" ./storage/tmm.idx""] did not previously exist . . . creating it; [2017-03-14 12:10:34",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/129
https://github.com/COMBINE-lab/salmon/issues/129:1550,Testability,log,logs,1550,"noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch; Distributor ID:	Scientific; Description:	Scientific Linux release 6.4 (Carbon); Release:	6.4; Codename:	Carbon; ```. Do you have any idea what can be the causing the error?. Thanks. We are using the precompiled salmon bin and running it with:. `salmon quant -i $index -1 $f1 -2 $f2 -o $output_folder --meta --incompatPrior 0.0 --libType A -p 8 --gcBias --seqBias --numBootstraps 30`. ```; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.8.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ./storage/tmm.idx }; ### [ mates1 ] => { DNA_1.fastq.gz }; ### [ mates2 ] => {DNA_2.fastq.gz }; ### [ output ] => { /DNA_tmm }; ### [ meta ] => { }; ### [ incompatPrior ] => { 0.0 }; ### [ libType ] => { A }; ### [ threads ] => { 8 }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ numBootstraps ] => { 30 }; Logs will be written to ./storage/logs; [2017-03-15 11:53:20.568] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2017-03-15 11:53:20.568] [jointLog] [info] parsing read library format; [2017-03-15 11:53:20.568] [jointLog] [info] There is 1 library.; [2017-03-15 11:53:20.653] [jointLog] [info] Loading Quasi index; [2017-03-15 11:53:20.683] [jointLog] [info] Loading 64-bit quasi index; [2017-03-15 11:53:20.684] [stderrLog] [info] Loading Suffix Array ; [2017-03-15 12:19:05.982] [stderrLog] [info] Loading Transcript Info ; Exception : [Failed to read 130159192 bytes from input stream! Read 65079596]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; ```. Index building log:. ```; Version Info: This is the most recent version of Salmon.; index ["" ./storage/tmm.idx""] did not previously exist . . . creating it; [2017-03-14 12:10:34.791] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; counted k-mers",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/129
https://github.com/COMBINE-lab/salmon/issues/129:2298,Testability,log,log,2298,"z }; ### [ output ] => { /DNA_tmm }; ### [ meta ] => { }; ### [ incompatPrior ] => { 0.0 }; ### [ libType ] => { A }; ### [ threads ] => { 8 }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ numBootstraps ] => { 30 }; Logs will be written to ./storage/logs; [2017-03-15 11:53:20.568] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2017-03-15 11:53:20.568] [jointLog] [info] parsing read library format; [2017-03-15 11:53:20.568] [jointLog] [info] There is 1 library.; [2017-03-15 11:53:20.653] [jointLog] [info] Loading Quasi index; [2017-03-15 11:53:20.683] [jointLog] [info] Loading 64-bit quasi index; [2017-03-15 11:53:20.684] [stderrLog] [info] Loading Suffix Array ; [2017-03-15 12:19:05.982] [stderrLog] [info] Loading Transcript Info ; Exception : [Failed to read 130159192 bytes from input stream! Read 65079596]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; ```. Index building log:. ```; Version Info: This is the most recent version of Salmon.; index ["" ./storage/tmm.idx""] did not previously exist . . . creating it; [2017-03-14 12:10:34.791] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; counted k-mers for 30000 transcripts[2017-03-14 12:10:36.701] [jointLog] [warning] Entry with header [734bf21190b56e1ed4c8d7093c340df1fc6266bd80ed60ebc0ae0f4e9343c3a4], had length less than the k-mer length of 31 (perhaps after poly-A clipping); counted k-mers for 420000 transcripts[2017-03-14 12:10:56.697] [jointLog] [warning] Entry with header [0c9d699aa70741734115dadd8175a44a013ad4122a3af7952e3b38e9593da047], had length less than the k-mer length of 31 (perhaps after poly-A clipping); counted k-mers for 11130000 transcripts[2017-03-14 12:20:15.975] [jointLog] [warning] Entry with header [9067b76fbcadd65a043ddff42dccfbd201e1b7ab5307ce7712d6301e32923ff1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2017-",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/129
https://github.com/COMBINE-lab/salmon/issues/130:680,Availability,error,error,680,"Currently, `salmon` fails hard (termination with return code `1`) when no reads are mapable; that limits its applicability when screening for pathogens such as viruses that are not expected to express their factors in every sample. From my point of view that leads to [unexpected behavior in bcbio](https://github.com/chapmanb/bcbio-nextgen/issues/1883), which is also reflected in an issue [raised here](https://github.com/COMBINE-lab/salmon/issues/119). . I would like to (re-)raise these issues here and encourage a change to `salmon` that leads to a more graceful behavior in such outlier cases, i.e. quantitation values of `0` for all quantified features instead of the hard error.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/130
https://github.com/COMBINE-lab/salmon/issues/131:95,Availability,error,error,95,"I am interested to run your tool: Salmon. It is a great and easy tool to use. I encounter this error by using:; ```; ./bin/salmon quant -t output.fa -g hgTables.gtf -l IU -a ../../pipeline/rna_seq/all_chr1/merged.bam -p 20 -o salmon_quant; ```. Error:; ```; [2017-04-11 12:33:40.420] [jointLog] [critical] Transcript chr1 appeared in the BAM header, but was not in the provided FASTA file; [2017-04-11 12:33:40.420] [jointLog] [critical] Please provide a reference FASTA file that includes all targets present in the BAM header; If you have access to the genome FASTA and GTF used for alignment ; consider generating a transcriptome fasta using a command like: ; gffread -w output.fa -g genome.fa genome.gtf; you can find the gffread utility at (http://ccb.jhu.edu/software/stringtie/gff.shtml); ```. I generated output.fa using gffreads from hg19.fa and gtf . In the output.fa, it is annotated in terms of gene ids, but there is chr1 in BAM. I am not sure how can I make them to talk to each other?. Could you please tell me how can I fix it?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/131
https://github.com/COMBINE-lab/salmon/issues/131:245,Availability,Error,Error,245,"I am interested to run your tool: Salmon. It is a great and easy tool to use. I encounter this error by using:; ```; ./bin/salmon quant -t output.fa -g hgTables.gtf -l IU -a ../../pipeline/rna_seq/all_chr1/merged.bam -p 20 -o salmon_quant; ```. Error:; ```; [2017-04-11 12:33:40.420] [jointLog] [critical] Transcript chr1 appeared in the BAM header, but was not in the provided FASTA file; [2017-04-11 12:33:40.420] [jointLog] [critical] Please provide a reference FASTA file that includes all targets present in the BAM header; If you have access to the genome FASTA and GTF used for alignment ; consider generating a transcriptome fasta using a command like: ; gffread -w output.fa -g genome.fa genome.gtf; you can find the gffread utility at (http://ccb.jhu.edu/software/stringtie/gff.shtml); ```. I generated output.fa using gffreads from hg19.fa and gtf . In the output.fa, it is annotated in terms of gene ids, but there is chr1 in BAM. I am not sure how can I make them to talk to each other?. Could you please tell me how can I fix it?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/131
https://github.com/COMBINE-lab/salmon/issues/131:180,Deployability,pipeline,pipeline,180,"I am interested to run your tool: Salmon. It is a great and easy tool to use. I encounter this error by using:; ```; ./bin/salmon quant -t output.fa -g hgTables.gtf -l IU -a ../../pipeline/rna_seq/all_chr1/merged.bam -p 20 -o salmon_quant; ```. Error:; ```; [2017-04-11 12:33:40.420] [jointLog] [critical] Transcript chr1 appeared in the BAM header, but was not in the provided FASTA file; [2017-04-11 12:33:40.420] [jointLog] [critical] Please provide a reference FASTA file that includes all targets present in the BAM header; If you have access to the genome FASTA and GTF used for alignment ; consider generating a transcriptome fasta using a command like: ; gffread -w output.fa -g genome.fa genome.gtf; you can find the gffread utility at (http://ccb.jhu.edu/software/stringtie/gff.shtml); ```. I generated output.fa using gffreads from hg19.fa and gtf . In the output.fa, it is annotated in terms of gene ids, but there is chr1 in BAM. I am not sure how can I make them to talk to each other?. Could you please tell me how can I fix it?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/131
https://github.com/COMBINE-lab/salmon/issues/131:541,Security,access,access,541,"I am interested to run your tool: Salmon. It is a great and easy tool to use. I encounter this error by using:; ```; ./bin/salmon quant -t output.fa -g hgTables.gtf -l IU -a ../../pipeline/rna_seq/all_chr1/merged.bam -p 20 -o salmon_quant; ```. Error:; ```; [2017-04-11 12:33:40.420] [jointLog] [critical] Transcript chr1 appeared in the BAM header, but was not in the provided FASTA file; [2017-04-11 12:33:40.420] [jointLog] [critical] Please provide a reference FASTA file that includes all targets present in the BAM header; If you have access to the genome FASTA and GTF used for alignment ; consider generating a transcriptome fasta using a command like: ; gffread -w output.fa -g genome.fa genome.gtf; you can find the gffread utility at (http://ccb.jhu.edu/software/stringtie/gff.shtml); ```. I generated output.fa using gffreads from hg19.fa and gtf . In the output.fa, it is annotated in terms of gene ids, but there is chr1 in BAM. I am not sure how can I make them to talk to each other?. Could you please tell me how can I fix it?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/131
https://github.com/COMBINE-lab/salmon/issues/133:1505,Safety,avoid,avoided,1505,"Hello,. I've been comparing Salmon (v 0.8.2) counts with those of traditional STAR/featureCounts and found one bizarre example. The unique aligned counts and the Salmon counts (rounded) for my 3 sets of 3 samples are:. ```; C_1 C_2 C_3 pl_C_4 pl_C_5 pl_C_6 CpG_7 CpG_8 CpG_9; STAR 0 1 1 70 31 41 2 0 0; Salmon 147 139 1 80 41 47 2 76 95; ```; From the STAR counts, it looks like this gene is only expressed in the middle group of 3 samples, But Salmon has given 4/6 other samples large numbers of counts. There is only one transcript for this gene, which produces RING finger protein (large gene family). The estimated lengths for the transcript are:. ```; C_1 C_2 C_3 pl_C_4 pl_C_5 pl_C_6 CpG_7 CpG_8 CpG_9 ; 250.0 250.0 17385.6 17381.2 17308.9 17356.8 17415.0 250.0 250.0; ```. So those 4/6 with large numbers of counts have very short estimated gene lengths, which I'm guessing is just shared sequence with other RING finger protein genes. The two samples that had only 1 and 2 unique reads must have had them in a place that led Salmon to estimate the proper long transcript length, and to prevent the EM algorithm from assigning multiply mapping reads to the shared 250 bp. The combination of ~100 reads plus very short length leads to huge, incorrect abundances for these 4 samples! This is the only example I can find in the whole data set, so it must be a weird combination of the transcript only being expressed at a low-level in one group plus a large gene family. Is there anyway this could be avoided by your algorithm?; Thanks,; Jenny",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/133
https://github.com/COMBINE-lab/salmon/issues/134:712,Availability,avail,available,712,"We tried to run salmon with broken linked files (as in, we accidently linked to the wrong directory). This led to salmon getting to the kmer counting stage and then permanently pausing there (see output below). You can see a version of the broken protocol here: https://github.com/ngs-docs/2017-ucsc-metagenomics/blob/cd417dc4b384b668eda2a477fd805ebb3b30cd00/salmon_tutorial.rst. So, it would be nice if salmon could compensate for this misstep on our part and notify us if a broken linked file is given as input, rather than just pausing. . `tx160085@js-104-35:~/Salmon-0.7.2_linux_x86_64/data$ salmon index -t metagG.ffn -i transcript_index -; -type quasi -k 31; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; index [""transcript_index""] did not previously exist . . . creating it; [2017-04-23 17:02:32.614] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers`. Thank you!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/134
https://github.com/COMBINE-lab/salmon/issues/134:754,Availability,avail,available,754,"We tried to run salmon with broken linked files (as in, we accidently linked to the wrong directory). This led to salmon getting to the kmer counting stage and then permanently pausing there (see output below). You can see a version of the broken protocol here: https://github.com/ngs-docs/2017-ucsc-metagenomics/blob/cd417dc4b384b668eda2a477fd805ebb3b30cd00/salmon_tutorial.rst. So, it would be nice if salmon could compensate for this misstep on our part and notify us if a broken linked file is given as input, rather than just pausing. . `tx160085@js-104-35:~/Salmon-0.7.2_linux_x86_64/data$ salmon index -t metagG.ffn -i transcript_index -; -type quasi -k 31; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; index [""transcript_index""] did not previously exist . . . creating it; [2017-04-23 17:02:32.614] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers`. Thank you!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/134
https://github.com/COMBINE-lab/salmon/issues/134:805,Deployability,release,releases,805,"We tried to run salmon with broken linked files (as in, we accidently linked to the wrong directory). This led to salmon getting to the kmer counting stage and then permanently pausing there (see output below). You can see a version of the broken protocol here: https://github.com/ngs-docs/2017-ucsc-metagenomics/blob/cd417dc4b384b668eda2a477fd805ebb3b30cd00/salmon_tutorial.rst. So, it would be nice if salmon could compensate for this misstep on our part and notify us if a broken linked file is given as input, rather than just pausing. . `tx160085@js-104-35:~/Salmon-0.7.2_linux_x86_64/data$ salmon index -t metagG.ffn -i transcript_index -; -type quasi -k 31; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; index [""transcript_index""] did not previously exist . . . creating it; [2017-04-23 17:02:32.614] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers`. Thank you!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/134
https://github.com/COMBINE-lab/salmon/issues/134:880,Deployability,upgrade,upgrade,880,"We tried to run salmon with broken linked files (as in, we accidently linked to the wrong directory). This led to salmon getting to the kmer counting stage and then permanently pausing there (see output below). You can see a version of the broken protocol here: https://github.com/ngs-docs/2017-ucsc-metagenomics/blob/cd417dc4b384b668eda2a477fd805ebb3b30cd00/salmon_tutorial.rst. So, it would be nice if salmon could compensate for this misstep on our part and notify us if a broken linked file is given as input, rather than just pausing. . `tx160085@js-104-35:~/Salmon-0.7.2_linux_x86_64/data$ salmon index -t metagG.ffn -i transcript_index -; -type quasi -k 31; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; index [""transcript_index""] did not previously exist . . . creating it; [2017-04-23 17:02:32.614] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers`. Thank you!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/134
https://github.com/COMBINE-lab/salmon/issues/134:247,Integrability,protocol,protocol,247,"We tried to run salmon with broken linked files (as in, we accidently linked to the wrong directory). This led to salmon getting to the kmer counting stage and then permanently pausing there (see output below). You can see a version of the broken protocol here: https://github.com/ngs-docs/2017-ucsc-metagenomics/blob/cd417dc4b384b668eda2a477fd805ebb3b30cd00/salmon_tutorial.rst. So, it would be nice if salmon could compensate for this misstep on our part and notify us if a broken linked file is given as input, rather than just pausing. . `tx160085@js-104-35:~/Salmon-0.7.2_linux_x86_64/data$ salmon index -t metagG.ffn -i transcript_index -; -type quasi -k 31; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; index [""transcript_index""] did not previously exist . . . creating it; [2017-04-23 17:02:32.614] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers`. Thank you!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/134
https://github.com/COMBINE-lab/salmon/issues/135:84,Availability,error,error,84,"Hi,. I am running the latest version of Salmon 0.8.2 and I am getting the following error. I did remake the transcript index with the new version of salmon. I get no errors when i compile or run the ""make test"". . Logs will be written to salmon_output_A9039/logs; [2017-05-08 08:59:23.370] [jointLog] [info] parsing read library format; [2017-05-08 08:59:23.370] [jointLog] [info] There is 1 library.; [2017-05-08 08:59:23.395] [stderrLog] [error] Encountered exception [JSON Parsing failed - provided NVP (SeqHash) not found] when loading index.; [2017-05-08 08:59:23.395] [stderrLog] [error] The index was likely build with an older (and incompatible) version of RapMap. Please re-build the index with a compatible version. Using boost 1.64, Clang 3.9, on a linux box. Any help will be appreciated. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/135
https://github.com/COMBINE-lab/salmon/issues/135:166,Availability,error,errors,166,"Hi,. I am running the latest version of Salmon 0.8.2 and I am getting the following error. I did remake the transcript index with the new version of salmon. I get no errors when i compile or run the ""make test"". . Logs will be written to salmon_output_A9039/logs; [2017-05-08 08:59:23.370] [jointLog] [info] parsing read library format; [2017-05-08 08:59:23.370] [jointLog] [info] There is 1 library.; [2017-05-08 08:59:23.395] [stderrLog] [error] Encountered exception [JSON Parsing failed - provided NVP (SeqHash) not found] when loading index.; [2017-05-08 08:59:23.395] [stderrLog] [error] The index was likely build with an older (and incompatible) version of RapMap. Please re-build the index with a compatible version. Using boost 1.64, Clang 3.9, on a linux box. Any help will be appreciated. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/135
https://github.com/COMBINE-lab/salmon/issues/135:441,Availability,error,error,441,"Hi,. I am running the latest version of Salmon 0.8.2 and I am getting the following error. I did remake the transcript index with the new version of salmon. I get no errors when i compile or run the ""make test"". . Logs will be written to salmon_output_A9039/logs; [2017-05-08 08:59:23.370] [jointLog] [info] parsing read library format; [2017-05-08 08:59:23.370] [jointLog] [info] There is 1 library.; [2017-05-08 08:59:23.395] [stderrLog] [error] Encountered exception [JSON Parsing failed - provided NVP (SeqHash) not found] when loading index.; [2017-05-08 08:59:23.395] [stderrLog] [error] The index was likely build with an older (and incompatible) version of RapMap. Please re-build the index with a compatible version. Using boost 1.64, Clang 3.9, on a linux box. Any help will be appreciated. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/135
https://github.com/COMBINE-lab/salmon/issues/135:587,Availability,error,error,587,"Hi,. I am running the latest version of Salmon 0.8.2 and I am getting the following error. I did remake the transcript index with the new version of salmon. I get no errors when i compile or run the ""make test"". . Logs will be written to salmon_output_A9039/logs; [2017-05-08 08:59:23.370] [jointLog] [info] parsing read library format; [2017-05-08 08:59:23.370] [jointLog] [info] There is 1 library.; [2017-05-08 08:59:23.395] [stderrLog] [error] Encountered exception [JSON Parsing failed - provided NVP (SeqHash) not found] when loading index.; [2017-05-08 08:59:23.395] [stderrLog] [error] The index was likely build with an older (and incompatible) version of RapMap. Please re-build the index with a compatible version. Using boost 1.64, Clang 3.9, on a linux box. Any help will be appreciated. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/135
https://github.com/COMBINE-lab/salmon/issues/135:532,Performance,load,loading,532,"Hi,. I am running the latest version of Salmon 0.8.2 and I am getting the following error. I did remake the transcript index with the new version of salmon. I get no errors when i compile or run the ""make test"". . Logs will be written to salmon_output_A9039/logs; [2017-05-08 08:59:23.370] [jointLog] [info] parsing read library format; [2017-05-08 08:59:23.370] [jointLog] [info] There is 1 library.; [2017-05-08 08:59:23.395] [stderrLog] [error] Encountered exception [JSON Parsing failed - provided NVP (SeqHash) not found] when loading index.; [2017-05-08 08:59:23.395] [stderrLog] [error] The index was likely build with an older (and incompatible) version of RapMap. Please re-build the index with a compatible version. Using boost 1.64, Clang 3.9, on a linux box. Any help will be appreciated. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/135
https://github.com/COMBINE-lab/salmon/issues/135:205,Testability,test,test,205,"Hi,. I am running the latest version of Salmon 0.8.2 and I am getting the following error. I did remake the transcript index with the new version of salmon. I get no errors when i compile or run the ""make test"". . Logs will be written to salmon_output_A9039/logs; [2017-05-08 08:59:23.370] [jointLog] [info] parsing read library format; [2017-05-08 08:59:23.370] [jointLog] [info] There is 1 library.; [2017-05-08 08:59:23.395] [stderrLog] [error] Encountered exception [JSON Parsing failed - provided NVP (SeqHash) not found] when loading index.; [2017-05-08 08:59:23.395] [stderrLog] [error] The index was likely build with an older (and incompatible) version of RapMap. Please re-build the index with a compatible version. Using boost 1.64, Clang 3.9, on a linux box. Any help will be appreciated. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/135
https://github.com/COMBINE-lab/salmon/issues/135:214,Testability,Log,Logs,214,"Hi,. I am running the latest version of Salmon 0.8.2 and I am getting the following error. I did remake the transcript index with the new version of salmon. I get no errors when i compile or run the ""make test"". . Logs will be written to salmon_output_A9039/logs; [2017-05-08 08:59:23.370] [jointLog] [info] parsing read library format; [2017-05-08 08:59:23.370] [jointLog] [info] There is 1 library.; [2017-05-08 08:59:23.395] [stderrLog] [error] Encountered exception [JSON Parsing failed - provided NVP (SeqHash) not found] when loading index.; [2017-05-08 08:59:23.395] [stderrLog] [error] The index was likely build with an older (and incompatible) version of RapMap. Please re-build the index with a compatible version. Using boost 1.64, Clang 3.9, on a linux box. Any help will be appreciated. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/135
https://github.com/COMBINE-lab/salmon/issues/135:258,Testability,log,logs,258,"Hi,. I am running the latest version of Salmon 0.8.2 and I am getting the following error. I did remake the transcript index with the new version of salmon. I get no errors when i compile or run the ""make test"". . Logs will be written to salmon_output_A9039/logs; [2017-05-08 08:59:23.370] [jointLog] [info] parsing read library format; [2017-05-08 08:59:23.370] [jointLog] [info] There is 1 library.; [2017-05-08 08:59:23.395] [stderrLog] [error] Encountered exception [JSON Parsing failed - provided NVP (SeqHash) not found] when loading index.; [2017-05-08 08:59:23.395] [stderrLog] [error] The index was likely build with an older (and incompatible) version of RapMap. Please re-build the index with a compatible version. Using boost 1.64, Clang 3.9, on a linux box. Any help will be appreciated. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/135
https://github.com/COMBINE-lab/salmon/issues/136:359,Availability,error,error,359,"Hello,. My lab is in the process of testing out Salmon and potentially switching to it from traditional aligners. With a traditional aligner, we use picard's MarkDuplicates to remove PCR duplicates. Is there a way to remove PCR duplicates with Salmon? I tried using --writeMappings to generate a BAM and feed that into picard, but I just get a SAM validation error: ""Not primary alignment flag should not be set for unmapped read."". Best,; Brian",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/136
https://github.com/COMBINE-lab/salmon/issues/136:348,Security,validat,validation,348,"Hello,. My lab is in the process of testing out Salmon and potentially switching to it from traditional aligners. With a traditional aligner, we use picard's MarkDuplicates to remove PCR duplicates. Is there a way to remove PCR duplicates with Salmon? I tried using --writeMappings to generate a BAM and feed that into picard, but I just get a SAM validation error: ""Not primary alignment flag should not be set for unmapped read."". Best,; Brian",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/136
https://github.com/COMBINE-lab/salmon/issues/136:36,Testability,test,testing,36,"Hello,. My lab is in the process of testing out Salmon and potentially switching to it from traditional aligners. With a traditional aligner, we use picard's MarkDuplicates to remove PCR duplicates. Is there a way to remove PCR duplicates with Salmon? I tried using --writeMappings to generate a BAM and feed that into picard, but I just get a SAM validation error: ""Not primary alignment flag should not be set for unmapped read."". Best,; Brian",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/136
https://github.com/COMBINE-lab/salmon/issues/138:180,Performance,perform,performing,180,"Is there an option to use salmon only to identify the library type? I want to use the option libType -A to use salmon at a pre-processing step to identify the library type without performing quantification. An option like ""salmon identify"" would be really useful, and I can imagine easy to implement.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/138
https://github.com/COMBINE-lab/salmon/issues/139:251,Availability,error,errors,251,"Hey all,. I'm currently attempting to install Salmon from source on a machine running Ubuntu 16.04. I'm following along with the installation instructions (http://salmon.readthedocs.io/en/latest/building.html#installation); however, I am running into errors when running cmake:. michael@thinkpad:/opt/salmon/salmon-0.8.2/build$ cmake -DFETCH_BOOST=TRUE; CMake Error: The source directory ""/opt/salmon/salmon-0.8.2/build"" does not appear to contain CMakeLists.txt.; Specify --help for usage, or press the help button on the CMake GUI. I tried to fix the issue by moving CMakeLists.rxt from the parent directory into the build directory, but I was met with even more errors, I've attached the created CMakeError.log and CMakeOutput.log file. [CMakeOutput.txt](https://github.com/COMBINE-lab/salmon/files/1109023/CMakeOutput.txt); [CMakeError.txt](https://github.com/COMBINE-lab/salmon/files/1109022/CMakeError.txt). I'm thinking that this may be a simple issue that I've overlooked as I'm new to Linux, and installation using CMake is new to me.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/139
https://github.com/COMBINE-lab/salmon/issues/139:360,Availability,Error,Error,360,"Hey all,. I'm currently attempting to install Salmon from source on a machine running Ubuntu 16.04. I'm following along with the installation instructions (http://salmon.readthedocs.io/en/latest/building.html#installation); however, I am running into errors when running cmake:. michael@thinkpad:/opt/salmon/salmon-0.8.2/build$ cmake -DFETCH_BOOST=TRUE; CMake Error: The source directory ""/opt/salmon/salmon-0.8.2/build"" does not appear to contain CMakeLists.txt.; Specify --help for usage, or press the help button on the CMake GUI. I tried to fix the issue by moving CMakeLists.rxt from the parent directory into the build directory, but I was met with even more errors, I've attached the created CMakeError.log and CMakeOutput.log file. [CMakeOutput.txt](https://github.com/COMBINE-lab/salmon/files/1109023/CMakeOutput.txt); [CMakeError.txt](https://github.com/COMBINE-lab/salmon/files/1109022/CMakeError.txt). I'm thinking that this may be a simple issue that I've overlooked as I'm new to Linux, and installation using CMake is new to me.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/139
https://github.com/COMBINE-lab/salmon/issues/139:665,Availability,error,errors,665,"Hey all,. I'm currently attempting to install Salmon from source on a machine running Ubuntu 16.04. I'm following along with the installation instructions (http://salmon.readthedocs.io/en/latest/building.html#installation); however, I am running into errors when running cmake:. michael@thinkpad:/opt/salmon/salmon-0.8.2/build$ cmake -DFETCH_BOOST=TRUE; CMake Error: The source directory ""/opt/salmon/salmon-0.8.2/build"" does not appear to contain CMakeLists.txt.; Specify --help for usage, or press the help button on the CMake GUI. I tried to fix the issue by moving CMakeLists.rxt from the parent directory into the build directory, but I was met with even more errors, I've attached the created CMakeError.log and CMakeOutput.log file. [CMakeOutput.txt](https://github.com/COMBINE-lab/salmon/files/1109023/CMakeOutput.txt); [CMakeError.txt](https://github.com/COMBINE-lab/salmon/files/1109022/CMakeError.txt). I'm thinking that this may be a simple issue that I've overlooked as I'm new to Linux, and installation using CMake is new to me.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/139
https://github.com/COMBINE-lab/salmon/issues/139:38,Deployability,install,install,38,"Hey all,. I'm currently attempting to install Salmon from source on a machine running Ubuntu 16.04. I'm following along with the installation instructions (http://salmon.readthedocs.io/en/latest/building.html#installation); however, I am running into errors when running cmake:. michael@thinkpad:/opt/salmon/salmon-0.8.2/build$ cmake -DFETCH_BOOST=TRUE; CMake Error: The source directory ""/opt/salmon/salmon-0.8.2/build"" does not appear to contain CMakeLists.txt.; Specify --help for usage, or press the help button on the CMake GUI. I tried to fix the issue by moving CMakeLists.rxt from the parent directory into the build directory, but I was met with even more errors, I've attached the created CMakeError.log and CMakeOutput.log file. [CMakeOutput.txt](https://github.com/COMBINE-lab/salmon/files/1109023/CMakeOutput.txt); [CMakeError.txt](https://github.com/COMBINE-lab/salmon/files/1109022/CMakeError.txt). I'm thinking that this may be a simple issue that I've overlooked as I'm new to Linux, and installation using CMake is new to me.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/139
https://github.com/COMBINE-lab/salmon/issues/139:129,Deployability,install,installation,129,"Hey all,. I'm currently attempting to install Salmon from source on a machine running Ubuntu 16.04. I'm following along with the installation instructions (http://salmon.readthedocs.io/en/latest/building.html#installation); however, I am running into errors when running cmake:. michael@thinkpad:/opt/salmon/salmon-0.8.2/build$ cmake -DFETCH_BOOST=TRUE; CMake Error: The source directory ""/opt/salmon/salmon-0.8.2/build"" does not appear to contain CMakeLists.txt.; Specify --help for usage, or press the help button on the CMake GUI. I tried to fix the issue by moving CMakeLists.rxt from the parent directory into the build directory, but I was met with even more errors, I've attached the created CMakeError.log and CMakeOutput.log file. [CMakeOutput.txt](https://github.com/COMBINE-lab/salmon/files/1109023/CMakeOutput.txt); [CMakeError.txt](https://github.com/COMBINE-lab/salmon/files/1109022/CMakeError.txt). I'm thinking that this may be a simple issue that I've overlooked as I'm new to Linux, and installation using CMake is new to me.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/139
https://github.com/COMBINE-lab/salmon/issues/139:209,Deployability,install,installation,209,"Hey all,. I'm currently attempting to install Salmon from source on a machine running Ubuntu 16.04. I'm following along with the installation instructions (http://salmon.readthedocs.io/en/latest/building.html#installation); however, I am running into errors when running cmake:. michael@thinkpad:/opt/salmon/salmon-0.8.2/build$ cmake -DFETCH_BOOST=TRUE; CMake Error: The source directory ""/opt/salmon/salmon-0.8.2/build"" does not appear to contain CMakeLists.txt.; Specify --help for usage, or press the help button on the CMake GUI. I tried to fix the issue by moving CMakeLists.rxt from the parent directory into the build directory, but I was met with even more errors, I've attached the created CMakeError.log and CMakeOutput.log file. [CMakeOutput.txt](https://github.com/COMBINE-lab/salmon/files/1109023/CMakeOutput.txt); [CMakeError.txt](https://github.com/COMBINE-lab/salmon/files/1109022/CMakeError.txt). I'm thinking that this may be a simple issue that I've overlooked as I'm new to Linux, and installation using CMake is new to me.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/139
https://github.com/COMBINE-lab/salmon/issues/139:1005,Deployability,install,installation,1005,"Hey all,. I'm currently attempting to install Salmon from source on a machine running Ubuntu 16.04. I'm following along with the installation instructions (http://salmon.readthedocs.io/en/latest/building.html#installation); however, I am running into errors when running cmake:. michael@thinkpad:/opt/salmon/salmon-0.8.2/build$ cmake -DFETCH_BOOST=TRUE; CMake Error: The source directory ""/opt/salmon/salmon-0.8.2/build"" does not appear to contain CMakeLists.txt.; Specify --help for usage, or press the help button on the CMake GUI. I tried to fix the issue by moving CMakeLists.rxt from the parent directory into the build directory, but I was met with even more errors, I've attached the created CMakeError.log and CMakeOutput.log file. [CMakeOutput.txt](https://github.com/COMBINE-lab/salmon/files/1109023/CMakeOutput.txt); [CMakeError.txt](https://github.com/COMBINE-lab/salmon/files/1109022/CMakeError.txt). I'm thinking that this may be a simple issue that I've overlooked as I'm new to Linux, and installation using CMake is new to me.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/139
https://github.com/COMBINE-lab/salmon/issues/139:710,Testability,log,log,710,"Hey all,. I'm currently attempting to install Salmon from source on a machine running Ubuntu 16.04. I'm following along with the installation instructions (http://salmon.readthedocs.io/en/latest/building.html#installation); however, I am running into errors when running cmake:. michael@thinkpad:/opt/salmon/salmon-0.8.2/build$ cmake -DFETCH_BOOST=TRUE; CMake Error: The source directory ""/opt/salmon/salmon-0.8.2/build"" does not appear to contain CMakeLists.txt.; Specify --help for usage, or press the help button on the CMake GUI. I tried to fix the issue by moving CMakeLists.rxt from the parent directory into the build directory, but I was met with even more errors, I've attached the created CMakeError.log and CMakeOutput.log file. [CMakeOutput.txt](https://github.com/COMBINE-lab/salmon/files/1109023/CMakeOutput.txt); [CMakeError.txt](https://github.com/COMBINE-lab/salmon/files/1109022/CMakeError.txt). I'm thinking that this may be a simple issue that I've overlooked as I'm new to Linux, and installation using CMake is new to me.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/139
https://github.com/COMBINE-lab/salmon/issues/139:730,Testability,log,log,730,"Hey all,. I'm currently attempting to install Salmon from source on a machine running Ubuntu 16.04. I'm following along with the installation instructions (http://salmon.readthedocs.io/en/latest/building.html#installation); however, I am running into errors when running cmake:. michael@thinkpad:/opt/salmon/salmon-0.8.2/build$ cmake -DFETCH_BOOST=TRUE; CMake Error: The source directory ""/opt/salmon/salmon-0.8.2/build"" does not appear to contain CMakeLists.txt.; Specify --help for usage, or press the help button on the CMake GUI. I tried to fix the issue by moving CMakeLists.rxt from the parent directory into the build directory, but I was met with even more errors, I've attached the created CMakeError.log and CMakeOutput.log file. [CMakeOutput.txt](https://github.com/COMBINE-lab/salmon/files/1109023/CMakeOutput.txt); [CMakeError.txt](https://github.com/COMBINE-lab/salmon/files/1109022/CMakeError.txt). I'm thinking that this may be a simple issue that I've overlooked as I'm new to Linux, and installation using CMake is new to me.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/139
https://github.com/COMBINE-lab/salmon/issues/139:946,Usability,simpl,simple,946,"Hey all,. I'm currently attempting to install Salmon from source on a machine running Ubuntu 16.04. I'm following along with the installation instructions (http://salmon.readthedocs.io/en/latest/building.html#installation); however, I am running into errors when running cmake:. michael@thinkpad:/opt/salmon/salmon-0.8.2/build$ cmake -DFETCH_BOOST=TRUE; CMake Error: The source directory ""/opt/salmon/salmon-0.8.2/build"" does not appear to contain CMakeLists.txt.; Specify --help for usage, or press the help button on the CMake GUI. I tried to fix the issue by moving CMakeLists.rxt from the parent directory into the build directory, but I was met with even more errors, I've attached the created CMakeError.log and CMakeOutput.log file. [CMakeOutput.txt](https://github.com/COMBINE-lab/salmon/files/1109023/CMakeOutput.txt); [CMakeError.txt](https://github.com/COMBINE-lab/salmon/files/1109022/CMakeError.txt). I'm thinking that this may be a simple issue that I've overlooked as I'm new to Linux, and installation using CMake is new to me.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/139
https://github.com/COMBINE-lab/salmon/issues/140:407,Availability,error,error,407,"Hi,. I used merged genome + transcriptome file with Hisat2 to retrieve all reads in my samples, and then converted the bam files to R1. fastq, R2.fastq + singletons files. I then used Hisat2 with the three files and used the transcriptome fasta file to pull out reads which is now in bam format to be used in Salmon. When I tried using Salmon using the transcriptome fasta file and the bam file, I get this error:. WARNING: Detected suspicious pair --- ; 	The proper-pair statuses are inconsistent:; read1 [HWI-7001326F:36:C7J2GANXX:5:1104:13209:80405] : proper-pair; mapped; matemapped. read2 : [HWI-7001326F:36:C7J2GANXX:5:1104:13209:80405] : no proper-pair; mapped; matemapped. [2017-07-07 10:46:02.309] [jointLog] [warning] . ERROR: Found unpaired read in a paired-end library. The read was marked as unpaired in sequencing (not just unmapped).The two ends of a paired-end read should be adjacent. Don't know how to proceed; exiting!. I tried to sort the bam files using samtools sort -n but still I get the above error. Any advice please? Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/140
https://github.com/COMBINE-lab/salmon/issues/140:730,Availability,ERROR,ERROR,730,"Hi,. I used merged genome + transcriptome file with Hisat2 to retrieve all reads in my samples, and then converted the bam files to R1. fastq, R2.fastq + singletons files. I then used Hisat2 with the three files and used the transcriptome fasta file to pull out reads which is now in bam format to be used in Salmon. When I tried using Salmon using the transcriptome fasta file and the bam file, I get this error:. WARNING: Detected suspicious pair --- ; 	The proper-pair statuses are inconsistent:; read1 [HWI-7001326F:36:C7J2GANXX:5:1104:13209:80405] : proper-pair; mapped; matemapped. read2 : [HWI-7001326F:36:C7J2GANXX:5:1104:13209:80405] : no proper-pair; mapped; matemapped. [2017-07-07 10:46:02.309] [jointLog] [warning] . ERROR: Found unpaired read in a paired-end library. The read was marked as unpaired in sequencing (not just unmapped).The two ends of a paired-end read should be adjacent. Don't know how to proceed; exiting!. I tried to sort the bam files using samtools sort -n but still I get the above error. Any advice please? Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/140
https://github.com/COMBINE-lab/salmon/issues/140:1018,Availability,error,error,1018,"Hi,. I used merged genome + transcriptome file with Hisat2 to retrieve all reads in my samples, and then converted the bam files to R1. fastq, R2.fastq + singletons files. I then used Hisat2 with the three files and used the transcriptome fasta file to pull out reads which is now in bam format to be used in Salmon. When I tried using Salmon using the transcriptome fasta file and the bam file, I get this error:. WARNING: Detected suspicious pair --- ; 	The proper-pair statuses are inconsistent:; read1 [HWI-7001326F:36:C7J2GANXX:5:1104:13209:80405] : proper-pair; mapped; matemapped. read2 : [HWI-7001326F:36:C7J2GANXX:5:1104:13209:80405] : no proper-pair; mapped; matemapped. [2017-07-07 10:46:02.309] [jointLog] [warning] . ERROR: Found unpaired read in a paired-end library. The read was marked as unpaired in sequencing (not just unmapped).The two ends of a paired-end read should be adjacent. Don't know how to proceed; exiting!. I tried to sort the bam files using samtools sort -n but still I get the above error. Any advice please? Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/140
https://github.com/COMBINE-lab/salmon/issues/140:424,Safety,Detect,Detected,424,"Hi,. I used merged genome + transcriptome file with Hisat2 to retrieve all reads in my samples, and then converted the bam files to R1. fastq, R2.fastq + singletons files. I then used Hisat2 with the three files and used the transcriptome fasta file to pull out reads which is now in bam format to be used in Salmon. When I tried using Salmon using the transcriptome fasta file and the bam file, I get this error:. WARNING: Detected suspicious pair --- ; 	The proper-pair statuses are inconsistent:; read1 [HWI-7001326F:36:C7J2GANXX:5:1104:13209:80405] : proper-pair; mapped; matemapped. read2 : [HWI-7001326F:36:C7J2GANXX:5:1104:13209:80405] : no proper-pair; mapped; matemapped. [2017-07-07 10:46:02.309] [jointLog] [warning] . ERROR: Found unpaired read in a paired-end library. The read was marked as unpaired in sequencing (not just unmapped).The two ends of a paired-end read should be adjacent. Don't know how to proceed; exiting!. I tried to sort the bam files using samtools sort -n but still I get the above error. Any advice please? Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/140
https://github.com/COMBINE-lab/salmon/issues/141:607,Availability,error,error,607,"**Hi there,**. **So I'm trying to install Salmon-0.8.2 but I'm having a few issues. I should note upfront that I'm working on a cluster and therefore I do not have root privileges.** . **Anyway, when going through the build process I wasn't able to install boost using salmons flags, so I installed it independently. I was then able to make it to the 'make' stage, but the got to this point:**. [ 7%] Built target liblzma; [ 14%] Built target libbz2; [ 21%] Built target libdivsufsort; [ 29%] Built target liberal; [ 37%] Built target libgff; [ 38%] Performing build step for 'libbwa'; utils.c:33:18: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^; compilation terminated.; make[3]: *** [utils.o] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. **I resolved this by making a custom script which told make where to look for zlib:**. export C_INCLUDE_PATH=/users/work/jake/bin/zlib-1.2.11/; export CPLUS_INCLUDE_PATH=/users/work/jake/bin/zlib-1.2.11/; make. **Executing that script allowed me to progress a little but I'm now receiving the following error message:**. [ 7%] Built target liblzma; [ 14%] Built target libbz2; [ 21%] Built target libdivsufsort; [ 29%] Built target libcereal; [ 37%] Built target libgff; [ 38%] Performing build step for 'libbwa'; /bin/ld: cannot find -lz; collect2: error: ld returned 1 exit status; make[3]: *** [bwa] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. **I'm not the best command line user so my 'fixes' might not be the best approach. Still I'm not really sure how to approach this new error message. Google doesn't turn up much so any advice you could give it would be greatly appreciated.**",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/141
https://github.com/COMBINE-lab/salmon/issues/141:719,Availability,Error,Error,719,"**Hi there,**. **So I'm trying to install Salmon-0.8.2 but I'm having a few issues. I should note upfront that I'm working on a cluster and therefore I do not have root privileges.** . **Anyway, when going through the build process I wasn't able to install boost using salmons flags, so I installed it independently. I was then able to make it to the 'make' stage, but the got to this point:**. [ 7%] Built target liblzma; [ 14%] Built target libbz2; [ 21%] Built target libdivsufsort; [ 29%] Built target liberal; [ 37%] Built target libgff; [ 38%] Performing build step for 'libbwa'; utils.c:33:18: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^; compilation terminated.; make[3]: *** [utils.o] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. **I resolved this by making a custom script which told make where to look for zlib:**. export C_INCLUDE_PATH=/users/work/jake/bin/zlib-1.2.11/; export CPLUS_INCLUDE_PATH=/users/work/jake/bin/zlib-1.2.11/; make. **Executing that script allowed me to progress a little but I'm now receiving the following error message:**. [ 7%] Built target liblzma; [ 14%] Built target libbz2; [ 21%] Built target libdivsufsort; [ 29%] Built target libcereal; [ 37%] Built target libgff; [ 38%] Performing build step for 'libbwa'; /bin/ld: cannot find -lz; collect2: error: ld returned 1 exit status; make[3]: *** [bwa] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. **I'm not the best command line user so my 'fixes' might not be the best approach. Still I'm not really sure how to approach this new error message. Google doesn't turn up much so any advice you could give it would be greatly appreciated.**",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/141
https://github.com/COMBINE-lab/salmon/issues/141:787,Availability,Error,Error,787,"**Hi there,**. **So I'm trying to install Salmon-0.8.2 but I'm having a few issues. I should note upfront that I'm working on a cluster and therefore I do not have root privileges.** . **Anyway, when going through the build process I wasn't able to install boost using salmons flags, so I installed it independently. I was then able to make it to the 'make' stage, but the got to this point:**. [ 7%] Built target liblzma; [ 14%] Built target libbz2; [ 21%] Built target libdivsufsort; [ 29%] Built target liberal; [ 37%] Built target libgff; [ 38%] Performing build step for 'libbwa'; utils.c:33:18: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^; compilation terminated.; make[3]: *** [utils.o] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. **I resolved this by making a custom script which told make where to look for zlib:**. export C_INCLUDE_PATH=/users/work/jake/bin/zlib-1.2.11/; export CPLUS_INCLUDE_PATH=/users/work/jake/bin/zlib-1.2.11/; make. **Executing that script allowed me to progress a little but I'm now receiving the following error message:**. [ 7%] Built target liblzma; [ 14%] Built target libbz2; [ 21%] Built target libdivsufsort; [ 29%] Built target libcereal; [ 37%] Built target libgff; [ 38%] Performing build step for 'libbwa'; /bin/ld: cannot find -lz; collect2: error: ld returned 1 exit status; make[3]: *** [bwa] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. **I'm not the best command line user so my 'fixes' might not be the best approach. Still I'm not really sure how to approach this new error message. Google doesn't turn up much so any advice you could give it would be greatly appreciated.**",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/141
https://github.com/COMBINE-lab/salmon/issues/141:837,Availability,Error,Error,837,"**Hi there,**. **So I'm trying to install Salmon-0.8.2 but I'm having a few issues. I should note upfront that I'm working on a cluster and therefore I do not have root privileges.** . **Anyway, when going through the build process I wasn't able to install boost using salmons flags, so I installed it independently. I was then able to make it to the 'make' stage, but the got to this point:**. [ 7%] Built target liblzma; [ 14%] Built target libbz2; [ 21%] Built target libdivsufsort; [ 29%] Built target liberal; [ 37%] Built target libgff; [ 38%] Performing build step for 'libbwa'; utils.c:33:18: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^; compilation terminated.; make[3]: *** [utils.o] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. **I resolved this by making a custom script which told make where to look for zlib:**. export C_INCLUDE_PATH=/users/work/jake/bin/zlib-1.2.11/; export CPLUS_INCLUDE_PATH=/users/work/jake/bin/zlib-1.2.11/; make. **Executing that script allowed me to progress a little but I'm now receiving the following error message:**. [ 7%] Built target liblzma; [ 14%] Built target libbz2; [ 21%] Built target libdivsufsort; [ 29%] Built target libcereal; [ 37%] Built target libgff; [ 38%] Performing build step for 'libbwa'; /bin/ld: cannot find -lz; collect2: error: ld returned 1 exit status; make[3]: *** [bwa] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. **I'm not the best command line user so my 'fixes' might not be the best approach. Still I'm not really sure how to approach this new error message. Google doesn't turn up much so any advice you could give it would be greatly appreciated.**",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/141
https://github.com/COMBINE-lab/salmon/issues/141:862,Availability,Error,Error,862,"**Hi there,**. **So I'm trying to install Salmon-0.8.2 but I'm having a few issues. I should note upfront that I'm working on a cluster and therefore I do not have root privileges.** . **Anyway, when going through the build process I wasn't able to install boost using salmons flags, so I installed it independently. I was then able to make it to the 'make' stage, but the got to this point:**. [ 7%] Built target liblzma; [ 14%] Built target libbz2; [ 21%] Built target libdivsufsort; [ 29%] Built target liberal; [ 37%] Built target libgff; [ 38%] Performing build step for 'libbwa'; utils.c:33:18: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^; compilation terminated.; make[3]: *** [utils.o] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. **I resolved this by making a custom script which told make where to look for zlib:**. export C_INCLUDE_PATH=/users/work/jake/bin/zlib-1.2.11/; export CPLUS_INCLUDE_PATH=/users/work/jake/bin/zlib-1.2.11/; make. **Executing that script allowed me to progress a little but I'm now receiving the following error message:**. [ 7%] Built target liblzma; [ 14%] Built target libbz2; [ 21%] Built target libdivsufsort; [ 29%] Built target libcereal; [ 37%] Built target libgff; [ 38%] Performing build step for 'libbwa'; /bin/ld: cannot find -lz; collect2: error: ld returned 1 exit status; make[3]: *** [bwa] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. **I'm not the best command line user so my 'fixes' might not be the best approach. Still I'm not really sure how to approach this new error message. Google doesn't turn up much so any advice you could give it would be greatly appreciated.**",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/141
https://github.com/COMBINE-lab/salmon/issues/141:1174,Availability,error,error,1174,"**Hi there,**. **So I'm trying to install Salmon-0.8.2 but I'm having a few issues. I should note upfront that I'm working on a cluster and therefore I do not have root privileges.** . **Anyway, when going through the build process I wasn't able to install boost using salmons flags, so I installed it independently. I was then able to make it to the 'make' stage, but the got to this point:**. [ 7%] Built target liblzma; [ 14%] Built target libbz2; [ 21%] Built target libdivsufsort; [ 29%] Built target liberal; [ 37%] Built target libgff; [ 38%] Performing build step for 'libbwa'; utils.c:33:18: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^; compilation terminated.; make[3]: *** [utils.o] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. **I resolved this by making a custom script which told make where to look for zlib:**. export C_INCLUDE_PATH=/users/work/jake/bin/zlib-1.2.11/; export CPLUS_INCLUDE_PATH=/users/work/jake/bin/zlib-1.2.11/; make. **Executing that script allowed me to progress a little but I'm now receiving the following error message:**. [ 7%] Built target liblzma; [ 14%] Built target libbz2; [ 21%] Built target libdivsufsort; [ 29%] Built target libcereal; [ 37%] Built target libgff; [ 38%] Performing build step for 'libbwa'; /bin/ld: cannot find -lz; collect2: error: ld returned 1 exit status; make[3]: *** [bwa] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. **I'm not the best command line user so my 'fixes' might not be the best approach. Still I'm not really sure how to approach this new error message. Google doesn't turn up much so any advice you could give it would be greatly appreciated.**",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/141
https://github.com/COMBINE-lab/salmon/issues/141:1421,Availability,error,error,1421,"**Hi there,**. **So I'm trying to install Salmon-0.8.2 but I'm having a few issues. I should note upfront that I'm working on a cluster and therefore I do not have root privileges.** . **Anyway, when going through the build process I wasn't able to install boost using salmons flags, so I installed it independently. I was then able to make it to the 'make' stage, but the got to this point:**. [ 7%] Built target liblzma; [ 14%] Built target libbz2; [ 21%] Built target libdivsufsort; [ 29%] Built target liberal; [ 37%] Built target libgff; [ 38%] Performing build step for 'libbwa'; utils.c:33:18: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^; compilation terminated.; make[3]: *** [utils.o] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. **I resolved this by making a custom script which told make where to look for zlib:**. export C_INCLUDE_PATH=/users/work/jake/bin/zlib-1.2.11/; export CPLUS_INCLUDE_PATH=/users/work/jake/bin/zlib-1.2.11/; make. **Executing that script allowed me to progress a little but I'm now receiving the following error message:**. [ 7%] Built target liblzma; [ 14%] Built target libbz2; [ 21%] Built target libdivsufsort; [ 29%] Built target libcereal; [ 37%] Built target libgff; [ 38%] Performing build step for 'libbwa'; /bin/ld: cannot find -lz; collect2: error: ld returned 1 exit status; make[3]: *** [bwa] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. **I'm not the best command line user so my 'fixes' might not be the best approach. Still I'm not really sure how to approach this new error message. Google doesn't turn up much so any advice you could give it would be greatly appreciated.**",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/141
https://github.com/COMBINE-lab/salmon/issues/141:1474,Availability,Error,Error,1474,"**Hi there,**. **So I'm trying to install Salmon-0.8.2 but I'm having a few issues. I should note upfront that I'm working on a cluster and therefore I do not have root privileges.** . **Anyway, when going through the build process I wasn't able to install boost using salmons flags, so I installed it independently. I was then able to make it to the 'make' stage, but the got to this point:**. [ 7%] Built target liblzma; [ 14%] Built target libbz2; [ 21%] Built target libdivsufsort; [ 29%] Built target liberal; [ 37%] Built target libgff; [ 38%] Performing build step for 'libbwa'; utils.c:33:18: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^; compilation terminated.; make[3]: *** [utils.o] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. **I resolved this by making a custom script which told make where to look for zlib:**. export C_INCLUDE_PATH=/users/work/jake/bin/zlib-1.2.11/; export CPLUS_INCLUDE_PATH=/users/work/jake/bin/zlib-1.2.11/; make. **Executing that script allowed me to progress a little but I'm now receiving the following error message:**. [ 7%] Built target liblzma; [ 14%] Built target libbz2; [ 21%] Built target libdivsufsort; [ 29%] Built target libcereal; [ 37%] Built target libgff; [ 38%] Performing build step for 'libbwa'; /bin/ld: cannot find -lz; collect2: error: ld returned 1 exit status; make[3]: *** [bwa] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. **I'm not the best command line user so my 'fixes' might not be the best approach. Still I'm not really sure how to approach this new error message. Google doesn't turn up much so any advice you could give it would be greatly appreciated.**",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/141
https://github.com/COMBINE-lab/salmon/issues/141:1542,Availability,Error,Error,1542,"**Hi there,**. **So I'm trying to install Salmon-0.8.2 but I'm having a few issues. I should note upfront that I'm working on a cluster and therefore I do not have root privileges.** . **Anyway, when going through the build process I wasn't able to install boost using salmons flags, so I installed it independently. I was then able to make it to the 'make' stage, but the got to this point:**. [ 7%] Built target liblzma; [ 14%] Built target libbz2; [ 21%] Built target libdivsufsort; [ 29%] Built target liberal; [ 37%] Built target libgff; [ 38%] Performing build step for 'libbwa'; utils.c:33:18: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^; compilation terminated.; make[3]: *** [utils.o] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. **I resolved this by making a custom script which told make where to look for zlib:**. export C_INCLUDE_PATH=/users/work/jake/bin/zlib-1.2.11/; export CPLUS_INCLUDE_PATH=/users/work/jake/bin/zlib-1.2.11/; make. **Executing that script allowed me to progress a little but I'm now receiving the following error message:**. [ 7%] Built target liblzma; [ 14%] Built target libbz2; [ 21%] Built target libdivsufsort; [ 29%] Built target libcereal; [ 37%] Built target libgff; [ 38%] Performing build step for 'libbwa'; /bin/ld: cannot find -lz; collect2: error: ld returned 1 exit status; make[3]: *** [bwa] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. **I'm not the best command line user so my 'fixes' might not be the best approach. Still I'm not really sure how to approach this new error message. Google doesn't turn up much so any advice you could give it would be greatly appreciated.**",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/141
https://github.com/COMBINE-lab/salmon/issues/141:1592,Availability,Error,Error,1592,"**Hi there,**. **So I'm trying to install Salmon-0.8.2 but I'm having a few issues. I should note upfront that I'm working on a cluster and therefore I do not have root privileges.** . **Anyway, when going through the build process I wasn't able to install boost using salmons flags, so I installed it independently. I was then able to make it to the 'make' stage, but the got to this point:**. [ 7%] Built target liblzma; [ 14%] Built target libbz2; [ 21%] Built target libdivsufsort; [ 29%] Built target liberal; [ 37%] Built target libgff; [ 38%] Performing build step for 'libbwa'; utils.c:33:18: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^; compilation terminated.; make[3]: *** [utils.o] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. **I resolved this by making a custom script which told make where to look for zlib:**. export C_INCLUDE_PATH=/users/work/jake/bin/zlib-1.2.11/; export CPLUS_INCLUDE_PATH=/users/work/jake/bin/zlib-1.2.11/; make. **Executing that script allowed me to progress a little but I'm now receiving the following error message:**. [ 7%] Built target liblzma; [ 14%] Built target libbz2; [ 21%] Built target libdivsufsort; [ 29%] Built target libcereal; [ 37%] Built target libgff; [ 38%] Performing build step for 'libbwa'; /bin/ld: cannot find -lz; collect2: error: ld returned 1 exit status; make[3]: *** [bwa] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. **I'm not the best command line user so my 'fixes' might not be the best approach. Still I'm not really sure how to approach this new error message. Google doesn't turn up much so any advice you could give it would be greatly appreciated.**",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/141
https://github.com/COMBINE-lab/salmon/issues/141:1617,Availability,Error,Error,1617,"**Hi there,**. **So I'm trying to install Salmon-0.8.2 but I'm having a few issues. I should note upfront that I'm working on a cluster and therefore I do not have root privileges.** . **Anyway, when going through the build process I wasn't able to install boost using salmons flags, so I installed it independently. I was then able to make it to the 'make' stage, but the got to this point:**. [ 7%] Built target liblzma; [ 14%] Built target libbz2; [ 21%] Built target libdivsufsort; [ 29%] Built target liberal; [ 37%] Built target libgff; [ 38%] Performing build step for 'libbwa'; utils.c:33:18: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^; compilation terminated.; make[3]: *** [utils.o] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. **I resolved this by making a custom script which told make where to look for zlib:**. export C_INCLUDE_PATH=/users/work/jake/bin/zlib-1.2.11/; export CPLUS_INCLUDE_PATH=/users/work/jake/bin/zlib-1.2.11/; make. **Executing that script allowed me to progress a little but I'm now receiving the following error message:**. [ 7%] Built target liblzma; [ 14%] Built target libbz2; [ 21%] Built target libdivsufsort; [ 29%] Built target libcereal; [ 37%] Built target libgff; [ 38%] Performing build step for 'libbwa'; /bin/ld: cannot find -lz; collect2: error: ld returned 1 exit status; make[3]: *** [bwa] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. **I'm not the best command line user so my 'fixes' might not be the best approach. Still I'm not really sure how to approach this new error message. Google doesn't turn up much so any advice you could give it would be greatly appreciated.**",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/141
https://github.com/COMBINE-lab/salmon/issues/141:1760,Availability,error,error,1760,"**Hi there,**. **So I'm trying to install Salmon-0.8.2 but I'm having a few issues. I should note upfront that I'm working on a cluster and therefore I do not have root privileges.** . **Anyway, when going through the build process I wasn't able to install boost using salmons flags, so I installed it independently. I was then able to make it to the 'make' stage, but the got to this point:**. [ 7%] Built target liblzma; [ 14%] Built target libbz2; [ 21%] Built target libdivsufsort; [ 29%] Built target liberal; [ 37%] Built target libgff; [ 38%] Performing build step for 'libbwa'; utils.c:33:18: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^; compilation terminated.; make[3]: *** [utils.o] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. **I resolved this by making a custom script which told make where to look for zlib:**. export C_INCLUDE_PATH=/users/work/jake/bin/zlib-1.2.11/; export CPLUS_INCLUDE_PATH=/users/work/jake/bin/zlib-1.2.11/; make. **Executing that script allowed me to progress a little but I'm now receiving the following error message:**. [ 7%] Built target liblzma; [ 14%] Built target libbz2; [ 21%] Built target libdivsufsort; [ 29%] Built target libcereal; [ 37%] Built target libgff; [ 38%] Performing build step for 'libbwa'; /bin/ld: cannot find -lz; collect2: error: ld returned 1 exit status; make[3]: *** [bwa] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. **I'm not the best command line user so my 'fixes' might not be the best approach. Still I'm not really sure how to approach this new error message. Google doesn't turn up much so any advice you could give it would be greatly appreciated.**",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/141
https://github.com/COMBINE-lab/salmon/issues/141:34,Deployability,install,install,34,"**Hi there,**. **So I'm trying to install Salmon-0.8.2 but I'm having a few issues. I should note upfront that I'm working on a cluster and therefore I do not have root privileges.** . **Anyway, when going through the build process I wasn't able to install boost using salmons flags, so I installed it independently. I was then able to make it to the 'make' stage, but the got to this point:**. [ 7%] Built target liblzma; [ 14%] Built target libbz2; [ 21%] Built target libdivsufsort; [ 29%] Built target liberal; [ 37%] Built target libgff; [ 38%] Performing build step for 'libbwa'; utils.c:33:18: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^; compilation terminated.; make[3]: *** [utils.o] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. **I resolved this by making a custom script which told make where to look for zlib:**. export C_INCLUDE_PATH=/users/work/jake/bin/zlib-1.2.11/; export CPLUS_INCLUDE_PATH=/users/work/jake/bin/zlib-1.2.11/; make. **Executing that script allowed me to progress a little but I'm now receiving the following error message:**. [ 7%] Built target liblzma; [ 14%] Built target libbz2; [ 21%] Built target libdivsufsort; [ 29%] Built target libcereal; [ 37%] Built target libgff; [ 38%] Performing build step for 'libbwa'; /bin/ld: cannot find -lz; collect2: error: ld returned 1 exit status; make[3]: *** [bwa] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. **I'm not the best command line user so my 'fixes' might not be the best approach. Still I'm not really sure how to approach this new error message. Google doesn't turn up much so any advice you could give it would be greatly appreciated.**",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/141
https://github.com/COMBINE-lab/salmon/issues/141:249,Deployability,install,install,249,"**Hi there,**. **So I'm trying to install Salmon-0.8.2 but I'm having a few issues. I should note upfront that I'm working on a cluster and therefore I do not have root privileges.** . **Anyway, when going through the build process I wasn't able to install boost using salmons flags, so I installed it independently. I was then able to make it to the 'make' stage, but the got to this point:**. [ 7%] Built target liblzma; [ 14%] Built target libbz2; [ 21%] Built target libdivsufsort; [ 29%] Built target liberal; [ 37%] Built target libgff; [ 38%] Performing build step for 'libbwa'; utils.c:33:18: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^; compilation terminated.; make[3]: *** [utils.o] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. **I resolved this by making a custom script which told make where to look for zlib:**. export C_INCLUDE_PATH=/users/work/jake/bin/zlib-1.2.11/; export CPLUS_INCLUDE_PATH=/users/work/jake/bin/zlib-1.2.11/; make. **Executing that script allowed me to progress a little but I'm now receiving the following error message:**. [ 7%] Built target liblzma; [ 14%] Built target libbz2; [ 21%] Built target libdivsufsort; [ 29%] Built target libcereal; [ 37%] Built target libgff; [ 38%] Performing build step for 'libbwa'; /bin/ld: cannot find -lz; collect2: error: ld returned 1 exit status; make[3]: *** [bwa] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. **I'm not the best command line user so my 'fixes' might not be the best approach. Still I'm not really sure how to approach this new error message. Google doesn't turn up much so any advice you could give it would be greatly appreciated.**",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/141
https://github.com/COMBINE-lab/salmon/issues/141:289,Deployability,install,installed,289,"**Hi there,**. **So I'm trying to install Salmon-0.8.2 but I'm having a few issues. I should note upfront that I'm working on a cluster and therefore I do not have root privileges.** . **Anyway, when going through the build process I wasn't able to install boost using salmons flags, so I installed it independently. I was then able to make it to the 'make' stage, but the got to this point:**. [ 7%] Built target liblzma; [ 14%] Built target libbz2; [ 21%] Built target libdivsufsort; [ 29%] Built target liberal; [ 37%] Built target libgff; [ 38%] Performing build step for 'libbwa'; utils.c:33:18: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^; compilation terminated.; make[3]: *** [utils.o] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. **I resolved this by making a custom script which told make where to look for zlib:**. export C_INCLUDE_PATH=/users/work/jake/bin/zlib-1.2.11/; export CPLUS_INCLUDE_PATH=/users/work/jake/bin/zlib-1.2.11/; make. **Executing that script allowed me to progress a little but I'm now receiving the following error message:**. [ 7%] Built target liblzma; [ 14%] Built target libbz2; [ 21%] Built target libdivsufsort; [ 29%] Built target libcereal; [ 37%] Built target libgff; [ 38%] Performing build step for 'libbwa'; /bin/ld: cannot find -lz; collect2: error: ld returned 1 exit status; make[3]: *** [bwa] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. **I'm not the best command line user so my 'fixes' might not be the best approach. Still I'm not really sure how to approach this new error message. Google doesn't turn up much so any advice you could give it would be greatly appreciated.**",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/141
https://github.com/COMBINE-lab/salmon/issues/141:1180,Integrability,message,message,1180,"**Hi there,**. **So I'm trying to install Salmon-0.8.2 but I'm having a few issues. I should note upfront that I'm working on a cluster and therefore I do not have root privileges.** . **Anyway, when going through the build process I wasn't able to install boost using salmons flags, so I installed it independently. I was then able to make it to the 'make' stage, but the got to this point:**. [ 7%] Built target liblzma; [ 14%] Built target libbz2; [ 21%] Built target libdivsufsort; [ 29%] Built target liberal; [ 37%] Built target libgff; [ 38%] Performing build step for 'libbwa'; utils.c:33:18: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^; compilation terminated.; make[3]: *** [utils.o] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. **I resolved this by making a custom script which told make where to look for zlib:**. export C_INCLUDE_PATH=/users/work/jake/bin/zlib-1.2.11/; export CPLUS_INCLUDE_PATH=/users/work/jake/bin/zlib-1.2.11/; make. **Executing that script allowed me to progress a little but I'm now receiving the following error message:**. [ 7%] Built target liblzma; [ 14%] Built target libbz2; [ 21%] Built target libdivsufsort; [ 29%] Built target libcereal; [ 37%] Built target libgff; [ 38%] Performing build step for 'libbwa'; /bin/ld: cannot find -lz; collect2: error: ld returned 1 exit status; make[3]: *** [bwa] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. **I'm not the best command line user so my 'fixes' might not be the best approach. Still I'm not really sure how to approach this new error message. Google doesn't turn up much so any advice you could give it would be greatly appreciated.**",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/141
https://github.com/COMBINE-lab/salmon/issues/141:1766,Integrability,message,message,1766,"**Hi there,**. **So I'm trying to install Salmon-0.8.2 but I'm having a few issues. I should note upfront that I'm working on a cluster and therefore I do not have root privileges.** . **Anyway, when going through the build process I wasn't able to install boost using salmons flags, so I installed it independently. I was then able to make it to the 'make' stage, but the got to this point:**. [ 7%] Built target liblzma; [ 14%] Built target libbz2; [ 21%] Built target libdivsufsort; [ 29%] Built target liberal; [ 37%] Built target libgff; [ 38%] Performing build step for 'libbwa'; utils.c:33:18: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^; compilation terminated.; make[3]: *** [utils.o] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. **I resolved this by making a custom script which told make where to look for zlib:**. export C_INCLUDE_PATH=/users/work/jake/bin/zlib-1.2.11/; export CPLUS_INCLUDE_PATH=/users/work/jake/bin/zlib-1.2.11/; make. **Executing that script allowed me to progress a little but I'm now receiving the following error message:**. [ 7%] Built target liblzma; [ 14%] Built target libbz2; [ 21%] Built target libdivsufsort; [ 29%] Built target libcereal; [ 37%] Built target libgff; [ 38%] Performing build step for 'libbwa'; /bin/ld: cannot find -lz; collect2: error: ld returned 1 exit status; make[3]: *** [bwa] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. **I'm not the best command line user so my 'fixes' might not be the best approach. Still I'm not really sure how to approach this new error message. Google doesn't turn up much so any advice you could give it would be greatly appreciated.**",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/141
https://github.com/COMBINE-lab/salmon/issues/141:550,Performance,Perform,Performing,550,"**Hi there,**. **So I'm trying to install Salmon-0.8.2 but I'm having a few issues. I should note upfront that I'm working on a cluster and therefore I do not have root privileges.** . **Anyway, when going through the build process I wasn't able to install boost using salmons flags, so I installed it independently. I was then able to make it to the 'make' stage, but the got to this point:**. [ 7%] Built target liblzma; [ 14%] Built target libbz2; [ 21%] Built target libdivsufsort; [ 29%] Built target liberal; [ 37%] Built target libgff; [ 38%] Performing build step for 'libbwa'; utils.c:33:18: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^; compilation terminated.; make[3]: *** [utils.o] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. **I resolved this by making a custom script which told make where to look for zlib:**. export C_INCLUDE_PATH=/users/work/jake/bin/zlib-1.2.11/; export CPLUS_INCLUDE_PATH=/users/work/jake/bin/zlib-1.2.11/; make. **Executing that script allowed me to progress a little but I'm now receiving the following error message:**. [ 7%] Built target liblzma; [ 14%] Built target libbz2; [ 21%] Built target libdivsufsort; [ 29%] Built target libcereal; [ 37%] Built target libgff; [ 38%] Performing build step for 'libbwa'; /bin/ld: cannot find -lz; collect2: error: ld returned 1 exit status; make[3]: *** [bwa] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. **I'm not the best command line user so my 'fixes' might not be the best approach. Still I'm not really sure how to approach this new error message. Google doesn't turn up much so any advice you could give it would be greatly appreciated.**",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/141
https://github.com/COMBINE-lab/salmon/issues/141:1349,Performance,Perform,Performing,1349,"**Hi there,**. **So I'm trying to install Salmon-0.8.2 but I'm having a few issues. I should note upfront that I'm working on a cluster and therefore I do not have root privileges.** . **Anyway, when going through the build process I wasn't able to install boost using salmons flags, so I installed it independently. I was then able to make it to the 'make' stage, but the got to this point:**. [ 7%] Built target liblzma; [ 14%] Built target libbz2; [ 21%] Built target libdivsufsort; [ 29%] Built target liberal; [ 37%] Built target libgff; [ 38%] Performing build step for 'libbwa'; utils.c:33:18: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^; compilation terminated.; make[3]: *** [utils.o] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. **I resolved this by making a custom script which told make where to look for zlib:**. export C_INCLUDE_PATH=/users/work/jake/bin/zlib-1.2.11/; export CPLUS_INCLUDE_PATH=/users/work/jake/bin/zlib-1.2.11/; make. **Executing that script allowed me to progress a little but I'm now receiving the following error message:**. [ 7%] Built target liblzma; [ 14%] Built target libbz2; [ 21%] Built target libdivsufsort; [ 29%] Built target libcereal; [ 37%] Built target libgff; [ 38%] Performing build step for 'libbwa'; /bin/ld: cannot find -lz; collect2: error: ld returned 1 exit status; make[3]: *** [bwa] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. **I'm not the best command line user so my 'fixes' might not be the best approach. Still I'm not really sure how to approach this new error message. Google doesn't turn up much so any advice you could give it would be greatly appreciated.**",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/141
https://github.com/COMBINE-lab/salmon/issues/142:167,Availability,error,error,167,"I have updated my homebrew index and installed Salmon on my Macbook (0S X Sierra). However, when I run `salmon` or `salmon -h` on the command line I get the following error message. ```; salmon(41538,0x7fffc4f5a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffc4f50000; ```. `brew doctor` doesn't show any unexpected issues. Any ideas what might be going on?. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/142
https://github.com/COMBINE-lab/salmon/issues/142:7,Deployability,update,updated,7,"I have updated my homebrew index and installed Salmon on my Macbook (0S X Sierra). However, when I run `salmon` or `salmon -h` on the command line I get the following error message. ```; salmon(41538,0x7fffc4f5a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffc4f50000; ```. `brew doctor` doesn't show any unexpected issues. Any ideas what might be going on?. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/142
https://github.com/COMBINE-lab/salmon/issues/142:37,Deployability,install,installed,37,"I have updated my homebrew index and installed Salmon on my Macbook (0S X Sierra). However, when I run `salmon` or `salmon -h` on the command line I get the following error message. ```; salmon(41538,0x7fffc4f5a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffc4f50000; ```. `brew doctor` doesn't show any unexpected issues. Any ideas what might be going on?. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/142
https://github.com/COMBINE-lab/salmon/issues/142:173,Integrability,message,message,173,"I have updated my homebrew index and installed Salmon on my Macbook (0S X Sierra). However, when I run `salmon` or `salmon -h` on the command line I get the following error message. ```; salmon(41538,0x7fffc4f5a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffc4f50000; ```. `brew doctor` doesn't show any unexpected issues. Any ideas what might be going on?. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/142
https://github.com/COMBINE-lab/salmon/issues/143:399,Performance,Load,Loading,399,"Hi, ; the output from the log is shown below. So apparently, everything went well, except for one minor issue... but my gene counts and my transcript count files are empty??; How is that possible; Cheers; Ashok; ```; [2017-07-18 17:14:11.438] [jointLog] [info] parsing read library format; [2017-07-18 17:14:11.438] [jointLog] [info] There is 1 library.; [2017-07-18 17:14:11.485] [jointLog] [info] Loading Quasi index; [2017-07-18 17:14:11.485] [jointLog] [info] Loading 32-bit quasi index; [2017-07-18 17:14:21.207] [jointLog] [info] done; [2017-07-18 17:14:21.207] [jointLog] [info] Index contained 107368 targets; [2017-07-18 17:14:22.320] [jointLog] [info] Automatically detected most likely library type as SF; [2017-07-18 17:22:52.788] [jointLog] [info] Computed 280679 rich equivalence classes for further processing; [2017-07-18 17:22:52.788] [jointLog] [info] Counted 27517563 total reads in the equivalence classes; [2017-07-18 17:22:52.850] [jointLog] [info] Mapping rate = 37.9965%. [2017-07-18 17:22:52.850] [jointLog] [info] finished quantifyLibrary(); [2017-07-18 17:22:52.853] [jointLog] [info] Starting optimizer; [2017-07-18 17:22:52.789] [fileLog] [info]; At end of round 0; ==================; Observed 72421398 total fragments (72421398 in most recent round). [2017-07-18 17:22:52.981] [jointLog] [info] Marked 1 weighted equivalence classes as degenerate; [2017-07-18 17:22:52.990] [jointLog] [info] iteration = 0 | max rel diff. = 9.36177; [2017-07-18 17:22:53.935] [jointLog] [info] iteration = 100 | max rel diff. = 0.0782409; [2017-07-18 17:22:54.889] [jointLog] [info] iteration = 200 | max rel diff. = 0.0347085; [2017-07-18 17:22:55.784] [jointLog] [info] iteration = 300 | max rel diff. = 0.0249461; [2017-07-18 17:22:56.790] [jointLog] [info] iteration = 400 | max rel diff. = 0.0188653; [2017-07-18 17:22:57.752] [jointLog] [info] iteration = 500 | max rel diff. = 0.0157419; [2017-07-18 17:22:58.688] [jointLog] [info] iteration = 600 | max rel diff. = 0.0128394; [20",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/143
https://github.com/COMBINE-lab/salmon/issues/143:464,Performance,Load,Loading,464,"Hi, ; the output from the log is shown below. So apparently, everything went well, except for one minor issue... but my gene counts and my transcript count files are empty??; How is that possible; Cheers; Ashok; ```; [2017-07-18 17:14:11.438] [jointLog] [info] parsing read library format; [2017-07-18 17:14:11.438] [jointLog] [info] There is 1 library.; [2017-07-18 17:14:11.485] [jointLog] [info] Loading Quasi index; [2017-07-18 17:14:11.485] [jointLog] [info] Loading 32-bit quasi index; [2017-07-18 17:14:21.207] [jointLog] [info] done; [2017-07-18 17:14:21.207] [jointLog] [info] Index contained 107368 targets; [2017-07-18 17:14:22.320] [jointLog] [info] Automatically detected most likely library type as SF; [2017-07-18 17:22:52.788] [jointLog] [info] Computed 280679 rich equivalence classes for further processing; [2017-07-18 17:22:52.788] [jointLog] [info] Counted 27517563 total reads in the equivalence classes; [2017-07-18 17:22:52.850] [jointLog] [info] Mapping rate = 37.9965%. [2017-07-18 17:22:52.850] [jointLog] [info] finished quantifyLibrary(); [2017-07-18 17:22:52.853] [jointLog] [info] Starting optimizer; [2017-07-18 17:22:52.789] [fileLog] [info]; At end of round 0; ==================; Observed 72421398 total fragments (72421398 in most recent round). [2017-07-18 17:22:52.981] [jointLog] [info] Marked 1 weighted equivalence classes as degenerate; [2017-07-18 17:22:52.990] [jointLog] [info] iteration = 0 | max rel diff. = 9.36177; [2017-07-18 17:22:53.935] [jointLog] [info] iteration = 100 | max rel diff. = 0.0782409; [2017-07-18 17:22:54.889] [jointLog] [info] iteration = 200 | max rel diff. = 0.0347085; [2017-07-18 17:22:55.784] [jointLog] [info] iteration = 300 | max rel diff. = 0.0249461; [2017-07-18 17:22:56.790] [jointLog] [info] iteration = 400 | max rel diff. = 0.0188653; [2017-07-18 17:22:57.752] [jointLog] [info] iteration = 500 | max rel diff. = 0.0157419; [2017-07-18 17:22:58.688] [jointLog] [info] iteration = 600 | max rel diff. = 0.0128394; [20",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/143
https://github.com/COMBINE-lab/salmon/issues/143:1121,Performance,optimiz,optimizer,1121,ene counts and my transcript count files are empty??; How is that possible; Cheers; Ashok; ```; [2017-07-18 17:14:11.438] [jointLog] [info] parsing read library format; [2017-07-18 17:14:11.438] [jointLog] [info] There is 1 library.; [2017-07-18 17:14:11.485] [jointLog] [info] Loading Quasi index; [2017-07-18 17:14:11.485] [jointLog] [info] Loading 32-bit quasi index; [2017-07-18 17:14:21.207] [jointLog] [info] done; [2017-07-18 17:14:21.207] [jointLog] [info] Index contained 107368 targets; [2017-07-18 17:14:22.320] [jointLog] [info] Automatically detected most likely library type as SF; [2017-07-18 17:22:52.788] [jointLog] [info] Computed 280679 rich equivalence classes for further processing; [2017-07-18 17:22:52.788] [jointLog] [info] Counted 27517563 total reads in the equivalence classes; [2017-07-18 17:22:52.850] [jointLog] [info] Mapping rate = 37.9965%. [2017-07-18 17:22:52.850] [jointLog] [info] finished quantifyLibrary(); [2017-07-18 17:22:52.853] [jointLog] [info] Starting optimizer; [2017-07-18 17:22:52.789] [fileLog] [info]; At end of round 0; ==================; Observed 72421398 total fragments (72421398 in most recent round). [2017-07-18 17:22:52.981] [jointLog] [info] Marked 1 weighted equivalence classes as degenerate; [2017-07-18 17:22:52.990] [jointLog] [info] iteration = 0 | max rel diff. = 9.36177; [2017-07-18 17:22:53.935] [jointLog] [info] iteration = 100 | max rel diff. = 0.0782409; [2017-07-18 17:22:54.889] [jointLog] [info] iteration = 200 | max rel diff. = 0.0347085; [2017-07-18 17:22:55.784] [jointLog] [info] iteration = 300 | max rel diff. = 0.0249461; [2017-07-18 17:22:56.790] [jointLog] [info] iteration = 400 | max rel diff. = 0.0188653; [2017-07-18 17:22:57.752] [jointLog] [info] iteration = 500 | max rel diff. = 0.0157419; [2017-07-18 17:22:58.688] [jointLog] [info] iteration = 600 | max rel diff. = 0.0128394; [2017-07-18 17:22:59.422] [jointLog] [info] iteration = 681 | max rel diff. = 0.00982758; [2017-07-18 17:22:59.432] [jointL,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/143
https://github.com/COMBINE-lab/salmon/issues/143:2141,Performance,optimiz,optimizer,2141,fo] done; [2017-07-18 17:14:21.207] [jointLog] [info] Index contained 107368 targets; [2017-07-18 17:14:22.320] [jointLog] [info] Automatically detected most likely library type as SF; [2017-07-18 17:22:52.788] [jointLog] [info] Computed 280679 rich equivalence classes for further processing; [2017-07-18 17:22:52.788] [jointLog] [info] Counted 27517563 total reads in the equivalence classes; [2017-07-18 17:22:52.850] [jointLog] [info] Mapping rate = 37.9965%. [2017-07-18 17:22:52.850] [jointLog] [info] finished quantifyLibrary(); [2017-07-18 17:22:52.853] [jointLog] [info] Starting optimizer; [2017-07-18 17:22:52.789] [fileLog] [info]; At end of round 0; ==================; Observed 72421398 total fragments (72421398 in most recent round). [2017-07-18 17:22:52.981] [jointLog] [info] Marked 1 weighted equivalence classes as degenerate; [2017-07-18 17:22:52.990] [jointLog] [info] iteration = 0 | max rel diff. = 9.36177; [2017-07-18 17:22:53.935] [jointLog] [info] iteration = 100 | max rel diff. = 0.0782409; [2017-07-18 17:22:54.889] [jointLog] [info] iteration = 200 | max rel diff. = 0.0347085; [2017-07-18 17:22:55.784] [jointLog] [info] iteration = 300 | max rel diff. = 0.0249461; [2017-07-18 17:22:56.790] [jointLog] [info] iteration = 400 | max rel diff. = 0.0188653; [2017-07-18 17:22:57.752] [jointLog] [info] iteration = 500 | max rel diff. = 0.0157419; [2017-07-18 17:22:58.688] [jointLog] [info] iteration = 600 | max rel diff. = 0.0128394; [2017-07-18 17:22:59.422] [jointLog] [info] iteration = 681 | max rel diff. = 0.00982758; [2017-07-18 17:22:59.432] [jointLog] [info] Finished optimizer; [2017-07-18 17:22:59.432] [jointLog] [info] writing output. [2017-07-18 17:22:59.642] [jointLog] [info] Computing gene-level abundance estimates; [2017-07-18 17:23:27.020] [jointLog] [info] There were 128717 transcripts mapping to 51912 genes; [2017-07-18 17:23:27.021] [jointLog] [info] Aggregating expressions to gene level; [2017-07-18 17:23:27.021] [jointLog] [info] done; ```,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/143
https://github.com/COMBINE-lab/salmon/issues/143:676,Safety,detect,detected,676,"Hi, ; the output from the log is shown below. So apparently, everything went well, except for one minor issue... but my gene counts and my transcript count files are empty??; How is that possible; Cheers; Ashok; ```; [2017-07-18 17:14:11.438] [jointLog] [info] parsing read library format; [2017-07-18 17:14:11.438] [jointLog] [info] There is 1 library.; [2017-07-18 17:14:11.485] [jointLog] [info] Loading Quasi index; [2017-07-18 17:14:11.485] [jointLog] [info] Loading 32-bit quasi index; [2017-07-18 17:14:21.207] [jointLog] [info] done; [2017-07-18 17:14:21.207] [jointLog] [info] Index contained 107368 targets; [2017-07-18 17:14:22.320] [jointLog] [info] Automatically detected most likely library type as SF; [2017-07-18 17:22:52.788] [jointLog] [info] Computed 280679 rich equivalence classes for further processing; [2017-07-18 17:22:52.788] [jointLog] [info] Counted 27517563 total reads in the equivalence classes; [2017-07-18 17:22:52.850] [jointLog] [info] Mapping rate = 37.9965%. [2017-07-18 17:22:52.850] [jointLog] [info] finished quantifyLibrary(); [2017-07-18 17:22:52.853] [jointLog] [info] Starting optimizer; [2017-07-18 17:22:52.789] [fileLog] [info]; At end of round 0; ==================; Observed 72421398 total fragments (72421398 in most recent round). [2017-07-18 17:22:52.981] [jointLog] [info] Marked 1 weighted equivalence classes as degenerate; [2017-07-18 17:22:52.990] [jointLog] [info] iteration = 0 | max rel diff. = 9.36177; [2017-07-18 17:22:53.935] [jointLog] [info] iteration = 100 | max rel diff. = 0.0782409; [2017-07-18 17:22:54.889] [jointLog] [info] iteration = 200 | max rel diff. = 0.0347085; [2017-07-18 17:22:55.784] [jointLog] [info] iteration = 300 | max rel diff. = 0.0249461; [2017-07-18 17:22:56.790] [jointLog] [info] iteration = 400 | max rel diff. = 0.0188653; [2017-07-18 17:22:57.752] [jointLog] [info] iteration = 500 | max rel diff. = 0.0157419; [2017-07-18 17:22:58.688] [jointLog] [info] iteration = 600 | max rel diff. = 0.0128394; [20",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/143
https://github.com/COMBINE-lab/salmon/issues/143:26,Testability,log,log,26,"Hi, ; the output from the log is shown below. So apparently, everything went well, except for one minor issue... but my gene counts and my transcript count files are empty??; How is that possible; Cheers; Ashok; ```; [2017-07-18 17:14:11.438] [jointLog] [info] parsing read library format; [2017-07-18 17:14:11.438] [jointLog] [info] There is 1 library.; [2017-07-18 17:14:11.485] [jointLog] [info] Loading Quasi index; [2017-07-18 17:14:11.485] [jointLog] [info] Loading 32-bit quasi index; [2017-07-18 17:14:21.207] [jointLog] [info] done; [2017-07-18 17:14:21.207] [jointLog] [info] Index contained 107368 targets; [2017-07-18 17:14:22.320] [jointLog] [info] Automatically detected most likely library type as SF; [2017-07-18 17:22:52.788] [jointLog] [info] Computed 280679 rich equivalence classes for further processing; [2017-07-18 17:22:52.788] [jointLog] [info] Counted 27517563 total reads in the equivalence classes; [2017-07-18 17:22:52.850] [jointLog] [info] Mapping rate = 37.9965%. [2017-07-18 17:22:52.850] [jointLog] [info] finished quantifyLibrary(); [2017-07-18 17:22:52.853] [jointLog] [info] Starting optimizer; [2017-07-18 17:22:52.789] [fileLog] [info]; At end of round 0; ==================; Observed 72421398 total fragments (72421398 in most recent round). [2017-07-18 17:22:52.981] [jointLog] [info] Marked 1 weighted equivalence classes as degenerate; [2017-07-18 17:22:52.990] [jointLog] [info] iteration = 0 | max rel diff. = 9.36177; [2017-07-18 17:22:53.935] [jointLog] [info] iteration = 100 | max rel diff. = 0.0782409; [2017-07-18 17:22:54.889] [jointLog] [info] iteration = 200 | max rel diff. = 0.0347085; [2017-07-18 17:22:55.784] [jointLog] [info] iteration = 300 | max rel diff. = 0.0249461; [2017-07-18 17:22:56.790] [jointLog] [info] iteration = 400 | max rel diff. = 0.0188653; [2017-07-18 17:22:57.752] [jointLog] [info] iteration = 500 | max rel diff. = 0.0157419; [2017-07-18 17:22:58.688] [jointLog] [info] iteration = 600 | max rel diff. = 0.0128394; [20",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/143
https://github.com/COMBINE-lab/salmon/issues/144:16,Availability,error,error,16,"Hi,; I get this error:. salmon: /drone/src/github.com/COMBINE-lab/salmon/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:378: Eigen::DenseCoeffsBase<Derived, 1>::Scalar& Eigen::DenseCoeffsBase<Derived, 1>::operator[](Eigen::DenseCoeffsBase<Derived, 1>::Index) [with Derived = Eigen::Matrix<double, -1, 1>; Eigen::DenseCoeffsBase<Derived, 1>::Scalar = double; Eigen::DenseCoeffsBase<Derived, 1>::Index = long int]: Assertion `index >= 0 && index < size()' failed.; /home/ngs/scripts/sc-rna/sc-s-salmon-quant.sh: line 40: 10170 Aborted (core dumped) . when I run. ```bash; salmon quant \; -i ""$path_dr_salmonindex_transcriptome_ercc"" \; -o ""$newfilename-salmon-quant"" \; -g ""$path_dr_gtf"" \; -l ""U"" \; -p 1 \; --fldMax 50 \; --fldMean 43 \; --seqBias \; --numBootstraps 10 \; -r <(zcat $1); ```. <details>; <summary>Std out</summary>. ```; Logs will be written to 142-salmon-quant/logs; [2017-08-02 14:41:28.018] [jointLog] [info] parsing read library format; [2017-08-02 14:41:28.018] [jointLog] [info] There is 1 library.; [2017-08-02 14:41:28.190] [jointLog] [info] Loading Quasi index; [2017-08-02 14:41:28.254] [jointLog] [info] Loading 32-bit quasi index; [2017-08-02 14:41:28.286] [stderrLog] [info] Loading Suffix Array; [2017-08-02 14:41:36.196] [stderrLog] [info] Loading Transcript Info; [2017-08-02 14:41:38.296] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-08-02 14:41:38.631] [stderrLog] [info] There were 51378 set bits in the bit array; [2017-08-02 14:41:38.676] [stderrLog] [info] Computing transcript lengths; [2017-08-02 14:41:38.676] [stderrLog] [info] Waiting to finish loading hash; [2017-08-02 14:41:42.951] [stderrLog] [info] Done loading index. [2017-08-02 14:41:42.951] [jointLog] [info] done; [2017-08-02 14:41:42.951] [jointLog] [info] Index contained 51378 targets. [2017-08-02 14:41:46.428] [jointLog] [info] Computed 10524 rich equivalence classes for further processing; [2017-08-02 14:41:46.428] [jointLog] [info] Counted 98301 total reads in the equivalence ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/144
https://github.com/COMBINE-lab/salmon/issues/144:1067,Performance,Load,Loading,1067,"lude/eigen3/Eigen/src/Core/DenseCoeffsBase.h:378: Eigen::DenseCoeffsBase<Derived, 1>::Scalar& Eigen::DenseCoeffsBase<Derived, 1>::operator[](Eigen::DenseCoeffsBase<Derived, 1>::Index) [with Derived = Eigen::Matrix<double, -1, 1>; Eigen::DenseCoeffsBase<Derived, 1>::Scalar = double; Eigen::DenseCoeffsBase<Derived, 1>::Index = long int]: Assertion `index >= 0 && index < size()' failed.; /home/ngs/scripts/sc-rna/sc-s-salmon-quant.sh: line 40: 10170 Aborted (core dumped) . when I run. ```bash; salmon quant \; -i ""$path_dr_salmonindex_transcriptome_ercc"" \; -o ""$newfilename-salmon-quant"" \; -g ""$path_dr_gtf"" \; -l ""U"" \; -p 1 \; --fldMax 50 \; --fldMean 43 \; --seqBias \; --numBootstraps 10 \; -r <(zcat $1); ```. <details>; <summary>Std out</summary>. ```; Logs will be written to 142-salmon-quant/logs; [2017-08-02 14:41:28.018] [jointLog] [info] parsing read library format; [2017-08-02 14:41:28.018] [jointLog] [info] There is 1 library.; [2017-08-02 14:41:28.190] [jointLog] [info] Loading Quasi index; [2017-08-02 14:41:28.254] [jointLog] [info] Loading 32-bit quasi index; [2017-08-02 14:41:28.286] [stderrLog] [info] Loading Suffix Array; [2017-08-02 14:41:36.196] [stderrLog] [info] Loading Transcript Info; [2017-08-02 14:41:38.296] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-08-02 14:41:38.631] [stderrLog] [info] There were 51378 set bits in the bit array; [2017-08-02 14:41:38.676] [stderrLog] [info] Computing transcript lengths; [2017-08-02 14:41:38.676] [stderrLog] [info] Waiting to finish loading hash; [2017-08-02 14:41:42.951] [stderrLog] [info] Done loading index. [2017-08-02 14:41:42.951] [jointLog] [info] done; [2017-08-02 14:41:42.951] [jointLog] [info] Index contained 51378 targets. [2017-08-02 14:41:46.428] [jointLog] [info] Computed 10524 rich equivalence classes for further processing; [2017-08-02 14:41:46.428] [jointLog] [info] Counted 98301 total reads in the equivalence classes; [2017-08-02 14:41:46.432] [jointLog] [warning] Only 98301 fragments",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/144
https://github.com/COMBINE-lab/salmon/issues/144:1132,Performance,Load,Loading,1132,"ase<Derived, 1>::Scalar& Eigen::DenseCoeffsBase<Derived, 1>::operator[](Eigen::DenseCoeffsBase<Derived, 1>::Index) [with Derived = Eigen::Matrix<double, -1, 1>; Eigen::DenseCoeffsBase<Derived, 1>::Scalar = double; Eigen::DenseCoeffsBase<Derived, 1>::Index = long int]: Assertion `index >= 0 && index < size()' failed.; /home/ngs/scripts/sc-rna/sc-s-salmon-quant.sh: line 40: 10170 Aborted (core dumped) . when I run. ```bash; salmon quant \; -i ""$path_dr_salmonindex_transcriptome_ercc"" \; -o ""$newfilename-salmon-quant"" \; -g ""$path_dr_gtf"" \; -l ""U"" \; -p 1 \; --fldMax 50 \; --fldMean 43 \; --seqBias \; --numBootstraps 10 \; -r <(zcat $1); ```. <details>; <summary>Std out</summary>. ```; Logs will be written to 142-salmon-quant/logs; [2017-08-02 14:41:28.018] [jointLog] [info] parsing read library format; [2017-08-02 14:41:28.018] [jointLog] [info] There is 1 library.; [2017-08-02 14:41:28.190] [jointLog] [info] Loading Quasi index; [2017-08-02 14:41:28.254] [jointLog] [info] Loading 32-bit quasi index; [2017-08-02 14:41:28.286] [stderrLog] [info] Loading Suffix Array; [2017-08-02 14:41:36.196] [stderrLog] [info] Loading Transcript Info; [2017-08-02 14:41:38.296] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-08-02 14:41:38.631] [stderrLog] [info] There were 51378 set bits in the bit array; [2017-08-02 14:41:38.676] [stderrLog] [info] Computing transcript lengths; [2017-08-02 14:41:38.676] [stderrLog] [info] Waiting to finish loading hash; [2017-08-02 14:41:42.951] [stderrLog] [info] Done loading index. [2017-08-02 14:41:42.951] [jointLog] [info] done; [2017-08-02 14:41:42.951] [jointLog] [info] Index contained 51378 targets. [2017-08-02 14:41:46.428] [jointLog] [info] Computed 10524 rich equivalence classes for further processing; [2017-08-02 14:41:46.428] [jointLog] [info] Counted 98301 total reads in the equivalence classes; [2017-08-02 14:41:46.432] [jointLog] [warning] Only 98301 fragments were mapped, but the number of burn-in fragments was set to 5000000",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/144
https://github.com/COMBINE-lab/salmon/issues/144:1205,Performance,Load,Loading,1205,"[](Eigen::DenseCoeffsBase<Derived, 1>::Index) [with Derived = Eigen::Matrix<double, -1, 1>; Eigen::DenseCoeffsBase<Derived, 1>::Scalar = double; Eigen::DenseCoeffsBase<Derived, 1>::Index = long int]: Assertion `index >= 0 && index < size()' failed.; /home/ngs/scripts/sc-rna/sc-s-salmon-quant.sh: line 40: 10170 Aborted (core dumped) . when I run. ```bash; salmon quant \; -i ""$path_dr_salmonindex_transcriptome_ercc"" \; -o ""$newfilename-salmon-quant"" \; -g ""$path_dr_gtf"" \; -l ""U"" \; -p 1 \; --fldMax 50 \; --fldMean 43 \; --seqBias \; --numBootstraps 10 \; -r <(zcat $1); ```. <details>; <summary>Std out</summary>. ```; Logs will be written to 142-salmon-quant/logs; [2017-08-02 14:41:28.018] [jointLog] [info] parsing read library format; [2017-08-02 14:41:28.018] [jointLog] [info] There is 1 library.; [2017-08-02 14:41:28.190] [jointLog] [info] Loading Quasi index; [2017-08-02 14:41:28.254] [jointLog] [info] Loading 32-bit quasi index; [2017-08-02 14:41:28.286] [stderrLog] [info] Loading Suffix Array; [2017-08-02 14:41:36.196] [stderrLog] [info] Loading Transcript Info; [2017-08-02 14:41:38.296] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-08-02 14:41:38.631] [stderrLog] [info] There were 51378 set bits in the bit array; [2017-08-02 14:41:38.676] [stderrLog] [info] Computing transcript lengths; [2017-08-02 14:41:38.676] [stderrLog] [info] Waiting to finish loading hash; [2017-08-02 14:41:42.951] [stderrLog] [info] Done loading index. [2017-08-02 14:41:42.951] [jointLog] [info] done; [2017-08-02 14:41:42.951] [jointLog] [info] Index contained 51378 targets. [2017-08-02 14:41:46.428] [jointLog] [info] Computed 10524 rich equivalence classes for further processing; [2017-08-02 14:41:46.428] [jointLog] [info] Counted 98301 total reads in the equivalence classes; [2017-08-02 14:41:46.432] [jointLog] [warning] Only 98301 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mapping",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/144
https://github.com/COMBINE-lab/salmon/issues/144:1272,Performance,Load,Loading,1272,"Matrix<double, -1, 1>; Eigen::DenseCoeffsBase<Derived, 1>::Scalar = double; Eigen::DenseCoeffsBase<Derived, 1>::Index = long int]: Assertion `index >= 0 && index < size()' failed.; /home/ngs/scripts/sc-rna/sc-s-salmon-quant.sh: line 40: 10170 Aborted (core dumped) . when I run. ```bash; salmon quant \; -i ""$path_dr_salmonindex_transcriptome_ercc"" \; -o ""$newfilename-salmon-quant"" \; -g ""$path_dr_gtf"" \; -l ""U"" \; -p 1 \; --fldMax 50 \; --fldMean 43 \; --seqBias \; --numBootstraps 10 \; -r <(zcat $1); ```. <details>; <summary>Std out</summary>. ```; Logs will be written to 142-salmon-quant/logs; [2017-08-02 14:41:28.018] [jointLog] [info] parsing read library format; [2017-08-02 14:41:28.018] [jointLog] [info] There is 1 library.; [2017-08-02 14:41:28.190] [jointLog] [info] Loading Quasi index; [2017-08-02 14:41:28.254] [jointLog] [info] Loading 32-bit quasi index; [2017-08-02 14:41:28.286] [stderrLog] [info] Loading Suffix Array; [2017-08-02 14:41:36.196] [stderrLog] [info] Loading Transcript Info; [2017-08-02 14:41:38.296] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-08-02 14:41:38.631] [stderrLog] [info] There were 51378 set bits in the bit array; [2017-08-02 14:41:38.676] [stderrLog] [info] Computing transcript lengths; [2017-08-02 14:41:38.676] [stderrLog] [info] Waiting to finish loading hash; [2017-08-02 14:41:42.951] [stderrLog] [info] Done loading index. [2017-08-02 14:41:42.951] [jointLog] [info] done; [2017-08-02 14:41:42.951] [jointLog] [info] Index contained 51378 targets. [2017-08-02 14:41:46.428] [jointLog] [info] Computed 10524 rich equivalence classes for further processing; [2017-08-02 14:41:46.428] [jointLog] [info] Counted 98301 total reads in the equivalence classes; [2017-08-02 14:41:46.432] [jointLog] [warning] Only 98301 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-08-02 14:41:46.432] [jointLog] [info] Mapping rate = 42.625",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/144
https://github.com/COMBINE-lab/salmon/issues/144:1342,Performance,Load,Loading,1342,"e; Eigen::DenseCoeffsBase<Derived, 1>::Index = long int]: Assertion `index >= 0 && index < size()' failed.; /home/ngs/scripts/sc-rna/sc-s-salmon-quant.sh: line 40: 10170 Aborted (core dumped) . when I run. ```bash; salmon quant \; -i ""$path_dr_salmonindex_transcriptome_ercc"" \; -o ""$newfilename-salmon-quant"" \; -g ""$path_dr_gtf"" \; -l ""U"" \; -p 1 \; --fldMax 50 \; --fldMean 43 \; --seqBias \; --numBootstraps 10 \; -r <(zcat $1); ```. <details>; <summary>Std out</summary>. ```; Logs will be written to 142-salmon-quant/logs; [2017-08-02 14:41:28.018] [jointLog] [info] parsing read library format; [2017-08-02 14:41:28.018] [jointLog] [info] There is 1 library.; [2017-08-02 14:41:28.190] [jointLog] [info] Loading Quasi index; [2017-08-02 14:41:28.254] [jointLog] [info] Loading 32-bit quasi index; [2017-08-02 14:41:28.286] [stderrLog] [info] Loading Suffix Array; [2017-08-02 14:41:36.196] [stderrLog] [info] Loading Transcript Info; [2017-08-02 14:41:38.296] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-08-02 14:41:38.631] [stderrLog] [info] There were 51378 set bits in the bit array; [2017-08-02 14:41:38.676] [stderrLog] [info] Computing transcript lengths; [2017-08-02 14:41:38.676] [stderrLog] [info] Waiting to finish loading hash; [2017-08-02 14:41:42.951] [stderrLog] [info] Done loading index. [2017-08-02 14:41:42.951] [jointLog] [info] done; [2017-08-02 14:41:42.951] [jointLog] [info] Index contained 51378 targets. [2017-08-02 14:41:46.428] [jointLog] [info] Computed 10524 rich equivalence classes for further processing; [2017-08-02 14:41:46.428] [jointLog] [info] Counted 98301 total reads in the equivalence classes; [2017-08-02 14:41:46.432] [jointLog] [warning] Only 98301 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-08-02 14:41:46.432] [jointLog] [info] Mapping rate = 42.6252%. [2017-08-02 14:41:46.432] [jointLog] [info] finished quantifyLibrary(",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/144
https://github.com/COMBINE-lab/salmon/issues/144:1600,Performance,load,loading,1600,"_dr_salmonindex_transcriptome_ercc"" \; -o ""$newfilename-salmon-quant"" \; -g ""$path_dr_gtf"" \; -l ""U"" \; -p 1 \; --fldMax 50 \; --fldMean 43 \; --seqBias \; --numBootstraps 10 \; -r <(zcat $1); ```. <details>; <summary>Std out</summary>. ```; Logs will be written to 142-salmon-quant/logs; [2017-08-02 14:41:28.018] [jointLog] [info] parsing read library format; [2017-08-02 14:41:28.018] [jointLog] [info] There is 1 library.; [2017-08-02 14:41:28.190] [jointLog] [info] Loading Quasi index; [2017-08-02 14:41:28.254] [jointLog] [info] Loading 32-bit quasi index; [2017-08-02 14:41:28.286] [stderrLog] [info] Loading Suffix Array; [2017-08-02 14:41:36.196] [stderrLog] [info] Loading Transcript Info; [2017-08-02 14:41:38.296] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-08-02 14:41:38.631] [stderrLog] [info] There were 51378 set bits in the bit array; [2017-08-02 14:41:38.676] [stderrLog] [info] Computing transcript lengths; [2017-08-02 14:41:38.676] [stderrLog] [info] Waiting to finish loading hash; [2017-08-02 14:41:42.951] [stderrLog] [info] Done loading index. [2017-08-02 14:41:42.951] [jointLog] [info] done; [2017-08-02 14:41:42.951] [jointLog] [info] Index contained 51378 targets. [2017-08-02 14:41:46.428] [jointLog] [info] Computed 10524 rich equivalence classes for further processing; [2017-08-02 14:41:46.428] [jointLog] [info] Counted 98301 total reads in the equivalence classes; [2017-08-02 14:41:46.432] [jointLog] [warning] Only 98301 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-08-02 14:41:46.432] [jointLog] [info] Mapping rate = 42.6252%. [2017-08-02 14:41:46.432] [jointLog] [info] finished quantifyLibrary(); [2017-08-02 14:41:46.446] [jointLog] [info] Starting optimizer; [2017-08-02 14:41:46.508] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2017-08-02 14:41:46.510] [jointLog] [info] iteration = 0 | max rel diff. = 2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/144
https://github.com/COMBINE-lab/salmon/issues/144:1664,Performance,load,loading,1664,"on-quant"" \; -g ""$path_dr_gtf"" \; -l ""U"" \; -p 1 \; --fldMax 50 \; --fldMean 43 \; --seqBias \; --numBootstraps 10 \; -r <(zcat $1); ```. <details>; <summary>Std out</summary>. ```; Logs will be written to 142-salmon-quant/logs; [2017-08-02 14:41:28.018] [jointLog] [info] parsing read library format; [2017-08-02 14:41:28.018] [jointLog] [info] There is 1 library.; [2017-08-02 14:41:28.190] [jointLog] [info] Loading Quasi index; [2017-08-02 14:41:28.254] [jointLog] [info] Loading 32-bit quasi index; [2017-08-02 14:41:28.286] [stderrLog] [info] Loading Suffix Array; [2017-08-02 14:41:36.196] [stderrLog] [info] Loading Transcript Info; [2017-08-02 14:41:38.296] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-08-02 14:41:38.631] [stderrLog] [info] There were 51378 set bits in the bit array; [2017-08-02 14:41:38.676] [stderrLog] [info] Computing transcript lengths; [2017-08-02 14:41:38.676] [stderrLog] [info] Waiting to finish loading hash; [2017-08-02 14:41:42.951] [stderrLog] [info] Done loading index. [2017-08-02 14:41:42.951] [jointLog] [info] done; [2017-08-02 14:41:42.951] [jointLog] [info] Index contained 51378 targets. [2017-08-02 14:41:46.428] [jointLog] [info] Computed 10524 rich equivalence classes for further processing; [2017-08-02 14:41:46.428] [jointLog] [info] Counted 98301 total reads in the equivalence classes; [2017-08-02 14:41:46.432] [jointLog] [warning] Only 98301 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-08-02 14:41:46.432] [jointLog] [info] Mapping rate = 42.6252%. [2017-08-02 14:41:46.432] [jointLog] [info] finished quantifyLibrary(); [2017-08-02 14:41:46.446] [jointLog] [info] Starting optimizer; [2017-08-02 14:41:46.508] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2017-08-02 14:41:46.510] [jointLog] [info] iteration = 0 | max rel diff. = 2.50175; [2017-08-02 14:41:46.521] [jointLog] [info] iteratio",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/144
https://github.com/COMBINE-lab/salmon/issues/144:2412,Performance,optimiz,optimizer,2412,"info] There were 51378 set bits in the bit array; [2017-08-02 14:41:38.676] [stderrLog] [info] Computing transcript lengths; [2017-08-02 14:41:38.676] [stderrLog] [info] Waiting to finish loading hash; [2017-08-02 14:41:42.951] [stderrLog] [info] Done loading index. [2017-08-02 14:41:42.951] [jointLog] [info] done; [2017-08-02 14:41:42.951] [jointLog] [info] Index contained 51378 targets. [2017-08-02 14:41:46.428] [jointLog] [info] Computed 10524 rich equivalence classes for further processing; [2017-08-02 14:41:46.428] [jointLog] [info] Counted 98301 total reads in the equivalence classes; [2017-08-02 14:41:46.432] [jointLog] [warning] Only 98301 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-08-02 14:41:46.432] [jointLog] [info] Mapping rate = 42.6252%. [2017-08-02 14:41:46.432] [jointLog] [info] finished quantifyLibrary(); [2017-08-02 14:41:46.446] [jointLog] [info] Starting optimizer; [2017-08-02 14:41:46.508] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2017-08-02 14:41:46.510] [jointLog] [info] iteration = 0 | max rel diff. = 2.50175; [2017-08-02 14:41:46.521] [jointLog] [info] iteration 11, adjusting effective lengths to account for biases; salmon: /drone/src/github.com/COMBINE-lab/salmon/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:378: Eigen::DenseCoeffsBase<Derived, 1>::Scalar& Eigen::DenseCoeffsBase<Derived, 1>::operator[](Eigen::DenseCoeffsBase<Derived, 1>::Index) [with Derived = Eigen::Matrix<double, -1, 1>; Eigen::DenseCoeffsBase<Derived, 1>::Scalar = double; Eigen::DenseCoeffsBase<Derived, 1>::Index = long int]: Assertion `index >= 0 && index < size()' failed.; /home/ngs/scripts/sc-rna/sc-s-salmon-quant.sh: line 40: 10170 Aborted (core dumped) /home/ngs/programs/salmon/Salmon-0.8.2_linux_x86_64/bin/salmon quant -i ""$path_dr_salmonindex_transcriptome_ercc"" -o ""$newfilename-salmon-quant"" -g ""$path_dr_gtf"" -l ""U"" -p 1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/144
https://github.com/COMBINE-lab/salmon/issues/144:526,Safety,Abort,Aborted,526,"Hi,; I get this error:. salmon: /drone/src/github.com/COMBINE-lab/salmon/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:378: Eigen::DenseCoeffsBase<Derived, 1>::Scalar& Eigen::DenseCoeffsBase<Derived, 1>::operator[](Eigen::DenseCoeffsBase<Derived, 1>::Index) [with Derived = Eigen::Matrix<double, -1, 1>; Eigen::DenseCoeffsBase<Derived, 1>::Scalar = double; Eigen::DenseCoeffsBase<Derived, 1>::Index = long int]: Assertion `index >= 0 && index < size()' failed.; /home/ngs/scripts/sc-rna/sc-s-salmon-quant.sh: line 40: 10170 Aborted (core dumped) . when I run. ```bash; salmon quant \; -i ""$path_dr_salmonindex_transcriptome_ercc"" \; -o ""$newfilename-salmon-quant"" \; -g ""$path_dr_gtf"" \; -l ""U"" \; -p 1 \; --fldMax 50 \; --fldMean 43 \; --seqBias \; --numBootstraps 10 \; -r <(zcat $1); ```. <details>; <summary>Std out</summary>. ```; Logs will be written to 142-salmon-quant/logs; [2017-08-02 14:41:28.018] [jointLog] [info] parsing read library format; [2017-08-02 14:41:28.018] [jointLog] [info] There is 1 library.; [2017-08-02 14:41:28.190] [jointLog] [info] Loading Quasi index; [2017-08-02 14:41:28.254] [jointLog] [info] Loading 32-bit quasi index; [2017-08-02 14:41:28.286] [stderrLog] [info] Loading Suffix Array; [2017-08-02 14:41:36.196] [stderrLog] [info] Loading Transcript Info; [2017-08-02 14:41:38.296] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-08-02 14:41:38.631] [stderrLog] [info] There were 51378 set bits in the bit array; [2017-08-02 14:41:38.676] [stderrLog] [info] Computing transcript lengths; [2017-08-02 14:41:38.676] [stderrLog] [info] Waiting to finish loading hash; [2017-08-02 14:41:42.951] [stderrLog] [info] Done loading index. [2017-08-02 14:41:42.951] [jointLog] [info] done; [2017-08-02 14:41:42.951] [jointLog] [info] Index contained 51378 targets. [2017-08-02 14:41:46.428] [jointLog] [info] Computed 10524 rich equivalence classes for further processing; [2017-08-02 14:41:46.428] [jointLog] [info] Counted 98301 total reads in the equivalence ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/144
https://github.com/COMBINE-lab/salmon/issues/144:3216,Safety,Abort,Aborted,3216,"g] [info] Computing transcript lengths; [2017-08-02 14:41:38.676] [stderrLog] [info] Waiting to finish loading hash; [2017-08-02 14:41:42.951] [stderrLog] [info] Done loading index. [2017-08-02 14:41:42.951] [jointLog] [info] done; [2017-08-02 14:41:42.951] [jointLog] [info] Index contained 51378 targets. [2017-08-02 14:41:46.428] [jointLog] [info] Computed 10524 rich equivalence classes for further processing; [2017-08-02 14:41:46.428] [jointLog] [info] Counted 98301 total reads in the equivalence classes; [2017-08-02 14:41:46.432] [jointLog] [warning] Only 98301 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-08-02 14:41:46.432] [jointLog] [info] Mapping rate = 42.6252%. [2017-08-02 14:41:46.432] [jointLog] [info] finished quantifyLibrary(); [2017-08-02 14:41:46.446] [jointLog] [info] Starting optimizer; [2017-08-02 14:41:46.508] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2017-08-02 14:41:46.510] [jointLog] [info] iteration = 0 | max rel diff. = 2.50175; [2017-08-02 14:41:46.521] [jointLog] [info] iteration 11, adjusting effective lengths to account for biases; salmon: /drone/src/github.com/COMBINE-lab/salmon/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:378: Eigen::DenseCoeffsBase<Derived, 1>::Scalar& Eigen::DenseCoeffsBase<Derived, 1>::operator[](Eigen::DenseCoeffsBase<Derived, 1>::Index) [with Derived = Eigen::Matrix<double, -1, 1>; Eigen::DenseCoeffsBase<Derived, 1>::Scalar = double; Eigen::DenseCoeffsBase<Derived, 1>::Index = long int]: Assertion `index >= 0 && index < size()' failed.; /home/ngs/scripts/sc-rna/sc-s-salmon-quant.sh: line 40: 10170 Aborted (core dumped) /home/ngs/programs/salmon/Salmon-0.8.2_linux_x86_64/bin/salmon quant -i ""$path_dr_salmonindex_transcriptome_ercc"" -o ""$newfilename-salmon-quant"" -g ""$path_dr_gtf"" -l ""U"" -p 1 --fldMax 50 --fldMean 43 --seqBias --numBootstraps 10 -r <(zcat $1). ```; </details>",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/144
https://github.com/COMBINE-lab/salmon/issues/144:1608,Security,hash,hash,1608,"_dr_salmonindex_transcriptome_ercc"" \; -o ""$newfilename-salmon-quant"" \; -g ""$path_dr_gtf"" \; -l ""U"" \; -p 1 \; --fldMax 50 \; --fldMean 43 \; --seqBias \; --numBootstraps 10 \; -r <(zcat $1); ```. <details>; <summary>Std out</summary>. ```; Logs will be written to 142-salmon-quant/logs; [2017-08-02 14:41:28.018] [jointLog] [info] parsing read library format; [2017-08-02 14:41:28.018] [jointLog] [info] There is 1 library.; [2017-08-02 14:41:28.190] [jointLog] [info] Loading Quasi index; [2017-08-02 14:41:28.254] [jointLog] [info] Loading 32-bit quasi index; [2017-08-02 14:41:28.286] [stderrLog] [info] Loading Suffix Array; [2017-08-02 14:41:36.196] [stderrLog] [info] Loading Transcript Info; [2017-08-02 14:41:38.296] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-08-02 14:41:38.631] [stderrLog] [info] There were 51378 set bits in the bit array; [2017-08-02 14:41:38.676] [stderrLog] [info] Computing transcript lengths; [2017-08-02 14:41:38.676] [stderrLog] [info] Waiting to finish loading hash; [2017-08-02 14:41:42.951] [stderrLog] [info] Done loading index. [2017-08-02 14:41:42.951] [jointLog] [info] done; [2017-08-02 14:41:42.951] [jointLog] [info] Index contained 51378 targets. [2017-08-02 14:41:46.428] [jointLog] [info] Computed 10524 rich equivalence classes for further processing; [2017-08-02 14:41:46.428] [jointLog] [info] Counted 98301 total reads in the equivalence classes; [2017-08-02 14:41:46.432] [jointLog] [warning] Only 98301 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-08-02 14:41:46.432] [jointLog] [info] Mapping rate = 42.6252%. [2017-08-02 14:41:46.432] [jointLog] [info] finished quantifyLibrary(); [2017-08-02 14:41:46.446] [jointLog] [info] Starting optimizer; [2017-08-02 14:41:46.508] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2017-08-02 14:41:46.510] [jointLog] [info] iteration = 0 | max rel diff. = 2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/144
https://github.com/COMBINE-lab/salmon/issues/144:414,Testability,Assert,Assertion,414,"Hi,; I get this error:. salmon: /drone/src/github.com/COMBINE-lab/salmon/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:378: Eigen::DenseCoeffsBase<Derived, 1>::Scalar& Eigen::DenseCoeffsBase<Derived, 1>::operator[](Eigen::DenseCoeffsBase<Derived, 1>::Index) [with Derived = Eigen::Matrix<double, -1, 1>; Eigen::DenseCoeffsBase<Derived, 1>::Scalar = double; Eigen::DenseCoeffsBase<Derived, 1>::Index = long int]: Assertion `index >= 0 && index < size()' failed.; /home/ngs/scripts/sc-rna/sc-s-salmon-quant.sh: line 40: 10170 Aborted (core dumped) . when I run. ```bash; salmon quant \; -i ""$path_dr_salmonindex_transcriptome_ercc"" \; -o ""$newfilename-salmon-quant"" \; -g ""$path_dr_gtf"" \; -l ""U"" \; -p 1 \; --fldMax 50 \; --fldMean 43 \; --seqBias \; --numBootstraps 10 \; -r <(zcat $1); ```. <details>; <summary>Std out</summary>. ```; Logs will be written to 142-salmon-quant/logs; [2017-08-02 14:41:28.018] [jointLog] [info] parsing read library format; [2017-08-02 14:41:28.018] [jointLog] [info] There is 1 library.; [2017-08-02 14:41:28.190] [jointLog] [info] Loading Quasi index; [2017-08-02 14:41:28.254] [jointLog] [info] Loading 32-bit quasi index; [2017-08-02 14:41:28.286] [stderrLog] [info] Loading Suffix Array; [2017-08-02 14:41:36.196] [stderrLog] [info] Loading Transcript Info; [2017-08-02 14:41:38.296] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-08-02 14:41:38.631] [stderrLog] [info] There were 51378 set bits in the bit array; [2017-08-02 14:41:38.676] [stderrLog] [info] Computing transcript lengths; [2017-08-02 14:41:38.676] [stderrLog] [info] Waiting to finish loading hash; [2017-08-02 14:41:42.951] [stderrLog] [info] Done loading index. [2017-08-02 14:41:42.951] [jointLog] [info] done; [2017-08-02 14:41:42.951] [jointLog] [info] Index contained 51378 targets. [2017-08-02 14:41:46.428] [jointLog] [info] Computed 10524 rich equivalence classes for further processing; [2017-08-02 14:41:46.428] [jointLog] [info] Counted 98301 total reads in the equivalence ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/144
https://github.com/COMBINE-lab/salmon/issues/144:838,Testability,Log,Logs,838,"Hi,; I get this error:. salmon: /drone/src/github.com/COMBINE-lab/salmon/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:378: Eigen::DenseCoeffsBase<Derived, 1>::Scalar& Eigen::DenseCoeffsBase<Derived, 1>::operator[](Eigen::DenseCoeffsBase<Derived, 1>::Index) [with Derived = Eigen::Matrix<double, -1, 1>; Eigen::DenseCoeffsBase<Derived, 1>::Scalar = double; Eigen::DenseCoeffsBase<Derived, 1>::Index = long int]: Assertion `index >= 0 && index < size()' failed.; /home/ngs/scripts/sc-rna/sc-s-salmon-quant.sh: line 40: 10170 Aborted (core dumped) . when I run. ```bash; salmon quant \; -i ""$path_dr_salmonindex_transcriptome_ercc"" \; -o ""$newfilename-salmon-quant"" \; -g ""$path_dr_gtf"" \; -l ""U"" \; -p 1 \; --fldMax 50 \; --fldMean 43 \; --seqBias \; --numBootstraps 10 \; -r <(zcat $1); ```. <details>; <summary>Std out</summary>. ```; Logs will be written to 142-salmon-quant/logs; [2017-08-02 14:41:28.018] [jointLog] [info] parsing read library format; [2017-08-02 14:41:28.018] [jointLog] [info] There is 1 library.; [2017-08-02 14:41:28.190] [jointLog] [info] Loading Quasi index; [2017-08-02 14:41:28.254] [jointLog] [info] Loading 32-bit quasi index; [2017-08-02 14:41:28.286] [stderrLog] [info] Loading Suffix Array; [2017-08-02 14:41:36.196] [stderrLog] [info] Loading Transcript Info; [2017-08-02 14:41:38.296] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-08-02 14:41:38.631] [stderrLog] [info] There were 51378 set bits in the bit array; [2017-08-02 14:41:38.676] [stderrLog] [info] Computing transcript lengths; [2017-08-02 14:41:38.676] [stderrLog] [info] Waiting to finish loading hash; [2017-08-02 14:41:42.951] [stderrLog] [info] Done loading index. [2017-08-02 14:41:42.951] [jointLog] [info] done; [2017-08-02 14:41:42.951] [jointLog] [info] Index contained 51378 targets. [2017-08-02 14:41:46.428] [jointLog] [info] Computed 10524 rich equivalence classes for further processing; [2017-08-02 14:41:46.428] [jointLog] [info] Counted 98301 total reads in the equivalence ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/144
https://github.com/COMBINE-lab/salmon/issues/144:879,Testability,log,logs,879,"Hi,; I get this error:. salmon: /drone/src/github.com/COMBINE-lab/salmon/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:378: Eigen::DenseCoeffsBase<Derived, 1>::Scalar& Eigen::DenseCoeffsBase<Derived, 1>::operator[](Eigen::DenseCoeffsBase<Derived, 1>::Index) [with Derived = Eigen::Matrix<double, -1, 1>; Eigen::DenseCoeffsBase<Derived, 1>::Scalar = double; Eigen::DenseCoeffsBase<Derived, 1>::Index = long int]: Assertion `index >= 0 && index < size()' failed.; /home/ngs/scripts/sc-rna/sc-s-salmon-quant.sh: line 40: 10170 Aborted (core dumped) . when I run. ```bash; salmon quant \; -i ""$path_dr_salmonindex_transcriptome_ercc"" \; -o ""$newfilename-salmon-quant"" \; -g ""$path_dr_gtf"" \; -l ""U"" \; -p 1 \; --fldMax 50 \; --fldMean 43 \; --seqBias \; --numBootstraps 10 \; -r <(zcat $1); ```. <details>; <summary>Std out</summary>. ```; Logs will be written to 142-salmon-quant/logs; [2017-08-02 14:41:28.018] [jointLog] [info] parsing read library format; [2017-08-02 14:41:28.018] [jointLog] [info] There is 1 library.; [2017-08-02 14:41:28.190] [jointLog] [info] Loading Quasi index; [2017-08-02 14:41:28.254] [jointLog] [info] Loading 32-bit quasi index; [2017-08-02 14:41:28.286] [stderrLog] [info] Loading Suffix Array; [2017-08-02 14:41:36.196] [stderrLog] [info] Loading Transcript Info; [2017-08-02 14:41:38.296] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-08-02 14:41:38.631] [stderrLog] [info] There were 51378 set bits in the bit array; [2017-08-02 14:41:38.676] [stderrLog] [info] Computing transcript lengths; [2017-08-02 14:41:38.676] [stderrLog] [info] Waiting to finish loading hash; [2017-08-02 14:41:42.951] [stderrLog] [info] Done loading index. [2017-08-02 14:41:42.951] [jointLog] [info] done; [2017-08-02 14:41:42.951] [jointLog] [info] Index contained 51378 targets. [2017-08-02 14:41:46.428] [jointLog] [info] Computed 10524 rich equivalence classes for further processing; [2017-08-02 14:41:46.428] [jointLog] [info] Counted 98301 total reads in the equivalence ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/144
https://github.com/COMBINE-lab/salmon/issues/144:3104,Testability,Assert,Assertion,3104,"g] [info] Computing transcript lengths; [2017-08-02 14:41:38.676] [stderrLog] [info] Waiting to finish loading hash; [2017-08-02 14:41:42.951] [stderrLog] [info] Done loading index. [2017-08-02 14:41:42.951] [jointLog] [info] done; [2017-08-02 14:41:42.951] [jointLog] [info] Index contained 51378 targets. [2017-08-02 14:41:46.428] [jointLog] [info] Computed 10524 rich equivalence classes for further processing; [2017-08-02 14:41:46.428] [jointLog] [info] Counted 98301 total reads in the equivalence classes; [2017-08-02 14:41:46.432] [jointLog] [warning] Only 98301 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-08-02 14:41:46.432] [jointLog] [info] Mapping rate = 42.6252%. [2017-08-02 14:41:46.432] [jointLog] [info] finished quantifyLibrary(); [2017-08-02 14:41:46.446] [jointLog] [info] Starting optimizer; [2017-08-02 14:41:46.508] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2017-08-02 14:41:46.510] [jointLog] [info] iteration = 0 | max rel diff. = 2.50175; [2017-08-02 14:41:46.521] [jointLog] [info] iteration 11, adjusting effective lengths to account for biases; salmon: /drone/src/github.com/COMBINE-lab/salmon/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:378: Eigen::DenseCoeffsBase<Derived, 1>::Scalar& Eigen::DenseCoeffsBase<Derived, 1>::operator[](Eigen::DenseCoeffsBase<Derived, 1>::Index) [with Derived = Eigen::Matrix<double, -1, 1>; Eigen::DenseCoeffsBase<Derived, 1>::Scalar = double; Eigen::DenseCoeffsBase<Derived, 1>::Index = long int]: Assertion `index >= 0 && index < size()' failed.; /home/ngs/scripts/sc-rna/sc-s-salmon-quant.sh: line 40: 10170 Aborted (core dumped) /home/ngs/programs/salmon/Salmon-0.8.2_linux_x86_64/bin/salmon quant -i ""$path_dr_salmonindex_transcriptome_ercc"" -o ""$newfilename-salmon-quant"" -g ""$path_dr_gtf"" -l ""U"" -p 1 --fldMax 50 --fldMean 43 --seqBias --numBootstraps 10 -r <(zcat $1). ```; </details>",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/144
https://github.com/COMBINE-lab/salmon/issues/145:155,Availability,error,error,155,"Hi,. I have the problem that salmon quant exits with a segfault when more than one BAM file is provided. ; If the BAM files are provided one at a time, no error or segfault happens and salmon wickedly fast quantificates the transcripts. The first used BAM files where shuffled (with samtools bamshuf) as recommended in the docs. To exclude an error on my side I did:; - try unshuffled BAM files --> Segfault; - try older Salmon Version (7.2) --> Segfault; - build Salmon from source --> Segfault; - use different transcriptdata (see below) --> Segfault. The segfault happens after all reads (in all files) are processed:; `processed 48000000 reads in current roundSegmentation fault`. ### Example workflow:. Get the read data from [here](https://trace.ncbi.nlm.nih.gov/Traces/sra/sra.cgi?run=ERR1433122) for example with SRA Toolkit:; `vdb-dump -f fastq --gzip --output-file test.fastq.gz ERR1433122`. Then use STAR:. First build a genome index for the reference transcriptset from [here](https://ics.hutton.ac.uk/atRTD/) and the [TAIR10 genome](https://www.arabidopsis.org/download/index-auto.jsp?dir=%2Fdownload_files%2FGenes%2FTAIR10_genome_release%2FTAIR10_chromosome_files); You probably have to rename the chromosomes either in the .gtf or .fas file, to have consistent names. `STAR --runThreadN 4 --runMode genomeGenerate --genomeDir genome_index/ --genomeFastaFiles TAIR10_chr_all_edited.fas --sjdbGTFfile AtRTD2_19April2016.gtf --sjdbOverhang 100`. Then map:. `STAR --runThreadN 4 --genomeDir genome_index --readFilesCommand zcat --readFilesIn test.fastq.gz --sjdbOverhang 100 --sjdbGTFfile AtRTD2_19April2016.gtf --outFileNamePrefix mapping/ --quantMode TranscriptomeSAM`. and make a .fa file from the genome and the .gtf with:; `gffread -w gff_merged.fa -g TAIR10_chr_all_edited.fas AtRTD2_19April2016.gtf`. Now make a copy of the ""Aligned.toTranscriptome.out.bam"" (for the sake of simplicity) and try; `salmon quant -l A -a Aligned.toTranscriptome.out.bam Aligned.toTranscriptome.out_copy.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/145
https://github.com/COMBINE-lab/salmon/issues/145:343,Availability,error,error,343,"Hi,. I have the problem that salmon quant exits with a segfault when more than one BAM file is provided. ; If the BAM files are provided one at a time, no error or segfault happens and salmon wickedly fast quantificates the transcripts. The first used BAM files where shuffled (with samtools bamshuf) as recommended in the docs. To exclude an error on my side I did:; - try unshuffled BAM files --> Segfault; - try older Salmon Version (7.2) --> Segfault; - build Salmon from source --> Segfault; - use different transcriptdata (see below) --> Segfault. The segfault happens after all reads (in all files) are processed:; `processed 48000000 reads in current roundSegmentation fault`. ### Example workflow:. Get the read data from [here](https://trace.ncbi.nlm.nih.gov/Traces/sra/sra.cgi?run=ERR1433122) for example with SRA Toolkit:; `vdb-dump -f fastq --gzip --output-file test.fastq.gz ERR1433122`. Then use STAR:. First build a genome index for the reference transcriptset from [here](https://ics.hutton.ac.uk/atRTD/) and the [TAIR10 genome](https://www.arabidopsis.org/download/index-auto.jsp?dir=%2Fdownload_files%2FGenes%2FTAIR10_genome_release%2FTAIR10_chromosome_files); You probably have to rename the chromosomes either in the .gtf or .fas file, to have consistent names. `STAR --runThreadN 4 --runMode genomeGenerate --genomeDir genome_index/ --genomeFastaFiles TAIR10_chr_all_edited.fas --sjdbGTFfile AtRTD2_19April2016.gtf --sjdbOverhang 100`. Then map:. `STAR --runThreadN 4 --genomeDir genome_index --readFilesCommand zcat --readFilesIn test.fastq.gz --sjdbOverhang 100 --sjdbGTFfile AtRTD2_19April2016.gtf --outFileNamePrefix mapping/ --quantMode TranscriptomeSAM`. and make a .fa file from the genome and the .gtf with:; `gffread -w gff_merged.fa -g TAIR10_chr_all_edited.fas AtRTD2_19April2016.gtf`. Now make a copy of the ""Aligned.toTranscriptome.out.bam"" (for the sake of simplicity) and try; `salmon quant -l A -a Aligned.toTranscriptome.out.bam Aligned.toTranscriptome.out_copy.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/145
https://github.com/COMBINE-lab/salmon/issues/145:677,Availability,fault,fault,677,"Hi,. I have the problem that salmon quant exits with a segfault when more than one BAM file is provided. ; If the BAM files are provided one at a time, no error or segfault happens and salmon wickedly fast quantificates the transcripts. The first used BAM files where shuffled (with samtools bamshuf) as recommended in the docs. To exclude an error on my side I did:; - try unshuffled BAM files --> Segfault; - try older Salmon Version (7.2) --> Segfault; - build Salmon from source --> Segfault; - use different transcriptdata (see below) --> Segfault. The segfault happens after all reads (in all files) are processed:; `processed 48000000 reads in current roundSegmentation fault`. ### Example workflow:. Get the read data from [here](https://trace.ncbi.nlm.nih.gov/Traces/sra/sra.cgi?run=ERR1433122) for example with SRA Toolkit:; `vdb-dump -f fastq --gzip --output-file test.fastq.gz ERR1433122`. Then use STAR:. First build a genome index for the reference transcriptset from [here](https://ics.hutton.ac.uk/atRTD/) and the [TAIR10 genome](https://www.arabidopsis.org/download/index-auto.jsp?dir=%2Fdownload_files%2FGenes%2FTAIR10_genome_release%2FTAIR10_chromosome_files); You probably have to rename the chromosomes either in the .gtf or .fas file, to have consistent names. `STAR --runThreadN 4 --runMode genomeGenerate --genomeDir genome_index/ --genomeFastaFiles TAIR10_chr_all_edited.fas --sjdbGTFfile AtRTD2_19April2016.gtf --sjdbOverhang 100`. Then map:. `STAR --runThreadN 4 --genomeDir genome_index --readFilesCommand zcat --readFilesIn test.fastq.gz --sjdbOverhang 100 --sjdbGTFfile AtRTD2_19April2016.gtf --outFileNamePrefix mapping/ --quantMode TranscriptomeSAM`. and make a .fa file from the genome and the .gtf with:; `gffread -w gff_merged.fa -g TAIR10_chr_all_edited.fas AtRTD2_19April2016.gtf`. Now make a copy of the ""Aligned.toTranscriptome.out.bam"" (for the sake of simplicity) and try; `salmon quant -l A -a Aligned.toTranscriptome.out.bam Aligned.toTranscriptome.out_copy.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/145
https://github.com/COMBINE-lab/salmon/issues/145:1074,Availability,down,download,1074," BAM file is provided. ; If the BAM files are provided one at a time, no error or segfault happens and salmon wickedly fast quantificates the transcripts. The first used BAM files where shuffled (with samtools bamshuf) as recommended in the docs. To exclude an error on my side I did:; - try unshuffled BAM files --> Segfault; - try older Salmon Version (7.2) --> Segfault; - build Salmon from source --> Segfault; - use different transcriptdata (see below) --> Segfault. The segfault happens after all reads (in all files) are processed:; `processed 48000000 reads in current roundSegmentation fault`. ### Example workflow:. Get the read data from [here](https://trace.ncbi.nlm.nih.gov/Traces/sra/sra.cgi?run=ERR1433122) for example with SRA Toolkit:; `vdb-dump -f fastq --gzip --output-file test.fastq.gz ERR1433122`. Then use STAR:. First build a genome index for the reference transcriptset from [here](https://ics.hutton.ac.uk/atRTD/) and the [TAIR10 genome](https://www.arabidopsis.org/download/index-auto.jsp?dir=%2Fdownload_files%2FGenes%2FTAIR10_genome_release%2FTAIR10_chromosome_files); You probably have to rename the chromosomes either in the .gtf or .fas file, to have consistent names. `STAR --runThreadN 4 --runMode genomeGenerate --genomeDir genome_index/ --genomeFastaFiles TAIR10_chr_all_edited.fas --sjdbGTFfile AtRTD2_19April2016.gtf --sjdbOverhang 100`. Then map:. `STAR --runThreadN 4 --genomeDir genome_index --readFilesCommand zcat --readFilesIn test.fastq.gz --sjdbOverhang 100 --sjdbGTFfile AtRTD2_19April2016.gtf --outFileNamePrefix mapping/ --quantMode TranscriptomeSAM`. and make a .fa file from the genome and the .gtf with:; `gffread -w gff_merged.fa -g TAIR10_chr_all_edited.fas AtRTD2_19April2016.gtf`. Now make a copy of the ""Aligned.toTranscriptome.out.bam"" (for the sake of simplicity) and try; `salmon quant -l A -a Aligned.toTranscriptome.out.bam Aligned.toTranscriptome.out_copy.bam -t gff_merged.fa -o ./out/`. Then the above mentioned segfault happens. The o",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/145
https://github.com/COMBINE-lab/salmon/issues/145:875,Testability,test,test,875,"Hi,. I have the problem that salmon quant exits with a segfault when more than one BAM file is provided. ; If the BAM files are provided one at a time, no error or segfault happens and salmon wickedly fast quantificates the transcripts. The first used BAM files where shuffled (with samtools bamshuf) as recommended in the docs. To exclude an error on my side I did:; - try unshuffled BAM files --> Segfault; - try older Salmon Version (7.2) --> Segfault; - build Salmon from source --> Segfault; - use different transcriptdata (see below) --> Segfault. The segfault happens after all reads (in all files) are processed:; `processed 48000000 reads in current roundSegmentation fault`. ### Example workflow:. Get the read data from [here](https://trace.ncbi.nlm.nih.gov/Traces/sra/sra.cgi?run=ERR1433122) for example with SRA Toolkit:; `vdb-dump -f fastq --gzip --output-file test.fastq.gz ERR1433122`. Then use STAR:. First build a genome index for the reference transcriptset from [here](https://ics.hutton.ac.uk/atRTD/) and the [TAIR10 genome](https://www.arabidopsis.org/download/index-auto.jsp?dir=%2Fdownload_files%2FGenes%2FTAIR10_genome_release%2FTAIR10_chromosome_files); You probably have to rename the chromosomes either in the .gtf or .fas file, to have consistent names. `STAR --runThreadN 4 --runMode genomeGenerate --genomeDir genome_index/ --genomeFastaFiles TAIR10_chr_all_edited.fas --sjdbGTFfile AtRTD2_19April2016.gtf --sjdbOverhang 100`. Then map:. `STAR --runThreadN 4 --genomeDir genome_index --readFilesCommand zcat --readFilesIn test.fastq.gz --sjdbOverhang 100 --sjdbGTFfile AtRTD2_19April2016.gtf --outFileNamePrefix mapping/ --quantMode TranscriptomeSAM`. and make a .fa file from the genome and the .gtf with:; `gffread -w gff_merged.fa -g TAIR10_chr_all_edited.fas AtRTD2_19April2016.gtf`. Now make a copy of the ""Aligned.toTranscriptome.out.bam"" (for the sake of simplicity) and try; `salmon quant -l A -a Aligned.toTranscriptome.out.bam Aligned.toTranscriptome.out_copy.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/145
https://github.com/COMBINE-lab/salmon/issues/145:1553,Testability,test,test,1553,"he transcripts. The first used BAM files where shuffled (with samtools bamshuf) as recommended in the docs. To exclude an error on my side I did:; - try unshuffled BAM files --> Segfault; - try older Salmon Version (7.2) --> Segfault; - build Salmon from source --> Segfault; - use different transcriptdata (see below) --> Segfault. The segfault happens after all reads (in all files) are processed:; `processed 48000000 reads in current roundSegmentation fault`. ### Example workflow:. Get the read data from [here](https://trace.ncbi.nlm.nih.gov/Traces/sra/sra.cgi?run=ERR1433122) for example with SRA Toolkit:; `vdb-dump -f fastq --gzip --output-file test.fastq.gz ERR1433122`. Then use STAR:. First build a genome index for the reference transcriptset from [here](https://ics.hutton.ac.uk/atRTD/) and the [TAIR10 genome](https://www.arabidopsis.org/download/index-auto.jsp?dir=%2Fdownload_files%2FGenes%2FTAIR10_genome_release%2FTAIR10_chromosome_files); You probably have to rename the chromosomes either in the .gtf or .fas file, to have consistent names. `STAR --runThreadN 4 --runMode genomeGenerate --genomeDir genome_index/ --genomeFastaFiles TAIR10_chr_all_edited.fas --sjdbGTFfile AtRTD2_19April2016.gtf --sjdbOverhang 100`. Then map:. `STAR --runThreadN 4 --genomeDir genome_index --readFilesCommand zcat --readFilesIn test.fastq.gz --sjdbOverhang 100 --sjdbGTFfile AtRTD2_19April2016.gtf --outFileNamePrefix mapping/ --quantMode TranscriptomeSAM`. and make a .fa file from the genome and the .gtf with:; `gffread -w gff_merged.fa -g TAIR10_chr_all_edited.fas AtRTD2_19April2016.gtf`. Now make a copy of the ""Aligned.toTranscriptome.out.bam"" (for the sake of simplicity) and try; `salmon quant -l A -a Aligned.toTranscriptome.out.bam Aligned.toTranscriptome.out_copy.bam -t gff_merged.fa -o ./out/`. Then the above mentioned segfault happens. The only workaround I found is to merge the BAM files of the replicates with ""samtools merge"". Any idea why the segfault appears?. Cheers,; Tobi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/145
https://github.com/COMBINE-lab/salmon/issues/145:1893,Usability,simpl,simplicity,1893,"he transcripts. The first used BAM files where shuffled (with samtools bamshuf) as recommended in the docs. To exclude an error on my side I did:; - try unshuffled BAM files --> Segfault; - try older Salmon Version (7.2) --> Segfault; - build Salmon from source --> Segfault; - use different transcriptdata (see below) --> Segfault. The segfault happens after all reads (in all files) are processed:; `processed 48000000 reads in current roundSegmentation fault`. ### Example workflow:. Get the read data from [here](https://trace.ncbi.nlm.nih.gov/Traces/sra/sra.cgi?run=ERR1433122) for example with SRA Toolkit:; `vdb-dump -f fastq --gzip --output-file test.fastq.gz ERR1433122`. Then use STAR:. First build a genome index for the reference transcriptset from [here](https://ics.hutton.ac.uk/atRTD/) and the [TAIR10 genome](https://www.arabidopsis.org/download/index-auto.jsp?dir=%2Fdownload_files%2FGenes%2FTAIR10_genome_release%2FTAIR10_chromosome_files); You probably have to rename the chromosomes either in the .gtf or .fas file, to have consistent names. `STAR --runThreadN 4 --runMode genomeGenerate --genomeDir genome_index/ --genomeFastaFiles TAIR10_chr_all_edited.fas --sjdbGTFfile AtRTD2_19April2016.gtf --sjdbOverhang 100`. Then map:. `STAR --runThreadN 4 --genomeDir genome_index --readFilesCommand zcat --readFilesIn test.fastq.gz --sjdbOverhang 100 --sjdbGTFfile AtRTD2_19April2016.gtf --outFileNamePrefix mapping/ --quantMode TranscriptomeSAM`. and make a .fa file from the genome and the .gtf with:; `gffread -w gff_merged.fa -g TAIR10_chr_all_edited.fas AtRTD2_19April2016.gtf`. Now make a copy of the ""Aligned.toTranscriptome.out.bam"" (for the sake of simplicity) and try; `salmon quant -l A -a Aligned.toTranscriptome.out.bam Aligned.toTranscriptome.out_copy.bam -t gff_merged.fa -o ./out/`. Then the above mentioned segfault happens. The only workaround I found is to merge the BAM files of the replicates with ""samtools merge"". Any idea why the segfault appears?. Cheers,; Tobi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/145
https://github.com/COMBINE-lab/salmon/issues/146:2,Availability,down,downloaded,2,"I downloaded Salmon-0.8.2_linux_x86_64, and I decompressed it.; When I ran salmon, it worked.; But when I ran salmon index, I got a mistake as follow:. Version Info: This is the most recent version of Salmon.; exception : [the option '--index' is required but missing]. Exiting.; ; Please help me.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/146
https://github.com/COMBINE-lab/salmon/issues/147:213,Availability,error,error,213,"Presumably in part because of the conda-forge packages, if working from a relatively clean miniconda install:. conda install r-essential; followed by; conda install salmon. causes R to fail to start, throwing the error:; ""/home/timp/miniconda3/lib/R/bin/exec/R: symbol lookup error: /home/timp/miniconda3/lib/R/bin/exec/../../lib/../../libreadline.so.6: undefined symbol: PC"". This seems to be a relatively known ncurses/readline linked bug (https://github.com/conda-forge/rpy2-feedstock/issues/1) - but it seems solved in normal channels. Not sure exactly why it's cropping up here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/147
https://github.com/COMBINE-lab/salmon/issues/147:276,Availability,error,error,276,"Presumably in part because of the conda-forge packages, if working from a relatively clean miniconda install:. conda install r-essential; followed by; conda install salmon. causes R to fail to start, throwing the error:; ""/home/timp/miniconda3/lib/R/bin/exec/R: symbol lookup error: /home/timp/miniconda3/lib/R/bin/exec/../../lib/../../libreadline.so.6: undefined symbol: PC"". This seems to be a relatively known ncurses/readline linked bug (https://github.com/conda-forge/rpy2-feedstock/issues/1) - but it seems solved in normal channels. Not sure exactly why it's cropping up here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/147
https://github.com/COMBINE-lab/salmon/issues/147:101,Deployability,install,install,101,"Presumably in part because of the conda-forge packages, if working from a relatively clean miniconda install:. conda install r-essential; followed by; conda install salmon. causes R to fail to start, throwing the error:; ""/home/timp/miniconda3/lib/R/bin/exec/R: symbol lookup error: /home/timp/miniconda3/lib/R/bin/exec/../../lib/../../libreadline.so.6: undefined symbol: PC"". This seems to be a relatively known ncurses/readline linked bug (https://github.com/conda-forge/rpy2-feedstock/issues/1) - but it seems solved in normal channels. Not sure exactly why it's cropping up here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/147
https://github.com/COMBINE-lab/salmon/issues/147:117,Deployability,install,install,117,"Presumably in part because of the conda-forge packages, if working from a relatively clean miniconda install:. conda install r-essential; followed by; conda install salmon. causes R to fail to start, throwing the error:; ""/home/timp/miniconda3/lib/R/bin/exec/R: symbol lookup error: /home/timp/miniconda3/lib/R/bin/exec/../../lib/../../libreadline.so.6: undefined symbol: PC"". This seems to be a relatively known ncurses/readline linked bug (https://github.com/conda-forge/rpy2-feedstock/issues/1) - but it seems solved in normal channels. Not sure exactly why it's cropping up here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/147
https://github.com/COMBINE-lab/salmon/issues/147:157,Deployability,install,install,157,"Presumably in part because of the conda-forge packages, if working from a relatively clean miniconda install:. conda install r-essential; followed by; conda install salmon. causes R to fail to start, throwing the error:; ""/home/timp/miniconda3/lib/R/bin/exec/R: symbol lookup error: /home/timp/miniconda3/lib/R/bin/exec/../../lib/../../libreadline.so.6: undefined symbol: PC"". This seems to be a relatively known ncurses/readline linked bug (https://github.com/conda-forge/rpy2-feedstock/issues/1) - but it seems solved in normal channels. Not sure exactly why it's cropping up here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/147
https://github.com/COMBINE-lab/salmon/issues/149:329,Performance,Perform,Perform,329,```; % salmon cite. Version Info: This is the most recent version of Salmon.; Salmon v0.8.2. Usage: salmon -h|--help or; salmon -v|--version or; salmon -c|--cite or; salmon [--no-version-check] <COMMAND> [-h | options]. Commands:; cite Show salmon citation information; index Create a salmon index; quant Quantify a sample; swim Perform super-secret operation; ```. It seems I need to do `salmon -c` instead,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/149
https://github.com/COMBINE-lab/salmon/issues/150:556,Availability,error,error,556,"One problem I often run Into is that the sequence quality of the reads are problematic so I would like to trim the files based on sequence quality before. When I do that, fx with [trimmomatic](http://www.usadellab.org/cms/?page=trimmomatic), the result is 4 fastq files. Two where the pairs of reads both survived and two where one mate of the pair did not survive. Would it be possible to enable the bias corrections when mapping both paired data (with -1 and -2) and the unpaired data (--unmatedReads). Currently when I try this I just get the following error ""Cannot combine distributions that live in a different space"".",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/150
https://github.com/COMBINE-lab/salmon/issues/151:200,Integrability,message,message,200,I recently debugged an issue of low mapping rate which turned out to be due to the reads in the forward and reverse paired FASTQ files being sorted in different orders. Maybe there could be a warning message written out if e.g. the headers in the first read pairs are mismatched?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/151
https://github.com/COMBINE-lab/salmon/issues/152:309,Energy Efficiency,charge,charges,309,"I was running some quantification on Google Compute Engine and a particular study repeatedly printed ""couldn't dequeue read chunk"" for 2.5 days. By the time I discovered it, over 300GB of Egress traffic (sending the message to my local computer) had accumulated. Cost me close to $100 between Google's egress charges and my ISPs bandwidth overage charges. It would be nice if the message didn't print so much. I'm now running Salmon commands with `timeout 1h` prefix to prevent this but might run into an issue with 1 hour not being long enough for all quantification runs.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/152
https://github.com/COMBINE-lab/salmon/issues/152:347,Energy Efficiency,charge,charges,347,"I was running some quantification on Google Compute Engine and a particular study repeatedly printed ""couldn't dequeue read chunk"" for 2.5 days. By the time I discovered it, over 300GB of Egress traffic (sending the message to my local computer) had accumulated. Cost me close to $100 between Google's egress charges and my ISPs bandwidth overage charges. It would be nice if the message didn't print so much. I'm now running Salmon commands with `timeout 1h` prefix to prevent this but might run into an issue with 1 hour not being long enough for all quantification runs.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/152
https://github.com/COMBINE-lab/salmon/issues/152:216,Integrability,message,message,216,"I was running some quantification on Google Compute Engine and a particular study repeatedly printed ""couldn't dequeue read chunk"" for 2.5 days. By the time I discovered it, over 300GB of Egress traffic (sending the message to my local computer) had accumulated. Cost me close to $100 between Google's egress charges and my ISPs bandwidth overage charges. It would be nice if the message didn't print so much. I'm now running Salmon commands with `timeout 1h` prefix to prevent this but might run into an issue with 1 hour not being long enough for all quantification runs.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/152
https://github.com/COMBINE-lab/salmon/issues/152:380,Integrability,message,message,380,"I was running some quantification on Google Compute Engine and a particular study repeatedly printed ""couldn't dequeue read chunk"" for 2.5 days. By the time I discovered it, over 300GB of Egress traffic (sending the message to my local computer) had accumulated. Cost me close to $100 between Google's egress charges and my ISPs bandwidth overage charges. It would be nice if the message didn't print so much. I'm now running Salmon commands with `timeout 1h` prefix to prevent this but might run into an issue with 1 hour not being long enough for all quantification runs.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/152
https://github.com/COMBINE-lab/salmon/issues/152:448,Safety,timeout,timeout,448,"I was running some quantification on Google Compute Engine and a particular study repeatedly printed ""couldn't dequeue read chunk"" for 2.5 days. By the time I discovered it, over 300GB of Egress traffic (sending the message to my local computer) had accumulated. Cost me close to $100 between Google's egress charges and my ISPs bandwidth overage charges. It would be nice if the message didn't print so much. I'm now running Salmon commands with `timeout 1h` prefix to prevent this but might run into an issue with 1 hour not being long enough for all quantification runs.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/152
https://github.com/COMBINE-lab/salmon/issues/153:11,Availability,down,download,11,Performing download step for 'libtbb'; tbb-2017_U3.tgz: FAILED; sha256sum: WARNING: 1 of 1 computed checksum did NOT match; tbb-2017_U3.tgz did not match expected SHA256! Exiting.; make[2]: *** [libtbb-prefix/src/libtbb-stamp/libtbb-download] Error 1; make[1]: *** [CMakeFiles/libtbb.dir/all] Error 2; make: *** [all] Error 2; -----------------------------------------------------------; command used; cmake -DBOOST_INCLUDEDIR=/local/genome/packages/boost/1.57.0/include/ -DBOOST_LIBRARYDIR=/local/genome/packages/boost/1.57.0/lib/ -DCMAKE_INSTALL_PREFIX=/local/genome/packages/salmon/0.8.2. ------------------------------------------------------------------------; boost/1.57.0 ; gcc/4.9.4,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/153
https://github.com/COMBINE-lab/salmon/issues/153:233,Availability,down,download,233,Performing download step for 'libtbb'; tbb-2017_U3.tgz: FAILED; sha256sum: WARNING: 1 of 1 computed checksum did NOT match; tbb-2017_U3.tgz did not match expected SHA256! Exiting.; make[2]: *** [libtbb-prefix/src/libtbb-stamp/libtbb-download] Error 1; make[1]: *** [CMakeFiles/libtbb.dir/all] Error 2; make: *** [all] Error 2; -----------------------------------------------------------; command used; cmake -DBOOST_INCLUDEDIR=/local/genome/packages/boost/1.57.0/include/ -DBOOST_LIBRARYDIR=/local/genome/packages/boost/1.57.0/lib/ -DCMAKE_INSTALL_PREFIX=/local/genome/packages/salmon/0.8.2. ------------------------------------------------------------------------; boost/1.57.0 ; gcc/4.9.4,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/153
https://github.com/COMBINE-lab/salmon/issues/153:243,Availability,Error,Error,243,Performing download step for 'libtbb'; tbb-2017_U3.tgz: FAILED; sha256sum: WARNING: 1 of 1 computed checksum did NOT match; tbb-2017_U3.tgz did not match expected SHA256! Exiting.; make[2]: *** [libtbb-prefix/src/libtbb-stamp/libtbb-download] Error 1; make[1]: *** [CMakeFiles/libtbb.dir/all] Error 2; make: *** [all] Error 2; -----------------------------------------------------------; command used; cmake -DBOOST_INCLUDEDIR=/local/genome/packages/boost/1.57.0/include/ -DBOOST_LIBRARYDIR=/local/genome/packages/boost/1.57.0/lib/ -DCMAKE_INSTALL_PREFIX=/local/genome/packages/salmon/0.8.2. ------------------------------------------------------------------------; boost/1.57.0 ; gcc/4.9.4,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/153
https://github.com/COMBINE-lab/salmon/issues/153:293,Availability,Error,Error,293,Performing download step for 'libtbb'; tbb-2017_U3.tgz: FAILED; sha256sum: WARNING: 1 of 1 computed checksum did NOT match; tbb-2017_U3.tgz did not match expected SHA256! Exiting.; make[2]: *** [libtbb-prefix/src/libtbb-stamp/libtbb-download] Error 1; make[1]: *** [CMakeFiles/libtbb.dir/all] Error 2; make: *** [all] Error 2; -----------------------------------------------------------; command used; cmake -DBOOST_INCLUDEDIR=/local/genome/packages/boost/1.57.0/include/ -DBOOST_LIBRARYDIR=/local/genome/packages/boost/1.57.0/lib/ -DCMAKE_INSTALL_PREFIX=/local/genome/packages/salmon/0.8.2. ------------------------------------------------------------------------; boost/1.57.0 ; gcc/4.9.4,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/153
https://github.com/COMBINE-lab/salmon/issues/153:318,Availability,Error,Error,318,Performing download step for 'libtbb'; tbb-2017_U3.tgz: FAILED; sha256sum: WARNING: 1 of 1 computed checksum did NOT match; tbb-2017_U3.tgz did not match expected SHA256! Exiting.; make[2]: *** [libtbb-prefix/src/libtbb-stamp/libtbb-download] Error 1; make[1]: *** [CMakeFiles/libtbb.dir/all] Error 2; make: *** [all] Error 2; -----------------------------------------------------------; command used; cmake -DBOOST_INCLUDEDIR=/local/genome/packages/boost/1.57.0/include/ -DBOOST_LIBRARYDIR=/local/genome/packages/boost/1.57.0/lib/ -DCMAKE_INSTALL_PREFIX=/local/genome/packages/salmon/0.8.2. ------------------------------------------------------------------------; boost/1.57.0 ; gcc/4.9.4,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/153
https://github.com/COMBINE-lab/salmon/issues/153:0,Performance,Perform,Performing,0,Performing download step for 'libtbb'; tbb-2017_U3.tgz: FAILED; sha256sum: WARNING: 1 of 1 computed checksum did NOT match; tbb-2017_U3.tgz did not match expected SHA256! Exiting.; make[2]: *** [libtbb-prefix/src/libtbb-stamp/libtbb-download] Error 1; make[1]: *** [CMakeFiles/libtbb.dir/all] Error 2; make: *** [all] Error 2; -----------------------------------------------------------; command used; cmake -DBOOST_INCLUDEDIR=/local/genome/packages/boost/1.57.0/include/ -DBOOST_LIBRARYDIR=/local/genome/packages/boost/1.57.0/lib/ -DCMAKE_INSTALL_PREFIX=/local/genome/packages/salmon/0.8.2. ------------------------------------------------------------------------; boost/1.57.0 ; gcc/4.9.4,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/153
https://github.com/COMBINE-lab/salmon/issues/153:100,Security,checksum,checksum,100,Performing download step for 'libtbb'; tbb-2017_U3.tgz: FAILED; sha256sum: WARNING: 1 of 1 computed checksum did NOT match; tbb-2017_U3.tgz did not match expected SHA256! Exiting.; make[2]: *** [libtbb-prefix/src/libtbb-stamp/libtbb-download] Error 1; make[1]: *** [CMakeFiles/libtbb.dir/all] Error 2; make: *** [all] Error 2; -----------------------------------------------------------; command used; cmake -DBOOST_INCLUDEDIR=/local/genome/packages/boost/1.57.0/include/ -DBOOST_LIBRARYDIR=/local/genome/packages/boost/1.57.0/lib/ -DCMAKE_INSTALL_PREFIX=/local/genome/packages/salmon/0.8.2. ------------------------------------------------------------------------; boost/1.57.0 ; gcc/4.9.4,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/153
https://github.com/COMBINE-lab/salmon/issues/155:32,Usability,clear,clearly,32,"Hi,; in your documentation, you clearly state that salmon expects a ""random"" order of reads and you suggest to shuffle the read files.; In my experiments, I created a set of unshuffled and shuffled .bam files (using samtools bamshuf). The resulting quant.sf files always were exactly identical. Is shuffling not longer needed (or probably never was for .bam files)? Or has salmon a built-in shuffling function?. Cheers,; Tobi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/155
https://github.com/COMBINE-lab/salmon/issues/156:557,Availability,down,downstream,557,"Dear Dr. Patro,. First of all, my apologies as I want to make it clear that I have just posted this same question on Bioconductor community as well in a hope to get a quick reply. . I have put great amount of effort to find out answer to this question on internet. Couldn't find it anywhere (bioconductor, biostars, seqanswers, github etc.). I have 3 replicates for each sample and one of the replicates from each sample is single-end and other two are paired-end as SE and PE were processed at different facilities (I know I have to do batch correction in downstream analysis). Now I want to use transcript level abundance from quant.sf file which I derived for each replicates using Salmon's quasi-mapping pipeline (used appropriate flags for SE and PE reads). All these (SE & PE) reads are strand specific. . My question is, can I use quant.sf directly from these replicates for downstream DE analysis using tximport or do SE or PE requires separate kind of processing before I can use them together as replicates for downstream analysis. I am planning to use limma-voom for my DE analysis. Thank you so much for your time and apologies if the question was answered already.; Sandip Darji",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/156
https://github.com/COMBINE-lab/salmon/issues/156:882,Availability,down,downstream,882,"Dear Dr. Patro,. First of all, my apologies as I want to make it clear that I have just posted this same question on Bioconductor community as well in a hope to get a quick reply. . I have put great amount of effort to find out answer to this question on internet. Couldn't find it anywhere (bioconductor, biostars, seqanswers, github etc.). I have 3 replicates for each sample and one of the replicates from each sample is single-end and other two are paired-end as SE and PE were processed at different facilities (I know I have to do batch correction in downstream analysis). Now I want to use transcript level abundance from quant.sf file which I derived for each replicates using Salmon's quasi-mapping pipeline (used appropriate flags for SE and PE reads). All these (SE & PE) reads are strand specific. . My question is, can I use quant.sf directly from these replicates for downstream DE analysis using tximport or do SE or PE requires separate kind of processing before I can use them together as replicates for downstream analysis. I am planning to use limma-voom for my DE analysis. Thank you so much for your time and apologies if the question was answered already.; Sandip Darji",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/156
https://github.com/COMBINE-lab/salmon/issues/156:1021,Availability,down,downstream,1021,"Dear Dr. Patro,. First of all, my apologies as I want to make it clear that I have just posted this same question on Bioconductor community as well in a hope to get a quick reply. . I have put great amount of effort to find out answer to this question on internet. Couldn't find it anywhere (bioconductor, biostars, seqanswers, github etc.). I have 3 replicates for each sample and one of the replicates from each sample is single-end and other two are paired-end as SE and PE were processed at different facilities (I know I have to do batch correction in downstream analysis). Now I want to use transcript level abundance from quant.sf file which I derived for each replicates using Salmon's quasi-mapping pipeline (used appropriate flags for SE and PE reads). All these (SE & PE) reads are strand specific. . My question is, can I use quant.sf directly from these replicates for downstream DE analysis using tximport or do SE or PE requires separate kind of processing before I can use them together as replicates for downstream analysis. I am planning to use limma-voom for my DE analysis. Thank you so much for your time and apologies if the question was answered already.; Sandip Darji",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/156
https://github.com/COMBINE-lab/salmon/issues/156:708,Deployability,pipeline,pipeline,708,"Dear Dr. Patro,. First of all, my apologies as I want to make it clear that I have just posted this same question on Bioconductor community as well in a hope to get a quick reply. . I have put great amount of effort to find out answer to this question on internet. Couldn't find it anywhere (bioconductor, biostars, seqanswers, github etc.). I have 3 replicates for each sample and one of the replicates from each sample is single-end and other two are paired-end as SE and PE were processed at different facilities (I know I have to do batch correction in downstream analysis). Now I want to use transcript level abundance from quant.sf file which I derived for each replicates using Salmon's quasi-mapping pipeline (used appropriate flags for SE and PE reads). All these (SE & PE) reads are strand specific. . My question is, can I use quant.sf directly from these replicates for downstream DE analysis using tximport or do SE or PE requires separate kind of processing before I can use them together as replicates for downstream analysis. I am planning to use limma-voom for my DE analysis. Thank you so much for your time and apologies if the question was answered already.; Sandip Darji",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/156
https://github.com/COMBINE-lab/salmon/issues/156:65,Usability,clear,clear,65,"Dear Dr. Patro,. First of all, my apologies as I want to make it clear that I have just posted this same question on Bioconductor community as well in a hope to get a quick reply. . I have put great amount of effort to find out answer to this question on internet. Couldn't find it anywhere (bioconductor, biostars, seqanswers, github etc.). I have 3 replicates for each sample and one of the replicates from each sample is single-end and other two are paired-end as SE and PE were processed at different facilities (I know I have to do batch correction in downstream analysis). Now I want to use transcript level abundance from quant.sf file which I derived for each replicates using Salmon's quasi-mapping pipeline (used appropriate flags for SE and PE reads). All these (SE & PE) reads are strand specific. . My question is, can I use quant.sf directly from these replicates for downstream DE analysis using tximport or do SE or PE requires separate kind of processing before I can use them together as replicates for downstream analysis. I am planning to use limma-voom for my DE analysis. Thank you so much for your time and apologies if the question was answered already.; Sandip Darji",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/156
https://github.com/COMBINE-lab/salmon/pull/158:50,Security,checksum,checksum,50,"Fixes Dockerfile to be FROM ubuntu:16.04, fixes a checksum in CMakeLists.txt, and makes build_test.sh executable. I tested this by changing the Dockerfile to copy the code into the image rather than pulling the code directly from github so that I could test the changes I made. I then built the image and ran:; ```; $ docker run combinelab/salmon:0.8.2 salmon --version; version : 0.8.2; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/158
https://github.com/COMBINE-lab/salmon/pull/158:116,Testability,test,tested,116,"Fixes Dockerfile to be FROM ubuntu:16.04, fixes a checksum in CMakeLists.txt, and makes build_test.sh executable. I tested this by changing the Dockerfile to copy the code into the image rather than pulling the code directly from github so that I could test the changes I made. I then built the image and ran:; ```; $ docker run combinelab/salmon:0.8.2 salmon --version; version : 0.8.2; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/158
https://github.com/COMBINE-lab/salmon/pull/158:253,Testability,test,test,253,"Fixes Dockerfile to be FROM ubuntu:16.04, fixes a checksum in CMakeLists.txt, and makes build_test.sh executable. I tested this by changing the Dockerfile to copy the code into the image rather than pulling the code directly from github so that I could test the changes I made. I then built the image and ran:; ```; $ docker run combinelab/salmon:0.8.2 salmon --version; version : 0.8.2; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/158
https://github.com/COMBINE-lab/salmon/issues/160:86,Testability,log,log,86,"I recently ran Salmon by quasi-mapping-based mode and when I checked the salmon_quant.log file, saw that mapping rate was around ~%65-68 for all of the samples. Do you have any suggestions to improve the mapping rate? I used ""--libType A"" to to infer the library type info and got a warning that ""Greater than 5% of the fragments disagreed with the provided library typ"", but I guess this is not an issue. This is an example for one of the ""lib_format_counts.json"" files: . ```; {; ""read_files"": ""( /mnt/dznehomes/homes/simonj/RNAseq_pipeline/frontal_data/samples/Trimmed_FASTQ_files/00116_GFM_R1_trimmed.fastq.gz, /mnt/dznehomes/homes/simonj/RNAseq_pipeline/frontal_data/samples/Trimmed_FASTQ_files/00116_GFM_R2_trimmed.fastq.gz )"",; ""expected_format"": ""ISR"",; ""compatible_fragment_ratio"": 0.9241470144855659,; ""num_compatible_fragments"": 34584460,; ""num_assigned_fragments"": 37423115,; ""num_consistent_mappings"": 334748580,; ""num_inconsistent_mappings"": 28046150,; ""MSF"": 0,; ""OSF"": 32448,; ""ISF"": 20518131,; ""MSR"": 0,; ""OSR"": 487250,; ""ISR"": 334748580,; ""SF"": 1833525,; ""SR"": 5088606,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/160
https://github.com/COMBINE-lab/salmon/issues/161:164,Usability,feedback,feedback,164,"Can we use genome as a reference instead of using transcriptome, and can you please tell me how can we use Salmon output to check alternative splicing events. Your feedback will be highly appreciated.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/161
https://github.com/COMBINE-lab/salmon/issues/162:505,Availability,error,errors,505,"I'm trying to build salmon on FreeBSD. . First issue, fetchRapMap.sh fails because it calls /bin/bash. Bash on FreeBSD is in /usr/local/bin/bash.; This is easily worked around with a symlink. Second issue: libbwa fails to build. . ```; [ 34%] Performing build step for 'libbwa'; make[3]: ""/usr/home/esiefker/salmon/salmon/external/bwa-master/Makefile"" line 17: Missing dependency operator; make[3]: ""/usr/home/esiefker/salmon/salmon/external/bwa-master/Makefile"" line 19: Need an operator; make[3]: Fatal errors encountered -- cannot continue; make[3]: stopped in /usr/home/esiefker/salmon/salmon/external/bwa-master; *** Error code 1; ```; In addition to failing to build bwa, bwa is present in ports and already installed on this machine. Cmake should check for this.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/162
https://github.com/COMBINE-lab/salmon/issues/162:622,Availability,Error,Error,622,"I'm trying to build salmon on FreeBSD. . First issue, fetchRapMap.sh fails because it calls /bin/bash. Bash on FreeBSD is in /usr/local/bin/bash.; This is easily worked around with a symlink. Second issue: libbwa fails to build. . ```; [ 34%] Performing build step for 'libbwa'; make[3]: ""/usr/home/esiefker/salmon/salmon/external/bwa-master/Makefile"" line 17: Missing dependency operator; make[3]: ""/usr/home/esiefker/salmon/salmon/external/bwa-master/Makefile"" line 19: Need an operator; make[3]: Fatal errors encountered -- cannot continue; make[3]: stopped in /usr/home/esiefker/salmon/salmon/external/bwa-master; *** Error code 1; ```; In addition to failing to build bwa, bwa is present in ports and already installed on this machine. Cmake should check for this.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/162
https://github.com/COMBINE-lab/salmon/issues/162:714,Deployability,install,installed,714,"I'm trying to build salmon on FreeBSD. . First issue, fetchRapMap.sh fails because it calls /bin/bash. Bash on FreeBSD is in /usr/local/bin/bash.; This is easily worked around with a symlink. Second issue: libbwa fails to build. . ```; [ 34%] Performing build step for 'libbwa'; make[3]: ""/usr/home/esiefker/salmon/salmon/external/bwa-master/Makefile"" line 17: Missing dependency operator; make[3]: ""/usr/home/esiefker/salmon/salmon/external/bwa-master/Makefile"" line 19: Need an operator; make[3]: Fatal errors encountered -- cannot continue; make[3]: stopped in /usr/home/esiefker/salmon/salmon/external/bwa-master; *** Error code 1; ```; In addition to failing to build bwa, bwa is present in ports and already installed on this machine. Cmake should check for this.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/162
https://github.com/COMBINE-lab/salmon/issues/162:369,Integrability,depend,dependency,369,"I'm trying to build salmon on FreeBSD. . First issue, fetchRapMap.sh fails because it calls /bin/bash. Bash on FreeBSD is in /usr/local/bin/bash.; This is easily worked around with a symlink. Second issue: libbwa fails to build. . ```; [ 34%] Performing build step for 'libbwa'; make[3]: ""/usr/home/esiefker/salmon/salmon/external/bwa-master/Makefile"" line 17: Missing dependency operator; make[3]: ""/usr/home/esiefker/salmon/salmon/external/bwa-master/Makefile"" line 19: Need an operator; make[3]: Fatal errors encountered -- cannot continue; make[3]: stopped in /usr/home/esiefker/salmon/salmon/external/bwa-master; *** Error code 1; ```; In addition to failing to build bwa, bwa is present in ports and already installed on this machine. Cmake should check for this.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/162
https://github.com/COMBINE-lab/salmon/issues/162:243,Performance,Perform,Performing,243,"I'm trying to build salmon on FreeBSD. . First issue, fetchRapMap.sh fails because it calls /bin/bash. Bash on FreeBSD is in /usr/local/bin/bash.; This is easily worked around with a symlink. Second issue: libbwa fails to build. . ```; [ 34%] Performing build step for 'libbwa'; make[3]: ""/usr/home/esiefker/salmon/salmon/external/bwa-master/Makefile"" line 17: Missing dependency operator; make[3]: ""/usr/home/esiefker/salmon/salmon/external/bwa-master/Makefile"" line 19: Need an operator; make[3]: Fatal errors encountered -- cannot continue; make[3]: stopped in /usr/home/esiefker/salmon/salmon/external/bwa-master; *** Error code 1; ```; In addition to failing to build bwa, bwa is present in ports and already installed on this machine. Cmake should check for this.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/162
https://github.com/COMBINE-lab/salmon/issues/164:420,Availability,Error,Error,420,"```. [rancher@rancher ~]$ docker pull combinelab/salmon; Using default tag: latest; latest: Pulling from combinelab/salmon; Digest: sha256:2d09e1113f5bf1aa6be9354b9c8be556a059bbb3cdc46067080894b6ebb2a983; Status: Image is up to date for combinelab/salmon:latest; [rancher@rancher ~]$ salmon; -bash: salmon: command not found; [rancher@rancher ~]$ docker run salmon; Unable to find image 'salmon:latest' locally; docker: Error response from daemon: repository salmon not found: does not exist or no pull access.; See 'docker run --help'.; [rancher@rancher ~]$ docker run combinelab/salmon; [rancher@rancher ~]$ docker run combinelab/salmon -h; container_linux.go:247: starting container process caused ""exec: \""-h\"": executable file not found in $PATH""; docker: Error response from daemon: oci runtime error: container_linux.go:247: starting container process caused ""exec: \""-h\"": executable file not found in $PATH"". ```. I've tried looking at the Docker documenation, but it's way over my head for just running a command line app. How do I use this thing?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/164
https://github.com/COMBINE-lab/salmon/issues/164:761,Availability,Error,Error,761,"```. [rancher@rancher ~]$ docker pull combinelab/salmon; Using default tag: latest; latest: Pulling from combinelab/salmon; Digest: sha256:2d09e1113f5bf1aa6be9354b9c8be556a059bbb3cdc46067080894b6ebb2a983; Status: Image is up to date for combinelab/salmon:latest; [rancher@rancher ~]$ salmon; -bash: salmon: command not found; [rancher@rancher ~]$ docker run salmon; Unable to find image 'salmon:latest' locally; docker: Error response from daemon: repository salmon not found: does not exist or no pull access.; See 'docker run --help'.; [rancher@rancher ~]$ docker run combinelab/salmon; [rancher@rancher ~]$ docker run combinelab/salmon -h; container_linux.go:247: starting container process caused ""exec: \""-h\"": executable file not found in $PATH""; docker: Error response from daemon: oci runtime error: container_linux.go:247: starting container process caused ""exec: \""-h\"": executable file not found in $PATH"". ```. I've tried looking at the Docker documenation, but it's way over my head for just running a command line app. How do I use this thing?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/164
https://github.com/COMBINE-lab/salmon/issues/164:801,Availability,error,error,801,"```. [rancher@rancher ~]$ docker pull combinelab/salmon; Using default tag: latest; latest: Pulling from combinelab/salmon; Digest: sha256:2d09e1113f5bf1aa6be9354b9c8be556a059bbb3cdc46067080894b6ebb2a983; Status: Image is up to date for combinelab/salmon:latest; [rancher@rancher ~]$ salmon; -bash: salmon: command not found; [rancher@rancher ~]$ docker run salmon; Unable to find image 'salmon:latest' locally; docker: Error response from daemon: repository salmon not found: does not exist or no pull access.; See 'docker run --help'.; [rancher@rancher ~]$ docker run combinelab/salmon; [rancher@rancher ~]$ docker run combinelab/salmon -h; container_linux.go:247: starting container process caused ""exec: \""-h\"": executable file not found in $PATH""; docker: Error response from daemon: oci runtime error: container_linux.go:247: starting container process caused ""exec: \""-h\"": executable file not found in $PATH"". ```. I've tried looking at the Docker documenation, but it's way over my head for just running a command line app. How do I use this thing?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/164
https://github.com/COMBINE-lab/salmon/issues/164:503,Security,access,access,503,"```. [rancher@rancher ~]$ docker pull combinelab/salmon; Using default tag: latest; latest: Pulling from combinelab/salmon; Digest: sha256:2d09e1113f5bf1aa6be9354b9c8be556a059bbb3cdc46067080894b6ebb2a983; Status: Image is up to date for combinelab/salmon:latest; [rancher@rancher ~]$ salmon; -bash: salmon: command not found; [rancher@rancher ~]$ docker run salmon; Unable to find image 'salmon:latest' locally; docker: Error response from daemon: repository salmon not found: does not exist or no pull access.; See 'docker run --help'.; [rancher@rancher ~]$ docker run combinelab/salmon; [rancher@rancher ~]$ docker run combinelab/salmon -h; container_linux.go:247: starting container process caused ""exec: \""-h\"": executable file not found in $PATH""; docker: Error response from daemon: oci runtime error: container_linux.go:247: starting container process caused ""exec: \""-h\"": executable file not found in $PATH"". ```. I've tried looking at the Docker documenation, but it's way over my head for just running a command line app. How do I use this thing?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/164
https://github.com/COMBINE-lab/salmon/issues/165:237,Performance,perform,performing,237,"Hi,. I am using Salmon to quantify single cell RNA-seq data using quasi-mapping. Therefore, I have many different FastQ files (288 to be exact), each for a different cell. Many files have less than a million reads. . I am concerned that performing the 3 bias corrections would introduce a systematic bias in itself between the samples, if the corrections are performed independently on each sample. I imagine that this would cause the read counts to be adjusted to different extents in different samples. This is compounded by the fact that number of reads in different files are so different as that might affect the sampling needed to measure bias. Ideally, I imagine the bias corrections should be performed on all 288 samples as a whole together. i.e. I concatenate all 288 FastQ files and run salmon on the concatenated file. But I would not be able to de-multiplex the reads afterwards.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/165
https://github.com/COMBINE-lab/salmon/issues/165:359,Performance,perform,performed,359,"Hi,. I am using Salmon to quantify single cell RNA-seq data using quasi-mapping. Therefore, I have many different FastQ files (288 to be exact), each for a different cell. Many files have less than a million reads. . I am concerned that performing the 3 bias corrections would introduce a systematic bias in itself between the samples, if the corrections are performed independently on each sample. I imagine that this would cause the read counts to be adjusted to different extents in different samples. This is compounded by the fact that number of reads in different files are so different as that might affect the sampling needed to measure bias. Ideally, I imagine the bias corrections should be performed on all 288 samples as a whole together. i.e. I concatenate all 288 FastQ files and run salmon on the concatenated file. But I would not be able to de-multiplex the reads afterwards.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/165
https://github.com/COMBINE-lab/salmon/issues/165:701,Performance,perform,performed,701,"Hi,. I am using Salmon to quantify single cell RNA-seq data using quasi-mapping. Therefore, I have many different FastQ files (288 to be exact), each for a different cell. Many files have less than a million reads. . I am concerned that performing the 3 bias corrections would introduce a systematic bias in itself between the samples, if the corrections are performed independently on each sample. I imagine that this would cause the read counts to be adjusted to different extents in different samples. This is compounded by the fact that number of reads in different files are so different as that might affect the sampling needed to measure bias. Ideally, I imagine the bias corrections should be performed on all 288 samples as a whole together. i.e. I concatenate all 288 FastQ files and run salmon on the concatenated file. But I would not be able to de-multiplex the reads afterwards.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/165
https://github.com/COMBINE-lab/salmon/issues/166:450,Integrability,depend,dependent,450,"Hi,. I read the preprinted Salmon paper but I couldn't understand the mathematics. Thus, I am not sure how NumReads and TPMs in the quantification file are generated, and my following questions might seem very naive. . My library is 3' selected. ([Sub-figure B] (http://www.rna-seqblog.com/for-model-species-the-3-rna-seq-method-might-more-accurately-detect-differential-expression/) ) Therefore, the number of fragments from each transcripts is not dependent on the length of the transcript. In theory, 1 transcript should only produce 1 fragment that originates from the 3' end. . Would there be any issue using Salmon to quantify a library like this? ; Should I use NumReads instead of TPM to measure transcript abundance, since I don't want my read counts to be normalized by length of transcript? ; If I am just comparing gene expression between samples, does it matter whether I use NumReads or TPM, since any normalization would cancel out when I calculate fold change?; Or should I use TPM with --posBias enabled to account for the 3' bias of my library? My concern about this approach is explained in a different [post](https://github.com/COMBINE-lab/salmon/issues/165). Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/166
https://github.com/COMBINE-lab/salmon/issues/166:351,Safety,detect,detect-differential-expression,351,"Hi,. I read the preprinted Salmon paper but I couldn't understand the mathematics. Thus, I am not sure how NumReads and TPMs in the quantification file are generated, and my following questions might seem very naive. . My library is 3' selected. ([Sub-figure B] (http://www.rna-seqblog.com/for-model-species-the-3-rna-seq-method-might-more-accurately-detect-differential-expression/) ) Therefore, the number of fragments from each transcripts is not dependent on the length of the transcript. In theory, 1 transcript should only produce 1 fragment that originates from the 3' end. . Would there be any issue using Salmon to quantify a library like this? ; Should I use NumReads instead of TPM to measure transcript abundance, since I don't want my read counts to be normalized by length of transcript? ; If I am just comparing gene expression between samples, does it matter whether I use NumReads or TPM, since any normalization would cancel out when I calculate fold change?; Or should I use TPM with --posBias enabled to account for the 3' bias of my library? My concern about this approach is explained in a different [post](https://github.com/COMBINE-lab/salmon/issues/165). Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/166
https://github.com/COMBINE-lab/salmon/issues/167:2465,Availability,error,error,2465,"oading Suffix Array; [2017-10-25 10:57:26.004] [stderrLog] [info] Loading Transcript Info; [2017-10-25 10:57:26.004] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-10-25 10:57:26.005] [stderrLog] [info] There were 28 set bits in the bit array; [2017-10-25 10:57:26.005] [stderrLog] [info] Computing transcript lengths; [2017-10-25 10:57:26.005] [stderrLog] [info] Waiting to finish loading hash; [2017-10-25 10:57:26.012] [stderrLog] [info] Done loading index. processed 81500000 fragments; hits: 0; hits per frag: 0. [2017-10-25 10:58:22.290] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2017-10-25 10:58:22.290] [jointLog] [info] Counted 0 total reads in the equivalence classes; [2017-10-25 10:58:22.293] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-10-25 10:58:22.293] [jointLog] [info] Mapping rate = 0%. [2017-10-25 10:58:22.293] [jointLog] [info] finished quantifyLibrary(); [2017-10-25 10:58:22.295] [jointLog] [info] Starting optimizer; [2017-10-25 10:58:22.308] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2017-10-25 10:58:22.308] [jointLog] [info] iteration = 0 | max rel diff. = 0.455425; [2017-10-25 10:58:22.308] [jointLog] [info] iteration = 50 | max rel diff. = -1.79769e+308; [2017-10-25 10:58:22.308] [jointLog] [error] Total alpha weight was too small! Make sure you ran salmon correclty.; [2017-10-25 10:58:22.308] [jointLog] [error] The optimization algorithm failed. This is likely the result of bad input (or a bug). If you cannot track down the cause, please report this issue on GitHub. I had a look at my fastq and all seems normal (?):. @HF1_23952:5:1101:9161:20709/1; CTCACAAGAGTGTGATCCAAGTCGGCCGTCGTCTTCTGCA; +; AAFFFJJJFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ; @HF1_23952:5:1101:9343:20814/1; CTCACAAGAGTGTGATCCAAGTCGGCCGTCGTCTTCTGCA; +. Thank you for your help,; Rute",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/167
https://github.com/COMBINE-lab/salmon/issues/167:2581,Availability,error,error,2581,"oading Suffix Array; [2017-10-25 10:57:26.004] [stderrLog] [info] Loading Transcript Info; [2017-10-25 10:57:26.004] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-10-25 10:57:26.005] [stderrLog] [info] There were 28 set bits in the bit array; [2017-10-25 10:57:26.005] [stderrLog] [info] Computing transcript lengths; [2017-10-25 10:57:26.005] [stderrLog] [info] Waiting to finish loading hash; [2017-10-25 10:57:26.012] [stderrLog] [info] Done loading index. processed 81500000 fragments; hits: 0; hits per frag: 0. [2017-10-25 10:58:22.290] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2017-10-25 10:58:22.290] [jointLog] [info] Counted 0 total reads in the equivalence classes; [2017-10-25 10:58:22.293] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-10-25 10:58:22.293] [jointLog] [info] Mapping rate = 0%. [2017-10-25 10:58:22.293] [jointLog] [info] finished quantifyLibrary(); [2017-10-25 10:58:22.295] [jointLog] [info] Starting optimizer; [2017-10-25 10:58:22.308] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2017-10-25 10:58:22.308] [jointLog] [info] iteration = 0 | max rel diff. = 0.455425; [2017-10-25 10:58:22.308] [jointLog] [info] iteration = 50 | max rel diff. = -1.79769e+308; [2017-10-25 10:58:22.308] [jointLog] [error] Total alpha weight was too small! Make sure you ran salmon correclty.; [2017-10-25 10:58:22.308] [jointLog] [error] The optimization algorithm failed. This is likely the result of bad input (or a bug). If you cannot track down the cause, please report this issue on GitHub. I had a look at my fastq and all seems normal (?):. @HF1_23952:5:1101:9161:20709/1; CTCACAAGAGTGTGATCCAAGTCGGCCGTCGTCTTCTGCA; +; AAFFFJJJFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ; @HF1_23952:5:1101:9343:20814/1; CTCACAAGAGTGTGATCCAAGTCGGCCGTCGTCTTCTGCA; +. Thank you for your help,; Rute",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/167
https://github.com/COMBINE-lab/salmon/issues/167:2694,Availability,down,down,2694,"oading Suffix Array; [2017-10-25 10:57:26.004] [stderrLog] [info] Loading Transcript Info; [2017-10-25 10:57:26.004] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-10-25 10:57:26.005] [stderrLog] [info] There were 28 set bits in the bit array; [2017-10-25 10:57:26.005] [stderrLog] [info] Computing transcript lengths; [2017-10-25 10:57:26.005] [stderrLog] [info] Waiting to finish loading hash; [2017-10-25 10:57:26.012] [stderrLog] [info] Done loading index. processed 81500000 fragments; hits: 0; hits per frag: 0. [2017-10-25 10:58:22.290] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2017-10-25 10:58:22.290] [jointLog] [info] Counted 0 total reads in the equivalence classes; [2017-10-25 10:58:22.293] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-10-25 10:58:22.293] [jointLog] [info] Mapping rate = 0%. [2017-10-25 10:58:22.293] [jointLog] [info] finished quantifyLibrary(); [2017-10-25 10:58:22.295] [jointLog] [info] Starting optimizer; [2017-10-25 10:58:22.308] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2017-10-25 10:58:22.308] [jointLog] [info] iteration = 0 | max rel diff. = 0.455425; [2017-10-25 10:58:22.308] [jointLog] [info] iteration = 50 | max rel diff. = -1.79769e+308; [2017-10-25 10:58:22.308] [jointLog] [error] Total alpha weight was too small! Make sure you ran salmon correclty.; [2017-10-25 10:58:22.308] [jointLog] [error] The optimization algorithm failed. This is likely the result of bad input (or a bug). If you cannot track down the cause, please report this issue on GitHub. I had a look at my fastq and all seems normal (?):. @HF1_23952:5:1101:9161:20709/1; CTCACAAGAGTGTGATCCAAGTCGGCCGTCGTCTTCTGCA; +; AAFFFJJJFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ; @HF1_23952:5:1101:9343:20814/1; CTCACAAGAGTGTGATCCAAGTCGGCCGTCGTCTTCTGCA; +. Thank you for your help,; Rute",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/167
https://github.com/COMBINE-lab/salmon/issues/167:763,Performance,Load,Loading,763,"Hello,. This is the first time I am using Salmon and tried following up all steps but got 0 fragments mapped.. . 1) copied unzip Salmon-0.8.2_linux_x86_64 into folder in server; 2) exported path: export PATH=$PATH:/.../.../Salmon-0.8.2_linux_x86_64/bin/; 3) built index: salmon index -t salmon.index.human.052617.tar -i human_index; 4) now I want to preform quantification on fastq files (only one end of paired end, trimmed for 40 bp): ; salmon quant -i human_index -l U -r Sample1_r1_trimmed.fastq -p 5 -o quants/Sample1_quant. Logs will be written to quants/Sample1_quant/logs; [2017-10-25 10:57:25.879] [jointLog] [info] parsing read library format; [2017-10-25 10:57:25.879] [jointLog] [info] There is 1 library.; [2017-10-25 10:57:26.002] [jointLog] [info] Loading Quasi index; [2017-10-25 10:57:26.002] [jointLog] [info] Loading 32-bit quasi index; [2017-10-25 10:57:26.012] [jointLog] [info] done; [2017-10-25 10:57:26.012] [jointLog] [info] Index contained 28 targets; [2017-10-25 10:57:26.003] [stderrLog] [info] Loading Suffix Array; [2017-10-25 10:57:26.004] [stderrLog] [info] Loading Transcript Info; [2017-10-25 10:57:26.004] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-10-25 10:57:26.005] [stderrLog] [info] There were 28 set bits in the bit array; [2017-10-25 10:57:26.005] [stderrLog] [info] Computing transcript lengths; [2017-10-25 10:57:26.005] [stderrLog] [info] Waiting to finish loading hash; [2017-10-25 10:57:26.012] [stderrLog] [info] Done loading index. processed 81500000 fragments; hits: 0; hits per frag: 0. [2017-10-25 10:58:22.290] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2017-10-25 10:58:22.290] [jointLog] [info] Counted 0 total reads in the equivalence classes; [2017-10-25 10:58:22.293] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-10-25 10:58:22.293] [jointLog] [info] Mapp",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/167
https://github.com/COMBINE-lab/salmon/issues/167:828,Performance,Load,Loading,828,"Hello,. This is the first time I am using Salmon and tried following up all steps but got 0 fragments mapped.. . 1) copied unzip Salmon-0.8.2_linux_x86_64 into folder in server; 2) exported path: export PATH=$PATH:/.../.../Salmon-0.8.2_linux_x86_64/bin/; 3) built index: salmon index -t salmon.index.human.052617.tar -i human_index; 4) now I want to preform quantification on fastq files (only one end of paired end, trimmed for 40 bp): ; salmon quant -i human_index -l U -r Sample1_r1_trimmed.fastq -p 5 -o quants/Sample1_quant. Logs will be written to quants/Sample1_quant/logs; [2017-10-25 10:57:25.879] [jointLog] [info] parsing read library format; [2017-10-25 10:57:25.879] [jointLog] [info] There is 1 library.; [2017-10-25 10:57:26.002] [jointLog] [info] Loading Quasi index; [2017-10-25 10:57:26.002] [jointLog] [info] Loading 32-bit quasi index; [2017-10-25 10:57:26.012] [jointLog] [info] done; [2017-10-25 10:57:26.012] [jointLog] [info] Index contained 28 targets; [2017-10-25 10:57:26.003] [stderrLog] [info] Loading Suffix Array; [2017-10-25 10:57:26.004] [stderrLog] [info] Loading Transcript Info; [2017-10-25 10:57:26.004] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-10-25 10:57:26.005] [stderrLog] [info] There were 28 set bits in the bit array; [2017-10-25 10:57:26.005] [stderrLog] [info] Computing transcript lengths; [2017-10-25 10:57:26.005] [stderrLog] [info] Waiting to finish loading hash; [2017-10-25 10:57:26.012] [stderrLog] [info] Done loading index. processed 81500000 fragments; hits: 0; hits per frag: 0. [2017-10-25 10:58:22.290] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2017-10-25 10:58:22.290] [jointLog] [info] Counted 0 total reads in the equivalence classes; [2017-10-25 10:58:22.293] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-10-25 10:58:22.293] [jointLog] [info] Mapp",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/167
https://github.com/COMBINE-lab/salmon/issues/167:1023,Performance,Load,Loading,1023," am using Salmon and tried following up all steps but got 0 fragments mapped.. . 1) copied unzip Salmon-0.8.2_linux_x86_64 into folder in server; 2) exported path: export PATH=$PATH:/.../.../Salmon-0.8.2_linux_x86_64/bin/; 3) built index: salmon index -t salmon.index.human.052617.tar -i human_index; 4) now I want to preform quantification on fastq files (only one end of paired end, trimmed for 40 bp): ; salmon quant -i human_index -l U -r Sample1_r1_trimmed.fastq -p 5 -o quants/Sample1_quant. Logs will be written to quants/Sample1_quant/logs; [2017-10-25 10:57:25.879] [jointLog] [info] parsing read library format; [2017-10-25 10:57:25.879] [jointLog] [info] There is 1 library.; [2017-10-25 10:57:26.002] [jointLog] [info] Loading Quasi index; [2017-10-25 10:57:26.002] [jointLog] [info] Loading 32-bit quasi index; [2017-10-25 10:57:26.012] [jointLog] [info] done; [2017-10-25 10:57:26.012] [jointLog] [info] Index contained 28 targets; [2017-10-25 10:57:26.003] [stderrLog] [info] Loading Suffix Array; [2017-10-25 10:57:26.004] [stderrLog] [info] Loading Transcript Info; [2017-10-25 10:57:26.004] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-10-25 10:57:26.005] [stderrLog] [info] There were 28 set bits in the bit array; [2017-10-25 10:57:26.005] [stderrLog] [info] Computing transcript lengths; [2017-10-25 10:57:26.005] [stderrLog] [info] Waiting to finish loading hash; [2017-10-25 10:57:26.012] [stderrLog] [info] Done loading index. processed 81500000 fragments; hits: 0; hits per frag: 0. [2017-10-25 10:58:22.290] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2017-10-25 10:58:22.290] [jointLog] [info] Counted 0 total reads in the equivalence classes; [2017-10-25 10:58:22.293] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-10-25 10:58:22.293] [jointLog] [info] Mapping rate = 0%. [2017-10-25 10:58",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/167
https://github.com/COMBINE-lab/salmon/issues/167:1090,Performance,Load,Loading,1090," mapped.. . 1) copied unzip Salmon-0.8.2_linux_x86_64 into folder in server; 2) exported path: export PATH=$PATH:/.../.../Salmon-0.8.2_linux_x86_64/bin/; 3) built index: salmon index -t salmon.index.human.052617.tar -i human_index; 4) now I want to preform quantification on fastq files (only one end of paired end, trimmed for 40 bp): ; salmon quant -i human_index -l U -r Sample1_r1_trimmed.fastq -p 5 -o quants/Sample1_quant. Logs will be written to quants/Sample1_quant/logs; [2017-10-25 10:57:25.879] [jointLog] [info] parsing read library format; [2017-10-25 10:57:25.879] [jointLog] [info] There is 1 library.; [2017-10-25 10:57:26.002] [jointLog] [info] Loading Quasi index; [2017-10-25 10:57:26.002] [jointLog] [info] Loading 32-bit quasi index; [2017-10-25 10:57:26.012] [jointLog] [info] done; [2017-10-25 10:57:26.012] [jointLog] [info] Index contained 28 targets; [2017-10-25 10:57:26.003] [stderrLog] [info] Loading Suffix Array; [2017-10-25 10:57:26.004] [stderrLog] [info] Loading Transcript Info; [2017-10-25 10:57:26.004] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-10-25 10:57:26.005] [stderrLog] [info] There were 28 set bits in the bit array; [2017-10-25 10:57:26.005] [stderrLog] [info] Computing transcript lengths; [2017-10-25 10:57:26.005] [stderrLog] [info] Waiting to finish loading hash; [2017-10-25 10:57:26.012] [stderrLog] [info] Done loading index. processed 81500000 fragments; hits: 0; hits per frag: 0. [2017-10-25 10:58:22.290] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2017-10-25 10:58:22.290] [jointLog] [info] Counted 0 total reads in the equivalence classes; [2017-10-25 10:58:22.293] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-10-25 10:58:22.293] [jointLog] [info] Mapping rate = 0%. [2017-10-25 10:58:22.293] [jointLog] [info] finished quantifyLibrary(); [2017-10-25 1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/167
https://github.com/COMBINE-lab/salmon/issues/167:1160,Performance,Load,Loading,1160,"er; 2) exported path: export PATH=$PATH:/.../.../Salmon-0.8.2_linux_x86_64/bin/; 3) built index: salmon index -t salmon.index.human.052617.tar -i human_index; 4) now I want to preform quantification on fastq files (only one end of paired end, trimmed for 40 bp): ; salmon quant -i human_index -l U -r Sample1_r1_trimmed.fastq -p 5 -o quants/Sample1_quant. Logs will be written to quants/Sample1_quant/logs; [2017-10-25 10:57:25.879] [jointLog] [info] parsing read library format; [2017-10-25 10:57:25.879] [jointLog] [info] There is 1 library.; [2017-10-25 10:57:26.002] [jointLog] [info] Loading Quasi index; [2017-10-25 10:57:26.002] [jointLog] [info] Loading 32-bit quasi index; [2017-10-25 10:57:26.012] [jointLog] [info] done; [2017-10-25 10:57:26.012] [jointLog] [info] Index contained 28 targets; [2017-10-25 10:57:26.003] [stderrLog] [info] Loading Suffix Array; [2017-10-25 10:57:26.004] [stderrLog] [info] Loading Transcript Info; [2017-10-25 10:57:26.004] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-10-25 10:57:26.005] [stderrLog] [info] There were 28 set bits in the bit array; [2017-10-25 10:57:26.005] [stderrLog] [info] Computing transcript lengths; [2017-10-25 10:57:26.005] [stderrLog] [info] Waiting to finish loading hash; [2017-10-25 10:57:26.012] [stderrLog] [info] Done loading index. processed 81500000 fragments; hits: 0; hits per frag: 0. [2017-10-25 10:58:22.290] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2017-10-25 10:58:22.290] [jointLog] [info] Counted 0 total reads in the equivalence classes; [2017-10-25 10:58:22.293] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-10-25 10:58:22.293] [jointLog] [info] Mapping rate = 0%. [2017-10-25 10:58:22.293] [jointLog] [info] finished quantifyLibrary(); [2017-10-25 10:58:22.295] [jointLog] [info] Starting optimizer; [2017-10-25 10:58:22.3",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/167
https://github.com/COMBINE-lab/salmon/issues/167:1415,Performance,load,loading,1415," end, trimmed for 40 bp): ; salmon quant -i human_index -l U -r Sample1_r1_trimmed.fastq -p 5 -o quants/Sample1_quant. Logs will be written to quants/Sample1_quant/logs; [2017-10-25 10:57:25.879] [jointLog] [info] parsing read library format; [2017-10-25 10:57:25.879] [jointLog] [info] There is 1 library.; [2017-10-25 10:57:26.002] [jointLog] [info] Loading Quasi index; [2017-10-25 10:57:26.002] [jointLog] [info] Loading 32-bit quasi index; [2017-10-25 10:57:26.012] [jointLog] [info] done; [2017-10-25 10:57:26.012] [jointLog] [info] Index contained 28 targets; [2017-10-25 10:57:26.003] [stderrLog] [info] Loading Suffix Array; [2017-10-25 10:57:26.004] [stderrLog] [info] Loading Transcript Info; [2017-10-25 10:57:26.004] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-10-25 10:57:26.005] [stderrLog] [info] There were 28 set bits in the bit array; [2017-10-25 10:57:26.005] [stderrLog] [info] Computing transcript lengths; [2017-10-25 10:57:26.005] [stderrLog] [info] Waiting to finish loading hash; [2017-10-25 10:57:26.012] [stderrLog] [info] Done loading index. processed 81500000 fragments; hits: 0; hits per frag: 0. [2017-10-25 10:58:22.290] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2017-10-25 10:58:22.290] [jointLog] [info] Counted 0 total reads in the equivalence classes; [2017-10-25 10:58:22.293] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-10-25 10:58:22.293] [jointLog] [info] Mapping rate = 0%. [2017-10-25 10:58:22.293] [jointLog] [info] finished quantifyLibrary(); [2017-10-25 10:58:22.295] [jointLog] [info] Starting optimizer; [2017-10-25 10:58:22.308] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2017-10-25 10:58:22.308] [jointLog] [info] iteration = 0 | max rel diff. = 0.455425; [2017-10-25 10:58:22.308] [jointLog] [info] iteration = 50 | max rel diff. = ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/167
https://github.com/COMBINE-lab/salmon/issues/167:1479,Performance,load,loading,1479," -r Sample1_r1_trimmed.fastq -p 5 -o quants/Sample1_quant. Logs will be written to quants/Sample1_quant/logs; [2017-10-25 10:57:25.879] [jointLog] [info] parsing read library format; [2017-10-25 10:57:25.879] [jointLog] [info] There is 1 library.; [2017-10-25 10:57:26.002] [jointLog] [info] Loading Quasi index; [2017-10-25 10:57:26.002] [jointLog] [info] Loading 32-bit quasi index; [2017-10-25 10:57:26.012] [jointLog] [info] done; [2017-10-25 10:57:26.012] [jointLog] [info] Index contained 28 targets; [2017-10-25 10:57:26.003] [stderrLog] [info] Loading Suffix Array; [2017-10-25 10:57:26.004] [stderrLog] [info] Loading Transcript Info; [2017-10-25 10:57:26.004] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-10-25 10:57:26.005] [stderrLog] [info] There were 28 set bits in the bit array; [2017-10-25 10:57:26.005] [stderrLog] [info] Computing transcript lengths; [2017-10-25 10:57:26.005] [stderrLog] [info] Waiting to finish loading hash; [2017-10-25 10:57:26.012] [stderrLog] [info] Done loading index. processed 81500000 fragments; hits: 0; hits per frag: 0. [2017-10-25 10:58:22.290] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2017-10-25 10:58:22.290] [jointLog] [info] Counted 0 total reads in the equivalence classes; [2017-10-25 10:58:22.293] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-10-25 10:58:22.293] [jointLog] [info] Mapping rate = 0%. [2017-10-25 10:58:22.293] [jointLog] [info] finished quantifyLibrary(); [2017-10-25 10:58:22.295] [jointLog] [info] Starting optimizer; [2017-10-25 10:58:22.308] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2017-10-25 10:58:22.308] [jointLog] [info] iteration = 0 | max rel diff. = 0.455425; [2017-10-25 10:58:22.308] [jointLog] [info] iteration = 50 | max rel diff. = -1.79769e+308; [2017-10-25 10:58:22.308] [jointLog] [error] ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/167
https://github.com/COMBINE-lab/salmon/issues/167:2141,Performance,optimiz,optimizer,2141,"oading Suffix Array; [2017-10-25 10:57:26.004] [stderrLog] [info] Loading Transcript Info; [2017-10-25 10:57:26.004] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-10-25 10:57:26.005] [stderrLog] [info] There were 28 set bits in the bit array; [2017-10-25 10:57:26.005] [stderrLog] [info] Computing transcript lengths; [2017-10-25 10:57:26.005] [stderrLog] [info] Waiting to finish loading hash; [2017-10-25 10:57:26.012] [stderrLog] [info] Done loading index. processed 81500000 fragments; hits: 0; hits per frag: 0. [2017-10-25 10:58:22.290] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2017-10-25 10:58:22.290] [jointLog] [info] Counted 0 total reads in the equivalence classes; [2017-10-25 10:58:22.293] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-10-25 10:58:22.293] [jointLog] [info] Mapping rate = 0%. [2017-10-25 10:58:22.293] [jointLog] [info] finished quantifyLibrary(); [2017-10-25 10:58:22.295] [jointLog] [info] Starting optimizer; [2017-10-25 10:58:22.308] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2017-10-25 10:58:22.308] [jointLog] [info] iteration = 0 | max rel diff. = 0.455425; [2017-10-25 10:58:22.308] [jointLog] [info] iteration = 50 | max rel diff. = -1.79769e+308; [2017-10-25 10:58:22.308] [jointLog] [error] Total alpha weight was too small! Make sure you ran salmon correclty.; [2017-10-25 10:58:22.308] [jointLog] [error] The optimization algorithm failed. This is likely the result of bad input (or a bug). If you cannot track down the cause, please report this issue on GitHub. I had a look at my fastq and all seems normal (?):. @HF1_23952:5:1101:9161:20709/1; CTCACAAGAGTGTGATCCAAGTCGGCCGTCGTCTTCTGCA; +; AAFFFJJJFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ; @HF1_23952:5:1101:9343:20814/1; CTCACAAGAGTGTGATCCAAGTCGGCCGTCGTCTTCTGCA; +. Thank you for your help,; Rute",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/167
https://github.com/COMBINE-lab/salmon/issues/167:2592,Performance,optimiz,optimization,2592,"oading Suffix Array; [2017-10-25 10:57:26.004] [stderrLog] [info] Loading Transcript Info; [2017-10-25 10:57:26.004] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-10-25 10:57:26.005] [stderrLog] [info] There were 28 set bits in the bit array; [2017-10-25 10:57:26.005] [stderrLog] [info] Computing transcript lengths; [2017-10-25 10:57:26.005] [stderrLog] [info] Waiting to finish loading hash; [2017-10-25 10:57:26.012] [stderrLog] [info] Done loading index. processed 81500000 fragments; hits: 0; hits per frag: 0. [2017-10-25 10:58:22.290] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2017-10-25 10:58:22.290] [jointLog] [info] Counted 0 total reads in the equivalence classes; [2017-10-25 10:58:22.293] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-10-25 10:58:22.293] [jointLog] [info] Mapping rate = 0%. [2017-10-25 10:58:22.293] [jointLog] [info] finished quantifyLibrary(); [2017-10-25 10:58:22.295] [jointLog] [info] Starting optimizer; [2017-10-25 10:58:22.308] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2017-10-25 10:58:22.308] [jointLog] [info] iteration = 0 | max rel diff. = 0.455425; [2017-10-25 10:58:22.308] [jointLog] [info] iteration = 50 | max rel diff. = -1.79769e+308; [2017-10-25 10:58:22.308] [jointLog] [error] Total alpha weight was too small! Make sure you ran salmon correclty.; [2017-10-25 10:58:22.308] [jointLog] [error] The optimization algorithm failed. This is likely the result of bad input (or a bug). If you cannot track down the cause, please report this issue on GitHub. I had a look at my fastq and all seems normal (?):. @HF1_23952:5:1101:9161:20709/1; CTCACAAGAGTGTGATCCAAGTCGGCCGTCGTCTTCTGCA; +; AAFFFJJJFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ; @HF1_23952:5:1101:9343:20814/1; CTCACAAGAGTGTGATCCAAGTCGGCCGTCGTCTTCTGCA; +. Thank you for your help,; Rute",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/167
https://github.com/COMBINE-lab/salmon/issues/167:1423,Security,hash,hash,1423," end, trimmed for 40 bp): ; salmon quant -i human_index -l U -r Sample1_r1_trimmed.fastq -p 5 -o quants/Sample1_quant. Logs will be written to quants/Sample1_quant/logs; [2017-10-25 10:57:25.879] [jointLog] [info] parsing read library format; [2017-10-25 10:57:25.879] [jointLog] [info] There is 1 library.; [2017-10-25 10:57:26.002] [jointLog] [info] Loading Quasi index; [2017-10-25 10:57:26.002] [jointLog] [info] Loading 32-bit quasi index; [2017-10-25 10:57:26.012] [jointLog] [info] done; [2017-10-25 10:57:26.012] [jointLog] [info] Index contained 28 targets; [2017-10-25 10:57:26.003] [stderrLog] [info] Loading Suffix Array; [2017-10-25 10:57:26.004] [stderrLog] [info] Loading Transcript Info; [2017-10-25 10:57:26.004] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-10-25 10:57:26.005] [stderrLog] [info] There were 28 set bits in the bit array; [2017-10-25 10:57:26.005] [stderrLog] [info] Computing transcript lengths; [2017-10-25 10:57:26.005] [stderrLog] [info] Waiting to finish loading hash; [2017-10-25 10:57:26.012] [stderrLog] [info] Done loading index. processed 81500000 fragments; hits: 0; hits per frag: 0. [2017-10-25 10:58:22.290] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2017-10-25 10:58:22.290] [jointLog] [info] Counted 0 total reads in the equivalence classes; [2017-10-25 10:58:22.293] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-10-25 10:58:22.293] [jointLog] [info] Mapping rate = 0%. [2017-10-25 10:58:22.293] [jointLog] [info] finished quantifyLibrary(); [2017-10-25 10:58:22.295] [jointLog] [info] Starting optimizer; [2017-10-25 10:58:22.308] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2017-10-25 10:58:22.308] [jointLog] [info] iteration = 0 | max rel diff. = 0.455425; [2017-10-25 10:58:22.308] [jointLog] [info] iteration = 50 | max rel diff. = ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/167
https://github.com/COMBINE-lab/salmon/issues/167:530,Testability,Log,Logs,530,"Hello,. This is the first time I am using Salmon and tried following up all steps but got 0 fragments mapped.. . 1) copied unzip Salmon-0.8.2_linux_x86_64 into folder in server; 2) exported path: export PATH=$PATH:/.../.../Salmon-0.8.2_linux_x86_64/bin/; 3) built index: salmon index -t salmon.index.human.052617.tar -i human_index; 4) now I want to preform quantification on fastq files (only one end of paired end, trimmed for 40 bp): ; salmon quant -i human_index -l U -r Sample1_r1_trimmed.fastq -p 5 -o quants/Sample1_quant. Logs will be written to quants/Sample1_quant/logs; [2017-10-25 10:57:25.879] [jointLog] [info] parsing read library format; [2017-10-25 10:57:25.879] [jointLog] [info] There is 1 library.; [2017-10-25 10:57:26.002] [jointLog] [info] Loading Quasi index; [2017-10-25 10:57:26.002] [jointLog] [info] Loading 32-bit quasi index; [2017-10-25 10:57:26.012] [jointLog] [info] done; [2017-10-25 10:57:26.012] [jointLog] [info] Index contained 28 targets; [2017-10-25 10:57:26.003] [stderrLog] [info] Loading Suffix Array; [2017-10-25 10:57:26.004] [stderrLog] [info] Loading Transcript Info; [2017-10-25 10:57:26.004] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-10-25 10:57:26.005] [stderrLog] [info] There were 28 set bits in the bit array; [2017-10-25 10:57:26.005] [stderrLog] [info] Computing transcript lengths; [2017-10-25 10:57:26.005] [stderrLog] [info] Waiting to finish loading hash; [2017-10-25 10:57:26.012] [stderrLog] [info] Done loading index. processed 81500000 fragments; hits: 0; hits per frag: 0. [2017-10-25 10:58:22.290] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2017-10-25 10:58:22.290] [jointLog] [info] Counted 0 total reads in the equivalence classes; [2017-10-25 10:58:22.293] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-10-25 10:58:22.293] [jointLog] [info] Mapp",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/167
https://github.com/COMBINE-lab/salmon/issues/167:575,Testability,log,logs,575,"Hello,. This is the first time I am using Salmon and tried following up all steps but got 0 fragments mapped.. . 1) copied unzip Salmon-0.8.2_linux_x86_64 into folder in server; 2) exported path: export PATH=$PATH:/.../.../Salmon-0.8.2_linux_x86_64/bin/; 3) built index: salmon index -t salmon.index.human.052617.tar -i human_index; 4) now I want to preform quantification on fastq files (only one end of paired end, trimmed for 40 bp): ; salmon quant -i human_index -l U -r Sample1_r1_trimmed.fastq -p 5 -o quants/Sample1_quant. Logs will be written to quants/Sample1_quant/logs; [2017-10-25 10:57:25.879] [jointLog] [info] parsing read library format; [2017-10-25 10:57:25.879] [jointLog] [info] There is 1 library.; [2017-10-25 10:57:26.002] [jointLog] [info] Loading Quasi index; [2017-10-25 10:57:26.002] [jointLog] [info] Loading 32-bit quasi index; [2017-10-25 10:57:26.012] [jointLog] [info] done; [2017-10-25 10:57:26.012] [jointLog] [info] Index contained 28 targets; [2017-10-25 10:57:26.003] [stderrLog] [info] Loading Suffix Array; [2017-10-25 10:57:26.004] [stderrLog] [info] Loading Transcript Info; [2017-10-25 10:57:26.004] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-10-25 10:57:26.005] [stderrLog] [info] There were 28 set bits in the bit array; [2017-10-25 10:57:26.005] [stderrLog] [info] Computing transcript lengths; [2017-10-25 10:57:26.005] [stderrLog] [info] Waiting to finish loading hash; [2017-10-25 10:57:26.012] [stderrLog] [info] Done loading index. processed 81500000 fragments; hits: 0; hits per frag: 0. [2017-10-25 10:58:22.290] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2017-10-25 10:58:22.290] [jointLog] [info] Counted 0 total reads in the equivalence classes; [2017-10-25 10:58:22.293] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-10-25 10:58:22.293] [jointLog] [info] Mapp",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/167
https://github.com/COMBINE-lab/salmon/issues/172:94,Availability,error,error,94,"Hi, . I'm new to RNA seq and trying to use Salmon to analyse my dataset. However, it gives an error when I try to run it after downloading the package: . ` ~/Downloads/Salmon-0.8.2_macOX_10.12/bin/salmon`. It gves the following error: . `dyld: Library not loaded: @rpath/libtbbmalloc_proxy.dylib; Referenced from: /Users/rishika/Downloads/Salmon-0.8.2_macOX_10.12/bin/./salmon; Reason: image not found; Abort trap: 6`. I would be grateful for your help. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/172
https://github.com/COMBINE-lab/salmon/issues/172:127,Availability,down,downloading,127,"Hi, . I'm new to RNA seq and trying to use Salmon to analyse my dataset. However, it gives an error when I try to run it after downloading the package: . ` ~/Downloads/Salmon-0.8.2_macOX_10.12/bin/salmon`. It gves the following error: . `dyld: Library not loaded: @rpath/libtbbmalloc_proxy.dylib; Referenced from: /Users/rishika/Downloads/Salmon-0.8.2_macOX_10.12/bin/./salmon; Reason: image not found; Abort trap: 6`. I would be grateful for your help. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/172
https://github.com/COMBINE-lab/salmon/issues/172:158,Availability,Down,Downloads,158,"Hi, . I'm new to RNA seq and trying to use Salmon to analyse my dataset. However, it gives an error when I try to run it after downloading the package: . ` ~/Downloads/Salmon-0.8.2_macOX_10.12/bin/salmon`. It gves the following error: . `dyld: Library not loaded: @rpath/libtbbmalloc_proxy.dylib; Referenced from: /Users/rishika/Downloads/Salmon-0.8.2_macOX_10.12/bin/./salmon; Reason: image not found; Abort trap: 6`. I would be grateful for your help. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/172
https://github.com/COMBINE-lab/salmon/issues/172:228,Availability,error,error,228,"Hi, . I'm new to RNA seq and trying to use Salmon to analyse my dataset. However, it gives an error when I try to run it after downloading the package: . ` ~/Downloads/Salmon-0.8.2_macOX_10.12/bin/salmon`. It gves the following error: . `dyld: Library not loaded: @rpath/libtbbmalloc_proxy.dylib; Referenced from: /Users/rishika/Downloads/Salmon-0.8.2_macOX_10.12/bin/./salmon; Reason: image not found; Abort trap: 6`. I would be grateful for your help. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/172
https://github.com/COMBINE-lab/salmon/issues/172:329,Availability,Down,Downloads,329,"Hi, . I'm new to RNA seq and trying to use Salmon to analyse my dataset. However, it gives an error when I try to run it after downloading the package: . ` ~/Downloads/Salmon-0.8.2_macOX_10.12/bin/salmon`. It gves the following error: . `dyld: Library not loaded: @rpath/libtbbmalloc_proxy.dylib; Referenced from: /Users/rishika/Downloads/Salmon-0.8.2_macOX_10.12/bin/./salmon; Reason: image not found; Abort trap: 6`. I would be grateful for your help. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/172
https://github.com/COMBINE-lab/salmon/issues/172:256,Performance,load,loaded,256,"Hi, . I'm new to RNA seq and trying to use Salmon to analyse my dataset. However, it gives an error when I try to run it after downloading the package: . ` ~/Downloads/Salmon-0.8.2_macOX_10.12/bin/salmon`. It gves the following error: . `dyld: Library not loaded: @rpath/libtbbmalloc_proxy.dylib; Referenced from: /Users/rishika/Downloads/Salmon-0.8.2_macOX_10.12/bin/./salmon; Reason: image not found; Abort trap: 6`. I would be grateful for your help. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/172
https://github.com/COMBINE-lab/salmon/issues/172:403,Safety,Abort,Abort,403,"Hi, . I'm new to RNA seq and trying to use Salmon to analyse my dataset. However, it gives an error when I try to run it after downloading the package: . ` ~/Downloads/Salmon-0.8.2_macOX_10.12/bin/salmon`. It gves the following error: . `dyld: Library not loaded: @rpath/libtbbmalloc_proxy.dylib; Referenced from: /Users/rishika/Downloads/Salmon-0.8.2_macOX_10.12/bin/./salmon; Reason: image not found; Abort trap: 6`. I would be grateful for your help. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/172
https://github.com/COMBINE-lab/salmon/issues/175:120,Availability,error,error,120,"I have misterious ""hits: 17435551, hits per frag: 1.34457 Cannot combine distributions that live in a different space!"" error for the paired reads.; Here are the parameters:; ```bash; salmon quant -i /pipelines/indexes/GRAY_WHALE/salmon/graywhale_anton --threads 8 -l A -r /pipelines/results/graywhale/transcriptome/trinity_out_dir/Trinity-GG.fasta -1 /pipelines/results/graywhale/transcriptome/ours/kidney/trimmed/GWkidneymother_S1_L001_R1_001_trimmed.fastq.gz -2 /pipelines/results/graywhale/transcriptome/ours/kidney/trimmed/GWkidneymother_S1_L001_R2_001_trimmed.fastq.gz -o transcripts_quant; ```; All the files and folders are avaluabe for download, just add reads_1: http://pipelines1.westeurope.cloudapp.azure.com/ before /pipelines. Like this:. http://pipelines1.westeurope.cloudapp.azure.com/pipelines/results/graywhale/transcriptome/ours/kidney/trimmed/GWkidneymother_S1_L001_R1_001_trimmed.fastq.gz. http://pipelines1.westeurope.cloudapp.azure.com/pipelines/results/graywhale/transcriptome/ours/kidney/trimmed/GWkidneymother_S1_L001_R2_001_trimmed.fastq.gz",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/175
https://github.com/COMBINE-lab/salmon/issues/175:645,Availability,down,download,645,"I have misterious ""hits: 17435551, hits per frag: 1.34457 Cannot combine distributions that live in a different space!"" error for the paired reads.; Here are the parameters:; ```bash; salmon quant -i /pipelines/indexes/GRAY_WHALE/salmon/graywhale_anton --threads 8 -l A -r /pipelines/results/graywhale/transcriptome/trinity_out_dir/Trinity-GG.fasta -1 /pipelines/results/graywhale/transcriptome/ours/kidney/trimmed/GWkidneymother_S1_L001_R1_001_trimmed.fastq.gz -2 /pipelines/results/graywhale/transcriptome/ours/kidney/trimmed/GWkidneymother_S1_L001_R2_001_trimmed.fastq.gz -o transcripts_quant; ```; All the files and folders are avaluabe for download, just add reads_1: http://pipelines1.westeurope.cloudapp.azure.com/ before /pipelines. Like this:. http://pipelines1.westeurope.cloudapp.azure.com/pipelines/results/graywhale/transcriptome/ours/kidney/trimmed/GWkidneymother_S1_L001_R1_001_trimmed.fastq.gz. http://pipelines1.westeurope.cloudapp.azure.com/pipelines/results/graywhale/transcriptome/ours/kidney/trimmed/GWkidneymother_S1_L001_R2_001_trimmed.fastq.gz",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/175
https://github.com/COMBINE-lab/salmon/issues/175:201,Deployability,pipeline,pipelines,201,"I have misterious ""hits: 17435551, hits per frag: 1.34457 Cannot combine distributions that live in a different space!"" error for the paired reads.; Here are the parameters:; ```bash; salmon quant -i /pipelines/indexes/GRAY_WHALE/salmon/graywhale_anton --threads 8 -l A -r /pipelines/results/graywhale/transcriptome/trinity_out_dir/Trinity-GG.fasta -1 /pipelines/results/graywhale/transcriptome/ours/kidney/trimmed/GWkidneymother_S1_L001_R1_001_trimmed.fastq.gz -2 /pipelines/results/graywhale/transcriptome/ours/kidney/trimmed/GWkidneymother_S1_L001_R2_001_trimmed.fastq.gz -o transcripts_quant; ```; All the files and folders are avaluabe for download, just add reads_1: http://pipelines1.westeurope.cloudapp.azure.com/ before /pipelines. Like this:. http://pipelines1.westeurope.cloudapp.azure.com/pipelines/results/graywhale/transcriptome/ours/kidney/trimmed/GWkidneymother_S1_L001_R1_001_trimmed.fastq.gz. http://pipelines1.westeurope.cloudapp.azure.com/pipelines/results/graywhale/transcriptome/ours/kidney/trimmed/GWkidneymother_S1_L001_R2_001_trimmed.fastq.gz",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/175
https://github.com/COMBINE-lab/salmon/issues/175:274,Deployability,pipeline,pipelines,274,"I have misterious ""hits: 17435551, hits per frag: 1.34457 Cannot combine distributions that live in a different space!"" error for the paired reads.; Here are the parameters:; ```bash; salmon quant -i /pipelines/indexes/GRAY_WHALE/salmon/graywhale_anton --threads 8 -l A -r /pipelines/results/graywhale/transcriptome/trinity_out_dir/Trinity-GG.fasta -1 /pipelines/results/graywhale/transcriptome/ours/kidney/trimmed/GWkidneymother_S1_L001_R1_001_trimmed.fastq.gz -2 /pipelines/results/graywhale/transcriptome/ours/kidney/trimmed/GWkidneymother_S1_L001_R2_001_trimmed.fastq.gz -o transcripts_quant; ```; All the files and folders are avaluabe for download, just add reads_1: http://pipelines1.westeurope.cloudapp.azure.com/ before /pipelines. Like this:. http://pipelines1.westeurope.cloudapp.azure.com/pipelines/results/graywhale/transcriptome/ours/kidney/trimmed/GWkidneymother_S1_L001_R1_001_trimmed.fastq.gz. http://pipelines1.westeurope.cloudapp.azure.com/pipelines/results/graywhale/transcriptome/ours/kidney/trimmed/GWkidneymother_S1_L001_R2_001_trimmed.fastq.gz",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/175
https://github.com/COMBINE-lab/salmon/issues/175:353,Deployability,pipeline,pipelines,353,"I have misterious ""hits: 17435551, hits per frag: 1.34457 Cannot combine distributions that live in a different space!"" error for the paired reads.; Here are the parameters:; ```bash; salmon quant -i /pipelines/indexes/GRAY_WHALE/salmon/graywhale_anton --threads 8 -l A -r /pipelines/results/graywhale/transcriptome/trinity_out_dir/Trinity-GG.fasta -1 /pipelines/results/graywhale/transcriptome/ours/kidney/trimmed/GWkidneymother_S1_L001_R1_001_trimmed.fastq.gz -2 /pipelines/results/graywhale/transcriptome/ours/kidney/trimmed/GWkidneymother_S1_L001_R2_001_trimmed.fastq.gz -o transcripts_quant; ```; All the files and folders are avaluabe for download, just add reads_1: http://pipelines1.westeurope.cloudapp.azure.com/ before /pipelines. Like this:. http://pipelines1.westeurope.cloudapp.azure.com/pipelines/results/graywhale/transcriptome/ours/kidney/trimmed/GWkidneymother_S1_L001_R1_001_trimmed.fastq.gz. http://pipelines1.westeurope.cloudapp.azure.com/pipelines/results/graywhale/transcriptome/ours/kidney/trimmed/GWkidneymother_S1_L001_R2_001_trimmed.fastq.gz",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/175
https://github.com/COMBINE-lab/salmon/issues/175:466,Deployability,pipeline,pipelines,466,"I have misterious ""hits: 17435551, hits per frag: 1.34457 Cannot combine distributions that live in a different space!"" error for the paired reads.; Here are the parameters:; ```bash; salmon quant -i /pipelines/indexes/GRAY_WHALE/salmon/graywhale_anton --threads 8 -l A -r /pipelines/results/graywhale/transcriptome/trinity_out_dir/Trinity-GG.fasta -1 /pipelines/results/graywhale/transcriptome/ours/kidney/trimmed/GWkidneymother_S1_L001_R1_001_trimmed.fastq.gz -2 /pipelines/results/graywhale/transcriptome/ours/kidney/trimmed/GWkidneymother_S1_L001_R2_001_trimmed.fastq.gz -o transcripts_quant; ```; All the files and folders are avaluabe for download, just add reads_1: http://pipelines1.westeurope.cloudapp.azure.com/ before /pipelines. Like this:. http://pipelines1.westeurope.cloudapp.azure.com/pipelines/results/graywhale/transcriptome/ours/kidney/trimmed/GWkidneymother_S1_L001_R1_001_trimmed.fastq.gz. http://pipelines1.westeurope.cloudapp.azure.com/pipelines/results/graywhale/transcriptome/ours/kidney/trimmed/GWkidneymother_S1_L001_R2_001_trimmed.fastq.gz",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/175
https://github.com/COMBINE-lab/salmon/issues/175:730,Deployability,pipeline,pipelines,730,"I have misterious ""hits: 17435551, hits per frag: 1.34457 Cannot combine distributions that live in a different space!"" error for the paired reads.; Here are the parameters:; ```bash; salmon quant -i /pipelines/indexes/GRAY_WHALE/salmon/graywhale_anton --threads 8 -l A -r /pipelines/results/graywhale/transcriptome/trinity_out_dir/Trinity-GG.fasta -1 /pipelines/results/graywhale/transcriptome/ours/kidney/trimmed/GWkidneymother_S1_L001_R1_001_trimmed.fastq.gz -2 /pipelines/results/graywhale/transcriptome/ours/kidney/trimmed/GWkidneymother_S1_L001_R2_001_trimmed.fastq.gz -o transcripts_quant; ```; All the files and folders are avaluabe for download, just add reads_1: http://pipelines1.westeurope.cloudapp.azure.com/ before /pipelines. Like this:. http://pipelines1.westeurope.cloudapp.azure.com/pipelines/results/graywhale/transcriptome/ours/kidney/trimmed/GWkidneymother_S1_L001_R1_001_trimmed.fastq.gz. http://pipelines1.westeurope.cloudapp.azure.com/pipelines/results/graywhale/transcriptome/ours/kidney/trimmed/GWkidneymother_S1_L001_R2_001_trimmed.fastq.gz",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/175
https://github.com/COMBINE-lab/salmon/issues/175:801,Deployability,pipeline,pipelines,801,"I have misterious ""hits: 17435551, hits per frag: 1.34457 Cannot combine distributions that live in a different space!"" error for the paired reads.; Here are the parameters:; ```bash; salmon quant -i /pipelines/indexes/GRAY_WHALE/salmon/graywhale_anton --threads 8 -l A -r /pipelines/results/graywhale/transcriptome/trinity_out_dir/Trinity-GG.fasta -1 /pipelines/results/graywhale/transcriptome/ours/kidney/trimmed/GWkidneymother_S1_L001_R1_001_trimmed.fastq.gz -2 /pipelines/results/graywhale/transcriptome/ours/kidney/trimmed/GWkidneymother_S1_L001_R2_001_trimmed.fastq.gz -o transcripts_quant; ```; All the files and folders are avaluabe for download, just add reads_1: http://pipelines1.westeurope.cloudapp.azure.com/ before /pipelines. Like this:. http://pipelines1.westeurope.cloudapp.azure.com/pipelines/results/graywhale/transcriptome/ours/kidney/trimmed/GWkidneymother_S1_L001_R1_001_trimmed.fastq.gz. http://pipelines1.westeurope.cloudapp.azure.com/pipelines/results/graywhale/transcriptome/ours/kidney/trimmed/GWkidneymother_S1_L001_R2_001_trimmed.fastq.gz",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/175
https://github.com/COMBINE-lab/salmon/issues/175:959,Deployability,pipeline,pipelines,959,"I have misterious ""hits: 17435551, hits per frag: 1.34457 Cannot combine distributions that live in a different space!"" error for the paired reads.; Here are the parameters:; ```bash; salmon quant -i /pipelines/indexes/GRAY_WHALE/salmon/graywhale_anton --threads 8 -l A -r /pipelines/results/graywhale/transcriptome/trinity_out_dir/Trinity-GG.fasta -1 /pipelines/results/graywhale/transcriptome/ours/kidney/trimmed/GWkidneymother_S1_L001_R1_001_trimmed.fastq.gz -2 /pipelines/results/graywhale/transcriptome/ours/kidney/trimmed/GWkidneymother_S1_L001_R2_001_trimmed.fastq.gz -o transcripts_quant; ```; All the files and folders are avaluabe for download, just add reads_1: http://pipelines1.westeurope.cloudapp.azure.com/ before /pipelines. Like this:. http://pipelines1.westeurope.cloudapp.azure.com/pipelines/results/graywhale/transcriptome/ours/kidney/trimmed/GWkidneymother_S1_L001_R1_001_trimmed.fastq.gz. http://pipelines1.westeurope.cloudapp.azure.com/pipelines/results/graywhale/transcriptome/ours/kidney/trimmed/GWkidneymother_S1_L001_R2_001_trimmed.fastq.gz",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/175
https://github.com/COMBINE-lab/salmon/issues/176:22,Availability,error,error,22,"I get the FastxParser error as below during indexing with Salmon v0.9.0. What does that mean? Has the indexing run successfully? Should I worry about anything?. ```; $ salmon index -t gencode.v27lift37.transcripts.fa -i salmon_gencode/; Version Info: This is the most recent version of Salmon.; [2017-11-28 16:51:37.147] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; [2017-11-28 16:51:38.341] [jointLog] [warning] Entry with header [ENST00000594394.1|ENSG00000268141.1|-|-|AL606500.1-201|AL606500.1|21|protein_coding|], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2017-11-28 16:51:40.503] [jointLog] [warning] Entry with header [ENST00000595481.1|ENSG00000268556.1|-|-|AC012360.1-201|AC012360.1|30|protein_coding|], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2017-11-28 16:51:47.865] [jointLog] [warning] Entry with header [ENST00000473810.1_1|ENSG00000239255.1_3|OTTHUMG00000157482.1_3|OTTHUMT00000348942.1_1|AC007620.1-201|AC007620.1|25|processed_pseudogene|], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2017-11-28 16:51:48.079] [jointLog] [warning] Entry with header [ENST00000603775.1_1|ENSG00000271544.1_3|OTTHUMG00000184300.1_3|OTTHUMT00000468575.1_1|AC006499.8-201|AC006499.8|23|processed_pseudogene|], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2017-11-28 16:52:00.610] [jointLog] [warning] Entry with header [ENST00000632684.1_1|ENSG00000282431.1_3|OTTHUMG00000190602.2_3|OTTHUMT00000485301.2_1|AC245427.8-201|AC245427.8|9|TR_D_gene|], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2017-11-28 16:52:11.269] [jointLog] [warning] Entry with header [ENST00000606517.1|ENSG00000271831.1|OTTHUMG00000185672.1|OTTHUMT00000470956.1|AL022345.9-001|AL022345.9|27|unprocessed_pseudogene|], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2017-11-28 16:52:13.209] [join",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/176
https://github.com/COMBINE-lab/salmon/issues/176:12121,Security,hash,hash,12121,"|19|IG_D_gene|], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2017-11-28 16:52:19.833] [jointLog] [warning] Entry with header [ENST00000604838.1_1|ENSG00000270185.1_2|OTTHUMG00000184585.2_2|OTTHUMT00000468915.2_1|IGHD1OR15-1B-201|IGHD1OR15-1B|17|IG_D_gene|], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2017-11-28 16:52:28.813] [jointLog] [warning] Entry with header [ENST00000579054.1_1|ENSG00000266416.1_3|OTTHUMG00000179204.1_3|OTTHUMT00000445280.1_1|AC130289.2-201|AC130289.2|28|processed_pseudogene|], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2017-11-28 16:52:32.075] [jointLog] [warning] Entry with header [ENST00000634174.1_1|ENSG00000282732.1_3|OTTHUMG00000191398.1_3|OTTHUMT00000487783.1_1|AC073539.7-201|AC073539.7|28|unprocessed_pseudogene|], had length less than the k-mer length of 31 (perhaps after poly-A clipping); Elapsed time: 59.38s. [2017-11-28 16:52:36.527] [jointLog] [warning] Removed 939 transcripts that were sequence duplicates of indexed transcripts.; [2017-11-28 16:52:36.527] [jointLog] [warning] If you wish to retain duplicate transcripts, please use the `--keepDuplicates` flag; Replaced 1 non-ATCG nucleotides; Clipped poly-A tails from 1555 transcripts; Building rank-select dictionary and saving to disk done; Elapsed time: 0.0308857s; Writing sequence data to file . . . done; Elapsed time: 0.368073s; [info] Building 32-bit suffix array (length of generalized text is 300120034); Building suffix array . . . success; saving to disk . . . done; Elapsed time: 1.2529s; done; Elapsed time: 91.367s; processed 300000000 positions; khash had 128912443 keys; saving hash to disk . . . done; Elapsed time: 10.1643s. **Encountered FastxParser destructor while parser was still marked active (or while parsing threads were still active). Be sure to call stop() before letting FastxParser leave scope!**. [2017-11-28 16:59:48.161] [jLog] [info] done building index; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/176
https://github.com/COMBINE-lab/salmon/issues/177:105,Availability,down,downloaded,105,"I'm quantifying reads from a Lexogen QuantSeq experiment, using `-l SF and --noLengthCorrection`. I just downloaded the latest release 0.9.0. Full command (using nu parallel); `salmon quant -i path_to_index -r {} -l SF --noLengthCorrection -o {.} -p 5`. Which gives the following settings information:; ```; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /home/wdecoster/databases/Homo_sapiens/hg38/transcriptome/GRCh38-full-transcriptome-index }; ### [ unmatedReads ] => { pt_d10046-11.fastq.gz }; ### [ libType ] => { SF }; ### [ noLengthCorrection ] => { }; ### [ output ] => { pt_d10046-11.fastq }; ### [ threads ] => { 5 }; ```. But I get the following warning for each sample:; `Detected a *potential* strand bias > 1% in an unstranded protocol check the file: samplename/lib_format_counts.json for details`. That file looks as below:. ```; {; ""read_files"": ""pt_d10040-14.fastq.gz"",; ""expected_format"": ""U"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 2836170,; ""num_assigned_fragments"": 2836170,; ""num_consistent_mappings"": 10375916,; ""num_inconsistent_mappings"": 0,; ""strand_mapping_bias"": 0.9229587055253724,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 0,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 0,; ""SF"": 9576542,; ""SR"": 799374,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```. This suggests my libType SF is ignored?. (Less important: If you could make --libtype an alias for --libType that would be great, random internal capitalization is quite annoying imho)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/177
https://github.com/COMBINE-lab/salmon/issues/177:127,Deployability,release,release,127,"I'm quantifying reads from a Lexogen QuantSeq experiment, using `-l SF and --noLengthCorrection`. I just downloaded the latest release 0.9.0. Full command (using nu parallel); `salmon quant -i path_to_index -r {} -l SF --noLengthCorrection -o {.} -p 5`. Which gives the following settings information:; ```; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /home/wdecoster/databases/Homo_sapiens/hg38/transcriptome/GRCh38-full-transcriptome-index }; ### [ unmatedReads ] => { pt_d10046-11.fastq.gz }; ### [ libType ] => { SF }; ### [ noLengthCorrection ] => { }; ### [ output ] => { pt_d10046-11.fastq }; ### [ threads ] => { 5 }; ```. But I get the following warning for each sample:; `Detected a *potential* strand bias > 1% in an unstranded protocol check the file: samplename/lib_format_counts.json for details`. That file looks as below:. ```; {; ""read_files"": ""pt_d10040-14.fastq.gz"",; ""expected_format"": ""U"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 2836170,; ""num_assigned_fragments"": 2836170,; ""num_consistent_mappings"": 10375916,; ""num_inconsistent_mappings"": 0,; ""strand_mapping_bias"": 0.9229587055253724,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 0,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 0,; ""SF"": 9576542,; ""SR"": 799374,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```. This suggests my libType SF is ignored?. (Less important: If you could make --libtype an alias for --libType that would be great, random internal capitalization is quite annoying imho)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/177
https://github.com/COMBINE-lab/salmon/issues/177:862,Integrability,protocol,protocol,862,"I'm quantifying reads from a Lexogen QuantSeq experiment, using `-l SF and --noLengthCorrection`. I just downloaded the latest release 0.9.0. Full command (using nu parallel); `salmon quant -i path_to_index -r {} -l SF --noLengthCorrection -o {.} -p 5`. Which gives the following settings information:; ```; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /home/wdecoster/databases/Homo_sapiens/hg38/transcriptome/GRCh38-full-transcriptome-index }; ### [ unmatedReads ] => { pt_d10046-11.fastq.gz }; ### [ libType ] => { SF }; ### [ noLengthCorrection ] => { }; ### [ output ] => { pt_d10046-11.fastq }; ### [ threads ] => { 5 }; ```. But I get the following warning for each sample:; `Detected a *potential* strand bias > 1% in an unstranded protocol check the file: samplename/lib_format_counts.json for details`. That file looks as below:. ```; {; ""read_files"": ""pt_d10040-14.fastq.gz"",; ""expected_format"": ""U"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 2836170,; ""num_assigned_fragments"": 2836170,; ""num_consistent_mappings"": 10375916,; ""num_inconsistent_mappings"": 0,; ""strand_mapping_bias"": 0.9229587055253724,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 0,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 0,; ""SF"": 9576542,; ""SR"": 799374,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```. This suggests my libType SF is ignored?. (Less important: If you could make --libtype an alias for --libType that would be great, random internal capitalization is quite annoying imho)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/177
https://github.com/COMBINE-lab/salmon/issues/177:805,Safety,Detect,Detected,805,"I'm quantifying reads from a Lexogen QuantSeq experiment, using `-l SF and --noLengthCorrection`. I just downloaded the latest release 0.9.0. Full command (using nu parallel); `salmon quant -i path_to_index -r {} -l SF --noLengthCorrection -o {.} -p 5`. Which gives the following settings information:; ```; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /home/wdecoster/databases/Homo_sapiens/hg38/transcriptome/GRCh38-full-transcriptome-index }; ### [ unmatedReads ] => { pt_d10046-11.fastq.gz }; ### [ libType ] => { SF }; ### [ noLengthCorrection ] => { }; ### [ output ] => { pt_d10046-11.fastq }; ### [ threads ] => { 5 }; ```. But I get the following warning for each sample:; `Detected a *potential* strand bias > 1% in an unstranded protocol check the file: samplename/lib_format_counts.json for details`. That file looks as below:. ```; {; ""read_files"": ""pt_d10040-14.fastq.gz"",; ""expected_format"": ""U"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 2836170,; ""num_assigned_fragments"": 2836170,; ""num_consistent_mappings"": 10375916,; ""num_inconsistent_mappings"": 0,; ""strand_mapping_bias"": 0.9229587055253724,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 0,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 0,; ""SF"": 9576542,; ""SR"": 799374,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```. This suggests my libType SF is ignored?. (Less important: If you could make --libtype an alias for --libType that would be great, random internal capitalization is quite annoying imho)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/177
https://github.com/COMBINE-lab/salmon/issues/181:214,Availability,Error,Error,214,"when I run cmake I get: . Cannot find source file:; [...]salmon-0.9.1/external/install/src/rapmap/RapMapFileSystem.cpp; Tried extensions .c .C .c++ .cc .cpp .cxx .m .M .mm .h .hh .h++ .hm .hpp .hxx .in .txx; CMake Error at src/CMakeLists.txt:120 (add_executable):; Cannot find source file:; [...]/salmon-0.9.1/external/install/src/rapmap/rank9b.cpp; Tried extensions .c .C .c++ .cc .cpp .cxx .m .M .mm .h .hh .h++ .hm .hpp .hxx .in .txx. Apart from that the build tries to download libgff, although libgf-dev is installed - it fails because it requires curl, which is not installed - i.e. that should also be tested for. System: Debian GNU/Linux (unstable), amd64 . Best, ; Gert",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181
https://github.com/COMBINE-lab/salmon/issues/181:473,Availability,down,download,473,"when I run cmake I get: . Cannot find source file:; [...]salmon-0.9.1/external/install/src/rapmap/RapMapFileSystem.cpp; Tried extensions .c .C .c++ .cc .cpp .cxx .m .M .mm .h .hh .h++ .hm .hpp .hxx .in .txx; CMake Error at src/CMakeLists.txt:120 (add_executable):; Cannot find source file:; [...]/salmon-0.9.1/external/install/src/rapmap/rank9b.cpp; Tried extensions .c .C .c++ .cc .cpp .cxx .m .M .mm .h .hh .h++ .hm .hpp .hxx .in .txx. Apart from that the build tries to download libgff, although libgf-dev is installed - it fails because it requires curl, which is not installed - i.e. that should also be tested for. System: Debian GNU/Linux (unstable), amd64 . Best, ; Gert",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181
https://github.com/COMBINE-lab/salmon/issues/181:79,Deployability,install,install,79,"when I run cmake I get: . Cannot find source file:; [...]salmon-0.9.1/external/install/src/rapmap/RapMapFileSystem.cpp; Tried extensions .c .C .c++ .cc .cpp .cxx .m .M .mm .h .hh .h++ .hm .hpp .hxx .in .txx; CMake Error at src/CMakeLists.txt:120 (add_executable):; Cannot find source file:; [...]/salmon-0.9.1/external/install/src/rapmap/rank9b.cpp; Tried extensions .c .C .c++ .cc .cpp .cxx .m .M .mm .h .hh .h++ .hm .hpp .hxx .in .txx. Apart from that the build tries to download libgff, although libgf-dev is installed - it fails because it requires curl, which is not installed - i.e. that should also be tested for. System: Debian GNU/Linux (unstable), amd64 . Best, ; Gert",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181
https://github.com/COMBINE-lab/salmon/issues/181:319,Deployability,install,install,319,"when I run cmake I get: . Cannot find source file:; [...]salmon-0.9.1/external/install/src/rapmap/RapMapFileSystem.cpp; Tried extensions .c .C .c++ .cc .cpp .cxx .m .M .mm .h .hh .h++ .hm .hpp .hxx .in .txx; CMake Error at src/CMakeLists.txt:120 (add_executable):; Cannot find source file:; [...]/salmon-0.9.1/external/install/src/rapmap/rank9b.cpp; Tried extensions .c .C .c++ .cc .cpp .cxx .m .M .mm .h .hh .h++ .hm .hpp .hxx .in .txx. Apart from that the build tries to download libgff, although libgf-dev is installed - it fails because it requires curl, which is not installed - i.e. that should also be tested for. System: Debian GNU/Linux (unstable), amd64 . Best, ; Gert",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181
https://github.com/COMBINE-lab/salmon/issues/181:512,Deployability,install,installed,512,"when I run cmake I get: . Cannot find source file:; [...]salmon-0.9.1/external/install/src/rapmap/RapMapFileSystem.cpp; Tried extensions .c .C .c++ .cc .cpp .cxx .m .M .mm .h .hh .h++ .hm .hpp .hxx .in .txx; CMake Error at src/CMakeLists.txt:120 (add_executable):; Cannot find source file:; [...]/salmon-0.9.1/external/install/src/rapmap/rank9b.cpp; Tried extensions .c .C .c++ .cc .cpp .cxx .m .M .mm .h .hh .h++ .hm .hpp .hxx .in .txx. Apart from that the build tries to download libgff, although libgf-dev is installed - it fails because it requires curl, which is not installed - i.e. that should also be tested for. System: Debian GNU/Linux (unstable), amd64 . Best, ; Gert",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181
https://github.com/COMBINE-lab/salmon/issues/181:572,Deployability,install,installed,572,"when I run cmake I get: . Cannot find source file:; [...]salmon-0.9.1/external/install/src/rapmap/RapMapFileSystem.cpp; Tried extensions .c .C .c++ .cc .cpp .cxx .m .M .mm .h .hh .h++ .hm .hpp .hxx .in .txx; CMake Error at src/CMakeLists.txt:120 (add_executable):; Cannot find source file:; [...]/salmon-0.9.1/external/install/src/rapmap/rank9b.cpp; Tried extensions .c .C .c++ .cc .cpp .cxx .m .M .mm .h .hh .h++ .hm .hpp .hxx .in .txx. Apart from that the build tries to download libgff, although libgf-dev is installed - it fails because it requires curl, which is not installed - i.e. that should also be tested for. System: Debian GNU/Linux (unstable), amd64 . Best, ; Gert",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181
https://github.com/COMBINE-lab/salmon/issues/181:609,Testability,test,tested,609,"when I run cmake I get: . Cannot find source file:; [...]salmon-0.9.1/external/install/src/rapmap/RapMapFileSystem.cpp; Tried extensions .c .C .c++ .cc .cpp .cxx .m .M .mm .h .hh .h++ .hm .hpp .hxx .in .txx; CMake Error at src/CMakeLists.txt:120 (add_executable):; Cannot find source file:; [...]/salmon-0.9.1/external/install/src/rapmap/rank9b.cpp; Tried extensions .c .C .c++ .cc .cpp .cxx .m .M .mm .h .hh .h++ .hm .hpp .hxx .in .txx. Apart from that the build tries to download libgff, although libgf-dev is installed - it fails because it requires curl, which is not installed - i.e. that should also be tested for. System: Debian GNU/Linux (unstable), amd64 . Best, ; Gert",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181
https://github.com/COMBINE-lab/salmon/issues/182:726,Availability,error,error,726,"Hi:; Recently, I learned to use salmon in our lncRNA research project. I am confused in a point. ; As shown in the documentation (https://salmon.readthedocs.io/en/latest/salmon.html), according to our understanding, if we want those incompatible mappings will be discarded, the incompatPrior should be set as 0.0. And our RNA-Seq library type is dUTP based strand-specific RNA-Seq, so we should use ISR. ; But I am confused with https://gitter.im/COMBINE-lab/salmon?at=594a76d402c480e67268f02b and https://github.com/COMBINE-lab/salmon/issues/116; we want the expression level of antisense. Since there are about 0.5~1% reads can be the wrong reads mapped to the reverse strand of the gene (dUTP stranded protocol, the strand error (i.e. % of reads sequenced from the wrong strand of the RNA) is typically 0.5-1%). Can we use the incompatPrior option and get the expression level of antisense(right) in a single run?; This is our command line `salmon quant -i Ath_TX.index -l ISR -1 test_R1.fq.gz -2 test_R2.fq.gz -o TEST_TX_QUANT --incompatPrior 0.0 --seqBias --gcBias --threads 20`.; That those wrong mapped alignments (they didn't follow the ISR fule, maybe the error from the error of process of library construction) will be discarded.; Thank you and all the best.; Linhua",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/182
https://github.com/COMBINE-lab/salmon/issues/182:1165,Availability,error,error,1165,"Hi:; Recently, I learned to use salmon in our lncRNA research project. I am confused in a point. ; As shown in the documentation (https://salmon.readthedocs.io/en/latest/salmon.html), according to our understanding, if we want those incompatible mappings will be discarded, the incompatPrior should be set as 0.0. And our RNA-Seq library type is dUTP based strand-specific RNA-Seq, so we should use ISR. ; But I am confused with https://gitter.im/COMBINE-lab/salmon?at=594a76d402c480e67268f02b and https://github.com/COMBINE-lab/salmon/issues/116; we want the expression level of antisense. Since there are about 0.5~1% reads can be the wrong reads mapped to the reverse strand of the gene (dUTP stranded protocol, the strand error (i.e. % of reads sequenced from the wrong strand of the RNA) is typically 0.5-1%). Can we use the incompatPrior option and get the expression level of antisense(right) in a single run?; This is our command line `salmon quant -i Ath_TX.index -l ISR -1 test_R1.fq.gz -2 test_R2.fq.gz -o TEST_TX_QUANT --incompatPrior 0.0 --seqBias --gcBias --threads 20`.; That those wrong mapped alignments (they didn't follow the ISR fule, maybe the error from the error of process of library construction) will be discarded.; Thank you and all the best.; Linhua",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/182
https://github.com/COMBINE-lab/salmon/issues/182:1180,Availability,error,error,1180,"Hi:; Recently, I learned to use salmon in our lncRNA research project. I am confused in a point. ; As shown in the documentation (https://salmon.readthedocs.io/en/latest/salmon.html), according to our understanding, if we want those incompatible mappings will be discarded, the incompatPrior should be set as 0.0. And our RNA-Seq library type is dUTP based strand-specific RNA-Seq, so we should use ISR. ; But I am confused with https://gitter.im/COMBINE-lab/salmon?at=594a76d402c480e67268f02b and https://github.com/COMBINE-lab/salmon/issues/116; we want the expression level of antisense. Since there are about 0.5~1% reads can be the wrong reads mapped to the reverse strand of the gene (dUTP stranded protocol, the strand error (i.e. % of reads sequenced from the wrong strand of the RNA) is typically 0.5-1%). Can we use the incompatPrior option and get the expression level of antisense(right) in a single run?; This is our command line `salmon quant -i Ath_TX.index -l ISR -1 test_R1.fq.gz -2 test_R2.fq.gz -o TEST_TX_QUANT --incompatPrior 0.0 --seqBias --gcBias --threads 20`.; That those wrong mapped alignments (they didn't follow the ISR fule, maybe the error from the error of process of library construction) will be discarded.; Thank you and all the best.; Linhua",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/182
https://github.com/COMBINE-lab/salmon/issues/182:705,Integrability,protocol,protocol,705,"Hi:; Recently, I learned to use salmon in our lncRNA research project. I am confused in a point. ; As shown in the documentation (https://salmon.readthedocs.io/en/latest/salmon.html), according to our understanding, if we want those incompatible mappings will be discarded, the incompatPrior should be set as 0.0. And our RNA-Seq library type is dUTP based strand-specific RNA-Seq, so we should use ISR. ; But I am confused with https://gitter.im/COMBINE-lab/salmon?at=594a76d402c480e67268f02b and https://github.com/COMBINE-lab/salmon/issues/116; we want the expression level of antisense. Since there are about 0.5~1% reads can be the wrong reads mapped to the reverse strand of the gene (dUTP stranded protocol, the strand error (i.e. % of reads sequenced from the wrong strand of the RNA) is typically 0.5-1%). Can we use the incompatPrior option and get the expression level of antisense(right) in a single run?; This is our command line `salmon quant -i Ath_TX.index -l ISR -1 test_R1.fq.gz -2 test_R2.fq.gz -o TEST_TX_QUANT --incompatPrior 0.0 --seqBias --gcBias --threads 20`.; That those wrong mapped alignments (they didn't follow the ISR fule, maybe the error from the error of process of library construction) will be discarded.; Thank you and all the best.; Linhua",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/182
https://github.com/COMBINE-lab/salmon/issues/182:17,Usability,learn,learned,17,"Hi:; Recently, I learned to use salmon in our lncRNA research project. I am confused in a point. ; As shown in the documentation (https://salmon.readthedocs.io/en/latest/salmon.html), according to our understanding, if we want those incompatible mappings will be discarded, the incompatPrior should be set as 0.0. And our RNA-Seq library type is dUTP based strand-specific RNA-Seq, so we should use ISR. ; But I am confused with https://gitter.im/COMBINE-lab/salmon?at=594a76d402c480e67268f02b and https://github.com/COMBINE-lab/salmon/issues/116; we want the expression level of antisense. Since there are about 0.5~1% reads can be the wrong reads mapped to the reverse strand of the gene (dUTP stranded protocol, the strand error (i.e. % of reads sequenced from the wrong strand of the RNA) is typically 0.5-1%). Can we use the incompatPrior option and get the expression level of antisense(right) in a single run?; This is our command line `salmon quant -i Ath_TX.index -l ISR -1 test_R1.fq.gz -2 test_R2.fq.gz -o TEST_TX_QUANT --incompatPrior 0.0 --seqBias --gcBias --threads 20`.; That those wrong mapped alignments (they didn't follow the ISR fule, maybe the error from the error of process of library construction) will be discarded.; Thank you and all the best.; Linhua",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/182
https://github.com/COMBINE-lab/salmon/issues/184:78,Availability,error,errors,78,"I've built Salmon 0.9.1 (packaged it for GNU Guix) and experience a couple of errors. The first one is that running ""salmon quant"" without any further argument segfaults. That's likely because of the custom argument parsing code, which doesn't check bounds. It accesses argv2[1] even though that might not exist. (I've built it with GCC 5 and various versions of Boost. I've also unbundled all bundled libraries and made packages for them, but this should not affect the behaviour at all.)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/184
https://github.com/COMBINE-lab/salmon/issues/184:261,Security,access,accesses,261,"I've built Salmon 0.9.1 (packaged it for GNU Guix) and experience a couple of errors. The first one is that running ""salmon quant"" without any further argument segfaults. That's likely because of the custom argument parsing code, which doesn't check bounds. It accesses argv2[1] even though that might not exist. (I've built it with GCC 5 and various versions of Boost. I've also unbundled all bundled libraries and made packages for them, but this should not affect the behaviour at all.)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/184
https://github.com/COMBINE-lab/salmon/issues/185:280,Deployability,pipeline,pipeline,280,"A couple of operations in Salmon are determined by random numbers. For the purpose repeatability (in research or in automatic tests for packages using Salmon) it would be very useful to be able to set a seed for the random number generators. For example, we are using Salmon in a pipeline that generates HTML reports. In our tests we want to be sure that we control all sources of non-determinism and produce the very same report twice. This requires access to the seed. Would you be willing to accept a patch that changes all random number generation instances to first `getenv(""SALMON_RANDOM_SEED"")` and use that as the seed if provided? When `SALMON_RANDOM_SEED` is not provided the behaviour would be unchanged. (This relates to issue #102)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/185
https://github.com/COMBINE-lab/salmon/issues/185:504,Deployability,patch,patch,504,"A couple of operations in Salmon are determined by random numbers. For the purpose repeatability (in research or in automatic tests for packages using Salmon) it would be very useful to be able to set a seed for the random number generators. For example, we are using Salmon in a pipeline that generates HTML reports. In our tests we want to be sure that we control all sources of non-determinism and produce the very same report twice. This requires access to the seed. Would you be willing to accept a patch that changes all random number generation instances to first `getenv(""SALMON_RANDOM_SEED"")` and use that as the seed if provided? When `SALMON_RANDOM_SEED` is not provided the behaviour would be unchanged. (This relates to issue #102)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/185
https://github.com/COMBINE-lab/salmon/issues/185:451,Security,access,access,451,"A couple of operations in Salmon are determined by random numbers. For the purpose repeatability (in research or in automatic tests for packages using Salmon) it would be very useful to be able to set a seed for the random number generators. For example, we are using Salmon in a pipeline that generates HTML reports. In our tests we want to be sure that we control all sources of non-determinism and produce the very same report twice. This requires access to the seed. Would you be willing to accept a patch that changes all random number generation instances to first `getenv(""SALMON_RANDOM_SEED"")` and use that as the seed if provided? When `SALMON_RANDOM_SEED` is not provided the behaviour would be unchanged. (This relates to issue #102)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/185
https://github.com/COMBINE-lab/salmon/issues/185:126,Testability,test,tests,126,"A couple of operations in Salmon are determined by random numbers. For the purpose repeatability (in research or in automatic tests for packages using Salmon) it would be very useful to be able to set a seed for the random number generators. For example, we are using Salmon in a pipeline that generates HTML reports. In our tests we want to be sure that we control all sources of non-determinism and produce the very same report twice. This requires access to the seed. Would you be willing to accept a patch that changes all random number generation instances to first `getenv(""SALMON_RANDOM_SEED"")` and use that as the seed if provided? When `SALMON_RANDOM_SEED` is not provided the behaviour would be unchanged. (This relates to issue #102)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/185
https://github.com/COMBINE-lab/salmon/issues/185:325,Testability,test,tests,325,"A couple of operations in Salmon are determined by random numbers. For the purpose repeatability (in research or in automatic tests for packages using Salmon) it would be very useful to be able to set a seed for the random number generators. For example, we are using Salmon in a pipeline that generates HTML reports. In our tests we want to be sure that we control all sources of non-determinism and produce the very same report twice. This requires access to the seed. Would you be willing to accept a patch that changes all random number generation instances to first `getenv(""SALMON_RANDOM_SEED"")` and use that as the seed if provided? When `SALMON_RANDOM_SEED` is not provided the behaviour would be unchanged. (This relates to issue #102)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/185
https://github.com/COMBINE-lab/salmon/issues/187:11,Deployability,upgrade,upgraded,11,"I recently upgraded to v0.9.1 and am analyzing 2x75 total RNA. The kit is stranded with the first read originating from the reverse strand, thus I specified the libType as ISR. Command used to invoke salmon quant:. ```; salmon quant -i /home/benjohnson/Documents/references/hg19/salmon/salmon_hg19 -1 $pair1 -2 $pair2 -o $SAMPLE --seqBias --gcBias -p 28 --useVBOpt --numBootstraps 100 -l ISR; ```. Output following invocation:. ```; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /home/benjohnson/Documents/references/hg19/salmon/salmon_hg19 }; ### [ mates1 ] => { GO537F1_L000_R1_001.fastq.gz }; ### [ mates2 ] => { GO537F1_L000_R2_001.fastq.gz }; ### [ output ] => { GO537F1 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ threads ] => { 28 }; ### [ useVBOpt ] => { }; ### [ numBootstraps ] => { 100 }; ### [ libType ] => { ISR }; ```. Warning received about strand bias in library:. ```; Detected a *potential* strand bias > 1% in an unstranded protocol check the file: GO537F1/lib_format_counts.json for details; ```. lib_format_counts.json output:. ```; {; ""read_files"": ""( GO537F1_L000_R1_001.fastq.gz, GO537F1_L000_R2_001.fastq.gz )"",; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 0.997983099568402,; ""num_compatible_fragments"": 18521739,; ""num_assigned_fragments"": 18559171,; ""num_consistent_mappings"": 44944769,; ""num_inconsistent_mappings"": 16315669,; ""strand_mapping_bias"": 0.97668914484798,; ""MSF"": 0,; ""OSF"": 3095,; ""ISF"": 1047701,; ""MSR"": 0,; ""OSR"": 139809,; ""ISR"": 43897068,; ""SF"": 3206477,; ""SR"": 12956987,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```. I'm a bit confused as to whether this is normal behavior and not impacting output (I haven't necessarily investigated if this is the case) or if it is ignoring my ISR option. I've tried using -l as ISR; ""ISR"" and also with --libType ISR; ""ISR"" with the same output. . Thanks for your time!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/187
https://github.com/COMBINE-lab/salmon/issues/187:1018,Integrability,protocol,protocol,1018,"I recently upgraded to v0.9.1 and am analyzing 2x75 total RNA. The kit is stranded with the first read originating from the reverse strand, thus I specified the libType as ISR. Command used to invoke salmon quant:. ```; salmon quant -i /home/benjohnson/Documents/references/hg19/salmon/salmon_hg19 -1 $pair1 -2 $pair2 -o $SAMPLE --seqBias --gcBias -p 28 --useVBOpt --numBootstraps 100 -l ISR; ```. Output following invocation:. ```; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /home/benjohnson/Documents/references/hg19/salmon/salmon_hg19 }; ### [ mates1 ] => { GO537F1_L000_R1_001.fastq.gz }; ### [ mates2 ] => { GO537F1_L000_R2_001.fastq.gz }; ### [ output ] => { GO537F1 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ threads ] => { 28 }; ### [ useVBOpt ] => { }; ### [ numBootstraps ] => { 100 }; ### [ libType ] => { ISR }; ```. Warning received about strand bias in library:. ```; Detected a *potential* strand bias > 1% in an unstranded protocol check the file: GO537F1/lib_format_counts.json for details; ```. lib_format_counts.json output:. ```; {; ""read_files"": ""( GO537F1_L000_R1_001.fastq.gz, GO537F1_L000_R2_001.fastq.gz )"",; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 0.997983099568402,; ""num_compatible_fragments"": 18521739,; ""num_assigned_fragments"": 18559171,; ""num_consistent_mappings"": 44944769,; ""num_inconsistent_mappings"": 16315669,; ""strand_mapping_bias"": 0.97668914484798,; ""MSF"": 0,; ""OSF"": 3095,; ""ISF"": 1047701,; ""MSR"": 0,; ""OSR"": 139809,; ""ISR"": 43897068,; ""SF"": 3206477,; ""SR"": 12956987,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```. I'm a bit confused as to whether this is normal behavior and not impacting output (I haven't necessarily investigated if this is the case) or if it is ignoring my ISR option. I've tried using -l as ISR; ""ISR"" and also with --libType ISR; ""ISR"" with the same output. . Thanks for your time!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/187
https://github.com/COMBINE-lab/salmon/issues/187:961,Safety,Detect,Detected,961,"I recently upgraded to v0.9.1 and am analyzing 2x75 total RNA. The kit is stranded with the first read originating from the reverse strand, thus I specified the libType as ISR. Command used to invoke salmon quant:. ```; salmon quant -i /home/benjohnson/Documents/references/hg19/salmon/salmon_hg19 -1 $pair1 -2 $pair2 -o $SAMPLE --seqBias --gcBias -p 28 --useVBOpt --numBootstraps 100 -l ISR; ```. Output following invocation:. ```; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /home/benjohnson/Documents/references/hg19/salmon/salmon_hg19 }; ### [ mates1 ] => { GO537F1_L000_R1_001.fastq.gz }; ### [ mates2 ] => { GO537F1_L000_R2_001.fastq.gz }; ### [ output ] => { GO537F1 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ threads ] => { 28 }; ### [ useVBOpt ] => { }; ### [ numBootstraps ] => { 100 }; ### [ libType ] => { ISR }; ```. Warning received about strand bias in library:. ```; Detected a *potential* strand bias > 1% in an unstranded protocol check the file: GO537F1/lib_format_counts.json for details; ```. lib_format_counts.json output:. ```; {; ""read_files"": ""( GO537F1_L000_R1_001.fastq.gz, GO537F1_L000_R2_001.fastq.gz )"",; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 0.997983099568402,; ""num_compatible_fragments"": 18521739,; ""num_assigned_fragments"": 18559171,; ""num_consistent_mappings"": 44944769,; ""num_inconsistent_mappings"": 16315669,; ""strand_mapping_bias"": 0.97668914484798,; ""MSF"": 0,; ""OSF"": 3095,; ""ISF"": 1047701,; ""MSR"": 0,; ""OSR"": 139809,; ""ISR"": 43897068,; ""SF"": 3206477,; ""SR"": 12956987,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```. I'm a bit confused as to whether this is normal behavior and not impacting output (I haven't necessarily investigated if this is the case) or if it is ignoring my ISR option. I've tried using -l as ISR; ""ISR"" and also with --libType ISR; ""ISR"" with the same output. . Thanks for your time!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/187
https://github.com/COMBINE-lab/salmon/issues/188:2,Deployability,install,installed,2,"I installed salmon yesterday on my mac (macOS Sierra 10.12.6) using bioconda, and have been getting the following memory allocation warning:; salmon(15761,0x7fffb57993c0) malloc: *** malloc_zone_unregister() failed for 0x7fffb578f000. Salmon seems to be running OK, but I wanted to at least note this problem.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/188
https://github.com/COMBINE-lab/salmon/issues/189:97,Deployability,continuous,continuously,97,"Hello!. We are currently using Salmon as part of a very large data processing system. We need to continuously test the end-to-end functionality of our system, which includes a Salmon execution. Unfortunately, this increases our build time from 5 minutes to an hour and a half. It'd be really, really excellent if we could have a way to _simulate_ a Salmon run to verify the correct installation of Salmon and the Salmon-compatible collection of our input data without actually having to do the full Salmon run. Is there any chance you'd consider adding a `--dry-run` argument to run Salmon without actually running the big crunch? Ideally this could also output some dummy results files, but it doesn't have to if you don't like that. Thoughts?. Related: https://github.com/data-refinery/data-refinery/issues/106",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/189
https://github.com/COMBINE-lab/salmon/issues/189:382,Deployability,install,installation,382,"Hello!. We are currently using Salmon as part of a very large data processing system. We need to continuously test the end-to-end functionality of our system, which includes a Salmon execution. Unfortunately, this increases our build time from 5 minutes to an hour and a half. It'd be really, really excellent if we could have a way to _simulate_ a Salmon run to verify the correct installation of Salmon and the Salmon-compatible collection of our input data without actually having to do the full Salmon run. Is there any chance you'd consider adding a `--dry-run` argument to run Salmon without actually running the big crunch? Ideally this could also output some dummy results files, but it doesn't have to if you don't like that. Thoughts?. Related: https://github.com/data-refinery/data-refinery/issues/106",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/189
https://github.com/COMBINE-lab/salmon/issues/189:110,Testability,test,test,110,"Hello!. We are currently using Salmon as part of a very large data processing system. We need to continuously test the end-to-end functionality of our system, which includes a Salmon execution. Unfortunately, this increases our build time from 5 minutes to an hour and a half. It'd be really, really excellent if we could have a way to _simulate_ a Salmon run to verify the correct installation of Salmon and the Salmon-compatible collection of our input data without actually having to do the full Salmon run. Is there any chance you'd consider adding a `--dry-run` argument to run Salmon without actually running the big crunch? Ideally this could also output some dummy results files, but it doesn't have to if you don't like that. Thoughts?. Related: https://github.com/data-refinery/data-refinery/issues/106",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/189
https://github.com/COMBINE-lab/salmon/issues/192:341,Availability,error,error,341,"Untar salmon tarball:; ```; $ tar xzvf Salmon-0.9.1_linux_x86_64.tar.gz; ```; Verify binary file is executable:; ```; $ cd Salmon-latest_linux_x86_64/bin && ls -l; total 25336; -rwxr-xr-x 1 bgarchow staff 12971263 Nov 28 22:30 salmon; ```; Try to run salmon:; ```; bin $ ./salmon -h; -bash: ./salmon: cannot execute binary file: Exec format error; ```. BASH version:; ```; $ bash --version; GNU bash, version 4.4.18(1)-release (x86_64-apple-darwin16.7.0); Copyright (C) 2016 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/192
https://github.com/COMBINE-lab/salmon/issues/192:419,Deployability,release,release,419,"Untar salmon tarball:; ```; $ tar xzvf Salmon-0.9.1_linux_x86_64.tar.gz; ```; Verify binary file is executable:; ```; $ cd Salmon-latest_linux_x86_64/bin && ls -l; total 25336; -rwxr-xr-x 1 bgarchow staff 12971263 Nov 28 22:30 salmon; ```; Try to run salmon:; ```; bin $ ./salmon -h; -bash: ./salmon: cannot execute binary file: Exec format error; ```. BASH version:; ```; $ bash --version; GNU bash, version 4.4.18(1)-release (x86_64-apple-darwin16.7.0); Copyright (C) 2016 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/192
https://github.com/COMBINE-lab/salmon/issues/194:51,Deployability,install,installation,51,"Hi, I follow the instructions for conda - mediated installation, it installs v 0.8.2 not v 0.9.1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/194
https://github.com/COMBINE-lab/salmon/issues/194:68,Deployability,install,installs,68,"Hi, I follow the instructions for conda - mediated installation, it installs v 0.8.2 not v 0.9.1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/194
https://github.com/COMBINE-lab/salmon/issues/194:42,Integrability,mediat,mediated,42,"Hi, I follow the instructions for conda - mediated installation, it installs v 0.8.2 not v 0.9.1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/194
https://github.com/COMBINE-lab/salmon/issues/196:324,Performance,perform,performance,324,"#### Introduction. Inspired by the article of Schaeffer et al. (2016), I attempted to use salmon to quantify the proportion of bacterial reads in a paired-end DNA sequencing experiment. I use ""mash screen"" to select a set of reference genomes for the creation of an index for Salmon. #### Question. In order to maximize the performance, I would like to minimize the number of reference genomes for the index, but I would also like to maximize the total number of mapped reads. For other mappers (e.g. bowtie2, bwa-mem), increasing the number of reference genomes will also increase the number of total mapped reads. This does not seem to be the case for Salmon (and also Kallisto). Is there a specific reason why Salmon (and perhaps kallisto) does not guarantee the increase of total mapped reads when one add more reference genomes?. #### Mapping stats. I mapped a paired-end fastq to an index with increasingly more reference genomes. I must add that the added reference genomes have much similarity to those already added. | number ref | % mapped Salmon | % mapped Kallisto | % mapped bowtie2 | % mapped bwa-mem |; |---|:---:|:---:|:---:|:---:|; |1 | 82.5% | 82.5% | 82.4% | 69.2% |; |2 | 88.0% | 87.0% | 89.9% | 80.8% |; |3 | 87.5% | 87.0% | 89.9% | 80.9% |; |4 | 85.6% | 81.9% | 91.2% | 83.3% |; |5 | 85.6% | 81.9% | 91.2% | 83.3% |; |6 | 79.8% | 78.8% | 92.3% | 85.7% |; |7 | 79.6% | 79.2% | 92.5% | 86.1% |; |8 | 80.7% | 80.4% | 92.7% | 86.5% |; |9 | 82.2% | 82.1% | 93.6% | 88.3% |; |10 | 83.4% | 83.2% | 93.9% | 88.9% |; |11 | 84.7% | 84.4% | 95.3% | 91.5% |; |12 | 84.7% | 84.4% | 95.3% | 91.6% |; |13 | 84.3% | 84.1% | 96.3% | 93.3% |; |14 | 85.2% | 85.1% | 96.3% | 93.4% |; |15 | 86.1% | 86.0% | 96.6% | 93.9% |",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/196
https://github.com/COMBINE-lab/salmon/issues/197:76,Availability,error,error,76,"Hi,. I'm running into an issue with quant and hope you could help. Get this error message saying my index/versionInfo.json does not seem to exist (screenshot attached). I have single end reads spread across 5 fastq files per sample. Just trying to run one sample as a test before looping it. . I have tried building an index both with Salmon v 0.8.1 using a conda install as well as salmon v0.9.1 installing directly the binary on a linux computing cluster. . I've attached a screenshot of the indexing process (it boots me out at the end but I cant tell from the outputs if it was cut short, last thing it notes is writing sequence data to the file). I've also attached a screenshot of the generated index folder contents. The index is the most recent Ensembl FASTA cDNA download for mouse. I tried indexing a transcripts FASTA file from Gencode as well and am running into the same issue, so dont think its the specific reference. The reference transcript files are 54 and 56mb respectively, so no issues downloading and transferring to our cluster. . Any thoughts are much appreciated! Thanks!. Paul. ![screen shot 2018-02-12 at 15 37 54](https://user-images.githubusercontent.com/23369975/36214991-d3b453ec-1178-11e8-8331-d641a334c47b.png); ![screen shot 2018-02-12 at 12 41 33](https://user-images.githubusercontent.com/23369975/36214993-d3bf729a-1178-11e8-9c78-38158e423b9b.png); ![screen shot 2018-02-12 at 15 33 53](https://user-images.githubusercontent.com/23369975/36214994-d3cb52cc-1178-11e8-9f74-6cfd554ccb0a.png); ![screen shot 2018-02-12 at 15 35 16](https://user-images.githubusercontent.com/23369975/36214995-d3d50376-1178-11e8-81c3-90de0a347763.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/197
https://github.com/COMBINE-lab/salmon/issues/197:772,Availability,down,download,772,"Hi,. I'm running into an issue with quant and hope you could help. Get this error message saying my index/versionInfo.json does not seem to exist (screenshot attached). I have single end reads spread across 5 fastq files per sample. Just trying to run one sample as a test before looping it. . I have tried building an index both with Salmon v 0.8.1 using a conda install as well as salmon v0.9.1 installing directly the binary on a linux computing cluster. . I've attached a screenshot of the indexing process (it boots me out at the end but I cant tell from the outputs if it was cut short, last thing it notes is writing sequence data to the file). I've also attached a screenshot of the generated index folder contents. The index is the most recent Ensembl FASTA cDNA download for mouse. I tried indexing a transcripts FASTA file from Gencode as well and am running into the same issue, so dont think its the specific reference. The reference transcript files are 54 and 56mb respectively, so no issues downloading and transferring to our cluster. . Any thoughts are much appreciated! Thanks!. Paul. ![screen shot 2018-02-12 at 15 37 54](https://user-images.githubusercontent.com/23369975/36214991-d3b453ec-1178-11e8-8331-d641a334c47b.png); ![screen shot 2018-02-12 at 12 41 33](https://user-images.githubusercontent.com/23369975/36214993-d3bf729a-1178-11e8-9c78-38158e423b9b.png); ![screen shot 2018-02-12 at 15 33 53](https://user-images.githubusercontent.com/23369975/36214994-d3cb52cc-1178-11e8-9f74-6cfd554ccb0a.png); ![screen shot 2018-02-12 at 15 35 16](https://user-images.githubusercontent.com/23369975/36214995-d3d50376-1178-11e8-81c3-90de0a347763.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/197
https://github.com/COMBINE-lab/salmon/issues/197:1007,Availability,down,downloading,1007,"Hi,. I'm running into an issue with quant and hope you could help. Get this error message saying my index/versionInfo.json does not seem to exist (screenshot attached). I have single end reads spread across 5 fastq files per sample. Just trying to run one sample as a test before looping it. . I have tried building an index both with Salmon v 0.8.1 using a conda install as well as salmon v0.9.1 installing directly the binary on a linux computing cluster. . I've attached a screenshot of the indexing process (it boots me out at the end but I cant tell from the outputs if it was cut short, last thing it notes is writing sequence data to the file). I've also attached a screenshot of the generated index folder contents. The index is the most recent Ensembl FASTA cDNA download for mouse. I tried indexing a transcripts FASTA file from Gencode as well and am running into the same issue, so dont think its the specific reference. The reference transcript files are 54 and 56mb respectively, so no issues downloading and transferring to our cluster. . Any thoughts are much appreciated! Thanks!. Paul. ![screen shot 2018-02-12 at 15 37 54](https://user-images.githubusercontent.com/23369975/36214991-d3b453ec-1178-11e8-8331-d641a334c47b.png); ![screen shot 2018-02-12 at 12 41 33](https://user-images.githubusercontent.com/23369975/36214993-d3bf729a-1178-11e8-9c78-38158e423b9b.png); ![screen shot 2018-02-12 at 15 33 53](https://user-images.githubusercontent.com/23369975/36214994-d3cb52cc-1178-11e8-9f74-6cfd554ccb0a.png); ![screen shot 2018-02-12 at 15 35 16](https://user-images.githubusercontent.com/23369975/36214995-d3d50376-1178-11e8-81c3-90de0a347763.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/197
https://github.com/COMBINE-lab/salmon/issues/197:364,Deployability,install,install,364,"Hi,. I'm running into an issue with quant and hope you could help. Get this error message saying my index/versionInfo.json does not seem to exist (screenshot attached). I have single end reads spread across 5 fastq files per sample. Just trying to run one sample as a test before looping it. . I have tried building an index both with Salmon v 0.8.1 using a conda install as well as salmon v0.9.1 installing directly the binary on a linux computing cluster. . I've attached a screenshot of the indexing process (it boots me out at the end but I cant tell from the outputs if it was cut short, last thing it notes is writing sequence data to the file). I've also attached a screenshot of the generated index folder contents. The index is the most recent Ensembl FASTA cDNA download for mouse. I tried indexing a transcripts FASTA file from Gencode as well and am running into the same issue, so dont think its the specific reference. The reference transcript files are 54 and 56mb respectively, so no issues downloading and transferring to our cluster. . Any thoughts are much appreciated! Thanks!. Paul. ![screen shot 2018-02-12 at 15 37 54](https://user-images.githubusercontent.com/23369975/36214991-d3b453ec-1178-11e8-8331-d641a334c47b.png); ![screen shot 2018-02-12 at 12 41 33](https://user-images.githubusercontent.com/23369975/36214993-d3bf729a-1178-11e8-9c78-38158e423b9b.png); ![screen shot 2018-02-12 at 15 33 53](https://user-images.githubusercontent.com/23369975/36214994-d3cb52cc-1178-11e8-9f74-6cfd554ccb0a.png); ![screen shot 2018-02-12 at 15 35 16](https://user-images.githubusercontent.com/23369975/36214995-d3d50376-1178-11e8-81c3-90de0a347763.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/197
https://github.com/COMBINE-lab/salmon/issues/197:397,Deployability,install,installing,397,"Hi,. I'm running into an issue with quant and hope you could help. Get this error message saying my index/versionInfo.json does not seem to exist (screenshot attached). I have single end reads spread across 5 fastq files per sample. Just trying to run one sample as a test before looping it. . I have tried building an index both with Salmon v 0.8.1 using a conda install as well as salmon v0.9.1 installing directly the binary on a linux computing cluster. . I've attached a screenshot of the indexing process (it boots me out at the end but I cant tell from the outputs if it was cut short, last thing it notes is writing sequence data to the file). I've also attached a screenshot of the generated index folder contents. The index is the most recent Ensembl FASTA cDNA download for mouse. I tried indexing a transcripts FASTA file from Gencode as well and am running into the same issue, so dont think its the specific reference. The reference transcript files are 54 and 56mb respectively, so no issues downloading and transferring to our cluster. . Any thoughts are much appreciated! Thanks!. Paul. ![screen shot 2018-02-12 at 15 37 54](https://user-images.githubusercontent.com/23369975/36214991-d3b453ec-1178-11e8-8331-d641a334c47b.png); ![screen shot 2018-02-12 at 12 41 33](https://user-images.githubusercontent.com/23369975/36214993-d3bf729a-1178-11e8-9c78-38158e423b9b.png); ![screen shot 2018-02-12 at 15 33 53](https://user-images.githubusercontent.com/23369975/36214994-d3cb52cc-1178-11e8-9f74-6cfd554ccb0a.png); ![screen shot 2018-02-12 at 15 35 16](https://user-images.githubusercontent.com/23369975/36214995-d3d50376-1178-11e8-81c3-90de0a347763.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/197
https://github.com/COMBINE-lab/salmon/issues/197:82,Integrability,message,message,82,"Hi,. I'm running into an issue with quant and hope you could help. Get this error message saying my index/versionInfo.json does not seem to exist (screenshot attached). I have single end reads spread across 5 fastq files per sample. Just trying to run one sample as a test before looping it. . I have tried building an index both with Salmon v 0.8.1 using a conda install as well as salmon v0.9.1 installing directly the binary on a linux computing cluster. . I've attached a screenshot of the indexing process (it boots me out at the end but I cant tell from the outputs if it was cut short, last thing it notes is writing sequence data to the file). I've also attached a screenshot of the generated index folder contents. The index is the most recent Ensembl FASTA cDNA download for mouse. I tried indexing a transcripts FASTA file from Gencode as well and am running into the same issue, so dont think its the specific reference. The reference transcript files are 54 and 56mb respectively, so no issues downloading and transferring to our cluster. . Any thoughts are much appreciated! Thanks!. Paul. ![screen shot 2018-02-12 at 15 37 54](https://user-images.githubusercontent.com/23369975/36214991-d3b453ec-1178-11e8-8331-d641a334c47b.png); ![screen shot 2018-02-12 at 12 41 33](https://user-images.githubusercontent.com/23369975/36214993-d3bf729a-1178-11e8-9c78-38158e423b9b.png); ![screen shot 2018-02-12 at 15 33 53](https://user-images.githubusercontent.com/23369975/36214994-d3cb52cc-1178-11e8-9f74-6cfd554ccb0a.png); ![screen shot 2018-02-12 at 15 35 16](https://user-images.githubusercontent.com/23369975/36214995-d3d50376-1178-11e8-81c3-90de0a347763.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/197
https://github.com/COMBINE-lab/salmon/issues/197:268,Testability,test,test,268,"Hi,. I'm running into an issue with quant and hope you could help. Get this error message saying my index/versionInfo.json does not seem to exist (screenshot attached). I have single end reads spread across 5 fastq files per sample. Just trying to run one sample as a test before looping it. . I have tried building an index both with Salmon v 0.8.1 using a conda install as well as salmon v0.9.1 installing directly the binary on a linux computing cluster. . I've attached a screenshot of the indexing process (it boots me out at the end but I cant tell from the outputs if it was cut short, last thing it notes is writing sequence data to the file). I've also attached a screenshot of the generated index folder contents. The index is the most recent Ensembl FASTA cDNA download for mouse. I tried indexing a transcripts FASTA file from Gencode as well and am running into the same issue, so dont think its the specific reference. The reference transcript files are 54 and 56mb respectively, so no issues downloading and transferring to our cluster. . Any thoughts are much appreciated! Thanks!. Paul. ![screen shot 2018-02-12 at 15 37 54](https://user-images.githubusercontent.com/23369975/36214991-d3b453ec-1178-11e8-8331-d641a334c47b.png); ![screen shot 2018-02-12 at 12 41 33](https://user-images.githubusercontent.com/23369975/36214993-d3bf729a-1178-11e8-9c78-38158e423b9b.png); ![screen shot 2018-02-12 at 15 33 53](https://user-images.githubusercontent.com/23369975/36214994-d3cb52cc-1178-11e8-9f74-6cfd554ccb0a.png); ![screen shot 2018-02-12 at 15 35 16](https://user-images.githubusercontent.com/23369975/36214995-d3d50376-1178-11e8-81c3-90de0a347763.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/197
https://github.com/COMBINE-lab/salmon/issues/198:475,Availability,down,downloaded,475,"I ran salmon quant -p 6 -i refs/Homo_sapiens_GRCh38_91_quasi_index -l ISF -1 <(zcat RD1_R1_001.fastq.gz) -2 <(zcat RD1_R2_001.fastq.gz) -o test_salmon_quant -g refs/Homo_sapiens.GRCh38.91.gtf; (...); I am getting a bunch of warnings like:; [warning] couldn't find transcript named [ENST00000619185.1] in transcript <-> gene map; returning transcript as it's own gene. And in the end, there isn't a single ENSGxxxx Ensembl gene id in the quant.gene.sf file.; The gtf file was downloaded from Ensembl ftp site ftp://ftp.ensembl.org/pub/release-91/gtf/homo_sapiens. . I noticed the format of the gtf files from Ensembl v.75 and 91 are different; they have added gene_version between gene_id and transcript_id, and transcript_version. Homo_sapiens.GRCh37.75.gtf:8	protein_coding	transcript	26247878	26268564	.	+	.	gene_id ""ENSG00000104765""; transcript_id ""ENST00000518611""; gene_name ""BNIP3L""; gene_source ""ensembl_havana""; gene_biotype ""protein_coding""; transcript_name ""BNIP3L-004""; transcript_source ""ensembl_havana"";. Homo_sapiens.GRCh38.91.gtf:8	havana	transcript	26390362	26411048	.	+	.	gene_id ""ENSG00000104765""; gene_version ""15""; transcript_id ""ENST00000518611""; transcript_version ""5""; gene_name ""BNIP3L""; gene_source ""ensembl_havana""; gene_biotype ""protein_coding""; transcript_name ""BNIP3L-202""; transcript_source ""havana""; transcript_biotype ""protein_coding""; tag ""CCDS""; ccds_id ""CCDS83267""; tag ""basic""; transcript_support_level ""2"";",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/198
https://github.com/COMBINE-lab/salmon/issues/198:534,Deployability,release,release-,534,"I ran salmon quant -p 6 -i refs/Homo_sapiens_GRCh38_91_quasi_index -l ISF -1 <(zcat RD1_R1_001.fastq.gz) -2 <(zcat RD1_R2_001.fastq.gz) -o test_salmon_quant -g refs/Homo_sapiens.GRCh38.91.gtf; (...); I am getting a bunch of warnings like:; [warning] couldn't find transcript named [ENST00000619185.1] in transcript <-> gene map; returning transcript as it's own gene. And in the end, there isn't a single ENSGxxxx Ensembl gene id in the quant.gene.sf file.; The gtf file was downloaded from Ensembl ftp site ftp://ftp.ensembl.org/pub/release-91/gtf/homo_sapiens. . I noticed the format of the gtf files from Ensembl v.75 and 91 are different; they have added gene_version between gene_id and transcript_id, and transcript_version. Homo_sapiens.GRCh37.75.gtf:8	protein_coding	transcript	26247878	26268564	.	+	.	gene_id ""ENSG00000104765""; transcript_id ""ENST00000518611""; gene_name ""BNIP3L""; gene_source ""ensembl_havana""; gene_biotype ""protein_coding""; transcript_name ""BNIP3L-004""; transcript_source ""ensembl_havana"";. Homo_sapiens.GRCh38.91.gtf:8	havana	transcript	26390362	26411048	.	+	.	gene_id ""ENSG00000104765""; gene_version ""15""; transcript_id ""ENST00000518611""; transcript_version ""5""; gene_name ""BNIP3L""; gene_source ""ensembl_havana""; gene_biotype ""protein_coding""; transcript_name ""BNIP3L-202""; transcript_source ""havana""; transcript_biotype ""protein_coding""; tag ""CCDS""; ccds_id ""CCDS83267""; tag ""basic""; transcript_support_level ""2"";",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/198
https://github.com/COMBINE-lab/salmon/pull/199:38,Availability,avail,available,38,"In particular, fail when unzip is not available.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/199
https://github.com/COMBINE-lab/salmon/issues/200:43,Availability,down,downloaded,43,"I tried to run salmon v0.9.1 (for Mac OSX, downloaded from the conda page) using the '--gencode' flag and am getting an error that the option is unrecognized. I have SE reads. salmon quant -i ~/path/to/index/gencodemouse_index -l A --seqBias --gcBias --gencode \; 	-r <(gunzip -c 19_S34_L004_R1_001.fastq.gz 19_S34_L005_R1_001.fastq.gz 19_S34_L006_R1_001.fastq.gz 19_S34_L007_R1_001.fastq.gz 19_S34_L008_R1_001.fastq.gz) \; 	-o ~/output/directory/SalmonQuantsGencode/19_S34_Quants. Exception : [unrecognised option '--gencode']. Exiting.; Pauls-MacBook-Pro:fastq pdellorusso$ salmon -h; salmon(51580,0x7fffadd90340) malloc: *** malloc_zone_unregister() failed for 0x7fffadd81000; Salmon v0.9.1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/200
https://github.com/COMBINE-lab/salmon/issues/200:120,Availability,error,error,120,"I tried to run salmon v0.9.1 (for Mac OSX, downloaded from the conda page) using the '--gencode' flag and am getting an error that the option is unrecognized. I have SE reads. salmon quant -i ~/path/to/index/gencodemouse_index -l A --seqBias --gcBias --gencode \; 	-r <(gunzip -c 19_S34_L004_R1_001.fastq.gz 19_S34_L005_R1_001.fastq.gz 19_S34_L006_R1_001.fastq.gz 19_S34_L007_R1_001.fastq.gz 19_S34_L008_R1_001.fastq.gz) \; 	-o ~/output/directory/SalmonQuantsGencode/19_S34_Quants. Exception : [unrecognised option '--gencode']. Exiting.; Pauls-MacBook-Pro:fastq pdellorusso$ salmon -h; salmon(51580,0x7fffadd90340) malloc: *** malloc_zone_unregister() failed for 0x7fffadd81000; Salmon v0.9.1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/200
https://github.com/COMBINE-lab/salmon/issues/203:52,Availability,error,error,52,"I built Salmon 0.7.2 on OSX 10.13.3 and received an error when it was making libjemalloc: autogen.sh: autoconf not found. I installed ""autoconf"" program and tried it again and it succeeded. The documentation should say that autoconf must be installed in order to make salmon.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/203
https://github.com/COMBINE-lab/salmon/issues/203:124,Deployability,install,installed,124,"I built Salmon 0.7.2 on OSX 10.13.3 and received an error when it was making libjemalloc: autogen.sh: autoconf not found. I installed ""autoconf"" program and tried it again and it succeeded. The documentation should say that autoconf must be installed in order to make salmon.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/203
https://github.com/COMBINE-lab/salmon/issues/203:241,Deployability,install,installed,241,"I built Salmon 0.7.2 on OSX 10.13.3 and received an error when it was making libjemalloc: autogen.sh: autoconf not found. I installed ""autoconf"" program and tried it again and it succeeded. The documentation should say that autoconf must be installed in order to make salmon.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/203
https://github.com/COMBINE-lab/salmon/issues/204:274,Availability,Error,Error,274,"I built salmon 0.7.2 on OSX 10.13.3, then ran 'make test'. Test #1 fails, other two succeed. Looking at file Testing/Temporary/LastTest.log, it says:. ```; ""unit_tests"" start time: Mar 03 20:31 PST; Output:; ----------------------------------------------------------; CMake Error at /Users/tedtoal/src/salmon-0.7.2/cmake/UnitTests.cmake:7 (message):; Error running No such file or directory. ```. I looked in the tests directory and find program ""unitTests"", and when I run it, it succeeds:. ```; ===============================================================================; All tests passed (158 assertions in 4 test cases). ```. leading me to believe that actually, test1 succeeds, but something is wrong with the test system and it doesn't see that it succeeded.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/204
https://github.com/COMBINE-lab/salmon/issues/204:351,Availability,Error,Error,351,"I built salmon 0.7.2 on OSX 10.13.3, then ran 'make test'. Test #1 fails, other two succeed. Looking at file Testing/Temporary/LastTest.log, it says:. ```; ""unit_tests"" start time: Mar 03 20:31 PST; Output:; ----------------------------------------------------------; CMake Error at /Users/tedtoal/src/salmon-0.7.2/cmake/UnitTests.cmake:7 (message):; Error running No such file or directory. ```. I looked in the tests directory and find program ""unitTests"", and when I run it, it succeeds:. ```; ===============================================================================; All tests passed (158 assertions in 4 test cases). ```. leading me to believe that actually, test1 succeeds, but something is wrong with the test system and it doesn't see that it succeeded.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/204
https://github.com/COMBINE-lab/salmon/issues/204:340,Integrability,message,message,340,"I built salmon 0.7.2 on OSX 10.13.3, then ran 'make test'. Test #1 fails, other two succeed. Looking at file Testing/Temporary/LastTest.log, it says:. ```; ""unit_tests"" start time: Mar 03 20:31 PST; Output:; ----------------------------------------------------------; CMake Error at /Users/tedtoal/src/salmon-0.7.2/cmake/UnitTests.cmake:7 (message):; Error running No such file or directory. ```. I looked in the tests directory and find program ""unitTests"", and when I run it, it succeeds:. ```; ===============================================================================; All tests passed (158 assertions in 4 test cases). ```. leading me to believe that actually, test1 succeeds, but something is wrong with the test system and it doesn't see that it succeeded.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/204
https://github.com/COMBINE-lab/salmon/issues/204:52,Testability,test,test,52,"I built salmon 0.7.2 on OSX 10.13.3, then ran 'make test'. Test #1 fails, other two succeed. Looking at file Testing/Temporary/LastTest.log, it says:. ```; ""unit_tests"" start time: Mar 03 20:31 PST; Output:; ----------------------------------------------------------; CMake Error at /Users/tedtoal/src/salmon-0.7.2/cmake/UnitTests.cmake:7 (message):; Error running No such file or directory. ```. I looked in the tests directory and find program ""unitTests"", and when I run it, it succeeds:. ```; ===============================================================================; All tests passed (158 assertions in 4 test cases). ```. leading me to believe that actually, test1 succeeds, but something is wrong with the test system and it doesn't see that it succeeded.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/204
https://github.com/COMBINE-lab/salmon/issues/204:59,Testability,Test,Test,59,"I built salmon 0.7.2 on OSX 10.13.3, then ran 'make test'. Test #1 fails, other two succeed. Looking at file Testing/Temporary/LastTest.log, it says:. ```; ""unit_tests"" start time: Mar 03 20:31 PST; Output:; ----------------------------------------------------------; CMake Error at /Users/tedtoal/src/salmon-0.7.2/cmake/UnitTests.cmake:7 (message):; Error running No such file or directory. ```. I looked in the tests directory and find program ""unitTests"", and when I run it, it succeeds:. ```; ===============================================================================; All tests passed (158 assertions in 4 test cases). ```. leading me to believe that actually, test1 succeeds, but something is wrong with the test system and it doesn't see that it succeeded.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/204
https://github.com/COMBINE-lab/salmon/issues/204:109,Testability,Test,Testing,109,"I built salmon 0.7.2 on OSX 10.13.3, then ran 'make test'. Test #1 fails, other two succeed. Looking at file Testing/Temporary/LastTest.log, it says:. ```; ""unit_tests"" start time: Mar 03 20:31 PST; Output:; ----------------------------------------------------------; CMake Error at /Users/tedtoal/src/salmon-0.7.2/cmake/UnitTests.cmake:7 (message):; Error running No such file or directory. ```. I looked in the tests directory and find program ""unitTests"", and when I run it, it succeeds:. ```; ===============================================================================; All tests passed (158 assertions in 4 test cases). ```. leading me to believe that actually, test1 succeeds, but something is wrong with the test system and it doesn't see that it succeeded.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/204
https://github.com/COMBINE-lab/salmon/issues/204:136,Testability,log,log,136,"I built salmon 0.7.2 on OSX 10.13.3, then ran 'make test'. Test #1 fails, other two succeed. Looking at file Testing/Temporary/LastTest.log, it says:. ```; ""unit_tests"" start time: Mar 03 20:31 PST; Output:; ----------------------------------------------------------; CMake Error at /Users/tedtoal/src/salmon-0.7.2/cmake/UnitTests.cmake:7 (message):; Error running No such file or directory. ```. I looked in the tests directory and find program ""unitTests"", and when I run it, it succeeds:. ```; ===============================================================================; All tests passed (158 assertions in 4 test cases). ```. leading me to believe that actually, test1 succeeds, but something is wrong with the test system and it doesn't see that it succeeded.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/204
https://github.com/COMBINE-lab/salmon/issues/204:413,Testability,test,tests,413,"I built salmon 0.7.2 on OSX 10.13.3, then ran 'make test'. Test #1 fails, other two succeed. Looking at file Testing/Temporary/LastTest.log, it says:. ```; ""unit_tests"" start time: Mar 03 20:31 PST; Output:; ----------------------------------------------------------; CMake Error at /Users/tedtoal/src/salmon-0.7.2/cmake/UnitTests.cmake:7 (message):; Error running No such file or directory. ```. I looked in the tests directory and find program ""unitTests"", and when I run it, it succeeds:. ```; ===============================================================================; All tests passed (158 assertions in 4 test cases). ```. leading me to believe that actually, test1 succeeds, but something is wrong with the test system and it doesn't see that it succeeded.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/204
https://github.com/COMBINE-lab/salmon/issues/204:582,Testability,test,tests,582,"I built salmon 0.7.2 on OSX 10.13.3, then ran 'make test'. Test #1 fails, other two succeed. Looking at file Testing/Temporary/LastTest.log, it says:. ```; ""unit_tests"" start time: Mar 03 20:31 PST; Output:; ----------------------------------------------------------; CMake Error at /Users/tedtoal/src/salmon-0.7.2/cmake/UnitTests.cmake:7 (message):; Error running No such file or directory. ```. I looked in the tests directory and find program ""unitTests"", and when I run it, it succeeds:. ```; ===============================================================================; All tests passed (158 assertions in 4 test cases). ```. leading me to believe that actually, test1 succeeds, but something is wrong with the test system and it doesn't see that it succeeded.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/204
https://github.com/COMBINE-lab/salmon/issues/204:600,Testability,assert,assertions,600,"I built salmon 0.7.2 on OSX 10.13.3, then ran 'make test'. Test #1 fails, other two succeed. Looking at file Testing/Temporary/LastTest.log, it says:. ```; ""unit_tests"" start time: Mar 03 20:31 PST; Output:; ----------------------------------------------------------; CMake Error at /Users/tedtoal/src/salmon-0.7.2/cmake/UnitTests.cmake:7 (message):; Error running No such file or directory. ```. I looked in the tests directory and find program ""unitTests"", and when I run it, it succeeds:. ```; ===============================================================================; All tests passed (158 assertions in 4 test cases). ```. leading me to believe that actually, test1 succeeds, but something is wrong with the test system and it doesn't see that it succeeded.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/204
https://github.com/COMBINE-lab/salmon/issues/204:616,Testability,test,test,616,"I built salmon 0.7.2 on OSX 10.13.3, then ran 'make test'. Test #1 fails, other two succeed. Looking at file Testing/Temporary/LastTest.log, it says:. ```; ""unit_tests"" start time: Mar 03 20:31 PST; Output:; ----------------------------------------------------------; CMake Error at /Users/tedtoal/src/salmon-0.7.2/cmake/UnitTests.cmake:7 (message):; Error running No such file or directory. ```. I looked in the tests directory and find program ""unitTests"", and when I run it, it succeeds:. ```; ===============================================================================; All tests passed (158 assertions in 4 test cases). ```. leading me to believe that actually, test1 succeeds, but something is wrong with the test system and it doesn't see that it succeeded.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/204
https://github.com/COMBINE-lab/salmon/issues/204:719,Testability,test,test,719,"I built salmon 0.7.2 on OSX 10.13.3, then ran 'make test'. Test #1 fails, other two succeed. Looking at file Testing/Temporary/LastTest.log, it says:. ```; ""unit_tests"" start time: Mar 03 20:31 PST; Output:; ----------------------------------------------------------; CMake Error at /Users/tedtoal/src/salmon-0.7.2/cmake/UnitTests.cmake:7 (message):; Error running No such file or directory. ```. I looked in the tests directory and find program ""unitTests"", and when I run it, it succeeds:. ```; ===============================================================================; All tests passed (158 assertions in 4 test cases). ```. leading me to believe that actually, test1 succeeds, but something is wrong with the test system and it doesn't see that it succeeded.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/204
https://github.com/COMBINE-lab/salmon/issues/206:115,Integrability,protocol,protocol,115,"Hi,. I have run a RNAseq sample through Salmon with --l A option (library type); I was told regarding the in-house protocol to generate the library that ""The first read reads off the anti-sense strand, and the second reads off of the sense strand. From what I understand, the first read is reported as the sense strand, and the second read is reported as the anti-sense strand (as the reverse complement)"". i.e. similar to TruSeq (first read comes from anti-sense/reverse strand). That would translate into ISR according to http://salmon.readthedocs.io/en/latest/library_type.html. Yet from the Salmon quant log file = Automatically detected most likely library type as ISF.; If I run the same sample with -l ISF I get the warning:; Greater than 5% of the fragments disagreed with the provided library type; check the file: 2RD_1760_salmon_quant_ISF/lib_format_counts.json for details - ; which shows:; ""expected_format"": ""ISF"",; ""compatible_fragment_ratio"": 0.9281440552329109,; ""num_compatible_fragments"": 8223296,; ""num_assigned_fragments"": 8859935,; ""num_consistent_mappings"": 67110116,; ""num_inconsistent_mappings"": 13842824,; ""MSF"": 0,; ""OSF"": 120231,; ""ISF"": 67110116,; ""MSR"": 0,; ""OSR"": 12968,; ""ISR"": 11405988,; ""SF"": 1926077,; ""SR"": 353507,. I would be very grateful for a possible explanation. Thank you very much!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/206
https://github.com/COMBINE-lab/salmon/issues/206:633,Safety,detect,detected,633,"Hi,. I have run a RNAseq sample through Salmon with --l A option (library type); I was told regarding the in-house protocol to generate the library that ""The first read reads off the anti-sense strand, and the second reads off of the sense strand. From what I understand, the first read is reported as the sense strand, and the second read is reported as the anti-sense strand (as the reverse complement)"". i.e. similar to TruSeq (first read comes from anti-sense/reverse strand). That would translate into ISR according to http://salmon.readthedocs.io/en/latest/library_type.html. Yet from the Salmon quant log file = Automatically detected most likely library type as ISF.; If I run the same sample with -l ISF I get the warning:; Greater than 5% of the fragments disagreed with the provided library type; check the file: 2RD_1760_salmon_quant_ISF/lib_format_counts.json for details - ; which shows:; ""expected_format"": ""ISF"",; ""compatible_fragment_ratio"": 0.9281440552329109,; ""num_compatible_fragments"": 8223296,; ""num_assigned_fragments"": 8859935,; ""num_consistent_mappings"": 67110116,; ""num_inconsistent_mappings"": 13842824,; ""MSF"": 0,; ""OSF"": 120231,; ""ISF"": 67110116,; ""MSR"": 0,; ""OSR"": 12968,; ""ISR"": 11405988,; ""SF"": 1926077,; ""SR"": 353507,. I would be very grateful for a possible explanation. Thank you very much!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/206
https://github.com/COMBINE-lab/salmon/issues/206:608,Testability,log,log,608,"Hi,. I have run a RNAseq sample through Salmon with --l A option (library type); I was told regarding the in-house protocol to generate the library that ""The first read reads off the anti-sense strand, and the second reads off of the sense strand. From what I understand, the first read is reported as the sense strand, and the second read is reported as the anti-sense strand (as the reverse complement)"". i.e. similar to TruSeq (first read comes from anti-sense/reverse strand). That would translate into ISR according to http://salmon.readthedocs.io/en/latest/library_type.html. Yet from the Salmon quant log file = Automatically detected most likely library type as ISF.; If I run the same sample with -l ISF I get the warning:; Greater than 5% of the fragments disagreed with the provided library type; check the file: 2RD_1760_salmon_quant_ISF/lib_format_counts.json for details - ; which shows:; ""expected_format"": ""ISF"",; ""compatible_fragment_ratio"": 0.9281440552329109,; ""num_compatible_fragments"": 8223296,; ""num_assigned_fragments"": 8859935,; ""num_consistent_mappings"": 67110116,; ""num_inconsistent_mappings"": 13842824,; ""MSF"": 0,; ""OSF"": 120231,; ""ISF"": 67110116,; ""MSR"": 0,; ""OSR"": 12968,; ""ISR"": 11405988,; ""SF"": 1926077,; ""SR"": 353507,. I would be very grateful for a possible explanation. Thank you very much!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/206
https://github.com/COMBINE-lab/salmon/issues/207:1044,Availability,error,error,1044,"ux 17, and I suspect this is related to pthreads. ```; $ cat /home/bli/src/salmon/CMakeFiles/CMakeError.log ; Determining if the pthread_create exist failed with the following output:; Change Dir: /home/bli/src/salmon/CMakeFiles/CMakeTmp. Run Build Command:""/usr/bin/make"" ""cmTC_dc0cd/fast""; /usr/bin/make -f CMakeFiles/cmTC_dc0cd.dir/build.make CMakeFiles/cmTC_dc0cd.dir/build; make[1]: Entering directory '/home/bli/src/salmon/CMakeFiles/CMakeTmp'; Building C object CMakeFiles/cmTC_dc0cd.dir/CheckSymbolExists.c.o; /usr/bin/cc -o CMakeFiles/cmTC_dc0cd.dir/CheckSymbolExists.c.o -c /home/bli/src/salmon/CMakeFiles/CMakeTmp/CheckSymbolExists.c; Linking C executable cmTC_dc0cd; /usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_dc0cd.dir/link.txt --verbose=1; /usr/bin/cc CMakeFiles/cmTC_dc0cd.dir/CheckSymbolExists.c.o -o cmTC_dc0cd -rdynamic ; CMakeFiles/cmTC_dc0cd.dir/CheckSymbolExists.c.o: In function `main':; CheckSymbolExists.c:(.text+0x1b): undefined reference to `pthread_create'; collect2: error: ld returned 1 exit status; CMakeFiles/cmTC_dc0cd.dir/build.make:97: recipe for target 'cmTC_dc0cd' failed; make[1]: *** [cmTC_dc0cd] Error 1; make[1]: Leaving directory '/home/bli/src/salmon/CMakeFiles/CMakeTmp'; Makefile:126: recipe for target 'cmTC_dc0cd/fast' failed; make: *** [cmTC_dc0cd/fast] Error 2. File /home/bli/src/salmon/CMakeFiles/CMakeTmp/CheckSymbolExists.c:; /* */; #include <pthread.h>. int main(int argc, char** argv); {; (void)argv;; #ifndef pthread_create; return ((int*)(&pthread_create))[argc];; #else; (void)argc;; return 0;; #endif; }. Determining if the function pthread_create exists in the pthreads failed with the following output:; Change Dir: /home/bli/src/salmon/CMakeFiles/CMakeTmp. Run Build Command:""/usr/bin/make"" ""cmTC_dd9f2/fast""; /usr/bin/make -f CMakeFiles/cmTC_dd9f2.dir/build.make CMakeFiles/cmTC_dd9f2.dir/build; make[1]: Entering directory '/home/bli/src/salmon/CMakeFiles/CMakeTmp'; Building C object CMakeFiles/cmTC_dd9f2.dir/CheckFunctionExist",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/207
https://github.com/COMBINE-lab/salmon/issues/207:1184,Availability,Error,Error,1184,"r: /home/bli/src/salmon/CMakeFiles/CMakeTmp. Run Build Command:""/usr/bin/make"" ""cmTC_dc0cd/fast""; /usr/bin/make -f CMakeFiles/cmTC_dc0cd.dir/build.make CMakeFiles/cmTC_dc0cd.dir/build; make[1]: Entering directory '/home/bli/src/salmon/CMakeFiles/CMakeTmp'; Building C object CMakeFiles/cmTC_dc0cd.dir/CheckSymbolExists.c.o; /usr/bin/cc -o CMakeFiles/cmTC_dc0cd.dir/CheckSymbolExists.c.o -c /home/bli/src/salmon/CMakeFiles/CMakeTmp/CheckSymbolExists.c; Linking C executable cmTC_dc0cd; /usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_dc0cd.dir/link.txt --verbose=1; /usr/bin/cc CMakeFiles/cmTC_dc0cd.dir/CheckSymbolExists.c.o -o cmTC_dc0cd -rdynamic ; CMakeFiles/cmTC_dc0cd.dir/CheckSymbolExists.c.o: In function `main':; CheckSymbolExists.c:(.text+0x1b): undefined reference to `pthread_create'; collect2: error: ld returned 1 exit status; CMakeFiles/cmTC_dc0cd.dir/build.make:97: recipe for target 'cmTC_dc0cd' failed; make[1]: *** [cmTC_dc0cd] Error 1; make[1]: Leaving directory '/home/bli/src/salmon/CMakeFiles/CMakeTmp'; Makefile:126: recipe for target 'cmTC_dc0cd/fast' failed; make: *** [cmTC_dc0cd/fast] Error 2. File /home/bli/src/salmon/CMakeFiles/CMakeTmp/CheckSymbolExists.c:; /* */; #include <pthread.h>. int main(int argc, char** argv); {; (void)argv;; #ifndef pthread_create; return ((int*)(&pthread_create))[argc];; #else; (void)argc;; return 0;; #endif; }. Determining if the function pthread_create exists in the pthreads failed with the following output:; Change Dir: /home/bli/src/salmon/CMakeFiles/CMakeTmp. Run Build Command:""/usr/bin/make"" ""cmTC_dd9f2/fast""; /usr/bin/make -f CMakeFiles/cmTC_dd9f2.dir/build.make CMakeFiles/cmTC_dd9f2.dir/build; make[1]: Entering directory '/home/bli/src/salmon/CMakeFiles/CMakeTmp'; Building C object CMakeFiles/cmTC_dd9f2.dir/CheckFunctionExists.c.o; /usr/bin/cc -DCHECK_FUNCTION_EXISTS=pthread_create -o CMakeFiles/cmTC_dd9f2.dir/CheckFunctionExists.c.o -c /usr/share/cmake-3.7/Modules/CheckFunctionExists.c; Linking C executable cmTC_d",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/207
https://github.com/COMBINE-lab/salmon/issues/207:1350,Availability,Error,Error,1350,"r: /home/bli/src/salmon/CMakeFiles/CMakeTmp. Run Build Command:""/usr/bin/make"" ""cmTC_dc0cd/fast""; /usr/bin/make -f CMakeFiles/cmTC_dc0cd.dir/build.make CMakeFiles/cmTC_dc0cd.dir/build; make[1]: Entering directory '/home/bli/src/salmon/CMakeFiles/CMakeTmp'; Building C object CMakeFiles/cmTC_dc0cd.dir/CheckSymbolExists.c.o; /usr/bin/cc -o CMakeFiles/cmTC_dc0cd.dir/CheckSymbolExists.c.o -c /home/bli/src/salmon/CMakeFiles/CMakeTmp/CheckSymbolExists.c; Linking C executable cmTC_dc0cd; /usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_dc0cd.dir/link.txt --verbose=1; /usr/bin/cc CMakeFiles/cmTC_dc0cd.dir/CheckSymbolExists.c.o -o cmTC_dc0cd -rdynamic ; CMakeFiles/cmTC_dc0cd.dir/CheckSymbolExists.c.o: In function `main':; CheckSymbolExists.c:(.text+0x1b): undefined reference to `pthread_create'; collect2: error: ld returned 1 exit status; CMakeFiles/cmTC_dc0cd.dir/build.make:97: recipe for target 'cmTC_dc0cd' failed; make[1]: *** [cmTC_dc0cd] Error 1; make[1]: Leaving directory '/home/bli/src/salmon/CMakeFiles/CMakeTmp'; Makefile:126: recipe for target 'cmTC_dc0cd/fast' failed; make: *** [cmTC_dc0cd/fast] Error 2. File /home/bli/src/salmon/CMakeFiles/CMakeTmp/CheckSymbolExists.c:; /* */; #include <pthread.h>. int main(int argc, char** argv); {; (void)argv;; #ifndef pthread_create; return ((int*)(&pthread_create))[argc];; #else; (void)argc;; return 0;; #endif; }. Determining if the function pthread_create exists in the pthreads failed with the following output:; Change Dir: /home/bli/src/salmon/CMakeFiles/CMakeTmp. Run Build Command:""/usr/bin/make"" ""cmTC_dd9f2/fast""; /usr/bin/make -f CMakeFiles/cmTC_dd9f2.dir/build.make CMakeFiles/cmTC_dd9f2.dir/build; make[1]: Entering directory '/home/bli/src/salmon/CMakeFiles/CMakeTmp'; Building C object CMakeFiles/cmTC_dd9f2.dir/CheckFunctionExists.c.o; /usr/bin/cc -DCHECK_FUNCTION_EXISTS=pthread_create -o CMakeFiles/cmTC_dd9f2.dir/CheckFunctionExists.c.o -c /usr/share/cmake-3.7/Modules/CheckFunctionExists.c; Linking C executable cmTC_d",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/207
https://github.com/COMBINE-lab/salmon/issues/207:2509,Availability,error,error,2509,"oid)argv;; #ifndef pthread_create; return ((int*)(&pthread_create))[argc];; #else; (void)argc;; return 0;; #endif; }. Determining if the function pthread_create exists in the pthreads failed with the following output:; Change Dir: /home/bli/src/salmon/CMakeFiles/CMakeTmp. Run Build Command:""/usr/bin/make"" ""cmTC_dd9f2/fast""; /usr/bin/make -f CMakeFiles/cmTC_dd9f2.dir/build.make CMakeFiles/cmTC_dd9f2.dir/build; make[1]: Entering directory '/home/bli/src/salmon/CMakeFiles/CMakeTmp'; Building C object CMakeFiles/cmTC_dd9f2.dir/CheckFunctionExists.c.o; /usr/bin/cc -DCHECK_FUNCTION_EXISTS=pthread_create -o CMakeFiles/cmTC_dd9f2.dir/CheckFunctionExists.c.o -c /usr/share/cmake-3.7/Modules/CheckFunctionExists.c; Linking C executable cmTC_dd9f2; /usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_dd9f2.dir/link.txt --verbose=1; /usr/bin/cc -DCHECK_FUNCTION_EXISTS=pthread_create CMakeFiles/cmTC_dd9f2.dir/CheckFunctionExists.c.o -o cmTC_dd9f2 -rdynamic -lpthreads ; /usr/bin/ld: cannot find -lpthreads; collect2: error: ld returned 1 exit status; CMakeFiles/cmTC_dd9f2.dir/build.make:97: recipe for target 'cmTC_dd9f2' failed; make[1]: *** [cmTC_dd9f2] Error 1; make[1]: Leaving directory '/home/bli/src/salmon/CMakeFiles/CMakeTmp'; Makefile:126: recipe for target 'cmTC_dd9f2/fast' failed; make: *** [cmTC_dd9f2/fast] Error 2. ```. Some search on the internet suggests me that sometimes `-lpthread` should be used instead of `-lpthreads`. And indeed, if I try to compile the following code:; ```; #include <pthread.h>. int main(int argc, char** argv); {; (void)argv;; #ifndef pthread_create; return ((int*)(&pthread_create))[argc];; #else; (void)argc;; return 0;; #endif; }; ```. I observe a failure with `-lpthreads`:; ```; $ cc -lpthreads /home/bli/src/salmon/CMakeFiles/CMakeTmp/CheckSymbolExists.c; /usr/bin/ld: cannot find -lpthreads; collect2: error: ld returned 1 exit status; ```. And a success with `-lpthread`:. ```; $ cc -lpthread /home/bli/src/salmon/CMakeFiles/CMakeTmp/CheckSymbolExi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/207
https://github.com/COMBINE-lab/salmon/issues/207:2649,Availability,Error,Error,2649,"dif; }. Determining if the function pthread_create exists in the pthreads failed with the following output:; Change Dir: /home/bli/src/salmon/CMakeFiles/CMakeTmp. Run Build Command:""/usr/bin/make"" ""cmTC_dd9f2/fast""; /usr/bin/make -f CMakeFiles/cmTC_dd9f2.dir/build.make CMakeFiles/cmTC_dd9f2.dir/build; make[1]: Entering directory '/home/bli/src/salmon/CMakeFiles/CMakeTmp'; Building C object CMakeFiles/cmTC_dd9f2.dir/CheckFunctionExists.c.o; /usr/bin/cc -DCHECK_FUNCTION_EXISTS=pthread_create -o CMakeFiles/cmTC_dd9f2.dir/CheckFunctionExists.c.o -c /usr/share/cmake-3.7/Modules/CheckFunctionExists.c; Linking C executable cmTC_dd9f2; /usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_dd9f2.dir/link.txt --verbose=1; /usr/bin/cc -DCHECK_FUNCTION_EXISTS=pthread_create CMakeFiles/cmTC_dd9f2.dir/CheckFunctionExists.c.o -o cmTC_dd9f2 -rdynamic -lpthreads ; /usr/bin/ld: cannot find -lpthreads; collect2: error: ld returned 1 exit status; CMakeFiles/cmTC_dd9f2.dir/build.make:97: recipe for target 'cmTC_dd9f2' failed; make[1]: *** [cmTC_dd9f2] Error 1; make[1]: Leaving directory '/home/bli/src/salmon/CMakeFiles/CMakeTmp'; Makefile:126: recipe for target 'cmTC_dd9f2/fast' failed; make: *** [cmTC_dd9f2/fast] Error 2. ```. Some search on the internet suggests me that sometimes `-lpthread` should be used instead of `-lpthreads`. And indeed, if I try to compile the following code:; ```; #include <pthread.h>. int main(int argc, char** argv); {; (void)argv;; #ifndef pthread_create; return ((int*)(&pthread_create))[argc];; #else; (void)argc;; return 0;; #endif; }; ```. I observe a failure with `-lpthreads`:; ```; $ cc -lpthreads /home/bli/src/salmon/CMakeFiles/CMakeTmp/CheckSymbolExists.c; /usr/bin/ld: cannot find -lpthreads; collect2: error: ld returned 1 exit status; ```. And a success with `-lpthread`:. ```; $ cc -lpthread /home/bli/src/salmon/CMakeFiles/CMakeTmp/CheckSymbolExists.c; $ ; ```. However, I'm unable to find where I can fix this in the whole configuration and build process.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/207
https://github.com/COMBINE-lab/salmon/issues/207:2815,Availability,Error,Error,2815,"dif; }. Determining if the function pthread_create exists in the pthreads failed with the following output:; Change Dir: /home/bli/src/salmon/CMakeFiles/CMakeTmp. Run Build Command:""/usr/bin/make"" ""cmTC_dd9f2/fast""; /usr/bin/make -f CMakeFiles/cmTC_dd9f2.dir/build.make CMakeFiles/cmTC_dd9f2.dir/build; make[1]: Entering directory '/home/bli/src/salmon/CMakeFiles/CMakeTmp'; Building C object CMakeFiles/cmTC_dd9f2.dir/CheckFunctionExists.c.o; /usr/bin/cc -DCHECK_FUNCTION_EXISTS=pthread_create -o CMakeFiles/cmTC_dd9f2.dir/CheckFunctionExists.c.o -c /usr/share/cmake-3.7/Modules/CheckFunctionExists.c; Linking C executable cmTC_dd9f2; /usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_dd9f2.dir/link.txt --verbose=1; /usr/bin/cc -DCHECK_FUNCTION_EXISTS=pthread_create CMakeFiles/cmTC_dd9f2.dir/CheckFunctionExists.c.o -o cmTC_dd9f2 -rdynamic -lpthreads ; /usr/bin/ld: cannot find -lpthreads; collect2: error: ld returned 1 exit status; CMakeFiles/cmTC_dd9f2.dir/build.make:97: recipe for target 'cmTC_dd9f2' failed; make[1]: *** [cmTC_dd9f2] Error 1; make[1]: Leaving directory '/home/bli/src/salmon/CMakeFiles/CMakeTmp'; Makefile:126: recipe for target 'cmTC_dd9f2/fast' failed; make: *** [cmTC_dd9f2/fast] Error 2. ```. Some search on the internet suggests me that sometimes `-lpthread` should be used instead of `-lpthreads`. And indeed, if I try to compile the following code:; ```; #include <pthread.h>. int main(int argc, char** argv); {; (void)argv;; #ifndef pthread_create; return ((int*)(&pthread_create))[argc];; #else; (void)argc;; return 0;; #endif; }; ```. I observe a failure with `-lpthreads`:; ```; $ cc -lpthreads /home/bli/src/salmon/CMakeFiles/CMakeTmp/CheckSymbolExists.c; /usr/bin/ld: cannot find -lpthreads; collect2: error: ld returned 1 exit status; ```. And a success with `-lpthread`:. ```; $ cc -lpthread /home/bli/src/salmon/CMakeFiles/CMakeTmp/CheckSymbolExists.c; $ ; ```. However, I'm unable to find where I can fix this in the whole configuration and build process.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/207
https://github.com/COMBINE-lab/salmon/issues/207:3189,Availability,failure,failure,3189,"dif; }. Determining if the function pthread_create exists in the pthreads failed with the following output:; Change Dir: /home/bli/src/salmon/CMakeFiles/CMakeTmp. Run Build Command:""/usr/bin/make"" ""cmTC_dd9f2/fast""; /usr/bin/make -f CMakeFiles/cmTC_dd9f2.dir/build.make CMakeFiles/cmTC_dd9f2.dir/build; make[1]: Entering directory '/home/bli/src/salmon/CMakeFiles/CMakeTmp'; Building C object CMakeFiles/cmTC_dd9f2.dir/CheckFunctionExists.c.o; /usr/bin/cc -DCHECK_FUNCTION_EXISTS=pthread_create -o CMakeFiles/cmTC_dd9f2.dir/CheckFunctionExists.c.o -c /usr/share/cmake-3.7/Modules/CheckFunctionExists.c; Linking C executable cmTC_dd9f2; /usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_dd9f2.dir/link.txt --verbose=1; /usr/bin/cc -DCHECK_FUNCTION_EXISTS=pthread_create CMakeFiles/cmTC_dd9f2.dir/CheckFunctionExists.c.o -o cmTC_dd9f2 -rdynamic -lpthreads ; /usr/bin/ld: cannot find -lpthreads; collect2: error: ld returned 1 exit status; CMakeFiles/cmTC_dd9f2.dir/build.make:97: recipe for target 'cmTC_dd9f2' failed; make[1]: *** [cmTC_dd9f2] Error 1; make[1]: Leaving directory '/home/bli/src/salmon/CMakeFiles/CMakeTmp'; Makefile:126: recipe for target 'cmTC_dd9f2/fast' failed; make: *** [cmTC_dd9f2/fast] Error 2. ```. Some search on the internet suggests me that sometimes `-lpthread` should be used instead of `-lpthreads`. And indeed, if I try to compile the following code:; ```; #include <pthread.h>. int main(int argc, char** argv); {; (void)argv;; #ifndef pthread_create; return ((int*)(&pthread_create))[argc];; #else; (void)argc;; return 0;; #endif; }; ```. I observe a failure with `-lpthreads`:; ```; $ cc -lpthreads /home/bli/src/salmon/CMakeFiles/CMakeTmp/CheckSymbolExists.c; /usr/bin/ld: cannot find -lpthreads; collect2: error: ld returned 1 exit status; ```. And a success with `-lpthread`:. ```; $ cc -lpthread /home/bli/src/salmon/CMakeFiles/CMakeTmp/CheckSymbolExists.c; $ ; ```. However, I'm unable to find where I can fix this in the whole configuration and build process.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/207
https://github.com/COMBINE-lab/salmon/issues/207:3347,Availability,error,error,3347,"dif; }. Determining if the function pthread_create exists in the pthreads failed with the following output:; Change Dir: /home/bli/src/salmon/CMakeFiles/CMakeTmp. Run Build Command:""/usr/bin/make"" ""cmTC_dd9f2/fast""; /usr/bin/make -f CMakeFiles/cmTC_dd9f2.dir/build.make CMakeFiles/cmTC_dd9f2.dir/build; make[1]: Entering directory '/home/bli/src/salmon/CMakeFiles/CMakeTmp'; Building C object CMakeFiles/cmTC_dd9f2.dir/CheckFunctionExists.c.o; /usr/bin/cc -DCHECK_FUNCTION_EXISTS=pthread_create -o CMakeFiles/cmTC_dd9f2.dir/CheckFunctionExists.c.o -c /usr/share/cmake-3.7/Modules/CheckFunctionExists.c; Linking C executable cmTC_dd9f2; /usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_dd9f2.dir/link.txt --verbose=1; /usr/bin/cc -DCHECK_FUNCTION_EXISTS=pthread_create CMakeFiles/cmTC_dd9f2.dir/CheckFunctionExists.c.o -o cmTC_dd9f2 -rdynamic -lpthreads ; /usr/bin/ld: cannot find -lpthreads; collect2: error: ld returned 1 exit status; CMakeFiles/cmTC_dd9f2.dir/build.make:97: recipe for target 'cmTC_dd9f2' failed; make[1]: *** [cmTC_dd9f2] Error 1; make[1]: Leaving directory '/home/bli/src/salmon/CMakeFiles/CMakeTmp'; Makefile:126: recipe for target 'cmTC_dd9f2/fast' failed; make: *** [cmTC_dd9f2/fast] Error 2. ```. Some search on the internet suggests me that sometimes `-lpthread` should be used instead of `-lpthreads`. And indeed, if I try to compile the following code:; ```; #include <pthread.h>. int main(int argc, char** argv); {; (void)argv;; #ifndef pthread_create; return ((int*)(&pthread_create))[argc];; #else; (void)argc;; return 0;; #endif; }; ```. I observe a failure with `-lpthreads`:; ```; $ cc -lpthreads /home/bli/src/salmon/CMakeFiles/CMakeTmp/CheckSymbolExists.c; /usr/bin/ld: cannot find -lpthreads; collect2: error: ld returned 1 exit status; ```. And a success with `-lpthread`:. ```; $ cc -lpthread /home/bli/src/salmon/CMakeFiles/CMakeTmp/CheckSymbolExists.c; $ ; ```. However, I'm unable to find where I can fix this in the whole configuration and build process.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/207
https://github.com/COMBINE-lab/salmon/issues/207:3572,Deployability,configurat,configuration,3572,"dif; }. Determining if the function pthread_create exists in the pthreads failed with the following output:; Change Dir: /home/bli/src/salmon/CMakeFiles/CMakeTmp. Run Build Command:""/usr/bin/make"" ""cmTC_dd9f2/fast""; /usr/bin/make -f CMakeFiles/cmTC_dd9f2.dir/build.make CMakeFiles/cmTC_dd9f2.dir/build; make[1]: Entering directory '/home/bli/src/salmon/CMakeFiles/CMakeTmp'; Building C object CMakeFiles/cmTC_dd9f2.dir/CheckFunctionExists.c.o; /usr/bin/cc -DCHECK_FUNCTION_EXISTS=pthread_create -o CMakeFiles/cmTC_dd9f2.dir/CheckFunctionExists.c.o -c /usr/share/cmake-3.7/Modules/CheckFunctionExists.c; Linking C executable cmTC_dd9f2; /usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_dd9f2.dir/link.txt --verbose=1; /usr/bin/cc -DCHECK_FUNCTION_EXISTS=pthread_create CMakeFiles/cmTC_dd9f2.dir/CheckFunctionExists.c.o -o cmTC_dd9f2 -rdynamic -lpthreads ; /usr/bin/ld: cannot find -lpthreads; collect2: error: ld returned 1 exit status; CMakeFiles/cmTC_dd9f2.dir/build.make:97: recipe for target 'cmTC_dd9f2' failed; make[1]: *** [cmTC_dd9f2] Error 1; make[1]: Leaving directory '/home/bli/src/salmon/CMakeFiles/CMakeTmp'; Makefile:126: recipe for target 'cmTC_dd9f2/fast' failed; make: *** [cmTC_dd9f2/fast] Error 2. ```. Some search on the internet suggests me that sometimes `-lpthread` should be used instead of `-lpthreads`. And indeed, if I try to compile the following code:; ```; #include <pthread.h>. int main(int argc, char** argv); {; (void)argv;; #ifndef pthread_create; return ((int*)(&pthread_create))[argc];; #else; (void)argc;; return 0;; #endif; }; ```. I observe a failure with `-lpthreads`:; ```; $ cc -lpthreads /home/bli/src/salmon/CMakeFiles/CMakeTmp/CheckSymbolExists.c; /usr/bin/ld: cannot find -lpthreads; collect2: error: ld returned 1 exit status; ```. And a success with `-lpthread`:. ```; $ cc -lpthread /home/bli/src/salmon/CMakeFiles/CMakeTmp/CheckSymbolExists.c; $ ; ```. However, I'm unable to find where I can fix this in the whole configuration and build process.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/207
https://github.com/COMBINE-lab/salmon/issues/207:3572,Modifiability,config,configuration,3572,"dif; }. Determining if the function pthread_create exists in the pthreads failed with the following output:; Change Dir: /home/bli/src/salmon/CMakeFiles/CMakeTmp. Run Build Command:""/usr/bin/make"" ""cmTC_dd9f2/fast""; /usr/bin/make -f CMakeFiles/cmTC_dd9f2.dir/build.make CMakeFiles/cmTC_dd9f2.dir/build; make[1]: Entering directory '/home/bli/src/salmon/CMakeFiles/CMakeTmp'; Building C object CMakeFiles/cmTC_dd9f2.dir/CheckFunctionExists.c.o; /usr/bin/cc -DCHECK_FUNCTION_EXISTS=pthread_create -o CMakeFiles/cmTC_dd9f2.dir/CheckFunctionExists.c.o -c /usr/share/cmake-3.7/Modules/CheckFunctionExists.c; Linking C executable cmTC_dd9f2; /usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_dd9f2.dir/link.txt --verbose=1; /usr/bin/cc -DCHECK_FUNCTION_EXISTS=pthread_create CMakeFiles/cmTC_dd9f2.dir/CheckFunctionExists.c.o -o cmTC_dd9f2 -rdynamic -lpthreads ; /usr/bin/ld: cannot find -lpthreads; collect2: error: ld returned 1 exit status; CMakeFiles/cmTC_dd9f2.dir/build.make:97: recipe for target 'cmTC_dd9f2' failed; make[1]: *** [cmTC_dd9f2] Error 1; make[1]: Leaving directory '/home/bli/src/salmon/CMakeFiles/CMakeTmp'; Makefile:126: recipe for target 'cmTC_dd9f2/fast' failed; make: *** [cmTC_dd9f2/fast] Error 2. ```. Some search on the internet suggests me that sometimes `-lpthread` should be used instead of `-lpthreads`. And indeed, if I try to compile the following code:; ```; #include <pthread.h>. int main(int argc, char** argv); {; (void)argv;; #ifndef pthread_create; return ((int*)(&pthread_create))[argc];; #else; (void)argc;; return 0;; #endif; }; ```. I observe a failure with `-lpthreads`:; ```; $ cc -lpthreads /home/bli/src/salmon/CMakeFiles/CMakeTmp/CheckSymbolExists.c; /usr/bin/ld: cannot find -lpthreads; collect2: error: ld returned 1 exit status; ```. And a success with `-lpthread`:. ```; $ cc -lpthread /home/bli/src/salmon/CMakeFiles/CMakeTmp/CheckSymbolExists.c; $ ; ```. However, I'm unable to find where I can fix this in the whole configuration and build process.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/207
https://github.com/COMBINE-lab/salmon/issues/207:144,Testability,log,log,144,"Compilation of salmon fails under MX Linux 17, and I suspect this is related to pthreads. ```; $ cat /home/bli/src/salmon/CMakeFiles/CMakeError.log ; Determining if the pthread_create exist failed with the following output:; Change Dir: /home/bli/src/salmon/CMakeFiles/CMakeTmp. Run Build Command:""/usr/bin/make"" ""cmTC_dc0cd/fast""; /usr/bin/make -f CMakeFiles/cmTC_dc0cd.dir/build.make CMakeFiles/cmTC_dc0cd.dir/build; make[1]: Entering directory '/home/bli/src/salmon/CMakeFiles/CMakeTmp'; Building C object CMakeFiles/cmTC_dc0cd.dir/CheckSymbolExists.c.o; /usr/bin/cc -o CMakeFiles/cmTC_dc0cd.dir/CheckSymbolExists.c.o -c /home/bli/src/salmon/CMakeFiles/CMakeTmp/CheckSymbolExists.c; Linking C executable cmTC_dc0cd; /usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_dc0cd.dir/link.txt --verbose=1; /usr/bin/cc CMakeFiles/cmTC_dc0cd.dir/CheckSymbolExists.c.o -o cmTC_dc0cd -rdynamic ; CMakeFiles/cmTC_dc0cd.dir/CheckSymbolExists.c.o: In function `main':; CheckSymbolExists.c:(.text+0x1b): undefined reference to `pthread_create'; collect2: error: ld returned 1 exit status; CMakeFiles/cmTC_dc0cd.dir/build.make:97: recipe for target 'cmTC_dc0cd' failed; make[1]: *** [cmTC_dc0cd] Error 1; make[1]: Leaving directory '/home/bli/src/salmon/CMakeFiles/CMakeTmp'; Makefile:126: recipe for target 'cmTC_dc0cd/fast' failed; make: *** [cmTC_dc0cd/fast] Error 2. File /home/bli/src/salmon/CMakeFiles/CMakeTmp/CheckSymbolExists.c:; /* */; #include <pthread.h>. int main(int argc, char** argv); {; (void)argv;; #ifndef pthread_create; return ((int*)(&pthread_create))[argc];; #else; (void)argc;; return 0;; #endif; }. Determining if the function pthread_create exists in the pthreads failed with the following output:; Change Dir: /home/bli/src/salmon/CMakeFiles/CMakeTmp. Run Build Command:""/usr/bin/make"" ""cmTC_dd9f2/fast""; /usr/bin/make -f CMakeFiles/cmTC_dd9f2.dir/build.make CMakeFiles/cmTC_dd9f2.dir/build; make[1]: Entering directory '/home/bli/src/salmon/CMakeFiles/CMakeTmp'; Building C object CMak",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/207
https://github.com/COMBINE-lab/salmon/issues/208:98,Integrability,message,messages,98,"Hello Rob,; First, thanks for developing Salmon!. When running Salmon quant (v 0.91), I'm getting messages like this "" [warning] couldn't find transcript named [uc022cpe.1] in transcript <-> gene map; returning transcript as it's own gene"" for all the transcripts although the -g option is in use. . This happens even though my file does contain the relevant gene and transcript names, since when I search for the transcripts, I do find them in the GTF file:; grep uc022cpe.1 ~/gtf_files/hg19_UCSCgenes_gene_names.gtf; chrY	hg19_knownGene	exon	28507136	28507239	0.000000	+	.	gene_id ""U6""; transcript_id ""uc022cpe.1"";. My command line was: . ~/miniconda2/envs/salmon/bin/salmon quant -i ~/salmon/hg19_index_v0.91 -l A -1 <(bunzip2 -c my_fastq_1.fastq.bz2) -2 <(bunzip2 -c my_fastq_2.fastq.bz2) -o my_output -g ~/gtf_files/hg19_UCSCgenes_gene_names.gtf. Any suggestion? . Than you for your support,; Doron",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/208
https://github.com/COMBINE-lab/salmon/issues/209:201,Availability,error,error,201,"I used salmon 0.9.1 successfully a few weeks ago. I am using the latest update according to miniconda. Now after typing in this script in the command line in my Terminal on my Mac, I get the following error message. I have tried to trouble shoot but I have not been able to solve the problem. . salmon quant -i cs_index -l A -r fastqtrimd/BOD19_5R1trimd.fastq.gz -o quant/BOD19_5R1_quant —seqBias --gcBias --writeUnmappedNames. Here is the error message in the command line:. Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { cs_index }; ### [ libType ] => { A }; ### [ unmatedReads ] => { BOD19_5R1trimd.fastq.gz }; ### [ output ] => { BOD19_5R1_quant }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ writeUnmappedNames ] => { }; Logs will be written to BOD19_5R1_quant/logs; [2018-03-19 12:13:21.295] [jointLog] [info] parsing read library format; [2018-03-19 12:13:21.295] [jointLog] [info] There is 1 library.; [2018-03-19 12:13:21.402] [jointLog] [info] Loading Quasi index; [2018-03-19 12:13:21.403] [jointLog] [info] Loading 32-bit quasi index; Exception : [Failed to read 8 bytes from input stream! Read 0]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2018-03-19 12:13:21.403] [stderrLog] [info] Loading Suffix Array . Does anyone have any ideas what is wrong? Sorry I am a novice!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/209
https://github.com/COMBINE-lab/salmon/issues/209:440,Availability,error,error,440,"I used salmon 0.9.1 successfully a few weeks ago. I am using the latest update according to miniconda. Now after typing in this script in the command line in my Terminal on my Mac, I get the following error message. I have tried to trouble shoot but I have not been able to solve the problem. . salmon quant -i cs_index -l A -r fastqtrimd/BOD19_5R1trimd.fastq.gz -o quant/BOD19_5R1_quant —seqBias --gcBias --writeUnmappedNames. Here is the error message in the command line:. Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { cs_index }; ### [ libType ] => { A }; ### [ unmatedReads ] => { BOD19_5R1trimd.fastq.gz }; ### [ output ] => { BOD19_5R1_quant }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ writeUnmappedNames ] => { }; Logs will be written to BOD19_5R1_quant/logs; [2018-03-19 12:13:21.295] [jointLog] [info] parsing read library format; [2018-03-19 12:13:21.295] [jointLog] [info] There is 1 library.; [2018-03-19 12:13:21.402] [jointLog] [info] Loading Quasi index; [2018-03-19 12:13:21.403] [jointLog] [info] Loading 32-bit quasi index; Exception : [Failed to read 8 bytes from input stream! Read 0]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2018-03-19 12:13:21.403] [stderrLog] [info] Loading Suffix Array . Does anyone have any ideas what is wrong? Sorry I am a novice!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/209
https://github.com/COMBINE-lab/salmon/issues/209:72,Deployability,update,update,72,"I used salmon 0.9.1 successfully a few weeks ago. I am using the latest update according to miniconda. Now after typing in this script in the command line in my Terminal on my Mac, I get the following error message. I have tried to trouble shoot but I have not been able to solve the problem. . salmon quant -i cs_index -l A -r fastqtrimd/BOD19_5R1trimd.fastq.gz -o quant/BOD19_5R1_quant —seqBias --gcBias --writeUnmappedNames. Here is the error message in the command line:. Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { cs_index }; ### [ libType ] => { A }; ### [ unmatedReads ] => { BOD19_5R1trimd.fastq.gz }; ### [ output ] => { BOD19_5R1_quant }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ writeUnmappedNames ] => { }; Logs will be written to BOD19_5R1_quant/logs; [2018-03-19 12:13:21.295] [jointLog] [info] parsing read library format; [2018-03-19 12:13:21.295] [jointLog] [info] There is 1 library.; [2018-03-19 12:13:21.402] [jointLog] [info] Loading Quasi index; [2018-03-19 12:13:21.403] [jointLog] [info] Loading 32-bit quasi index; Exception : [Failed to read 8 bytes from input stream! Read 0]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2018-03-19 12:13:21.403] [stderrLog] [info] Loading Suffix Array . Does anyone have any ideas what is wrong? Sorry I am a novice!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/209
https://github.com/COMBINE-lab/salmon/issues/209:508,Deployability,upgrade,upgrade,508,"I used salmon 0.9.1 successfully a few weeks ago. I am using the latest update according to miniconda. Now after typing in this script in the command line in my Terminal on my Mac, I get the following error message. I have tried to trouble shoot but I have not been able to solve the problem. . salmon quant -i cs_index -l A -r fastqtrimd/BOD19_5R1trimd.fastq.gz -o quant/BOD19_5R1_quant —seqBias --gcBias --writeUnmappedNames. Here is the error message in the command line:. Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { cs_index }; ### [ libType ] => { A }; ### [ unmatedReads ] => { BOD19_5R1trimd.fastq.gz }; ### [ output ] => { BOD19_5R1_quant }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ writeUnmappedNames ] => { }; Logs will be written to BOD19_5R1_quant/logs; [2018-03-19 12:13:21.295] [jointLog] [info] parsing read library format; [2018-03-19 12:13:21.295] [jointLog] [info] There is 1 library.; [2018-03-19 12:13:21.402] [jointLog] [info] Loading Quasi index; [2018-03-19 12:13:21.403] [jointLog] [info] Loading 32-bit quasi index; Exception : [Failed to read 8 bytes from input stream! Read 0]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2018-03-19 12:13:21.403] [stderrLog] [info] Loading Suffix Array . Does anyone have any ideas what is wrong? Sorry I am a novice!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/209
https://github.com/COMBINE-lab/salmon/issues/209:560,Deployability,upgrade,upgrades,560,"I used salmon 0.9.1 successfully a few weeks ago. I am using the latest update according to miniconda. Now after typing in this script in the command line in my Terminal on my Mac, I get the following error message. I have tried to trouble shoot but I have not been able to solve the problem. . salmon quant -i cs_index -l A -r fastqtrimd/BOD19_5R1trimd.fastq.gz -o quant/BOD19_5R1_quant —seqBias --gcBias --writeUnmappedNames. Here is the error message in the command line:. Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { cs_index }; ### [ libType ] => { A }; ### [ unmatedReads ] => { BOD19_5R1trimd.fastq.gz }; ### [ output ] => { BOD19_5R1_quant }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ writeUnmappedNames ] => { }; Logs will be written to BOD19_5R1_quant/logs; [2018-03-19 12:13:21.295] [jointLog] [info] parsing read library format; [2018-03-19 12:13:21.295] [jointLog] [info] There is 1 library.; [2018-03-19 12:13:21.402] [jointLog] [info] Loading Quasi index; [2018-03-19 12:13:21.403] [jointLog] [info] Loading 32-bit quasi index; Exception : [Failed to read 8 bytes from input stream! Read 0]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2018-03-19 12:13:21.403] [stderrLog] [info] Loading Suffix Array . Does anyone have any ideas what is wrong? Sorry I am a novice!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/209
https://github.com/COMBINE-lab/salmon/issues/209:207,Integrability,message,message,207,"I used salmon 0.9.1 successfully a few weeks ago. I am using the latest update according to miniconda. Now after typing in this script in the command line in my Terminal on my Mac, I get the following error message. I have tried to trouble shoot but I have not been able to solve the problem. . salmon quant -i cs_index -l A -r fastqtrimd/BOD19_5R1trimd.fastq.gz -o quant/BOD19_5R1_quant —seqBias --gcBias --writeUnmappedNames. Here is the error message in the command line:. Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { cs_index }; ### [ libType ] => { A }; ### [ unmatedReads ] => { BOD19_5R1trimd.fastq.gz }; ### [ output ] => { BOD19_5R1_quant }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ writeUnmappedNames ] => { }; Logs will be written to BOD19_5R1_quant/logs; [2018-03-19 12:13:21.295] [jointLog] [info] parsing read library format; [2018-03-19 12:13:21.295] [jointLog] [info] There is 1 library.; [2018-03-19 12:13:21.402] [jointLog] [info] Loading Quasi index; [2018-03-19 12:13:21.403] [jointLog] [info] Loading 32-bit quasi index; Exception : [Failed to read 8 bytes from input stream! Read 0]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2018-03-19 12:13:21.403] [stderrLog] [info] Loading Suffix Array . Does anyone have any ideas what is wrong? Sorry I am a novice!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/209
https://github.com/COMBINE-lab/salmon/issues/209:446,Integrability,message,message,446,"I used salmon 0.9.1 successfully a few weeks ago. I am using the latest update according to miniconda. Now after typing in this script in the command line in my Terminal on my Mac, I get the following error message. I have tried to trouble shoot but I have not been able to solve the problem. . salmon quant -i cs_index -l A -r fastqtrimd/BOD19_5R1trimd.fastq.gz -o quant/BOD19_5R1_quant —seqBias --gcBias --writeUnmappedNames. Here is the error message in the command line:. Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { cs_index }; ### [ libType ] => { A }; ### [ unmatedReads ] => { BOD19_5R1trimd.fastq.gz }; ### [ output ] => { BOD19_5R1_quant }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ writeUnmappedNames ] => { }; Logs will be written to BOD19_5R1_quant/logs; [2018-03-19 12:13:21.295] [jointLog] [info] parsing read library format; [2018-03-19 12:13:21.295] [jointLog] [info] There is 1 library.; [2018-03-19 12:13:21.402] [jointLog] [info] Loading Quasi index; [2018-03-19 12:13:21.403] [jointLog] [info] Loading 32-bit quasi index; Exception : [Failed to read 8 bytes from input stream! Read 0]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2018-03-19 12:13:21.403] [stderrLog] [info] Loading Suffix Array . Does anyone have any ideas what is wrong? Sorry I am a novice!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/209
https://github.com/COMBINE-lab/salmon/issues/209:1168,Performance,Load,Loading,1168,"I used salmon 0.9.1 successfully a few weeks ago. I am using the latest update according to miniconda. Now after typing in this script in the command line in my Terminal on my Mac, I get the following error message. I have tried to trouble shoot but I have not been able to solve the problem. . salmon quant -i cs_index -l A -r fastqtrimd/BOD19_5R1trimd.fastq.gz -o quant/BOD19_5R1_quant —seqBias --gcBias --writeUnmappedNames. Here is the error message in the command line:. Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { cs_index }; ### [ libType ] => { A }; ### [ unmatedReads ] => { BOD19_5R1trimd.fastq.gz }; ### [ output ] => { BOD19_5R1_quant }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ writeUnmappedNames ] => { }; Logs will be written to BOD19_5R1_quant/logs; [2018-03-19 12:13:21.295] [jointLog] [info] parsing read library format; [2018-03-19 12:13:21.295] [jointLog] [info] There is 1 library.; [2018-03-19 12:13:21.402] [jointLog] [info] Loading Quasi index; [2018-03-19 12:13:21.403] [jointLog] [info] Loading 32-bit quasi index; Exception : [Failed to read 8 bytes from input stream! Read 0]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2018-03-19 12:13:21.403] [stderrLog] [info] Loading Suffix Array . Does anyone have any ideas what is wrong? Sorry I am a novice!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/209
https://github.com/COMBINE-lab/salmon/issues/209:1233,Performance,Load,Loading,1233,"I used salmon 0.9.1 successfully a few weeks ago. I am using the latest update according to miniconda. Now after typing in this script in the command line in my Terminal on my Mac, I get the following error message. I have tried to trouble shoot but I have not been able to solve the problem. . salmon quant -i cs_index -l A -r fastqtrimd/BOD19_5R1trimd.fastq.gz -o quant/BOD19_5R1_quant —seqBias --gcBias --writeUnmappedNames. Here is the error message in the command line:. Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { cs_index }; ### [ libType ] => { A }; ### [ unmatedReads ] => { BOD19_5R1trimd.fastq.gz }; ### [ output ] => { BOD19_5R1_quant }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ writeUnmappedNames ] => { }; Logs will be written to BOD19_5R1_quant/logs; [2018-03-19 12:13:21.295] [jointLog] [info] parsing read library format; [2018-03-19 12:13:21.295] [jointLog] [info] There is 1 library.; [2018-03-19 12:13:21.402] [jointLog] [info] Loading Quasi index; [2018-03-19 12:13:21.403] [jointLog] [info] Loading 32-bit quasi index; Exception : [Failed to read 8 bytes from input stream! Read 0]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2018-03-19 12:13:21.403] [stderrLog] [info] Loading Suffix Array . Does anyone have any ideas what is wrong? Sorry I am a novice!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/209
https://github.com/COMBINE-lab/salmon/issues/209:1466,Performance,Load,Loading,1466,"I used salmon 0.9.1 successfully a few weeks ago. I am using the latest update according to miniconda. Now after typing in this script in the command line in my Terminal on my Mac, I get the following error message. I have tried to trouble shoot but I have not been able to solve the problem. . salmon quant -i cs_index -l A -r fastqtrimd/BOD19_5R1trimd.fastq.gz -o quant/BOD19_5R1_quant —seqBias --gcBias --writeUnmappedNames. Here is the error message in the command line:. Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { cs_index }; ### [ libType ] => { A }; ### [ unmatedReads ] => { BOD19_5R1trimd.fastq.gz }; ### [ output ] => { BOD19_5R1_quant }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ writeUnmappedNames ] => { }; Logs will be written to BOD19_5R1_quant/logs; [2018-03-19 12:13:21.295] [jointLog] [info] parsing read library format; [2018-03-19 12:13:21.295] [jointLog] [info] There is 1 library.; [2018-03-19 12:13:21.402] [jointLog] [info] Loading Quasi index; [2018-03-19 12:13:21.403] [jointLog] [info] Loading 32-bit quasi index; Exception : [Failed to read 8 bytes from input stream! Read 0]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2018-03-19 12:13:21.403] [stderrLog] [info] Loading Suffix Array . Does anyone have any ideas what is wrong? Sorry I am a novice!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/209
https://github.com/COMBINE-lab/salmon/issues/209:940,Testability,Log,Logs,940,"I used salmon 0.9.1 successfully a few weeks ago. I am using the latest update according to miniconda. Now after typing in this script in the command line in my Terminal on my Mac, I get the following error message. I have tried to trouble shoot but I have not been able to solve the problem. . salmon quant -i cs_index -l A -r fastqtrimd/BOD19_5R1trimd.fastq.gz -o quant/BOD19_5R1_quant —seqBias --gcBias --writeUnmappedNames. Here is the error message in the command line:. Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { cs_index }; ### [ libType ] => { A }; ### [ unmatedReads ] => { BOD19_5R1trimd.fastq.gz }; ### [ output ] => { BOD19_5R1_quant }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ writeUnmappedNames ] => { }; Logs will be written to BOD19_5R1_quant/logs; [2018-03-19 12:13:21.295] [jointLog] [info] parsing read library format; [2018-03-19 12:13:21.295] [jointLog] [info] There is 1 library.; [2018-03-19 12:13:21.402] [jointLog] [info] Loading Quasi index; [2018-03-19 12:13:21.403] [jointLog] [info] Loading 32-bit quasi index; Exception : [Failed to read 8 bytes from input stream! Read 0]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2018-03-19 12:13:21.403] [stderrLog] [info] Loading Suffix Array . Does anyone have any ideas what is wrong? Sorry I am a novice!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/209
https://github.com/COMBINE-lab/salmon/issues/209:980,Testability,log,logs,980,"I used salmon 0.9.1 successfully a few weeks ago. I am using the latest update according to miniconda. Now after typing in this script in the command line in my Terminal on my Mac, I get the following error message. I have tried to trouble shoot but I have not been able to solve the problem. . salmon quant -i cs_index -l A -r fastqtrimd/BOD19_5R1trimd.fastq.gz -o quant/BOD19_5R1_quant —seqBias --gcBias --writeUnmappedNames. Here is the error message in the command line:. Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { cs_index }; ### [ libType ] => { A }; ### [ unmatedReads ] => { BOD19_5R1trimd.fastq.gz }; ### [ output ] => { BOD19_5R1_quant }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ writeUnmappedNames ] => { }; Logs will be written to BOD19_5R1_quant/logs; [2018-03-19 12:13:21.295] [jointLog] [info] parsing read library format; [2018-03-19 12:13:21.295] [jointLog] [info] There is 1 library.; [2018-03-19 12:13:21.402] [jointLog] [info] Loading Quasi index; [2018-03-19 12:13:21.403] [jointLog] [info] Loading 32-bit quasi index; Exception : [Failed to read 8 bytes from input stream! Read 0]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2018-03-19 12:13:21.403] [stderrLog] [info] Loading Suffix Array . Does anyone have any ideas what is wrong? Sorry I am a novice!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/209
https://github.com/COMBINE-lab/salmon/issues/210:109,Availability,error,error,109,"Hi,. I am using salmon quant v0.91 to map some reads against ce11 genome. . But the run fails with a cryptic error message, maybe you can help me sort this out.; ```; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_index }; ### [ libType ] => { A }; ### [ threads ] => { 8 }; ### [ mates1 ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/trimmed_reads/rluc_2_R1.fastq.gz }; ### [ mates2 ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/trimmed_reads/rluc_2_R2.fastq.gz }; ### [ output ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_output/rluc_2 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ geneMap ] => { /data/akalin/Base/Annotation/ce11/ENSEMBL91/Caenorhabditis_elegans.WBcel235.91.gtf }; Logs will be written to /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_output/rluc_2/logs; [2018-03-21 10:00:03.272] [jointLog] [info] parsing read library format; [2018-03-21 10:00:03.272] [jointLog] [info] There is 1 library.; [2018-03-21 10:00:03.517] [stderrLog] [info] Loading Suffix Array; [2018-03-21 10:00:03.501] [jointLog] [info] Loading Quasi index; [2018-03-21 10:00:03.506] [jointLog] [info] Loading 32-bit quasi index; [2018-03-21 10:00:03.846] [stderrLog] [info] Loading Transcript Info; [2018-03-21 10:00:03.980] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-03-21 10:00:03.995] [stderrLog] [info] There were 35448 set bits in the bit array; [2018-03-21 10:00:04.001] [stderrLog] [info] Computing transcript lengths; [2018-03-21 10:00:04.001] [stderrLog] [info] Waiting to finish loading hash; [2018-03-21 10:00:40.560] [stderrLog] [info] Done loading index; [2018-03-21 10:00:40.560] [jointLog] [info] done; [2018-03-21",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/210
https://github.com/COMBINE-lab/salmon/issues/210:199,Deployability,upgrade,upgrade,199,"Hi,. I am using salmon quant v0.91 to map some reads against ce11 genome. . But the run fails with a cryptic error message, maybe you can help me sort this out.; ```; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_index }; ### [ libType ] => { A }; ### [ threads ] => { 8 }; ### [ mates1 ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/trimmed_reads/rluc_2_R1.fastq.gz }; ### [ mates2 ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/trimmed_reads/rluc_2_R2.fastq.gz }; ### [ output ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_output/rluc_2 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ geneMap ] => { /data/akalin/Base/Annotation/ce11/ENSEMBL91/Caenorhabditis_elegans.WBcel235.91.gtf }; Logs will be written to /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_output/rluc_2/logs; [2018-03-21 10:00:03.272] [jointLog] [info] parsing read library format; [2018-03-21 10:00:03.272] [jointLog] [info] There is 1 library.; [2018-03-21 10:00:03.517] [stderrLog] [info] Loading Suffix Array; [2018-03-21 10:00:03.501] [jointLog] [info] Loading Quasi index; [2018-03-21 10:00:03.506] [jointLog] [info] Loading 32-bit quasi index; [2018-03-21 10:00:03.846] [stderrLog] [info] Loading Transcript Info; [2018-03-21 10:00:03.980] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-03-21 10:00:03.995] [stderrLog] [info] There were 35448 set bits in the bit array; [2018-03-21 10:00:04.001] [stderrLog] [info] Computing transcript lengths; [2018-03-21 10:00:04.001] [stderrLog] [info] Waiting to finish loading hash; [2018-03-21 10:00:40.560] [stderrLog] [info] Done loading index; [2018-03-21 10:00:40.560] [jointLog] [info] done; [2018-03-21",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/210
https://github.com/COMBINE-lab/salmon/issues/210:251,Deployability,upgrade,upgrades,251,"Hi,. I am using salmon quant v0.91 to map some reads against ce11 genome. . But the run fails with a cryptic error message, maybe you can help me sort this out.; ```; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_index }; ### [ libType ] => { A }; ### [ threads ] => { 8 }; ### [ mates1 ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/trimmed_reads/rluc_2_R1.fastq.gz }; ### [ mates2 ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/trimmed_reads/rluc_2_R2.fastq.gz }; ### [ output ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_output/rluc_2 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ geneMap ] => { /data/akalin/Base/Annotation/ce11/ENSEMBL91/Caenorhabditis_elegans.WBcel235.91.gtf }; Logs will be written to /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_output/rluc_2/logs; [2018-03-21 10:00:03.272] [jointLog] [info] parsing read library format; [2018-03-21 10:00:03.272] [jointLog] [info] There is 1 library.; [2018-03-21 10:00:03.517] [stderrLog] [info] Loading Suffix Array; [2018-03-21 10:00:03.501] [jointLog] [info] Loading Quasi index; [2018-03-21 10:00:03.506] [jointLog] [info] Loading 32-bit quasi index; [2018-03-21 10:00:03.846] [stderrLog] [info] Loading Transcript Info; [2018-03-21 10:00:03.980] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-03-21 10:00:03.995] [stderrLog] [info] There were 35448 set bits in the bit array; [2018-03-21 10:00:04.001] [stderrLog] [info] Computing transcript lengths; [2018-03-21 10:00:04.001] [stderrLog] [info] Waiting to finish loading hash; [2018-03-21 10:00:40.560] [stderrLog] [info] Done loading index; [2018-03-21 10:00:40.560] [jointLog] [info] done; [2018-03-21",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/210
https://github.com/COMBINE-lab/salmon/issues/210:115,Integrability,message,message,115,"Hi,. I am using salmon quant v0.91 to map some reads against ce11 genome. . But the run fails with a cryptic error message, maybe you can help me sort this out.; ```; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_index }; ### [ libType ] => { A }; ### [ threads ] => { 8 }; ### [ mates1 ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/trimmed_reads/rluc_2_R1.fastq.gz }; ### [ mates2 ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/trimmed_reads/rluc_2_R2.fastq.gz }; ### [ output ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_output/rluc_2 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ geneMap ] => { /data/akalin/Base/Annotation/ce11/ENSEMBL91/Caenorhabditis_elegans.WBcel235.91.gtf }; Logs will be written to /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_output/rluc_2/logs; [2018-03-21 10:00:03.272] [jointLog] [info] parsing read library format; [2018-03-21 10:00:03.272] [jointLog] [info] There is 1 library.; [2018-03-21 10:00:03.517] [stderrLog] [info] Loading Suffix Array; [2018-03-21 10:00:03.501] [jointLog] [info] Loading Quasi index; [2018-03-21 10:00:03.506] [jointLog] [info] Loading 32-bit quasi index; [2018-03-21 10:00:03.846] [stderrLog] [info] Loading Transcript Info; [2018-03-21 10:00:03.980] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-03-21 10:00:03.995] [stderrLog] [info] There were 35448 set bits in the bit array; [2018-03-21 10:00:04.001] [stderrLog] [info] Computing transcript lengths; [2018-03-21 10:00:04.001] [stderrLog] [info] Waiting to finish loading hash; [2018-03-21 10:00:40.560] [stderrLog] [info] Done loading index; [2018-03-21 10:00:40.560] [jointLog] [info] done; [2018-03-21",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/210
https://github.com/COMBINE-lab/salmon/issues/210:1329,Performance,Load,Loading,1329,": Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_index }; ### [ libType ] => { A }; ### [ threads ] => { 8 }; ### [ mates1 ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/trimmed_reads/rluc_2_R1.fastq.gz }; ### [ mates2 ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/trimmed_reads/rluc_2_R2.fastq.gz }; ### [ output ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_output/rluc_2 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ geneMap ] => { /data/akalin/Base/Annotation/ce11/ENSEMBL91/Caenorhabditis_elegans.WBcel235.91.gtf }; Logs will be written to /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_output/rluc_2/logs; [2018-03-21 10:00:03.272] [jointLog] [info] parsing read library format; [2018-03-21 10:00:03.272] [jointLog] [info] There is 1 library.; [2018-03-21 10:00:03.517] [stderrLog] [info] Loading Suffix Array; [2018-03-21 10:00:03.501] [jointLog] [info] Loading Quasi index; [2018-03-21 10:00:03.506] [jointLog] [info] Loading 32-bit quasi index; [2018-03-21 10:00:03.846] [stderrLog] [info] Loading Transcript Info; [2018-03-21 10:00:03.980] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-03-21 10:00:03.995] [stderrLog] [info] There were 35448 set bits in the bit array; [2018-03-21 10:00:04.001] [stderrLog] [info] Computing transcript lengths; [2018-03-21 10:00:04.001] [stderrLog] [info] Waiting to finish loading hash; [2018-03-21 10:00:40.560] [stderrLog] [info] Done loading index; [2018-03-21 10:00:40.560] [jointLog] [info] done; [2018-03-21 10:00:40.560] [jointLog] [info] Index contained 35448 targets. terminate called after throwing an instance of 'terminate called recursively; std::length_error'; ```. Best,; Alex",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/210
https://github.com/COMBINE-lab/salmon/issues/210:1395,Performance,Load,Loading,1395,": Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_index }; ### [ libType ] => { A }; ### [ threads ] => { 8 }; ### [ mates1 ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/trimmed_reads/rluc_2_R1.fastq.gz }; ### [ mates2 ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/trimmed_reads/rluc_2_R2.fastq.gz }; ### [ output ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_output/rluc_2 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ geneMap ] => { /data/akalin/Base/Annotation/ce11/ENSEMBL91/Caenorhabditis_elegans.WBcel235.91.gtf }; Logs will be written to /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_output/rluc_2/logs; [2018-03-21 10:00:03.272] [jointLog] [info] parsing read library format; [2018-03-21 10:00:03.272] [jointLog] [info] There is 1 library.; [2018-03-21 10:00:03.517] [stderrLog] [info] Loading Suffix Array; [2018-03-21 10:00:03.501] [jointLog] [info] Loading Quasi index; [2018-03-21 10:00:03.506] [jointLog] [info] Loading 32-bit quasi index; [2018-03-21 10:00:03.846] [stderrLog] [info] Loading Transcript Info; [2018-03-21 10:00:03.980] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-03-21 10:00:03.995] [stderrLog] [info] There were 35448 set bits in the bit array; [2018-03-21 10:00:04.001] [stderrLog] [info] Computing transcript lengths; [2018-03-21 10:00:04.001] [stderrLog] [info] Waiting to finish loading hash; [2018-03-21 10:00:40.560] [stderrLog] [info] Done loading index; [2018-03-21 10:00:40.560] [jointLog] [info] done; [2018-03-21 10:00:40.560] [jointLog] [info] Index contained 35448 targets. terminate called after throwing an instance of 'terminate called recursively; std::length_error'; ```. Best,; Alex",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/210
https://github.com/COMBINE-lab/salmon/issues/210:1460,Performance,Load,Loading,1460,": Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_index }; ### [ libType ] => { A }; ### [ threads ] => { 8 }; ### [ mates1 ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/trimmed_reads/rluc_2_R1.fastq.gz }; ### [ mates2 ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/trimmed_reads/rluc_2_R2.fastq.gz }; ### [ output ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_output/rluc_2 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ geneMap ] => { /data/akalin/Base/Annotation/ce11/ENSEMBL91/Caenorhabditis_elegans.WBcel235.91.gtf }; Logs will be written to /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_output/rluc_2/logs; [2018-03-21 10:00:03.272] [jointLog] [info] parsing read library format; [2018-03-21 10:00:03.272] [jointLog] [info] There is 1 library.; [2018-03-21 10:00:03.517] [stderrLog] [info] Loading Suffix Array; [2018-03-21 10:00:03.501] [jointLog] [info] Loading Quasi index; [2018-03-21 10:00:03.506] [jointLog] [info] Loading 32-bit quasi index; [2018-03-21 10:00:03.846] [stderrLog] [info] Loading Transcript Info; [2018-03-21 10:00:03.980] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-03-21 10:00:03.995] [stderrLog] [info] There were 35448 set bits in the bit array; [2018-03-21 10:00:04.001] [stderrLog] [info] Computing transcript lengths; [2018-03-21 10:00:04.001] [stderrLog] [info] Waiting to finish loading hash; [2018-03-21 10:00:40.560] [stderrLog] [info] Done loading index; [2018-03-21 10:00:40.560] [jointLog] [info] done; [2018-03-21 10:00:40.560] [jointLog] [info] Index contained 35448 targets. terminate called after throwing an instance of 'terminate called recursively; std::length_error'; ```. Best,; Alex",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/210
https://github.com/COMBINE-lab/salmon/issues/210:1533,Performance,Load,Loading,1533,": Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_index }; ### [ libType ] => { A }; ### [ threads ] => { 8 }; ### [ mates1 ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/trimmed_reads/rluc_2_R1.fastq.gz }; ### [ mates2 ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/trimmed_reads/rluc_2_R2.fastq.gz }; ### [ output ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_output/rluc_2 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ geneMap ] => { /data/akalin/Base/Annotation/ce11/ENSEMBL91/Caenorhabditis_elegans.WBcel235.91.gtf }; Logs will be written to /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_output/rluc_2/logs; [2018-03-21 10:00:03.272] [jointLog] [info] parsing read library format; [2018-03-21 10:00:03.272] [jointLog] [info] There is 1 library.; [2018-03-21 10:00:03.517] [stderrLog] [info] Loading Suffix Array; [2018-03-21 10:00:03.501] [jointLog] [info] Loading Quasi index; [2018-03-21 10:00:03.506] [jointLog] [info] Loading 32-bit quasi index; [2018-03-21 10:00:03.846] [stderrLog] [info] Loading Transcript Info; [2018-03-21 10:00:03.980] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-03-21 10:00:03.995] [stderrLog] [info] There were 35448 set bits in the bit array; [2018-03-21 10:00:04.001] [stderrLog] [info] Computing transcript lengths; [2018-03-21 10:00:04.001] [stderrLog] [info] Waiting to finish loading hash; [2018-03-21 10:00:40.560] [stderrLog] [info] Done loading index; [2018-03-21 10:00:40.560] [jointLog] [info] done; [2018-03-21 10:00:40.560] [jointLog] [info] Index contained 35448 targets. terminate called after throwing an instance of 'terminate called recursively; std::length_error'; ```. Best,; Alex",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/210
https://github.com/COMBINE-lab/salmon/issues/210:1603,Performance,Load,Loading,1603,": Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_index }; ### [ libType ] => { A }; ### [ threads ] => { 8 }; ### [ mates1 ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/trimmed_reads/rluc_2_R1.fastq.gz }; ### [ mates2 ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/trimmed_reads/rluc_2_R2.fastq.gz }; ### [ output ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_output/rluc_2 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ geneMap ] => { /data/akalin/Base/Annotation/ce11/ENSEMBL91/Caenorhabditis_elegans.WBcel235.91.gtf }; Logs will be written to /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_output/rluc_2/logs; [2018-03-21 10:00:03.272] [jointLog] [info] parsing read library format; [2018-03-21 10:00:03.272] [jointLog] [info] There is 1 library.; [2018-03-21 10:00:03.517] [stderrLog] [info] Loading Suffix Array; [2018-03-21 10:00:03.501] [jointLog] [info] Loading Quasi index; [2018-03-21 10:00:03.506] [jointLog] [info] Loading 32-bit quasi index; [2018-03-21 10:00:03.846] [stderrLog] [info] Loading Transcript Info; [2018-03-21 10:00:03.980] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-03-21 10:00:03.995] [stderrLog] [info] There were 35448 set bits in the bit array; [2018-03-21 10:00:04.001] [stderrLog] [info] Computing transcript lengths; [2018-03-21 10:00:04.001] [stderrLog] [info] Waiting to finish loading hash; [2018-03-21 10:00:40.560] [stderrLog] [info] Done loading index; [2018-03-21 10:00:40.560] [jointLog] [info] done; [2018-03-21 10:00:40.560] [jointLog] [info] Index contained 35448 targets. terminate called after throwing an instance of 'terminate called recursively; std::length_error'; ```. Best,; Alex",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/210
https://github.com/COMBINE-lab/salmon/issues/210:1861,Performance,load,loading,1861,": Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_index }; ### [ libType ] => { A }; ### [ threads ] => { 8 }; ### [ mates1 ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/trimmed_reads/rluc_2_R1.fastq.gz }; ### [ mates2 ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/trimmed_reads/rluc_2_R2.fastq.gz }; ### [ output ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_output/rluc_2 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ geneMap ] => { /data/akalin/Base/Annotation/ce11/ENSEMBL91/Caenorhabditis_elegans.WBcel235.91.gtf }; Logs will be written to /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_output/rluc_2/logs; [2018-03-21 10:00:03.272] [jointLog] [info] parsing read library format; [2018-03-21 10:00:03.272] [jointLog] [info] There is 1 library.; [2018-03-21 10:00:03.517] [stderrLog] [info] Loading Suffix Array; [2018-03-21 10:00:03.501] [jointLog] [info] Loading Quasi index; [2018-03-21 10:00:03.506] [jointLog] [info] Loading 32-bit quasi index; [2018-03-21 10:00:03.846] [stderrLog] [info] Loading Transcript Info; [2018-03-21 10:00:03.980] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-03-21 10:00:03.995] [stderrLog] [info] There were 35448 set bits in the bit array; [2018-03-21 10:00:04.001] [stderrLog] [info] Computing transcript lengths; [2018-03-21 10:00:04.001] [stderrLog] [info] Waiting to finish loading hash; [2018-03-21 10:00:40.560] [stderrLog] [info] Done loading index; [2018-03-21 10:00:40.560] [jointLog] [info] done; [2018-03-21 10:00:40.560] [jointLog] [info] Index contained 35448 targets. terminate called after throwing an instance of 'terminate called recursively; std::length_error'; ```. Best,; Alex",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/210
https://github.com/COMBINE-lab/salmon/issues/210:1925,Performance,load,loading,1925,": Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_index }; ### [ libType ] => { A }; ### [ threads ] => { 8 }; ### [ mates1 ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/trimmed_reads/rluc_2_R1.fastq.gz }; ### [ mates2 ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/trimmed_reads/rluc_2_R2.fastq.gz }; ### [ output ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_output/rluc_2 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ geneMap ] => { /data/akalin/Base/Annotation/ce11/ENSEMBL91/Caenorhabditis_elegans.WBcel235.91.gtf }; Logs will be written to /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_output/rluc_2/logs; [2018-03-21 10:00:03.272] [jointLog] [info] parsing read library format; [2018-03-21 10:00:03.272] [jointLog] [info] There is 1 library.; [2018-03-21 10:00:03.517] [stderrLog] [info] Loading Suffix Array; [2018-03-21 10:00:03.501] [jointLog] [info] Loading Quasi index; [2018-03-21 10:00:03.506] [jointLog] [info] Loading 32-bit quasi index; [2018-03-21 10:00:03.846] [stderrLog] [info] Loading Transcript Info; [2018-03-21 10:00:03.980] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-03-21 10:00:03.995] [stderrLog] [info] There were 35448 set bits in the bit array; [2018-03-21 10:00:04.001] [stderrLog] [info] Computing transcript lengths; [2018-03-21 10:00:04.001] [stderrLog] [info] Waiting to finish loading hash; [2018-03-21 10:00:40.560] [stderrLog] [info] Done loading index; [2018-03-21 10:00:40.560] [jointLog] [info] done; [2018-03-21 10:00:40.560] [jointLog] [info] Index contained 35448 targets. terminate called after throwing an instance of 'terminate called recursively; std::length_error'; ```. Best,; Alex",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/210
https://github.com/COMBINE-lab/salmon/issues/210:1869,Security,hash,hash,1869,": Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_index }; ### [ libType ] => { A }; ### [ threads ] => { 8 }; ### [ mates1 ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/trimmed_reads/rluc_2_R1.fastq.gz }; ### [ mates2 ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/trimmed_reads/rluc_2_R2.fastq.gz }; ### [ output ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_output/rluc_2 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ geneMap ] => { /data/akalin/Base/Annotation/ce11/ENSEMBL91/Caenorhabditis_elegans.WBcel235.91.gtf }; Logs will be written to /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_output/rluc_2/logs; [2018-03-21 10:00:03.272] [jointLog] [info] parsing read library format; [2018-03-21 10:00:03.272] [jointLog] [info] There is 1 library.; [2018-03-21 10:00:03.517] [stderrLog] [info] Loading Suffix Array; [2018-03-21 10:00:03.501] [jointLog] [info] Loading Quasi index; [2018-03-21 10:00:03.506] [jointLog] [info] Loading 32-bit quasi index; [2018-03-21 10:00:03.846] [stderrLog] [info] Loading Transcript Info; [2018-03-21 10:00:03.980] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-03-21 10:00:03.995] [stderrLog] [info] There were 35448 set bits in the bit array; [2018-03-21 10:00:04.001] [stderrLog] [info] Computing transcript lengths; [2018-03-21 10:00:04.001] [stderrLog] [info] Waiting to finish loading hash; [2018-03-21 10:00:40.560] [stderrLog] [info] Done loading index; [2018-03-21 10:00:40.560] [jointLog] [info] done; [2018-03-21 10:00:40.560] [jointLog] [info] Index contained 35448 targets. terminate called after throwing an instance of 'terminate called recursively; std::length_error'; ```. Best,; Alex",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/210
https://github.com/COMBINE-lab/salmon/issues/210:1035,Testability,Log,Logs,1035,"h a cryptic error message, maybe you can help me sort this out.; ```; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_index }; ### [ libType ] => { A }; ### [ threads ] => { 8 }; ### [ mates1 ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/trimmed_reads/rluc_2_R1.fastq.gz }; ### [ mates2 ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/trimmed_reads/rluc_2_R2.fastq.gz }; ### [ output ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_output/rluc_2 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ geneMap ] => { /data/akalin/Base/Annotation/ce11/ENSEMBL91/Caenorhabditis_elegans.WBcel235.91.gtf }; Logs will be written to /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_output/rluc_2/logs; [2018-03-21 10:00:03.272] [jointLog] [info] parsing read library format; [2018-03-21 10:00:03.272] [jointLog] [info] There is 1 library.; [2018-03-21 10:00:03.517] [stderrLog] [info] Loading Suffix Array; [2018-03-21 10:00:03.501] [jointLog] [info] Loading Quasi index; [2018-03-21 10:00:03.506] [jointLog] [info] Loading 32-bit quasi index; [2018-03-21 10:00:03.846] [stderrLog] [info] Loading Transcript Info; [2018-03-21 10:00:03.980] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-03-21 10:00:03.995] [stderrLog] [info] There were 35448 set bits in the bit array; [2018-03-21 10:00:04.001] [stderrLog] [info] Computing transcript lengths; [2018-03-21 10:00:04.001] [stderrLog] [info] Waiting to finish loading hash; [2018-03-21 10:00:40.560] [stderrLog] [info] Done loading index; [2018-03-21 10:00:40.560] [jointLog] [info] done; [2018-03-21 10:00:40.560] [jointLog] [info] Index contained 35448 targets. terminate called after throwing a",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/210
https://github.com/COMBINE-lab/salmon/issues/210:1140,Testability,log,logs,1140,"h a cryptic error message, maybe you can help me sort this out.; ```; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_index }; ### [ libType ] => { A }; ### [ threads ] => { 8 }; ### [ mates1 ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/trimmed_reads/rluc_2_R1.fastq.gz }; ### [ mates2 ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/trimmed_reads/rluc_2_R2.fastq.gz }; ### [ output ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_output/rluc_2 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ geneMap ] => { /data/akalin/Base/Annotation/ce11/ENSEMBL91/Caenorhabditis_elegans.WBcel235.91.gtf }; Logs will be written to /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_output/rluc_2/logs; [2018-03-21 10:00:03.272] [jointLog] [info] parsing read library format; [2018-03-21 10:00:03.272] [jointLog] [info] There is 1 library.; [2018-03-21 10:00:03.517] [stderrLog] [info] Loading Suffix Array; [2018-03-21 10:00:03.501] [jointLog] [info] Loading Quasi index; [2018-03-21 10:00:03.506] [jointLog] [info] Loading 32-bit quasi index; [2018-03-21 10:00:03.846] [stderrLog] [info] Loading Transcript Info; [2018-03-21 10:00:03.980] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-03-21 10:00:03.995] [stderrLog] [info] There were 35448 set bits in the bit array; [2018-03-21 10:00:04.001] [stderrLog] [info] Computing transcript lengths; [2018-03-21 10:00:04.001] [stderrLog] [info] Waiting to finish loading hash; [2018-03-21 10:00:40.560] [stderrLog] [info] Done loading index; [2018-03-21 10:00:40.560] [jointLog] [info] done; [2018-03-21 10:00:40.560] [jointLog] [info] Index contained 35448 targets. terminate called after throwing a",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/210
https://github.com/COMBINE-lab/salmon/issues/212:667,Testability,benchmark,benchmark,667,"Hi, . I'm trying to quantify the expression of some samples derived from mouse. I'm using the latest version of Salmon with the E90 Ensemble reference cDNA with an index built using k=31 (and all default parameters). I map these samples using the following command:. $SALMON quant -i $INDEX -l IU -p 16 --numGibbsSamples 1000 --seqBias --gcBias --posBias --useVBOpt --biasSpeedSamp 5 -1 pair_1.fastq.gz -2 pair_2.fastq.gz -o $PREFIX. When I run this I get mapping rates ranging between 31 - 44 %. I have checked for contamination and this was negative. I have tried different k-mer sizes (reads are ~ 80 nt in length), and the results don't change much. I decided to benchmark this with STAR+RSEM and the same version of the mouse genome from Ensembl as follows:. $RSEM --seed 1786 --star --star-path $STAR --num-threads $CPU --star-gzipped-read-file --paired-end pair_1.fastq.gz pair_2.fastq.gz $INDEX $PREFIX. When I look at the mapping rates with samtools flagstats I get mapping rates between 88 - 94 %. . Do you have any ideas on why I am observing these differences? Am I doing something wrong? . Looking forward to hearing from you.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/212
https://github.com/COMBINE-lab/salmon/issues/213:769,Energy Efficiency,reduce,reduces,769,"Hi,. Might be something trivial that takes no effort to figure out. I have mouse `RNA-seq` data (`single-end` `stranded` - `reverse strand`) which I `STAR` mapped against `mm10` with `gencode.vM12.primary_assembly.annotation` `GTF`, where I ran `STAR` in a mode that also generates a bam file of the reads mapping to the `transcriptome`. For my purpose I'd like to retain only reads that map to transcripts annotated as `protein_coding` in the `GTF`, which would be my total, meaning `TPM`s will be calculated based on that slice of the pie rather than based on all reads. What I did is `samtools` `sort` and `index` the transcriptomic `bam`, and then subset that `bam` with a `bed` file which only includes the transcripts that are annotated as `protein_coding`. This reduces the number of mapped reads from 11,653,865 to 3,483,962. When I use `Salmon` to quantify expression of that subsetted `bam`, Salmon crashes, but it doesn't if I give it the un-subsetted `bam`. Any idea why it's crashing?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/213
https://github.com/COMBINE-lab/salmon/issues/214:286,Availability,down,downstream,286,We just discovered that Salmon build removes/collapses identical transcripts. This is very problematic that Salmon does this as many genes are duplicated throughout the genome. By concatenating them in the build index one of these is arbitrary selected (the others removed) meaning all downstream analysis will assume all expression originate from one genomic region instead of many. In the most r[ecent Gencode mouse release](https://www.gencodegenes.org/mouse_releases/current.html) this problem affects 1563 sequences annotated as 13812 and covers all transcript types (incl 840 protein coding - although the major once are lincRNA (n=3658) and snoRNAs (n=2622)). We strongly believe that if one want to analyse these duplicated regions jointly this should be done just like one would sum all transcripts from a particular gene to get the gene expression.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/214
https://github.com/COMBINE-lab/salmon/issues/214:418,Deployability,release,release,418,We just discovered that Salmon build removes/collapses identical transcripts. This is very problematic that Salmon does this as many genes are duplicated throughout the genome. By concatenating them in the build index one of these is arbitrary selected (the others removed) meaning all downstream analysis will assume all expression originate from one genomic region instead of many. In the most r[ecent Gencode mouse release](https://www.gencodegenes.org/mouse_releases/current.html) this problem affects 1563 sequences annotated as 13812 and covers all transcript types (incl 840 protein coding - although the major once are lincRNA (n=3658) and snoRNAs (n=2622)). We strongly believe that if one want to analyse these duplicated regions jointly this should be done just like one would sum all transcripts from a particular gene to get the gene expression.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/214
https://github.com/COMBINE-lab/salmon/issues/215:234,Availability,down,downlaod,234,"./salmon index -t Mus_musculus.GRCm38.cdna.all.norm.fasta -i GRCm38.cdna.all_index --type quasi -l 31. Dear Salmon list,. I am using the Salmon 0.8.1 binary for Mac OS X, Sierra, 10.12.8. I am trying to set up an mm10; mouse index. I downlaod the mouse cDNAs from Ensembl, and normlized the ends with galaxy.; I am running evelything in lib in case there are path issues.; Here is my directory:. c2b2afmd2:lib friedman$ ls; Mus_musculus.GRCm38.cdna.all.fa	libtbbmalloc_proxy.dylib; libtbb.dylib			salmon; libtbbmalloc.dylib. Here is my attemot to build an index:. c2b2afmd2:lib friedman$ ./salmon index -t Mus_musculus.GRCm38.cdna.all.norm.fasta -i GRCm38.cdna.all_index --type quasi -l 31; dyld: Library not loaded: @rpath/libtbbmalloc_proxy.dylib; Referenced from: /Applications/Salmon-0.8.2_macOX_10.12/lib/./salmon; Reason: image not found; Abort trap: 6. I would greatly appreciate any help that you might be able ot give. Thanks and best wishes,; Rich; Richard A. Friedman, PhD; Associate Research Scientist,; Biomedical Informatics Shared Resource; Herbert Irving Comprehensive Cancer Center (HICCC); Lecturer,; Department of Biomedical Informatics (DBMI); Room 825; Irving Cancer Research Center ; Columbia University Herbert and Florence Irving Medical Center; 1130 St. Nicholas Ave; New York, NY 10032; (212)851-4765 (voice); raf4@cumc.columbia.edu. http://www.columbia.edu/~raf4/index.html. “Will there still be ""Classics Illustrated” by the time I have children? I cannot; imagine raising kids without ""Classics Illustrated” .” -Rose Friedman, age 20",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/215
https://github.com/COMBINE-lab/salmon/issues/215:709,Performance,load,loaded,709,"./salmon index -t Mus_musculus.GRCm38.cdna.all.norm.fasta -i GRCm38.cdna.all_index --type quasi -l 31. Dear Salmon list,. I am using the Salmon 0.8.1 binary for Mac OS X, Sierra, 10.12.8. I am trying to set up an mm10; mouse index. I downlaod the mouse cDNAs from Ensembl, and normlized the ends with galaxy.; I am running evelything in lib in case there are path issues.; Here is my directory:. c2b2afmd2:lib friedman$ ls; Mus_musculus.GRCm38.cdna.all.fa	libtbbmalloc_proxy.dylib; libtbb.dylib			salmon; libtbbmalloc.dylib. Here is my attemot to build an index:. c2b2afmd2:lib friedman$ ./salmon index -t Mus_musculus.GRCm38.cdna.all.norm.fasta -i GRCm38.cdna.all_index --type quasi -l 31; dyld: Library not loaded: @rpath/libtbbmalloc_proxy.dylib; Referenced from: /Applications/Salmon-0.8.2_macOX_10.12/lib/./salmon; Reason: image not found; Abort trap: 6. I would greatly appreciate any help that you might be able ot give. Thanks and best wishes,; Rich; Richard A. Friedman, PhD; Associate Research Scientist,; Biomedical Informatics Shared Resource; Herbert Irving Comprehensive Cancer Center (HICCC); Lecturer,; Department of Biomedical Informatics (DBMI); Room 825; Irving Cancer Research Center ; Columbia University Herbert and Florence Irving Medical Center; 1130 St. Nicholas Ave; New York, NY 10032; (212)851-4765 (voice); raf4@cumc.columbia.edu. http://www.columbia.edu/~raf4/index.html. “Will there still be ""Classics Illustrated” by the time I have children? I cannot; imagine raising kids without ""Classics Illustrated” .” -Rose Friedman, age 20",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/215
https://github.com/COMBINE-lab/salmon/issues/215:845,Safety,Abort,Abort,845,"./salmon index -t Mus_musculus.GRCm38.cdna.all.norm.fasta -i GRCm38.cdna.all_index --type quasi -l 31. Dear Salmon list,. I am using the Salmon 0.8.1 binary for Mac OS X, Sierra, 10.12.8. I am trying to set up an mm10; mouse index. I downlaod the mouse cDNAs from Ensembl, and normlized the ends with galaxy.; I am running evelything in lib in case there are path issues.; Here is my directory:. c2b2afmd2:lib friedman$ ls; Mus_musculus.GRCm38.cdna.all.fa	libtbbmalloc_proxy.dylib; libtbb.dylib			salmon; libtbbmalloc.dylib. Here is my attemot to build an index:. c2b2afmd2:lib friedman$ ./salmon index -t Mus_musculus.GRCm38.cdna.all.norm.fasta -i GRCm38.cdna.all_index --type quasi -l 31; dyld: Library not loaded: @rpath/libtbbmalloc_proxy.dylib; Referenced from: /Applications/Salmon-0.8.2_macOX_10.12/lib/./salmon; Reason: image not found; Abort trap: 6. I would greatly appreciate any help that you might be able ot give. Thanks and best wishes,; Rich; Richard A. Friedman, PhD; Associate Research Scientist,; Biomedical Informatics Shared Resource; Herbert Irving Comprehensive Cancer Center (HICCC); Lecturer,; Department of Biomedical Informatics (DBMI); Room 825; Irving Cancer Research Center ; Columbia University Herbert and Florence Irving Medical Center; 1130 St. Nicholas Ave; New York, NY 10032; (212)851-4765 (voice); raf4@cumc.columbia.edu. http://www.columbia.edu/~raf4/index.html. “Will there still be ""Classics Illustrated” by the time I have children? I cannot; imagine raising kids without ""Classics Illustrated” .” -Rose Friedman, age 20",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/215
https://github.com/COMBINE-lab/salmon/issues/216:116,Availability,error,error,116,"Hi, I'm just starting with RNA-Seq and tryed to install salmon on the HPC of my university. However I get following error message when recompiling with ""$ make"". . ```; [ 6%] Built target libbz2; [ 13%] Built target libgff; [ 19%] Built target libbwa; [ 26%] Built target libjellyfish; [ 27%] Performing build step for 'libstadenio'; Making all in io_lib; Making all in progs; libtool: link: /usr/bin/cc -o convert_trace convert_trace.o ../io_lib/.libs/libstaden-read.a -lz -lm -lpthread -llzma -lbz2; /usr/bin/ld: cannot find -lbz2; ../io_lib/.libs/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xd26): warning: the use of `tempnam' is dangerous, better use `mkstemp'; collect2: error: ld returned 1 exit status; make[5]: *** [convert_trace] Fehler 1; make[4]: *** [all-recursive] Fehler 1; make[3]: *** [all] Fehler 2; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Fehler 2; make[1]: *** [CMakeFiles/libstadenio.dir/all] Fehler 2; make: *** [all] Fehler 2. ```. Does this have anything to do with ""bzip2"" or ""libbz2"" and how would I provide missing paths to cmake?; I have bzip2 but not libbz2 availible on my system. I would be gratefull for any help.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/216
https://github.com/COMBINE-lab/salmon/issues/216:744,Availability,error,error,744,"Hi, I'm just starting with RNA-Seq and tryed to install salmon on the HPC of my university. However I get following error message when recompiling with ""$ make"". . ```; [ 6%] Built target libbz2; [ 13%] Built target libgff; [ 19%] Built target libbwa; [ 26%] Built target libjellyfish; [ 27%] Performing build step for 'libstadenio'; Making all in io_lib; Making all in progs; libtool: link: /usr/bin/cc -o convert_trace convert_trace.o ../io_lib/.libs/libstaden-read.a -lz -lm -lpthread -llzma -lbz2; /usr/bin/ld: cannot find -lbz2; ../io_lib/.libs/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xd26): warning: the use of `tempnam' is dangerous, better use `mkstemp'; collect2: error: ld returned 1 exit status; make[5]: *** [convert_trace] Fehler 1; make[4]: *** [all-recursive] Fehler 1; make[3]: *** [all] Fehler 2; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Fehler 2; make[1]: *** [CMakeFiles/libstadenio.dir/all] Fehler 2; make: *** [all] Fehler 2. ```. Does this have anything to do with ""bzip2"" or ""libbz2"" and how would I provide missing paths to cmake?; I have bzip2 but not libbz2 availible on my system. I would be gratefull for any help.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/216
https://github.com/COMBINE-lab/salmon/issues/216:1188,Availability,avail,availible,1188,"Hi, I'm just starting with RNA-Seq and tryed to install salmon on the HPC of my university. However I get following error message when recompiling with ""$ make"". . ```; [ 6%] Built target libbz2; [ 13%] Built target libgff; [ 19%] Built target libbwa; [ 26%] Built target libjellyfish; [ 27%] Performing build step for 'libstadenio'; Making all in io_lib; Making all in progs; libtool: link: /usr/bin/cc -o convert_trace convert_trace.o ../io_lib/.libs/libstaden-read.a -lz -lm -lpthread -llzma -lbz2; /usr/bin/ld: cannot find -lbz2; ../io_lib/.libs/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xd26): warning: the use of `tempnam' is dangerous, better use `mkstemp'; collect2: error: ld returned 1 exit status; make[5]: *** [convert_trace] Fehler 1; make[4]: *** [all-recursive] Fehler 1; make[3]: *** [all] Fehler 2; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Fehler 2; make[1]: *** [CMakeFiles/libstadenio.dir/all] Fehler 2; make: *** [all] Fehler 2. ```. Does this have anything to do with ""bzip2"" or ""libbz2"" and how would I provide missing paths to cmake?; I have bzip2 but not libbz2 availible on my system. I would be gratefull for any help.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/216
https://github.com/COMBINE-lab/salmon/issues/216:48,Deployability,install,install,48,"Hi, I'm just starting with RNA-Seq and tryed to install salmon on the HPC of my university. However I get following error message when recompiling with ""$ make"". . ```; [ 6%] Built target libbz2; [ 13%] Built target libgff; [ 19%] Built target libbwa; [ 26%] Built target libjellyfish; [ 27%] Performing build step for 'libstadenio'; Making all in io_lib; Making all in progs; libtool: link: /usr/bin/cc -o convert_trace convert_trace.o ../io_lib/.libs/libstaden-read.a -lz -lm -lpthread -llzma -lbz2; /usr/bin/ld: cannot find -lbz2; ../io_lib/.libs/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xd26): warning: the use of `tempnam' is dangerous, better use `mkstemp'; collect2: error: ld returned 1 exit status; make[5]: *** [convert_trace] Fehler 1; make[4]: *** [all-recursive] Fehler 1; make[3]: *** [all] Fehler 2; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Fehler 2; make[1]: *** [CMakeFiles/libstadenio.dir/all] Fehler 2; make: *** [all] Fehler 2. ```. Does this have anything to do with ""bzip2"" or ""libbz2"" and how would I provide missing paths to cmake?; I have bzip2 but not libbz2 availible on my system. I would be gratefull for any help.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/216
https://github.com/COMBINE-lab/salmon/issues/216:122,Integrability,message,message,122,"Hi, I'm just starting with RNA-Seq and tryed to install salmon on the HPC of my university. However I get following error message when recompiling with ""$ make"". . ```; [ 6%] Built target libbz2; [ 13%] Built target libgff; [ 19%] Built target libbwa; [ 26%] Built target libjellyfish; [ 27%] Performing build step for 'libstadenio'; Making all in io_lib; Making all in progs; libtool: link: /usr/bin/cc -o convert_trace convert_trace.o ../io_lib/.libs/libstaden-read.a -lz -lm -lpthread -llzma -lbz2; /usr/bin/ld: cannot find -lbz2; ../io_lib/.libs/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xd26): warning: the use of `tempnam' is dangerous, better use `mkstemp'; collect2: error: ld returned 1 exit status; make[5]: *** [convert_trace] Fehler 1; make[4]: *** [all-recursive] Fehler 1; make[3]: *** [all] Fehler 2; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Fehler 2; make[1]: *** [CMakeFiles/libstadenio.dir/all] Fehler 2; make: *** [all] Fehler 2. ```. Does this have anything to do with ""bzip2"" or ""libbz2"" and how would I provide missing paths to cmake?; I have bzip2 but not libbz2 availible on my system. I would be gratefull for any help.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/216
https://github.com/COMBINE-lab/salmon/issues/216:293,Performance,Perform,Performing,293,"Hi, I'm just starting with RNA-Seq and tryed to install salmon on the HPC of my university. However I get following error message when recompiling with ""$ make"". . ```; [ 6%] Built target libbz2; [ 13%] Built target libgff; [ 19%] Built target libbwa; [ 26%] Built target libjellyfish; [ 27%] Performing build step for 'libstadenio'; Making all in io_lib; Making all in progs; libtool: link: /usr/bin/cc -o convert_trace convert_trace.o ../io_lib/.libs/libstaden-read.a -lz -lm -lpthread -llzma -lbz2; /usr/bin/ld: cannot find -lbz2; ../io_lib/.libs/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xd26): warning: the use of `tempnam' is dangerous, better use `mkstemp'; collect2: error: ld returned 1 exit status; make[5]: *** [convert_trace] Fehler 1; make[4]: *** [all-recursive] Fehler 1; make[3]: *** [all] Fehler 2; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Fehler 2; make[1]: *** [CMakeFiles/libstadenio.dir/all] Fehler 2; make: *** [all] Fehler 2. ```. Does this have anything to do with ""bzip2"" or ""libbz2"" and how would I provide missing paths to cmake?; I have bzip2 but not libbz2 availible on my system. I would be gratefull for any help.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/216
https://github.com/COMBINE-lab/salmon/issues/217:1159,Availability,mask,mask,1159,"Hi,. first of all, I really like using Salmon for RNAseq quantification. I have a very special problem. We are working with experimental conditions in which transposons get activated and highly expressed. This initially caused my RNAseq quantification to be wrong as transposon reads got assigned to genic transcripts. I can circumvent this problem mostly by adding the transposon transcripts into the index.; Still there are some regions that are 1:1 identical between transposons and genes that still cause problems. The gene in the examples is not expressed in the cells I use which is more or less what Salmon gives me for WT conditions. Still I get TPMs of >12 in my experimental conditions due to the heavy transposon deregulation. You can see this here in this chart where I overlay the mappings from salmon in WT and in the experimental knockout (KO):; ![image](https://user-images.githubusercontent.com/12491961/39418440-bfbca0f2-4c5a-11e8-8bde-f2da0cca2658.png). The only region covered is the transposon piece and the rest of the transcript is uncovered. . Is there any way to avoid such wrong quantification by some settings, or is it possible to mask such regions upstream?. Any help would be appreciated. . All the best and thank you,; Dominik",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/217
https://github.com/COMBINE-lab/salmon/issues/217:1088,Safety,avoid,avoid,1088,"Hi,. first of all, I really like using Salmon for RNAseq quantification. I have a very special problem. We are working with experimental conditions in which transposons get activated and highly expressed. This initially caused my RNAseq quantification to be wrong as transposon reads got assigned to genic transcripts. I can circumvent this problem mostly by adding the transposon transcripts into the index.; Still there are some regions that are 1:1 identical between transposons and genes that still cause problems. The gene in the examples is not expressed in the cells I use which is more or less what Salmon gives me for WT conditions. Still I get TPMs of >12 in my experimental conditions due to the heavy transposon deregulation. You can see this here in this chart where I overlay the mappings from salmon in WT and in the experimental knockout (KO):; ![image](https://user-images.githubusercontent.com/12491961/39418440-bfbca0f2-4c5a-11e8-8bde-f2da0cca2658.png). The only region covered is the transposon piece and the rest of the transcript is uncovered. . Is there any way to avoid such wrong quantification by some settings, or is it possible to mask such regions upstream?. Any help would be appreciated. . All the best and thank you,; Dominik",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/217
https://github.com/COMBINE-lab/salmon/issues/218:1038,Safety,detect,detect,1038,"Hello, . I have RNA-seq data for 3 runs under the same condition, and the data for each run was generated as single-end libraries using 3 lanes (100bp, 100bp and 50bp). After mapping using Salmon against the transcriptome and normalizing the counts using DESeq2, I found out that a control gene had a much higher level of deviation between runs. One of them was reported to have zero counts. . I ran Salmon for each library in that run and got the following results for that gene. Lib1 (50bp): GeneA 1859 1610.000 0.058387 6.313500; Lib2 (100bp): GeneA 1859 1610.000 0.086646 11.991785; Lib3 (100bp): GeneA 1859 1610.000 0.000000 0.000000; Lib1+Lib2+Lib3: GeneA 1859 1610.000 0.000000 0.000011. So I expected that Lib3 would have a problem. But when I ran bowite2 against the transcriptome, the raw counts for GeneA was 39 for Lib1, 21 for Lib2 and 24 for lib3, which looked normal. The number of reads was almost the same in each library, but the size of the library was 1/2 in Lib1 (50bp). . It was not clear to me why Samlon failed to detect GeneA in Lib3 even though the same parameters were used and also why in the combined library, the TPM and number of reads became 0 despite the counts of this gene in Lib1 and Lib2. How would I be able to improve the sensitivity (on the report, only 0.3% was reported to be smaller than K). for indexing and mapping, I used the default parameters: . salmon index -t Nbv5.1_TrPrm_NtCorrect.fasta Nbv5.1_TrPrm_NtCorrect_index; salmon quant -i ../../Database/Nbv5.1_TrPrm_NtCorrect_index -l U -r ../1-Transcriptome_Trimmed_Reads/QTCR002A_S5_L00T_R1_001_trimmed.fq.gz -p 12 -o QTCR002A_S5_L00T_R1_001_trimmed.against.Nbv5.1_TrPrm.out. Thanks,",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/218
https://github.com/COMBINE-lab/salmon/issues/218:1005,Usability,clear,clear,1005,"Hello, . I have RNA-seq data for 3 runs under the same condition, and the data for each run was generated as single-end libraries using 3 lanes (100bp, 100bp and 50bp). After mapping using Salmon against the transcriptome and normalizing the counts using DESeq2, I found out that a control gene had a much higher level of deviation between runs. One of them was reported to have zero counts. . I ran Salmon for each library in that run and got the following results for that gene. Lib1 (50bp): GeneA 1859 1610.000 0.058387 6.313500; Lib2 (100bp): GeneA 1859 1610.000 0.086646 11.991785; Lib3 (100bp): GeneA 1859 1610.000 0.000000 0.000000; Lib1+Lib2+Lib3: GeneA 1859 1610.000 0.000000 0.000011. So I expected that Lib3 would have a problem. But when I ran bowite2 against the transcriptome, the raw counts for GeneA was 39 for Lib1, 21 for Lib2 and 24 for lib3, which looked normal. The number of reads was almost the same in each library, but the size of the library was 1/2 in Lib1 (50bp). . It was not clear to me why Samlon failed to detect GeneA in Lib3 even though the same parameters were used and also why in the combined library, the TPM and number of reads became 0 despite the counts of this gene in Lib1 and Lib2. How would I be able to improve the sensitivity (on the report, only 0.3% was reported to be smaller than K). for indexing and mapping, I used the default parameters: . salmon index -t Nbv5.1_TrPrm_NtCorrect.fasta Nbv5.1_TrPrm_NtCorrect_index; salmon quant -i ../../Database/Nbv5.1_TrPrm_NtCorrect_index -l U -r ../1-Transcriptome_Trimmed_Reads/QTCR002A_S5_L00T_R1_001_trimmed.fq.gz -p 12 -o QTCR002A_S5_L00T_R1_001_trimmed.against.Nbv5.1_TrPrm.out. Thanks,",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/218
https://github.com/COMBINE-lab/salmon/issues/222:56,Availability,failure,failure,56,"Hello,. Hoping you can help troubleshoot a salmon quant failure. We're running V0.9.1. BAM files are transcriptome aligned using OSA aligner. The program is calling out a malformed key:pair? The salmon_quant.log is blank. > ./bin/salmon quant -t transcripts.fa -l A -a A549_S1_001.bam -o A549_S1_quant &; [1] 10291; us1salxngst01> Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (alignment-based) v0.9.1; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { A549_S1_001.bam }; # [ output ] => { A549_S1_quant }; Logs will be written to A549_S1_quant/logs; Malformed key:value pair at line 44017: ""@PG ID:OSA IsCdna:True ; ReferenceLibraryID:Human.B37.3_RefGene20121217 VN:7.2""; ============; Exception : [ERROR: Failed to open file A549_S1.bam, exiting!]; ============; ./bin/salmon alignment-quant was invoked improperly.; For usage information, try ./bin/salmon quant --help-alignments; Exiting.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/222
https://github.com/COMBINE-lab/salmon/issues/222:888,Availability,ERROR,ERROR,888,"Hello,. Hoping you can help troubleshoot a salmon quant failure. We're running V0.9.1. BAM files are transcriptome aligned using OSA aligner. The program is calling out a malformed key:pair? The salmon_quant.log is blank. > ./bin/salmon quant -t transcripts.fa -l A -a A549_S1_001.bam -o A549_S1_quant &; [1] 10291; us1salxngst01> Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (alignment-based) v0.9.1; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { A549_S1_001.bam }; # [ output ] => { A549_S1_quant }; Logs will be written to A549_S1_quant/logs; Malformed key:value pair at line 44017: ""@PG ID:OSA IsCdna:True ; ReferenceLibraryID:Human.B37.3_RefGene20121217 VN:7.2""; ============; Exception : [ERROR: Failed to open file A549_S1.bam, exiting!]; ============; ./bin/salmon alignment-quant was invoked improperly.; For usage information, try ./bin/salmon quant --help-alignments; Exiting.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/222
https://github.com/COMBINE-lab/salmon/issues/222:363,Deployability,upgrade,upgrade,363,"Hello,. Hoping you can help troubleshoot a salmon quant failure. We're running V0.9.1. BAM files are transcriptome aligned using OSA aligner. The program is calling out a malformed key:pair? The salmon_quant.log is blank. > ./bin/salmon quant -t transcripts.fa -l A -a A549_S1_001.bam -o A549_S1_quant &; [1] 10291; us1salxngst01> Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (alignment-based) v0.9.1; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { A549_S1_001.bam }; # [ output ] => { A549_S1_quant }; Logs will be written to A549_S1_quant/logs; Malformed key:value pair at line 44017: ""@PG ID:OSA IsCdna:True ; ReferenceLibraryID:Human.B37.3_RefGene20121217 VN:7.2""; ============; Exception : [ERROR: Failed to open file A549_S1.bam, exiting!]; ============; ./bin/salmon alignment-quant was invoked improperly.; For usage information, try ./bin/salmon quant --help-alignments; Exiting.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/222
https://github.com/COMBINE-lab/salmon/issues/222:415,Deployability,upgrade,upgrades,415,"Hello,. Hoping you can help troubleshoot a salmon quant failure. We're running V0.9.1. BAM files are transcriptome aligned using OSA aligner. The program is calling out a malformed key:pair? The salmon_quant.log is blank. > ./bin/salmon quant -t transcripts.fa -l A -a A549_S1_001.bam -o A549_S1_quant &; [1] 10291; us1salxngst01> Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (alignment-based) v0.9.1; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { A549_S1_001.bam }; # [ output ] => { A549_S1_quant }; Logs will be written to A549_S1_quant/logs; Malformed key:value pair at line 44017: ""@PG ID:OSA IsCdna:True ; ReferenceLibraryID:Human.B37.3_RefGene20121217 VN:7.2""; ============; Exception : [ERROR: Failed to open file A549_S1.bam, exiting!]; ============; ./bin/salmon alignment-quant was invoked improperly.; For usage information, try ./bin/salmon quant --help-alignments; Exiting.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/222
https://github.com/COMBINE-lab/salmon/issues/222:208,Testability,log,log,208,"Hello,. Hoping you can help troubleshoot a salmon quant failure. We're running V0.9.1. BAM files are transcriptome aligned using OSA aligner. The program is calling out a malformed key:pair? The salmon_quant.log is blank. > ./bin/salmon quant -t transcripts.fa -l A -a A549_S1_001.bam -o A549_S1_quant &; [1] 10291; us1salxngst01> Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (alignment-based) v0.9.1; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { A549_S1_001.bam }; # [ output ] => { A549_S1_quant }; Logs will be written to A549_S1_quant/logs; Malformed key:value pair at line 44017: ""@PG ID:OSA IsCdna:True ; ReferenceLibraryID:Human.B37.3_RefGene20121217 VN:7.2""; ============; Exception : [ERROR: Failed to open file A549_S1.bam, exiting!]; ============; ./bin/salmon alignment-quant was invoked improperly.; For usage information, try ./bin/salmon quant --help-alignments; Exiting.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/222
https://github.com/COMBINE-lab/salmon/issues/222:695,Testability,Log,Logs,695,"Hello,. Hoping you can help troubleshoot a salmon quant failure. We're running V0.9.1. BAM files are transcriptome aligned using OSA aligner. The program is calling out a malformed key:pair? The salmon_quant.log is blank. > ./bin/salmon quant -t transcripts.fa -l A -a A549_S1_001.bam -o A549_S1_quant &; [1] 10291; us1salxngst01> Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (alignment-based) v0.9.1; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { A549_S1_001.bam }; # [ output ] => { A549_S1_quant }; Logs will be written to A549_S1_quant/logs; Malformed key:value pair at line 44017: ""@PG ID:OSA IsCdna:True ; ReferenceLibraryID:Human.B37.3_RefGene20121217 VN:7.2""; ============; Exception : [ERROR: Failed to open file A549_S1.bam, exiting!]; ============; ./bin/salmon alignment-quant was invoked improperly.; For usage information, try ./bin/salmon quant --help-alignments; Exiting.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/222
https://github.com/COMBINE-lab/salmon/issues/222:733,Testability,log,logs,733,"Hello,. Hoping you can help troubleshoot a salmon quant failure. We're running V0.9.1. BAM files are transcriptome aligned using OSA aligner. The program is calling out a malformed key:pair? The salmon_quant.log is blank. > ./bin/salmon quant -t transcripts.fa -l A -a A549_S1_001.bam -o A549_S1_quant &; [1] 10291; us1salxngst01> Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (alignment-based) v0.9.1; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { A549_S1_001.bam }; # [ output ] => { A549_S1_quant }; Logs will be written to A549_S1_quant/logs; Malformed key:value pair at line 44017: ""@PG ID:OSA IsCdna:True ; ReferenceLibraryID:Human.B37.3_RefGene20121217 VN:7.2""; ============; Exception : [ERROR: Failed to open file A549_S1.bam, exiting!]; ============; ./bin/salmon alignment-quant was invoked improperly.; For usage information, try ./bin/salmon quant --help-alignments; Exiting.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/222
https://github.com/COMBINE-lab/salmon/issues/224:137,Availability,error,error,137,"Hello, I'm trying to generate an index from a transcriptome, that was generated by StringTie, with salmon, but I'm getting the following error. What could be the problem?. # salmon index -t /home/...out.gtf -i /home/...salmon-index. Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [2018-05-23 10:37:53.715] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; Elapsed time: 0.0602932s. Replaced 0 non-ATCG nucleotides; Clipped poly-A tails from 0 transcripts; Building rank-select dictionary and saving to disk done; Elapsed time: 3.7924e-05s; Writing sequence data to file . . . done; Elapsed time: 1.7461e-05s; [info] Building 32-bit suffix array (length of generalized text is 0); Building suffix array . . . FAILURE: return code from libdivsufsort() was -1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/224
https://github.com/COMBINE-lab/salmon/issues/224:833,Availability,FAILURE,FAILURE,833,"Hello, I'm trying to generate an index from a transcriptome, that was generated by StringTie, with salmon, but I'm getting the following error. What could be the problem?. # salmon index -t /home/...out.gtf -i /home/...salmon-index. Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [2018-05-23 10:37:53.715] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; Elapsed time: 0.0602932s. Replaced 0 non-ATCG nucleotides; Clipped poly-A tails from 0 transcripts; Building rank-select dictionary and saving to disk done; Elapsed time: 3.7924e-05s; Writing sequence data to file . . . done; Elapsed time: 1.7461e-05s; [info] Building 32-bit suffix array (length of generalized text is 0); Building suffix array . . . FAILURE: return code from libdivsufsort() was -1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/224
https://github.com/COMBINE-lab/salmon/issues/224:265,Deployability,upgrade,upgrade,265,"Hello, I'm trying to generate an index from a transcriptome, that was generated by StringTie, with salmon, but I'm getting the following error. What could be the problem?. # salmon index -t /home/...out.gtf -i /home/...salmon-index. Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [2018-05-23 10:37:53.715] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; Elapsed time: 0.0602932s. Replaced 0 non-ATCG nucleotides; Clipped poly-A tails from 0 transcripts; Building rank-select dictionary and saving to disk done; Elapsed time: 3.7924e-05s; Writing sequence data to file . . . done; Elapsed time: 1.7461e-05s; [info] Building 32-bit suffix array (length of generalized text is 0); Building suffix array . . . FAILURE: return code from libdivsufsort() was -1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/224
https://github.com/COMBINE-lab/salmon/issues/224:317,Deployability,upgrade,upgrades,317,"Hello, I'm trying to generate an index from a transcriptome, that was generated by StringTie, with salmon, but I'm getting the following error. What could be the problem?. # salmon index -t /home/...out.gtf -i /home/...salmon-index. Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [2018-05-23 10:37:53.715] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; Elapsed time: 0.0602932s. Replaced 0 non-ATCG nucleotides; Clipped poly-A tails from 0 transcripts; Building rank-select dictionary and saving to disk done; Elapsed time: 3.7924e-05s; Writing sequence data to file . . . done; Elapsed time: 1.7461e-05s; [info] Building 32-bit suffix array (length of generalized text is 0); Building suffix array . . . FAILURE: return code from libdivsufsort() was -1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/224
https://github.com/COMBINE-lab/salmon/issues/225:17,Deployability,install,installed,17,"The jellyfish is installed in a non standard place. How to tell cmake where jellyfish is installed?. I tried the ""-DJELLYFISH_ROOT"" parameter but it didn't work. My best regards.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/225
https://github.com/COMBINE-lab/salmon/issues/225:89,Deployability,install,installed,89,"The jellyfish is installed in a non standard place. How to tell cmake where jellyfish is installed?. I tried the ""-DJELLYFISH_ROOT"" parameter but it didn't work. My best regards.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/225
https://github.com/COMBINE-lab/salmon/issues/228:210,Availability,error,error,210,"Compiled from source (https://github.com/COMBINE-lab/salmon/archive/v0.10.0.tar.gz) on OS X 10.13.4 (Darwin Kernel Version 17.5.0: Fri Apr 13 19:32:32 PDT 2018; root:xnu-4570.51.2~1/RELEASE_X86_64 x86_64). The error generally occurs in the first 2000000 fragments (tried with paired-end samples, either IU or ISR). \#\#\# salmon (mapping-based) v0.10.0; \#\#\# [ program ] => salmon; \#\#\# [ command ] => quant; \#\#\# [ index ] => { salmon010.index }; \#\#\# [ libType ] => { A }; \#\#\# [ mates1 ] => { L001_R1.fastq.gz }; \#\#\# [ mates2 ] => { L001_R2.fastq.gz }; \#\#\# [ validateMappings ] => { }",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/228
https://github.com/COMBINE-lab/salmon/issues/228:578,Security,validat,validateMappings,578,"Compiled from source (https://github.com/COMBINE-lab/salmon/archive/v0.10.0.tar.gz) on OS X 10.13.4 (Darwin Kernel Version 17.5.0: Fri Apr 13 19:32:32 PDT 2018; root:xnu-4570.51.2~1/RELEASE_X86_64 x86_64). The error generally occurs in the first 2000000 fragments (tried with paired-end samples, either IU or ISR). \#\#\# salmon (mapping-based) v0.10.0; \#\#\# [ program ] => salmon; \#\#\# [ command ] => quant; \#\#\# [ index ] => { salmon010.index }; \#\#\# [ libType ] => { A }; \#\#\# [ mates1 ] => { L001_R1.fastq.gz }; \#\#\# [ mates2 ] => { L001_R2.fastq.gz }; \#\#\# [ validateMappings ] => { }",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/228
https://github.com/COMBINE-lab/salmon/issues/229:7377,Availability,Error,Error,7377,"mum of 0.90% zero probability fragments; [2018-05-31 17:08:09.572] [jointLog] [info] Thread saw mini-batch with a maximum of 1.04% zero probability fragments; [2018-05-31 17:08:09.634] [jointLog] [info] Thread saw mini-batch with a maximum of 0.90% zero probability fragments; [2018-05-31 17:08:09.641] [jointLog] [info] Thread saw mini-batch with a maximum of 1.00% zero probability fragments; [2018-05-31 17:08:09.649] [jointLog] [info] Thread saw mini-batch with a maximum of 0.88% zero probability fragments; [2018-05-31 17:08:09.690] [jointLog] [info] Thread saw mini-batch with a maximum of 0.96% zero probability fragments; [2018-05-31 17:08:09.702] [jointLog] [info] Thread saw mini-batch with a maximum of 0.92% zero probability fragments; [2018-05-31 17:08:09.721] [jointLog] [info] Thread saw mini-batch with a maximum of 0.88% zero probability fragments; [2018-05-31 17:08:09.728] [jointLog] [info] Thread saw mini-batch with a maximum of 0.90% zero probability fragments; [2018-05-31 17:08:09.782] [jointLog] [info] Thread saw mini-batch with a maximum of 0.86% zero probability fragments; [2018-05-31 17:08:09.786] [jointLog] [info] Thread saw mini-batch with a maximum of 0.90% zero probability fragments. [2018-05-31 17:08:10.483] [jointLog] [info] Computed 582392 rich equivalence classes for further processing; [2018-05-31 17:08:10.483] [jointLog] [info] Counted 59985194 total reads in the equivalence classes; [2018-05-31 17:08:10.551] [jointLog] [info] Mapping rate = 88.2723%. [2018-05-31 17:08:10.551] [jointLog] [info] finished quantifyLibrary(); [2018-05-31 17:08:10.551] [jointLog] [info] Starting optimizer; [2018-05-31 17:08:11.488] [jointLog] [info] Marked 1 weighted equivalence classes as degenerate; [2018-05-31 17:08:11.523] [jointLog] [info] iteration = 0 | max rel diff. = 127.399; Exception : [Error in function boost::math::digamma<double>(double): numeric overflow]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229
https://github.com/COMBINE-lab/salmon/issues/229:1170,Performance,Load,Loading,1170,"lmon (mapping-based) v0.10.0; \#\#\# [ program ] => salmon; \#\#\# [ command ] => quant; \#\#\# [ index ] => { salmon010.index.all_combined }; \#\#\# [ libType ] => { A }; \#\#\# [ mates1 ] => { R1.fastq.gz }; \#\#\# [ mates2 ] => { R2.fastq.gz }; \#\#\# [ posBias ] => { }; \#\#\# [ gcBias ] => { }; \#\#\# [ seqBias ] => { }; \#\#\# [ useVBOpt ] => { }; \#\#\# [ validateMappings ] => { }; \#\#\# [ output ] => { processed_salmon0100_k31_allcombined/R }; Logs will be written to processed_salmon0100_k31_allcombined/R/logs; [2018-05-31 16:54:42.310] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-05-31 16:54:42.310] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2018-05-31 16:54:42.310] [jointLog] [info] parsing read library format; [2018-05-31 16:54:42.310] [jointLog] [info] There is 1 library.; [2018-05-31 16:54:42.480] [jointLog] [info] Loading Quasi index; [2018-05-31 16:54:42.501] [jointLog] [info] Loading 32-bit quasi index; [2018-05-31 16:54:42.501] [stderrLog] [info] Loading Suffix Array; [2018-05-31 16:55:01.293] [stderrLog] [info] Loading Transcript Info; [2018-05-31 16:55:06.428] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-05-31 16:55:07.107] [stderrLog] [info] There were 310732 set bits in the bit array; [2018-05-31 16:55:07.158] [stderrLog] [info] Computing transcript lengths; [2018-05-31 16:55:07.159] [stderrLog] [info] Waiting to finish loading hash; [2018-05-31 16:55:25.973] [jointLog] [info] done; [2018-05-31 16:55:25.973] [jointLog] [info] Index contained 310732 targets; [2018-05-31 16:55:25.973] [stderrLog] [info] Done loading index. processed 67500000 fragmentsointLog] [info] Automatically detected most likely library type as IU; hits: 224580543, hits per frag: 3.35031[2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 1.04% zero probability fragments; [2018-05-31 17:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229
https://github.com/COMBINE-lab/salmon/issues/229:1235,Performance,Load,Loading,1235,"command ] => quant; \#\#\# [ index ] => { salmon010.index.all_combined }; \#\#\# [ libType ] => { A }; \#\#\# [ mates1 ] => { R1.fastq.gz }; \#\#\# [ mates2 ] => { R2.fastq.gz }; \#\#\# [ posBias ] => { }; \#\#\# [ gcBias ] => { }; \#\#\# [ seqBias ] => { }; \#\#\# [ useVBOpt ] => { }; \#\#\# [ validateMappings ] => { }; \#\#\# [ output ] => { processed_salmon0100_k31_allcombined/R }; Logs will be written to processed_salmon0100_k31_allcombined/R/logs; [2018-05-31 16:54:42.310] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-05-31 16:54:42.310] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2018-05-31 16:54:42.310] [jointLog] [info] parsing read library format; [2018-05-31 16:54:42.310] [jointLog] [info] There is 1 library.; [2018-05-31 16:54:42.480] [jointLog] [info] Loading Quasi index; [2018-05-31 16:54:42.501] [jointLog] [info] Loading 32-bit quasi index; [2018-05-31 16:54:42.501] [stderrLog] [info] Loading Suffix Array; [2018-05-31 16:55:01.293] [stderrLog] [info] Loading Transcript Info; [2018-05-31 16:55:06.428] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-05-31 16:55:07.107] [stderrLog] [info] There were 310732 set bits in the bit array; [2018-05-31 16:55:07.158] [stderrLog] [info] Computing transcript lengths; [2018-05-31 16:55:07.159] [stderrLog] [info] Waiting to finish loading hash; [2018-05-31 16:55:25.973] [jointLog] [info] done; [2018-05-31 16:55:25.973] [jointLog] [info] Index contained 310732 targets; [2018-05-31 16:55:25.973] [stderrLog] [info] Done loading index. processed 67500000 fragmentsointLog] [info] Automatically detected most likely library type as IU; hits: 224580543, hits per frag: 3.35031[2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 1.04% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229
https://github.com/COMBINE-lab/salmon/issues/229:1308,Performance,Load,Loading,1308,"d }; \#\#\# [ libType ] => { A }; \#\#\# [ mates1 ] => { R1.fastq.gz }; \#\#\# [ mates2 ] => { R2.fastq.gz }; \#\#\# [ posBias ] => { }; \#\#\# [ gcBias ] => { }; \#\#\# [ seqBias ] => { }; \#\#\# [ useVBOpt ] => { }; \#\#\# [ validateMappings ] => { }; \#\#\# [ output ] => { processed_salmon0100_k31_allcombined/R }; Logs will be written to processed_salmon0100_k31_allcombined/R/logs; [2018-05-31 16:54:42.310] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-05-31 16:54:42.310] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2018-05-31 16:54:42.310] [jointLog] [info] parsing read library format; [2018-05-31 16:54:42.310] [jointLog] [info] There is 1 library.; [2018-05-31 16:54:42.480] [jointLog] [info] Loading Quasi index; [2018-05-31 16:54:42.501] [jointLog] [info] Loading 32-bit quasi index; [2018-05-31 16:54:42.501] [stderrLog] [info] Loading Suffix Array; [2018-05-31 16:55:01.293] [stderrLog] [info] Loading Transcript Info; [2018-05-31 16:55:06.428] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-05-31 16:55:07.107] [stderrLog] [info] There were 310732 set bits in the bit array; [2018-05-31 16:55:07.158] [stderrLog] [info] Computing transcript lengths; [2018-05-31 16:55:07.159] [stderrLog] [info] Waiting to finish loading hash; [2018-05-31 16:55:25.973] [jointLog] [info] done; [2018-05-31 16:55:25.973] [jointLog] [info] Index contained 310732 targets; [2018-05-31 16:55:25.973] [stderrLog] [info] Done loading index. processed 67500000 fragmentsointLog] [info] Automatically detected most likely library type as IU; hits: 224580543, hits per frag: 3.35031[2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 1.04% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 0.96% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229
https://github.com/COMBINE-lab/salmon/issues/229:1375,Performance,Load,Loading,1375,"}; \#\#\# [ mates2 ] => { R2.fastq.gz }; \#\#\# [ posBias ] => { }; \#\#\# [ gcBias ] => { }; \#\#\# [ seqBias ] => { }; \#\#\# [ useVBOpt ] => { }; \#\#\# [ validateMappings ] => { }; \#\#\# [ output ] => { processed_salmon0100_k31_allcombined/R }; Logs will be written to processed_salmon0100_k31_allcombined/R/logs; [2018-05-31 16:54:42.310] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-05-31 16:54:42.310] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2018-05-31 16:54:42.310] [jointLog] [info] parsing read library format; [2018-05-31 16:54:42.310] [jointLog] [info] There is 1 library.; [2018-05-31 16:54:42.480] [jointLog] [info] Loading Quasi index; [2018-05-31 16:54:42.501] [jointLog] [info] Loading 32-bit quasi index; [2018-05-31 16:54:42.501] [stderrLog] [info] Loading Suffix Array; [2018-05-31 16:55:01.293] [stderrLog] [info] Loading Transcript Info; [2018-05-31 16:55:06.428] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-05-31 16:55:07.107] [stderrLog] [info] There were 310732 set bits in the bit array; [2018-05-31 16:55:07.158] [stderrLog] [info] Computing transcript lengths; [2018-05-31 16:55:07.159] [stderrLog] [info] Waiting to finish loading hash; [2018-05-31 16:55:25.973] [jointLog] [info] done; [2018-05-31 16:55:25.973] [jointLog] [info] Index contained 310732 targets; [2018-05-31 16:55:25.973] [stderrLog] [info] Done loading index. processed 67500000 fragmentsointLog] [info] Automatically detected most likely library type as IU; hits: 224580543, hits per frag: 3.35031[2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 1.04% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 0.96% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 0.84% zero probabil",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229
https://github.com/COMBINE-lab/salmon/issues/229:1445,Performance,Load,Loading,1445,"# [ gcBias ] => { }; \#\#\# [ seqBias ] => { }; \#\#\# [ useVBOpt ] => { }; \#\#\# [ validateMappings ] => { }; \#\#\# [ output ] => { processed_salmon0100_k31_allcombined/R }; Logs will be written to processed_salmon0100_k31_allcombined/R/logs; [2018-05-31 16:54:42.310] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-05-31 16:54:42.310] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2018-05-31 16:54:42.310] [jointLog] [info] parsing read library format; [2018-05-31 16:54:42.310] [jointLog] [info] There is 1 library.; [2018-05-31 16:54:42.480] [jointLog] [info] Loading Quasi index; [2018-05-31 16:54:42.501] [jointLog] [info] Loading 32-bit quasi index; [2018-05-31 16:54:42.501] [stderrLog] [info] Loading Suffix Array; [2018-05-31 16:55:01.293] [stderrLog] [info] Loading Transcript Info; [2018-05-31 16:55:06.428] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-05-31 16:55:07.107] [stderrLog] [info] There were 310732 set bits in the bit array; [2018-05-31 16:55:07.158] [stderrLog] [info] Computing transcript lengths; [2018-05-31 16:55:07.159] [stderrLog] [info] Waiting to finish loading hash; [2018-05-31 16:55:25.973] [jointLog] [info] done; [2018-05-31 16:55:25.973] [jointLog] [info] Index contained 310732 targets; [2018-05-31 16:55:25.973] [stderrLog] [info] Done loading index. processed 67500000 fragmentsointLog] [info] Automatically detected most likely library type as IU; hits: 224580543, hits per frag: 3.35031[2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 1.04% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 0.96% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 0.84% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw min",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229
https://github.com/COMBINE-lab/salmon/issues/229:1704,Performance,load,loading,1704,"ogs; [2018-05-31 16:54:42.310] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-05-31 16:54:42.310] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2018-05-31 16:54:42.310] [jointLog] [info] parsing read library format; [2018-05-31 16:54:42.310] [jointLog] [info] There is 1 library.; [2018-05-31 16:54:42.480] [jointLog] [info] Loading Quasi index; [2018-05-31 16:54:42.501] [jointLog] [info] Loading 32-bit quasi index; [2018-05-31 16:54:42.501] [stderrLog] [info] Loading Suffix Array; [2018-05-31 16:55:01.293] [stderrLog] [info] Loading Transcript Info; [2018-05-31 16:55:06.428] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-05-31 16:55:07.107] [stderrLog] [info] There were 310732 set bits in the bit array; [2018-05-31 16:55:07.158] [stderrLog] [info] Computing transcript lengths; [2018-05-31 16:55:07.159] [stderrLog] [info] Waiting to finish loading hash; [2018-05-31 16:55:25.973] [jointLog] [info] done; [2018-05-31 16:55:25.973] [jointLog] [info] Index contained 310732 targets; [2018-05-31 16:55:25.973] [stderrLog] [info] Done loading index. processed 67500000 fragmentsointLog] [info] Automatically detected most likely library type as IU; hits: 224580543, hits per frag: 3.35031[2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 1.04% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 0.96% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 0.84% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 0.96% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 0.88% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batc",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229
https://github.com/COMBINE-lab/salmon/issues/229:1894,Performance,load,loading,1894,"e of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2018-05-31 16:54:42.310] [jointLog] [info] parsing read library format; [2018-05-31 16:54:42.310] [jointLog] [info] There is 1 library.; [2018-05-31 16:54:42.480] [jointLog] [info] Loading Quasi index; [2018-05-31 16:54:42.501] [jointLog] [info] Loading 32-bit quasi index; [2018-05-31 16:54:42.501] [stderrLog] [info] Loading Suffix Array; [2018-05-31 16:55:01.293] [stderrLog] [info] Loading Transcript Info; [2018-05-31 16:55:06.428] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-05-31 16:55:07.107] [stderrLog] [info] There were 310732 set bits in the bit array; [2018-05-31 16:55:07.158] [stderrLog] [info] Computing transcript lengths; [2018-05-31 16:55:07.159] [stderrLog] [info] Waiting to finish loading hash; [2018-05-31 16:55:25.973] [jointLog] [info] done; [2018-05-31 16:55:25.973] [jointLog] [info] Index contained 310732 targets; [2018-05-31 16:55:25.973] [stderrLog] [info] Done loading index. processed 67500000 fragmentsointLog] [info] Automatically detected most likely library type as IU; hits: 224580543, hits per frag: 3.35031[2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 1.04% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 0.96% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 0.84% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 0.96% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 0.88% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 1.00% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 0.92% zero probability fragments; [2018-05-31 17",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229
https://github.com/COMBINE-lab/salmon/issues/229:7171,Performance,optimiz,optimizer,7171,"mum of 0.90% zero probability fragments; [2018-05-31 17:08:09.572] [jointLog] [info] Thread saw mini-batch with a maximum of 1.04% zero probability fragments; [2018-05-31 17:08:09.634] [jointLog] [info] Thread saw mini-batch with a maximum of 0.90% zero probability fragments; [2018-05-31 17:08:09.641] [jointLog] [info] Thread saw mini-batch with a maximum of 1.00% zero probability fragments; [2018-05-31 17:08:09.649] [jointLog] [info] Thread saw mini-batch with a maximum of 0.88% zero probability fragments; [2018-05-31 17:08:09.690] [jointLog] [info] Thread saw mini-batch with a maximum of 0.96% zero probability fragments; [2018-05-31 17:08:09.702] [jointLog] [info] Thread saw mini-batch with a maximum of 0.92% zero probability fragments; [2018-05-31 17:08:09.721] [jointLog] [info] Thread saw mini-batch with a maximum of 0.88% zero probability fragments; [2018-05-31 17:08:09.728] [jointLog] [info] Thread saw mini-batch with a maximum of 0.90% zero probability fragments; [2018-05-31 17:08:09.782] [jointLog] [info] Thread saw mini-batch with a maximum of 0.86% zero probability fragments; [2018-05-31 17:08:09.786] [jointLog] [info] Thread saw mini-batch with a maximum of 0.90% zero probability fragments. [2018-05-31 17:08:10.483] [jointLog] [info] Computed 582392 rich equivalence classes for further processing; [2018-05-31 17:08:10.483] [jointLog] [info] Counted 59985194 total reads in the equivalence classes; [2018-05-31 17:08:10.551] [jointLog] [info] Mapping rate = 88.2723%. [2018-05-31 17:08:10.551] [jointLog] [info] finished quantifyLibrary(); [2018-05-31 17:08:10.551] [jointLog] [info] Starting optimizer; [2018-05-31 17:08:11.488] [jointLog] [info] Marked 1 weighted equivalence classes as degenerate; [2018-05-31 17:08:11.523] [jointLog] [info] iteration = 0 | max rel diff. = 127.399; Exception : [Error in function boost::math::digamma<double>(double): numeric overflow]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229
https://github.com/COMBINE-lab/salmon/issues/229:1967,Safety,detect,detected,1967,"ng set to 4; [2018-05-31 16:54:42.310] [jointLog] [info] parsing read library format; [2018-05-31 16:54:42.310] [jointLog] [info] There is 1 library.; [2018-05-31 16:54:42.480] [jointLog] [info] Loading Quasi index; [2018-05-31 16:54:42.501] [jointLog] [info] Loading 32-bit quasi index; [2018-05-31 16:54:42.501] [stderrLog] [info] Loading Suffix Array; [2018-05-31 16:55:01.293] [stderrLog] [info] Loading Transcript Info; [2018-05-31 16:55:06.428] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-05-31 16:55:07.107] [stderrLog] [info] There were 310732 set bits in the bit array; [2018-05-31 16:55:07.158] [stderrLog] [info] Computing transcript lengths; [2018-05-31 16:55:07.159] [stderrLog] [info] Waiting to finish loading hash; [2018-05-31 16:55:25.973] [jointLog] [info] done; [2018-05-31 16:55:25.973] [jointLog] [info] Index contained 310732 targets; [2018-05-31 16:55:25.973] [stderrLog] [info] Done loading index. processed 67500000 fragmentsointLog] [info] Automatically detected most likely library type as IU; hits: 224580543, hits per frag: 3.35031[2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 1.04% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 0.96% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 0.84% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 0.96% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 0.88% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 1.00% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 0.92% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 0.84% zero probabi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229
https://github.com/COMBINE-lab/salmon/issues/229:544,Security,validat,validateMappings,544,"Sorry, me (#228) again...; While most of my samples seem to work on linux, I got an exception for one of them:. Version Info: This is the most recent version of Salmon.; \#\#\# salmon (mapping-based) v0.10.0; \#\#\# [ program ] => salmon; \#\#\# [ command ] => quant; \#\#\# [ index ] => { salmon010.index.all_combined }; \#\#\# [ libType ] => { A }; \#\#\# [ mates1 ] => { R1.fastq.gz }; \#\#\# [ mates2 ] => { R2.fastq.gz }; \#\#\# [ posBias ] => { }; \#\#\# [ gcBias ] => { }; \#\#\# [ seqBias ] => { }; \#\#\# [ useVBOpt ] => { }; \#\#\# [ validateMappings ] => { }; \#\#\# [ output ] => { processed_salmon0100_k31_allcombined/R }; Logs will be written to processed_salmon0100_k31_allcombined/R/logs; [2018-05-31 16:54:42.310] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-05-31 16:54:42.310] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2018-05-31 16:54:42.310] [jointLog] [info] parsing read library format; [2018-05-31 16:54:42.310] [jointLog] [info] There is 1 library.; [2018-05-31 16:54:42.480] [jointLog] [info] Loading Quasi index; [2018-05-31 16:54:42.501] [jointLog] [info] Loading 32-bit quasi index; [2018-05-31 16:54:42.501] [stderrLog] [info] Loading Suffix Array; [2018-05-31 16:55:01.293] [stderrLog] [info] Loading Transcript Info; [2018-05-31 16:55:06.428] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-05-31 16:55:07.107] [stderrLog] [info] There were 310732 set bits in the bit array; [2018-05-31 16:55:07.158] [stderrLog] [info] Computing transcript lengths; [2018-05-31 16:55:07.159] [stderrLog] [info] Waiting to finish loading hash; [2018-05-31 16:55:25.973] [jointLog] [info] done; [2018-05-31 16:55:25.973] [jointLog] [info] Index contained 310732 targets; [2018-05-31 16:55:25.973] [stderrLog] [info] Done loading index. processed 67500000 fragmentsointLog] [info] Automatically detected most likely library type ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229
https://github.com/COMBINE-lab/salmon/issues/229:893,Security,validat,validateMappings,893,"Sorry, me (#228) again...; While most of my samples seem to work on linux, I got an exception for one of them:. Version Info: This is the most recent version of Salmon.; \#\#\# salmon (mapping-based) v0.10.0; \#\#\# [ program ] => salmon; \#\#\# [ command ] => quant; \#\#\# [ index ] => { salmon010.index.all_combined }; \#\#\# [ libType ] => { A }; \#\#\# [ mates1 ] => { R1.fastq.gz }; \#\#\# [ mates2 ] => { R2.fastq.gz }; \#\#\# [ posBias ] => { }; \#\#\# [ gcBias ] => { }; \#\#\# [ seqBias ] => { }; \#\#\# [ useVBOpt ] => { }; \#\#\# [ validateMappings ] => { }; \#\#\# [ output ] => { processed_salmon0100_k31_allcombined/R }; Logs will be written to processed_salmon0100_k31_allcombined/R/logs; [2018-05-31 16:54:42.310] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-05-31 16:54:42.310] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2018-05-31 16:54:42.310] [jointLog] [info] parsing read library format; [2018-05-31 16:54:42.310] [jointLog] [info] There is 1 library.; [2018-05-31 16:54:42.480] [jointLog] [info] Loading Quasi index; [2018-05-31 16:54:42.501] [jointLog] [info] Loading 32-bit quasi index; [2018-05-31 16:54:42.501] [stderrLog] [info] Loading Suffix Array; [2018-05-31 16:55:01.293] [stderrLog] [info] Loading Transcript Info; [2018-05-31 16:55:06.428] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-05-31 16:55:07.107] [stderrLog] [info] There were 310732 set bits in the bit array; [2018-05-31 16:55:07.158] [stderrLog] [info] Computing transcript lengths; [2018-05-31 16:55:07.159] [stderrLog] [info] Waiting to finish loading hash; [2018-05-31 16:55:25.973] [jointLog] [info] done; [2018-05-31 16:55:25.973] [jointLog] [info] Index contained 310732 targets; [2018-05-31 16:55:25.973] [stderrLog] [info] Done loading index. processed 67500000 fragmentsointLog] [info] Automatically detected most likely library type ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229
https://github.com/COMBINE-lab/salmon/issues/229:1712,Security,hash,hash,1712,"ogs; [2018-05-31 16:54:42.310] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-05-31 16:54:42.310] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2018-05-31 16:54:42.310] [jointLog] [info] parsing read library format; [2018-05-31 16:54:42.310] [jointLog] [info] There is 1 library.; [2018-05-31 16:54:42.480] [jointLog] [info] Loading Quasi index; [2018-05-31 16:54:42.501] [jointLog] [info] Loading 32-bit quasi index; [2018-05-31 16:54:42.501] [stderrLog] [info] Loading Suffix Array; [2018-05-31 16:55:01.293] [stderrLog] [info] Loading Transcript Info; [2018-05-31 16:55:06.428] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-05-31 16:55:07.107] [stderrLog] [info] There were 310732 set bits in the bit array; [2018-05-31 16:55:07.158] [stderrLog] [info] Computing transcript lengths; [2018-05-31 16:55:07.159] [stderrLog] [info] Waiting to finish loading hash; [2018-05-31 16:55:25.973] [jointLog] [info] done; [2018-05-31 16:55:25.973] [jointLog] [info] Index contained 310732 targets; [2018-05-31 16:55:25.973] [stderrLog] [info] Done loading index. processed 67500000 fragmentsointLog] [info] Automatically detected most likely library type as IU; hits: 224580543, hits per frag: 3.35031[2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 1.04% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 0.96% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 0.84% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 0.96% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 0.88% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batc",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229
https://github.com/COMBINE-lab/salmon/issues/229:636,Testability,Log,Logs,636,"Sorry, me (#228) again...; While most of my samples seem to work on linux, I got an exception for one of them:. Version Info: This is the most recent version of Salmon.; \#\#\# salmon (mapping-based) v0.10.0; \#\#\# [ program ] => salmon; \#\#\# [ command ] => quant; \#\#\# [ index ] => { salmon010.index.all_combined }; \#\#\# [ libType ] => { A }; \#\#\# [ mates1 ] => { R1.fastq.gz }; \#\#\# [ mates2 ] => { R2.fastq.gz }; \#\#\# [ posBias ] => { }; \#\#\# [ gcBias ] => { }; \#\#\# [ seqBias ] => { }; \#\#\# [ useVBOpt ] => { }; \#\#\# [ validateMappings ] => { }; \#\#\# [ output ] => { processed_salmon0100_k31_allcombined/R }; Logs will be written to processed_salmon0100_k31_allcombined/R/logs; [2018-05-31 16:54:42.310] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-05-31 16:54:42.310] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2018-05-31 16:54:42.310] [jointLog] [info] parsing read library format; [2018-05-31 16:54:42.310] [jointLog] [info] There is 1 library.; [2018-05-31 16:54:42.480] [jointLog] [info] Loading Quasi index; [2018-05-31 16:54:42.501] [jointLog] [info] Loading 32-bit quasi index; [2018-05-31 16:54:42.501] [stderrLog] [info] Loading Suffix Array; [2018-05-31 16:55:01.293] [stderrLog] [info] Loading Transcript Info; [2018-05-31 16:55:06.428] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-05-31 16:55:07.107] [stderrLog] [info] There were 310732 set bits in the bit array; [2018-05-31 16:55:07.158] [stderrLog] [info] Computing transcript lengths; [2018-05-31 16:55:07.159] [stderrLog] [info] Waiting to finish loading hash; [2018-05-31 16:55:25.973] [jointLog] [info] done; [2018-05-31 16:55:25.973] [jointLog] [info] Index contained 310732 targets; [2018-05-31 16:55:25.973] [stderrLog] [info] Done loading index. processed 67500000 fragmentsointLog] [info] Automatically detected most likely library type ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229
https://github.com/COMBINE-lab/salmon/issues/229:699,Testability,log,logs,699,"Sorry, me (#228) again...; While most of my samples seem to work on linux, I got an exception for one of them:. Version Info: This is the most recent version of Salmon.; \#\#\# salmon (mapping-based) v0.10.0; \#\#\# [ program ] => salmon; \#\#\# [ command ] => quant; \#\#\# [ index ] => { salmon010.index.all_combined }; \#\#\# [ libType ] => { A }; \#\#\# [ mates1 ] => { R1.fastq.gz }; \#\#\# [ mates2 ] => { R2.fastq.gz }; \#\#\# [ posBias ] => { }; \#\#\# [ gcBias ] => { }; \#\#\# [ seqBias ] => { }; \#\#\# [ useVBOpt ] => { }; \#\#\# [ validateMappings ] => { }; \#\#\# [ output ] => { processed_salmon0100_k31_allcombined/R }; Logs will be written to processed_salmon0100_k31_allcombined/R/logs; [2018-05-31 16:54:42.310] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-05-31 16:54:42.310] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2018-05-31 16:54:42.310] [jointLog] [info] parsing read library format; [2018-05-31 16:54:42.310] [jointLog] [info] There is 1 library.; [2018-05-31 16:54:42.480] [jointLog] [info] Loading Quasi index; [2018-05-31 16:54:42.501] [jointLog] [info] Loading 32-bit quasi index; [2018-05-31 16:54:42.501] [stderrLog] [info] Loading Suffix Array; [2018-05-31 16:55:01.293] [stderrLog] [info] Loading Transcript Info; [2018-05-31 16:55:06.428] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-05-31 16:55:07.107] [stderrLog] [info] There were 310732 set bits in the bit array; [2018-05-31 16:55:07.158] [stderrLog] [info] Computing transcript lengths; [2018-05-31 16:55:07.159] [stderrLog] [info] Waiting to finish loading hash; [2018-05-31 16:55:25.973] [jointLog] [info] done; [2018-05-31 16:55:25.973] [jointLog] [info] Index contained 310732 targets; [2018-05-31 16:55:25.973] [stderrLog] [info] Done loading index. processed 67500000 fragmentsointLog] [info] Automatically detected most likely library type ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229
https://github.com/COMBINE-lab/salmon/issues/231:202,Availability,error,error,202,"Hi,. I'm trying to compile Salmon like this:; `cmake -DTBB_INSTALL_DIR=/home/fc464/software/tbb -DFETCH_BOOST=TRUE -DCMAKE_INSTALL_PREFIX=/home/fc464/software/salmon ..`. but during; `make`. I get this error:. ```; [ 50%] Built target alevin_core; [ 55%] Built target ksw2pp_basic; [ 57%] Built target ksw2pp_sse2; [ 58%] Built target ksw2pp; [ 72%] Built target salmon_core; [ 73%] Linking CXX executable unitTests; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xd30): warning: the use of `tempnam' is dangerous, better use `mkstemp'; /usr/bin/ld: /usr/local/software/spack/spack-0.11.2/opt/spack/linux-rhel7-x86_64/gcc-5.4.0/bzip2-1.0.6-xsgsccpkklxd745bl2gbgyhube56o6w4/lib/libbz2.a(bzlib.o): unrecognized relocation (0x2a) in section `.text'; /usr/bin/ld: final link failed: Bad value; collect2: error: ld returned 1 exit status; make[2]: *** [src/unitTests] Error 1; make[1]: *** [src/CMakeFiles/unitTests.dir/all] Error 2; make: *** [all] Error 2; ```. What's wrong?; Best; F",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/231
https://github.com/COMBINE-lab/salmon/issues/231:891,Availability,error,error,891,"Hi,. I'm trying to compile Salmon like this:; `cmake -DTBB_INSTALL_DIR=/home/fc464/software/tbb -DFETCH_BOOST=TRUE -DCMAKE_INSTALL_PREFIX=/home/fc464/software/salmon ..`. but during; `make`. I get this error:. ```; [ 50%] Built target alevin_core; [ 55%] Built target ksw2pp_basic; [ 57%] Built target ksw2pp_sse2; [ 58%] Built target ksw2pp; [ 72%] Built target salmon_core; [ 73%] Linking CXX executable unitTests; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xd30): warning: the use of `tempnam' is dangerous, better use `mkstemp'; /usr/bin/ld: /usr/local/software/spack/spack-0.11.2/opt/spack/linux-rhel7-x86_64/gcc-5.4.0/bzip2-1.0.6-xsgsccpkklxd745bl2gbgyhube56o6w4/lib/libbz2.a(bzlib.o): unrecognized relocation (0x2a) in section `.text'; /usr/bin/ld: final link failed: Bad value; collect2: error: ld returned 1 exit status; make[2]: *** [src/unitTests] Error 1; make[1]: *** [src/CMakeFiles/unitTests.dir/all] Error 2; make: *** [all] Error 2; ```. What's wrong?; Best; F",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/231
https://github.com/COMBINE-lab/salmon/issues/231:954,Availability,Error,Error,954,"Hi,. I'm trying to compile Salmon like this:; `cmake -DTBB_INSTALL_DIR=/home/fc464/software/tbb -DFETCH_BOOST=TRUE -DCMAKE_INSTALL_PREFIX=/home/fc464/software/salmon ..`. but during; `make`. I get this error:. ```; [ 50%] Built target alevin_core; [ 55%] Built target ksw2pp_basic; [ 57%] Built target ksw2pp_sse2; [ 58%] Built target ksw2pp; [ 72%] Built target salmon_core; [ 73%] Linking CXX executable unitTests; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xd30): warning: the use of `tempnam' is dangerous, better use `mkstemp'; /usr/bin/ld: /usr/local/software/spack/spack-0.11.2/opt/spack/linux-rhel7-x86_64/gcc-5.4.0/bzip2-1.0.6-xsgsccpkklxd745bl2gbgyhube56o6w4/lib/libbz2.a(bzlib.o): unrecognized relocation (0x2a) in section `.text'; /usr/bin/ld: final link failed: Bad value; collect2: error: ld returned 1 exit status; make[2]: *** [src/unitTests] Error 1; make[1]: *** [src/CMakeFiles/unitTests.dir/all] Error 2; make: *** [all] Error 2; ```. What's wrong?; Best; F",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/231
https://github.com/COMBINE-lab/salmon/issues/231:1011,Availability,Error,Error,1011,"Hi,. I'm trying to compile Salmon like this:; `cmake -DTBB_INSTALL_DIR=/home/fc464/software/tbb -DFETCH_BOOST=TRUE -DCMAKE_INSTALL_PREFIX=/home/fc464/software/salmon ..`. but during; `make`. I get this error:. ```; [ 50%] Built target alevin_core; [ 55%] Built target ksw2pp_basic; [ 57%] Built target ksw2pp_sse2; [ 58%] Built target ksw2pp; [ 72%] Built target salmon_core; [ 73%] Linking CXX executable unitTests; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xd30): warning: the use of `tempnam' is dangerous, better use `mkstemp'; /usr/bin/ld: /usr/local/software/spack/spack-0.11.2/opt/spack/linux-rhel7-x86_64/gcc-5.4.0/bzip2-1.0.6-xsgsccpkklxd745bl2gbgyhube56o6w4/lib/libbz2.a(bzlib.o): unrecognized relocation (0x2a) in section `.text'; /usr/bin/ld: final link failed: Bad value; collect2: error: ld returned 1 exit status; make[2]: *** [src/unitTests] Error 1; make[1]: *** [src/CMakeFiles/unitTests.dir/all] Error 2; make: *** [all] Error 2; ```. What's wrong?; Best; F",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/231
https://github.com/COMBINE-lab/salmon/issues/231:1036,Availability,Error,Error,1036,"Hi,. I'm trying to compile Salmon like this:; `cmake -DTBB_INSTALL_DIR=/home/fc464/software/tbb -DFETCH_BOOST=TRUE -DCMAKE_INSTALL_PREFIX=/home/fc464/software/salmon ..`. but during; `make`. I get this error:. ```; [ 50%] Built target alevin_core; [ 55%] Built target ksw2pp_basic; [ 57%] Built target ksw2pp_sse2; [ 58%] Built target ksw2pp; [ 72%] Built target salmon_core; [ 73%] Linking CXX executable unitTests; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xd30): warning: the use of `tempnam' is dangerous, better use `mkstemp'; /usr/bin/ld: /usr/local/software/spack/spack-0.11.2/opt/spack/linux-rhel7-x86_64/gcc-5.4.0/bzip2-1.0.6-xsgsccpkklxd745bl2gbgyhube56o6w4/lib/libbz2.a(bzlib.o): unrecognized relocation (0x2a) in section `.text'; /usr/bin/ld: final link failed: Bad value; collect2: error: ld returned 1 exit status; make[2]: *** [src/unitTests] Error 1; make[1]: *** [src/CMakeFiles/unitTests.dir/all] Error 2; make: *** [all] Error 2; ```. What's wrong?; Best; F",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/231
https://github.com/COMBINE-lab/salmon/issues/231:432,Deployability,install,install,432,"Hi,. I'm trying to compile Salmon like this:; `cmake -DTBB_INSTALL_DIR=/home/fc464/software/tbb -DFETCH_BOOST=TRUE -DCMAKE_INSTALL_PREFIX=/home/fc464/software/salmon ..`. but during; `make`. I get this error:. ```; [ 50%] Built target alevin_core; [ 55%] Built target ksw2pp_basic; [ 57%] Built target ksw2pp_sse2; [ 58%] Built target ksw2pp; [ 72%] Built target salmon_core; [ 73%] Linking CXX executable unitTests; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xd30): warning: the use of `tempnam' is dangerous, better use `mkstemp'; /usr/bin/ld: /usr/local/software/spack/spack-0.11.2/opt/spack/linux-rhel7-x86_64/gcc-5.4.0/bzip2-1.0.6-xsgsccpkklxd745bl2gbgyhube56o6w4/lib/libbz2.a(bzlib.o): unrecognized relocation (0x2a) in section `.text'; /usr/bin/ld: final link failed: Bad value; collect2: error: ld returned 1 exit status; make[2]: *** [src/unitTests] Error 1; make[1]: *** [src/CMakeFiles/unitTests.dir/all] Error 2; make: *** [all] Error 2; ```. What's wrong?; Best; F",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/231
https://github.com/COMBINE-lab/salmon/issues/232:13,Availability,down,downloaded,13,"Hi, ; I just downloaded the salmon.10.0 version and indexed my transcriptome using the https://www.gencodegenes.org/releases/current.html --> FASTA files --> trasnscript sequences. When I try to run Salmon I receive the above error message. The last time I ran Salmon I used 9.1 and this trasncriptome from ensembl ftp://ftp.ensembl.org/pub/release-92/fasta/homo_sapiens/cdna/...; What is going on here? . The header.json file looks like this: ; {; ""value0"": {; ""IndexType"": 1,; ""IndexVersion"": ""q3"",; ""UsesKmers"": true,; ""KmerLen"": 31,; ""BigSA"": false,; ""PerfectHash"": false; }; }",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/232
https://github.com/COMBINE-lab/salmon/issues/232:226,Availability,error,error,226,"Hi, ; I just downloaded the salmon.10.0 version and indexed my transcriptome using the https://www.gencodegenes.org/releases/current.html --> FASTA files --> trasnscript sequences. When I try to run Salmon I receive the above error message. The last time I ran Salmon I used 9.1 and this trasncriptome from ensembl ftp://ftp.ensembl.org/pub/release-92/fasta/homo_sapiens/cdna/...; What is going on here? . The header.json file looks like this: ; {; ""value0"": {; ""IndexType"": 1,; ""IndexVersion"": ""q3"",; ""UsesKmers"": true,; ""KmerLen"": 31,; ""BigSA"": false,; ""PerfectHash"": false; }; }",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/232
https://github.com/COMBINE-lab/salmon/issues/232:116,Deployability,release,releases,116,"Hi, ; I just downloaded the salmon.10.0 version and indexed my transcriptome using the https://www.gencodegenes.org/releases/current.html --> FASTA files --> trasnscript sequences. When I try to run Salmon I receive the above error message. The last time I ran Salmon I used 9.1 and this trasncriptome from ensembl ftp://ftp.ensembl.org/pub/release-92/fasta/homo_sapiens/cdna/...; What is going on here? . The header.json file looks like this: ; {; ""value0"": {; ""IndexType"": 1,; ""IndexVersion"": ""q3"",; ""UsesKmers"": true,; ""KmerLen"": 31,; ""BigSA"": false,; ""PerfectHash"": false; }; }",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/232
https://github.com/COMBINE-lab/salmon/issues/232:341,Deployability,release,release-,341,"Hi, ; I just downloaded the salmon.10.0 version and indexed my transcriptome using the https://www.gencodegenes.org/releases/current.html --> FASTA files --> trasnscript sequences. When I try to run Salmon I receive the above error message. The last time I ran Salmon I used 9.1 and this trasncriptome from ensembl ftp://ftp.ensembl.org/pub/release-92/fasta/homo_sapiens/cdna/...; What is going on here? . The header.json file looks like this: ; {; ""value0"": {; ""IndexType"": 1,; ""IndexVersion"": ""q3"",; ""UsesKmers"": true,; ""KmerLen"": 31,; ""BigSA"": false,; ""PerfectHash"": false; }; }",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/232
https://github.com/COMBINE-lab/salmon/issues/232:232,Integrability,message,message,232,"Hi, ; I just downloaded the salmon.10.0 version and indexed my transcriptome using the https://www.gencodegenes.org/releases/current.html --> FASTA files --> trasnscript sequences. When I try to run Salmon I receive the above error message. The last time I ran Salmon I used 9.1 and this trasncriptome from ensembl ftp://ftp.ensembl.org/pub/release-92/fasta/homo_sapiens/cdna/...; What is going on here? . The header.json file looks like this: ; {; ""value0"": {; ""IndexType"": 1,; ""IndexVersion"": ""q3"",; ""UsesKmers"": true,; ""KmerLen"": 31,; ""BigSA"": false,; ""PerfectHash"": false; }; }",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/232
https://github.com/COMBINE-lab/salmon/issues/233:16,Energy Efficiency,efficient,efficient,16,"> Alevin adopts efficient algorithms for cellular-barcode whitelist generation, cellular-barcode correction, lightweight per-cell UMI deduplication and quantification. Is it possible to use Salmon as a standalone tool to extract and correct the barcodes from 10x Genomics Chromium linked reads and add a `BX:Z` tag to the FASTQ header? That is to say, can Salmon be used as a drop-in replacement for `longranger basic`?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/233
https://github.com/COMBINE-lab/salmon/issues/234:1392,Availability,avail,available,1392," 8M reads in the single fastq file I am testing with. I can see a whole bunch of threads being created despite limiting the number of processes to two. Thanks!. ```; (gdb) run alevin -l ISR --chromium -p 1 -o 85948/alevin -1 <(gunzip -c ./85948/run1/85948_S18_L001_R1_001.fastq.gz) -2 <(gunzip -c ./85948/run1/85948_S18_L001_R2_001.fastq.gz) -i ./salmon/transcripts_index --tgMap tx2gene.txt; Starting program: ./salmon/build-debug/src/salmon alevin -l ISR --chromium -p 1 -o 85948/alevin -1 <(gunzip -c ./85948/run1/85948_S18_L001_R1_001.fastq.gz) -2 <(gunzip -c ./85948/run1/85948_S18_L001_R2_001.fastq.gz) -i ./salmon/transcripts_index --tgMap tx2gene.txt; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7e0f4700 (LWP 27861)]; [Thread 0x7fff7e0f4700 (LWP 27861) exited]; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [New Thread 0x7fff7d273700 (LWP 27862)]; Logs will be written to 85948/alevin/logs; [New Thread 0x7ffefc3f1700 (LWP 27865)]; [New Thread 0x7ffe7b56f700 (LWP 27866)]; [New Thread 0x7ffdfa6ed700 (LWP 27867)]; ### salmon (single-cell-based) v0.10.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 1 }; ### [ output ] => { 85948/alevin }; ### [ mates1 ] => { /dev/fd/63 }; ### [ mates2 ] => { /dev/fd/62 }; ### [ index ] => { ./salmon/transcripts_index }; ### [ tgMap ] => { tx2gene.txt }. [2018-06-08 11:55:47.378] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [Ne",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:1434,Availability,avail,available,1434,"of processes to two. Thanks!. ```; (gdb) run alevin -l ISR --chromium -p 1 -o 85948/alevin -1 <(gunzip -c ./85948/run1/85948_S18_L001_R1_001.fastq.gz) -2 <(gunzip -c ./85948/run1/85948_S18_L001_R2_001.fastq.gz) -i ./salmon/transcripts_index --tgMap tx2gene.txt; Starting program: ./salmon/build-debug/src/salmon alevin -l ISR --chromium -p 1 -o 85948/alevin -1 <(gunzip -c ./85948/run1/85948_S18_L001_R1_001.fastq.gz) -2 <(gunzip -c ./85948/run1/85948_S18_L001_R2_001.fastq.gz) -i ./salmon/transcripts_index --tgMap tx2gene.txt; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7e0f4700 (LWP 27861)]; [Thread 0x7fff7e0f4700 (LWP 27861) exited]; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [New Thread 0x7fff7d273700 (LWP 27862)]; Logs will be written to 85948/alevin/logs; [New Thread 0x7ffefc3f1700 (LWP 27865)]; [New Thread 0x7ffe7b56f700 (LWP 27866)]; [New Thread 0x7ffdfa6ed700 (LWP 27867)]; ### salmon (single-cell-based) v0.10.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 1 }; ### [ output ] => { 85948/alevin }; ### [ mates1 ] => { /dev/fd/63 }; ### [ mates2 ] => { /dev/fd/62 }; ### [ index ] => { ./salmon/transcripts_index }; ### [ tgMap ] => { tx2gene.txt }. [2018-06-08 11:55:47.378] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [New Thread 0x7ffd797e8700 (LWP 27869)]; [New Thread 0x7ffcf97e7700 (LWP 27870)]; [2018-06-08 11:55:47.387] [alevinLog] [info] Proces",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:1485,Deployability,release,releases,1485,"(gunzip -c ./85948/run1/85948_S18_L001_R1_001.fastq.gz) -2 <(gunzip -c ./85948/run1/85948_S18_L001_R2_001.fastq.gz) -i ./salmon/transcripts_index --tgMap tx2gene.txt; Starting program: ./salmon/build-debug/src/salmon alevin -l ISR --chromium -p 1 -o 85948/alevin -1 <(gunzip -c ./85948/run1/85948_S18_L001_R1_001.fastq.gz) -2 <(gunzip -c ./85948/run1/85948_S18_L001_R2_001.fastq.gz) -i ./salmon/transcripts_index --tgMap tx2gene.txt; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7e0f4700 (LWP 27861)]; [Thread 0x7fff7e0f4700 (LWP 27861) exited]; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [New Thread 0x7fff7d273700 (LWP 27862)]; Logs will be written to 85948/alevin/logs; [New Thread 0x7ffefc3f1700 (LWP 27865)]; [New Thread 0x7ffe7b56f700 (LWP 27866)]; [New Thread 0x7ffdfa6ed700 (LWP 27867)]; ### salmon (single-cell-based) v0.10.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 1 }; ### [ output ] => { 85948/alevin }; ### [ mates1 ] => { /dev/fd/63 }; ### [ mates2 ] => { /dev/fd/62 }; ### [ index ] => { ./salmon/transcripts_index }; ### [ tgMap ] => { tx2gene.txt }. [2018-06-08 11:55:47.378] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [New Thread 0x7ffd797e8700 (LWP 27869)]; [New Thread 0x7ffcf97e7700 (LWP 27870)]; [2018-06-08 11:55:47.387] [alevinLog] [info] Processing barcodes files (if Present). processed 6 Million barcodes[New Thread 0x7ffc77265700 (LWP 2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:1554,Deployability,upgrade,upgrade,1554,"(gunzip -c ./85948/run1/85948_S18_L001_R1_001.fastq.gz) -2 <(gunzip -c ./85948/run1/85948_S18_L001_R2_001.fastq.gz) -i ./salmon/transcripts_index --tgMap tx2gene.txt; Starting program: ./salmon/build-debug/src/salmon alevin -l ISR --chromium -p 1 -o 85948/alevin -1 <(gunzip -c ./85948/run1/85948_S18_L001_R1_001.fastq.gz) -2 <(gunzip -c ./85948/run1/85948_S18_L001_R2_001.fastq.gz) -i ./salmon/transcripts_index --tgMap tx2gene.txt; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7e0f4700 (LWP 27861)]; [Thread 0x7fff7e0f4700 (LWP 27861) exited]; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [New Thread 0x7fff7d273700 (LWP 27862)]; Logs will be written to 85948/alevin/logs; [New Thread 0x7ffefc3f1700 (LWP 27865)]; [New Thread 0x7ffe7b56f700 (LWP 27866)]; [New Thread 0x7ffdfa6ed700 (LWP 27867)]; ### salmon (single-cell-based) v0.10.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 1 }; ### [ output ] => { 85948/alevin }; ### [ mates1 ] => { /dev/fd/63 }; ### [ mates2 ] => { /dev/fd/62 }; ### [ index ] => { ./salmon/transcripts_index }; ### [ tgMap ] => { tx2gene.txt }. [2018-06-08 11:55:47.378] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [New Thread 0x7ffd797e8700 (LWP 27869)]; [New Thread 0x7ffcf97e7700 (LWP 27870)]; [2018-06-08 11:55:47.387] [alevinLog] [info] Processing barcodes files (if Present). processed 6 Million barcodes[New Thread 0x7ffc77265700 (LWP 2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:8781,Integrability,Protocol,ProtocolT,8781,"llocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::cuckoo_insert_loop<std::integral_constant<bool, false>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > (this=this@entry=0x7fffffffc520, hv=..., b=..., key=...); at /u/user/tmp/salmon/include/cuckoohash_map.hh:1086; #14 0x00000000007a8540 in uprase_fn<std::__cxx11::basic_string<char>&, cuckoohash_map<Key, T, Hash, KeyEqual, Allocator, SLOT_PER_BUCKET>::upsert(K&&, F, Args&& ...) [with K = std::__cxx11::basic_string<char>&; F = densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>; Args = {int}; Key = std::__cxx11::basic_string<char>; T = unsigned int; Hash = BarcodeGroupStringHasher; KeyEqual = std::equal_to<std::__cxx11::basic_string<char> >; Allocator = std::allocator<std::pair<const std::__cxx11::basic_string<char>, unsigned int> >; long unsigned int SLOT_PER_BUCKET = 4ul]::<lambda(cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>::mapped_type&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:529; #12 0x00000000007a69ac in cuckoo_fast_double<std::integral_constant<bool, false>, std::integral_constant<bool, true> >; (current_hp=<optimized out>, this=0x7fffffffc520) at /u/user/tmp/salmon/include/cuckoohash_map.hh:1583; #13 cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:8891,Integrability,Protocol,ProtocolT,8891,"llocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::cuckoo_insert_loop<std::integral_constant<bool, false>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > (this=this@entry=0x7fffffffc520, hv=..., b=..., key=...); at /u/user/tmp/salmon/include/cuckoohash_map.hh:1086; #14 0x00000000007a8540 in uprase_fn<std::__cxx11::basic_string<char>&, cuckoohash_map<Key, T, Hash, KeyEqual, Allocator, SLOT_PER_BUCKET>::upsert(K&&, F, Args&& ...) [with K = std::__cxx11::basic_string<char>&; F = densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>; Args = {int}; Key = std::__cxx11::basic_string<char>; T = unsigned int; Hash = BarcodeGroupStringHasher; KeyEqual = std::equal_to<std::__cxx11::basic_string<char> >; Allocator = std::allocator<std::pair<const std::__cxx11::basic_string<char>, unsigned int> >; long unsigned int SLOT_PER_BUCKET = 4ul]::<lambda(cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>::mapped_type&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:529; #12 0x00000000007a69ac in cuckoo_fast_double<std::integral_constant<bool, false>, std::integral_constant<bool, true> >; (current_hp=<optimized out>, this=0x7fffffffc520) at /u/user/tmp/salmon/include/cuckoohash_map.hh:1583; #13 cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:8911,Integrability,protocol,protocols,8911,"llocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::cuckoo_insert_loop<std::integral_constant<bool, false>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > (this=this@entry=0x7fffffffc520, hv=..., b=..., key=...); at /u/user/tmp/salmon/include/cuckoohash_map.hh:1086; #14 0x00000000007a8540 in uprase_fn<std::__cxx11::basic_string<char>&, cuckoohash_map<Key, T, Hash, KeyEqual, Allocator, SLOT_PER_BUCKET>::upsert(K&&, F, Args&& ...) [with K = std::__cxx11::basic_string<char>&; F = densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>; Args = {int}; Key = std::__cxx11::basic_string<char>; T = unsigned int; Hash = BarcodeGroupStringHasher; KeyEqual = std::equal_to<std::__cxx11::basic_string<char> >; Allocator = std::allocator<std::pair<const std::__cxx11::basic_string<char>, unsigned int> >; long unsigned int SLOT_PER_BUCKET = 4ul]::<lambda(cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>::mapped_type&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:529; #12 0x00000000007a69ac in cuckoo_fast_double<std::integral_constant<bool, false>, std::integral_constant<bool, true> >; (current_hp=<optimized out>, this=0x7fffffffc520) at /u/user/tmp/salmon/include/cuckoohash_map.hh:1583; #13 cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:10743,Integrability,Protocol,ProtocolT,10743,"llocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::cuckoo_insert_loop<std::integral_constant<bool, false>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > (this=this@entry=0x7fffffffc520, hv=..., b=..., key=...); at /u/user/tmp/salmon/include/cuckoohash_map.hh:1086; #14 0x00000000007a8540 in uprase_fn<std::__cxx11::basic_string<char>&, cuckoohash_map<Key, T, Hash, KeyEqual, Allocator, SLOT_PER_BUCKET>::upsert(K&&, F, Args&& ...) [with K = std::__cxx11::basic_string<char>&; F = densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>; Args = {int}; Key = std::__cxx11::basic_string<char>; T = unsigned int; Hash = BarcodeGroupStringHasher; KeyEqual = std::equal_to<std::__cxx11::basic_string<char> >; Allocator = std::allocator<std::pair<const std::__cxx11::basic_string<char>, unsigned int> >; long unsigned int SLOT_PER_BUCKET = 4ul]::<lambda(cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>::mapped_type&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:529; #15 upsert<std::__cxx11::basic_string<char>&, densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>, int> (fn=..., key=..., this=<optimized out>); at",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:10853,Integrability,Protocol,ProtocolT,10853,"llocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::cuckoo_insert_loop<std::integral_constant<bool, false>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > (this=this@entry=0x7fffffffc520, hv=..., b=..., key=...); at /u/user/tmp/salmon/include/cuckoohash_map.hh:1086; #14 0x00000000007a8540 in uprase_fn<std::__cxx11::basic_string<char>&, cuckoohash_map<Key, T, Hash, KeyEqual, Allocator, SLOT_PER_BUCKET>::upsert(K&&, F, Args&& ...) [with K = std::__cxx11::basic_string<char>&; F = densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>; Args = {int}; Key = std::__cxx11::basic_string<char>; T = unsigned int; Hash = BarcodeGroupStringHasher; KeyEqual = std::equal_to<std::__cxx11::basic_string<char> >; Allocator = std::allocator<std::pair<const std::__cxx11::basic_string<char>, unsigned int> >; long unsigned int SLOT_PER_BUCKET = 4ul]::<lambda(cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>::mapped_type&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:529; #15 upsert<std::__cxx11::basic_string<char>&, densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>, int> (fn=..., key=..., this=<optimized out>); at",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:10873,Integrability,protocol,protocols,10873,"llocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::cuckoo_insert_loop<std::integral_constant<bool, false>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > (this=this@entry=0x7fffffffc520, hv=..., b=..., key=...); at /u/user/tmp/salmon/include/cuckoohash_map.hh:1086; #14 0x00000000007a8540 in uprase_fn<std::__cxx11::basic_string<char>&, cuckoohash_map<Key, T, Hash, KeyEqual, Allocator, SLOT_PER_BUCKET>::upsert(K&&, F, Args&& ...) [with K = std::__cxx11::basic_string<char>&; F = densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>; Args = {int}; Key = std::__cxx11::basic_string<char>; T = unsigned int; Hash = BarcodeGroupStringHasher; KeyEqual = std::equal_to<std::__cxx11::basic_string<char> >; Allocator = std::allocator<std::pair<const std::__cxx11::basic_string<char>, unsigned int> >; long unsigned int SLOT_PER_BUCKET = 4ul]::<lambda(cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>::mapped_type&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:529; #15 upsert<std::__cxx11::basic_string<char>&, densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>, int> (fn=..., key=..., this=<optimized out>); at",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:11690,Integrability,Protocol,ProtocolT,11690,"d::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>; Args = {int}; Key = std::__cxx11::basic_string<char>; T = unsigned int; Hash = BarcodeGroupStringHasher; KeyEqual = std::equal_to<std::__cxx11::basic_string<char> >; Allocator = std::allocator<std::pair<const std::__cxx11::basic_string<char>, unsigned int> >; long unsigned int SLOT_PER_BUCKET = 4ul]::<lambda(cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>::mapped_type&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:529; #15 upsert<std::__cxx11::basic_string<char>&, densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:554; #16 densityCalculator<alevin::protocols::Chromium> (parser=<optimized out>, aopt=..., ioMutex=..., freqCounter=...,; usedNumBarcodes=..., totNumBarcodes=...) at /u/user/tmp/salmon/src/Alevin.cpp:137; #17 0x0000000000ba4970 in std::execute_native_thread_routine (__p=<optimized out>); at ../../../.././libstdc++-v3/src/c++11/thread.cc:84; #18 0x00007fff7fbc7064 in start_thread (arg=0x7ffcf97e7700) at pthread_create.c:309; #19 0x00007fff7e95b62d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111; (gdb); #0 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; #1 0x00007fff7e8a9448 in __GI_abort () at abort.c:89; #2 0x0000000000b",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:11800,Integrability,Protocol,ProtocolT,11800,"d::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>; Args = {int}; Key = std::__cxx11::basic_string<char>; T = unsigned int; Hash = BarcodeGroupStringHasher; KeyEqual = std::equal_to<std::__cxx11::basic_string<char> >; Allocator = std::allocator<std::pair<const std::__cxx11::basic_string<char>, unsigned int> >; long unsigned int SLOT_PER_BUCKET = 4ul]::<lambda(cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>::mapped_type&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:529; #15 upsert<std::__cxx11::basic_string<char>&, densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:554; #16 densityCalculator<alevin::protocols::Chromium> (parser=<optimized out>, aopt=..., ioMutex=..., freqCounter=...,; usedNumBarcodes=..., totNumBarcodes=...) at /u/user/tmp/salmon/src/Alevin.cpp:137; #17 0x0000000000ba4970 in std::execute_native_thread_routine (__p=<optimized out>); at ../../../.././libstdc++-v3/src/c++11/thread.cc:84; #18 0x00007fff7fbc7064 in start_thread (arg=0x7ffcf97e7700) at pthread_create.c:309; #19 0x00007fff7e95b62d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111; (gdb); #0 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; #1 0x00007fff7e8a9448 in __GI_abort () at abort.c:89; #2 0x0000000000b",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:11820,Integrability,protocol,protocols,11820,"d::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>; Args = {int}; Key = std::__cxx11::basic_string<char>; T = unsigned int; Hash = BarcodeGroupStringHasher; KeyEqual = std::equal_to<std::__cxx11::basic_string<char> >; Allocator = std::allocator<std::pair<const std::__cxx11::basic_string<char>, unsigned int> >; long unsigned int SLOT_PER_BUCKET = 4ul]::<lambda(cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>::mapped_type&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:529; #15 upsert<std::__cxx11::basic_string<char>&, densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:554; #16 densityCalculator<alevin::protocols::Chromium> (parser=<optimized out>, aopt=..., ioMutex=..., freqCounter=...,; usedNumBarcodes=..., totNumBarcodes=...) at /u/user/tmp/salmon/src/Alevin.cpp:137; #17 0x0000000000ba4970 in std::execute_native_thread_routine (__p=<optimized out>); at ../../../.././libstdc++-v3/src/c++11/thread.cc:84; #18 0x00007fff7fbc7064 in start_thread (arg=0x7ffcf97e7700) at pthread_create.c:309; #19 0x00007fff7e95b62d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111; (gdb); #0 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; #1 0x00007fff7e8a9448 in __GI_abort () at abort.c:89; #2 0x0000000000b",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:12160,Integrability,protocol,protocols,12160,"odeGroupStringHasher; KeyEqual = std::equal_to<std::__cxx11::basic_string<char> >; Allocator = std::allocator<std::pair<const std::__cxx11::basic_string<char>, unsigned int> >; long unsigned int SLOT_PER_BUCKET = 4ul]::<lambda(cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>::mapped_type&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:529; #15 upsert<std::__cxx11::basic_string<char>&, densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:554; #16 densityCalculator<alevin::protocols::Chromium> (parser=<optimized out>, aopt=..., ioMutex=..., freqCounter=...,; usedNumBarcodes=..., totNumBarcodes=...) at /u/user/tmp/salmon/src/Alevin.cpp:137; #17 0x0000000000ba4970 in std::execute_native_thread_routine (__p=<optimized out>); at ../../../.././libstdc++-v3/src/c++11/thread.cc:84; #18 0x00007fff7fbc7064 in start_thread (arg=0x7ffcf97e7700) at pthread_create.c:309; #19 0x00007fff7e95b62d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111; (gdb); #0 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; #1 0x00007fff7e8a9448 in __GI_abort () at abort.c:89; #2 0x0000000000bc962d in __gnu_cxx::__verbose_terminate_handler (); at ../../.././libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x0000000000b3d856 in __cxxabiv1::__terminate (handler=<optimized out>); at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:47; #4 0x0000000000b3d8a1 in std::terminate () at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:57; #5 0x000000",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:17324,Integrability,Protocol,ProtocolT,17324,"llocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::cuckoo_insert_loop<std::integral_constant<bool, false>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > (this=this@entry=0x7fffffffc520, hv=..., b=..., key=...); at /u/user/tmp/salmon/include/cuckoohash_map.hh:1086; #14 0x00000000007a8540 in uprase_fn<std::__cxx11::basic_string<char>&, cuckoohash_map<Key, T, Hash, KeyEqual, Allocator, SLOT_PER_BUCKET>::upsert(K&&, F, Args&& ...) [with K = std::__cxx11::basic_string<char>&; F = densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>; Args = {int}; Key = std::__cxx11::basic_string<char>; T = unsigned int; Hash = BarcodeGroupStringHasher; KeyEqual = std::equal_to<std::__cxx11::basic_string<char> >; Allocator = std::allocator<std::pair<const std::__cxx11::basic_string<char>, unsigned int> >; long unsigned int SLOT_PER_BUCKET = 4ul]::<lambda(cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>::mapped_type&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:529; #15 upsert<std::__cxx11::basic_string<char>&, densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>, int> (fn=..., key=..., this=<optimized out>); at",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:17434,Integrability,Protocol,ProtocolT,17434,"llocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::cuckoo_insert_loop<std::integral_constant<bool, false>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > (this=this@entry=0x7fffffffc520, hv=..., b=..., key=...); at /u/user/tmp/salmon/include/cuckoohash_map.hh:1086; #14 0x00000000007a8540 in uprase_fn<std::__cxx11::basic_string<char>&, cuckoohash_map<Key, T, Hash, KeyEqual, Allocator, SLOT_PER_BUCKET>::upsert(K&&, F, Args&& ...) [with K = std::__cxx11::basic_string<char>&; F = densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>; Args = {int}; Key = std::__cxx11::basic_string<char>; T = unsigned int; Hash = BarcodeGroupStringHasher; KeyEqual = std::equal_to<std::__cxx11::basic_string<char> >; Allocator = std::allocator<std::pair<const std::__cxx11::basic_string<char>, unsigned int> >; long unsigned int SLOT_PER_BUCKET = 4ul]::<lambda(cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>::mapped_type&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:529; #15 upsert<std::__cxx11::basic_string<char>&, densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>, int> (fn=..., key=..., this=<optimized out>); at",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:17454,Integrability,protocol,protocols,17454,"llocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::cuckoo_insert_loop<std::integral_constant<bool, false>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > (this=this@entry=0x7fffffffc520, hv=..., b=..., key=...); at /u/user/tmp/salmon/include/cuckoohash_map.hh:1086; #14 0x00000000007a8540 in uprase_fn<std::__cxx11::basic_string<char>&, cuckoohash_map<Key, T, Hash, KeyEqual, Allocator, SLOT_PER_BUCKET>::upsert(K&&, F, Args&& ...) [with K = std::__cxx11::basic_string<char>&; F = densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>; Args = {int}; Key = std::__cxx11::basic_string<char>; T = unsigned int; Hash = BarcodeGroupStringHasher; KeyEqual = std::equal_to<std::__cxx11::basic_string<char> >; Allocator = std::allocator<std::pair<const std::__cxx11::basic_string<char>, unsigned int> >; long unsigned int SLOT_PER_BUCKET = 4ul]::<lambda(cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>::mapped_type&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:529; #15 upsert<std::__cxx11::basic_string<char>&, densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>, int> (fn=..., key=..., this=<optimized out>); at",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:18271,Integrability,Protocol,ProtocolT,18271,"&& ...) [with K = std::__cxx11::basic_string<char>&; F = densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>; Args = {int}; Key = std::__cxx11::basic_string<char>; T = unsigned int; Hash = BarcodeGroupStringHasher; KeyEqual = std::equal_to<std::__cxx11::basic_string<char> >; Allocator = std::allocator<std::pair<const std::__cxx11::basic_string<char>, unsigned int> >; long unsigned int SLOT_PER_BUCKET = 4ul]::<lambda(cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>::mapped_type&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:529; #15 upsert<std::__cxx11::basic_string<char>&, densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:554; #16 densityCalculator<alevin::protocols::Chromium> (parser=<optimized out>, aopt=..., ioMutex=..., freqCounter=...,; usedNumBarcodes=..., totNumBarcodes=...) at /u/user/tmp/salmon/src/Alevin.cpp:137; #17 0x0000000000ba4970 in std::execute_native_thread_routine (__p=<optimized out>); at ../../../.././libstdc++-v3/src/c++11/thread.cc:84; #18 0x00007fff7fbc7064 in start_thread (arg=0x7ffcf97e7700) at pthread_create.c:309; #19 0x00007fff7e95b62d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:18381,Integrability,Protocol,ProtocolT,18381,"&& ...) [with K = std::__cxx11::basic_string<char>&; F = densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>; Args = {int}; Key = std::__cxx11::basic_string<char>; T = unsigned int; Hash = BarcodeGroupStringHasher; KeyEqual = std::equal_to<std::__cxx11::basic_string<char> >; Allocator = std::allocator<std::pair<const std::__cxx11::basic_string<char>, unsigned int> >; long unsigned int SLOT_PER_BUCKET = 4ul]::<lambda(cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>::mapped_type&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:529; #15 upsert<std::__cxx11::basic_string<char>&, densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:554; #16 densityCalculator<alevin::protocols::Chromium> (parser=<optimized out>, aopt=..., ioMutex=..., freqCounter=...,; usedNumBarcodes=..., totNumBarcodes=...) at /u/user/tmp/salmon/src/Alevin.cpp:137; #17 0x0000000000ba4970 in std::execute_native_thread_routine (__p=<optimized out>); at ../../../.././libstdc++-v3/src/c++11/thread.cc:84; #18 0x00007fff7fbc7064 in start_thread (arg=0x7ffcf97e7700) at pthread_create.c:309; #19 0x00007fff7e95b62d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:18401,Integrability,protocol,protocols,18401,"&& ...) [with K = std::__cxx11::basic_string<char>&; F = densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>; Args = {int}; Key = std::__cxx11::basic_string<char>; T = unsigned int; Hash = BarcodeGroupStringHasher; KeyEqual = std::equal_to<std::__cxx11::basic_string<char> >; Allocator = std::allocator<std::pair<const std::__cxx11::basic_string<char>, unsigned int> >; long unsigned int SLOT_PER_BUCKET = 4ul]::<lambda(cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>::mapped_type&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:529; #15 upsert<std::__cxx11::basic_string<char>&, densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:554; #16 densityCalculator<alevin::protocols::Chromium> (parser=<optimized out>, aopt=..., ioMutex=..., freqCounter=...,; usedNumBarcodes=..., totNumBarcodes=...) at /u/user/tmp/salmon/src/Alevin.cpp:137; #17 0x0000000000ba4970 in std::execute_native_thread_routine (__p=<optimized out>); at ../../../.././libstdc++-v3/src/c++11/thread.cc:84; #18 0x00007fff7fbc7064 in start_thread (arg=0x7ffcf97e7700) at pthread_create.c:309; #19 0x00007fff7e95b62d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:18741,Integrability,protocol,protocols,18741,"&& ...) [with K = std::__cxx11::basic_string<char>&; F = densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>; Args = {int}; Key = std::__cxx11::basic_string<char>; T = unsigned int; Hash = BarcodeGroupStringHasher; KeyEqual = std::equal_to<std::__cxx11::basic_string<char> >; Allocator = std::allocator<std::pair<const std::__cxx11::basic_string<char>, unsigned int> >; long unsigned int SLOT_PER_BUCKET = 4ul]::<lambda(cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>::mapped_type&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:529; #15 upsert<std::__cxx11::basic_string<char>&, densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:554; #16 densityCalculator<alevin::protocols::Chromium> (parser=<optimized out>, aopt=..., ioMutex=..., freqCounter=...,; usedNumBarcodes=..., totNumBarcodes=...) at /u/user/tmp/salmon/src/Alevin.cpp:137; #17 0x0000000000ba4970 in std::execute_native_thread_routine (__p=<optimized out>); at ../../../.././libstdc++-v3/src/c++11/thread.cc:84; #18 0x00007fff7fbc7064 in start_thread (arg=0x7ffcf97e7700) at pthread_create.c:309; #19 0x00007fff7e95b62d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:1151,Performance,load,loading,1151,"mples that have worked with Cell Ranger. I recompiled the program with `-DCMAKE_BUILD_TYPE=Debug` and have attached the output and gdb backtrace. There is roughly 8M reads in the single fastq file I am testing with. I can see a whole bunch of threads being created despite limiting the number of processes to two. Thanks!. ```; (gdb) run alevin -l ISR --chromium -p 1 -o 85948/alevin -1 <(gunzip -c ./85948/run1/85948_S18_L001_R1_001.fastq.gz) -2 <(gunzip -c ./85948/run1/85948_S18_L001_R2_001.fastq.gz) -i ./salmon/transcripts_index --tgMap tx2gene.txt; Starting program: ./salmon/build-debug/src/salmon alevin -l ISR --chromium -p 1 -o 85948/alevin -1 <(gunzip -c ./85948/run1/85948_S18_L001_R1_001.fastq.gz) -2 <(gunzip -c ./85948/run1/85948_S18_L001_R2_001.fastq.gz) -i ./salmon/transcripts_index --tgMap tx2gene.txt; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7e0f4700 (LWP 27861)]; [Thread 0x7fff7e0f4700 (LWP 27861) exited]; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [New Thread 0x7fff7d273700 (LWP 27862)]; Logs will be written to 85948/alevin/logs; [New Thread 0x7ffefc3f1700 (LWP 27865)]; [New Thread 0x7ffe7b56f700 (LWP 27866)]; [New Thread 0x7ffdfa6ed700 (LWP 27867)]; ### salmon (single-cell-based) v0.10.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 1 }; ### [ output ] => { 85948/alevin }; ### [ mates1 ] => { /dev/fd/63 }; ### [ mates2 ] => { /dev/fd/62 }; ### [ index ] => { ./salmon/transcripts_index }; ### [ t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:1240,Performance,load,loading,1240," 8M reads in the single fastq file I am testing with. I can see a whole bunch of threads being created despite limiting the number of processes to two. Thanks!. ```; (gdb) run alevin -l ISR --chromium -p 1 -o 85948/alevin -1 <(gunzip -c ./85948/run1/85948_S18_L001_R1_001.fastq.gz) -2 <(gunzip -c ./85948/run1/85948_S18_L001_R2_001.fastq.gz) -i ./salmon/transcripts_index --tgMap tx2gene.txt; Starting program: ./salmon/build-debug/src/salmon alevin -l ISR --chromium -p 1 -o 85948/alevin -1 <(gunzip -c ./85948/run1/85948_S18_L001_R1_001.fastq.gz) -2 <(gunzip -c ./85948/run1/85948_S18_L001_R2_001.fastq.gz) -i ./salmon/transcripts_index --tgMap tx2gene.txt; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7e0f4700 (LWP 27861)]; [Thread 0x7fff7e0f4700 (LWP 27861) exited]; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [New Thread 0x7fff7d273700 (LWP 27862)]; Logs will be written to 85948/alevin/logs; [New Thread 0x7ffefc3f1700 (LWP 27865)]; [New Thread 0x7ffe7b56f700 (LWP 27866)]; [New Thread 0x7ffdfa6ed700 (LWP 27867)]; ### salmon (single-cell-based) v0.10.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 1 }; ### [ output ] => { 85948/alevin }; ### [ mates1 ] => { /dev/fd/63 }; ### [ mates2 ] => { /dev/fd/62 }; ### [ index ] => { ./salmon/transcripts_index }; ### [ tgMap ] => { tx2gene.txt }. [2018-06-08 11:55:47.378] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [Ne",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:4199,Performance,optimiz,optimized,4199,"257700 (LWP 27934)]; [New Thread 0x7ff4f7256700 (LWP 27935)]; [Thread 0x7ffb77263700 (LWP 27922) exited]; [Thread 0x7ffa77261700 (LWP 27924) exited]; [Thread 0x7ffaf7262700 (LWP 27923) exited]; [New Thread 0x7ff477255700 (LWP 27936)]; [Thread 0x7ff9f7260700 (LWP 27925) exited]; terminate called without an active exception; [Thread 0x7ff77725b700 (LWP 27930) exited]; [Thread 0x7ff8f725e700 (LWP 27927) exited]. Program received signal SIGABRT, Aborted.; [Switching to Thread 0x7ffcf97e7700 (LWP 27870)]; 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; 56 ../nptl/sysdeps/unix/sysv/linux/raise.c: No such file or directory.; (gdb) bt; #0 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; #1 0x00007fff7e8a9448 in __GI_abort () at abort.c:89; #2 0x0000000000bc962d in __gnu_cxx::__verbose_terminate_handler (); at ../../.././libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x0000000000b3d856 in __cxxabiv1::__terminate (handler=<optimized out>); at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:47; #4 0x0000000000b3d8a1 in std::terminate () at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:57; #5 0x00000000006f891b in ~thread (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/thread:151; #6 _Destroy<std::thread> (__pointer=<optimized out>) at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:93; #7 __destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:103; #8 _Destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:126; #9 _Destroy<std::thread*, std::thread> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:151; #10 std::vector<std::thread, std::allocator<std::thread> >::~vector (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/lo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:4413,Performance,optimiz,optimized,4413,"260700 (LWP 27925) exited]; terminate called without an active exception; [Thread 0x7ff77725b700 (LWP 27930) exited]; [Thread 0x7ff8f725e700 (LWP 27927) exited]. Program received signal SIGABRT, Aborted.; [Switching to Thread 0x7ffcf97e7700 (LWP 27870)]; 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; 56 ../nptl/sysdeps/unix/sysv/linux/raise.c: No such file or directory.; (gdb) bt; #0 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; #1 0x00007fff7e8a9448 in __GI_abort () at abort.c:89; #2 0x0000000000bc962d in __gnu_cxx::__verbose_terminate_handler (); at ../../.././libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x0000000000b3d856 in __cxxabiv1::__terminate (handler=<optimized out>); at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:47; #4 0x0000000000b3d8a1 in std::terminate () at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:57; #5 0x00000000006f891b in ~thread (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/thread:151; #6 _Destroy<std::thread> (__pointer=<optimized out>) at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:93; #7 __destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:103; #8 _Destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:126; #9 _Destroy<std::thread*, std::thread> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:151; #10 std::vector<std::thread, std::allocator<std::thread> >::~vector (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_vector.h:424; #11 0x00000000007a5fde in cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<ch",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:4440,Performance,optimiz,optimized,4440,"260700 (LWP 27925) exited]; terminate called without an active exception; [Thread 0x7ff77725b700 (LWP 27930) exited]; [Thread 0x7ff8f725e700 (LWP 27927) exited]. Program received signal SIGABRT, Aborted.; [Switching to Thread 0x7ffcf97e7700 (LWP 27870)]; 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; 56 ../nptl/sysdeps/unix/sysv/linux/raise.c: No such file or directory.; (gdb) bt; #0 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; #1 0x00007fff7e8a9448 in __GI_abort () at abort.c:89; #2 0x0000000000bc962d in __gnu_cxx::__verbose_terminate_handler (); at ../../.././libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x0000000000b3d856 in __cxxabiv1::__terminate (handler=<optimized out>); at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:47; #4 0x0000000000b3d8a1 in std::terminate () at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:57; #5 0x00000000006f891b in ~thread (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/thread:151; #6 _Destroy<std::thread> (__pointer=<optimized out>) at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:93; #7 __destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:103; #8 _Destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:126; #9 _Destroy<std::thread*, std::thread> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:151; #10 std::vector<std::thread, std::allocator<std::thread> >::~vector (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_vector.h:424; #11 0x00000000007a5fde in cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<ch",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:4541,Performance,optimiz,optimized,4541,"ted]; [Thread 0x7ff8f725e700 (LWP 27927) exited]. Program received signal SIGABRT, Aborted.; [Switching to Thread 0x7ffcf97e7700 (LWP 27870)]; 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; 56 ../nptl/sysdeps/unix/sysv/linux/raise.c: No such file or directory.; (gdb) bt; #0 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; #1 0x00007fff7e8a9448 in __GI_abort () at abort.c:89; #2 0x0000000000bc962d in __gnu_cxx::__verbose_terminate_handler (); at ../../.././libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x0000000000b3d856 in __cxxabiv1::__terminate (handler=<optimized out>); at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:47; #4 0x0000000000b3d8a1 in std::terminate () at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:57; #5 0x00000000006f891b in ~thread (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/thread:151; #6 _Destroy<std::thread> (__pointer=<optimized out>) at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:93; #7 __destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:103; #8 _Destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:126; #9 _Destroy<std::thread*, std::thread> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:151; #10 std::vector<std::thread, std::allocator<std::thread> >::~vector (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_vector.h:424; #11 0x00000000007a5fde in cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:4653,Performance,optimiz,optimized,4653,"(LWP 27870)]; 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; 56 ../nptl/sysdeps/unix/sysv/linux/raise.c: No such file or directory.; (gdb) bt; #0 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; #1 0x00007fff7e8a9448 in __GI_abort () at abort.c:89; #2 0x0000000000bc962d in __gnu_cxx::__verbose_terminate_handler (); at ../../.././libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x0000000000b3d856 in __cxxabiv1::__terminate (handler=<optimized out>); at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:47; #4 0x0000000000b3d8a1 in std::terminate () at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:57; #5 0x00000000006f891b in ~thread (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/thread:151; #6 _Destroy<std::thread> (__pointer=<optimized out>) at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:93; #7 __destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:103; #8 _Destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:126; #9 _Destroy<std::thread*, std::thread> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:151; #10 std::vector<std::thread, std::allocator<std::thread> >::~vector (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_vector.h:424; #11 0x00000000007a5fde in cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::parallel_exec<cuckoohash_map<std::__cxx11::basic_stri",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:4678,Performance,optimiz,optimized,4678,"(LWP 27870)]; 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; 56 ../nptl/sysdeps/unix/sysv/linux/raise.c: No such file or directory.; (gdb) bt; #0 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; #1 0x00007fff7e8a9448 in __GI_abort () at abort.c:89; #2 0x0000000000bc962d in __gnu_cxx::__verbose_terminate_handler (); at ../../.././libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x0000000000b3d856 in __cxxabiv1::__terminate (handler=<optimized out>); at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:47; #4 0x0000000000b3d8a1 in std::terminate () at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:57; #5 0x00000000006f891b in ~thread (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/thread:151; #6 _Destroy<std::thread> (__pointer=<optimized out>) at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:93; #7 __destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:103; #8 _Destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:126; #9 _Destroy<std::thread*, std::thread> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:151; #10 std::vector<std::thread, std::allocator<std::thread> >::~vector (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_vector.h:424; #11 0x00000000007a5fde in cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::parallel_exec<cuckoohash_map<std::__cxx11::basic_stri",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:4791,Performance,optimiz,optimized,4791,"sv/linux/raise.c: No such file or directory.; (gdb) bt; #0 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; #1 0x00007fff7e8a9448 in __GI_abort () at abort.c:89; #2 0x0000000000bc962d in __gnu_cxx::__verbose_terminate_handler (); at ../../.././libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x0000000000b3d856 in __cxxabiv1::__terminate (handler=<optimized out>); at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:47; #4 0x0000000000b3d8a1 in std::terminate () at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:57; #5 0x00000000006f891b in ~thread (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/thread:151; #6 _Destroy<std::thread> (__pointer=<optimized out>) at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:93; #7 __destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:103; #8 _Destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:126; #9 _Destroy<std::thread*, std::thread> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:151; #10 std::vector<std::thread, std::allocator<std::thread> >::~vector (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_vector.h:424; #11 0x00000000007a5fde in cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::parallel_exec<cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:4816,Performance,optimiz,optimized,4816,"sv/linux/raise.c: No such file or directory.; (gdb) bt; #0 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; #1 0x00007fff7e8a9448 in __GI_abort () at abort.c:89; #2 0x0000000000bc962d in __gnu_cxx::__verbose_terminate_handler (); at ../../.././libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x0000000000b3d856 in __cxxabiv1::__terminate (handler=<optimized out>); at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:47; #4 0x0000000000b3d8a1 in std::terminate () at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:57; #5 0x00000000006f891b in ~thread (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/thread:151; #6 _Destroy<std::thread> (__pointer=<optimized out>) at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:93; #7 __destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:103; #8 _Destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:126; #9 _Destroy<std::thread*, std::thread> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:151; #10 std::vector<std::thread, std::allocator<std::thread> >::~vector (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_vector.h:424; #11 0x00000000007a5fde in cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::parallel_exec<cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:4942,Performance,optimiz,optimized,4942,"raise.c:56; #1 0x00007fff7e8a9448 in __GI_abort () at abort.c:89; #2 0x0000000000bc962d in __gnu_cxx::__verbose_terminate_handler (); at ../../.././libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x0000000000b3d856 in __cxxabiv1::__terminate (handler=<optimized out>); at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:47; #4 0x0000000000b3d8a1 in std::terminate () at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:57; #5 0x00000000006f891b in ~thread (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/thread:151; #6 _Destroy<std::thread> (__pointer=<optimized out>) at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:93; #7 __destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:103; #8 _Destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:126; #9 _Destroy<std::thread*, std::thread> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:151; #10 std::vector<std::thread, std::allocator<std::thread> >::~vector (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_vector.h:424; #11 0x00000000007a5fde in cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::parallel_exec<cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::a",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:4967,Performance,optimiz,optimized,4967,"raise.c:56; #1 0x00007fff7e8a9448 in __GI_abort () at abort.c:89; #2 0x0000000000bc962d in __gnu_cxx::__verbose_terminate_handler (); at ../../.././libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x0000000000b3d856 in __cxxabiv1::__terminate (handler=<optimized out>); at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:47; #4 0x0000000000b3d8a1 in std::terminate () at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:57; #5 0x00000000006f891b in ~thread (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/thread:151; #6 _Destroy<std::thread> (__pointer=<optimized out>) at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:93; #7 __destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:103; #8 _Destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:126; #9 _Destroy<std::thread*, std::thread> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:151; #10 std::vector<std::thread, std::allocator<std::thread> >::~vector (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_vector.h:424; #11 0x00000000007a5fde in cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::parallel_exec<cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::a",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:5120,Performance,optimiz,optimized,5120,"upc++/vterminate.cc:95; #3 0x0000000000b3d856 in __cxxabiv1::__terminate (handler=<optimized out>); at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:47; #4 0x0000000000b3d8a1 in std::terminate () at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:57; #5 0x00000000006f891b in ~thread (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/thread:151; #6 _Destroy<std::thread> (__pointer=<optimized out>) at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:93; #7 __destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:103; #8 _Destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:126; #9 _Destroy<std::thread*, std::thread> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:151; #10 std::vector<std::thread, std::allocator<std::thread> >::~vector (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_vector.h:424; #11 0x00000000007a5fde in cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::parallel_exec<cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::cuckoo_status cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:5147,Performance,optimiz,optimized,5147,"upc++/vterminate.cc:95; #3 0x0000000000b3d856 in __cxxabiv1::__terminate (handler=<optimized out>); at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:47; #4 0x0000000000b3d8a1 in std::terminate () at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:57; #5 0x00000000006f891b in ~thread (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/thread:151; #6 _Destroy<std::thread> (__pointer=<optimized out>) at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:93; #7 __destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:103; #8 _Destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:126; #9 _Destroy<std::thread*, std::thread> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:151; #10 std::vector<std::thread, std::allocator<std::thread> >::~vector (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_vector.h:424; #11 0x00000000007a5fde in cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::parallel_exec<cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::cuckoo_status cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:7808,Performance,optimiz,optimized,7808,"ar, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::cuckoo_status cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::cuckoo_fast_double<std::integral_constant<bool, false>, std::integral_constant<bool, true> >(unsigned long)::{lambda(unsigned long, unsigned long, std::__exception_ptr::exception_ptr&)#1}) (this=this@entry=0x7fffffffc520, start=34816, start@entry=0, end=65536, func=...); at /u/user/tmp/salmon/include/cuckoohash_map.hh:1756; #12 0x00000000007a69ac in cuckoo_fast_double<std::integral_constant<bool, false>, std::integral_constant<bool, true> >; (current_hp=<optimized out>, this=0x7fffffffc520) at /u/user/tmp/salmon/include/cuckoohash_map.hh:1583; #13 cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::cuckoo_insert_loop<std::integral_constant<bool, false>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > (this=this@entry=0x7fffffffc520, hv=..., b=..., key=...); at /u/user/tmp/salmon/include/cuckoohash_map.hh:1086; #14 0x00000000007a8540 in uprase_fn<std::__cxx11::basic_string<char>&, cuckoohash_map<Key, T, Hash, KeyEqual, Allocator, SLOT_PER_BUCKET>::upsert(K&&, F, Args&& ...) [with K = std::__cxx11::basic_string<char>&; F = densityCalculator(single_parser*, AlevinOp",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:9567,Performance,optimiz,optimized,9567,"ckoohash_map<Key, T, Hash, KeyEqual, Allocator, SLOT_PER_BUCKET>::upsert(K&&, F, Args&& ...) [with K = std::__cxx11::basic_string<char>&; F = densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>; Args = {int}; Key = std::__cxx11::basic_string<char>; T = unsigned int; Hash = BarcodeGroupStringHasher; KeyEqual = std::equal_to<std::__cxx11::basic_string<char> >; Allocator = std::allocator<std::pair<const std::__cxx11::basic_string<char>, unsigned int> >; long unsigned int SLOT_PER_BUCKET = 4ul]::<lambda(cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>::mapped_type&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:529; #12 0x00000000007a69ac in cuckoo_fast_double<std::integral_constant<bool, false>, std::integral_constant<bool, true> >; (current_hp=<optimized out>, this=0x7fffffffc520) at /u/user/tmp/salmon/include/cuckoohash_map.hh:1583; #13 cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::cuckoo_insert_loop<std::integral_constant<bool, false>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > (this=this@entry=0x7fffffffc520, hv=..., b=..., key=...); at /u/user/tmp/salmon/include/cuckoohash_map.hh:1086; #14 0x00000000007a8540 in uprase_fn<std::__cxx11::basic_string<char>&, cuckoohash_map<Key, T, Hash, KeyEqual, A",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:9770,Performance,optimiz,optimized,9770,"ityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>; Args = {int}; Key = std::__cxx11::basic_string<char>; T = unsigned int; Hash = BarcodeGroupStringHasher; KeyEqual = std::equal_to<std::__cxx11::basic_string<char> >; Allocator = std::allocator<std::pair<const std::__cxx11::basic_string<char>, unsigned int> >; long unsigned int SLOT_PER_BUCKET = 4ul]::<lambda(cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>::mapped_type&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:529; #12 0x00000000007a69ac in cuckoo_fast_double<std::integral_constant<bool, false>, std::integral_constant<bool, true> >; (current_hp=<optimized out>, this=0x7fffffffc520) at /u/user/tmp/salmon/include/cuckoohash_map.hh:1583; #13 cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::cuckoo_insert_loop<std::integral_constant<bool, false>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > (this=this@entry=0x7fffffffc520, hv=..., b=..., key=...); at /u/user/tmp/salmon/include/cuckoohash_map.hh:1086; #14 0x00000000007a8540 in uprase_fn<std::__cxx11::basic_string<char>&, cuckoohash_map<Key, T, Hash, KeyEqual, Allocator, SLOT_PER_BUCKET>::upsert(K&&, F, Args&& ...) [with K = std::__cxx11::basic_string<char>&; F = densityCalculator(single_parser*, AlevinOpt",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:11529,Performance,optimiz,optimized,11529,"ckoohash_map<Key, T, Hash, KeyEqual, Allocator, SLOT_PER_BUCKET>::upsert(K&&, F, Args&& ...) [with K = std::__cxx11::basic_string<char>&; F = densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>; Args = {int}; Key = std::__cxx11::basic_string<char>; T = unsigned int; Hash = BarcodeGroupStringHasher; KeyEqual = std::equal_to<std::__cxx11::basic_string<char> >; Allocator = std::allocator<std::pair<const std::__cxx11::basic_string<char>, unsigned int> >; long unsigned int SLOT_PER_BUCKET = 4ul]::<lambda(cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>::mapped_type&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:529; #15 upsert<std::__cxx11::basic_string<char>&, densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:554; #16 densityCalculator<alevin::protocols::Chromium> (parser=<optimized out>, aopt=..., ioMutex=..., freqCounter=...,; usedNumBarcodes=..., totNumBarcodes=...) at /u/user/tmp/salmon/src/Alevin.cpp:137; #17 0x0000000000ba4970 in std::execute_native_thread_routine (__p=<optimized out>); at ../../../.././libstdc++-v3/src/c++11/thread.cc:84; #18 0x00007fff7fbc7064 in start_thread (arg=0x7ffcf97e7700) at pthread_create.c:309; #19",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:12060,Performance,optimiz,optimized,12060,"s = {int}; Key = std::__cxx11::basic_string<char>; T = unsigned int; Hash = BarcodeGroupStringHasher; KeyEqual = std::equal_to<std::__cxx11::basic_string<char> >; Allocator = std::allocator<std::pair<const std::__cxx11::basic_string<char>, unsigned int> >; long unsigned int SLOT_PER_BUCKET = 4ul]::<lambda(cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>::mapped_type&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:529; #15 upsert<std::__cxx11::basic_string<char>&, densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:554; #16 densityCalculator<alevin::protocols::Chromium> (parser=<optimized out>, aopt=..., ioMutex=..., freqCounter=...,; usedNumBarcodes=..., totNumBarcodes=...) at /u/user/tmp/salmon/src/Alevin.cpp:137; #17 0x0000000000ba4970 in std::execute_native_thread_routine (__p=<optimized out>); at ../../../.././libstdc++-v3/src/c++11/thread.cc:84; #18 0x00007fff7fbc7064 in start_thread (arg=0x7ffcf97e7700) at pthread_create.c:309; #19 0x00007fff7e95b62d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111; (gdb); #0 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; #1 0x00007fff7e8a9448 in __GI_abort () at abort.c:89; #2 0x0000000000bc962d in __gnu_cxx::__verbose_terminate_handler (); at ../../.././libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x0000000000b3d856 in __cxxabiv1::__terminate (handler=<optimized out>); at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:47; #4 0x0000000000b3d8a1 in std::t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:12190,Performance,optimiz,optimized,12190,"odeGroupStringHasher; KeyEqual = std::equal_to<std::__cxx11::basic_string<char> >; Allocator = std::allocator<std::pair<const std::__cxx11::basic_string<char>, unsigned int> >; long unsigned int SLOT_PER_BUCKET = 4ul]::<lambda(cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>::mapped_type&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:529; #15 upsert<std::__cxx11::basic_string<char>&, densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:554; #16 densityCalculator<alevin::protocols::Chromium> (parser=<optimized out>, aopt=..., ioMutex=..., freqCounter=...,; usedNumBarcodes=..., totNumBarcodes=...) at /u/user/tmp/salmon/src/Alevin.cpp:137; #17 0x0000000000ba4970 in std::execute_native_thread_routine (__p=<optimized out>); at ../../../.././libstdc++-v3/src/c++11/thread.cc:84; #18 0x00007fff7fbc7064 in start_thread (arg=0x7ffcf97e7700) at pthread_create.c:309; #19 0x00007fff7e95b62d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111; (gdb); #0 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; #1 0x00007fff7e8a9448 in __GI_abort () at abort.c:89; #2 0x0000000000bc962d in __gnu_cxx::__verbose_terminate_handler (); at ../../.././libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x0000000000b3d856 in __cxxabiv1::__terminate (handler=<optimized out>); at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:47; #4 0x0000000000b3d8a1 in std::terminate () at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:57; #5 0x000000",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:12397,Performance,optimiz,optimized,12397,"R_BUCKET = 4ul]::<lambda(cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>::mapped_type&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:529; #15 upsert<std::__cxx11::basic_string<char>&, densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:554; #16 densityCalculator<alevin::protocols::Chromium> (parser=<optimized out>, aopt=..., ioMutex=..., freqCounter=...,; usedNumBarcodes=..., totNumBarcodes=...) at /u/user/tmp/salmon/src/Alevin.cpp:137; #17 0x0000000000ba4970 in std::execute_native_thread_routine (__p=<optimized out>); at ../../../.././libstdc++-v3/src/c++11/thread.cc:84; #18 0x00007fff7fbc7064 in start_thread (arg=0x7ffcf97e7700) at pthread_create.c:309; #19 0x00007fff7e95b62d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111; (gdb); #0 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; #1 0x00007fff7e8a9448 in __GI_abort () at abort.c:89; #2 0x0000000000bc962d in __gnu_cxx::__verbose_terminate_handler (); at ../../.././libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x0000000000b3d856 in __cxxabiv1::__terminate (handler=<optimized out>); at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:47; #4 0x0000000000b3d8a1 in std::terminate () at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:57; #5 0x00000000006f891b in ~thread (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/thread:151; #6 _Destroy<std::thread> (__pointer=<optimized out>) at /u/user/local/include/c++/5",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:12982,Performance,optimiz,optimized,12982,"g<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:554; #16 densityCalculator<alevin::protocols::Chromium> (parser=<optimized out>, aopt=..., ioMutex=..., freqCounter=...,; usedNumBarcodes=..., totNumBarcodes=...) at /u/user/tmp/salmon/src/Alevin.cpp:137; #17 0x0000000000ba4970 in std::execute_native_thread_routine (__p=<optimized out>); at ../../../.././libstdc++-v3/src/c++11/thread.cc:84; #18 0x00007fff7fbc7064 in start_thread (arg=0x7ffcf97e7700) at pthread_create.c:309; #19 0x00007fff7e95b62d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111; (gdb); #0 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; #1 0x00007fff7e8a9448 in __GI_abort () at abort.c:89; #2 0x0000000000bc962d in __gnu_cxx::__verbose_terminate_handler (); at ../../.././libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x0000000000b3d856 in __cxxabiv1::__terminate (handler=<optimized out>); at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:47; #4 0x0000000000b3d8a1 in std::terminate () at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:57; #5 0x00000000006f891b in ~thread (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/thread:151; #6 _Destroy<std::thread> (__pointer=<optimized out>) at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:93; #7 __destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:103; #8 _Destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:126; #9 _Destroy<std::thread*, std::thread> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:151; #10 std::vector<std::thread, std::allocator<std::thread> >::~vector (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/lo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:13196,Performance,optimiz,optimized,13196,"=..., ioMutex=..., freqCounter=...,; usedNumBarcodes=..., totNumBarcodes=...) at /u/user/tmp/salmon/src/Alevin.cpp:137; #17 0x0000000000ba4970 in std::execute_native_thread_routine (__p=<optimized out>); at ../../../.././libstdc++-v3/src/c++11/thread.cc:84; #18 0x00007fff7fbc7064 in start_thread (arg=0x7ffcf97e7700) at pthread_create.c:309; #19 0x00007fff7e95b62d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111; (gdb); #0 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; #1 0x00007fff7e8a9448 in __GI_abort () at abort.c:89; #2 0x0000000000bc962d in __gnu_cxx::__verbose_terminate_handler (); at ../../.././libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x0000000000b3d856 in __cxxabiv1::__terminate (handler=<optimized out>); at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:47; #4 0x0000000000b3d8a1 in std::terminate () at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:57; #5 0x00000000006f891b in ~thread (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/thread:151; #6 _Destroy<std::thread> (__pointer=<optimized out>) at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:93; #7 __destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:103; #8 _Destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:126; #9 _Destroy<std::thread*, std::thread> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:151; #10 std::vector<std::thread, std::allocator<std::thread> >::~vector (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_vector.h:424; #11 0x00000000007a5fde in cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<ch",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:13223,Performance,optimiz,optimized,13223,"=..., ioMutex=..., freqCounter=...,; usedNumBarcodes=..., totNumBarcodes=...) at /u/user/tmp/salmon/src/Alevin.cpp:137; #17 0x0000000000ba4970 in std::execute_native_thread_routine (__p=<optimized out>); at ../../../.././libstdc++-v3/src/c++11/thread.cc:84; #18 0x00007fff7fbc7064 in start_thread (arg=0x7ffcf97e7700) at pthread_create.c:309; #19 0x00007fff7e95b62d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111; (gdb); #0 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; #1 0x00007fff7e8a9448 in __GI_abort () at abort.c:89; #2 0x0000000000bc962d in __gnu_cxx::__verbose_terminate_handler (); at ../../.././libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x0000000000b3d856 in __cxxabiv1::__terminate (handler=<optimized out>); at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:47; #4 0x0000000000b3d8a1 in std::terminate () at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:57; #5 0x00000000006f891b in ~thread (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/thread:151; #6 _Destroy<std::thread> (__pointer=<optimized out>) at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:93; #7 __destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:103; #8 _Destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:126; #9 _Destroy<std::thread*, std::thread> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:151; #10 std::vector<std::thread, std::allocator<std::thread> >::~vector (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_vector.h:424; #11 0x00000000007a5fde in cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<ch",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:13324,Performance,optimiz,optimized,13324,"pp:137; #17 0x0000000000ba4970 in std::execute_native_thread_routine (__p=<optimized out>); at ../../../.././libstdc++-v3/src/c++11/thread.cc:84; #18 0x00007fff7fbc7064 in start_thread (arg=0x7ffcf97e7700) at pthread_create.c:309; #19 0x00007fff7e95b62d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111; (gdb); #0 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; #1 0x00007fff7e8a9448 in __GI_abort () at abort.c:89; #2 0x0000000000bc962d in __gnu_cxx::__verbose_terminate_handler (); at ../../.././libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x0000000000b3d856 in __cxxabiv1::__terminate (handler=<optimized out>); at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:47; #4 0x0000000000b3d8a1 in std::terminate () at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:57; #5 0x00000000006f891b in ~thread (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/thread:151; #6 _Destroy<std::thread> (__pointer=<optimized out>) at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:93; #7 __destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:103; #8 _Destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:126; #9 _Destroy<std::thread*, std::thread> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:151; #10 std::vector<std::thread, std::allocator<std::thread> >::~vector (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_vector.h:424; #11 0x00000000007a5fde in cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:13436,Performance,optimiz,optimized,13436,"11/thread.cc:84; #18 0x00007fff7fbc7064 in start_thread (arg=0x7ffcf97e7700) at pthread_create.c:309; #19 0x00007fff7e95b62d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111; (gdb); #0 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; #1 0x00007fff7e8a9448 in __GI_abort () at abort.c:89; #2 0x0000000000bc962d in __gnu_cxx::__verbose_terminate_handler (); at ../../.././libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x0000000000b3d856 in __cxxabiv1::__terminate (handler=<optimized out>); at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:47; #4 0x0000000000b3d8a1 in std::terminate () at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:57; #5 0x00000000006f891b in ~thread (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/thread:151; #6 _Destroy<std::thread> (__pointer=<optimized out>) at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:93; #7 __destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:103; #8 _Destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:126; #9 _Destroy<std::thread*, std::thread> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:151; #10 std::vector<std::thread, std::allocator<std::thread> >::~vector (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_vector.h:424; #11 0x00000000007a5fde in cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::parallel_exec<cuckoohash_map<std::__cxx11::basic_stri",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:13461,Performance,optimiz,optimized,13461,"11/thread.cc:84; #18 0x00007fff7fbc7064 in start_thread (arg=0x7ffcf97e7700) at pthread_create.c:309; #19 0x00007fff7e95b62d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111; (gdb); #0 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; #1 0x00007fff7e8a9448 in __GI_abort () at abort.c:89; #2 0x0000000000bc962d in __gnu_cxx::__verbose_terminate_handler (); at ../../.././libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x0000000000b3d856 in __cxxabiv1::__terminate (handler=<optimized out>); at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:47; #4 0x0000000000b3d8a1 in std::terminate () at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:57; #5 0x00000000006f891b in ~thread (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/thread:151; #6 _Destroy<std::thread> (__pointer=<optimized out>) at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:93; #7 __destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:103; #8 _Destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:126; #9 _Destroy<std::thread*, std::thread> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:151; #10 std::vector<std::thread, std::allocator<std::thread> >::~vector (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_vector.h:424; #11 0x00000000007a5fde in cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::parallel_exec<cuckoohash_map<std::__cxx11::basic_stri",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:13574,Performance,optimiz,optimized,13574,"t ../sysdeps/unix/sysv/linux/x86_64/clone.S:111; (gdb); #0 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; #1 0x00007fff7e8a9448 in __GI_abort () at abort.c:89; #2 0x0000000000bc962d in __gnu_cxx::__verbose_terminate_handler (); at ../../.././libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x0000000000b3d856 in __cxxabiv1::__terminate (handler=<optimized out>); at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:47; #4 0x0000000000b3d8a1 in std::terminate () at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:57; #5 0x00000000006f891b in ~thread (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/thread:151; #6 _Destroy<std::thread> (__pointer=<optimized out>) at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:93; #7 __destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:103; #8 _Destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:126; #9 _Destroy<std::thread*, std::thread> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:151; #10 std::vector<std::thread, std::allocator<std::thread> >::~vector (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_vector.h:424; #11 0x00000000007a5fde in cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::parallel_exec<cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:13599,Performance,optimiz,optimized,13599,"t ../sysdeps/unix/sysv/linux/x86_64/clone.S:111; (gdb); #0 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; #1 0x00007fff7e8a9448 in __GI_abort () at abort.c:89; #2 0x0000000000bc962d in __gnu_cxx::__verbose_terminate_handler (); at ../../.././libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x0000000000b3d856 in __cxxabiv1::__terminate (handler=<optimized out>); at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:47; #4 0x0000000000b3d8a1 in std::terminate () at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:57; #5 0x00000000006f891b in ~thread (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/thread:151; #6 _Destroy<std::thread> (__pointer=<optimized out>) at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:93; #7 __destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:103; #8 _Destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:126; #9 _Destroy<std::thread*, std::thread> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:151; #10 std::vector<std::thread, std::allocator<std::thread> >::~vector (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_vector.h:424; #11 0x00000000007a5fde in cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::parallel_exec<cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:13725,Performance,optimiz,optimized,13725,"raise.c:56; #1 0x00007fff7e8a9448 in __GI_abort () at abort.c:89; #2 0x0000000000bc962d in __gnu_cxx::__verbose_terminate_handler (); at ../../.././libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x0000000000b3d856 in __cxxabiv1::__terminate (handler=<optimized out>); at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:47; #4 0x0000000000b3d8a1 in std::terminate () at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:57; #5 0x00000000006f891b in ~thread (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/thread:151; #6 _Destroy<std::thread> (__pointer=<optimized out>) at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:93; #7 __destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:103; #8 _Destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:126; #9 _Destroy<std::thread*, std::thread> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:151; #10 std::vector<std::thread, std::allocator<std::thread> >::~vector (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_vector.h:424; #11 0x00000000007a5fde in cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::parallel_exec<cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::a",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:13750,Performance,optimiz,optimized,13750,"raise.c:56; #1 0x00007fff7e8a9448 in __GI_abort () at abort.c:89; #2 0x0000000000bc962d in __gnu_cxx::__verbose_terminate_handler (); at ../../.././libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x0000000000b3d856 in __cxxabiv1::__terminate (handler=<optimized out>); at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:47; #4 0x0000000000b3d8a1 in std::terminate () at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:57; #5 0x00000000006f891b in ~thread (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/thread:151; #6 _Destroy<std::thread> (__pointer=<optimized out>) at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:93; #7 __destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:103; #8 _Destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:126; #9 _Destroy<std::thread*, std::thread> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:151; #10 std::vector<std::thread, std::allocator<std::thread> >::~vector (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_vector.h:424; #11 0x00000000007a5fde in cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::parallel_exec<cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::a",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:13903,Performance,optimiz,optimized,13903,"upc++/vterminate.cc:95; #3 0x0000000000b3d856 in __cxxabiv1::__terminate (handler=<optimized out>); at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:47; #4 0x0000000000b3d8a1 in std::terminate () at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:57; #5 0x00000000006f891b in ~thread (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/thread:151; #6 _Destroy<std::thread> (__pointer=<optimized out>) at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:93; #7 __destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:103; #8 _Destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:126; #9 _Destroy<std::thread*, std::thread> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:151; #10 std::vector<std::thread, std::allocator<std::thread> >::~vector (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_vector.h:424; #11 0x00000000007a5fde in cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::parallel_exec<cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::cuckoo_status cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:13930,Performance,optimiz,optimized,13930,"upc++/vterminate.cc:95; #3 0x0000000000b3d856 in __cxxabiv1::__terminate (handler=<optimized out>); at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:47; #4 0x0000000000b3d8a1 in std::terminate () at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:57; #5 0x00000000006f891b in ~thread (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/thread:151; #6 _Destroy<std::thread> (__pointer=<optimized out>) at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:93; #7 __destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:103; #8 _Destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:126; #9 _Destroy<std::thread*, std::thread> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:151; #10 std::vector<std::thread, std::allocator<std::thread> >::~vector (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_vector.h:424; #11 0x00000000007a5fde in cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::parallel_exec<cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::cuckoo_status cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:16351,Performance,optimiz,optimized,16351,"ption_ptr::exception_ptr&)#1}>(unsigned long, unsigned long, cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::cuckoo_status cuckoohash_map<std::__cxx11::basic_stringing<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::cuckoo_fast_double<std::integral_constant<bool, false>, std::integral_constant<bool, true> >(unsigned long)::{lambda(unsigned long, unsigned long, std::__exception_ptr::exception_ptr&)#1}) (this=this@entry=0x7fffffffc520, start=34816, start@entry=0, end=65536, func=...); at /u/user/tmp/salmon/include/cuckoohash_map.hh:1756; #12 0x00000000007a69ac in cuckoo_fast_double<std::integral_constant<bool, false>, std::integral_constant<bool, true> >; (current_hp=<optimized out>, this=0x7fffffffc520) at /u/user/tmp/salmon/include/cuckoohash_map.hh:1583; #13 cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::cuckoo_insert_loop<std::integral_constant<bool, false>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > (this=this@entry=0x7fffffffc520, hv=..., b=..., key=...); at /u/user/tmp/salmon/include/cuckoohash_map.hh:1086; #14 0x00000000007a8540 in uprase_fn<std::__cxx11::basic_string<char>&, cuckoohash_map<Key, T, Hash, KeyEqual, Allocator, SLOT_PER_BUCKET>::upsert(K&&, F, Args&& ...) [with K = std::__cxx11::basic_string<char>&; F = densityCalculator(single_parser*, AlevinOp",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:18110,Performance,optimiz,optimized,18110,"ckoohash_map<Key, T, Hash, KeyEqual, Allocator, SLOT_PER_BUCKET>::upsert(K&&, F, Args&& ...) [with K = std::__cxx11::basic_string<char>&; F = densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>; Args = {int}; Key = std::__cxx11::basic_string<char>; T = unsigned int; Hash = BarcodeGroupStringHasher; KeyEqual = std::equal_to<std::__cxx11::basic_string<char> >; Allocator = std::allocator<std::pair<const std::__cxx11::basic_string<char>, unsigned int> >; long unsigned int SLOT_PER_BUCKET = 4ul]::<lambda(cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>::mapped_type&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:529; #15 upsert<std::__cxx11::basic_string<char>&, densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:554; #16 densityCalculator<alevin::protocols::Chromium> (parser=<optimized out>, aopt=..., ioMutex=..., freqCounter=...,; usedNumBarcodes=..., totNumBarcodes=...) at /u/user/tmp/salmon/src/Alevin.cpp:137; #17 0x0000000000ba4970 in std::execute_native_thread_routine (__p=<optimized out>); at ../../../.././libstdc++-v3/src/c++11/thread.cc:84; #18 0x00007fff7fbc7064 in start_thread (arg=0x7ffcf97e7700) at pthread_create.c:309; #19",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:18641,Performance,optimiz,optimized,18641,"&& ...) [with K = std::__cxx11::basic_string<char>&; F = densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>; Args = {int}; Key = std::__cxx11::basic_string<char>; T = unsigned int; Hash = BarcodeGroupStringHasher; KeyEqual = std::equal_to<std::__cxx11::basic_string<char> >; Allocator = std::allocator<std::pair<const std::__cxx11::basic_string<char>, unsigned int> >; long unsigned int SLOT_PER_BUCKET = 4ul]::<lambda(cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>::mapped_type&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:529; #15 upsert<std::__cxx11::basic_string<char>&, densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:554; #16 densityCalculator<alevin::protocols::Chromium> (parser=<optimized out>, aopt=..., ioMutex=..., freqCounter=...,; usedNumBarcodes=..., totNumBarcodes=...) at /u/user/tmp/salmon/src/Alevin.cpp:137; #17 0x0000000000ba4970 in std::execute_native_thread_routine (__p=<optimized out>); at ../../../.././libstdc++-v3/src/c++11/thread.cc:84; #18 0x00007fff7fbc7064 in start_thread (arg=0x7ffcf97e7700) at pthread_create.c:309; #19 0x00007fff7e95b62d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:18771,Performance,optimiz,optimized,18771,"&& ...) [with K = std::__cxx11::basic_string<char>&; F = densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>; Args = {int}; Key = std::__cxx11::basic_string<char>; T = unsigned int; Hash = BarcodeGroupStringHasher; KeyEqual = std::equal_to<std::__cxx11::basic_string<char> >; Allocator = std::allocator<std::pair<const std::__cxx11::basic_string<char>, unsigned int> >; long unsigned int SLOT_PER_BUCKET = 4ul]::<lambda(cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>::mapped_type&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:529; #15 upsert<std::__cxx11::basic_string<char>&, densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:554; #16 densityCalculator<alevin::protocols::Chromium> (parser=<optimized out>, aopt=..., ioMutex=..., freqCounter=...,; usedNumBarcodes=..., totNumBarcodes=...) at /u/user/tmp/salmon/src/Alevin.cpp:137; #17 0x0000000000ba4970 in std::execute_native_thread_routine (__p=<optimized out>); at ../../../.././libstdc++-v3/src/c++11/thread.cc:84; #18 0x00007fff7fbc7064 in start_thread (arg=0x7ffcf97e7700) at pthread_create.c:309; #19 0x00007fff7e95b62d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:18978,Performance,optimiz,optimized,18978,"&& ...) [with K = std::__cxx11::basic_string<char>&; F = densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>; Args = {int}; Key = std::__cxx11::basic_string<char>; T = unsigned int; Hash = BarcodeGroupStringHasher; KeyEqual = std::equal_to<std::__cxx11::basic_string<char> >; Allocator = std::allocator<std::pair<const std::__cxx11::basic_string<char>, unsigned int> >; long unsigned int SLOT_PER_BUCKET = 4ul]::<lambda(cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>::mapped_type&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:529; #15 upsert<std::__cxx11::basic_string<char>&, densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:554; #16 densityCalculator<alevin::protocols::Chromium> (parser=<optimized out>, aopt=..., ioMutex=..., freqCounter=...,; usedNumBarcodes=..., totNumBarcodes=...) at /u/user/tmp/salmon/src/Alevin.cpp:137; #17 0x0000000000ba4970 in std::execute_native_thread_routine (__p=<optimized out>); at ../../../.././libstdc++-v3/src/c++11/thread.cc:84; #18 0x00007fff7fbc7064 in start_thread (arg=0x7ffcf97e7700) at pthread_create.c:309; #19 0x00007fff7e95b62d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:1159,Safety,safe,safe,1159,"mples that have worked with Cell Ranger. I recompiled the program with `-DCMAKE_BUILD_TYPE=Debug` and have attached the output and gdb backtrace. There is roughly 8M reads in the single fastq file I am testing with. I can see a whole bunch of threads being created despite limiting the number of processes to two. Thanks!. ```; (gdb) run alevin -l ISR --chromium -p 1 -o 85948/alevin -1 <(gunzip -c ./85948/run1/85948_S18_L001_R1_001.fastq.gz) -2 <(gunzip -c ./85948/run1/85948_S18_L001_R2_001.fastq.gz) -i ./salmon/transcripts_index --tgMap tx2gene.txt; Starting program: ./salmon/build-debug/src/salmon alevin -l ISR --chromium -p 1 -o 85948/alevin -1 <(gunzip -c ./85948/run1/85948_S18_L001_R1_001.fastq.gz) -2 <(gunzip -c ./85948/run1/85948_S18_L001_R2_001.fastq.gz) -i ./salmon/transcripts_index --tgMap tx2gene.txt; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7e0f4700 (LWP 27861)]; [Thread 0x7fff7e0f4700 (LWP 27861) exited]; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [New Thread 0x7fff7d273700 (LWP 27862)]; Logs will be written to 85948/alevin/logs; [New Thread 0x7ffefc3f1700 (LWP 27865)]; [New Thread 0x7ffe7b56f700 (LWP 27866)]; [New Thread 0x7ffdfa6ed700 (LWP 27867)]; ### salmon (single-cell-based) v0.10.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 1 }; ### [ output ] => { 85948/alevin }; ### [ mates1 ] => { /dev/fd/63 }; ### [ mates2 ] => { /dev/fd/62 }; ### [ index ] => { ./salmon/transcripts_index }; ### [ t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:1248,Safety,safe,safe,1248," 8M reads in the single fastq file I am testing with. I can see a whole bunch of threads being created despite limiting the number of processes to two. Thanks!. ```; (gdb) run alevin -l ISR --chromium -p 1 -o 85948/alevin -1 <(gunzip -c ./85948/run1/85948_S18_L001_R1_001.fastq.gz) -2 <(gunzip -c ./85948/run1/85948_S18_L001_R2_001.fastq.gz) -i ./salmon/transcripts_index --tgMap tx2gene.txt; Starting program: ./salmon/build-debug/src/salmon alevin -l ISR --chromium -p 1 -o 85948/alevin -1 <(gunzip -c ./85948/run1/85948_S18_L001_R1_001.fastq.gz) -2 <(gunzip -c ./85948/run1/85948_S18_L001_R2_001.fastq.gz) -i ./salmon/transcripts_index --tgMap tx2gene.txt; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7e0f4700 (LWP 27861)]; [Thread 0x7fff7e0f4700 (LWP 27861) exited]; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [New Thread 0x7fff7d273700 (LWP 27862)]; Logs will be written to 85948/alevin/logs; [New Thread 0x7ffefc3f1700 (LWP 27865)]; [New Thread 0x7ffe7b56f700 (LWP 27866)]; [New Thread 0x7ffdfa6ed700 (LWP 27867)]; ### salmon (single-cell-based) v0.10.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 1 }; ### [ output ] => { 85948/alevin }; ### [ mates1 ] => { /dev/fd/63 }; ### [ mates2 ] => { /dev/fd/62 }; ### [ index ] => { ./salmon/transcripts_index }; ### [ tgMap ] => { tx2gene.txt }. [2018-06-08 11:55:47.378] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [Ne",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:3622,Safety,Abort,Aborted,3622,"7922)]; [New Thread 0x7ffaf7262700 (LWP 27923)]; [New Thread 0x7ffa77261700 (LWP 27924)]; [New Thread 0x7ff9f7260700 (LWP 27925)]; [New Thread 0x7ff97725f700 (LWP 27926)]; [New Thread 0x7ff8f725e700 (LWP 27927)]; [New Thread 0x7ff87725d700 (LWP 27928)]; [New Thread 0x7ff7f725c700 (LWP 27929)]; [New Thread 0x7ff77725b700 (LWP 27930)]; [New Thread 0x7ff6f725a700 (LWP 27931)]; [New Thread 0x7ff677259700 (LWP 27932)]; [New Thread 0x7ff5f7258700 (LWP 27933)]; [Thread 0x7ffbf7264700 (LWP 27921) exited]; [Thread 0x7ffc77265700 (LWP 27920) exited]; [New Thread 0x7ff577257700 (LWP 27934)]; [New Thread 0x7ff4f7256700 (LWP 27935)]; [Thread 0x7ffb77263700 (LWP 27922) exited]; [Thread 0x7ffa77261700 (LWP 27924) exited]; [Thread 0x7ffaf7262700 (LWP 27923) exited]; [New Thread 0x7ff477255700 (LWP 27936)]; [Thread 0x7ff9f7260700 (LWP 27925) exited]; terminate called without an active exception; [Thread 0x7ff77725b700 (LWP 27930) exited]; [Thread 0x7ff8f725e700 (LWP 27927) exited]. Program received signal SIGABRT, Aborted.; [Switching to Thread 0x7ffcf97e7700 (LWP 27870)]; 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; 56 ../nptl/sysdeps/unix/sysv/linux/raise.c: No such file or directory.; (gdb) bt; #0 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; #1 0x00007fff7e8a9448 in __GI_abort () at abort.c:89; #2 0x0000000000bc962d in __gnu_cxx::__verbose_terminate_handler (); at ../../.././libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x0000000000b3d856 in __cxxabiv1::__terminate (handler=<optimized out>); at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:47; #4 0x0000000000b3d8a1 in std::terminate () at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:57; #5 0x00000000006f891b in ~thread (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/thread:151; #6 _Destroy<std::thread> (__pointer=<optimized out>) at /u/user/local/include/c++/5.4.0/bits/stl_construc",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:4005,Safety,abort,abort,4005,"; [New Thread 0x7ff677259700 (LWP 27932)]; [New Thread 0x7ff5f7258700 (LWP 27933)]; [Thread 0x7ffbf7264700 (LWP 27921) exited]; [Thread 0x7ffc77265700 (LWP 27920) exited]; [New Thread 0x7ff577257700 (LWP 27934)]; [New Thread 0x7ff4f7256700 (LWP 27935)]; [Thread 0x7ffb77263700 (LWP 27922) exited]; [Thread 0x7ffa77261700 (LWP 27924) exited]; [Thread 0x7ffaf7262700 (LWP 27923) exited]; [New Thread 0x7ff477255700 (LWP 27936)]; [Thread 0x7ff9f7260700 (LWP 27925) exited]; terminate called without an active exception; [Thread 0x7ff77725b700 (LWP 27930) exited]; [Thread 0x7ff8f725e700 (LWP 27927) exited]. Program received signal SIGABRT, Aborted.; [Switching to Thread 0x7ffcf97e7700 (LWP 27870)]; 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; 56 ../nptl/sysdeps/unix/sysv/linux/raise.c: No such file or directory.; (gdb) bt; #0 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; #1 0x00007fff7e8a9448 in __GI_abort () at abort.c:89; #2 0x0000000000bc962d in __gnu_cxx::__verbose_terminate_handler (); at ../../.././libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x0000000000b3d856 in __cxxabiv1::__terminate (handler=<optimized out>); at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:47; #4 0x0000000000b3d8a1 in std::terminate () at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:57; #5 0x00000000006f891b in ~thread (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/thread:151; #6 _Destroy<std::thread> (__pointer=<optimized out>) at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:93; #7 __destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:103; #8 _Destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:126; #9 _Destroy<std::thread*, std::thread> (__last=<optimized out>, __first=<optimized out>); ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:12788,Safety,abort,abort,12788,"tomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:554; #16 densityCalculator<alevin::protocols::Chromium> (parser=<optimized out>, aopt=..., ioMutex=..., freqCounter=...,; usedNumBarcodes=..., totNumBarcodes=...) at /u/user/tmp/salmon/src/Alevin.cpp:137; #17 0x0000000000ba4970 in std::execute_native_thread_routine (__p=<optimized out>); at ../../../.././libstdc++-v3/src/c++11/thread.cc:84; #18 0x00007fff7fbc7064 in start_thread (arg=0x7ffcf97e7700) at pthread_create.c:309; #19 0x00007fff7e95b62d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111; (gdb); #0 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; #1 0x00007fff7e8a9448 in __GI_abort () at abort.c:89; #2 0x0000000000bc962d in __gnu_cxx::__verbose_terminate_handler (); at ../../.././libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x0000000000b3d856 in __cxxabiv1::__terminate (handler=<optimized out>); at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:47; #4 0x0000000000b3d8a1 in std::terminate () at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:57; #5 0x00000000006f891b in ~thread (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/thread:151; #6 _Destroy<std::thread> (__pointer=<optimized out>) at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:93; #7 __destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:103; #8 _Destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:126; #9 _Destroy<std::thread*, std::thread> (__last=<optimized out>, __first=<optimized out>); ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:1116,Security,secur,security,1116,"mples that have worked with Cell Ranger. I recompiled the program with `-DCMAKE_BUILD_TYPE=Debug` and have attached the output and gdb backtrace. There is roughly 8M reads in the single fastq file I am testing with. I can see a whole bunch of threads being created despite limiting the number of processes to two. Thanks!. ```; (gdb) run alevin -l ISR --chromium -p 1 -o 85948/alevin -1 <(gunzip -c ./85948/run1/85948_S18_L001_R1_001.fastq.gz) -2 <(gunzip -c ./85948/run1/85948_S18_L001_R2_001.fastq.gz) -i ./salmon/transcripts_index --tgMap tx2gene.txt; Starting program: ./salmon/build-debug/src/salmon alevin -l ISR --chromium -p 1 -o 85948/alevin -1 <(gunzip -c ./85948/run1/85948_S18_L001_R1_001.fastq.gz) -2 <(gunzip -c ./85948/run1/85948_S18_L001_R2_001.fastq.gz) -i ./salmon/transcripts_index --tgMap tx2gene.txt; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7e0f4700 (LWP 27861)]; [Thread 0x7fff7e0f4700 (LWP 27861) exited]; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [New Thread 0x7fff7d273700 (LWP 27862)]; Logs will be written to 85948/alevin/logs; [New Thread 0x7ffefc3f1700 (LWP 27865)]; [New Thread 0x7ffe7b56f700 (LWP 27866)]; [New Thread 0x7ffdfa6ed700 (LWP 27867)]; ### salmon (single-cell-based) v0.10.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 1 }; ### [ output ] => { 85948/alevin }; ### [ mates1 ] => { /dev/fd/63 }; ### [ mates2 ] => { /dev/fd/62 }; ### [ index ] => { ./salmon/transcripts_index }; ### [ t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:8615,Security,Hash,Hash,8615,", end=65536, func=...); at /u/user/tmp/salmon/include/cuckoohash_map.hh:1756; #12 0x00000000007a69ac in cuckoo_fast_double<std::integral_constant<bool, false>, std::integral_constant<bool, true> >; (current_hp=<optimized out>, this=0x7fffffffc520) at /u/user/tmp/salmon/include/cuckoohash_map.hh:1583; #13 cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::cuckoo_insert_loop<std::integral_constant<bool, false>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > (this=this@entry=0x7fffffffc520, hv=..., b=..., key=...); at /u/user/tmp/salmon/include/cuckoohash_map.hh:1086; #14 0x00000000007a8540 in uprase_fn<std::__cxx11::basic_string<char>&, cuckoohash_map<Key, T, Hash, KeyEqual, Allocator, SLOT_PER_BUCKET>::upsert(K&&, F, Args&& ...) [with K = std::__cxx11::basic_string<char>&; F = densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>; Args = {int}; Key = std::__cxx11::basic_string<char>; T = unsigned int; Hash = BarcodeGroupStringHasher; KeyEqual = std::equal_to<std::__cxx11::basic_string<char> >; Allocator = std::allocator<std::pair<const std::__cxx11::basic_string<char>, unsigned int> >; long unsigned int SLOT_PER_BUCKET = 4ul]::<lambda(cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>::mapped_type&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:9194,Security,Hash,Hash,9194,"llocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::cuckoo_insert_loop<std::integral_constant<bool, false>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > (this=this@entry=0x7fffffffc520, hv=..., b=..., key=...); at /u/user/tmp/salmon/include/cuckoohash_map.hh:1086; #14 0x00000000007a8540 in uprase_fn<std::__cxx11::basic_string<char>&, cuckoohash_map<Key, T, Hash, KeyEqual, Allocator, SLOT_PER_BUCKET>::upsert(K&&, F, Args&& ...) [with K = std::__cxx11::basic_string<char>&; F = densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>; Args = {int}; Key = std::__cxx11::basic_string<char>; T = unsigned int; Hash = BarcodeGroupStringHasher; KeyEqual = std::equal_to<std::__cxx11::basic_string<char> >; Allocator = std::allocator<std::pair<const std::__cxx11::basic_string<char>, unsigned int> >; long unsigned int SLOT_PER_BUCKET = 4ul]::<lambda(cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>::mapped_type&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:529; #12 0x00000000007a69ac in cuckoo_fast_double<std::integral_constant<bool, false>, std::integral_constant<bool, true> >; (current_hp=<optimized out>, this=0x7fffffffc520) at /u/user/tmp/salmon/include/cuckoohash_map.hh:1583; #13 cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:10577,Security,Hash,Hash,10577,", this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:529; #12 0x00000000007a69ac in cuckoo_fast_double<std::integral_constant<bool, false>, std::integral_constant<bool, true> >; (current_hp=<optimized out>, this=0x7fffffffc520) at /u/user/tmp/salmon/include/cuckoohash_map.hh:1583; #13 cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::cuckoo_insert_loop<std::integral_constant<bool, false>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > (this=this@entry=0x7fffffffc520, hv=..., b=..., key=...); at /u/user/tmp/salmon/include/cuckoohash_map.hh:1086; #14 0x00000000007a8540 in uprase_fn<std::__cxx11::basic_string<char>&, cuckoohash_map<Key, T, Hash, KeyEqual, Allocator, SLOT_PER_BUCKET>::upsert(K&&, F, Args&& ...) [with K = std::__cxx11::basic_string<char>&; F = densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>; Args = {int}; Key = std::__cxx11::basic_string<char>; T = unsigned int; Hash = BarcodeGroupStringHasher; KeyEqual = std::equal_to<std::__cxx11::basic_string<char> >; Allocator = std::allocator<std::pair<const std::__cxx11::basic_string<char>, unsigned int> >; long unsigned int SLOT_PER_BUCKET = 4ul]::<lambda(cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>::mapped_type&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:11156,Security,Hash,Hash,11156,"llocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::cuckoo_insert_loop<std::integral_constant<bool, false>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > (this=this@entry=0x7fffffffc520, hv=..., b=..., key=...); at /u/user/tmp/salmon/include/cuckoohash_map.hh:1086; #14 0x00000000007a8540 in uprase_fn<std::__cxx11::basic_string<char>&, cuckoohash_map<Key, T, Hash, KeyEqual, Allocator, SLOT_PER_BUCKET>::upsert(K&&, F, Args&& ...) [with K = std::__cxx11::basic_string<char>&; F = densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>; Args = {int}; Key = std::__cxx11::basic_string<char>; T = unsigned int; Hash = BarcodeGroupStringHasher; KeyEqual = std::equal_to<std::__cxx11::basic_string<char> >; Allocator = std::allocator<std::pair<const std::__cxx11::basic_string<char>, unsigned int> >; long unsigned int SLOT_PER_BUCKET = 4ul]::<lambda(cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>::mapped_type&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:529; #15 upsert<std::__cxx11::basic_string<char>&, densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>, int> (fn=..., key=..., this=<optimized out>); at",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:17158,Security,Hash,Hash,17158,", end=65536, func=...); at /u/user/tmp/salmon/include/cuckoohash_map.hh:1756; #12 0x00000000007a69ac in cuckoo_fast_double<std::integral_constant<bool, false>, std::integral_constant<bool, true> >; (current_hp=<optimized out>, this=0x7fffffffc520) at /u/user/tmp/salmon/include/cuckoohash_map.hh:1583; #13 cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::cuckoo_insert_loop<std::integral_constant<bool, false>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > (this=this@entry=0x7fffffffc520, hv=..., b=..., key=...); at /u/user/tmp/salmon/include/cuckoohash_map.hh:1086; #14 0x00000000007a8540 in uprase_fn<std::__cxx11::basic_string<char>&, cuckoohash_map<Key, T, Hash, KeyEqual, Allocator, SLOT_PER_BUCKET>::upsert(K&&, F, Args&& ...) [with K = std::__cxx11::basic_string<char>&; F = densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>; Args = {int}; Key = std::__cxx11::basic_string<char>; T = unsigned int; Hash = BarcodeGroupStringHasher; KeyEqual = std::equal_to<std::__cxx11::basic_string<char> >; Allocator = std::allocator<std::pair<const std::__cxx11::basic_string<char>, unsigned int> >; long unsigned int SLOT_PER_BUCKET = 4ul]::<lambda(cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>::mapped_type&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:17737,Security,Hash,Hash,17737,"llocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::cuckoo_insert_loop<std::integral_constant<bool, false>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > (this=this@entry=0x7fffffffc520, hv=..., b=..., key=...); at /u/user/tmp/salmon/include/cuckoohash_map.hh:1086; #14 0x00000000007a8540 in uprase_fn<std::__cxx11::basic_string<char>&, cuckoohash_map<Key, T, Hash, KeyEqual, Allocator, SLOT_PER_BUCKET>::upsert(K&&, F, Args&& ...) [with K = std::__cxx11::basic_string<char>&; F = densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>; Args = {int}; Key = std::__cxx11::basic_string<char>; T = unsigned int; Hash = BarcodeGroupStringHasher; KeyEqual = std::equal_to<std::__cxx11::basic_string<char> >; Allocator = std::allocator<std::pair<const std::__cxx11::basic_string<char>, unsigned int> >; long unsigned int SLOT_PER_BUCKET = 4ul]::<lambda(cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>::mapped_type&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:529; #15 upsert<std::__cxx11::basic_string<char>&, densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>, int> (fn=..., key=..., this=<optimized out>); at",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:341,Testability,test,testing,341,"I have tried running Alevin with a few samples and everytime the program reaches 6M reads it crashes. I have tried this with a number of samples that have worked with Cell Ranger. I recompiled the program with `-DCMAKE_BUILD_TYPE=Debug` and have attached the output and gdb backtrace. There is roughly 8M reads in the single fastq file I am testing with. I can see a whole bunch of threads being created despite limiting the number of processes to two. Thanks!. ```; (gdb) run alevin -l ISR --chromium -p 1 -o 85948/alevin -1 <(gunzip -c ./85948/run1/85948_S18_L001_R1_001.fastq.gz) -2 <(gunzip -c ./85948/run1/85948_S18_L001_R2_001.fastq.gz) -i ./salmon/transcripts_index --tgMap tx2gene.txt; Starting program: ./salmon/build-debug/src/salmon alevin -l ISR --chromium -p 1 -o 85948/alevin -1 <(gunzip -c ./85948/run1/85948_S18_L001_R1_001.fastq.gz) -2 <(gunzip -c ./85948/run1/85948_S18_L001_R2_001.fastq.gz) -i ./salmon/transcripts_index --tgMap tx2gene.txt; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7e0f4700 (LWP 27861)]; [Thread 0x7fff7e0f4700 (LWP 27861) exited]; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [New Thread 0x7fff7d273700 (LWP 27862)]; Logs will be written to 85948/alevin/logs; [New Thread 0x7ffefc3f1700 (LWP 27865)]; [New Thread 0x7ffe7b56f700 (LWP 27866)]; [New Thread 0x7ffdfa6ed700 (LWP 27867)]; ### salmon (single-cell-based) v0.10.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 1 }; ### [ output ] => { 85",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:1640,Testability,Log,Logs,1640,"lmon/build-debug/src/salmon alevin -l ISR --chromium -p 1 -o 85948/alevin -1 <(gunzip -c ./85948/run1/85948_S18_L001_R1_001.fastq.gz) -2 <(gunzip -c ./85948/run1/85948_S18_L001_R2_001.fastq.gz) -i ./salmon/transcripts_index --tgMap tx2gene.txt; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7e0f4700 (LWP 27861)]; [Thread 0x7fff7e0f4700 (LWP 27861) exited]; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [New Thread 0x7fff7d273700 (LWP 27862)]; Logs will be written to 85948/alevin/logs; [New Thread 0x7ffefc3f1700 (LWP 27865)]; [New Thread 0x7ffe7b56f700 (LWP 27866)]; [New Thread 0x7ffdfa6ed700 (LWP 27867)]; ### salmon (single-cell-based) v0.10.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 1 }; ### [ output ] => { 85948/alevin }; ### [ mates1 ] => { /dev/fd/63 }; ### [ mates2 ] => { /dev/fd/62 }; ### [ index ] => { ./salmon/transcripts_index }; ### [ tgMap ] => { tx2gene.txt }. [2018-06-08 11:55:47.378] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [New Thread 0x7ffd797e8700 (LWP 27869)]; [New Thread 0x7ffcf97e7700 (LWP 27870)]; [2018-06-08 11:55:47.387] [alevinLog] [info] Processing barcodes files (if Present). processed 6 Million barcodes[New Thread 0x7ffc77265700 (LWP 27920)]; [New Thread 0x7ffbf7264700 (LWP 27921)]; [New Thread 0x7ffb77263700 (LWP 27922)]; [New Thread 0x7ffaf7262700 (LWP 27923)]; [New Thread 0x7ffa77261700 (LWP 27924)]; [New Thread 0x7ff",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/234:1677,Testability,log,logs,1677,"lmon/build-debug/src/salmon alevin -l ISR --chromium -p 1 -o 85948/alevin -1 <(gunzip -c ./85948/run1/85948_S18_L001_R1_001.fastq.gz) -2 <(gunzip -c ./85948/run1/85948_S18_L001_R2_001.fastq.gz) -i ./salmon/transcripts_index --tgMap tx2gene.txt; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7e0f4700 (LWP 27861)]; [Thread 0x7fff7e0f4700 (LWP 27861) exited]; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [New Thread 0x7fff7d273700 (LWP 27862)]; Logs will be written to 85948/alevin/logs; [New Thread 0x7ffefc3f1700 (LWP 27865)]; [New Thread 0x7ffe7b56f700 (LWP 27866)]; [New Thread 0x7ffdfa6ed700 (LWP 27867)]; ### salmon (single-cell-based) v0.10.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 1 }; ### [ output ] => { 85948/alevin }; ### [ mates1 ] => { /dev/fd/63 }; ### [ mates2 ] => { /dev/fd/62 }; ### [ index ] => { ./salmon/transcripts_index }; ### [ tgMap ] => { tx2gene.txt }. [2018-06-08 11:55:47.378] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [New Thread 0x7ffd797e8700 (LWP 27869)]; [New Thread 0x7ffcf97e7700 (LWP 27870)]; [2018-06-08 11:55:47.387] [alevinLog] [info] Processing barcodes files (if Present). processed 6 Million barcodes[New Thread 0x7ffc77265700 (LWP 27920)]; [New Thread 0x7ffbf7264700 (LWP 27921)]; [New Thread 0x7ffb77263700 (LWP 27922)]; [New Thread 0x7ffaf7262700 (LWP 27923)]; [New Thread 0x7ffa77261700 (LWP 27924)]; [New Thread 0x7ff",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234
https://github.com/COMBINE-lab/salmon/issues/235:76,Availability,error,error,76,"Hi, I'm trying to install Salmon on a local server, but I get the following error:. ```[ 81%] Building CXX object src/CMakeFiles/unitTests.dir/__/external/install/src/rapmap/rank9b.cpp.o; /usr/local/salmon-0.9.1/external/install/src/rapmap/rank9b.cpp: In constructor ‘rank9b::rank9b(const uint64_t*, uint64_t)’:; /usr/local/salmon-0.9.1/external/install/src/rapmap/rank9b.cpp:41:53: warning: suggest parentheses around ‘-’ inside ‘<<’ [-Wparentheses]; counts[ pos + 1 ] |= ( c - counts[ pos ] ) << 63 - 9 * j;; ^; [ 82%] Building C object src/CMakeFiles/unitTests.dir/__/external/install/src/rapmap/bit_array.c.o; Linking CXX executable unitTests; /bin/ld: cannot find -lstdc++; collect2: error: ld returned 1 exit status; make[2]: *** [src/unitTests] Error 1; make[1]: *** [src/CMakeFiles/unitTests.dir/all] Error 2; make: *** [all] Error 2; ```. What can I do?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/235
https://github.com/COMBINE-lab/salmon/issues/235:689,Availability,error,error,689,"Hi, I'm trying to install Salmon on a local server, but I get the following error:. ```[ 81%] Building CXX object src/CMakeFiles/unitTests.dir/__/external/install/src/rapmap/rank9b.cpp.o; /usr/local/salmon-0.9.1/external/install/src/rapmap/rank9b.cpp: In constructor ‘rank9b::rank9b(const uint64_t*, uint64_t)’:; /usr/local/salmon-0.9.1/external/install/src/rapmap/rank9b.cpp:41:53: warning: suggest parentheses around ‘-’ inside ‘<<’ [-Wparentheses]; counts[ pos + 1 ] |= ( c - counts[ pos ] ) << 63 - 9 * j;; ^; [ 82%] Building C object src/CMakeFiles/unitTests.dir/__/external/install/src/rapmap/bit_array.c.o; Linking CXX executable unitTests; /bin/ld: cannot find -lstdc++; collect2: error: ld returned 1 exit status; make[2]: *** [src/unitTests] Error 1; make[1]: *** [src/CMakeFiles/unitTests.dir/all] Error 2; make: *** [all] Error 2; ```. What can I do?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/235
https://github.com/COMBINE-lab/salmon/issues/235:752,Availability,Error,Error,752,"Hi, I'm trying to install Salmon on a local server, but I get the following error:. ```[ 81%] Building CXX object src/CMakeFiles/unitTests.dir/__/external/install/src/rapmap/rank9b.cpp.o; /usr/local/salmon-0.9.1/external/install/src/rapmap/rank9b.cpp: In constructor ‘rank9b::rank9b(const uint64_t*, uint64_t)’:; /usr/local/salmon-0.9.1/external/install/src/rapmap/rank9b.cpp:41:53: warning: suggest parentheses around ‘-’ inside ‘<<’ [-Wparentheses]; counts[ pos + 1 ] |= ( c - counts[ pos ] ) << 63 - 9 * j;; ^; [ 82%] Building C object src/CMakeFiles/unitTests.dir/__/external/install/src/rapmap/bit_array.c.o; Linking CXX executable unitTests; /bin/ld: cannot find -lstdc++; collect2: error: ld returned 1 exit status; make[2]: *** [src/unitTests] Error 1; make[1]: *** [src/CMakeFiles/unitTests.dir/all] Error 2; make: *** [all] Error 2; ```. What can I do?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/235
https://github.com/COMBINE-lab/salmon/issues/235:809,Availability,Error,Error,809,"Hi, I'm trying to install Salmon on a local server, but I get the following error:. ```[ 81%] Building CXX object src/CMakeFiles/unitTests.dir/__/external/install/src/rapmap/rank9b.cpp.o; /usr/local/salmon-0.9.1/external/install/src/rapmap/rank9b.cpp: In constructor ‘rank9b::rank9b(const uint64_t*, uint64_t)’:; /usr/local/salmon-0.9.1/external/install/src/rapmap/rank9b.cpp:41:53: warning: suggest parentheses around ‘-’ inside ‘<<’ [-Wparentheses]; counts[ pos + 1 ] |= ( c - counts[ pos ] ) << 63 - 9 * j;; ^; [ 82%] Building C object src/CMakeFiles/unitTests.dir/__/external/install/src/rapmap/bit_array.c.o; Linking CXX executable unitTests; /bin/ld: cannot find -lstdc++; collect2: error: ld returned 1 exit status; make[2]: *** [src/unitTests] Error 1; make[1]: *** [src/CMakeFiles/unitTests.dir/all] Error 2; make: *** [all] Error 2; ```. What can I do?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/235
https://github.com/COMBINE-lab/salmon/issues/235:834,Availability,Error,Error,834,"Hi, I'm trying to install Salmon on a local server, but I get the following error:. ```[ 81%] Building CXX object src/CMakeFiles/unitTests.dir/__/external/install/src/rapmap/rank9b.cpp.o; /usr/local/salmon-0.9.1/external/install/src/rapmap/rank9b.cpp: In constructor ‘rank9b::rank9b(const uint64_t*, uint64_t)’:; /usr/local/salmon-0.9.1/external/install/src/rapmap/rank9b.cpp:41:53: warning: suggest parentheses around ‘-’ inside ‘<<’ [-Wparentheses]; counts[ pos + 1 ] |= ( c - counts[ pos ] ) << 63 - 9 * j;; ^; [ 82%] Building C object src/CMakeFiles/unitTests.dir/__/external/install/src/rapmap/bit_array.c.o; Linking CXX executable unitTests; /bin/ld: cannot find -lstdc++; collect2: error: ld returned 1 exit status; make[2]: *** [src/unitTests] Error 1; make[1]: *** [src/CMakeFiles/unitTests.dir/all] Error 2; make: *** [all] Error 2; ```. What can I do?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/235
https://github.com/COMBINE-lab/salmon/issues/235:18,Deployability,install,install,18,"Hi, I'm trying to install Salmon on a local server, but I get the following error:. ```[ 81%] Building CXX object src/CMakeFiles/unitTests.dir/__/external/install/src/rapmap/rank9b.cpp.o; /usr/local/salmon-0.9.1/external/install/src/rapmap/rank9b.cpp: In constructor ‘rank9b::rank9b(const uint64_t*, uint64_t)’:; /usr/local/salmon-0.9.1/external/install/src/rapmap/rank9b.cpp:41:53: warning: suggest parentheses around ‘-’ inside ‘<<’ [-Wparentheses]; counts[ pos + 1 ] |= ( c - counts[ pos ] ) << 63 - 9 * j;; ^; [ 82%] Building C object src/CMakeFiles/unitTests.dir/__/external/install/src/rapmap/bit_array.c.o; Linking CXX executable unitTests; /bin/ld: cannot find -lstdc++; collect2: error: ld returned 1 exit status; make[2]: *** [src/unitTests] Error 1; make[1]: *** [src/CMakeFiles/unitTests.dir/all] Error 2; make: *** [all] Error 2; ```. What can I do?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/235
https://github.com/COMBINE-lab/salmon/issues/235:155,Deployability,install,install,155,"Hi, I'm trying to install Salmon on a local server, but I get the following error:. ```[ 81%] Building CXX object src/CMakeFiles/unitTests.dir/__/external/install/src/rapmap/rank9b.cpp.o; /usr/local/salmon-0.9.1/external/install/src/rapmap/rank9b.cpp: In constructor ‘rank9b::rank9b(const uint64_t*, uint64_t)’:; /usr/local/salmon-0.9.1/external/install/src/rapmap/rank9b.cpp:41:53: warning: suggest parentheses around ‘-’ inside ‘<<’ [-Wparentheses]; counts[ pos + 1 ] |= ( c - counts[ pos ] ) << 63 - 9 * j;; ^; [ 82%] Building C object src/CMakeFiles/unitTests.dir/__/external/install/src/rapmap/bit_array.c.o; Linking CXX executable unitTests; /bin/ld: cannot find -lstdc++; collect2: error: ld returned 1 exit status; make[2]: *** [src/unitTests] Error 1; make[1]: *** [src/CMakeFiles/unitTests.dir/all] Error 2; make: *** [all] Error 2; ```. What can I do?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/235
https://github.com/COMBINE-lab/salmon/issues/235:221,Deployability,install,install,221,"Hi, I'm trying to install Salmon on a local server, but I get the following error:. ```[ 81%] Building CXX object src/CMakeFiles/unitTests.dir/__/external/install/src/rapmap/rank9b.cpp.o; /usr/local/salmon-0.9.1/external/install/src/rapmap/rank9b.cpp: In constructor ‘rank9b::rank9b(const uint64_t*, uint64_t)’:; /usr/local/salmon-0.9.1/external/install/src/rapmap/rank9b.cpp:41:53: warning: suggest parentheses around ‘-’ inside ‘<<’ [-Wparentheses]; counts[ pos + 1 ] |= ( c - counts[ pos ] ) << 63 - 9 * j;; ^; [ 82%] Building C object src/CMakeFiles/unitTests.dir/__/external/install/src/rapmap/bit_array.c.o; Linking CXX executable unitTests; /bin/ld: cannot find -lstdc++; collect2: error: ld returned 1 exit status; make[2]: *** [src/unitTests] Error 1; make[1]: *** [src/CMakeFiles/unitTests.dir/all] Error 2; make: *** [all] Error 2; ```. What can I do?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/235
https://github.com/COMBINE-lab/salmon/issues/235:346,Deployability,install,install,346,"Hi, I'm trying to install Salmon on a local server, but I get the following error:. ```[ 81%] Building CXX object src/CMakeFiles/unitTests.dir/__/external/install/src/rapmap/rank9b.cpp.o; /usr/local/salmon-0.9.1/external/install/src/rapmap/rank9b.cpp: In constructor ‘rank9b::rank9b(const uint64_t*, uint64_t)’:; /usr/local/salmon-0.9.1/external/install/src/rapmap/rank9b.cpp:41:53: warning: suggest parentheses around ‘-’ inside ‘<<’ [-Wparentheses]; counts[ pos + 1 ] |= ( c - counts[ pos ] ) << 63 - 9 * j;; ^; [ 82%] Building C object src/CMakeFiles/unitTests.dir/__/external/install/src/rapmap/bit_array.c.o; Linking CXX executable unitTests; /bin/ld: cannot find -lstdc++; collect2: error: ld returned 1 exit status; make[2]: *** [src/unitTests] Error 1; make[1]: *** [src/CMakeFiles/unitTests.dir/all] Error 2; make: *** [all] Error 2; ```. What can I do?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/235
https://github.com/COMBINE-lab/salmon/issues/235:580,Deployability,install,install,580,"Hi, I'm trying to install Salmon on a local server, but I get the following error:. ```[ 81%] Building CXX object src/CMakeFiles/unitTests.dir/__/external/install/src/rapmap/rank9b.cpp.o; /usr/local/salmon-0.9.1/external/install/src/rapmap/rank9b.cpp: In constructor ‘rank9b::rank9b(const uint64_t*, uint64_t)’:; /usr/local/salmon-0.9.1/external/install/src/rapmap/rank9b.cpp:41:53: warning: suggest parentheses around ‘-’ inside ‘<<’ [-Wparentheses]; counts[ pos + 1 ] |= ( c - counts[ pos ] ) << 63 - 9 * j;; ^; [ 82%] Building C object src/CMakeFiles/unitTests.dir/__/external/install/src/rapmap/bit_array.c.o; Linking CXX executable unitTests; /bin/ld: cannot find -lstdc++; collect2: error: ld returned 1 exit status; make[2]: *** [src/unitTests] Error 1; make[1]: *** [src/CMakeFiles/unitTests.dir/all] Error 2; make: *** [all] Error 2; ```. What can I do?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/235
https://github.com/COMBINE-lab/salmon/issues/236:570,Availability,Error,Error,570,"**Describe the bug**; Build problem. . Centos 6.9's boost is too old for salmon. There are RPMs for 1.5.7 installed. The library files are in /usr/lib64 and the include files are in /usr/include/boost157. These all work and are employed by numerous other packages without issues. Using devtoolset-4 (for a recent enough compiler) and a freshly built cmake 3.1.3 this command:. `scl enable devtoolset-4 '~/bin/cmake -DBOOST_ROOT=/usr/lib64 ../CMakeLists.txt'; `; fails with . ```; -- Could NOT find Boost; BOOST_INCLUDEDIR = ; BOOST_LIBRARYDIR = ; Boost_FOUND = 0; CMake Error at CMakeLists.txt:346 (message):; Salmon cannot be compiled without Boost. ```; This:; `scl enable devtoolset-4 '~/bin/cmake -DBOOST_LIBRARYDIR=/usr/lib64 -DBOOST_INCLUDEDIR=/usr/include/boost157 ../CMakeLists.txt; `; fails with:. ```; BOOST_INCLUDEDIR = /usr/include/boost157; BOOST_LIBRARYDIR = /usr/lib64; Boost_FOUND = 0; CMake Error at CMakeLists.txt:346 (message):; Salmon cannot be compiled without Boost. ```; This::; `scl enable devtoolset-4 '~/bin/cmake -DBoost_NO_BOOST_CMAKE=BOOL:ON -DBOOST_LIBRARYDIR=/usr/lib64 -DBOOST_INCLUDEDIR=/usr/include/boost157 ../CMakeLists.txt'; `; fails the exact same way. Examined the CMakeLists.txt file, found the list of acceptable versions starts with 1.59.0. Crud. ; Tried modifying one line to:; ` find_package(Boost 1.57.0 COMPONENTS iostreams filesystem system thread timer chrono program_options); `; but it still failed. I am out of tricks. Is it really the case that Salmon cannot use 1.57.0?. Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236
https://github.com/COMBINE-lab/salmon/issues/236:908,Availability,Error,Error,908,"**Describe the bug**; Build problem. . Centos 6.9's boost is too old for salmon. There are RPMs for 1.5.7 installed. The library files are in /usr/lib64 and the include files are in /usr/include/boost157. These all work and are employed by numerous other packages without issues. Using devtoolset-4 (for a recent enough compiler) and a freshly built cmake 3.1.3 this command:. `scl enable devtoolset-4 '~/bin/cmake -DBOOST_ROOT=/usr/lib64 ../CMakeLists.txt'; `; fails with . ```; -- Could NOT find Boost; BOOST_INCLUDEDIR = ; BOOST_LIBRARYDIR = ; Boost_FOUND = 0; CMake Error at CMakeLists.txt:346 (message):; Salmon cannot be compiled without Boost. ```; This:; `scl enable devtoolset-4 '~/bin/cmake -DBOOST_LIBRARYDIR=/usr/lib64 -DBOOST_INCLUDEDIR=/usr/include/boost157 ../CMakeLists.txt; `; fails with:. ```; BOOST_INCLUDEDIR = /usr/include/boost157; BOOST_LIBRARYDIR = /usr/lib64; Boost_FOUND = 0; CMake Error at CMakeLists.txt:346 (message):; Salmon cannot be compiled without Boost. ```; This::; `scl enable devtoolset-4 '~/bin/cmake -DBoost_NO_BOOST_CMAKE=BOOL:ON -DBOOST_LIBRARYDIR=/usr/lib64 -DBOOST_INCLUDEDIR=/usr/include/boost157 ../CMakeLists.txt'; `; fails the exact same way. Examined the CMakeLists.txt file, found the list of acceptable versions starts with 1.59.0. Crud. ; Tried modifying one line to:; ` find_package(Boost 1.57.0 COMPONENTS iostreams filesystem system thread timer chrono program_options); `; but it still failed. I am out of tricks. Is it really the case that Salmon cannot use 1.57.0?. Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236
https://github.com/COMBINE-lab/salmon/issues/236:106,Deployability,install,installed,106,"**Describe the bug**; Build problem. . Centos 6.9's boost is too old for salmon. There are RPMs for 1.5.7 installed. The library files are in /usr/lib64 and the include files are in /usr/include/boost157. These all work and are employed by numerous other packages without issues. Using devtoolset-4 (for a recent enough compiler) and a freshly built cmake 3.1.3 this command:. `scl enable devtoolset-4 '~/bin/cmake -DBOOST_ROOT=/usr/lib64 ../CMakeLists.txt'; `; fails with . ```; -- Could NOT find Boost; BOOST_INCLUDEDIR = ; BOOST_LIBRARYDIR = ; Boost_FOUND = 0; CMake Error at CMakeLists.txt:346 (message):; Salmon cannot be compiled without Boost. ```; This:; `scl enable devtoolset-4 '~/bin/cmake -DBOOST_LIBRARYDIR=/usr/lib64 -DBOOST_INCLUDEDIR=/usr/include/boost157 ../CMakeLists.txt; `; fails with:. ```; BOOST_INCLUDEDIR = /usr/include/boost157; BOOST_LIBRARYDIR = /usr/lib64; Boost_FOUND = 0; CMake Error at CMakeLists.txt:346 (message):; Salmon cannot be compiled without Boost. ```; This::; `scl enable devtoolset-4 '~/bin/cmake -DBoost_NO_BOOST_CMAKE=BOOL:ON -DBOOST_LIBRARYDIR=/usr/lib64 -DBOOST_INCLUDEDIR=/usr/include/boost157 ../CMakeLists.txt'; `; fails the exact same way. Examined the CMakeLists.txt file, found the list of acceptable versions starts with 1.59.0. Crud. ; Tried modifying one line to:; ` find_package(Boost 1.57.0 COMPONENTS iostreams filesystem system thread timer chrono program_options); `; but it still failed. I am out of tricks. Is it really the case that Salmon cannot use 1.57.0?. Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236
https://github.com/COMBINE-lab/salmon/issues/236:599,Integrability,message,message,599,"**Describe the bug**; Build problem. . Centos 6.9's boost is too old for salmon. There are RPMs for 1.5.7 installed. The library files are in /usr/lib64 and the include files are in /usr/include/boost157. These all work and are employed by numerous other packages without issues. Using devtoolset-4 (for a recent enough compiler) and a freshly built cmake 3.1.3 this command:. `scl enable devtoolset-4 '~/bin/cmake -DBOOST_ROOT=/usr/lib64 ../CMakeLists.txt'; `; fails with . ```; -- Could NOT find Boost; BOOST_INCLUDEDIR = ; BOOST_LIBRARYDIR = ; Boost_FOUND = 0; CMake Error at CMakeLists.txt:346 (message):; Salmon cannot be compiled without Boost. ```; This:; `scl enable devtoolset-4 '~/bin/cmake -DBOOST_LIBRARYDIR=/usr/lib64 -DBOOST_INCLUDEDIR=/usr/include/boost157 ../CMakeLists.txt; `; fails with:. ```; BOOST_INCLUDEDIR = /usr/include/boost157; BOOST_LIBRARYDIR = /usr/lib64; Boost_FOUND = 0; CMake Error at CMakeLists.txt:346 (message):; Salmon cannot be compiled without Boost. ```; This::; `scl enable devtoolset-4 '~/bin/cmake -DBoost_NO_BOOST_CMAKE=BOOL:ON -DBOOST_LIBRARYDIR=/usr/lib64 -DBOOST_INCLUDEDIR=/usr/include/boost157 ../CMakeLists.txt'; `; fails the exact same way. Examined the CMakeLists.txt file, found the list of acceptable versions starts with 1.59.0. Crud. ; Tried modifying one line to:; ` find_package(Boost 1.57.0 COMPONENTS iostreams filesystem system thread timer chrono program_options); `; but it still failed. I am out of tricks. Is it really the case that Salmon cannot use 1.57.0?. Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236
https://github.com/COMBINE-lab/salmon/issues/236:937,Integrability,message,message,937,"**Describe the bug**; Build problem. . Centos 6.9's boost is too old for salmon. There are RPMs for 1.5.7 installed. The library files are in /usr/lib64 and the include files are in /usr/include/boost157. These all work and are employed by numerous other packages without issues. Using devtoolset-4 (for a recent enough compiler) and a freshly built cmake 3.1.3 this command:. `scl enable devtoolset-4 '~/bin/cmake -DBOOST_ROOT=/usr/lib64 ../CMakeLists.txt'; `; fails with . ```; -- Could NOT find Boost; BOOST_INCLUDEDIR = ; BOOST_LIBRARYDIR = ; Boost_FOUND = 0; CMake Error at CMakeLists.txt:346 (message):; Salmon cannot be compiled without Boost. ```; This:; `scl enable devtoolset-4 '~/bin/cmake -DBOOST_LIBRARYDIR=/usr/lib64 -DBOOST_INCLUDEDIR=/usr/include/boost157 ../CMakeLists.txt; `; fails with:. ```; BOOST_INCLUDEDIR = /usr/include/boost157; BOOST_LIBRARYDIR = /usr/lib64; Boost_FOUND = 0; CMake Error at CMakeLists.txt:346 (message):; Salmon cannot be compiled without Boost. ```; This::; `scl enable devtoolset-4 '~/bin/cmake -DBoost_NO_BOOST_CMAKE=BOOL:ON -DBOOST_LIBRARYDIR=/usr/lib64 -DBOOST_INCLUDEDIR=/usr/include/boost157 ../CMakeLists.txt'; `; fails the exact same way. Examined the CMakeLists.txt file, found the list of acceptable versions starts with 1.59.0. Crud. ; Tried modifying one line to:; ` find_package(Boost 1.57.0 COMPONENTS iostreams filesystem system thread timer chrono program_options); `; but it still failed. I am out of tricks. Is it really the case that Salmon cannot use 1.57.0?. Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236
https://github.com/COMBINE-lab/salmon/issues/237:128,Availability,error,error,128,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; - Alevin. **Describe the bug**; I got the error copied below, it said to report on GitHub so I'm doing that. **To Reproduce**; Steps and data to reproduce the behavior:; - The Jupyter notebook I was using is in the attached zip file; [alevin-default-eduardo.zip](https://github.com/COMBINE-lab/salmon/files/2096615/alevin-default-eduardo.zip). Specifically, please provide at least the following information:. * Which version of salmon was used? ; Salmon 0.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Installed with bioconda; * Which reference (e.g. transcriptome) was used? ; This transcriptome: https://drive.google.com/open?id=1XcsFUxJM6XaYEKh9BYdUoAyJSlWJLIiW. ; It's a mouse transcriptome with 3 additional transcripts at the end; * Which read files were used?; * Which which program options were used?; `salmon alevin -lISR -1 ./H2_S5_L003_R1_001.fastq.gz -2 H2_S5_L003_R2_001.fastq.gz --chromium -i salmon_index -p 8 -o alevin_output --tgMap txp2gene.tsv`. **Desktop (please complete the following information):**; - OS: CentOS; - Version:; Linux login1 3.10.0-514.2.2.el7.x86_64 #1 SMP Tue Dec 6 23:06:41 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.3.1611 (Core); Release: 7.3.1611; Codename: Core. **Additional context**; ```; Version Info: This is the most recent version of Salmon.; Logs will be written to alevin_output/logs; ### salmon (single-cell-based) v0.10.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { ./H2_S5_L003_R1_001.fastq.gz }; ### [ mates2 ] => { H2_S5_L003_R2_001.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { salmon_index }; ### [ threads ] => { 8 }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { txp2gene.tsv }. [2018-06-12 21:01:31.327] [jointLog] [info] Fra",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/237
https://github.com/COMBINE-lab/salmon/issues/237:587,Availability,down,downloaded,587,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; - Alevin. **Describe the bug**; I got the error copied below, it said to report on GitHub so I'm doing that. **To Reproduce**; Steps and data to reproduce the behavior:; - The Jupyter notebook I was using is in the attached zip file; [alevin-default-eduardo.zip](https://github.com/COMBINE-lab/salmon/files/2096615/alevin-default-eduardo.zip). Specifically, please provide at least the following information:. * Which version of salmon was used? ; Salmon 0.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Installed with bioconda; * Which reference (e.g. transcriptome) was used? ; This transcriptome: https://drive.google.com/open?id=1XcsFUxJM6XaYEKh9BYdUoAyJSlWJLIiW. ; It's a mouse transcriptome with 3 additional transcripts at the end; * Which read files were used?; * Which which program options were used?; `salmon alevin -lISR -1 ./H2_S5_L003_R1_001.fastq.gz -2 H2_S5_L003_R2_001.fastq.gz --chromium -i salmon_index -p 8 -o alevin_output --tgMap txp2gene.tsv`. **Desktop (please complete the following information):**; - OS: CentOS; - Version:; Linux login1 3.10.0-514.2.2.el7.x86_64 #1 SMP Tue Dec 6 23:06:41 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.3.1611 (Core); Release: 7.3.1611; Codename: Core. **Additional context**; ```; Version Info: This is the most recent version of Salmon.; Logs will be written to alevin_output/logs; ### salmon (single-cell-based) v0.10.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { ./H2_S5_L003_R1_001.fastq.gz }; ### [ mates2 ] => { H2_S5_L003_R2_001.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { salmon_index }; ### [ threads ] => { 8 }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { txp2gene.tsv }. [2018-06-12 21:01:31.327] [jointLog] [info] Fra",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/237
https://github.com/COMBINE-lab/salmon/issues/237:4433,Availability,error,error,4433,"s Prediction 12274 Too far from knee prediction skipping it; [2018-06-12 21:08:55.712] [alevinLog] [info] Learned InvCov: 255.229 normfactor: 12656.9; [2018-06-12 21:08:55.712] [alevinLog] [info] Total 327(has 200 low confidence) barcodes; [2018-06-12 21:08:55.895] [alevinLog] [info] Done True Barcode Sampling; [2018-06-12 21:08:56.092] [alevinLog] [info] Done populating Z matrix; [2018-06-12 21:08:56.093] [alevinLog] [info] Done indexing Barcodes; [2018-06-12 21:08:56.094] [alevinLog] [info] Total Unique barcodes found: 1530568; [2018-06-12 21:08:56.094] [alevinLog] [info] Used Barcodes except Whitelist: 4828; [2018-06-12 21:08:56.124] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-06-12 21:08:56.124] [alevinLog] [info] parsing read library format; [2018-06-12 21:08:56.124] [jointLog] [info] There is 1 library.; [2018-06-12 21:08:56.183] [jointLog] [info] Loading Quasi index; [2018-06-12 21:08:56.184] [jointLog] [info] Loading 32-bit quasi index; [2018-06-12 21:08:56.184] [stderrLog] [info] Loading Suffix Array ; [2018-06-12 21:08:56.530] [stderrLog] [info] Loading Transcript Info ; [2018-06-12 21:08:56.675] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-06-12 21:08:56.724] [stderrLog] [info] There were 36191 set bits in the bit array; [2018-06-12 21:08:56.729] [stderrLog] [info] Computing transcript lengths; [2018-06-12 21:08:56.729] [stderrLog] [info] Waiting to finish loading hash; [2018-06-12 21:08:58.508] [jointLog] [info] done; [2018-06-12 21:08:58.508] [jointLog] [info] Index contained 36191 targets; [2018-06-12 21:08:58.508] [stderrLog] [info] Done loading index. processed 0 Million fragments; processed 1 Million fragments; processed 1 Million fragments; processed 2 Million fragments; processed 2 Million fragments; processed 3 Million fragments; processed 3 Million fragments; hits: 169917, hits per frag: 0.0489674[2018-06-12 21:09:22.500] [jointLog] [error] umi indexing of jellyfish failing.; Please report on github; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/237
https://github.com/COMBINE-lab/salmon/issues/237:566,Deployability,install,installed,566,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; - Alevin. **Describe the bug**; I got the error copied below, it said to report on GitHub so I'm doing that. **To Reproduce**; Steps and data to reproduce the behavior:; - The Jupyter notebook I was using is in the attached zip file; [alevin-default-eduardo.zip](https://github.com/COMBINE-lab/salmon/files/2096615/alevin-default-eduardo.zip). Specifically, please provide at least the following information:. * Which version of salmon was used? ; Salmon 0.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Installed with bioconda; * Which reference (e.g. transcriptome) was used? ; This transcriptome: https://drive.google.com/open?id=1XcsFUxJM6XaYEKh9BYdUoAyJSlWJLIiW. ; It's a mouse transcriptome with 3 additional transcripts at the end; * Which read files were used?; * Which which program options were used?; `salmon alevin -lISR -1 ./H2_S5_L003_R1_001.fastq.gz -2 H2_S5_L003_R2_001.fastq.gz --chromium -i salmon_index -p 8 -o alevin_output --tgMap txp2gene.tsv`. **Desktop (please complete the following information):**; - OS: CentOS; - Version:; Linux login1 3.10.0-514.2.2.el7.x86_64 #1 SMP Tue Dec 6 23:06:41 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.3.1611 (Core); Release: 7.3.1611; Codename: Core. **Additional context**; ```; Version Info: This is the most recent version of Salmon.; Logs will be written to alevin_output/logs; ### salmon (single-cell-based) v0.10.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { ./H2_S5_L003_R1_001.fastq.gz }; ### [ mates2 ] => { H2_S5_L003_R2_001.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { salmon_index }; ### [ threads ] => { 8 }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { txp2gene.tsv }. [2018-06-12 21:01:31.327] [jointLog] [info] Fra",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/237
https://github.com/COMBINE-lab/salmon/issues/237:630,Deployability,Install,Installed,630,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; - Alevin. **Describe the bug**; I got the error copied below, it said to report on GitHub so I'm doing that. **To Reproduce**; Steps and data to reproduce the behavior:; - The Jupyter notebook I was using is in the attached zip file; [alevin-default-eduardo.zip](https://github.com/COMBINE-lab/salmon/files/2096615/alevin-default-eduardo.zip). Specifically, please provide at least the following information:. * Which version of salmon was used? ; Salmon 0.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Installed with bioconda; * Which reference (e.g. transcriptome) was used? ; This transcriptome: https://drive.google.com/open?id=1XcsFUxJM6XaYEKh9BYdUoAyJSlWJLIiW. ; It's a mouse transcriptome with 3 additional transcripts at the end; * Which read files were used?; * Which which program options were used?; `salmon alevin -lISR -1 ./H2_S5_L003_R1_001.fastq.gz -2 H2_S5_L003_R2_001.fastq.gz --chromium -i salmon_index -p 8 -o alevin_output --tgMap txp2gene.tsv`. **Desktop (please complete the following information):**; - OS: CentOS; - Version:; Linux login1 3.10.0-514.2.2.el7.x86_64 #1 SMP Tue Dec 6 23:06:41 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.3.1611 (Core); Release: 7.3.1611; Codename: Core. **Additional context**; ```; Version Info: This is the most recent version of Salmon.; Logs will be written to alevin_output/logs; ### salmon (single-cell-based) v0.10.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { ./H2_S5_L003_R1_001.fastq.gz }; ### [ mates2 ] => { H2_S5_L003_R2_001.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { salmon_index }; ### [ threads ] => { 8 }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { txp2gene.tsv }. [2018-06-12 21:01:31.327] [jointLog] [info] Fra",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/237
https://github.com/COMBINE-lab/salmon/issues/237:1379,Deployability,release,release,1379,"://github.com/COMBINE-lab/salmon/files/2096615/alevin-default-eduardo.zip). Specifically, please provide at least the following information:. * Which version of salmon was used? ; Salmon 0.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Installed with bioconda; * Which reference (e.g. transcriptome) was used? ; This transcriptome: https://drive.google.com/open?id=1XcsFUxJM6XaYEKh9BYdUoAyJSlWJLIiW. ; It's a mouse transcriptome with 3 additional transcripts at the end; * Which read files were used?; * Which which program options were used?; `salmon alevin -lISR -1 ./H2_S5_L003_R1_001.fastq.gz -2 H2_S5_L003_R2_001.fastq.gz --chromium -i salmon_index -p 8 -o alevin_output --tgMap txp2gene.tsv`. **Desktop (please complete the following information):**; - OS: CentOS; - Version:; Linux login1 3.10.0-514.2.2.el7.x86_64 #1 SMP Tue Dec 6 23:06:41 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.3.1611 (Core); Release: 7.3.1611; Codename: Core. **Additional context**; ```; Version Info: This is the most recent version of Salmon.; Logs will be written to alevin_output/logs; ### salmon (single-cell-based) v0.10.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { ./H2_S5_L003_R1_001.fastq.gz }; ### [ mates2 ] => { H2_S5_L003_R2_001.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { salmon_index }; ### [ threads ] => { 8 }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { txp2gene.tsv }. [2018-06-12 21:01:31.327] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-06-12 21:01:31.330] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 141 Million barcodes. [2018-06-12 21:08:38.126] [alevinLog] [info] Done barcode density calculation.; [2018-06-12 21:08:38.126] [alevinLog] [info] # Barcodes Used: 14011",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/237
https://github.com/COMBINE-lab/salmon/issues/237:1404,Deployability,Release,Release,1404,"evin-default-eduardo.zip). Specifically, please provide at least the following information:. * Which version of salmon was used? ; Salmon 0.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Installed with bioconda; * Which reference (e.g. transcriptome) was used? ; This transcriptome: https://drive.google.com/open?id=1XcsFUxJM6XaYEKh9BYdUoAyJSlWJLIiW. ; It's a mouse transcriptome with 3 additional transcripts at the end; * Which read files were used?; * Which which program options were used?; `salmon alevin -lISR -1 ./H2_S5_L003_R1_001.fastq.gz -2 H2_S5_L003_R2_001.fastq.gz --chromium -i salmon_index -p 8 -o alevin_output --tgMap txp2gene.tsv`. **Desktop (please complete the following information):**; - OS: CentOS; - Version:; Linux login1 3.10.0-514.2.2.el7.x86_64 #1 SMP Tue Dec 6 23:06:41 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.3.1611 (Core); Release: 7.3.1611; Codename: Core. **Additional context**; ```; Version Info: This is the most recent version of Salmon.; Logs will be written to alevin_output/logs; ### salmon (single-cell-based) v0.10.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { ./H2_S5_L003_R1_001.fastq.gz }; ### [ mates2 ] => { H2_S5_L003_R2_001.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { salmon_index }; ### [ threads ] => { 8 }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { txp2gene.tsv }. [2018-06-12 21:01:31.327] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-06-12 21:01:31.330] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 141 Million barcodes. [2018-06-12 21:08:38.126] [alevinLog] [info] Done barcode density calculation.; [2018-06-12 21:08:38.126] [alevinLog] [info] # Barcodes Used: 140111660 / 141062078.; [2018-06-12 21:08:42.014] [ale",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/237
https://github.com/COMBINE-lab/salmon/issues/237:3401,Performance,Load,Loading,3401," [info] Knee found left boundary at 127 ; [2018-06-12 21:08:55.712] [alevinLog] [warning] Gauss Prediction 12274 Too far from knee prediction skipping it; [2018-06-12 21:08:55.712] [alevinLog] [info] Learned InvCov: 255.229 normfactor: 12656.9; [2018-06-12 21:08:55.712] [alevinLog] [info] Total 327(has 200 low confidence) barcodes; [2018-06-12 21:08:55.895] [alevinLog] [info] Done True Barcode Sampling; [2018-06-12 21:08:56.092] [alevinLog] [info] Done populating Z matrix; [2018-06-12 21:08:56.093] [alevinLog] [info] Done indexing Barcodes; [2018-06-12 21:08:56.094] [alevinLog] [info] Total Unique barcodes found: 1530568; [2018-06-12 21:08:56.094] [alevinLog] [info] Used Barcodes except Whitelist: 4828; [2018-06-12 21:08:56.124] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-06-12 21:08:56.124] [alevinLog] [info] parsing read library format; [2018-06-12 21:08:56.124] [jointLog] [info] There is 1 library.; [2018-06-12 21:08:56.183] [jointLog] [info] Loading Quasi index; [2018-06-12 21:08:56.184] [jointLog] [info] Loading 32-bit quasi index; [2018-06-12 21:08:56.184] [stderrLog] [info] Loading Suffix Array ; [2018-06-12 21:08:56.530] [stderrLog] [info] Loading Transcript Info ; [2018-06-12 21:08:56.675] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-06-12 21:08:56.724] [stderrLog] [info] There were 36191 set bits in the bit array; [2018-06-12 21:08:56.729] [stderrLog] [info] Computing transcript lengths; [2018-06-12 21:08:56.729] [stderrLog] [info] Waiting to finish loading hash; [2018-06-12 21:08:58.508] [jointLog] [info] done; [2018-06-12 21:08:58.508] [jointLog] [info] Index contained 36191 targets; [2018-06-12 21:08:58.508] [stderrLog] [info] Done loading index. processed 0 Million fragments; processed 1 Million fragments; processed 1 Million fragments; processed 2 Million fragments; processed 2 Million fragments; processed 3 Million fragments; processed 3 Million fragments; hits: 169917, hits per frag: 0.0489674[2018-06-12 21:0",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/237
https://github.com/COMBINE-lab/salmon/issues/237:3466,Performance,Load,Loading,3466,"alevinLog] [warning] Gauss Prediction 12274 Too far from knee prediction skipping it; [2018-06-12 21:08:55.712] [alevinLog] [info] Learned InvCov: 255.229 normfactor: 12656.9; [2018-06-12 21:08:55.712] [alevinLog] [info] Total 327(has 200 low confidence) barcodes; [2018-06-12 21:08:55.895] [alevinLog] [info] Done True Barcode Sampling; [2018-06-12 21:08:56.092] [alevinLog] [info] Done populating Z matrix; [2018-06-12 21:08:56.093] [alevinLog] [info] Done indexing Barcodes; [2018-06-12 21:08:56.094] [alevinLog] [info] Total Unique barcodes found: 1530568; [2018-06-12 21:08:56.094] [alevinLog] [info] Used Barcodes except Whitelist: 4828; [2018-06-12 21:08:56.124] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-06-12 21:08:56.124] [alevinLog] [info] parsing read library format; [2018-06-12 21:08:56.124] [jointLog] [info] There is 1 library.; [2018-06-12 21:08:56.183] [jointLog] [info] Loading Quasi index; [2018-06-12 21:08:56.184] [jointLog] [info] Loading 32-bit quasi index; [2018-06-12 21:08:56.184] [stderrLog] [info] Loading Suffix Array ; [2018-06-12 21:08:56.530] [stderrLog] [info] Loading Transcript Info ; [2018-06-12 21:08:56.675] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-06-12 21:08:56.724] [stderrLog] [info] There were 36191 set bits in the bit array; [2018-06-12 21:08:56.729] [stderrLog] [info] Computing transcript lengths; [2018-06-12 21:08:56.729] [stderrLog] [info] Waiting to finish loading hash; [2018-06-12 21:08:58.508] [jointLog] [info] done; [2018-06-12 21:08:58.508] [jointLog] [info] Index contained 36191 targets; [2018-06-12 21:08:58.508] [stderrLog] [info] Done loading index. processed 0 Million fragments; processed 1 Million fragments; processed 1 Million fragments; processed 2 Million fragments; processed 2 Million fragments; processed 3 Million fragments; processed 3 Million fragments; hits: 169917, hits per frag: 0.0489674[2018-06-12 21:09:22.500] [jointLog] [error] umi indexing of jellyfish failing.; Ple",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/237
https://github.com/COMBINE-lab/salmon/issues/237:3539,Performance,Load,Loading,3539,"s Prediction 12274 Too far from knee prediction skipping it; [2018-06-12 21:08:55.712] [alevinLog] [info] Learned InvCov: 255.229 normfactor: 12656.9; [2018-06-12 21:08:55.712] [alevinLog] [info] Total 327(has 200 low confidence) barcodes; [2018-06-12 21:08:55.895] [alevinLog] [info] Done True Barcode Sampling; [2018-06-12 21:08:56.092] [alevinLog] [info] Done populating Z matrix; [2018-06-12 21:08:56.093] [alevinLog] [info] Done indexing Barcodes; [2018-06-12 21:08:56.094] [alevinLog] [info] Total Unique barcodes found: 1530568; [2018-06-12 21:08:56.094] [alevinLog] [info] Used Barcodes except Whitelist: 4828; [2018-06-12 21:08:56.124] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-06-12 21:08:56.124] [alevinLog] [info] parsing read library format; [2018-06-12 21:08:56.124] [jointLog] [info] There is 1 library.; [2018-06-12 21:08:56.183] [jointLog] [info] Loading Quasi index; [2018-06-12 21:08:56.184] [jointLog] [info] Loading 32-bit quasi index; [2018-06-12 21:08:56.184] [stderrLog] [info] Loading Suffix Array ; [2018-06-12 21:08:56.530] [stderrLog] [info] Loading Transcript Info ; [2018-06-12 21:08:56.675] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-06-12 21:08:56.724] [stderrLog] [info] There were 36191 set bits in the bit array; [2018-06-12 21:08:56.729] [stderrLog] [info] Computing transcript lengths; [2018-06-12 21:08:56.729] [stderrLog] [info] Waiting to finish loading hash; [2018-06-12 21:08:58.508] [jointLog] [info] done; [2018-06-12 21:08:58.508] [jointLog] [info] Index contained 36191 targets; [2018-06-12 21:08:58.508] [stderrLog] [info] Done loading index. processed 0 Million fragments; processed 1 Million fragments; processed 1 Million fragments; processed 2 Million fragments; processed 2 Million fragments; processed 3 Million fragments; processed 3 Million fragments; hits: 169917, hits per frag: 0.0489674[2018-06-12 21:09:22.500] [jointLog] [error] umi indexing of jellyfish failing.; Please report on github; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/237
https://github.com/COMBINE-lab/salmon/issues/237:3607,Performance,Load,Loading,3607,"s Prediction 12274 Too far from knee prediction skipping it; [2018-06-12 21:08:55.712] [alevinLog] [info] Learned InvCov: 255.229 normfactor: 12656.9; [2018-06-12 21:08:55.712] [alevinLog] [info] Total 327(has 200 low confidence) barcodes; [2018-06-12 21:08:55.895] [alevinLog] [info] Done True Barcode Sampling; [2018-06-12 21:08:56.092] [alevinLog] [info] Done populating Z matrix; [2018-06-12 21:08:56.093] [alevinLog] [info] Done indexing Barcodes; [2018-06-12 21:08:56.094] [alevinLog] [info] Total Unique barcodes found: 1530568; [2018-06-12 21:08:56.094] [alevinLog] [info] Used Barcodes except Whitelist: 4828; [2018-06-12 21:08:56.124] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-06-12 21:08:56.124] [alevinLog] [info] parsing read library format; [2018-06-12 21:08:56.124] [jointLog] [info] There is 1 library.; [2018-06-12 21:08:56.183] [jointLog] [info] Loading Quasi index; [2018-06-12 21:08:56.184] [jointLog] [info] Loading 32-bit quasi index; [2018-06-12 21:08:56.184] [stderrLog] [info] Loading Suffix Array ; [2018-06-12 21:08:56.530] [stderrLog] [info] Loading Transcript Info ; [2018-06-12 21:08:56.675] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-06-12 21:08:56.724] [stderrLog] [info] There were 36191 set bits in the bit array; [2018-06-12 21:08:56.729] [stderrLog] [info] Computing transcript lengths; [2018-06-12 21:08:56.729] [stderrLog] [info] Waiting to finish loading hash; [2018-06-12 21:08:58.508] [jointLog] [info] done; [2018-06-12 21:08:58.508] [jointLog] [info] Index contained 36191 targets; [2018-06-12 21:08:58.508] [stderrLog] [info] Done loading index. processed 0 Million fragments; processed 1 Million fragments; processed 1 Million fragments; processed 2 Million fragments; processed 2 Million fragments; processed 3 Million fragments; processed 3 Million fragments; hits: 169917, hits per frag: 0.0489674[2018-06-12 21:09:22.500] [jointLog] [error] umi indexing of jellyfish failing.; Please report on github; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/237
https://github.com/COMBINE-lab/salmon/issues/237:3678,Performance,Load,Loading,3678,"s Prediction 12274 Too far from knee prediction skipping it; [2018-06-12 21:08:55.712] [alevinLog] [info] Learned InvCov: 255.229 normfactor: 12656.9; [2018-06-12 21:08:55.712] [alevinLog] [info] Total 327(has 200 low confidence) barcodes; [2018-06-12 21:08:55.895] [alevinLog] [info] Done True Barcode Sampling; [2018-06-12 21:08:56.092] [alevinLog] [info] Done populating Z matrix; [2018-06-12 21:08:56.093] [alevinLog] [info] Done indexing Barcodes; [2018-06-12 21:08:56.094] [alevinLog] [info] Total Unique barcodes found: 1530568; [2018-06-12 21:08:56.094] [alevinLog] [info] Used Barcodes except Whitelist: 4828; [2018-06-12 21:08:56.124] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-06-12 21:08:56.124] [alevinLog] [info] parsing read library format; [2018-06-12 21:08:56.124] [jointLog] [info] There is 1 library.; [2018-06-12 21:08:56.183] [jointLog] [info] Loading Quasi index; [2018-06-12 21:08:56.184] [jointLog] [info] Loading 32-bit quasi index; [2018-06-12 21:08:56.184] [stderrLog] [info] Loading Suffix Array ; [2018-06-12 21:08:56.530] [stderrLog] [info] Loading Transcript Info ; [2018-06-12 21:08:56.675] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-06-12 21:08:56.724] [stderrLog] [info] There were 36191 set bits in the bit array; [2018-06-12 21:08:56.729] [stderrLog] [info] Computing transcript lengths; [2018-06-12 21:08:56.729] [stderrLog] [info] Waiting to finish loading hash; [2018-06-12 21:08:58.508] [jointLog] [info] done; [2018-06-12 21:08:58.508] [jointLog] [info] Index contained 36191 targets; [2018-06-12 21:08:58.508] [stderrLog] [info] Done loading index. processed 0 Million fragments; processed 1 Million fragments; processed 1 Million fragments; processed 2 Million fragments; processed 2 Million fragments; processed 3 Million fragments; processed 3 Million fragments; hits: 169917, hits per frag: 0.0489674[2018-06-12 21:09:22.500] [jointLog] [error] umi indexing of jellyfish failing.; Please report on github; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/237
https://github.com/COMBINE-lab/salmon/issues/237:3936,Performance,load,loading,3936,"s Prediction 12274 Too far from knee prediction skipping it; [2018-06-12 21:08:55.712] [alevinLog] [info] Learned InvCov: 255.229 normfactor: 12656.9; [2018-06-12 21:08:55.712] [alevinLog] [info] Total 327(has 200 low confidence) barcodes; [2018-06-12 21:08:55.895] [alevinLog] [info] Done True Barcode Sampling; [2018-06-12 21:08:56.092] [alevinLog] [info] Done populating Z matrix; [2018-06-12 21:08:56.093] [alevinLog] [info] Done indexing Barcodes; [2018-06-12 21:08:56.094] [alevinLog] [info] Total Unique barcodes found: 1530568; [2018-06-12 21:08:56.094] [alevinLog] [info] Used Barcodes except Whitelist: 4828; [2018-06-12 21:08:56.124] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-06-12 21:08:56.124] [alevinLog] [info] parsing read library format; [2018-06-12 21:08:56.124] [jointLog] [info] There is 1 library.; [2018-06-12 21:08:56.183] [jointLog] [info] Loading Quasi index; [2018-06-12 21:08:56.184] [jointLog] [info] Loading 32-bit quasi index; [2018-06-12 21:08:56.184] [stderrLog] [info] Loading Suffix Array ; [2018-06-12 21:08:56.530] [stderrLog] [info] Loading Transcript Info ; [2018-06-12 21:08:56.675] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-06-12 21:08:56.724] [stderrLog] [info] There were 36191 set bits in the bit array; [2018-06-12 21:08:56.729] [stderrLog] [info] Computing transcript lengths; [2018-06-12 21:08:56.729] [stderrLog] [info] Waiting to finish loading hash; [2018-06-12 21:08:58.508] [jointLog] [info] done; [2018-06-12 21:08:58.508] [jointLog] [info] Index contained 36191 targets; [2018-06-12 21:08:58.508] [stderrLog] [info] Done loading index. processed 0 Million fragments; processed 1 Million fragments; processed 1 Million fragments; processed 2 Million fragments; processed 2 Million fragments; processed 3 Million fragments; processed 3 Million fragments; hits: 169917, hits per frag: 0.0489674[2018-06-12 21:09:22.500] [jointLog] [error] umi indexing of jellyfish failing.; Please report on github; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/237
https://github.com/COMBINE-lab/salmon/issues/237:4125,Performance,load,loading,4125,"s Prediction 12274 Too far from knee prediction skipping it; [2018-06-12 21:08:55.712] [alevinLog] [info] Learned InvCov: 255.229 normfactor: 12656.9; [2018-06-12 21:08:55.712] [alevinLog] [info] Total 327(has 200 low confidence) barcodes; [2018-06-12 21:08:55.895] [alevinLog] [info] Done True Barcode Sampling; [2018-06-12 21:08:56.092] [alevinLog] [info] Done populating Z matrix; [2018-06-12 21:08:56.093] [alevinLog] [info] Done indexing Barcodes; [2018-06-12 21:08:56.094] [alevinLog] [info] Total Unique barcodes found: 1530568; [2018-06-12 21:08:56.094] [alevinLog] [info] Used Barcodes except Whitelist: 4828; [2018-06-12 21:08:56.124] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-06-12 21:08:56.124] [alevinLog] [info] parsing read library format; [2018-06-12 21:08:56.124] [jointLog] [info] There is 1 library.; [2018-06-12 21:08:56.183] [jointLog] [info] Loading Quasi index; [2018-06-12 21:08:56.184] [jointLog] [info] Loading 32-bit quasi index; [2018-06-12 21:08:56.184] [stderrLog] [info] Loading Suffix Array ; [2018-06-12 21:08:56.530] [stderrLog] [info] Loading Transcript Info ; [2018-06-12 21:08:56.675] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-06-12 21:08:56.724] [stderrLog] [info] There were 36191 set bits in the bit array; [2018-06-12 21:08:56.729] [stderrLog] [info] Computing transcript lengths; [2018-06-12 21:08:56.729] [stderrLog] [info] Waiting to finish loading hash; [2018-06-12 21:08:58.508] [jointLog] [info] done; [2018-06-12 21:08:58.508] [jointLog] [info] Index contained 36191 targets; [2018-06-12 21:08:58.508] [stderrLog] [info] Done loading index. processed 0 Million fragments; processed 1 Million fragments; processed 1 Million fragments; processed 2 Million fragments; processed 2 Million fragments; processed 3 Million fragments; processed 3 Million fragments; hits: 169917, hits per frag: 0.0489674[2018-06-12 21:09:22.500] [jointLog] [error] umi indexing of jellyfish failing.; Please report on github; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/237
https://github.com/COMBINE-lab/salmon/issues/237:2506,Safety,Predict,Prediction,2506,s will be written to alevin_output/logs; ### salmon (single-cell-based) v0.10.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { ./H2_S5_L003_R1_001.fastq.gz }; ### [ mates2 ] => { H2_S5_L003_R2_001.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { salmon_index }; ### [ threads ] => { 8 }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { txp2gene.tsv }. [2018-06-12 21:01:31.327] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-06-12 21:01:31.330] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 141 Million barcodes. [2018-06-12 21:08:38.126] [alevinLog] [info] Done barcode density calculation.; [2018-06-12 21:08:38.126] [alevinLog] [info] # Barcodes Used: 140111660 / 141062078.; [2018-06-12 21:08:42.014] [alevinLog] [info] Knee found left boundary at 127 ; [2018-06-12 21:08:55.712] [alevinLog] [warning] Gauss Prediction 12274 Too far from knee prediction skipping it; [2018-06-12 21:08:55.712] [alevinLog] [info] Learned InvCov: 255.229 normfactor: 12656.9; [2018-06-12 21:08:55.712] [alevinLog] [info] Total 327(has 200 low confidence) barcodes; [2018-06-12 21:08:55.895] [alevinLog] [info] Done True Barcode Sampling; [2018-06-12 21:08:56.092] [alevinLog] [info] Done populating Z matrix; [2018-06-12 21:08:56.093] [alevinLog] [info] Done indexing Barcodes; [2018-06-12 21:08:56.094] [alevinLog] [info] Total Unique barcodes found: 1530568; [2018-06-12 21:08:56.094] [alevinLog] [info] Used Barcodes except Whitelist: 4828; [2018-06-12 21:08:56.124] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-06-12 21:08:56.124] [alevinLog] [info] parsing read library format; [2018-06-12 21:08:56.124] [jointLog] [info] There is 1 library.; [2018-06-12 21:08:56.183] [jointLog] [info] Loading Quasi index; [2018-06-12 21:08:56.184] [jointLog] [info] Loading 32-bit quasi index; [2018-06-12 21:08:56.184] [stderrLog,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/237
https://github.com/COMBINE-lab/salmon/issues/237:2541,Safety,predict,prediction,2541,s will be written to alevin_output/logs; ### salmon (single-cell-based) v0.10.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { ./H2_S5_L003_R1_001.fastq.gz }; ### [ mates2 ] => { H2_S5_L003_R2_001.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { salmon_index }; ### [ threads ] => { 8 }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { txp2gene.tsv }. [2018-06-12 21:01:31.327] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-06-12 21:01:31.330] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 141 Million barcodes. [2018-06-12 21:08:38.126] [alevinLog] [info] Done barcode density calculation.; [2018-06-12 21:08:38.126] [alevinLog] [info] # Barcodes Used: 140111660 / 141062078.; [2018-06-12 21:08:42.014] [alevinLog] [info] Knee found left boundary at 127 ; [2018-06-12 21:08:55.712] [alevinLog] [warning] Gauss Prediction 12274 Too far from knee prediction skipping it; [2018-06-12 21:08:55.712] [alevinLog] [info] Learned InvCov: 255.229 normfactor: 12656.9; [2018-06-12 21:08:55.712] [alevinLog] [info] Total 327(has 200 low confidence) barcodes; [2018-06-12 21:08:55.895] [alevinLog] [info] Done True Barcode Sampling; [2018-06-12 21:08:56.092] [alevinLog] [info] Done populating Z matrix; [2018-06-12 21:08:56.093] [alevinLog] [info] Done indexing Barcodes; [2018-06-12 21:08:56.094] [alevinLog] [info] Total Unique barcodes found: 1530568; [2018-06-12 21:08:56.094] [alevinLog] [info] Used Barcodes except Whitelist: 4828; [2018-06-12 21:08:56.124] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-06-12 21:08:56.124] [alevinLog] [info] parsing read library format; [2018-06-12 21:08:56.124] [jointLog] [info] There is 1 library.; [2018-06-12 21:08:56.183] [jointLog] [info] Loading Quasi index; [2018-06-12 21:08:56.184] [jointLog] [info] Loading 32-bit quasi index; [2018-06-12 21:08:56.184] [stderrLog,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/237
https://github.com/COMBINE-lab/salmon/issues/237:3944,Security,hash,hash,3944,"s Prediction 12274 Too far from knee prediction skipping it; [2018-06-12 21:08:55.712] [alevinLog] [info] Learned InvCov: 255.229 normfactor: 12656.9; [2018-06-12 21:08:55.712] [alevinLog] [info] Total 327(has 200 low confidence) barcodes; [2018-06-12 21:08:55.895] [alevinLog] [info] Done True Barcode Sampling; [2018-06-12 21:08:56.092] [alevinLog] [info] Done populating Z matrix; [2018-06-12 21:08:56.093] [alevinLog] [info] Done indexing Barcodes; [2018-06-12 21:08:56.094] [alevinLog] [info] Total Unique barcodes found: 1530568; [2018-06-12 21:08:56.094] [alevinLog] [info] Used Barcodes except Whitelist: 4828; [2018-06-12 21:08:56.124] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-06-12 21:08:56.124] [alevinLog] [info] parsing read library format; [2018-06-12 21:08:56.124] [jointLog] [info] There is 1 library.; [2018-06-12 21:08:56.183] [jointLog] [info] Loading Quasi index; [2018-06-12 21:08:56.184] [jointLog] [info] Loading 32-bit quasi index; [2018-06-12 21:08:56.184] [stderrLog] [info] Loading Suffix Array ; [2018-06-12 21:08:56.530] [stderrLog] [info] Loading Transcript Info ; [2018-06-12 21:08:56.675] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-06-12 21:08:56.724] [stderrLog] [info] There were 36191 set bits in the bit array; [2018-06-12 21:08:56.729] [stderrLog] [info] Computing transcript lengths; [2018-06-12 21:08:56.729] [stderrLog] [info] Waiting to finish loading hash; [2018-06-12 21:08:58.508] [jointLog] [info] done; [2018-06-12 21:08:58.508] [jointLog] [info] Index contained 36191 targets; [2018-06-12 21:08:58.508] [stderrLog] [info] Done loading index. processed 0 Million fragments; processed 1 Million fragments; processed 1 Million fragments; processed 2 Million fragments; processed 2 Million fragments; processed 3 Million fragments; processed 3 Million fragments; hits: 169917, hits per frag: 0.0489674[2018-06-12 21:09:22.500] [jointLog] [error] umi indexing of jellyfish failing.; Please report on github; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/237
https://github.com/COMBINE-lab/salmon/issues/237:1526,Testability,Log,Logs,1526,"n installed (compiled, downloaded executable, through bioconda)?; Installed with bioconda; * Which reference (e.g. transcriptome) was used? ; This transcriptome: https://drive.google.com/open?id=1XcsFUxJM6XaYEKh9BYdUoAyJSlWJLIiW. ; It's a mouse transcriptome with 3 additional transcripts at the end; * Which read files were used?; * Which which program options were used?; `salmon alevin -lISR -1 ./H2_S5_L003_R1_001.fastq.gz -2 H2_S5_L003_R2_001.fastq.gz --chromium -i salmon_index -p 8 -o alevin_output --tgMap txp2gene.tsv`. **Desktop (please complete the following information):**; - OS: CentOS; - Version:; Linux login1 3.10.0-514.2.2.el7.x86_64 #1 SMP Tue Dec 6 23:06:41 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.3.1611 (Core); Release: 7.3.1611; Codename: Core. **Additional context**; ```; Version Info: This is the most recent version of Salmon.; Logs will be written to alevin_output/logs; ### salmon (single-cell-based) v0.10.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { ./H2_S5_L003_R1_001.fastq.gz }; ### [ mates2 ] => { H2_S5_L003_R2_001.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { salmon_index }; ### [ threads ] => { 8 }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { txp2gene.tsv }. [2018-06-12 21:01:31.327] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-06-12 21:01:31.330] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 141 Million barcodes. [2018-06-12 21:08:38.126] [alevinLog] [info] Done barcode density calculation.; [2018-06-12 21:08:38.126] [alevinLog] [info] # Barcodes Used: 140111660 / 141062078.; [2018-06-12 21:08:42.014] [alevinLog] [info] Knee found left boundary at 127 ; [2018-06-12 21:08:55.712] [alevinLog] [warning] Gauss Prediction 12274 Too far from knee prediction skipping it;",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/237
https://github.com/COMBINE-lab/salmon/issues/237:1564,Testability,log,logs,1564,"n installed (compiled, downloaded executable, through bioconda)?; Installed with bioconda; * Which reference (e.g. transcriptome) was used? ; This transcriptome: https://drive.google.com/open?id=1XcsFUxJM6XaYEKh9BYdUoAyJSlWJLIiW. ; It's a mouse transcriptome with 3 additional transcripts at the end; * Which read files were used?; * Which which program options were used?; `salmon alevin -lISR -1 ./H2_S5_L003_R1_001.fastq.gz -2 H2_S5_L003_R2_001.fastq.gz --chromium -i salmon_index -p 8 -o alevin_output --tgMap txp2gene.tsv`. **Desktop (please complete the following information):**; - OS: CentOS; - Version:; Linux login1 3.10.0-514.2.2.el7.x86_64 #1 SMP Tue Dec 6 23:06:41 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.3.1611 (Core); Release: 7.3.1611; Codename: Core. **Additional context**; ```; Version Info: This is the most recent version of Salmon.; Logs will be written to alevin_output/logs; ### salmon (single-cell-based) v0.10.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { ./H2_S5_L003_R1_001.fastq.gz }; ### [ mates2 ] => { H2_S5_L003_R2_001.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { salmon_index }; ### [ threads ] => { 8 }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { txp2gene.tsv }. [2018-06-12 21:01:31.327] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-06-12 21:01:31.330] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 141 Million barcodes. [2018-06-12 21:08:38.126] [alevinLog] [info] Done barcode density calculation.; [2018-06-12 21:08:38.126] [alevinLog] [info] # Barcodes Used: 140111660 / 141062078.; [2018-06-12 21:08:42.014] [alevinLog] [info] Knee found left boundary at 127 ; [2018-06-12 21:08:55.712] [alevinLog] [warning] Gauss Prediction 12274 Too far from knee prediction skipping it;",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/237
https://github.com/COMBINE-lab/salmon/issues/237:2610,Usability,Learn,Learned,2610,; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { ./H2_S5_L003_R1_001.fastq.gz }; ### [ mates2 ] => { H2_S5_L003_R2_001.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { salmon_index }; ### [ threads ] => { 8 }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { txp2gene.tsv }. [2018-06-12 21:01:31.327] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-06-12 21:01:31.330] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 141 Million barcodes. [2018-06-12 21:08:38.126] [alevinLog] [info] Done barcode density calculation.; [2018-06-12 21:08:38.126] [alevinLog] [info] # Barcodes Used: 140111660 / 141062078.; [2018-06-12 21:08:42.014] [alevinLog] [info] Knee found left boundary at 127 ; [2018-06-12 21:08:55.712] [alevinLog] [warning] Gauss Prediction 12274 Too far from knee prediction skipping it; [2018-06-12 21:08:55.712] [alevinLog] [info] Learned InvCov: 255.229 normfactor: 12656.9; [2018-06-12 21:08:55.712] [alevinLog] [info] Total 327(has 200 low confidence) barcodes; [2018-06-12 21:08:55.895] [alevinLog] [info] Done True Barcode Sampling; [2018-06-12 21:08:56.092] [alevinLog] [info] Done populating Z matrix; [2018-06-12 21:08:56.093] [alevinLog] [info] Done indexing Barcodes; [2018-06-12 21:08:56.094] [alevinLog] [info] Total Unique barcodes found: 1530568; [2018-06-12 21:08:56.094] [alevinLog] [info] Used Barcodes except Whitelist: 4828; [2018-06-12 21:08:56.124] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-06-12 21:08:56.124] [alevinLog] [info] parsing read library format; [2018-06-12 21:08:56.124] [jointLog] [info] There is 1 library.; [2018-06-12 21:08:56.183] [jointLog] [info] Loading Quasi index; [2018-06-12 21:08:56.184] [jointLog] [info] Loading 32-bit quasi index; [2018-06-12 21:08:56.184] [stderrLog] [info] Loading Suffix Array ; [2018-06-12 21:08:56.530] [stderrLog] [info] L,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/237
https://github.com/COMBINE-lab/salmon/issues/238:9,Availability,down,downloaded,9,"Hi, just downloaded salmon, unpacked with tar, but I don't seem to find the bin folder containing the salmon binary file. Thanks; Kay",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/238
https://github.com/COMBINE-lab/salmon/issues/239:49,Availability,down,downloaded,49,"Hi,; I am having trouble with salmon on linux, I downloaded salmon through bioconda and was following your ""GETTING STARTED"" tutorial, followed the code exactly and it all worked fine except I am not getting the quant.sf file for any of the samples. I also tried it on my own mRNA fastq files and the same thing happened. I am able to get all the other files like the log in its own directory. The log files are empty though so I was not able to get any information as to what is wrong. I am not getting any errors either so I don't really know where to start looking.; Any help you can give would be much appreciated.; Thank you,; Tj.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/239
https://github.com/COMBINE-lab/salmon/issues/239:508,Availability,error,errors,508,"Hi,; I am having trouble with salmon on linux, I downloaded salmon through bioconda and was following your ""GETTING STARTED"" tutorial, followed the code exactly and it all worked fine except I am not getting the quant.sf file for any of the samples. I also tried it on my own mRNA fastq files and the same thing happened. I am able to get all the other files like the log in its own directory. The log files are empty though so I was not able to get any information as to what is wrong. I am not getting any errors either so I don't really know where to start looking.; Any help you can give would be much appreciated.; Thank you,; Tj.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/239
https://github.com/COMBINE-lab/salmon/issues/239:368,Testability,log,log,368,"Hi,; I am having trouble with salmon on linux, I downloaded salmon through bioconda and was following your ""GETTING STARTED"" tutorial, followed the code exactly and it all worked fine except I am not getting the quant.sf file for any of the samples. I also tried it on my own mRNA fastq files and the same thing happened. I am able to get all the other files like the log in its own directory. The log files are empty though so I was not able to get any information as to what is wrong. I am not getting any errors either so I don't really know where to start looking.; Any help you can give would be much appreciated.; Thank you,; Tj.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/239
https://github.com/COMBINE-lab/salmon/issues/239:398,Testability,log,log,398,"Hi,; I am having trouble with salmon on linux, I downloaded salmon through bioconda and was following your ""GETTING STARTED"" tutorial, followed the code exactly and it all worked fine except I am not getting the quant.sf file for any of the samples. I also tried it on my own mRNA fastq files and the same thing happened. I am able to get all the other files like the log in its own directory. The log files are empty though so I was not able to get any information as to what is wrong. I am not getting any errors either so I don't really know where to start looking.; Any help you can give would be much appreciated.; Thank you,; Tj.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/239
https://github.com/COMBINE-lab/salmon/issues/240:242,Usability,clear,clear,242,"Hi,; after reading reading the docs at http://salmon.readthedocs.io/en/latest/salmon.html it seems to me nowhere was mentioned how to input single file with read pairs, occasionally with some singletons. Is that not supported? Please make it clear in the docs if the only way to feed salmon is via separate fwd and reverse files (and no singletons supported if -1 and -2 args are used). While at it, in teh same page in section `Quasi-mapping-based mode (including lightweight alignment)` is hidden how to index reference trasncriptome. Please move those parts at the beginning, before discussing `Providing multiple read files to Salmon`. Thank you.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/240
https://github.com/COMBINE-lab/salmon/issues/242:178,Availability,error,errors,178,"Hi,; would you mind cleaning up the STDOUT and STDERR output from `salmon quant` and `salmon index`? Commonly `STDOUT` should be used for normal output messages and `STDERR` for errors or at worst warnings. Salmon writes most of the messages to `STDERR`. 1. `Version Info: This is the most recent version of Salmon.` is output to `STDOUT`. I find it useless. If salmon run some network connection to figure out its version it is `a)` prone to errors, `b)` I would expect a fat warning in the documentation a `phone home` feature is builtin, `c)` it is likely to fail on more network-restricted installations. Or, `d)`, the message is incorrect. I suggest drop the message altogether. 2. `salmon quant` writes a lot of normal messages to `STDERR`. Please use `STDOUT` instead. If a program exits with a non-zero exit code it is common to read its `STDERR` output to learn what was the cause for the error. It is awkward to realize there is lots of unrelated text. Please follow common rules on Unix. 3. The docs at http://salmon.readthedocs.io/en/latest/salmon.html did not mention the `fmd` index is just a plain index from `bwa`. Why don't you instruct users to use `bwa index` instead? It would be clearer (if that is the type of index you employ). 4. `salmon index` behavior. ```; salmon index -t Homo_sapiens.GRCh38.cdna.all.fa -i Homo_sapiens.GRCh38.cdna.all --type quasi -k 31; index [""Homo_sapiens.GRCh38.cdna.all""] did not previously exist . . . creating it; [2018-06-25 19:25:57.122] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; [2018-06-25 19:25:57.176] [jointLog] [warning] Entry with header [ENST00000434970.2], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-06-25 19:25:57.176] [jointLog] [warning] Entry with header [ENST00000448914.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); ...; [2018-06-25 19:26:07.297] [jointLog] [warning] Entry with header [ENST00000579054.1], had length l",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/242
https://github.com/COMBINE-lab/salmon/issues/242:443,Availability,error,errors,443,"Hi,; would you mind cleaning up the STDOUT and STDERR output from `salmon quant` and `salmon index`? Commonly `STDOUT` should be used for normal output messages and `STDERR` for errors or at worst warnings. Salmon writes most of the messages to `STDERR`. 1. `Version Info: This is the most recent version of Salmon.` is output to `STDOUT`. I find it useless. If salmon run some network connection to figure out its version it is `a)` prone to errors, `b)` I would expect a fat warning in the documentation a `phone home` feature is builtin, `c)` it is likely to fail on more network-restricted installations. Or, `d)`, the message is incorrect. I suggest drop the message altogether. 2. `salmon quant` writes a lot of normal messages to `STDERR`. Please use `STDOUT` instead. If a program exits with a non-zero exit code it is common to read its `STDERR` output to learn what was the cause for the error. It is awkward to realize there is lots of unrelated text. Please follow common rules on Unix. 3. The docs at http://salmon.readthedocs.io/en/latest/salmon.html did not mention the `fmd` index is just a plain index from `bwa`. Why don't you instruct users to use `bwa index` instead? It would be clearer (if that is the type of index you employ). 4. `salmon index` behavior. ```; salmon index -t Homo_sapiens.GRCh38.cdna.all.fa -i Homo_sapiens.GRCh38.cdna.all --type quasi -k 31; index [""Homo_sapiens.GRCh38.cdna.all""] did not previously exist . . . creating it; [2018-06-25 19:25:57.122] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; [2018-06-25 19:25:57.176] [jointLog] [warning] Entry with header [ENST00000434970.2], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-06-25 19:25:57.176] [jointLog] [warning] Entry with header [ENST00000448914.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); ...; [2018-06-25 19:26:07.297] [jointLog] [warning] Entry with header [ENST00000579054.1], had length l",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/242
https://github.com/COMBINE-lab/salmon/issues/242:898,Availability,error,error,898,"Hi,; would you mind cleaning up the STDOUT and STDERR output from `salmon quant` and `salmon index`? Commonly `STDOUT` should be used for normal output messages and `STDERR` for errors or at worst warnings. Salmon writes most of the messages to `STDERR`. 1. `Version Info: This is the most recent version of Salmon.` is output to `STDOUT`. I find it useless. If salmon run some network connection to figure out its version it is `a)` prone to errors, `b)` I would expect a fat warning in the documentation a `phone home` feature is builtin, `c)` it is likely to fail on more network-restricted installations. Or, `d)`, the message is incorrect. I suggest drop the message altogether. 2. `salmon quant` writes a lot of normal messages to `STDERR`. Please use `STDOUT` instead. If a program exits with a non-zero exit code it is common to read its `STDERR` output to learn what was the cause for the error. It is awkward to realize there is lots of unrelated text. Please follow common rules on Unix. 3. The docs at http://salmon.readthedocs.io/en/latest/salmon.html did not mention the `fmd` index is just a plain index from `bwa`. Why don't you instruct users to use `bwa index` instead? It would be clearer (if that is the type of index you employ). 4. `salmon index` behavior. ```; salmon index -t Homo_sapiens.GRCh38.cdna.all.fa -i Homo_sapiens.GRCh38.cdna.all --type quasi -k 31; index [""Homo_sapiens.GRCh38.cdna.all""] did not previously exist . . . creating it; [2018-06-25 19:25:57.122] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; [2018-06-25 19:25:57.176] [jointLog] [warning] Entry with header [ENST00000434970.2], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-06-25 19:25:57.176] [jointLog] [warning] Entry with header [ENST00000448914.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); ...; [2018-06-25 19:26:07.297] [jointLog] [warning] Entry with header [ENST00000579054.1], had length l",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/242
https://github.com/COMBINE-lab/salmon/issues/242:13276,Availability,avail,available,13276,"ions^M^Mprocessed 281000000 positions^M^Mprocessed 282000000 positions^M^Mprocessed 283000000 positions^M^Mprocessed 284000000 positions^M^Mprocessed 285000000 positions^M^Mprocessed 286000000 positions^M^Mprocessed 287000000 positions^M^Mprocessed 288000000 positions^M^Mprocessed 289000000 positions; khash had 109134690 keys; saving hash to disk . . . done; Elapsed time: 12.6069s; [2018-06-25 19:29:02.297] [jLog] [info] done building index; ```. It would be more interesting to see what filename is used for the index. Showing the ""basename"" of the index file is not very helpful. I would prefer to see the filename(s) on the beginning and end lines:. ```; index [""Homo_sapiens.GRCh38.cdna.all""] did not previously exist . . . creating it; [2018-06-25 19:25:57.122] [jLog] [info] building index; ...; [2018-06-25 19:29:02.297] [jLog] [info] done building index; ```. 5. The duplicates have same sequence or ID or both? The message should be clearer. I wonder what are these duplicates in a human cdna predicted, as available from `ftp://ftp.ensembl.org/pub/release-92/fasta/homo_sapiens/cdna`; :. ```; [2018-06-25 19:26:07.480] [jointLog] [warning] Removed 11768 transcripts that were sequence duplicates of indexed transcripts.; ```. 6. For the bwa-based index again, the logs are too verbose on one hand and on the second, they do not say what files were created. I doubt any file with *prefix* `Homo_sapiens.GRCh38.cdna.all/bwaidx` was created. ```; + salmon index -t Homo_sapiens.GRCh38.cdna.all.fa -i Homo_sapiens.GRCh38.cdna.all --type fmd; outputPrefix = ""Homo_sapiens.GRCh38.cdna.all/bwaidx""; [2018-06-25 19:29:02.497] [jLog] [info] building index; [bwa_index] Pack FASTA... 2.87 sec; [bwa_index] Construct BWT for the packed sequence...; [BWTIncCreate] textLength=609536484, availableWord=54888760; [BWTIncConstructFromPacked] 10 iterations done. 87569268 characters processed.; [BWTIncConstructFromPacked] 20 iterations done. 164630980 characters processed.; [BWTIncConstructFromPacked",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/242
https://github.com/COMBINE-lab/salmon/issues/242:14045,Availability,avail,availableWord,14045," [2018-06-25 19:29:02.297] [jLog] [info] done building index; ```. 5. The duplicates have same sequence or ID or both? The message should be clearer. I wonder what are these duplicates in a human cdna predicted, as available from `ftp://ftp.ensembl.org/pub/release-92/fasta/homo_sapiens/cdna`; :. ```; [2018-06-25 19:26:07.480] [jointLog] [warning] Removed 11768 transcripts that were sequence duplicates of indexed transcripts.; ```. 6. For the bwa-based index again, the logs are too verbose on one hand and on the second, they do not say what files were created. I doubt any file with *prefix* `Homo_sapiens.GRCh38.cdna.all/bwaidx` was created. ```; + salmon index -t Homo_sapiens.GRCh38.cdna.all.fa -i Homo_sapiens.GRCh38.cdna.all --type fmd; outputPrefix = ""Homo_sapiens.GRCh38.cdna.all/bwaidx""; [2018-06-25 19:29:02.497] [jLog] [info] building index; [bwa_index] Pack FASTA... 2.87 sec; [bwa_index] Construct BWT for the packed sequence...; [BWTIncCreate] textLength=609536484, availableWord=54888760; [BWTIncConstructFromPacked] 10 iterations done. 87569268 characters processed.; [BWTIncConstructFromPacked] 20 iterations done. 164630980 characters processed.; [BWTIncConstructFromPacked] 30 iterations done. 233119636 characters processed.; [BWTIncConstructFromPacked] 40 iterations done. 293988548 characters processed.; [BWTIncConstructFromPacked] 50 iterations done. 348084948 characters processed.; [BWTIncConstructFromPacked] 60 iterations done. 396161956 characters processed.; [BWTIncConstructFromPacked] 70 iterations done. 438888868 characters processed.; [BWTIncConstructFromPacked] 80 iterations done. 476860644 characters processed.; [BWTIncConstructFromPacked] 90 iterations done. 510606036 characters processed.; [BWTIncConstructFromPacked] 100 iterations done. 540594980 characters processed.; [BWTIncConstructFromPacked] 110 iterations done. 567245236 characters processed.; [BWTIncConstructFromPacked] 120 iterations done. 590928020 characters processed.; [bwa_index] 279.06",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/242
https://github.com/COMBINE-lab/salmon/issues/242:594,Deployability,install,installations,594,"Hi,; would you mind cleaning up the STDOUT and STDERR output from `salmon quant` and `salmon index`? Commonly `STDOUT` should be used for normal output messages and `STDERR` for errors or at worst warnings. Salmon writes most of the messages to `STDERR`. 1. `Version Info: This is the most recent version of Salmon.` is output to `STDOUT`. I find it useless. If salmon run some network connection to figure out its version it is `a)` prone to errors, `b)` I would expect a fat warning in the documentation a `phone home` feature is builtin, `c)` it is likely to fail on more network-restricted installations. Or, `d)`, the message is incorrect. I suggest drop the message altogether. 2. `salmon quant` writes a lot of normal messages to `STDERR`. Please use `STDOUT` instead. If a program exits with a non-zero exit code it is common to read its `STDERR` output to learn what was the cause for the error. It is awkward to realize there is lots of unrelated text. Please follow common rules on Unix. 3. The docs at http://salmon.readthedocs.io/en/latest/salmon.html did not mention the `fmd` index is just a plain index from `bwa`. Why don't you instruct users to use `bwa index` instead? It would be clearer (if that is the type of index you employ). 4. `salmon index` behavior. ```; salmon index -t Homo_sapiens.GRCh38.cdna.all.fa -i Homo_sapiens.GRCh38.cdna.all --type quasi -k 31; index [""Homo_sapiens.GRCh38.cdna.all""] did not previously exist . . . creating it; [2018-06-25 19:25:57.122] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; [2018-06-25 19:25:57.176] [jointLog] [warning] Entry with header [ENST00000434970.2], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-06-25 19:25:57.176] [jointLog] [warning] Entry with header [ENST00000448914.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); ...; [2018-06-25 19:26:07.297] [jointLog] [warning] Entry with header [ENST00000579054.1], had length l",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/242
https://github.com/COMBINE-lab/salmon/issues/242:13318,Deployability,release,release-,13318,"cessed 283000000 positions^M^Mprocessed 284000000 positions^M^Mprocessed 285000000 positions^M^Mprocessed 286000000 positions^M^Mprocessed 287000000 positions^M^Mprocessed 288000000 positions^M^Mprocessed 289000000 positions; khash had 109134690 keys; saving hash to disk . . . done; Elapsed time: 12.6069s; [2018-06-25 19:29:02.297] [jLog] [info] done building index; ```. It would be more interesting to see what filename is used for the index. Showing the ""basename"" of the index file is not very helpful. I would prefer to see the filename(s) on the beginning and end lines:. ```; index [""Homo_sapiens.GRCh38.cdna.all""] did not previously exist . . . creating it; [2018-06-25 19:25:57.122] [jLog] [info] building index; ...; [2018-06-25 19:29:02.297] [jLog] [info] done building index; ```. 5. The duplicates have same sequence or ID or both? The message should be clearer. I wonder what are these duplicates in a human cdna predicted, as available from `ftp://ftp.ensembl.org/pub/release-92/fasta/homo_sapiens/cdna`; :. ```; [2018-06-25 19:26:07.480] [jointLog] [warning] Removed 11768 transcripts that were sequence duplicates of indexed transcripts.; ```. 6. For the bwa-based index again, the logs are too verbose on one hand and on the second, they do not say what files were created. I doubt any file with *prefix* `Homo_sapiens.GRCh38.cdna.all/bwaidx` was created. ```; + salmon index -t Homo_sapiens.GRCh38.cdna.all.fa -i Homo_sapiens.GRCh38.cdna.all --type fmd; outputPrefix = ""Homo_sapiens.GRCh38.cdna.all/bwaidx""; [2018-06-25 19:29:02.497] [jLog] [info] building index; [bwa_index] Pack FASTA... 2.87 sec; [bwa_index] Construct BWT for the packed sequence...; [BWTIncCreate] textLength=609536484, availableWord=54888760; [BWTIncConstructFromPacked] 10 iterations done. 87569268 characters processed.; [BWTIncConstructFromPacked] 20 iterations done. 164630980 characters processed.; [BWTIncConstructFromPacked] 30 iterations done. 233119636 characters processed.; [BWTIncConstructFromPac",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/242
https://github.com/COMBINE-lab/salmon/issues/242:15091,Deployability,Update,Update,15091,"Packed] 10 iterations done. 87569268 characters processed.; [BWTIncConstructFromPacked] 20 iterations done. 164630980 characters processed.; [BWTIncConstructFromPacked] 30 iterations done. 233119636 characters processed.; [BWTIncConstructFromPacked] 40 iterations done. 293988548 characters processed.; [BWTIncConstructFromPacked] 50 iterations done. 348084948 characters processed.; [BWTIncConstructFromPacked] 60 iterations done. 396161956 characters processed.; [BWTIncConstructFromPacked] 70 iterations done. 438888868 characters processed.; [BWTIncConstructFromPacked] 80 iterations done. 476860644 characters processed.; [BWTIncConstructFromPacked] 90 iterations done. 510606036 characters processed.; [BWTIncConstructFromPacked] 100 iterations done. 540594980 characters processed.; [BWTIncConstructFromPacked] 110 iterations done. 567245236 characters processed.; [BWTIncConstructFromPacked] 120 iterations done. 590928020 characters processed.; [bwa_index] 279.06 seconds elapse.; [bwa_index] Update BWT... 1.72 sec; [bwa_index] Pack forward-only FASTA... 1.90 sec; [bwa_index] Construct SA from BWT and Occ... 59.56 sec; [2018-06-25 19:34:53.084] [jLog] [info] done building index; ```. Doh, something unexpected from the logs, isn't it?. ```; $ ls -latr ftp.ensembl.org/pub/release-92/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all; total 8374704; drwx------. 3 mmokrejs mmokrejs 4096 Jun 25 19:25 ..; -rw-r--r--. 1 mmokrejs mmokrejs 36158409 Jun 25 19:26 rsd.bin; -rw-r--r--. 1 mmokrejs mmokrejs 423777 Jun 25 19:26 duplicate_clusters.tsv; -rw-r--r--. 1 mmokrejs mmokrejs 294997212 Jun 25 19:26 txpInfo.bin; -rw-r--r--. 1 mmokrejs mmokrejs 1157068836 Jun 25 19:26 sa.bin; -rw-r--r--. 1 mmokrejs mmokrejs 1779709484 Jun 25 19:29 hash.bin; -rw-r--r--. 1 mmokrejs mmokrejs 75 Jun 25 19:29 refInfo.json; -rw-r--r--. 1 mmokrejs mmokrejs 9816 Jun 25 19:29 quasi_index.log; -rw-r--r--. 1 mmokrejs mmokrejs 666 Jun 25 19:29 header.json; -rw-r--r--. 1 mmokrejs mmokrejs 304768324 Jun 25 19:33",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/242
https://github.com/COMBINE-lab/salmon/issues/242:15374,Deployability,release,release-,15374,"WTIncConstructFromPacked] 50 iterations done. 348084948 characters processed.; [BWTIncConstructFromPacked] 60 iterations done. 396161956 characters processed.; [BWTIncConstructFromPacked] 70 iterations done. 438888868 characters processed.; [BWTIncConstructFromPacked] 80 iterations done. 476860644 characters processed.; [BWTIncConstructFromPacked] 90 iterations done. 510606036 characters processed.; [BWTIncConstructFromPacked] 100 iterations done. 540594980 characters processed.; [BWTIncConstructFromPacked] 110 iterations done. 567245236 characters processed.; [BWTIncConstructFromPacked] 120 iterations done. 590928020 characters processed.; [bwa_index] 279.06 seconds elapse.; [bwa_index] Update BWT... 1.72 sec; [bwa_index] Pack forward-only FASTA... 1.90 sec; [bwa_index] Construct SA from BWT and Occ... 59.56 sec; [2018-06-25 19:34:53.084] [jLog] [info] done building index; ```. Doh, something unexpected from the logs, isn't it?. ```; $ ls -latr ftp.ensembl.org/pub/release-92/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all; total 8374704; drwx------. 3 mmokrejs mmokrejs 4096 Jun 25 19:25 ..; -rw-r--r--. 1 mmokrejs mmokrejs 36158409 Jun 25 19:26 rsd.bin; -rw-r--r--. 1 mmokrejs mmokrejs 423777 Jun 25 19:26 duplicate_clusters.tsv; -rw-r--r--. 1 mmokrejs mmokrejs 294997212 Jun 25 19:26 txpInfo.bin; -rw-r--r--. 1 mmokrejs mmokrejs 1157068836 Jun 25 19:26 sa.bin; -rw-r--r--. 1 mmokrejs mmokrejs 1779709484 Jun 25 19:29 hash.bin; -rw-r--r--. 1 mmokrejs mmokrejs 75 Jun 25 19:29 refInfo.json; -rw-r--r--. 1 mmokrejs mmokrejs 9816 Jun 25 19:29 quasi_index.log; -rw-r--r--. 1 mmokrejs mmokrejs 666 Jun 25 19:29 header.json; -rw-r--r--. 1 mmokrejs mmokrejs 304768324 Jun 25 19:33 bwaidx.bwt; -rw-r--r--. 1 mmokrejs mmokrejs 76192062 Jun 25 19:33 bwaidx.pac; -rw-r--r--. 1 mmokrejs mmokrejs 50007825 Jun 25 19:33 bwaidx.ann; -rw-r--r--. 1 mmokrejs mmokrejs 89 Jun 25 19:33 bwaidx.amb; drwxr-xr-x. 2 mmokrejs mmokrejs 4096 Jun 25 19:34 .; -rw-r--r--. 1 mmokrejs mmokrejs 95 Jun 25 19:3",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/242
https://github.com/COMBINE-lab/salmon/issues/242:152,Integrability,message,messages,152,"Hi,; would you mind cleaning up the STDOUT and STDERR output from `salmon quant` and `salmon index`? Commonly `STDOUT` should be used for normal output messages and `STDERR` for errors or at worst warnings. Salmon writes most of the messages to `STDERR`. 1. `Version Info: This is the most recent version of Salmon.` is output to `STDOUT`. I find it useless. If salmon run some network connection to figure out its version it is `a)` prone to errors, `b)` I would expect a fat warning in the documentation a `phone home` feature is builtin, `c)` it is likely to fail on more network-restricted installations. Or, `d)`, the message is incorrect. I suggest drop the message altogether. 2. `salmon quant` writes a lot of normal messages to `STDERR`. Please use `STDOUT` instead. If a program exits with a non-zero exit code it is common to read its `STDERR` output to learn what was the cause for the error. It is awkward to realize there is lots of unrelated text. Please follow common rules on Unix. 3. The docs at http://salmon.readthedocs.io/en/latest/salmon.html did not mention the `fmd` index is just a plain index from `bwa`. Why don't you instruct users to use `bwa index` instead? It would be clearer (if that is the type of index you employ). 4. `salmon index` behavior. ```; salmon index -t Homo_sapiens.GRCh38.cdna.all.fa -i Homo_sapiens.GRCh38.cdna.all --type quasi -k 31; index [""Homo_sapiens.GRCh38.cdna.all""] did not previously exist . . . creating it; [2018-06-25 19:25:57.122] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; [2018-06-25 19:25:57.176] [jointLog] [warning] Entry with header [ENST00000434970.2], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-06-25 19:25:57.176] [jointLog] [warning] Entry with header [ENST00000448914.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); ...; [2018-06-25 19:26:07.297] [jointLog] [warning] Entry with header [ENST00000579054.1], had length l",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/242
https://github.com/COMBINE-lab/salmon/issues/242:233,Integrability,message,messages,233,"Hi,; would you mind cleaning up the STDOUT and STDERR output from `salmon quant` and `salmon index`? Commonly `STDOUT` should be used for normal output messages and `STDERR` for errors or at worst warnings. Salmon writes most of the messages to `STDERR`. 1. `Version Info: This is the most recent version of Salmon.` is output to `STDOUT`. I find it useless. If salmon run some network connection to figure out its version it is `a)` prone to errors, `b)` I would expect a fat warning in the documentation a `phone home` feature is builtin, `c)` it is likely to fail on more network-restricted installations. Or, `d)`, the message is incorrect. I suggest drop the message altogether. 2. `salmon quant` writes a lot of normal messages to `STDERR`. Please use `STDOUT` instead. If a program exits with a non-zero exit code it is common to read its `STDERR` output to learn what was the cause for the error. It is awkward to realize there is lots of unrelated text. Please follow common rules on Unix. 3. The docs at http://salmon.readthedocs.io/en/latest/salmon.html did not mention the `fmd` index is just a plain index from `bwa`. Why don't you instruct users to use `bwa index` instead? It would be clearer (if that is the type of index you employ). 4. `salmon index` behavior. ```; salmon index -t Homo_sapiens.GRCh38.cdna.all.fa -i Homo_sapiens.GRCh38.cdna.all --type quasi -k 31; index [""Homo_sapiens.GRCh38.cdna.all""] did not previously exist . . . creating it; [2018-06-25 19:25:57.122] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; [2018-06-25 19:25:57.176] [jointLog] [warning] Entry with header [ENST00000434970.2], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-06-25 19:25:57.176] [jointLog] [warning] Entry with header [ENST00000448914.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); ...; [2018-06-25 19:26:07.297] [jointLog] [warning] Entry with header [ENST00000579054.1], had length l",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/242
https://github.com/COMBINE-lab/salmon/issues/242:623,Integrability,message,message,623,"Hi,; would you mind cleaning up the STDOUT and STDERR output from `salmon quant` and `salmon index`? Commonly `STDOUT` should be used for normal output messages and `STDERR` for errors or at worst warnings. Salmon writes most of the messages to `STDERR`. 1. `Version Info: This is the most recent version of Salmon.` is output to `STDOUT`. I find it useless. If salmon run some network connection to figure out its version it is `a)` prone to errors, `b)` I would expect a fat warning in the documentation a `phone home` feature is builtin, `c)` it is likely to fail on more network-restricted installations. Or, `d)`, the message is incorrect. I suggest drop the message altogether. 2. `salmon quant` writes a lot of normal messages to `STDERR`. Please use `STDOUT` instead. If a program exits with a non-zero exit code it is common to read its `STDERR` output to learn what was the cause for the error. It is awkward to realize there is lots of unrelated text. Please follow common rules on Unix. 3. The docs at http://salmon.readthedocs.io/en/latest/salmon.html did not mention the `fmd` index is just a plain index from `bwa`. Why don't you instruct users to use `bwa index` instead? It would be clearer (if that is the type of index you employ). 4. `salmon index` behavior. ```; salmon index -t Homo_sapiens.GRCh38.cdna.all.fa -i Homo_sapiens.GRCh38.cdna.all --type quasi -k 31; index [""Homo_sapiens.GRCh38.cdna.all""] did not previously exist . . . creating it; [2018-06-25 19:25:57.122] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; [2018-06-25 19:25:57.176] [jointLog] [warning] Entry with header [ENST00000434970.2], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-06-25 19:25:57.176] [jointLog] [warning] Entry with header [ENST00000448914.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); ...; [2018-06-25 19:26:07.297] [jointLog] [warning] Entry with header [ENST00000579054.1], had length l",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/242
https://github.com/COMBINE-lab/salmon/issues/242:664,Integrability,message,message,664,"Hi,; would you mind cleaning up the STDOUT and STDERR output from `salmon quant` and `salmon index`? Commonly `STDOUT` should be used for normal output messages and `STDERR` for errors or at worst warnings. Salmon writes most of the messages to `STDERR`. 1. `Version Info: This is the most recent version of Salmon.` is output to `STDOUT`. I find it useless. If salmon run some network connection to figure out its version it is `a)` prone to errors, `b)` I would expect a fat warning in the documentation a `phone home` feature is builtin, `c)` it is likely to fail on more network-restricted installations. Or, `d)`, the message is incorrect. I suggest drop the message altogether. 2. `salmon quant` writes a lot of normal messages to `STDERR`. Please use `STDOUT` instead. If a program exits with a non-zero exit code it is common to read its `STDERR` output to learn what was the cause for the error. It is awkward to realize there is lots of unrelated text. Please follow common rules on Unix. 3. The docs at http://salmon.readthedocs.io/en/latest/salmon.html did not mention the `fmd` index is just a plain index from `bwa`. Why don't you instruct users to use `bwa index` instead? It would be clearer (if that is the type of index you employ). 4. `salmon index` behavior. ```; salmon index -t Homo_sapiens.GRCh38.cdna.all.fa -i Homo_sapiens.GRCh38.cdna.all --type quasi -k 31; index [""Homo_sapiens.GRCh38.cdna.all""] did not previously exist . . . creating it; [2018-06-25 19:25:57.122] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; [2018-06-25 19:25:57.176] [jointLog] [warning] Entry with header [ENST00000434970.2], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-06-25 19:25:57.176] [jointLog] [warning] Entry with header [ENST00000448914.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); ...; [2018-06-25 19:26:07.297] [jointLog] [warning] Entry with header [ENST00000579054.1], had length l",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/242
https://github.com/COMBINE-lab/salmon/issues/242:725,Integrability,message,messages,725,"Hi,; would you mind cleaning up the STDOUT and STDERR output from `salmon quant` and `salmon index`? Commonly `STDOUT` should be used for normal output messages and `STDERR` for errors or at worst warnings. Salmon writes most of the messages to `STDERR`. 1. `Version Info: This is the most recent version of Salmon.` is output to `STDOUT`. I find it useless. If salmon run some network connection to figure out its version it is `a)` prone to errors, `b)` I would expect a fat warning in the documentation a `phone home` feature is builtin, `c)` it is likely to fail on more network-restricted installations. Or, `d)`, the message is incorrect. I suggest drop the message altogether. 2. `salmon quant` writes a lot of normal messages to `STDERR`. Please use `STDOUT` instead. If a program exits with a non-zero exit code it is common to read its `STDERR` output to learn what was the cause for the error. It is awkward to realize there is lots of unrelated text. Please follow common rules on Unix. 3. The docs at http://salmon.readthedocs.io/en/latest/salmon.html did not mention the `fmd` index is just a plain index from `bwa`. Why don't you instruct users to use `bwa index` instead? It would be clearer (if that is the type of index you employ). 4. `salmon index` behavior. ```; salmon index -t Homo_sapiens.GRCh38.cdna.all.fa -i Homo_sapiens.GRCh38.cdna.all --type quasi -k 31; index [""Homo_sapiens.GRCh38.cdna.all""] did not previously exist . . . creating it; [2018-06-25 19:25:57.122] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; [2018-06-25 19:25:57.176] [jointLog] [warning] Entry with header [ENST00000434970.2], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-06-25 19:25:57.176] [jointLog] [warning] Entry with header [ENST00000448914.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); ...; [2018-06-25 19:26:07.297] [jointLog] [warning] Entry with header [ENST00000579054.1], had length l",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/242
https://github.com/COMBINE-lab/salmon/issues/242:13184,Integrability,message,message,13184,"ssed 278000000 positions^M^Mprocessed 279000000 positions^M^Mprocessed 280000000 positions^M^Mprocessed 281000000 positions^M^Mprocessed 282000000 positions^M^Mprocessed 283000000 positions^M^Mprocessed 284000000 positions^M^Mprocessed 285000000 positions^M^Mprocessed 286000000 positions^M^Mprocessed 287000000 positions^M^Mprocessed 288000000 positions^M^Mprocessed 289000000 positions; khash had 109134690 keys; saving hash to disk . . . done; Elapsed time: 12.6069s; [2018-06-25 19:29:02.297] [jLog] [info] done building index; ```. It would be more interesting to see what filename is used for the index. Showing the ""basename"" of the index file is not very helpful. I would prefer to see the filename(s) on the beginning and end lines:. ```; index [""Homo_sapiens.GRCh38.cdna.all""] did not previously exist . . . creating it; [2018-06-25 19:25:57.122] [jLog] [info] building index; ...; [2018-06-25 19:29:02.297] [jLog] [info] done building index; ```. 5. The duplicates have same sequence or ID or both? The message should be clearer. I wonder what are these duplicates in a human cdna predicted, as available from `ftp://ftp.ensembl.org/pub/release-92/fasta/homo_sapiens/cdna`; :. ```; [2018-06-25 19:26:07.480] [jointLog] [warning] Removed 11768 transcripts that were sequence duplicates of indexed transcripts.; ```. 6. For the bwa-based index again, the logs are too verbose on one hand and on the second, they do not say what files were created. I doubt any file with *prefix* `Homo_sapiens.GRCh38.cdna.all/bwaidx` was created. ```; + salmon index -t Homo_sapiens.GRCh38.cdna.all.fa -i Homo_sapiens.GRCh38.cdna.all --type fmd; outputPrefix = ""Homo_sapiens.GRCh38.cdna.all/bwaidx""; [2018-06-25 19:29:02.497] [jLog] [info] building index; [bwa_index] Pack FASTA... 2.87 sec; [bwa_index] Construct BWT for the packed sequence...; [BWTIncCreate] textLength=609536484, availableWord=54888760; [BWTIncConstructFromPacked] 10 iterations done. 87569268 characters processed.; [BWTIncConstructFromP",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/242
https://github.com/COMBINE-lab/salmon/issues/242:13262,Safety,predict,predicted,13262,"ions^M^Mprocessed 281000000 positions^M^Mprocessed 282000000 positions^M^Mprocessed 283000000 positions^M^Mprocessed 284000000 positions^M^Mprocessed 285000000 positions^M^Mprocessed 286000000 positions^M^Mprocessed 287000000 positions^M^Mprocessed 288000000 positions^M^Mprocessed 289000000 positions; khash had 109134690 keys; saving hash to disk . . . done; Elapsed time: 12.6069s; [2018-06-25 19:29:02.297] [jLog] [info] done building index; ```. It would be more interesting to see what filename is used for the index. Showing the ""basename"" of the index file is not very helpful. I would prefer to see the filename(s) on the beginning and end lines:. ```; index [""Homo_sapiens.GRCh38.cdna.all""] did not previously exist . . . creating it; [2018-06-25 19:25:57.122] [jLog] [info] building index; ...; [2018-06-25 19:29:02.297] [jLog] [info] done building index; ```. 5. The duplicates have same sequence or ID or both? The message should be clearer. I wonder what are these duplicates in a human cdna predicted, as available from `ftp://ftp.ensembl.org/pub/release-92/fasta/homo_sapiens/cdna`; :. ```; [2018-06-25 19:26:07.480] [jointLog] [warning] Removed 11768 transcripts that were sequence duplicates of indexed transcripts.; ```. 6. For the bwa-based index again, the logs are too verbose on one hand and on the second, they do not say what files were created. I doubt any file with *prefix* `Homo_sapiens.GRCh38.cdna.all/bwaidx` was created. ```; + salmon index -t Homo_sapiens.GRCh38.cdna.all.fa -i Homo_sapiens.GRCh38.cdna.all --type fmd; outputPrefix = ""Homo_sapiens.GRCh38.cdna.all/bwaidx""; [2018-06-25 19:29:02.497] [jLog] [info] building index; [bwa_index] Pack FASTA... 2.87 sec; [bwa_index] Construct BWT for the packed sequence...; [BWTIncCreate] textLength=609536484, availableWord=54888760; [BWTIncConstructFromPacked] 10 iterations done. 87569268 characters processed.; [BWTIncConstructFromPacked] 20 iterations done. 164630980 characters processed.; [BWTIncConstructFromPacked",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/242
https://github.com/COMBINE-lab/salmon/issues/242:12592,Security,hash,hash,12592,tions^M^Mprocessed 231000000 positions^M^Mprocessed 232000000 positions^M^Mprocessed 233000000 positions^M^Mprocessed 234000000 positions^M^Mprocessed 235000000 positions^M^Mprocessed 236000000 positions^M^Mprocessed 237000000 positions^M^Mprocessed 238000000 positions^M^Mprocessed 239000000 positions^M^Mprocessed 240000000 positions^M^Mprocessed 241000000 positions^M^Mprocessed 242000000 positions^M^Mprocessed 243000000 positions^M^Mprocessed 244000000 positions^M^Mprocessed 245000000 positions^M^Mprocessed 246000000 positions^M^Mprocessed 247000000 positions^M^Mprocessed 248000000 positions^M^Mprocessed 249000000 positions^M^Mprocessed 250000000 positions^M^Mprocessed 251000000 positions^M^Mprocessed 252000000 positions^M^Mprocessed 253000000 positions^M^Mprocessed 254000000 positions^M^Mprocessed 255000000 positions^M^Mprocessed 256000000 positions^M^Mprocessed 257000000 positions^M^Mprocessed 258000000 positions^M^Mprocessed 259000000 positions^M^Mprocessed 260000000 positions^M^Mprocessed 261000000 positions^M^Mprocessed 262000000 positions^M^Mprocessed 263000000 positions^M^Mprocessed 264000000 positions^M^Mprocessed 265000000 positions^M^Mprocessed 266000000 positions^M^Mprocessed 267000000 positions^M^Mprocessed 268000000 positions^M^Mprocessed 269000000 positions^M^Mprocessed 270000000 positions^M^Mprocessed 271000000 positions^M^Mprocessed 272000000 positions^M^Mprocessed 273000000 positions^M^Mprocessed 274000000 positions^M^Mprocessed 275000000 positions^M^Mprocessed 276000000 positions^M^Mprocessed 277000000 positions^M^Mprocessed 278000000 positions^M^Mprocessed 279000000 positions^M^Mprocessed 280000000 positions^M^Mprocessed 281000000 positions^M^Mprocessed 282000000 positions^M^Mprocessed 283000000 positions^M^Mprocessed 284000000 positions^M^Mprocessed 285000000 positions^M^Mprocessed 286000000 positions^M^Mprocessed 287000000 positions^M^Mprocessed 288000000 positions^M^Mprocessed 289000000 positions; khash had 109134690 keys; saving hash to disk .,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/242
https://github.com/COMBINE-lab/salmon/issues/242:15835,Security,hash,hash,15835,"ctFromPacked] 70 iterations done. 438888868 characters processed.; [BWTIncConstructFromPacked] 80 iterations done. 476860644 characters processed.; [BWTIncConstructFromPacked] 90 iterations done. 510606036 characters processed.; [BWTIncConstructFromPacked] 100 iterations done. 540594980 characters processed.; [BWTIncConstructFromPacked] 110 iterations done. 567245236 characters processed.; [BWTIncConstructFromPacked] 120 iterations done. 590928020 characters processed.; [bwa_index] 279.06 seconds elapse.; [bwa_index] Update BWT... 1.72 sec; [bwa_index] Pack forward-only FASTA... 1.90 sec; [bwa_index] Construct SA from BWT and Occ... 59.56 sec; [2018-06-25 19:34:53.084] [jLog] [info] done building index; ```. Doh, something unexpected from the logs, isn't it?. ```; $ ls -latr ftp.ensembl.org/pub/release-92/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all; total 8374704; drwx------. 3 mmokrejs mmokrejs 4096 Jun 25 19:25 ..; -rw-r--r--. 1 mmokrejs mmokrejs 36158409 Jun 25 19:26 rsd.bin; -rw-r--r--. 1 mmokrejs mmokrejs 423777 Jun 25 19:26 duplicate_clusters.tsv; -rw-r--r--. 1 mmokrejs mmokrejs 294997212 Jun 25 19:26 txpInfo.bin; -rw-r--r--. 1 mmokrejs mmokrejs 1157068836 Jun 25 19:26 sa.bin; -rw-r--r--. 1 mmokrejs mmokrejs 1779709484 Jun 25 19:29 hash.bin; -rw-r--r--. 1 mmokrejs mmokrejs 75 Jun 25 19:29 refInfo.json; -rw-r--r--. 1 mmokrejs mmokrejs 9816 Jun 25 19:29 quasi_index.log; -rw-r--r--. 1 mmokrejs mmokrejs 666 Jun 25 19:29 header.json; -rw-r--r--. 1 mmokrejs mmokrejs 304768324 Jun 25 19:33 bwaidx.bwt; -rw-r--r--. 1 mmokrejs mmokrejs 76192062 Jun 25 19:33 bwaidx.pac; -rw-r--r--. 1 mmokrejs mmokrejs 50007825 Jun 25 19:33 bwaidx.ann; -rw-r--r--. 1 mmokrejs mmokrejs 89 Jun 25 19:33 bwaidx.amb; drwxr-xr-x. 2 mmokrejs mmokrejs 4096 Jun 25 19:34 .; -rw-r--r--. 1 mmokrejs mmokrejs 95 Jun 25 19:34 versionInfo.json; -rw-r--r--. 1 mmokrejs mmokrejs 115 Jun 25 19:34 indexing.log; -rw-r--r--. 1 mmokrejs mmokrejs 4876291928 Jun 25 19:34 bwaidx.sa; $; ```. Hope this helps.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/242
https://github.com/COMBINE-lab/salmon/issues/242:13534,Testability,log,logs,13534,"sh had 109134690 keys; saving hash to disk . . . done; Elapsed time: 12.6069s; [2018-06-25 19:29:02.297] [jLog] [info] done building index; ```. It would be more interesting to see what filename is used for the index. Showing the ""basename"" of the index file is not very helpful. I would prefer to see the filename(s) on the beginning and end lines:. ```; index [""Homo_sapiens.GRCh38.cdna.all""] did not previously exist . . . creating it; [2018-06-25 19:25:57.122] [jLog] [info] building index; ...; [2018-06-25 19:29:02.297] [jLog] [info] done building index; ```. 5. The duplicates have same sequence or ID or both? The message should be clearer. I wonder what are these duplicates in a human cdna predicted, as available from `ftp://ftp.ensembl.org/pub/release-92/fasta/homo_sapiens/cdna`; :. ```; [2018-06-25 19:26:07.480] [jointLog] [warning] Removed 11768 transcripts that were sequence duplicates of indexed transcripts.; ```. 6. For the bwa-based index again, the logs are too verbose on one hand and on the second, they do not say what files were created. I doubt any file with *prefix* `Homo_sapiens.GRCh38.cdna.all/bwaidx` was created. ```; + salmon index -t Homo_sapiens.GRCh38.cdna.all.fa -i Homo_sapiens.GRCh38.cdna.all --type fmd; outputPrefix = ""Homo_sapiens.GRCh38.cdna.all/bwaidx""; [2018-06-25 19:29:02.497] [jLog] [info] building index; [bwa_index] Pack FASTA... 2.87 sec; [bwa_index] Construct BWT for the packed sequence...; [BWTIncCreate] textLength=609536484, availableWord=54888760; [BWTIncConstructFromPacked] 10 iterations done. 87569268 characters processed.; [BWTIncConstructFromPacked] 20 iterations done. 164630980 characters processed.; [BWTIncConstructFromPacked] 30 iterations done. 233119636 characters processed.; [BWTIncConstructFromPacked] 40 iterations done. 293988548 characters processed.; [BWTIncConstructFromPacked] 50 iterations done. 348084948 characters processed.; [BWTIncConstructFromPacked] 60 iterations done. 396161956 characters processed.; [BWTIncC",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/242
https://github.com/COMBINE-lab/salmon/issues/242:15321,Testability,log,logs,15321,"[BWTIncConstructFromPacked] 40 iterations done. 293988548 characters processed.; [BWTIncConstructFromPacked] 50 iterations done. 348084948 characters processed.; [BWTIncConstructFromPacked] 60 iterations done. 396161956 characters processed.; [BWTIncConstructFromPacked] 70 iterations done. 438888868 characters processed.; [BWTIncConstructFromPacked] 80 iterations done. 476860644 characters processed.; [BWTIncConstructFromPacked] 90 iterations done. 510606036 characters processed.; [BWTIncConstructFromPacked] 100 iterations done. 540594980 characters processed.; [BWTIncConstructFromPacked] 110 iterations done. 567245236 characters processed.; [BWTIncConstructFromPacked] 120 iterations done. 590928020 characters processed.; [bwa_index] 279.06 seconds elapse.; [bwa_index] Update BWT... 1.72 sec; [bwa_index] Pack forward-only FASTA... 1.90 sec; [bwa_index] Construct SA from BWT and Occ... 59.56 sec; [2018-06-25 19:34:53.084] [jLog] [info] done building index; ```. Doh, something unexpected from the logs, isn't it?. ```; $ ls -latr ftp.ensembl.org/pub/release-92/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all; total 8374704; drwx------. 3 mmokrejs mmokrejs 4096 Jun 25 19:25 ..; -rw-r--r--. 1 mmokrejs mmokrejs 36158409 Jun 25 19:26 rsd.bin; -rw-r--r--. 1 mmokrejs mmokrejs 423777 Jun 25 19:26 duplicate_clusters.tsv; -rw-r--r--. 1 mmokrejs mmokrejs 294997212 Jun 25 19:26 txpInfo.bin; -rw-r--r--. 1 mmokrejs mmokrejs 1157068836 Jun 25 19:26 sa.bin; -rw-r--r--. 1 mmokrejs mmokrejs 1779709484 Jun 25 19:29 hash.bin; -rw-r--r--. 1 mmokrejs mmokrejs 75 Jun 25 19:29 refInfo.json; -rw-r--r--. 1 mmokrejs mmokrejs 9816 Jun 25 19:29 quasi_index.log; -rw-r--r--. 1 mmokrejs mmokrejs 666 Jun 25 19:29 header.json; -rw-r--r--. 1 mmokrejs mmokrejs 304768324 Jun 25 19:33 bwaidx.bwt; -rw-r--r--. 1 mmokrejs mmokrejs 76192062 Jun 25 19:33 bwaidx.pac; -rw-r--r--. 1 mmokrejs mmokrejs 50007825 Jun 25 19:33 bwaidx.ann; -rw-r--r--. 1 mmokrejs mmokrejs 89 Jun 25 19:33 bwaidx.amb; drwxr-xr-x. 2 mm",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/242
https://github.com/COMBINE-lab/salmon/issues/242:15969,Testability,log,log,15969,"ctFromPacked] 70 iterations done. 438888868 characters processed.; [BWTIncConstructFromPacked] 80 iterations done. 476860644 characters processed.; [BWTIncConstructFromPacked] 90 iterations done. 510606036 characters processed.; [BWTIncConstructFromPacked] 100 iterations done. 540594980 characters processed.; [BWTIncConstructFromPacked] 110 iterations done. 567245236 characters processed.; [BWTIncConstructFromPacked] 120 iterations done. 590928020 characters processed.; [bwa_index] 279.06 seconds elapse.; [bwa_index] Update BWT... 1.72 sec; [bwa_index] Pack forward-only FASTA... 1.90 sec; [bwa_index] Construct SA from BWT and Occ... 59.56 sec; [2018-06-25 19:34:53.084] [jLog] [info] done building index; ```. Doh, something unexpected from the logs, isn't it?. ```; $ ls -latr ftp.ensembl.org/pub/release-92/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all; total 8374704; drwx------. 3 mmokrejs mmokrejs 4096 Jun 25 19:25 ..; -rw-r--r--. 1 mmokrejs mmokrejs 36158409 Jun 25 19:26 rsd.bin; -rw-r--r--. 1 mmokrejs mmokrejs 423777 Jun 25 19:26 duplicate_clusters.tsv; -rw-r--r--. 1 mmokrejs mmokrejs 294997212 Jun 25 19:26 txpInfo.bin; -rw-r--r--. 1 mmokrejs mmokrejs 1157068836 Jun 25 19:26 sa.bin; -rw-r--r--. 1 mmokrejs mmokrejs 1779709484 Jun 25 19:29 hash.bin; -rw-r--r--. 1 mmokrejs mmokrejs 75 Jun 25 19:29 refInfo.json; -rw-r--r--. 1 mmokrejs mmokrejs 9816 Jun 25 19:29 quasi_index.log; -rw-r--r--. 1 mmokrejs mmokrejs 666 Jun 25 19:29 header.json; -rw-r--r--. 1 mmokrejs mmokrejs 304768324 Jun 25 19:33 bwaidx.bwt; -rw-r--r--. 1 mmokrejs mmokrejs 76192062 Jun 25 19:33 bwaidx.pac; -rw-r--r--. 1 mmokrejs mmokrejs 50007825 Jun 25 19:33 bwaidx.ann; -rw-r--r--. 1 mmokrejs mmokrejs 89 Jun 25 19:33 bwaidx.amb; drwxr-xr-x. 2 mmokrejs mmokrejs 4096 Jun 25 19:34 .; -rw-r--r--. 1 mmokrejs mmokrejs 95 Jun 25 19:34 versionInfo.json; -rw-r--r--. 1 mmokrejs mmokrejs 115 Jun 25 19:34 indexing.log; -rw-r--r--. 1 mmokrejs mmokrejs 4876291928 Jun 25 19:34 bwaidx.sa; $; ```. Hope this helps.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/242
https://github.com/COMBINE-lab/salmon/issues/242:16472,Testability,log,log,16472,"ctFromPacked] 70 iterations done. 438888868 characters processed.; [BWTIncConstructFromPacked] 80 iterations done. 476860644 characters processed.; [BWTIncConstructFromPacked] 90 iterations done. 510606036 characters processed.; [BWTIncConstructFromPacked] 100 iterations done. 540594980 characters processed.; [BWTIncConstructFromPacked] 110 iterations done. 567245236 characters processed.; [BWTIncConstructFromPacked] 120 iterations done. 590928020 characters processed.; [bwa_index] 279.06 seconds elapse.; [bwa_index] Update BWT... 1.72 sec; [bwa_index] Pack forward-only FASTA... 1.90 sec; [bwa_index] Construct SA from BWT and Occ... 59.56 sec; [2018-06-25 19:34:53.084] [jLog] [info] done building index; ```. Doh, something unexpected from the logs, isn't it?. ```; $ ls -latr ftp.ensembl.org/pub/release-92/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all; total 8374704; drwx------. 3 mmokrejs mmokrejs 4096 Jun 25 19:25 ..; -rw-r--r--. 1 mmokrejs mmokrejs 36158409 Jun 25 19:26 rsd.bin; -rw-r--r--. 1 mmokrejs mmokrejs 423777 Jun 25 19:26 duplicate_clusters.tsv; -rw-r--r--. 1 mmokrejs mmokrejs 294997212 Jun 25 19:26 txpInfo.bin; -rw-r--r--. 1 mmokrejs mmokrejs 1157068836 Jun 25 19:26 sa.bin; -rw-r--r--. 1 mmokrejs mmokrejs 1779709484 Jun 25 19:29 hash.bin; -rw-r--r--. 1 mmokrejs mmokrejs 75 Jun 25 19:29 refInfo.json; -rw-r--r--. 1 mmokrejs mmokrejs 9816 Jun 25 19:29 quasi_index.log; -rw-r--r--. 1 mmokrejs mmokrejs 666 Jun 25 19:29 header.json; -rw-r--r--. 1 mmokrejs mmokrejs 304768324 Jun 25 19:33 bwaidx.bwt; -rw-r--r--. 1 mmokrejs mmokrejs 76192062 Jun 25 19:33 bwaidx.pac; -rw-r--r--. 1 mmokrejs mmokrejs 50007825 Jun 25 19:33 bwaidx.ann; -rw-r--r--. 1 mmokrejs mmokrejs 89 Jun 25 19:33 bwaidx.amb; drwxr-xr-x. 2 mmokrejs mmokrejs 4096 Jun 25 19:34 .; -rw-r--r--. 1 mmokrejs mmokrejs 95 Jun 25 19:34 versionInfo.json; -rw-r--r--. 1 mmokrejs mmokrejs 115 Jun 25 19:34 indexing.log; -rw-r--r--. 1 mmokrejs mmokrejs 4876291928 Jun 25 19:34 bwaidx.sa; $; ```. Hope this helps.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/242
https://github.com/COMBINE-lab/salmon/issues/242:865,Usability,learn,learn,865,"Hi,; would you mind cleaning up the STDOUT and STDERR output from `salmon quant` and `salmon index`? Commonly `STDOUT` should be used for normal output messages and `STDERR` for errors or at worst warnings. Salmon writes most of the messages to `STDERR`. 1. `Version Info: This is the most recent version of Salmon.` is output to `STDOUT`. I find it useless. If salmon run some network connection to figure out its version it is `a)` prone to errors, `b)` I would expect a fat warning in the documentation a `phone home` feature is builtin, `c)` it is likely to fail on more network-restricted installations. Or, `d)`, the message is incorrect. I suggest drop the message altogether. 2. `salmon quant` writes a lot of normal messages to `STDERR`. Please use `STDOUT` instead. If a program exits with a non-zero exit code it is common to read its `STDERR` output to learn what was the cause for the error. It is awkward to realize there is lots of unrelated text. Please follow common rules on Unix. 3. The docs at http://salmon.readthedocs.io/en/latest/salmon.html did not mention the `fmd` index is just a plain index from `bwa`. Why don't you instruct users to use `bwa index` instead? It would be clearer (if that is the type of index you employ). 4. `salmon index` behavior. ```; salmon index -t Homo_sapiens.GRCh38.cdna.all.fa -i Homo_sapiens.GRCh38.cdna.all --type quasi -k 31; index [""Homo_sapiens.GRCh38.cdna.all""] did not previously exist . . . creating it; [2018-06-25 19:25:57.122] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; [2018-06-25 19:25:57.176] [jointLog] [warning] Entry with header [ENST00000434970.2], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-06-25 19:25:57.176] [jointLog] [warning] Entry with header [ENST00000448914.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); ...; [2018-06-25 19:26:07.297] [jointLog] [warning] Entry with header [ENST00000579054.1], had length l",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/242
https://github.com/COMBINE-lab/salmon/issues/242:1200,Usability,clear,clearer,1200," worst warnings. Salmon writes most of the messages to `STDERR`. 1. `Version Info: This is the most recent version of Salmon.` is output to `STDOUT`. I find it useless. If salmon run some network connection to figure out its version it is `a)` prone to errors, `b)` I would expect a fat warning in the documentation a `phone home` feature is builtin, `c)` it is likely to fail on more network-restricted installations. Or, `d)`, the message is incorrect. I suggest drop the message altogether. 2. `salmon quant` writes a lot of normal messages to `STDERR`. Please use `STDOUT` instead. If a program exits with a non-zero exit code it is common to read its `STDERR` output to learn what was the cause for the error. It is awkward to realize there is lots of unrelated text. Please follow common rules on Unix. 3. The docs at http://salmon.readthedocs.io/en/latest/salmon.html did not mention the `fmd` index is just a plain index from `bwa`. Why don't you instruct users to use `bwa index` instead? It would be clearer (if that is the type of index you employ). 4. `salmon index` behavior. ```; salmon index -t Homo_sapiens.GRCh38.cdna.all.fa -i Homo_sapiens.GRCh38.cdna.all --type quasi -k 31; index [""Homo_sapiens.GRCh38.cdna.all""] did not previously exist . . . creating it; [2018-06-25 19:25:57.122] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; [2018-06-25 19:25:57.176] [jointLog] [warning] Entry with header [ENST00000434970.2], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-06-25 19:25:57.176] [jointLog] [warning] Entry with header [ENST00000448914.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); ...; [2018-06-25 19:26:07.297] [jointLog] [warning] Entry with header [ENST00000579054.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-06-25 19:26:07.451] [jointLog] [warning] Entry with header [ENST00000634174.1], had length less than the k-mer length ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/242
https://github.com/COMBINE-lab/salmon/issues/242:13202,Usability,clear,clearer,13202,"ssed 278000000 positions^M^Mprocessed 279000000 positions^M^Mprocessed 280000000 positions^M^Mprocessed 281000000 positions^M^Mprocessed 282000000 positions^M^Mprocessed 283000000 positions^M^Mprocessed 284000000 positions^M^Mprocessed 285000000 positions^M^Mprocessed 286000000 positions^M^Mprocessed 287000000 positions^M^Mprocessed 288000000 positions^M^Mprocessed 289000000 positions; khash had 109134690 keys; saving hash to disk . . . done; Elapsed time: 12.6069s; [2018-06-25 19:29:02.297] [jLog] [info] done building index; ```. It would be more interesting to see what filename is used for the index. Showing the ""basename"" of the index file is not very helpful. I would prefer to see the filename(s) on the beginning and end lines:. ```; index [""Homo_sapiens.GRCh38.cdna.all""] did not previously exist . . . creating it; [2018-06-25 19:25:57.122] [jLog] [info] building index; ...; [2018-06-25 19:29:02.297] [jLog] [info] done building index; ```. 5. The duplicates have same sequence or ID or both? The message should be clearer. I wonder what are these duplicates in a human cdna predicted, as available from `ftp://ftp.ensembl.org/pub/release-92/fasta/homo_sapiens/cdna`; :. ```; [2018-06-25 19:26:07.480] [jointLog] [warning] Removed 11768 transcripts that were sequence duplicates of indexed transcripts.; ```. 6. For the bwa-based index again, the logs are too verbose on one hand and on the second, they do not say what files were created. I doubt any file with *prefix* `Homo_sapiens.GRCh38.cdna.all/bwaidx` was created. ```; + salmon index -t Homo_sapiens.GRCh38.cdna.all.fa -i Homo_sapiens.GRCh38.cdna.all --type fmd; outputPrefix = ""Homo_sapiens.GRCh38.cdna.all/bwaidx""; [2018-06-25 19:29:02.497] [jLog] [info] building index; [bwa_index] Pack FASTA... 2.87 sec; [bwa_index] Construct BWT for the packed sequence...; [BWTIncCreate] textLength=609536484, availableWord=54888760; [BWTIncConstructFromPacked] 10 iterations done. 87569268 characters processed.; [BWTIncConstructFromP",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/242
https://github.com/COMBINE-lab/salmon/issues/243:54,Availability,avail,available,54,"I have been trying to use the salmon docker container available on docker hub. When I run salmon quant I am able to load all of the files and start the program, but I get a killed message while loading hash. I get an empty log file and empty folders created after the container is killed. **To Reproduce**; I run the following command to run the container:; `docker run -v /Users/caz3so/workspaces/salmon_docker:/temp -w /temp -ti combinelab/salmon`. The following is the output:; <img width=""1389"" alt=""screenshot 2018-06-27 11 15 56"" src=""https://user-images.githubusercontent.com/31480706/41983246-8296bb76-79fb-11e8-9710-c38ec051b7e7.png"">. **Expected behavior**; I have salmon installed on my machine and was able to run these files with no problem. It is only when I am using the docker container, so it could be a docker related problem. . **Desktop (please complete the following information):**; I am using a 2017 Macbook pro with 16 GB 2133 MHz LPDDR3 memory and a 2.8 GHz Intel Core i7 processor.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/243
https://github.com/COMBINE-lab/salmon/issues/243:682,Deployability,install,installed,682,"I have been trying to use the salmon docker container available on docker hub. When I run salmon quant I am able to load all of the files and start the program, but I get a killed message while loading hash. I get an empty log file and empty folders created after the container is killed. **To Reproduce**; I run the following command to run the container:; `docker run -v /Users/caz3so/workspaces/salmon_docker:/temp -w /temp -ti combinelab/salmon`. The following is the output:; <img width=""1389"" alt=""screenshot 2018-06-27 11 15 56"" src=""https://user-images.githubusercontent.com/31480706/41983246-8296bb76-79fb-11e8-9710-c38ec051b7e7.png"">. **Expected behavior**; I have salmon installed on my machine and was able to run these files with no problem. It is only when I am using the docker container, so it could be a docker related problem. . **Desktop (please complete the following information):**; I am using a 2017 Macbook pro with 16 GB 2133 MHz LPDDR3 memory and a 2.8 GHz Intel Core i7 processor.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/243
https://github.com/COMBINE-lab/salmon/issues/243:180,Integrability,message,message,180,"I have been trying to use the salmon docker container available on docker hub. When I run salmon quant I am able to load all of the files and start the program, but I get a killed message while loading hash. I get an empty log file and empty folders created after the container is killed. **To Reproduce**; I run the following command to run the container:; `docker run -v /Users/caz3so/workspaces/salmon_docker:/temp -w /temp -ti combinelab/salmon`. The following is the output:; <img width=""1389"" alt=""screenshot 2018-06-27 11 15 56"" src=""https://user-images.githubusercontent.com/31480706/41983246-8296bb76-79fb-11e8-9710-c38ec051b7e7.png"">. **Expected behavior**; I have salmon installed on my machine and was able to run these files with no problem. It is only when I am using the docker container, so it could be a docker related problem. . **Desktop (please complete the following information):**; I am using a 2017 Macbook pro with 16 GB 2133 MHz LPDDR3 memory and a 2.8 GHz Intel Core i7 processor.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/243
https://github.com/COMBINE-lab/salmon/issues/243:116,Performance,load,load,116,"I have been trying to use the salmon docker container available on docker hub. When I run salmon quant I am able to load all of the files and start the program, but I get a killed message while loading hash. I get an empty log file and empty folders created after the container is killed. **To Reproduce**; I run the following command to run the container:; `docker run -v /Users/caz3so/workspaces/salmon_docker:/temp -w /temp -ti combinelab/salmon`. The following is the output:; <img width=""1389"" alt=""screenshot 2018-06-27 11 15 56"" src=""https://user-images.githubusercontent.com/31480706/41983246-8296bb76-79fb-11e8-9710-c38ec051b7e7.png"">. **Expected behavior**; I have salmon installed on my machine and was able to run these files with no problem. It is only when I am using the docker container, so it could be a docker related problem. . **Desktop (please complete the following information):**; I am using a 2017 Macbook pro with 16 GB 2133 MHz LPDDR3 memory and a 2.8 GHz Intel Core i7 processor.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/243
https://github.com/COMBINE-lab/salmon/issues/243:194,Performance,load,loading,194,"I have been trying to use the salmon docker container available on docker hub. When I run salmon quant I am able to load all of the files and start the program, but I get a killed message while loading hash. I get an empty log file and empty folders created after the container is killed. **To Reproduce**; I run the following command to run the container:; `docker run -v /Users/caz3so/workspaces/salmon_docker:/temp -w /temp -ti combinelab/salmon`. The following is the output:; <img width=""1389"" alt=""screenshot 2018-06-27 11 15 56"" src=""https://user-images.githubusercontent.com/31480706/41983246-8296bb76-79fb-11e8-9710-c38ec051b7e7.png"">. **Expected behavior**; I have salmon installed on my machine and was able to run these files with no problem. It is only when I am using the docker container, so it could be a docker related problem. . **Desktop (please complete the following information):**; I am using a 2017 Macbook pro with 16 GB 2133 MHz LPDDR3 memory and a 2.8 GHz Intel Core i7 processor.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/243
https://github.com/COMBINE-lab/salmon/issues/243:202,Security,hash,hash,202,"I have been trying to use the salmon docker container available on docker hub. When I run salmon quant I am able to load all of the files and start the program, but I get a killed message while loading hash. I get an empty log file and empty folders created after the container is killed. **To Reproduce**; I run the following command to run the container:; `docker run -v /Users/caz3so/workspaces/salmon_docker:/temp -w /temp -ti combinelab/salmon`. The following is the output:; <img width=""1389"" alt=""screenshot 2018-06-27 11 15 56"" src=""https://user-images.githubusercontent.com/31480706/41983246-8296bb76-79fb-11e8-9710-c38ec051b7e7.png"">. **Expected behavior**; I have salmon installed on my machine and was able to run these files with no problem. It is only when I am using the docker container, so it could be a docker related problem. . **Desktop (please complete the following information):**; I am using a 2017 Macbook pro with 16 GB 2133 MHz LPDDR3 memory and a 2.8 GHz Intel Core i7 processor.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/243
https://github.com/COMBINE-lab/salmon/issues/243:223,Testability,log,log,223,"I have been trying to use the salmon docker container available on docker hub. When I run salmon quant I am able to load all of the files and start the program, but I get a killed message while loading hash. I get an empty log file and empty folders created after the container is killed. **To Reproduce**; I run the following command to run the container:; `docker run -v /Users/caz3so/workspaces/salmon_docker:/temp -w /temp -ti combinelab/salmon`. The following is the output:; <img width=""1389"" alt=""screenshot 2018-06-27 11 15 56"" src=""https://user-images.githubusercontent.com/31480706/41983246-8296bb76-79fb-11e8-9710-c38ec051b7e7.png"">. **Expected behavior**; I have salmon installed on my machine and was able to run these files with no problem. It is only when I am using the docker container, so it could be a docker related problem. . **Desktop (please complete the following information):**; I am using a 2017 Macbook pro with 16 GB 2133 MHz LPDDR3 memory and a 2.8 GHz Intel Core i7 processor.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/243
https://github.com/COMBINE-lab/salmon/issues/244:131,Deployability,install,install,131,The git clone doesn't work. ```; git clone git@github.com:COMBINE-lab/salmon.git; cd salmon; mkdir build; cd build; cmake ..; make install; ```. This should work:; ```; git clone https://github.com/COMBINE-lab/salmon.git; ```,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/244
https://github.com/COMBINE-lab/salmon/issues/245:113,Availability,error,error,113,"Hi, I'm trying to use Alevin on a 10X v2 chemistry dataset, and after the preprocessing stpe I get the following error:; ```; Analyzed 1137 cells (11% of all).; ERROR: cell doesn't have any read count; ```; I tried looking at the documentation and previous tickets, but didn't find anything mentioning this issue. Is there any suggestion on how to address it?. The full terminal output is below. Thanks. ```; salmon alevin -lISR -1 cDNA_Small_S1_L001_R1_001.fastq.gz -2 cDNA_Small_S1_L001_R2_001.fastq.gz --chromium -i index -p 20 -o alevin_output9 --tgMap txp2gene.tsv --dumpCsvCounts; Version Info: This is the most recent version of Salmon.; Logs will be written to alevin_output9/logs; ### salmon (single-cell-based) v0.10.2; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ mates1 ] => { cDNA_Small_S1_L001_R1_001.fastq.gz }; ### [ mates2 ] => { cDNA_Small_S1_L001_R2_001.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { index }; ### [ threads ] => { 20 }; ### [ output ] => { alevin_output9 }; ### [ tgMap ] => { txp2gene.tsv }; ### [ dumpCsvCounts ] => { }. [2018-06-30 22:10:28.044] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-06-30 22:10:28.048] [alevinLog] [info] Processing barcodes files (if Present). processed 17 Million barcodes. [2018-06-30 22:10:47.141] [alevinLog] [info] Done barcode density calculation.; [2018-06-30 22:10:47.141] [alevinLog] [info] # Barcodes Used: 17712582 / 17712585.; [2018-06-30 22:10:52.008] [alevinLog] [info] Knee found left boundary at 9447; [2018-06-30 22:10:52.498] [alevinLog] [warning] Gauss Prediction 0 Too far from knee prediction skipping it; [2018-06-30 22:10:52.498] [alevinLog] [info] Learned InvCov: 457.073 normfactor: 260.286; [2018-06-30 22:10:52.498] [alevinLog] [info] Total 10434(has 987 low confidence) barcodes; [2018-06-30 22:10:52.530] [alevinLog] [info] Done True Barcode Sampling; [2018-06-30 22:10:53.101] [alevinLo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/245
https://github.com/COMBINE-lab/salmon/issues/245:161,Availability,ERROR,ERROR,161,"Hi, I'm trying to use Alevin on a 10X v2 chemistry dataset, and after the preprocessing stpe I get the following error:; ```; Analyzed 1137 cells (11% of all).; ERROR: cell doesn't have any read count; ```; I tried looking at the documentation and previous tickets, but didn't find anything mentioning this issue. Is there any suggestion on how to address it?. The full terminal output is below. Thanks. ```; salmon alevin -lISR -1 cDNA_Small_S1_L001_R1_001.fastq.gz -2 cDNA_Small_S1_L001_R2_001.fastq.gz --chromium -i index -p 20 -o alevin_output9 --tgMap txp2gene.tsv --dumpCsvCounts; Version Info: This is the most recent version of Salmon.; Logs will be written to alevin_output9/logs; ### salmon (single-cell-based) v0.10.2; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ mates1 ] => { cDNA_Small_S1_L001_R1_001.fastq.gz }; ### [ mates2 ] => { cDNA_Small_S1_L001_R2_001.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { index }; ### [ threads ] => { 20 }; ### [ output ] => { alevin_output9 }; ### [ tgMap ] => { txp2gene.tsv }; ### [ dumpCsvCounts ] => { }. [2018-06-30 22:10:28.044] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-06-30 22:10:28.048] [alevinLog] [info] Processing barcodes files (if Present). processed 17 Million barcodes. [2018-06-30 22:10:47.141] [alevinLog] [info] Done barcode density calculation.; [2018-06-30 22:10:47.141] [alevinLog] [info] # Barcodes Used: 17712582 / 17712585.; [2018-06-30 22:10:52.008] [alevinLog] [info] Knee found left boundary at 9447; [2018-06-30 22:10:52.498] [alevinLog] [warning] Gauss Prediction 0 Too far from knee prediction skipping it; [2018-06-30 22:10:52.498] [alevinLog] [info] Learned InvCov: 457.073 normfactor: 260.286; [2018-06-30 22:10:52.498] [alevinLog] [info] Total 10434(has 987 low confidence) barcodes; [2018-06-30 22:10:52.530] [alevinLog] [info] Done True Barcode Sampling; [2018-06-30 22:10:53.101] [alevinLo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/245
https://github.com/COMBINE-lab/salmon/issues/245:5946,Availability,ERROR,ERROR,5946,nfo] Thread saw mini-batch with a maximum of 9.94% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.26% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.30% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.56% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.48% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.16% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.02% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 9.84% zero probability fragments; [2018-06-30 22:12:13.117] [jointLog] [info] Thread saw mini-batch with a maximum of 10.24% zero probability fragments; [2018-06-30 22:12:13.120] [jointLog] [info] Thread saw mini-batch with a maximum of 10.88% zero probability fragments; [2018-06-30 22:12:13.141] [jointLog] [info] Thread saw mini-batch with a maximum of 10.26% zero probability fragments; [2018-06-30 22:12:13.146] [jointLog] [info] Thread saw mini-batch with a maximum of 10.14% zero probability fragments; [2018-06-30 22:12:13.160] [jointLog] [info] Thread saw mini-batch with a maximum of 10.24% zero probability fragments. [2018-06-30 22:12:13.224] [jointLog] [info] Computed 22103 rich equivalence classes for further processing; [2018-06-30 22:12:13.224] [jointLog] [info] Counted 12658995 total reads in the equivalence classes; [2018-06-30 22:12:13.224] [jointLog] [info] Mapping rate = 71.4689%. [2018-06-30 22:12:13.224] [jointLog] [info] finished quantifyLibrary(); [2018-06-30 22:12:13.424] [alevinLog] [info] Starting optimizer. Analyzed 1137 cells (11% of all).; ERROR: cell doesn't have any read count; ```,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/245
https://github.com/COMBINE-lab/salmon/issues/245:2549,Performance,Load,Loading,2549,"og] [info] Knee found left boundary at 9447; [2018-06-30 22:10:52.498] [alevinLog] [warning] Gauss Prediction 0 Too far from knee prediction skipping it; [2018-06-30 22:10:52.498] [alevinLog] [info] Learned InvCov: 457.073 normfactor: 260.286; [2018-06-30 22:10:52.498] [alevinLog] [info] Total 10434(has 987 low confidence) barcodes; [2018-06-30 22:10:52.530] [alevinLog] [info] Done True Barcode Sampling; [2018-06-30 22:10:53.101] [alevinLog] [info] Done populating Z matrix; [2018-06-30 22:10:53.103] [alevinLog] [info] Done indexing Barcodes; [2018-06-30 22:10:53.104] [alevinLog] [info] Total Unique barcodes found: 263650; [2018-06-30 22:10:53.104] [alevinLog] [info] Used Barcodes except Whitelist: 5556; [2018-06-30 22:10:53.248] [jointLog] [info] There is 1 library.; [2018-06-30 22:10:53.248] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-06-30 22:10:53.248] [alevinLog] [info] parsing read library format; [2018-06-30 22:10:53.308] [jointLog] [info] Loading Quasi index; [2018-06-30 22:10:53.308] [jointLog] [info] Loading 32-bit quasi index; [2018-06-30 22:10:53.308] [stderrLog] [info] Loading Suffix Array; [2018-06-30 22:10:53.375] [stderrLog] [info] Loading Transcript Info; [2018-06-30 22:10:53.396] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-06-30 22:10:53.402] [stderrLog] [info] There were 36541 set bits in the bit array; [2018-06-30 22:10:53.405] [stderrLog] [info] Computing transcript lengths; [2018-06-30 22:10:53.405] [stderrLog] [info] Waiting to finish loading hash; [2018-06-30 22:10:54.783] [stderrLog] [info] Done loading index; [2018-06-30 22:10:54.783] [jointLog] [info] done; [2018-06-30 22:10:54.783] [jointLog] [info] Index contained 36541 targets. processed 17 Million fragments; hits: 18237834, hits per frag: 1.04278[2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.50% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/245
https://github.com/COMBINE-lab/salmon/issues/245:2614,Performance,Load,Loading,2614,"] [alevinLog] [warning] Gauss Prediction 0 Too far from knee prediction skipping it; [2018-06-30 22:10:52.498] [alevinLog] [info] Learned InvCov: 457.073 normfactor: 260.286; [2018-06-30 22:10:52.498] [alevinLog] [info] Total 10434(has 987 low confidence) barcodes; [2018-06-30 22:10:52.530] [alevinLog] [info] Done True Barcode Sampling; [2018-06-30 22:10:53.101] [alevinLog] [info] Done populating Z matrix; [2018-06-30 22:10:53.103] [alevinLog] [info] Done indexing Barcodes; [2018-06-30 22:10:53.104] [alevinLog] [info] Total Unique barcodes found: 263650; [2018-06-30 22:10:53.104] [alevinLog] [info] Used Barcodes except Whitelist: 5556; [2018-06-30 22:10:53.248] [jointLog] [info] There is 1 library.; [2018-06-30 22:10:53.248] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-06-30 22:10:53.248] [alevinLog] [info] parsing read library format; [2018-06-30 22:10:53.308] [jointLog] [info] Loading Quasi index; [2018-06-30 22:10:53.308] [jointLog] [info] Loading 32-bit quasi index; [2018-06-30 22:10:53.308] [stderrLog] [info] Loading Suffix Array; [2018-06-30 22:10:53.375] [stderrLog] [info] Loading Transcript Info; [2018-06-30 22:10:53.396] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-06-30 22:10:53.402] [stderrLog] [info] There were 36541 set bits in the bit array; [2018-06-30 22:10:53.405] [stderrLog] [info] Computing transcript lengths; [2018-06-30 22:10:53.405] [stderrLog] [info] Waiting to finish loading hash; [2018-06-30 22:10:54.783] [stderrLog] [info] Done loading index; [2018-06-30 22:10:54.783] [jointLog] [info] done; [2018-06-30 22:10:54.783] [jointLog] [info] Index contained 36541 targets. processed 17 Million fragments; hits: 18237834, hits per frag: 1.04278[2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.50% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.14% zero probability fragments; [2018-06-30 22:12:13.116] [jointL",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/245
https://github.com/COMBINE-lab/salmon/issues/245:2687,Performance,Load,Loading,2687,"on skipping it; [2018-06-30 22:10:52.498] [alevinLog] [info] Learned InvCov: 457.073 normfactor: 260.286; [2018-06-30 22:10:52.498] [alevinLog] [info] Total 10434(has 987 low confidence) barcodes; [2018-06-30 22:10:52.530] [alevinLog] [info] Done True Barcode Sampling; [2018-06-30 22:10:53.101] [alevinLog] [info] Done populating Z matrix; [2018-06-30 22:10:53.103] [alevinLog] [info] Done indexing Barcodes; [2018-06-30 22:10:53.104] [alevinLog] [info] Total Unique barcodes found: 263650; [2018-06-30 22:10:53.104] [alevinLog] [info] Used Barcodes except Whitelist: 5556; [2018-06-30 22:10:53.248] [jointLog] [info] There is 1 library.; [2018-06-30 22:10:53.248] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-06-30 22:10:53.248] [alevinLog] [info] parsing read library format; [2018-06-30 22:10:53.308] [jointLog] [info] Loading Quasi index; [2018-06-30 22:10:53.308] [jointLog] [info] Loading 32-bit quasi index; [2018-06-30 22:10:53.308] [stderrLog] [info] Loading Suffix Array; [2018-06-30 22:10:53.375] [stderrLog] [info] Loading Transcript Info; [2018-06-30 22:10:53.396] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-06-30 22:10:53.402] [stderrLog] [info] There were 36541 set bits in the bit array; [2018-06-30 22:10:53.405] [stderrLog] [info] Computing transcript lengths; [2018-06-30 22:10:53.405] [stderrLog] [info] Waiting to finish loading hash; [2018-06-30 22:10:54.783] [stderrLog] [info] Done loading index; [2018-06-30 22:10:54.783] [jointLog] [info] done; [2018-06-30 22:10:54.783] [jointLog] [info] Index contained 36541 targets. processed 17 Million fragments; hits: 18237834, hits per frag: 1.04278[2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.50% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.14% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.30% zero probabi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/245
https://github.com/COMBINE-lab/salmon/issues/245:2754,Performance,Load,Loading,2754,"InvCov: 457.073 normfactor: 260.286; [2018-06-30 22:10:52.498] [alevinLog] [info] Total 10434(has 987 low confidence) barcodes; [2018-06-30 22:10:52.530] [alevinLog] [info] Done True Barcode Sampling; [2018-06-30 22:10:53.101] [alevinLog] [info] Done populating Z matrix; [2018-06-30 22:10:53.103] [alevinLog] [info] Done indexing Barcodes; [2018-06-30 22:10:53.104] [alevinLog] [info] Total Unique barcodes found: 263650; [2018-06-30 22:10:53.104] [alevinLog] [info] Used Barcodes except Whitelist: 5556; [2018-06-30 22:10:53.248] [jointLog] [info] There is 1 library.; [2018-06-30 22:10:53.248] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-06-30 22:10:53.248] [alevinLog] [info] parsing read library format; [2018-06-30 22:10:53.308] [jointLog] [info] Loading Quasi index; [2018-06-30 22:10:53.308] [jointLog] [info] Loading 32-bit quasi index; [2018-06-30 22:10:53.308] [stderrLog] [info] Loading Suffix Array; [2018-06-30 22:10:53.375] [stderrLog] [info] Loading Transcript Info; [2018-06-30 22:10:53.396] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-06-30 22:10:53.402] [stderrLog] [info] There were 36541 set bits in the bit array; [2018-06-30 22:10:53.405] [stderrLog] [info] Computing transcript lengths; [2018-06-30 22:10:53.405] [stderrLog] [info] Waiting to finish loading hash; [2018-06-30 22:10:54.783] [stderrLog] [info] Done loading index; [2018-06-30 22:10:54.783] [jointLog] [info] done; [2018-06-30 22:10:54.783] [jointLog] [info] Index contained 36541 targets. processed 17 Million fragments; hits: 18237834, hits per frag: 1.04278[2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.50% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.14% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.30% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread s",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/245
https://github.com/COMBINE-lab/salmon/issues/245:2824,Performance,Load,Loading,2824,"] [info] Total 10434(has 987 low confidence) barcodes; [2018-06-30 22:10:52.530] [alevinLog] [info] Done True Barcode Sampling; [2018-06-30 22:10:53.101] [alevinLog] [info] Done populating Z matrix; [2018-06-30 22:10:53.103] [alevinLog] [info] Done indexing Barcodes; [2018-06-30 22:10:53.104] [alevinLog] [info] Total Unique barcodes found: 263650; [2018-06-30 22:10:53.104] [alevinLog] [info] Used Barcodes except Whitelist: 5556; [2018-06-30 22:10:53.248] [jointLog] [info] There is 1 library.; [2018-06-30 22:10:53.248] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-06-30 22:10:53.248] [alevinLog] [info] parsing read library format; [2018-06-30 22:10:53.308] [jointLog] [info] Loading Quasi index; [2018-06-30 22:10:53.308] [jointLog] [info] Loading 32-bit quasi index; [2018-06-30 22:10:53.308] [stderrLog] [info] Loading Suffix Array; [2018-06-30 22:10:53.375] [stderrLog] [info] Loading Transcript Info; [2018-06-30 22:10:53.396] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-06-30 22:10:53.402] [stderrLog] [info] There were 36541 set bits in the bit array; [2018-06-30 22:10:53.405] [stderrLog] [info] Computing transcript lengths; [2018-06-30 22:10:53.405] [stderrLog] [info] Waiting to finish loading hash; [2018-06-30 22:10:54.783] [stderrLog] [info] Done loading index; [2018-06-30 22:10:54.783] [jointLog] [info] done; [2018-06-30 22:10:54.783] [jointLog] [info] Index contained 36541 targets. processed 17 Million fragments; hits: 18237834, hits per frag: 1.04278[2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.50% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.14% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.30% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.06% zero probability fragments; [2018-",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/245
https://github.com/COMBINE-lab/salmon/issues/245:3082,Performance,load,loading,3082,"fo] Done indexing Barcodes; [2018-06-30 22:10:53.104] [alevinLog] [info] Total Unique barcodes found: 263650; [2018-06-30 22:10:53.104] [alevinLog] [info] Used Barcodes except Whitelist: 5556; [2018-06-30 22:10:53.248] [jointLog] [info] There is 1 library.; [2018-06-30 22:10:53.248] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-06-30 22:10:53.248] [alevinLog] [info] parsing read library format; [2018-06-30 22:10:53.308] [jointLog] [info] Loading Quasi index; [2018-06-30 22:10:53.308] [jointLog] [info] Loading 32-bit quasi index; [2018-06-30 22:10:53.308] [stderrLog] [info] Loading Suffix Array; [2018-06-30 22:10:53.375] [stderrLog] [info] Loading Transcript Info; [2018-06-30 22:10:53.396] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-06-30 22:10:53.402] [stderrLog] [info] There were 36541 set bits in the bit array; [2018-06-30 22:10:53.405] [stderrLog] [info] Computing transcript lengths; [2018-06-30 22:10:53.405] [stderrLog] [info] Waiting to finish loading hash; [2018-06-30 22:10:54.783] [stderrLog] [info] Done loading index; [2018-06-30 22:10:54.783] [jointLog] [info] done; [2018-06-30 22:10:54.783] [jointLog] [info] Index contained 36541 targets. processed 17 Million fragments; hits: 18237834, hits per frag: 1.04278[2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.50% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.14% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.30% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.06% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.64% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 9.94% zero probability fragments; [2018-06-3",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/245
https://github.com/COMBINE-lab/salmon/issues/245:3146,Performance,load,loading,3146,"] Total Unique barcodes found: 263650; [2018-06-30 22:10:53.104] [alevinLog] [info] Used Barcodes except Whitelist: 5556; [2018-06-30 22:10:53.248] [jointLog] [info] There is 1 library.; [2018-06-30 22:10:53.248] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-06-30 22:10:53.248] [alevinLog] [info] parsing read library format; [2018-06-30 22:10:53.308] [jointLog] [info] Loading Quasi index; [2018-06-30 22:10:53.308] [jointLog] [info] Loading 32-bit quasi index; [2018-06-30 22:10:53.308] [stderrLog] [info] Loading Suffix Array; [2018-06-30 22:10:53.375] [stderrLog] [info] Loading Transcript Info; [2018-06-30 22:10:53.396] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-06-30 22:10:53.402] [stderrLog] [info] There were 36541 set bits in the bit array; [2018-06-30 22:10:53.405] [stderrLog] [info] Computing transcript lengths; [2018-06-30 22:10:53.405] [stderrLog] [info] Waiting to finish loading hash; [2018-06-30 22:10:54.783] [stderrLog] [info] Done loading index; [2018-06-30 22:10:54.783] [jointLog] [info] done; [2018-06-30 22:10:54.783] [jointLog] [info] Index contained 36541 targets. processed 17 Million fragments; hits: 18237834, hits per frag: 1.04278[2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.50% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.14% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.30% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.06% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.64% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 9.94% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/245
https://github.com/COMBINE-lab/salmon/issues/245:5900,Performance,optimiz,optimizer,5900,nfo] Thread saw mini-batch with a maximum of 9.94% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.26% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.30% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.56% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.48% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.16% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.02% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 9.84% zero probability fragments; [2018-06-30 22:12:13.117] [jointLog] [info] Thread saw mini-batch with a maximum of 10.24% zero probability fragments; [2018-06-30 22:12:13.120] [jointLog] [info] Thread saw mini-batch with a maximum of 10.88% zero probability fragments; [2018-06-30 22:12:13.141] [jointLog] [info] Thread saw mini-batch with a maximum of 10.26% zero probability fragments; [2018-06-30 22:12:13.146] [jointLog] [info] Thread saw mini-batch with a maximum of 10.14% zero probability fragments; [2018-06-30 22:12:13.160] [jointLog] [info] Thread saw mini-batch with a maximum of 10.24% zero probability fragments. [2018-06-30 22:12:13.224] [jointLog] [info] Computed 22103 rich equivalence classes for further processing; [2018-06-30 22:12:13.224] [jointLog] [info] Counted 12658995 total reads in the equivalence classes; [2018-06-30 22:12:13.224] [jointLog] [info] Mapping rate = 71.4689%. [2018-06-30 22:12:13.224] [jointLog] [info] finished quantifyLibrary(); [2018-06-30 22:12:13.424] [alevinLog] [info] Starting optimizer. Analyzed 1137 cells (11% of all).; ERROR: cell doesn't have any read count; ```,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/245
https://github.com/COMBINE-lab/salmon/issues/245:1657,Safety,Predict,Prediction,1657,tput9/logs; ### salmon (single-cell-based) v0.10.2; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ mates1 ] => { cDNA_Small_S1_L001_R1_001.fastq.gz }; ### [ mates2 ] => { cDNA_Small_S1_L001_R2_001.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { index }; ### [ threads ] => { 20 }; ### [ output ] => { alevin_output9 }; ### [ tgMap ] => { txp2gene.tsv }; ### [ dumpCsvCounts ] => { }. [2018-06-30 22:10:28.044] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-06-30 22:10:28.048] [alevinLog] [info] Processing barcodes files (if Present). processed 17 Million barcodes. [2018-06-30 22:10:47.141] [alevinLog] [info] Done barcode density calculation.; [2018-06-30 22:10:47.141] [alevinLog] [info] # Barcodes Used: 17712582 / 17712585.; [2018-06-30 22:10:52.008] [alevinLog] [info] Knee found left boundary at 9447; [2018-06-30 22:10:52.498] [alevinLog] [warning] Gauss Prediction 0 Too far from knee prediction skipping it; [2018-06-30 22:10:52.498] [alevinLog] [info] Learned InvCov: 457.073 normfactor: 260.286; [2018-06-30 22:10:52.498] [alevinLog] [info] Total 10434(has 987 low confidence) barcodes; [2018-06-30 22:10:52.530] [alevinLog] [info] Done True Barcode Sampling; [2018-06-30 22:10:53.101] [alevinLog] [info] Done populating Z matrix; [2018-06-30 22:10:53.103] [alevinLog] [info] Done indexing Barcodes; [2018-06-30 22:10:53.104] [alevinLog] [info] Total Unique barcodes found: 263650; [2018-06-30 22:10:53.104] [alevinLog] [info] Used Barcodes except Whitelist: 5556; [2018-06-30 22:10:53.248] [jointLog] [info] There is 1 library.; [2018-06-30 22:10:53.248] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-06-30 22:10:53.248] [alevinLog] [info] parsing read library format; [2018-06-30 22:10:53.308] [jointLog] [info] Loading Quasi index; [2018-06-30 22:10:53.308] [jointLog] [info] Loading 32-bit quasi index; [2018-06-30 22:10:53.308] [stderrLog],MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/245
https://github.com/COMBINE-lab/salmon/issues/245:1688,Safety,predict,prediction,1688,tput9/logs; ### salmon (single-cell-based) v0.10.2; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ mates1 ] => { cDNA_Small_S1_L001_R1_001.fastq.gz }; ### [ mates2 ] => { cDNA_Small_S1_L001_R2_001.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { index }; ### [ threads ] => { 20 }; ### [ output ] => { alevin_output9 }; ### [ tgMap ] => { txp2gene.tsv }; ### [ dumpCsvCounts ] => { }. [2018-06-30 22:10:28.044] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-06-30 22:10:28.048] [alevinLog] [info] Processing barcodes files (if Present). processed 17 Million barcodes. [2018-06-30 22:10:47.141] [alevinLog] [info] Done barcode density calculation.; [2018-06-30 22:10:47.141] [alevinLog] [info] # Barcodes Used: 17712582 / 17712585.; [2018-06-30 22:10:52.008] [alevinLog] [info] Knee found left boundary at 9447; [2018-06-30 22:10:52.498] [alevinLog] [warning] Gauss Prediction 0 Too far from knee prediction skipping it; [2018-06-30 22:10:52.498] [alevinLog] [info] Learned InvCov: 457.073 normfactor: 260.286; [2018-06-30 22:10:52.498] [alevinLog] [info] Total 10434(has 987 low confidence) barcodes; [2018-06-30 22:10:52.530] [alevinLog] [info] Done True Barcode Sampling; [2018-06-30 22:10:53.101] [alevinLog] [info] Done populating Z matrix; [2018-06-30 22:10:53.103] [alevinLog] [info] Done indexing Barcodes; [2018-06-30 22:10:53.104] [alevinLog] [info] Total Unique barcodes found: 263650; [2018-06-30 22:10:53.104] [alevinLog] [info] Used Barcodes except Whitelist: 5556; [2018-06-30 22:10:53.248] [jointLog] [info] There is 1 library.; [2018-06-30 22:10:53.248] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-06-30 22:10:53.248] [alevinLog] [info] parsing read library format; [2018-06-30 22:10:53.308] [jointLog] [info] Loading Quasi index; [2018-06-30 22:10:53.308] [jointLog] [info] Loading 32-bit quasi index; [2018-06-30 22:10:53.308] [stderrLog],MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/245
https://github.com/COMBINE-lab/salmon/issues/245:3090,Security,hash,hash,3090,"fo] Done indexing Barcodes; [2018-06-30 22:10:53.104] [alevinLog] [info] Total Unique barcodes found: 263650; [2018-06-30 22:10:53.104] [alevinLog] [info] Used Barcodes except Whitelist: 5556; [2018-06-30 22:10:53.248] [jointLog] [info] There is 1 library.; [2018-06-30 22:10:53.248] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-06-30 22:10:53.248] [alevinLog] [info] parsing read library format; [2018-06-30 22:10:53.308] [jointLog] [info] Loading Quasi index; [2018-06-30 22:10:53.308] [jointLog] [info] Loading 32-bit quasi index; [2018-06-30 22:10:53.308] [stderrLog] [info] Loading Suffix Array; [2018-06-30 22:10:53.375] [stderrLog] [info] Loading Transcript Info; [2018-06-30 22:10:53.396] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-06-30 22:10:53.402] [stderrLog] [info] There were 36541 set bits in the bit array; [2018-06-30 22:10:53.405] [stderrLog] [info] Computing transcript lengths; [2018-06-30 22:10:53.405] [stderrLog] [info] Waiting to finish loading hash; [2018-06-30 22:10:54.783] [stderrLog] [info] Done loading index; [2018-06-30 22:10:54.783] [jointLog] [info] done; [2018-06-30 22:10:54.783] [jointLog] [info] Index contained 36541 targets. processed 17 Million fragments; hits: 18237834, hits per frag: 1.04278[2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.50% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.14% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.30% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.06% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.64% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 9.94% zero probability fragments; [2018-06-3",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/245
https://github.com/COMBINE-lab/salmon/issues/245:645,Testability,Log,Logs,645,"Hi, I'm trying to use Alevin on a 10X v2 chemistry dataset, and after the preprocessing stpe I get the following error:; ```; Analyzed 1137 cells (11% of all).; ERROR: cell doesn't have any read count; ```; I tried looking at the documentation and previous tickets, but didn't find anything mentioning this issue. Is there any suggestion on how to address it?. The full terminal output is below. Thanks. ```; salmon alevin -lISR -1 cDNA_Small_S1_L001_R1_001.fastq.gz -2 cDNA_Small_S1_L001_R2_001.fastq.gz --chromium -i index -p 20 -o alevin_output9 --tgMap txp2gene.tsv --dumpCsvCounts; Version Info: This is the most recent version of Salmon.; Logs will be written to alevin_output9/logs; ### salmon (single-cell-based) v0.10.2; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ mates1 ] => { cDNA_Small_S1_L001_R1_001.fastq.gz }; ### [ mates2 ] => { cDNA_Small_S1_L001_R2_001.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { index }; ### [ threads ] => { 20 }; ### [ output ] => { alevin_output9 }; ### [ tgMap ] => { txp2gene.tsv }; ### [ dumpCsvCounts ] => { }. [2018-06-30 22:10:28.044] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-06-30 22:10:28.048] [alevinLog] [info] Processing barcodes files (if Present). processed 17 Million barcodes. [2018-06-30 22:10:47.141] [alevinLog] [info] Done barcode density calculation.; [2018-06-30 22:10:47.141] [alevinLog] [info] # Barcodes Used: 17712582 / 17712585.; [2018-06-30 22:10:52.008] [alevinLog] [info] Knee found left boundary at 9447; [2018-06-30 22:10:52.498] [alevinLog] [warning] Gauss Prediction 0 Too far from knee prediction skipping it; [2018-06-30 22:10:52.498] [alevinLog] [info] Learned InvCov: 457.073 normfactor: 260.286; [2018-06-30 22:10:52.498] [alevinLog] [info] Total 10434(has 987 low confidence) barcodes; [2018-06-30 22:10:52.530] [alevinLog] [info] Done True Barcode Sampling; [2018-06-30 22:10:53.101] [alevinLo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/245
https://github.com/COMBINE-lab/salmon/issues/245:684,Testability,log,logs,684,"Hi, I'm trying to use Alevin on a 10X v2 chemistry dataset, and after the preprocessing stpe I get the following error:; ```; Analyzed 1137 cells (11% of all).; ERROR: cell doesn't have any read count; ```; I tried looking at the documentation and previous tickets, but didn't find anything mentioning this issue. Is there any suggestion on how to address it?. The full terminal output is below. Thanks. ```; salmon alevin -lISR -1 cDNA_Small_S1_L001_R1_001.fastq.gz -2 cDNA_Small_S1_L001_R2_001.fastq.gz --chromium -i index -p 20 -o alevin_output9 --tgMap txp2gene.tsv --dumpCsvCounts; Version Info: This is the most recent version of Salmon.; Logs will be written to alevin_output9/logs; ### salmon (single-cell-based) v0.10.2; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ mates1 ] => { cDNA_Small_S1_L001_R1_001.fastq.gz }; ### [ mates2 ] => { cDNA_Small_S1_L001_R2_001.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { index }; ### [ threads ] => { 20 }; ### [ output ] => { alevin_output9 }; ### [ tgMap ] => { txp2gene.tsv }; ### [ dumpCsvCounts ] => { }. [2018-06-30 22:10:28.044] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-06-30 22:10:28.048] [alevinLog] [info] Processing barcodes files (if Present). processed 17 Million barcodes. [2018-06-30 22:10:47.141] [alevinLog] [info] Done barcode density calculation.; [2018-06-30 22:10:47.141] [alevinLog] [info] # Barcodes Used: 17712582 / 17712585.; [2018-06-30 22:10:52.008] [alevinLog] [info] Knee found left boundary at 9447; [2018-06-30 22:10:52.498] [alevinLog] [warning] Gauss Prediction 0 Too far from knee prediction skipping it; [2018-06-30 22:10:52.498] [alevinLog] [info] Learned InvCov: 457.073 normfactor: 260.286; [2018-06-30 22:10:52.498] [alevinLog] [info] Total 10434(has 987 low confidence) barcodes; [2018-06-30 22:10:52.530] [alevinLog] [info] Done True Barcode Sampling; [2018-06-30 22:10:53.101] [alevinLo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/245
https://github.com/COMBINE-lab/salmon/issues/245:1757,Usability,Learn,Learned,1757,; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ mates1 ] => { cDNA_Small_S1_L001_R1_001.fastq.gz }; ### [ mates2 ] => { cDNA_Small_S1_L001_R2_001.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { index }; ### [ threads ] => { 20 }; ### [ output ] => { alevin_output9 }; ### [ tgMap ] => { txp2gene.tsv }; ### [ dumpCsvCounts ] => { }. [2018-06-30 22:10:28.044] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-06-30 22:10:28.048] [alevinLog] [info] Processing barcodes files (if Present). processed 17 Million barcodes. [2018-06-30 22:10:47.141] [alevinLog] [info] Done barcode density calculation.; [2018-06-30 22:10:47.141] [alevinLog] [info] # Barcodes Used: 17712582 / 17712585.; [2018-06-30 22:10:52.008] [alevinLog] [info] Knee found left boundary at 9447; [2018-06-30 22:10:52.498] [alevinLog] [warning] Gauss Prediction 0 Too far from knee prediction skipping it; [2018-06-30 22:10:52.498] [alevinLog] [info] Learned InvCov: 457.073 normfactor: 260.286; [2018-06-30 22:10:52.498] [alevinLog] [info] Total 10434(has 987 low confidence) barcodes; [2018-06-30 22:10:52.530] [alevinLog] [info] Done True Barcode Sampling; [2018-06-30 22:10:53.101] [alevinLog] [info] Done populating Z matrix; [2018-06-30 22:10:53.103] [alevinLog] [info] Done indexing Barcodes; [2018-06-30 22:10:53.104] [alevinLog] [info] Total Unique barcodes found: 263650; [2018-06-30 22:10:53.104] [alevinLog] [info] Used Barcodes except Whitelist: 5556; [2018-06-30 22:10:53.248] [jointLog] [info] There is 1 library.; [2018-06-30 22:10:53.248] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-06-30 22:10:53.248] [alevinLog] [info] parsing read library format; [2018-06-30 22:10:53.308] [jointLog] [info] Loading Quasi index; [2018-06-30 22:10:53.308] [jointLog] [info] Loading 32-bit quasi index; [2018-06-30 22:10:53.308] [stderrLog] [info] Loading Suffix Array; [2018-06-30 22:10:53.375] [stderrLog] [info] L,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/245
https://github.com/COMBINE-lab/salmon/issues/249:723,Deployability,install,installed,723,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. This issue is with salmon (bulk mode). **Describe the bug**. The grch38 transcriptome has transcripts that are identical in sequence, but annotated differently. Salmon is collapsing the duplicate transcripts to one transcript (as it should).; The problem is that (at least for some transcripts) we're getting abundance estimates for the copy of a transcript that's on a contig, but not estimates for the copy on the regular chromosome.; In short, it's picking the wrong duplicate. What we're after is a way to get it to prioritize the copies on chromosomes over the copies on contigs. **To Reproduce**. * Salmon version 0.10.2; * Salmon installed through bioconda.; * Reference grch38. All cdnas and ncrnas.; * Reads were single-end; * Program options: salmon quant -p 48 --seqBias --gcBias --biasSpeedSamp 5 -l A . **Expected behavior**; That the selected duplicate reference transcript would be the one on the chromosome, rather than the contig.; In particular, the LTA gene is of interest to us. In grch38, the two ids are [ENSG00000226979](https://useast.ensembl.org/Homo_sapiens/Gene/Summary?g=ENSG00000226979;r=6:31572054-31574324) (on chr6) and [ENSG00000231408](https://useast.ensembl.org/Homo_sapiens/Gene/Summary?g=ENSG00000231408;r=CHR_HSCHR6_MHC_MANN_CTG1:31611502-31613772) (on CHR_HSCHR6_MHC_MANN_CTG1). Each of the transcripts of these two genes has an identical copy in the other gene. The transcripts for both genes appear in the duplicate_clusters.tsv file in the salmon index directory. ; When we quant, only transcripts of ENSG00000231408 appear in the output. We would rather that ENSG00000226979 be the one to appear. What is the best way forward to accomplish this? Should we just remove the contig transcripts from the reference?. **Desktop:**; - OS: Centos Linux; - `uname -a`: 3.10.0-862.2.3.el7.x86_64 #1 SMP Wed May 9 18:05:47 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; - `lsb_release -a`:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/249
https://github.com/COMBINE-lab/salmon/issues/249:2244,Deployability,release,release,2244,"ranscript (as it should).; The problem is that (at least for some transcripts) we're getting abundance estimates for the copy of a transcript that's on a contig, but not estimates for the copy on the regular chromosome.; In short, it's picking the wrong duplicate. What we're after is a way to get it to prioritize the copies on chromosomes over the copies on contigs. **To Reproduce**. * Salmon version 0.10.2; * Salmon installed through bioconda.; * Reference grch38. All cdnas and ncrnas.; * Reads were single-end; * Program options: salmon quant -p 48 --seqBias --gcBias --biasSpeedSamp 5 -l A . **Expected behavior**; That the selected duplicate reference transcript would be the one on the chromosome, rather than the contig.; In particular, the LTA gene is of interest to us. In grch38, the two ids are [ENSG00000226979](https://useast.ensembl.org/Homo_sapiens/Gene/Summary?g=ENSG00000226979;r=6:31572054-31574324) (on chr6) and [ENSG00000231408](https://useast.ensembl.org/Homo_sapiens/Gene/Summary?g=ENSG00000231408;r=CHR_HSCHR6_MHC_MANN_CTG1:31611502-31613772) (on CHR_HSCHR6_MHC_MANN_CTG1). Each of the transcripts of these two genes has an identical copy in the other gene. The transcripts for both genes appear in the duplicate_clusters.tsv file in the salmon index directory. ; When we quant, only transcripts of ENSG00000231408 appear in the output. We would rather that ENSG00000226979 be the one to appear. What is the best way forward to accomplish this? Should we just remove the contig transcripts from the reference?. **Desktop:**; - OS: Centos Linux; - `uname -a`: 3.10.0-862.2.3.el7.x86_64 #1 SMP Wed May 9 18:05:47 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; - `lsb_release -a`: LSB Version: :core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.5.1804 (Core); Release: 7.5.1804; Codename: Core",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/249
https://github.com/COMBINE-lab/salmon/issues/249:2269,Deployability,Release,Release,2269,"ranscript (as it should).; The problem is that (at least for some transcripts) we're getting abundance estimates for the copy of a transcript that's on a contig, but not estimates for the copy on the regular chromosome.; In short, it's picking the wrong duplicate. What we're after is a way to get it to prioritize the copies on chromosomes over the copies on contigs. **To Reproduce**. * Salmon version 0.10.2; * Salmon installed through bioconda.; * Reference grch38. All cdnas and ncrnas.; * Reads were single-end; * Program options: salmon quant -p 48 --seqBias --gcBias --biasSpeedSamp 5 -l A . **Expected behavior**; That the selected duplicate reference transcript would be the one on the chromosome, rather than the contig.; In particular, the LTA gene is of interest to us. In grch38, the two ids are [ENSG00000226979](https://useast.ensembl.org/Homo_sapiens/Gene/Summary?g=ENSG00000226979;r=6:31572054-31574324) (on chr6) and [ENSG00000231408](https://useast.ensembl.org/Homo_sapiens/Gene/Summary?g=ENSG00000231408;r=CHR_HSCHR6_MHC_MANN_CTG1:31611502-31613772) (on CHR_HSCHR6_MHC_MANN_CTG1). Each of the transcripts of these two genes has an identical copy in the other gene. The transcripts for both genes appear in the duplicate_clusters.tsv file in the salmon index directory. ; When we quant, only transcripts of ENSG00000231408 appear in the output. We would rather that ENSG00000226979 be the one to appear. What is the best way forward to accomplish this? Should we just remove the contig transcripts from the reference?. **Desktop:**; - OS: Centos Linux; - `uname -a`: 3.10.0-862.2.3.el7.x86_64 #1 SMP Wed May 9 18:05:47 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; - `lsb_release -a`: LSB Version: :core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.5.1804 (Core); Release: 7.5.1804; Codename: Core",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/249
https://github.com/COMBINE-lab/salmon/issues/250:626,Availability,Error,Error,626,"Hi,. after salmon installation (from source, on Ubuntu 16), 'make test' is failing all 3 tests. So I will go through them one by one. *Test 1*: fails with the `No file or directory` message. ; As I can see from the logs, the executed command `/usr/bin/cmake -DTOPLEVEL_DIR=/usr/local -P /home/rad/packages/salmon-0.10.2/cmake/UnitTests.cmake` sets the toplevel directory to `/usr/local` and fails to find the `tests/UnitTests.cpp` in there. When I set the `-DTOPLEVEL_DIR` to salmons root folder everything works just fine. ; So, is there something missing? If so, how can I fix it?. *Test 2 and 3*: fail with no output but ` Error running ` . When I execute the respective command from the log file ; `salmon index -t transcripts.fasta -i sample_salmon_fmd_index --type fmd`; (and also `salmon index ...` on different data) the error is `Segmentation fault (core dumped)`. Any idea what goes wrong here? . *Aditional info*; * Which version of salmon was used? 0.10.2; * How was salmon installed? Compiled; * Which reference (e.g. transcriptome) was used? samples provided in the sample_data folder ; * Which read files were used? samples provided in the sample_data folder ; * OS: Ubuntu 16 (have to stick to the old version due to group policy) ; * output of `uname -a` : Linux AGRadWS1 4.15.0-24-generic #26~16.04.1-Ubuntu SMP Fri Jun 15 14:35:08 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; * and `lsb_release -a`: ; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 16.04.4 LTS; Release:	16.04; Codename:	xenial",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250
https://github.com/COMBINE-lab/salmon/issues/250:829,Availability,error,error,829,"Hi,. after salmon installation (from source, on Ubuntu 16), 'make test' is failing all 3 tests. So I will go through them one by one. *Test 1*: fails with the `No file or directory` message. ; As I can see from the logs, the executed command `/usr/bin/cmake -DTOPLEVEL_DIR=/usr/local -P /home/rad/packages/salmon-0.10.2/cmake/UnitTests.cmake` sets the toplevel directory to `/usr/local` and fails to find the `tests/UnitTests.cpp` in there. When I set the `-DTOPLEVEL_DIR` to salmons root folder everything works just fine. ; So, is there something missing? If so, how can I fix it?. *Test 2 and 3*: fail with no output but ` Error running ` . When I execute the respective command from the log file ; `salmon index -t transcripts.fasta -i sample_salmon_fmd_index --type fmd`; (and also `salmon index ...` on different data) the error is `Segmentation fault (core dumped)`. Any idea what goes wrong here? . *Aditional info*; * Which version of salmon was used? 0.10.2; * How was salmon installed? Compiled; * Which reference (e.g. transcriptome) was used? samples provided in the sample_data folder ; * Which read files were used? samples provided in the sample_data folder ; * OS: Ubuntu 16 (have to stick to the old version due to group policy) ; * output of `uname -a` : Linux AGRadWS1 4.15.0-24-generic #26~16.04.1-Ubuntu SMP Fri Jun 15 14:35:08 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; * and `lsb_release -a`: ; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 16.04.4 LTS; Release:	16.04; Codename:	xenial",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250
https://github.com/COMBINE-lab/salmon/issues/250:852,Availability,fault,fault,852,"Hi,. after salmon installation (from source, on Ubuntu 16), 'make test' is failing all 3 tests. So I will go through them one by one. *Test 1*: fails with the `No file or directory` message. ; As I can see from the logs, the executed command `/usr/bin/cmake -DTOPLEVEL_DIR=/usr/local -P /home/rad/packages/salmon-0.10.2/cmake/UnitTests.cmake` sets the toplevel directory to `/usr/local` and fails to find the `tests/UnitTests.cpp` in there. When I set the `-DTOPLEVEL_DIR` to salmons root folder everything works just fine. ; So, is there something missing? If so, how can I fix it?. *Test 2 and 3*: fail with no output but ` Error running ` . When I execute the respective command from the log file ; `salmon index -t transcripts.fasta -i sample_salmon_fmd_index --type fmd`; (and also `salmon index ...` on different data) the error is `Segmentation fault (core dumped)`. Any idea what goes wrong here? . *Aditional info*; * Which version of salmon was used? 0.10.2; * How was salmon installed? Compiled; * Which reference (e.g. transcriptome) was used? samples provided in the sample_data folder ; * Which read files were used? samples provided in the sample_data folder ; * OS: Ubuntu 16 (have to stick to the old version due to group policy) ; * output of `uname -a` : Linux AGRadWS1 4.15.0-24-generic #26~16.04.1-Ubuntu SMP Fri Jun 15 14:35:08 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; * and `lsb_release -a`: ; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 16.04.4 LTS; Release:	16.04; Codename:	xenial",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250
https://github.com/COMBINE-lab/salmon/issues/250:1436,Availability,avail,available,1436,"Hi,. after salmon installation (from source, on Ubuntu 16), 'make test' is failing all 3 tests. So I will go through them one by one. *Test 1*: fails with the `No file or directory` message. ; As I can see from the logs, the executed command `/usr/bin/cmake -DTOPLEVEL_DIR=/usr/local -P /home/rad/packages/salmon-0.10.2/cmake/UnitTests.cmake` sets the toplevel directory to `/usr/local` and fails to find the `tests/UnitTests.cpp` in there. When I set the `-DTOPLEVEL_DIR` to salmons root folder everything works just fine. ; So, is there something missing? If so, how can I fix it?. *Test 2 and 3*: fail with no output but ` Error running ` . When I execute the respective command from the log file ; `salmon index -t transcripts.fasta -i sample_salmon_fmd_index --type fmd`; (and also `salmon index ...` on different data) the error is `Segmentation fault (core dumped)`. Any idea what goes wrong here? . *Aditional info*; * Which version of salmon was used? 0.10.2; * How was salmon installed? Compiled; * Which reference (e.g. transcriptome) was used? samples provided in the sample_data folder ; * Which read files were used? samples provided in the sample_data folder ; * OS: Ubuntu 16 (have to stick to the old version due to group policy) ; * output of `uname -a` : Linux AGRadWS1 4.15.0-24-generic #26~16.04.1-Ubuntu SMP Fri Jun 15 14:35:08 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; * and `lsb_release -a`: ; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 16.04.4 LTS; Release:	16.04; Codename:	xenial",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250
https://github.com/COMBINE-lab/salmon/issues/250:18,Deployability,install,installation,18,"Hi,. after salmon installation (from source, on Ubuntu 16), 'make test' is failing all 3 tests. So I will go through them one by one. *Test 1*: fails with the `No file or directory` message. ; As I can see from the logs, the executed command `/usr/bin/cmake -DTOPLEVEL_DIR=/usr/local -P /home/rad/packages/salmon-0.10.2/cmake/UnitTests.cmake` sets the toplevel directory to `/usr/local` and fails to find the `tests/UnitTests.cpp` in there. When I set the `-DTOPLEVEL_DIR` to salmons root folder everything works just fine. ; So, is there something missing? If so, how can I fix it?. *Test 2 and 3*: fail with no output but ` Error running ` . When I execute the respective command from the log file ; `salmon index -t transcripts.fasta -i sample_salmon_fmd_index --type fmd`; (and also `salmon index ...` on different data) the error is `Segmentation fault (core dumped)`. Any idea what goes wrong here? . *Aditional info*; * Which version of salmon was used? 0.10.2; * How was salmon installed? Compiled; * Which reference (e.g. transcriptome) was used? samples provided in the sample_data folder ; * Which read files were used? samples provided in the sample_data folder ; * OS: Ubuntu 16 (have to stick to the old version due to group policy) ; * output of `uname -a` : Linux AGRadWS1 4.15.0-24-generic #26~16.04.1-Ubuntu SMP Fri Jun 15 14:35:08 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; * and `lsb_release -a`: ; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 16.04.4 LTS; Release:	16.04; Codename:	xenial",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250
https://github.com/COMBINE-lab/salmon/issues/250:986,Deployability,install,installed,986,"Hi,. after salmon installation (from source, on Ubuntu 16), 'make test' is failing all 3 tests. So I will go through them one by one. *Test 1*: fails with the `No file or directory` message. ; As I can see from the logs, the executed command `/usr/bin/cmake -DTOPLEVEL_DIR=/usr/local -P /home/rad/packages/salmon-0.10.2/cmake/UnitTests.cmake` sets the toplevel directory to `/usr/local` and fails to find the `tests/UnitTests.cpp` in there. When I set the `-DTOPLEVEL_DIR` to salmons root folder everything works just fine. ; So, is there something missing? If so, how can I fix it?. *Test 2 and 3*: fail with no output but ` Error running ` . When I execute the respective command from the log file ; `salmon index -t transcripts.fasta -i sample_salmon_fmd_index --type fmd`; (and also `salmon index ...` on different data) the error is `Segmentation fault (core dumped)`. Any idea what goes wrong here? . *Aditional info*; * Which version of salmon was used? 0.10.2; * How was salmon installed? Compiled; * Which reference (e.g. transcriptome) was used? samples provided in the sample_data folder ; * Which read files were used? samples provided in the sample_data folder ; * OS: Ubuntu 16 (have to stick to the old version due to group policy) ; * output of `uname -a` : Linux AGRadWS1 4.15.0-24-generic #26~16.04.1-Ubuntu SMP Fri Jun 15 14:35:08 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; * and `lsb_release -a`: ; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 16.04.4 LTS; Release:	16.04; Codename:	xenial",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250
https://github.com/COMBINE-lab/salmon/issues/250:1505,Deployability,Release,Release,1505,"Hi,. after salmon installation (from source, on Ubuntu 16), 'make test' is failing all 3 tests. So I will go through them one by one. *Test 1*: fails with the `No file or directory` message. ; As I can see from the logs, the executed command `/usr/bin/cmake -DTOPLEVEL_DIR=/usr/local -P /home/rad/packages/salmon-0.10.2/cmake/UnitTests.cmake` sets the toplevel directory to `/usr/local` and fails to find the `tests/UnitTests.cpp` in there. When I set the `-DTOPLEVEL_DIR` to salmons root folder everything works just fine. ; So, is there something missing? If so, how can I fix it?. *Test 2 and 3*: fail with no output but ` Error running ` . When I execute the respective command from the log file ; `salmon index -t transcripts.fasta -i sample_salmon_fmd_index --type fmd`; (and also `salmon index ...` on different data) the error is `Segmentation fault (core dumped)`. Any idea what goes wrong here? . *Aditional info*; * Which version of salmon was used? 0.10.2; * How was salmon installed? Compiled; * Which reference (e.g. transcriptome) was used? samples provided in the sample_data folder ; * Which read files were used? samples provided in the sample_data folder ; * OS: Ubuntu 16 (have to stick to the old version due to group policy) ; * output of `uname -a` : Linux AGRadWS1 4.15.0-24-generic #26~16.04.1-Ubuntu SMP Fri Jun 15 14:35:08 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; * and `lsb_release -a`: ; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 16.04.4 LTS; Release:	16.04; Codename:	xenial",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250
https://github.com/COMBINE-lab/salmon/issues/250:182,Integrability,message,message,182,"Hi,. after salmon installation (from source, on Ubuntu 16), 'make test' is failing all 3 tests. So I will go through them one by one. *Test 1*: fails with the `No file or directory` message. ; As I can see from the logs, the executed command `/usr/bin/cmake -DTOPLEVEL_DIR=/usr/local -P /home/rad/packages/salmon-0.10.2/cmake/UnitTests.cmake` sets the toplevel directory to `/usr/local` and fails to find the `tests/UnitTests.cpp` in there. When I set the `-DTOPLEVEL_DIR` to salmons root folder everything works just fine. ; So, is there something missing? If so, how can I fix it?. *Test 2 and 3*: fail with no output but ` Error running ` . When I execute the respective command from the log file ; `salmon index -t transcripts.fasta -i sample_salmon_fmd_index --type fmd`; (and also `salmon index ...` on different data) the error is `Segmentation fault (core dumped)`. Any idea what goes wrong here? . *Aditional info*; * Which version of salmon was used? 0.10.2; * How was salmon installed? Compiled; * Which reference (e.g. transcriptome) was used? samples provided in the sample_data folder ; * Which read files were used? samples provided in the sample_data folder ; * OS: Ubuntu 16 (have to stick to the old version due to group policy) ; * output of `uname -a` : Linux AGRadWS1 4.15.0-24-generic #26~16.04.1-Ubuntu SMP Fri Jun 15 14:35:08 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; * and `lsb_release -a`: ; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 16.04.4 LTS; Release:	16.04; Codename:	xenial",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250
https://github.com/COMBINE-lab/salmon/issues/250:66,Testability,test,test,66,"Hi,. after salmon installation (from source, on Ubuntu 16), 'make test' is failing all 3 tests. So I will go through them one by one. *Test 1*: fails with the `No file or directory` message. ; As I can see from the logs, the executed command `/usr/bin/cmake -DTOPLEVEL_DIR=/usr/local -P /home/rad/packages/salmon-0.10.2/cmake/UnitTests.cmake` sets the toplevel directory to `/usr/local` and fails to find the `tests/UnitTests.cpp` in there. When I set the `-DTOPLEVEL_DIR` to salmons root folder everything works just fine. ; So, is there something missing? If so, how can I fix it?. *Test 2 and 3*: fail with no output but ` Error running ` . When I execute the respective command from the log file ; `salmon index -t transcripts.fasta -i sample_salmon_fmd_index --type fmd`; (and also `salmon index ...` on different data) the error is `Segmentation fault (core dumped)`. Any idea what goes wrong here? . *Aditional info*; * Which version of salmon was used? 0.10.2; * How was salmon installed? Compiled; * Which reference (e.g. transcriptome) was used? samples provided in the sample_data folder ; * Which read files were used? samples provided in the sample_data folder ; * OS: Ubuntu 16 (have to stick to the old version due to group policy) ; * output of `uname -a` : Linux AGRadWS1 4.15.0-24-generic #26~16.04.1-Ubuntu SMP Fri Jun 15 14:35:08 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; * and `lsb_release -a`: ; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 16.04.4 LTS; Release:	16.04; Codename:	xenial",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250
https://github.com/COMBINE-lab/salmon/issues/250:89,Testability,test,tests,89,"Hi,. after salmon installation (from source, on Ubuntu 16), 'make test' is failing all 3 tests. So I will go through them one by one. *Test 1*: fails with the `No file or directory` message. ; As I can see from the logs, the executed command `/usr/bin/cmake -DTOPLEVEL_DIR=/usr/local -P /home/rad/packages/salmon-0.10.2/cmake/UnitTests.cmake` sets the toplevel directory to `/usr/local` and fails to find the `tests/UnitTests.cpp` in there. When I set the `-DTOPLEVEL_DIR` to salmons root folder everything works just fine. ; So, is there something missing? If so, how can I fix it?. *Test 2 and 3*: fail with no output but ` Error running ` . When I execute the respective command from the log file ; `salmon index -t transcripts.fasta -i sample_salmon_fmd_index --type fmd`; (and also `salmon index ...` on different data) the error is `Segmentation fault (core dumped)`. Any idea what goes wrong here? . *Aditional info*; * Which version of salmon was used? 0.10.2; * How was salmon installed? Compiled; * Which reference (e.g. transcriptome) was used? samples provided in the sample_data folder ; * Which read files were used? samples provided in the sample_data folder ; * OS: Ubuntu 16 (have to stick to the old version due to group policy) ; * output of `uname -a` : Linux AGRadWS1 4.15.0-24-generic #26~16.04.1-Ubuntu SMP Fri Jun 15 14:35:08 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; * and `lsb_release -a`: ; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 16.04.4 LTS; Release:	16.04; Codename:	xenial",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250
https://github.com/COMBINE-lab/salmon/issues/250:135,Testability,Test,Test,135,"Hi,. after salmon installation (from source, on Ubuntu 16), 'make test' is failing all 3 tests. So I will go through them one by one. *Test 1*: fails with the `No file or directory` message. ; As I can see from the logs, the executed command `/usr/bin/cmake -DTOPLEVEL_DIR=/usr/local -P /home/rad/packages/salmon-0.10.2/cmake/UnitTests.cmake` sets the toplevel directory to `/usr/local` and fails to find the `tests/UnitTests.cpp` in there. When I set the `-DTOPLEVEL_DIR` to salmons root folder everything works just fine. ; So, is there something missing? If so, how can I fix it?. *Test 2 and 3*: fail with no output but ` Error running ` . When I execute the respective command from the log file ; `salmon index -t transcripts.fasta -i sample_salmon_fmd_index --type fmd`; (and also `salmon index ...` on different data) the error is `Segmentation fault (core dumped)`. Any idea what goes wrong here? . *Aditional info*; * Which version of salmon was used? 0.10.2; * How was salmon installed? Compiled; * Which reference (e.g. transcriptome) was used? samples provided in the sample_data folder ; * Which read files were used? samples provided in the sample_data folder ; * OS: Ubuntu 16 (have to stick to the old version due to group policy) ; * output of `uname -a` : Linux AGRadWS1 4.15.0-24-generic #26~16.04.1-Ubuntu SMP Fri Jun 15 14:35:08 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; * and `lsb_release -a`: ; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 16.04.4 LTS; Release:	16.04; Codename:	xenial",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250
https://github.com/COMBINE-lab/salmon/issues/250:215,Testability,log,logs,215,"Hi,. after salmon installation (from source, on Ubuntu 16), 'make test' is failing all 3 tests. So I will go through them one by one. *Test 1*: fails with the `No file or directory` message. ; As I can see from the logs, the executed command `/usr/bin/cmake -DTOPLEVEL_DIR=/usr/local -P /home/rad/packages/salmon-0.10.2/cmake/UnitTests.cmake` sets the toplevel directory to `/usr/local` and fails to find the `tests/UnitTests.cpp` in there. When I set the `-DTOPLEVEL_DIR` to salmons root folder everything works just fine. ; So, is there something missing? If so, how can I fix it?. *Test 2 and 3*: fail with no output but ` Error running ` . When I execute the respective command from the log file ; `salmon index -t transcripts.fasta -i sample_salmon_fmd_index --type fmd`; (and also `salmon index ...` on different data) the error is `Segmentation fault (core dumped)`. Any idea what goes wrong here? . *Aditional info*; * Which version of salmon was used? 0.10.2; * How was salmon installed? Compiled; * Which reference (e.g. transcriptome) was used? samples provided in the sample_data folder ; * Which read files were used? samples provided in the sample_data folder ; * OS: Ubuntu 16 (have to stick to the old version due to group policy) ; * output of `uname -a` : Linux AGRadWS1 4.15.0-24-generic #26~16.04.1-Ubuntu SMP Fri Jun 15 14:35:08 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; * and `lsb_release -a`: ; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 16.04.4 LTS; Release:	16.04; Codename:	xenial",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250
https://github.com/COMBINE-lab/salmon/issues/250:410,Testability,test,tests,410,"Hi,. after salmon installation (from source, on Ubuntu 16), 'make test' is failing all 3 tests. So I will go through them one by one. *Test 1*: fails with the `No file or directory` message. ; As I can see from the logs, the executed command `/usr/bin/cmake -DTOPLEVEL_DIR=/usr/local -P /home/rad/packages/salmon-0.10.2/cmake/UnitTests.cmake` sets the toplevel directory to `/usr/local` and fails to find the `tests/UnitTests.cpp` in there. When I set the `-DTOPLEVEL_DIR` to salmons root folder everything works just fine. ; So, is there something missing? If so, how can I fix it?. *Test 2 and 3*: fail with no output but ` Error running ` . When I execute the respective command from the log file ; `salmon index -t transcripts.fasta -i sample_salmon_fmd_index --type fmd`; (and also `salmon index ...` on different data) the error is `Segmentation fault (core dumped)`. Any idea what goes wrong here? . *Aditional info*; * Which version of salmon was used? 0.10.2; * How was salmon installed? Compiled; * Which reference (e.g. transcriptome) was used? samples provided in the sample_data folder ; * Which read files were used? samples provided in the sample_data folder ; * OS: Ubuntu 16 (have to stick to the old version due to group policy) ; * output of `uname -a` : Linux AGRadWS1 4.15.0-24-generic #26~16.04.1-Ubuntu SMP Fri Jun 15 14:35:08 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; * and `lsb_release -a`: ; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 16.04.4 LTS; Release:	16.04; Codename:	xenial",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250
https://github.com/COMBINE-lab/salmon/issues/250:585,Testability,Test,Test,585,"Hi,. after salmon installation (from source, on Ubuntu 16), 'make test' is failing all 3 tests. So I will go through them one by one. *Test 1*: fails with the `No file or directory` message. ; As I can see from the logs, the executed command `/usr/bin/cmake -DTOPLEVEL_DIR=/usr/local -P /home/rad/packages/salmon-0.10.2/cmake/UnitTests.cmake` sets the toplevel directory to `/usr/local` and fails to find the `tests/UnitTests.cpp` in there. When I set the `-DTOPLEVEL_DIR` to salmons root folder everything works just fine. ; So, is there something missing? If so, how can I fix it?. *Test 2 and 3*: fail with no output but ` Error running ` . When I execute the respective command from the log file ; `salmon index -t transcripts.fasta -i sample_salmon_fmd_index --type fmd`; (and also `salmon index ...` on different data) the error is `Segmentation fault (core dumped)`. Any idea what goes wrong here? . *Aditional info*; * Which version of salmon was used? 0.10.2; * How was salmon installed? Compiled; * Which reference (e.g. transcriptome) was used? samples provided in the sample_data folder ; * Which read files were used? samples provided in the sample_data folder ; * OS: Ubuntu 16 (have to stick to the old version due to group policy) ; * output of `uname -a` : Linux AGRadWS1 4.15.0-24-generic #26~16.04.1-Ubuntu SMP Fri Jun 15 14:35:08 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; * and `lsb_release -a`: ; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 16.04.4 LTS; Release:	16.04; Codename:	xenial",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250
https://github.com/COMBINE-lab/salmon/issues/250:691,Testability,log,log,691,"Hi,. after salmon installation (from source, on Ubuntu 16), 'make test' is failing all 3 tests. So I will go through them one by one. *Test 1*: fails with the `No file or directory` message. ; As I can see from the logs, the executed command `/usr/bin/cmake -DTOPLEVEL_DIR=/usr/local -P /home/rad/packages/salmon-0.10.2/cmake/UnitTests.cmake` sets the toplevel directory to `/usr/local` and fails to find the `tests/UnitTests.cpp` in there. When I set the `-DTOPLEVEL_DIR` to salmons root folder everything works just fine. ; So, is there something missing? If so, how can I fix it?. *Test 2 and 3*: fail with no output but ` Error running ` . When I execute the respective command from the log file ; `salmon index -t transcripts.fasta -i sample_salmon_fmd_index --type fmd`; (and also `salmon index ...` on different data) the error is `Segmentation fault (core dumped)`. Any idea what goes wrong here? . *Aditional info*; * Which version of salmon was used? 0.10.2; * How was salmon installed? Compiled; * Which reference (e.g. transcriptome) was used? samples provided in the sample_data folder ; * Which read files were used? samples provided in the sample_data folder ; * OS: Ubuntu 16 (have to stick to the old version due to group policy) ; * output of `uname -a` : Linux AGRadWS1 4.15.0-24-generic #26~16.04.1-Ubuntu SMP Fri Jun 15 14:35:08 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; * and `lsb_release -a`: ; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 16.04.4 LTS; Release:	16.04; Codename:	xenial",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250
https://github.com/COMBINE-lab/salmon/issues/251:851,Availability,failure,failure,851,"OS: ubuntu 16.04; Salmon was installed using conda. Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.10.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /work/yu_liu/resource/salmon_gencodev28_index/ }; ### [ libType ] => { U }; ### [ unmatedReads ] => { /work/yu_liu/NEPC_david/data_source/Output.Fastqs/HS_1-1_S1_R1_001.fastq.gz }; ### [ threads ] => { 8 }; ### [ output ] => { /scratch/yu_liu/HS_1-1_quant }; Logs will be written to /scratch/yu_liu/HS_1-1_quant/logs; [2018-07-13 20:04:48.086] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-13 20:04:48.086] [jointLog] [info] parsing read library format; [2018-07-13 20:04:48.086] [jointLog] [info] There is 1 library.; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/251
https://github.com/COMBINE-lab/salmon/issues/251:29,Deployability,install,installed,29,"OS: ubuntu 16.04; Salmon was installed using conda. Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.10.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /work/yu_liu/resource/salmon_gencodev28_index/ }; ### [ libType ] => { U }; ### [ unmatedReads ] => { /work/yu_liu/NEPC_david/data_source/Output.Fastqs/HS_1-1_S1_R1_001.fastq.gz }; ### [ threads ] => { 8 }; ### [ output ] => { /scratch/yu_liu/HS_1-1_quant }; Logs will be written to /scratch/yu_liu/HS_1-1_quant/logs; [2018-07-13 20:04:48.086] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-13 20:04:48.086] [jointLog] [info] parsing read library format; [2018-07-13 20:04:48.086] [jointLog] [info] There is 1 library.; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/251
https://github.com/COMBINE-lab/salmon/issues/251:479,Testability,Log,Logs,479,"OS: ubuntu 16.04; Salmon was installed using conda. Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.10.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /work/yu_liu/resource/salmon_gencodev28_index/ }; ### [ libType ] => { U }; ### [ unmatedReads ] => { /work/yu_liu/NEPC_david/data_source/Output.Fastqs/HS_1-1_S1_R1_001.fastq.gz }; ### [ threads ] => { 8 }; ### [ output ] => { /scratch/yu_liu/HS_1-1_quant }; Logs will be written to /scratch/yu_liu/HS_1-1_quant/logs; [2018-07-13 20:04:48.086] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-13 20:04:48.086] [jointLog] [info] parsing read library format; [2018-07-13 20:04:48.086] [jointLog] [info] There is 1 library.; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/251
https://github.com/COMBINE-lab/salmon/issues/251:532,Testability,log,logs,532,"OS: ubuntu 16.04; Salmon was installed using conda. Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.10.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /work/yu_liu/resource/salmon_gencodev28_index/ }; ### [ libType ] => { U }; ### [ unmatedReads ] => { /work/yu_liu/NEPC_david/data_source/Output.Fastqs/HS_1-1_S1_R1_001.fastq.gz }; ### [ threads ] => { 8 }; ### [ output ] => { /scratch/yu_liu/HS_1-1_quant }; Logs will be written to /scratch/yu_liu/HS_1-1_quant/logs; [2018-07-13 20:04:48.086] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-13 20:04:48.086] [jointLog] [info] parsing read library format; [2018-07-13 20:04:48.086] [jointLog] [info] There is 1 library.; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/251
https://github.com/COMBINE-lab/salmon/issues/251:841,Testability,assert,assertion,841,"OS: ubuntu 16.04; Salmon was installed using conda. Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.10.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /work/yu_liu/resource/salmon_gencodev28_index/ }; ### [ libType ] => { U }; ### [ unmatedReads ] => { /work/yu_liu/NEPC_david/data_source/Output.Fastqs/HS_1-1_S1_R1_001.fastq.gz }; ### [ threads ] => { 8 }; ### [ output ] => { /scratch/yu_liu/HS_1-1_quant }; Logs will be written to /scratch/yu_liu/HS_1-1_quant/logs; [2018-07-13 20:04:48.086] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-13 20:04:48.086] [jointLog] [info] parsing read library format; [2018-07-13 20:04:48.086] [jointLog] [info] There is 1 library.; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/251
https://github.com/COMBINE-lab/salmon/issues/252:555,Availability,avail,available,555,"Hi,; I don't want to report a bug, but rather have 2 (unrelated) questions:; Because we don't generate that many RNA-seq data sets, I am using Salmon every now and then. I really like the program (speed!) and the obtained results. - Since I don't use Salmon on a daily basis, I usually have (would like) to update Salmon to its latest release. For these the binaries you (used to) provide are very convenient. I noticed that these are not explicitly linked to anymore on the page `https://github.com/COMBINE-lab/salmon/releases`, although these still are available through [this link](https://github.com/COMBINE-lab/salmon/files/2099291/salmon-latest_linux_x86_64.tar.gz) that is regularly posted on this Github 'forum'. Please note that I learned you favor the Bioconda route for keeping Salmon up to date. Nevertheless, provided it doesn't take too much effort, I would appreciate it very much if you could still make the binaries available. - My 2nd question has to do with some basic QC-ing: I am currently analyzing a set of 96 mouse samples. While running Salmon, I noticed most samples do have a nice percentage of mapped reads (>80%), but I also noticed that for samples this percentage was much lower (<50%).; Q: Is there an easy way of obtaining these numbers (""percent_mapped"") for all samples that were mapped in a Salmon run (without manually reviewing all 96 samples the 'meta_info.json' file)? In other words, how to obtain an 'overall log file'?. Thanks,; Guido",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/252
https://github.com/COMBINE-lab/salmon/issues/252:933,Availability,avail,available,933,"Hi,; I don't want to report a bug, but rather have 2 (unrelated) questions:; Because we don't generate that many RNA-seq data sets, I am using Salmon every now and then. I really like the program (speed!) and the obtained results. - Since I don't use Salmon on a daily basis, I usually have (would like) to update Salmon to its latest release. For these the binaries you (used to) provide are very convenient. I noticed that these are not explicitly linked to anymore on the page `https://github.com/COMBINE-lab/salmon/releases`, although these still are available through [this link](https://github.com/COMBINE-lab/salmon/files/2099291/salmon-latest_linux_x86_64.tar.gz) that is regularly posted on this Github 'forum'. Please note that I learned you favor the Bioconda route for keeping Salmon up to date. Nevertheless, provided it doesn't take too much effort, I would appreciate it very much if you could still make the binaries available. - My 2nd question has to do with some basic QC-ing: I am currently analyzing a set of 96 mouse samples. While running Salmon, I noticed most samples do have a nice percentage of mapped reads (>80%), but I also noticed that for samples this percentage was much lower (<50%).; Q: Is there an easy way of obtaining these numbers (""percent_mapped"") for all samples that were mapped in a Salmon run (without manually reviewing all 96 samples the 'meta_info.json' file)? In other words, how to obtain an 'overall log file'?. Thanks,; Guido",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/252
https://github.com/COMBINE-lab/salmon/issues/252:307,Deployability,update,update,307,"Hi,; I don't want to report a bug, but rather have 2 (unrelated) questions:; Because we don't generate that many RNA-seq data sets, I am using Salmon every now and then. I really like the program (speed!) and the obtained results. - Since I don't use Salmon on a daily basis, I usually have (would like) to update Salmon to its latest release. For these the binaries you (used to) provide are very convenient. I noticed that these are not explicitly linked to anymore on the page `https://github.com/COMBINE-lab/salmon/releases`, although these still are available through [this link](https://github.com/COMBINE-lab/salmon/files/2099291/salmon-latest_linux_x86_64.tar.gz) that is regularly posted on this Github 'forum'. Please note that I learned you favor the Bioconda route for keeping Salmon up to date. Nevertheless, provided it doesn't take too much effort, I would appreciate it very much if you could still make the binaries available. - My 2nd question has to do with some basic QC-ing: I am currently analyzing a set of 96 mouse samples. While running Salmon, I noticed most samples do have a nice percentage of mapped reads (>80%), but I also noticed that for samples this percentage was much lower (<50%).; Q: Is there an easy way of obtaining these numbers (""percent_mapped"") for all samples that were mapped in a Salmon run (without manually reviewing all 96 samples the 'meta_info.json' file)? In other words, how to obtain an 'overall log file'?. Thanks,; Guido",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/252
https://github.com/COMBINE-lab/salmon/issues/252:335,Deployability,release,release,335,"Hi,; I don't want to report a bug, but rather have 2 (unrelated) questions:; Because we don't generate that many RNA-seq data sets, I am using Salmon every now and then. I really like the program (speed!) and the obtained results. - Since I don't use Salmon on a daily basis, I usually have (would like) to update Salmon to its latest release. For these the binaries you (used to) provide are very convenient. I noticed that these are not explicitly linked to anymore on the page `https://github.com/COMBINE-lab/salmon/releases`, although these still are available through [this link](https://github.com/COMBINE-lab/salmon/files/2099291/salmon-latest_linux_x86_64.tar.gz) that is regularly posted on this Github 'forum'. Please note that I learned you favor the Bioconda route for keeping Salmon up to date. Nevertheless, provided it doesn't take too much effort, I would appreciate it very much if you could still make the binaries available. - My 2nd question has to do with some basic QC-ing: I am currently analyzing a set of 96 mouse samples. While running Salmon, I noticed most samples do have a nice percentage of mapped reads (>80%), but I also noticed that for samples this percentage was much lower (<50%).; Q: Is there an easy way of obtaining these numbers (""percent_mapped"") for all samples that were mapped in a Salmon run (without manually reviewing all 96 samples the 'meta_info.json' file)? In other words, how to obtain an 'overall log file'?. Thanks,; Guido",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/252
https://github.com/COMBINE-lab/salmon/issues/252:519,Deployability,release,releases,519,"Hi,; I don't want to report a bug, but rather have 2 (unrelated) questions:; Because we don't generate that many RNA-seq data sets, I am using Salmon every now and then. I really like the program (speed!) and the obtained results. - Since I don't use Salmon on a daily basis, I usually have (would like) to update Salmon to its latest release. For these the binaries you (used to) provide are very convenient. I noticed that these are not explicitly linked to anymore on the page `https://github.com/COMBINE-lab/salmon/releases`, although these still are available through [this link](https://github.com/COMBINE-lab/salmon/files/2099291/salmon-latest_linux_x86_64.tar.gz) that is regularly posted on this Github 'forum'. Please note that I learned you favor the Bioconda route for keeping Salmon up to date. Nevertheless, provided it doesn't take too much effort, I would appreciate it very much if you could still make the binaries available. - My 2nd question has to do with some basic QC-ing: I am currently analyzing a set of 96 mouse samples. While running Salmon, I noticed most samples do have a nice percentage of mapped reads (>80%), but I also noticed that for samples this percentage was much lower (<50%).; Q: Is there an easy way of obtaining these numbers (""percent_mapped"") for all samples that were mapped in a Salmon run (without manually reviewing all 96 samples the 'meta_info.json' file)? In other words, how to obtain an 'overall log file'?. Thanks,; Guido",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/252
https://github.com/COMBINE-lab/salmon/issues/252:771,Integrability,rout,route,771,"Hi,; I don't want to report a bug, but rather have 2 (unrelated) questions:; Because we don't generate that many RNA-seq data sets, I am using Salmon every now and then. I really like the program (speed!) and the obtained results. - Since I don't use Salmon on a daily basis, I usually have (would like) to update Salmon to its latest release. For these the binaries you (used to) provide are very convenient. I noticed that these are not explicitly linked to anymore on the page `https://github.com/COMBINE-lab/salmon/releases`, although these still are available through [this link](https://github.com/COMBINE-lab/salmon/files/2099291/salmon-latest_linux_x86_64.tar.gz) that is regularly posted on this Github 'forum'. Please note that I learned you favor the Bioconda route for keeping Salmon up to date. Nevertheless, provided it doesn't take too much effort, I would appreciate it very much if you could still make the binaries available. - My 2nd question has to do with some basic QC-ing: I am currently analyzing a set of 96 mouse samples. While running Salmon, I noticed most samples do have a nice percentage of mapped reads (>80%), but I also noticed that for samples this percentage was much lower (<50%).; Q: Is there an easy way of obtaining these numbers (""percent_mapped"") for all samples that were mapped in a Salmon run (without manually reviewing all 96 samples the 'meta_info.json' file)? In other words, how to obtain an 'overall log file'?. Thanks,; Guido",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/252
https://github.com/COMBINE-lab/salmon/issues/252:1451,Testability,log,log,1451,"Hi,; I don't want to report a bug, but rather have 2 (unrelated) questions:; Because we don't generate that many RNA-seq data sets, I am using Salmon every now and then. I really like the program (speed!) and the obtained results. - Since I don't use Salmon on a daily basis, I usually have (would like) to update Salmon to its latest release. For these the binaries you (used to) provide are very convenient. I noticed that these are not explicitly linked to anymore on the page `https://github.com/COMBINE-lab/salmon/releases`, although these still are available through [this link](https://github.com/COMBINE-lab/salmon/files/2099291/salmon-latest_linux_x86_64.tar.gz) that is regularly posted on this Github 'forum'. Please note that I learned you favor the Bioconda route for keeping Salmon up to date. Nevertheless, provided it doesn't take too much effort, I would appreciate it very much if you could still make the binaries available. - My 2nd question has to do with some basic QC-ing: I am currently analyzing a set of 96 mouse samples. While running Salmon, I noticed most samples do have a nice percentage of mapped reads (>80%), but I also noticed that for samples this percentage was much lower (<50%).; Q: Is there an easy way of obtaining these numbers (""percent_mapped"") for all samples that were mapped in a Salmon run (without manually reviewing all 96 samples the 'meta_info.json' file)? In other words, how to obtain an 'overall log file'?. Thanks,; Guido",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/252
https://github.com/COMBINE-lab/salmon/issues/252:740,Usability,learn,learned,740,"Hi,; I don't want to report a bug, but rather have 2 (unrelated) questions:; Because we don't generate that many RNA-seq data sets, I am using Salmon every now and then. I really like the program (speed!) and the obtained results. - Since I don't use Salmon on a daily basis, I usually have (would like) to update Salmon to its latest release. For these the binaries you (used to) provide are very convenient. I noticed that these are not explicitly linked to anymore on the page `https://github.com/COMBINE-lab/salmon/releases`, although these still are available through [this link](https://github.com/COMBINE-lab/salmon/files/2099291/salmon-latest_linux_x86_64.tar.gz) that is regularly posted on this Github 'forum'. Please note that I learned you favor the Bioconda route for keeping Salmon up to date. Nevertheless, provided it doesn't take too much effort, I would appreciate it very much if you could still make the binaries available. - My 2nd question has to do with some basic QC-ing: I am currently analyzing a set of 96 mouse samples. While running Salmon, I noticed most samples do have a nice percentage of mapped reads (>80%), but I also noticed that for samples this percentage was much lower (<50%).; Q: Is there an easy way of obtaining these numbers (""percent_mapped"") for all samples that were mapped in a Salmon run (without manually reviewing all 96 samples the 'meta_info.json' file)? In other words, how to obtain an 'overall log file'?. Thanks,; Guido",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/252
https://github.com/COMBINE-lab/salmon/issues/252:1472,Usability,Guid,Guido,1472,"Hi,; I don't want to report a bug, but rather have 2 (unrelated) questions:; Because we don't generate that many RNA-seq data sets, I am using Salmon every now and then. I really like the program (speed!) and the obtained results. - Since I don't use Salmon on a daily basis, I usually have (would like) to update Salmon to its latest release. For these the binaries you (used to) provide are very convenient. I noticed that these are not explicitly linked to anymore on the page `https://github.com/COMBINE-lab/salmon/releases`, although these still are available through [this link](https://github.com/COMBINE-lab/salmon/files/2099291/salmon-latest_linux_x86_64.tar.gz) that is regularly posted on this Github 'forum'. Please note that I learned you favor the Bioconda route for keeping Salmon up to date. Nevertheless, provided it doesn't take too much effort, I would appreciate it very much if you could still make the binaries available. - My 2nd question has to do with some basic QC-ing: I am currently analyzing a set of 96 mouse samples. While running Salmon, I noticed most samples do have a nice percentage of mapped reads (>80%), but I also noticed that for samples this percentage was much lower (<50%).; Q: Is there an easy way of obtaining these numbers (""percent_mapped"") for all samples that were mapped in a Salmon run (without manually reviewing all 96 samples the 'meta_info.json' file)? In other words, how to obtain an 'overall log file'?. Thanks,; Guido",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/252
https://github.com/COMBINE-lab/salmon/issues/253:363,Availability,error,error,363,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin. **Describe the bug**; I am trying to use Alevin to quantify a single cell RNA-Seq 10x Genomics CHROMIUM dataset. I am using Salmon 0.10.2, and it does not produce the count matrix. The output folder contains nothing but the log files. Specifically, I get the following error:; `[2018-07-19 16:27:46.916] [alevinLog] [error] Barcode not found in frequency table`; The full messages are bellow. **To Reproduce**; Steps and data to reproduce the behavior:; I explain how to download the data and reproduce the issue in the following. Specifically, please provide at least the following information:; * Which version of salmon was used?; 0.10.2. * How was salmon installed (compiled, downloaded executable, through bioconda)?; conda config --append channels conda-forge; conda config --append channels bioconda; conda install salmon=0.10.2. * Which reference (e.g. transcriptome) was used?; I am interested only in the transposons. Therefore, I am using the ""canonical DNA sequences of the transposable elements from species in the genus Drosophila"", which are available from the [Bergman](https://github.com/bergmanlab/transposons) Lab. Specifically, I use [this](https://github.com/bergmanlab/transposons/blob/master/current/transposon_sequence_set.fa) fasta file. The first 3 lines are:; >FBte0000104; GTGACATATCCATAAGTCCCTAAGACTTAAGCATATGCCTACATACTAATACACTTACAA; CACATACACCCCAATACAACATACACTACTCCGGATGTACCCAACAGATACCAGATAAGA; In another study, I have successfully used Salmon to quantify transposon expression from bulk RNA-Seq data with a mapping rate of 2%, which is enough for the kind of analysis that I am interested in. * Which read files were used?; The [SRR6327122](https://trace.ncbi.nlm.nih.gov/Traces/sra/?run=SRR6327122) run. The fastq files can be downloaded in a couple of hours using the SRA Toolkit, e.g.,; `fastq-dump --split-files --gzip --outdir ./ SRR6327122`; The first few lines of the ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253
https://github.com/COMBINE-lab/salmon/issues/253:411,Availability,error,error,411,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin. **Describe the bug**; I am trying to use Alevin to quantify a single cell RNA-Seq 10x Genomics CHROMIUM dataset. I am using Salmon 0.10.2, and it does not produce the count matrix. The output folder contains nothing but the log files. Specifically, I get the following error:; `[2018-07-19 16:27:46.916] [alevinLog] [error] Barcode not found in frequency table`; The full messages are bellow. **To Reproduce**; Steps and data to reproduce the behavior:; I explain how to download the data and reproduce the issue in the following. Specifically, please provide at least the following information:; * Which version of salmon was used?; 0.10.2. * How was salmon installed (compiled, downloaded executable, through bioconda)?; conda config --append channels conda-forge; conda config --append channels bioconda; conda install salmon=0.10.2. * Which reference (e.g. transcriptome) was used?; I am interested only in the transposons. Therefore, I am using the ""canonical DNA sequences of the transposable elements from species in the genus Drosophila"", which are available from the [Bergman](https://github.com/bergmanlab/transposons) Lab. Specifically, I use [this](https://github.com/bergmanlab/transposons/blob/master/current/transposon_sequence_set.fa) fasta file. The first 3 lines are:; >FBte0000104; GTGACATATCCATAAGTCCCTAAGACTTAAGCATATGCCTACATACTAATACACTTACAA; CACATACACCCCAATACAACATACACTACTCCGGATGTACCCAACAGATACCAGATAAGA; In another study, I have successfully used Salmon to quantify transposon expression from bulk RNA-Seq data with a mapping rate of 2%, which is enough for the kind of analysis that I am interested in. * Which read files were used?; The [SRR6327122](https://trace.ncbi.nlm.nih.gov/Traces/sra/?run=SRR6327122) run. The fastq files can be downloaded in a couple of hours using the SRA Toolkit, e.g.,; `fastq-dump --split-files --gzip --outdir ./ SRR6327122`; The first few lines of the ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253
https://github.com/COMBINE-lab/salmon/issues/253:565,Availability,down,download,565,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin. **Describe the bug**; I am trying to use Alevin to quantify a single cell RNA-Seq 10x Genomics CHROMIUM dataset. I am using Salmon 0.10.2, and it does not produce the count matrix. The output folder contains nothing but the log files. Specifically, I get the following error:; `[2018-07-19 16:27:46.916] [alevinLog] [error] Barcode not found in frequency table`; The full messages are bellow. **To Reproduce**; Steps and data to reproduce the behavior:; I explain how to download the data and reproduce the issue in the following. Specifically, please provide at least the following information:; * Which version of salmon was used?; 0.10.2. * How was salmon installed (compiled, downloaded executable, through bioconda)?; conda config --append channels conda-forge; conda config --append channels bioconda; conda install salmon=0.10.2. * Which reference (e.g. transcriptome) was used?; I am interested only in the transposons. Therefore, I am using the ""canonical DNA sequences of the transposable elements from species in the genus Drosophila"", which are available from the [Bergman](https://github.com/bergmanlab/transposons) Lab. Specifically, I use [this](https://github.com/bergmanlab/transposons/blob/master/current/transposon_sequence_set.fa) fasta file. The first 3 lines are:; >FBte0000104; GTGACATATCCATAAGTCCCTAAGACTTAAGCATATGCCTACATACTAATACACTTACAA; CACATACACCCCAATACAACATACACTACTCCGGATGTACCCAACAGATACCAGATAAGA; In another study, I have successfully used Salmon to quantify transposon expression from bulk RNA-Seq data with a mapping rate of 2%, which is enough for the kind of analysis that I am interested in. * Which read files were used?; The [SRR6327122](https://trace.ncbi.nlm.nih.gov/Traces/sra/?run=SRR6327122) run. The fastq files can be downloaded in a couple of hours using the SRA Toolkit, e.g.,; `fastq-dump --split-files --gzip --outdir ./ SRR6327122`; The first few lines of the ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253
https://github.com/COMBINE-lab/salmon/issues/253:774,Availability,down,downloaded,774,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin. **Describe the bug**; I am trying to use Alevin to quantify a single cell RNA-Seq 10x Genomics CHROMIUM dataset. I am using Salmon 0.10.2, and it does not produce the count matrix. The output folder contains nothing but the log files. Specifically, I get the following error:; `[2018-07-19 16:27:46.916] [alevinLog] [error] Barcode not found in frequency table`; The full messages are bellow. **To Reproduce**; Steps and data to reproduce the behavior:; I explain how to download the data and reproduce the issue in the following. Specifically, please provide at least the following information:; * Which version of salmon was used?; 0.10.2. * How was salmon installed (compiled, downloaded executable, through bioconda)?; conda config --append channels conda-forge; conda config --append channels bioconda; conda install salmon=0.10.2. * Which reference (e.g. transcriptome) was used?; I am interested only in the transposons. Therefore, I am using the ""canonical DNA sequences of the transposable elements from species in the genus Drosophila"", which are available from the [Bergman](https://github.com/bergmanlab/transposons) Lab. Specifically, I use [this](https://github.com/bergmanlab/transposons/blob/master/current/transposon_sequence_set.fa) fasta file. The first 3 lines are:; >FBte0000104; GTGACATATCCATAAGTCCCTAAGACTTAAGCATATGCCTACATACTAATACACTTACAA; CACATACACCCCAATACAACATACACTACTCCGGATGTACCCAACAGATACCAGATAAGA; In another study, I have successfully used Salmon to quantify transposon expression from bulk RNA-Seq data with a mapping rate of 2%, which is enough for the kind of analysis that I am interested in. * Which read files were used?; The [SRR6327122](https://trace.ncbi.nlm.nih.gov/Traces/sra/?run=SRR6327122) run. The fastq files can be downloaded in a couple of hours using the SRA Toolkit, e.g.,; `fastq-dump --split-files --gzip --outdir ./ SRR6327122`; The first few lines of the ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253
https://github.com/COMBINE-lab/salmon/issues/253:1151,Availability,avail,available,1151," bug**; I am trying to use Alevin to quantify a single cell RNA-Seq 10x Genomics CHROMIUM dataset. I am using Salmon 0.10.2, and it does not produce the count matrix. The output folder contains nothing but the log files. Specifically, I get the following error:; `[2018-07-19 16:27:46.916] [alevinLog] [error] Barcode not found in frequency table`; The full messages are bellow. **To Reproduce**; Steps and data to reproduce the behavior:; I explain how to download the data and reproduce the issue in the following. Specifically, please provide at least the following information:; * Which version of salmon was used?; 0.10.2. * How was salmon installed (compiled, downloaded executable, through bioconda)?; conda config --append channels conda-forge; conda config --append channels bioconda; conda install salmon=0.10.2. * Which reference (e.g. transcriptome) was used?; I am interested only in the transposons. Therefore, I am using the ""canonical DNA sequences of the transposable elements from species in the genus Drosophila"", which are available from the [Bergman](https://github.com/bergmanlab/transposons) Lab. Specifically, I use [this](https://github.com/bergmanlab/transposons/blob/master/current/transposon_sequence_set.fa) fasta file. The first 3 lines are:; >FBte0000104; GTGACATATCCATAAGTCCCTAAGACTTAAGCATATGCCTACATACTAATACACTTACAA; CACATACACCCCAATACAACATACACTACTCCGGATGTACCCAACAGATACCAGATAAGA; In another study, I have successfully used Salmon to quantify transposon expression from bulk RNA-Seq data with a mapping rate of 2%, which is enough for the kind of analysis that I am interested in. * Which read files were used?; The [SRR6327122](https://trace.ncbi.nlm.nih.gov/Traces/sra/?run=SRR6327122) run. The fastq files can be downloaded in a couple of hours using the SRA Toolkit, e.g.,; `fastq-dump --split-files --gzip --outdir ./ SRR6327122`; The first few lines of the fastq files are as follows:; `$ zcat SRR6327122_1.fastq.gz |head -n 4`; @SRR6327122.1 1 length=36; CTGATCCT",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253
https://github.com/COMBINE-lab/salmon/issues/253:1854,Availability,down,downloaded,1854,"fig --append channels bioconda; conda install salmon=0.10.2. * Which reference (e.g. transcriptome) was used?; I am interested only in the transposons. Therefore, I am using the ""canonical DNA sequences of the transposable elements from species in the genus Drosophila"", which are available from the [Bergman](https://github.com/bergmanlab/transposons) Lab. Specifically, I use [this](https://github.com/bergmanlab/transposons/blob/master/current/transposon_sequence_set.fa) fasta file. The first 3 lines are:; >FBte0000104; GTGACATATCCATAAGTCCCTAAGACTTAAGCATATGCCTACATACTAATACACTTACAA; CACATACACCCCAATACAACATACACTACTCCGGATGTACCCAACAGATACCAGATAAGA; In another study, I have successfully used Salmon to quantify transposon expression from bulk RNA-Seq data with a mapping rate of 2%, which is enough for the kind of analysis that I am interested in. * Which read files were used?; The [SRR6327122](https://trace.ncbi.nlm.nih.gov/Traces/sra/?run=SRR6327122) run. The fastq files can be downloaded in a couple of hours using the SRA Toolkit, e.g.,; `fastq-dump --split-files --gzip --outdir ./ SRR6327122`; The first few lines of the fastq files are as follows:; `$ zcat SRR6327122_1.fastq.gz |head -n 4`; @SRR6327122.1 1 length=36; CTGATCCTCGAGAGCACTCACAGAGTTTTTTGTTTT; +SRR6327122.1 1 length=36; AAFFFJJJJJJJJJJJJJJJJJJJJJ7-----A<-<; And; `$ zcat SRR6327122_2.fastq.gz |head -n 4`; @SRR6327122.1 1 length=88; CGGCCACAAGATCGCCTTTTTATCCCTCGCCCAGAGCACCCCCCGACCCCACATCCCCTGCTTCACGGCCCCCCTCGCGGCCTACCCG; +SRR6327122.1 1 length=88; --7-<7----7---77----77A-7--7-A7-7---7-A-A7<F-777-77-A---A<A----77--77------------7------. * Which which program options were used?; One can download the data and results tarball; [bcNotFound-2018-07-19.tar.gz](https://github.com/COMBINE-lab/salmon/files/2211985/bcNotFound-2018-07-19.tar.gz).; First, I indexed the reference using:; `salmon index -k 31 -t transposon_sequence_set.fa -i index`; Then, I ran Alevin using the following command:; `salmon alevin -l ISR -1 SRR63271",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253
https://github.com/COMBINE-lab/salmon/issues/253:2535,Availability,down,download,2535,"ave successfully used Salmon to quantify transposon expression from bulk RNA-Seq data with a mapping rate of 2%, which is enough for the kind of analysis that I am interested in. * Which read files were used?; The [SRR6327122](https://trace.ncbi.nlm.nih.gov/Traces/sra/?run=SRR6327122) run. The fastq files can be downloaded in a couple of hours using the SRA Toolkit, e.g.,; `fastq-dump --split-files --gzip --outdir ./ SRR6327122`; The first few lines of the fastq files are as follows:; `$ zcat SRR6327122_1.fastq.gz |head -n 4`; @SRR6327122.1 1 length=36; CTGATCCTCGAGAGCACTCACAGAGTTTTTTGTTTT; +SRR6327122.1 1 length=36; AAFFFJJJJJJJJJJJJJJJJJJJJJ7-----A<-<; And; `$ zcat SRR6327122_2.fastq.gz |head -n 4`; @SRR6327122.1 1 length=88; CGGCCACAAGATCGCCTTTTTATCCCTCGCCCAGAGCACCCCCCGACCCCACATCCCCTGCTTCACGGCCCCCCTCGCGGCCTACCCG; +SRR6327122.1 1 length=88; --7-<7----7---77----77A-7--7-A7-7---7-A-A7<F-777-77-A---A<A----77--77------------7------. * Which which program options were used?; One can download the data and results tarball; [bcNotFound-2018-07-19.tar.gz](https://github.com/COMBINE-lab/salmon/files/2211985/bcNotFound-2018-07-19.tar.gz).; First, I indexed the reference using:; `salmon index -k 31 -t transposon_sequence_set.fa -i index`; Then, I ran Alevin using the following command:; `salmon alevin -l ISR -1 SRR6327122_1.fastq.gz -2 SRR6327122_2.fastq.gz --chromium -i index -p 2 -o alevin_output --tgMap transposon_sequence_set.fa.tsv --whitelist cell_barcode_seq.txt --dumpCsvCounts`. **Expected behavior**; A clear and concise description of what you expected to happen.; The count matrix be saved when Alevin is done. **Screenshots**; The full output messages are:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Logs will be written to alevin_output/logs; ### salmon (single",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253
https://github.com/COMBINE-lab/salmon/issues/253:3272,Availability,avail,available,3272,"fastq.gz |head -n 4`; @SRR6327122.1 1 length=88; CGGCCACAAGATCGCCTTTTTATCCCTCGCCCAGAGCACCCCCCGACCCCACATCCCCTGCTTCACGGCCCCCCTCGCGGCCTACCCG; +SRR6327122.1 1 length=88; --7-<7----7---77----77A-7--7-A7-7---7-A-A7<F-777-77-A---A<A----77--77------------7------. * Which which program options were used?; One can download the data and results tarball; [bcNotFound-2018-07-19.tar.gz](https://github.com/COMBINE-lab/salmon/files/2211985/bcNotFound-2018-07-19.tar.gz).; First, I indexed the reference using:; `salmon index -k 31 -t transposon_sequence_set.fa -i index`; Then, I ran Alevin using the following command:; `salmon alevin -l ISR -1 SRR6327122_1.fastq.gz -2 SRR6327122_2.fastq.gz --chromium -i index -p 2 -o alevin_output --tgMap transposon_sequence_set.fa.tsv --whitelist cell_barcode_seq.txt --dumpCsvCounts`. **Expected behavior**; A clear and concise description of what you expected to happen.; The count matrix be saved when Alevin is done. **Screenshots**; The full output messages are:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Logs will be written to alevin_output/logs; ### salmon (single-cell-based) v0.10.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { SRR6327122_1.fastq.gz }; ### [ mates2 ] => { SRR6327122_2.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { index }; ### [ threads ] => { 2 }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { transposon_sequence_set.fa.tsv }; ### [ whitelist ] => { cell_barcode_seq.txt }; ### [ dumpCsvCounts ] => { }. [2018-07-19 18:24:03.053] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-19 18:24:03.059] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 87 Million barc",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253
https://github.com/COMBINE-lab/salmon/issues/253:3314,Availability,avail,available,3314,"AGCACCCCCCGACCCCACATCCCCTGCTTCACGGCCCCCCTCGCGGCCTACCCG; +SRR6327122.1 1 length=88; --7-<7----7---77----77A-7--7-A7-7---7-A-A7<F-777-77-A---A<A----77--77------------7------. * Which which program options were used?; One can download the data and results tarball; [bcNotFound-2018-07-19.tar.gz](https://github.com/COMBINE-lab/salmon/files/2211985/bcNotFound-2018-07-19.tar.gz).; First, I indexed the reference using:; `salmon index -k 31 -t transposon_sequence_set.fa -i index`; Then, I ran Alevin using the following command:; `salmon alevin -l ISR -1 SRR6327122_1.fastq.gz -2 SRR6327122_2.fastq.gz --chromium -i index -p 2 -o alevin_output --tgMap transposon_sequence_set.fa.tsv --whitelist cell_barcode_seq.txt --dumpCsvCounts`. **Expected behavior**; A clear and concise description of what you expected to happen.; The count matrix be saved when Alevin is done. **Screenshots**; The full output messages are:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Logs will be written to alevin_output/logs; ### salmon (single-cell-based) v0.10.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { SRR6327122_1.fastq.gz }; ### [ mates2 ] => { SRR6327122_2.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { index }; ### [ threads ] => { 2 }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { transposon_sequence_set.fa.tsv }; ### [ whitelist ] => { cell_barcode_seq.txt }; ### [ dumpCsvCounts ] => { }. [2018-07-19 18:24:03.053] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-19 18:24:03.059] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 87 Million barcodes. [2018-07-19 18:26:13.307] [alevinLog] [info] Done barcode density calculation",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253
https://github.com/COMBINE-lab/salmon/issues/253:5918,Availability,error,error,5918,"[2018-07-19 18:26:18.301] [alevinLog] [info] Total Unique barcodes found: 978816; [2018-07-19 18:26:18.301] [alevinLog] [info] Used Barcodes except Whitelist: 26208; [2018-07-19 18:26:18.504] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-07-19 18:26:18.505] [alevinLog] [info] parsing read library format; [2018-07-19 18:26:18.632] [stderrLog] [info] Loading Suffix Array ; [2018-07-19 18:26:18.641] [stderrLog] [info] Loading Transcript Info ; [2018-07-19 18:26:18.647] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-19 18:26:18.648] [stderrLog] [info] There were 179 set bits in the bit array; [2018-07-19 18:26:18.648] [stderrLog] [info] Computing transcript lengths; [2018-07-19 18:26:18.648] [stderrLog] [info] Waiting to finish loading hash; [2018-07-19 18:26:18.720] [stderrLog] [info] Done loading index; [2018-07-19 18:26:18.506] [jointLog] [info] There is 1 library.; [2018-07-19 18:26:18.629] [jointLog] [info] Loading Quasi index; [2018-07-19 18:26:18.631] [jointLog] [info] Loading 32-bit quasi index; [2018-07-19 18:26:18.720] [jointLog] [info] done; [2018-07-19 18:26:18.720] [jointLog] [info] Index contained 179 targets; [2018-07-19 18:26:18.728] [alevinLog] [error] Barcode not found in frequency table. **Desktop (please complete the following information):**; - OS: Linux; - Version:; `$ uname -a; Linux login1 3.0.101-0.47.86.1.11753.0.PTF-default #1 SMP Wed Oct 19 14:11:00 UTC 2016 (56c73f1) x86_64 x86_64 x86_64 GNU/Linux`; `$ lsb_release -a; LSB Version:	core-2.0-noarch:core-3.2-noarch:core-4.0-noarch:core-2.0-x86_64:core-3.2-x86_64:core-4.0-x86_64:desktop-4.0-amd64:desktop-4.0-noarch:graphics-2.0-amd64:graphics-2.0-noarch:graphics-3.2-amd64:graphics-3.2-noarch:graphics-4.0-amd64:graphics-4.0-noarch; Distributor ID:	SUSE LINUX; Description:	SUSE Linux Enterprise Server 11 (x86_64); Release:	11; Codename:	n/a`. **Additional context**; I included a 10K subset of reads in the tarball, which leads to the same behavior by Alevin.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253
https://github.com/COMBINE-lab/salmon/issues/253:753,Deployability,install,installed,753,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin. **Describe the bug**; I am trying to use Alevin to quantify a single cell RNA-Seq 10x Genomics CHROMIUM dataset. I am using Salmon 0.10.2, and it does not produce the count matrix. The output folder contains nothing but the log files. Specifically, I get the following error:; `[2018-07-19 16:27:46.916] [alevinLog] [error] Barcode not found in frequency table`; The full messages are bellow. **To Reproduce**; Steps and data to reproduce the behavior:; I explain how to download the data and reproduce the issue in the following. Specifically, please provide at least the following information:; * Which version of salmon was used?; 0.10.2. * How was salmon installed (compiled, downloaded executable, through bioconda)?; conda config --append channels conda-forge; conda config --append channels bioconda; conda install salmon=0.10.2. * Which reference (e.g. transcriptome) was used?; I am interested only in the transposons. Therefore, I am using the ""canonical DNA sequences of the transposable elements from species in the genus Drosophila"", which are available from the [Bergman](https://github.com/bergmanlab/transposons) Lab. Specifically, I use [this](https://github.com/bergmanlab/transposons/blob/master/current/transposon_sequence_set.fa) fasta file. The first 3 lines are:; >FBte0000104; GTGACATATCCATAAGTCCCTAAGACTTAAGCATATGCCTACATACTAATACACTTACAA; CACATACACCCCAATACAACATACACTACTCCGGATGTACCCAACAGATACCAGATAAGA; In another study, I have successfully used Salmon to quantify transposon expression from bulk RNA-Seq data with a mapping rate of 2%, which is enough for the kind of analysis that I am interested in. * Which read files were used?; The [SRR6327122](https://trace.ncbi.nlm.nih.gov/Traces/sra/?run=SRR6327122) run. The fastq files can be downloaded in a couple of hours using the SRA Toolkit, e.g.,; `fastq-dump --split-files --gzip --outdir ./ SRR6327122`; The first few lines of the ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253
https://github.com/COMBINE-lab/salmon/issues/253:908,Deployability,install,install,908,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin. **Describe the bug**; I am trying to use Alevin to quantify a single cell RNA-Seq 10x Genomics CHROMIUM dataset. I am using Salmon 0.10.2, and it does not produce the count matrix. The output folder contains nothing but the log files. Specifically, I get the following error:; `[2018-07-19 16:27:46.916] [alevinLog] [error] Barcode not found in frequency table`; The full messages are bellow. **To Reproduce**; Steps and data to reproduce the behavior:; I explain how to download the data and reproduce the issue in the following. Specifically, please provide at least the following information:; * Which version of salmon was used?; 0.10.2. * How was salmon installed (compiled, downloaded executable, through bioconda)?; conda config --append channels conda-forge; conda config --append channels bioconda; conda install salmon=0.10.2. * Which reference (e.g. transcriptome) was used?; I am interested only in the transposons. Therefore, I am using the ""canonical DNA sequences of the transposable elements from species in the genus Drosophila"", which are available from the [Bergman](https://github.com/bergmanlab/transposons) Lab. Specifically, I use [this](https://github.com/bergmanlab/transposons/blob/master/current/transposon_sequence_set.fa) fasta file. The first 3 lines are:; >FBte0000104; GTGACATATCCATAAGTCCCTAAGACTTAAGCATATGCCTACATACTAATACACTTACAA; CACATACACCCCAATACAACATACACTACTCCGGATGTACCCAACAGATACCAGATAAGA; In another study, I have successfully used Salmon to quantify transposon expression from bulk RNA-Seq data with a mapping rate of 2%, which is enough for the kind of analysis that I am interested in. * Which read files were used?; The [SRR6327122](https://trace.ncbi.nlm.nih.gov/Traces/sra/?run=SRR6327122) run. The fastq files can be downloaded in a couple of hours using the SRA Toolkit, e.g.,; `fastq-dump --split-files --gzip --outdir ./ SRR6327122`; The first few lines of the ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253
https://github.com/COMBINE-lab/salmon/issues/253:3365,Deployability,release,releases,3365,"--77----77A-7--7-A7-7---7-A-A7<F-777-77-A---A<A----77--77------------7------. * Which which program options were used?; One can download the data and results tarball; [bcNotFound-2018-07-19.tar.gz](https://github.com/COMBINE-lab/salmon/files/2211985/bcNotFound-2018-07-19.tar.gz).; First, I indexed the reference using:; `salmon index -k 31 -t transposon_sequence_set.fa -i index`; Then, I ran Alevin using the following command:; `salmon alevin -l ISR -1 SRR6327122_1.fastq.gz -2 SRR6327122_2.fastq.gz --chromium -i index -p 2 -o alevin_output --tgMap transposon_sequence_set.fa.tsv --whitelist cell_barcode_seq.txt --dumpCsvCounts`. **Expected behavior**; A clear and concise description of what you expected to happen.; The count matrix be saved when Alevin is done. **Screenshots**; The full output messages are:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Logs will be written to alevin_output/logs; ### salmon (single-cell-based) v0.10.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { SRR6327122_1.fastq.gz }; ### [ mates2 ] => { SRR6327122_2.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { index }; ### [ threads ] => { 2 }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { transposon_sequence_set.fa.tsv }; ### [ whitelist ] => { cell_barcode_seq.txt }; ### [ dumpCsvCounts ] => { }. [2018-07-19 18:24:03.053] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-19 18:24:03.059] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 87 Million barcodes. [2018-07-19 18:26:13.307] [alevinLog] [info] Done barcode density calculation.; [2018-07-19 18:26:13.307] [alevinLog] [info] # Barcodes Used: 86885223 / 87959276.; [2018-07",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253
https://github.com/COMBINE-lab/salmon/issues/253:3434,Deployability,upgrade,upgrade,3434,"--77----77A-7--7-A7-7---7-A-A7<F-777-77-A---A<A----77--77------------7------. * Which which program options were used?; One can download the data and results tarball; [bcNotFound-2018-07-19.tar.gz](https://github.com/COMBINE-lab/salmon/files/2211985/bcNotFound-2018-07-19.tar.gz).; First, I indexed the reference using:; `salmon index -k 31 -t transposon_sequence_set.fa -i index`; Then, I ran Alevin using the following command:; `salmon alevin -l ISR -1 SRR6327122_1.fastq.gz -2 SRR6327122_2.fastq.gz --chromium -i index -p 2 -o alevin_output --tgMap transposon_sequence_set.fa.tsv --whitelist cell_barcode_seq.txt --dumpCsvCounts`. **Expected behavior**; A clear and concise description of what you expected to happen.; The count matrix be saved when Alevin is done. **Screenshots**; The full output messages are:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Logs will be written to alevin_output/logs; ### salmon (single-cell-based) v0.10.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { SRR6327122_1.fastq.gz }; ### [ mates2 ] => { SRR6327122_2.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { index }; ### [ threads ] => { 2 }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { transposon_sequence_set.fa.tsv }; ### [ whitelist ] => { cell_barcode_seq.txt }; ### [ dumpCsvCounts ] => { }. [2018-07-19 18:24:03.053] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-19 18:24:03.059] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 87 Million barcodes. [2018-07-19 18:26:13.307] [alevinLog] [info] Done barcode density calculation.; [2018-07-19 18:26:13.307] [alevinLog] [info] # Barcodes Used: 86885223 / 87959276.; [2018-07",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253
https://github.com/COMBINE-lab/salmon/issues/253:6555,Deployability,Release,Release,6555,"[2018-07-19 18:26:18.301] [alevinLog] [info] Total Unique barcodes found: 978816; [2018-07-19 18:26:18.301] [alevinLog] [info] Used Barcodes except Whitelist: 26208; [2018-07-19 18:26:18.504] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-07-19 18:26:18.505] [alevinLog] [info] parsing read library format; [2018-07-19 18:26:18.632] [stderrLog] [info] Loading Suffix Array ; [2018-07-19 18:26:18.641] [stderrLog] [info] Loading Transcript Info ; [2018-07-19 18:26:18.647] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-19 18:26:18.648] [stderrLog] [info] There were 179 set bits in the bit array; [2018-07-19 18:26:18.648] [stderrLog] [info] Computing transcript lengths; [2018-07-19 18:26:18.648] [stderrLog] [info] Waiting to finish loading hash; [2018-07-19 18:26:18.720] [stderrLog] [info] Done loading index; [2018-07-19 18:26:18.506] [jointLog] [info] There is 1 library.; [2018-07-19 18:26:18.629] [jointLog] [info] Loading Quasi index; [2018-07-19 18:26:18.631] [jointLog] [info] Loading 32-bit quasi index; [2018-07-19 18:26:18.720] [jointLog] [info] done; [2018-07-19 18:26:18.720] [jointLog] [info] Index contained 179 targets; [2018-07-19 18:26:18.728] [alevinLog] [error] Barcode not found in frequency table. **Desktop (please complete the following information):**; - OS: Linux; - Version:; `$ uname -a; Linux login1 3.0.101-0.47.86.1.11753.0.PTF-default #1 SMP Wed Oct 19 14:11:00 UTC 2016 (56c73f1) x86_64 x86_64 x86_64 GNU/Linux`; `$ lsb_release -a; LSB Version:	core-2.0-noarch:core-3.2-noarch:core-4.0-noarch:core-2.0-x86_64:core-3.2-x86_64:core-4.0-x86_64:desktop-4.0-amd64:desktop-4.0-noarch:graphics-2.0-amd64:graphics-2.0-noarch:graphics-3.2-amd64:graphics-3.2-noarch:graphics-4.0-amd64:graphics-4.0-noarch; Distributor ID:	SUSE LINUX; Description:	SUSE Linux Enterprise Server 11 (x86_64); Release:	11; Codename:	n/a`. **Additional context**; I included a 10K subset of reads in the tarball, which leads to the same behavior by Alevin.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253
https://github.com/COMBINE-lab/salmon/issues/253:466,Integrability,message,messages,466,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin. **Describe the bug**; I am trying to use Alevin to quantify a single cell RNA-Seq 10x Genomics CHROMIUM dataset. I am using Salmon 0.10.2, and it does not produce the count matrix. The output folder contains nothing but the log files. Specifically, I get the following error:; `[2018-07-19 16:27:46.916] [alevinLog] [error] Barcode not found in frequency table`; The full messages are bellow. **To Reproduce**; Steps and data to reproduce the behavior:; I explain how to download the data and reproduce the issue in the following. Specifically, please provide at least the following information:; * Which version of salmon was used?; 0.10.2. * How was salmon installed (compiled, downloaded executable, through bioconda)?; conda config --append channels conda-forge; conda config --append channels bioconda; conda install salmon=0.10.2. * Which reference (e.g. transcriptome) was used?; I am interested only in the transposons. Therefore, I am using the ""canonical DNA sequences of the transposable elements from species in the genus Drosophila"", which are available from the [Bergman](https://github.com/bergmanlab/transposons) Lab. Specifically, I use [this](https://github.com/bergmanlab/transposons/blob/master/current/transposon_sequence_set.fa) fasta file. The first 3 lines are:; >FBte0000104; GTGACATATCCATAAGTCCCTAAGACTTAAGCATATGCCTACATACTAATACACTTACAA; CACATACACCCCAATACAACATACACTACTCCGGATGTACCCAACAGATACCAGATAAGA; In another study, I have successfully used Salmon to quantify transposon expression from bulk RNA-Seq data with a mapping rate of 2%, which is enough for the kind of analysis that I am interested in. * Which read files were used?; The [SRR6327122](https://trace.ncbi.nlm.nih.gov/Traces/sra/?run=SRR6327122) run. The fastq files can be downloaded in a couple of hours using the SRA Toolkit, e.g.,; `fastq-dump --split-files --gzip --outdir ./ SRR6327122`; The first few lines of the ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253
https://github.com/COMBINE-lab/salmon/issues/253:3210,Integrability,message,messages,3210,"fastq.gz |head -n 4`; @SRR6327122.1 1 length=88; CGGCCACAAGATCGCCTTTTTATCCCTCGCCCAGAGCACCCCCCGACCCCACATCCCCTGCTTCACGGCCCCCCTCGCGGCCTACCCG; +SRR6327122.1 1 length=88; --7-<7----7---77----77A-7--7-A7-7---7-A-A7<F-777-77-A---A<A----77--77------------7------. * Which which program options were used?; One can download the data and results tarball; [bcNotFound-2018-07-19.tar.gz](https://github.com/COMBINE-lab/salmon/files/2211985/bcNotFound-2018-07-19.tar.gz).; First, I indexed the reference using:; `salmon index -k 31 -t transposon_sequence_set.fa -i index`; Then, I ran Alevin using the following command:; `salmon alevin -l ISR -1 SRR6327122_1.fastq.gz -2 SRR6327122_2.fastq.gz --chromium -i index -p 2 -o alevin_output --tgMap transposon_sequence_set.fa.tsv --whitelist cell_barcode_seq.txt --dumpCsvCounts`. **Expected behavior**; A clear and concise description of what you expected to happen.; The count matrix be saved when Alevin is done. **Screenshots**; The full output messages are:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Logs will be written to alevin_output/logs; ### salmon (single-cell-based) v0.10.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { SRR6327122_1.fastq.gz }; ### [ mates2 ] => { SRR6327122_2.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { index }; ### [ threads ] => { 2 }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { transposon_sequence_set.fa.tsv }; ### [ whitelist ] => { cell_barcode_seq.txt }; ### [ dumpCsvCounts ] => { }. [2018-07-19 18:24:03.053] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-19 18:24:03.059] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 87 Million barc",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253
https://github.com/COMBINE-lab/salmon/issues/253:823,Modifiability,config,config,823,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin. **Describe the bug**; I am trying to use Alevin to quantify a single cell RNA-Seq 10x Genomics CHROMIUM dataset. I am using Salmon 0.10.2, and it does not produce the count matrix. The output folder contains nothing but the log files. Specifically, I get the following error:; `[2018-07-19 16:27:46.916] [alevinLog] [error] Barcode not found in frequency table`; The full messages are bellow. **To Reproduce**; Steps and data to reproduce the behavior:; I explain how to download the data and reproduce the issue in the following. Specifically, please provide at least the following information:; * Which version of salmon was used?; 0.10.2. * How was salmon installed (compiled, downloaded executable, through bioconda)?; conda config --append channels conda-forge; conda config --append channels bioconda; conda install salmon=0.10.2. * Which reference (e.g. transcriptome) was used?; I am interested only in the transposons. Therefore, I am using the ""canonical DNA sequences of the transposable elements from species in the genus Drosophila"", which are available from the [Bergman](https://github.com/bergmanlab/transposons) Lab. Specifically, I use [this](https://github.com/bergmanlab/transposons/blob/master/current/transposon_sequence_set.fa) fasta file. The first 3 lines are:; >FBte0000104; GTGACATATCCATAAGTCCCTAAGACTTAAGCATATGCCTACATACTAATACACTTACAA; CACATACACCCCAATACAACATACACTACTCCGGATGTACCCAACAGATACCAGATAAGA; In another study, I have successfully used Salmon to quantify transposon expression from bulk RNA-Seq data with a mapping rate of 2%, which is enough for the kind of analysis that I am interested in. * Which read files were used?; The [SRR6327122](https://trace.ncbi.nlm.nih.gov/Traces/sra/?run=SRR6327122) run. The fastq files can be downloaded in a couple of hours using the SRA Toolkit, e.g.,; `fastq-dump --split-files --gzip --outdir ./ SRR6327122`; The first few lines of the ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253
https://github.com/COMBINE-lab/salmon/issues/253:867,Modifiability,config,config,867,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin. **Describe the bug**; I am trying to use Alevin to quantify a single cell RNA-Seq 10x Genomics CHROMIUM dataset. I am using Salmon 0.10.2, and it does not produce the count matrix. The output folder contains nothing but the log files. Specifically, I get the following error:; `[2018-07-19 16:27:46.916] [alevinLog] [error] Barcode not found in frequency table`; The full messages are bellow. **To Reproduce**; Steps and data to reproduce the behavior:; I explain how to download the data and reproduce the issue in the following. Specifically, please provide at least the following information:; * Which version of salmon was used?; 0.10.2. * How was salmon installed (compiled, downloaded executable, through bioconda)?; conda config --append channels conda-forge; conda config --append channels bioconda; conda install salmon=0.10.2. * Which reference (e.g. transcriptome) was used?; I am interested only in the transposons. Therefore, I am using the ""canonical DNA sequences of the transposable elements from species in the genus Drosophila"", which are available from the [Bergman](https://github.com/bergmanlab/transposons) Lab. Specifically, I use [this](https://github.com/bergmanlab/transposons/blob/master/current/transposon_sequence_set.fa) fasta file. The first 3 lines are:; >FBte0000104; GTGACATATCCATAAGTCCCTAAGACTTAAGCATATGCCTACATACTAATACACTTACAA; CACATACACCCCAATACAACATACACTACTCCGGATGTACCCAACAGATACCAGATAAGA; In another study, I have successfully used Salmon to quantify transposon expression from bulk RNA-Seq data with a mapping rate of 2%, which is enough for the kind of analysis that I am interested in. * Which read files were used?; The [SRR6327122](https://trace.ncbi.nlm.nih.gov/Traces/sra/?run=SRR6327122) run. The fastq files can be downloaded in a couple of hours using the SRA Toolkit, e.g.,; `fastq-dump --split-files --gzip --outdir ./ SRR6327122`; The first few lines of the ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253
https://github.com/COMBINE-lab/salmon/issues/253:5080,Performance,Load,Loading,5080,agments will be ignored.; [2018-07-19 18:24:03.059] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 87 Million barcodes. [2018-07-19 18:26:13.307] [alevinLog] [info] Done barcode density calculation.; [2018-07-19 18:26:13.307] [alevinLog] [info] # Barcodes Used: 86885223 / 87959276.; [2018-07-19 18:26:13.334] [alevinLog] [info] Done importing white-list Barcodes; [2018-07-19 18:26:13.334] [alevinLog] [info] Total 54879 white-listed Barcodes; [2018-07-19 18:26:18.285] [alevinLog] [info] Done populating Z matrix; [2018-07-19 18:26:18.300] [alevinLog] [info] Done indexing Barcodes; [2018-07-19 18:26:18.301] [alevinLog] [info] Total Unique barcodes found: 978816; [2018-07-19 18:26:18.301] [alevinLog] [info] Used Barcodes except Whitelist: 26208; [2018-07-19 18:26:18.504] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-07-19 18:26:18.505] [alevinLog] [info] parsing read library format; [2018-07-19 18:26:18.632] [stderrLog] [info] Loading Suffix Array ; [2018-07-19 18:26:18.641] [stderrLog] [info] Loading Transcript Info ; [2018-07-19 18:26:18.647] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-19 18:26:18.648] [stderrLog] [info] There were 179 set bits in the bit array; [2018-07-19 18:26:18.648] [stderrLog] [info] Computing transcript lengths; [2018-07-19 18:26:18.648] [stderrLog] [info] Waiting to finish loading hash; [2018-07-19 18:26:18.720] [stderrLog] [info] Done loading index; [2018-07-19 18:26:18.506] [jointLog] [info] There is 1 library.; [2018-07-19 18:26:18.629] [jointLog] [info] Loading Quasi index; [2018-07-19 18:26:18.631] [jointLog] [info] Loading 32-bit quasi index; [2018-07-19 18:26:18.720] [jointLog] [info] done; [2018-07-19 18:26:18.720] [jointLog] [info] Index contained 179 targets; [2018-07-19 18:26:18.728] [alevinLog] [error] Barcode not found in frequency table. **Desktop (please complete the following information):**; - OS: Linux; - Version:; `$ uname -a; Linux login1 3.0.101-0.47.86.1.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253
https://github.com/COMBINE-lab/salmon/issues/253:5148,Performance,Load,Loading,5148,] Processing barcodes files (if Present) . ; processed 87 Million barcodes. [2018-07-19 18:26:13.307] [alevinLog] [info] Done barcode density calculation.; [2018-07-19 18:26:13.307] [alevinLog] [info] # Barcodes Used: 86885223 / 87959276.; [2018-07-19 18:26:13.334] [alevinLog] [info] Done importing white-list Barcodes; [2018-07-19 18:26:13.334] [alevinLog] [info] Total 54879 white-listed Barcodes; [2018-07-19 18:26:18.285] [alevinLog] [info] Done populating Z matrix; [2018-07-19 18:26:18.300] [alevinLog] [info] Done indexing Barcodes; [2018-07-19 18:26:18.301] [alevinLog] [info] Total Unique barcodes found: 978816; [2018-07-19 18:26:18.301] [alevinLog] [info] Used Barcodes except Whitelist: 26208; [2018-07-19 18:26:18.504] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-07-19 18:26:18.505] [alevinLog] [info] parsing read library format; [2018-07-19 18:26:18.632] [stderrLog] [info] Loading Suffix Array ; [2018-07-19 18:26:18.641] [stderrLog] [info] Loading Transcript Info ; [2018-07-19 18:26:18.647] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-19 18:26:18.648] [stderrLog] [info] There were 179 set bits in the bit array; [2018-07-19 18:26:18.648] [stderrLog] [info] Computing transcript lengths; [2018-07-19 18:26:18.648] [stderrLog] [info] Waiting to finish loading hash; [2018-07-19 18:26:18.720] [stderrLog] [info] Done loading index; [2018-07-19 18:26:18.506] [jointLog] [info] There is 1 library.; [2018-07-19 18:26:18.629] [jointLog] [info] Loading Quasi index; [2018-07-19 18:26:18.631] [jointLog] [info] Loading 32-bit quasi index; [2018-07-19 18:26:18.720] [jointLog] [info] done; [2018-07-19 18:26:18.720] [jointLog] [info] Index contained 179 targets; [2018-07-19 18:26:18.728] [alevinLog] [error] Barcode not found in frequency table. **Desktop (please complete the following information):**; - OS: Linux; - Version:; `$ uname -a; Linux login1 3.0.101-0.47.86.1.11753.0.PTF-default #1 SMP Wed Oct 19 14:11:00 UTC 2016 (56c73f1) x86_,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253
https://github.com/COMBINE-lab/salmon/issues/253:5219,Performance,Load,Loading,5219,. [2018-07-19 18:26:13.307] [alevinLog] [info] Done barcode density calculation.; [2018-07-19 18:26:13.307] [alevinLog] [info] # Barcodes Used: 86885223 / 87959276.; [2018-07-19 18:26:13.334] [alevinLog] [info] Done importing white-list Barcodes; [2018-07-19 18:26:13.334] [alevinLog] [info] Total 54879 white-listed Barcodes; [2018-07-19 18:26:18.285] [alevinLog] [info] Done populating Z matrix; [2018-07-19 18:26:18.300] [alevinLog] [info] Done indexing Barcodes; [2018-07-19 18:26:18.301] [alevinLog] [info] Total Unique barcodes found: 978816; [2018-07-19 18:26:18.301] [alevinLog] [info] Used Barcodes except Whitelist: 26208; [2018-07-19 18:26:18.504] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-07-19 18:26:18.505] [alevinLog] [info] parsing read library format; [2018-07-19 18:26:18.632] [stderrLog] [info] Loading Suffix Array ; [2018-07-19 18:26:18.641] [stderrLog] [info] Loading Transcript Info ; [2018-07-19 18:26:18.647] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-19 18:26:18.648] [stderrLog] [info] There were 179 set bits in the bit array; [2018-07-19 18:26:18.648] [stderrLog] [info] Computing transcript lengths; [2018-07-19 18:26:18.648] [stderrLog] [info] Waiting to finish loading hash; [2018-07-19 18:26:18.720] [stderrLog] [info] Done loading index; [2018-07-19 18:26:18.506] [jointLog] [info] There is 1 library.; [2018-07-19 18:26:18.629] [jointLog] [info] Loading Quasi index; [2018-07-19 18:26:18.631] [jointLog] [info] Loading 32-bit quasi index; [2018-07-19 18:26:18.720] [jointLog] [info] done; [2018-07-19 18:26:18.720] [jointLog] [info] Index contained 179 targets; [2018-07-19 18:26:18.728] [alevinLog] [error] Barcode not found in frequency table. **Desktop (please complete the following information):**; - OS: Linux; - Version:; `$ uname -a; Linux login1 3.0.101-0.47.86.1.11753.0.PTF-default #1 SMP Wed Oct 19 14:11:00 UTC 2016 (56c73f1) x86_64 x86_64 x86_64 GNU/Linux`; `$ lsb_release -a; LSB Version:	core-2.0-noa,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253
https://github.com/COMBINE-lab/salmon/issues/253:5475,Performance,load,loading,5475,arcodes; [2018-07-19 18:26:13.334] [alevinLog] [info] Total 54879 white-listed Barcodes; [2018-07-19 18:26:18.285] [alevinLog] [info] Done populating Z matrix; [2018-07-19 18:26:18.300] [alevinLog] [info] Done indexing Barcodes; [2018-07-19 18:26:18.301] [alevinLog] [info] Total Unique barcodes found: 978816; [2018-07-19 18:26:18.301] [alevinLog] [info] Used Barcodes except Whitelist: 26208; [2018-07-19 18:26:18.504] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-07-19 18:26:18.505] [alevinLog] [info] parsing read library format; [2018-07-19 18:26:18.632] [stderrLog] [info] Loading Suffix Array ; [2018-07-19 18:26:18.641] [stderrLog] [info] Loading Transcript Info ; [2018-07-19 18:26:18.647] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-19 18:26:18.648] [stderrLog] [info] There were 179 set bits in the bit array; [2018-07-19 18:26:18.648] [stderrLog] [info] Computing transcript lengths; [2018-07-19 18:26:18.648] [stderrLog] [info] Waiting to finish loading hash; [2018-07-19 18:26:18.720] [stderrLog] [info] Done loading index; [2018-07-19 18:26:18.506] [jointLog] [info] There is 1 library.; [2018-07-19 18:26:18.629] [jointLog] [info] Loading Quasi index; [2018-07-19 18:26:18.631] [jointLog] [info] Loading 32-bit quasi index; [2018-07-19 18:26:18.720] [jointLog] [info] done; [2018-07-19 18:26:18.720] [jointLog] [info] Index contained 179 targets; [2018-07-19 18:26:18.728] [alevinLog] [error] Barcode not found in frequency table. **Desktop (please complete the following information):**; - OS: Linux; - Version:; `$ uname -a; Linux login1 3.0.101-0.47.86.1.11753.0.PTF-default #1 SMP Wed Oct 19 14:11:00 UTC 2016 (56c73f1) x86_64 x86_64 x86_64 GNU/Linux`; `$ lsb_release -a; LSB Version:	core-2.0-noarch:core-3.2-noarch:core-4.0-noarch:core-2.0-x86_64:core-3.2-x86_64:core-4.0-x86_64:desktop-4.0-amd64:desktop-4.0-noarch:graphics-2.0-amd64:graphics-2.0-noarch:graphics-3.2-amd64:graphics-3.2-noarch:graphics-4.0-amd64:graphics-4.0-noarch; ,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253
https://github.com/COMBINE-lab/salmon/issues/253:5539,Performance,load,loading,5539,-listed Barcodes; [2018-07-19 18:26:18.285] [alevinLog] [info] Done populating Z matrix; [2018-07-19 18:26:18.300] [alevinLog] [info] Done indexing Barcodes; [2018-07-19 18:26:18.301] [alevinLog] [info] Total Unique barcodes found: 978816; [2018-07-19 18:26:18.301] [alevinLog] [info] Used Barcodes except Whitelist: 26208; [2018-07-19 18:26:18.504] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-07-19 18:26:18.505] [alevinLog] [info] parsing read library format; [2018-07-19 18:26:18.632] [stderrLog] [info] Loading Suffix Array ; [2018-07-19 18:26:18.641] [stderrLog] [info] Loading Transcript Info ; [2018-07-19 18:26:18.647] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-19 18:26:18.648] [stderrLog] [info] There were 179 set bits in the bit array; [2018-07-19 18:26:18.648] [stderrLog] [info] Computing transcript lengths; [2018-07-19 18:26:18.648] [stderrLog] [info] Waiting to finish loading hash; [2018-07-19 18:26:18.720] [stderrLog] [info] Done loading index; [2018-07-19 18:26:18.506] [jointLog] [info] There is 1 library.; [2018-07-19 18:26:18.629] [jointLog] [info] Loading Quasi index; [2018-07-19 18:26:18.631] [jointLog] [info] Loading 32-bit quasi index; [2018-07-19 18:26:18.720] [jointLog] [info] done; [2018-07-19 18:26:18.720] [jointLog] [info] Index contained 179 targets; [2018-07-19 18:26:18.728] [alevinLog] [error] Barcode not found in frequency table. **Desktop (please complete the following information):**; - OS: Linux; - Version:; `$ uname -a; Linux login1 3.0.101-0.47.86.1.11753.0.PTF-default #1 SMP Wed Oct 19 14:11:00 UTC 2016 (56c73f1) x86_64 x86_64 x86_64 GNU/Linux`; `$ lsb_release -a; LSB Version:	core-2.0-noarch:core-3.2-noarch:core-4.0-noarch:core-2.0-x86_64:core-3.2-x86_64:core-4.0-x86_64:desktop-4.0-amd64:desktop-4.0-noarch:graphics-2.0-amd64:graphics-2.0-noarch:graphics-3.2-amd64:graphics-3.2-noarch:graphics-4.0-amd64:graphics-4.0-noarch; Distributor ID:	SUSE LINUX; Description:	SUSE Linux Enterprise Server 1,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253
https://github.com/COMBINE-lab/salmon/issues/253:5663,Performance,Load,Loading,5663,"fo] Done indexing Barcodes; [2018-07-19 18:26:18.301] [alevinLog] [info] Total Unique barcodes found: 978816; [2018-07-19 18:26:18.301] [alevinLog] [info] Used Barcodes except Whitelist: 26208; [2018-07-19 18:26:18.504] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-07-19 18:26:18.505] [alevinLog] [info] parsing read library format; [2018-07-19 18:26:18.632] [stderrLog] [info] Loading Suffix Array ; [2018-07-19 18:26:18.641] [stderrLog] [info] Loading Transcript Info ; [2018-07-19 18:26:18.647] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-19 18:26:18.648] [stderrLog] [info] There were 179 set bits in the bit array; [2018-07-19 18:26:18.648] [stderrLog] [info] Computing transcript lengths; [2018-07-19 18:26:18.648] [stderrLog] [info] Waiting to finish loading hash; [2018-07-19 18:26:18.720] [stderrLog] [info] Done loading index; [2018-07-19 18:26:18.506] [jointLog] [info] There is 1 library.; [2018-07-19 18:26:18.629] [jointLog] [info] Loading Quasi index; [2018-07-19 18:26:18.631] [jointLog] [info] Loading 32-bit quasi index; [2018-07-19 18:26:18.720] [jointLog] [info] done; [2018-07-19 18:26:18.720] [jointLog] [info] Index contained 179 targets; [2018-07-19 18:26:18.728] [alevinLog] [error] Barcode not found in frequency table. **Desktop (please complete the following information):**; - OS: Linux; - Version:; `$ uname -a; Linux login1 3.0.101-0.47.86.1.11753.0.PTF-default #1 SMP Wed Oct 19 14:11:00 UTC 2016 (56c73f1) x86_64 x86_64 x86_64 GNU/Linux`; `$ lsb_release -a; LSB Version:	core-2.0-noarch:core-3.2-noarch:core-4.0-noarch:core-2.0-x86_64:core-3.2-x86_64:core-4.0-x86_64:desktop-4.0-amd64:desktop-4.0-noarch:graphics-2.0-amd64:graphics-2.0-noarch:graphics-3.2-amd64:graphics-3.2-noarch:graphics-4.0-amd64:graphics-4.0-noarch; Distributor ID:	SUSE LINUX; Description:	SUSE Linux Enterprise Server 11 (x86_64); Release:	11; Codename:	n/a`. **Additional context**; I included a 10K subset of reads in the tarball, which leads to t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253
https://github.com/COMBINE-lab/salmon/issues/253:5728,Performance,Load,Loading,5728,"[2018-07-19 18:26:18.301] [alevinLog] [info] Total Unique barcodes found: 978816; [2018-07-19 18:26:18.301] [alevinLog] [info] Used Barcodes except Whitelist: 26208; [2018-07-19 18:26:18.504] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-07-19 18:26:18.505] [alevinLog] [info] parsing read library format; [2018-07-19 18:26:18.632] [stderrLog] [info] Loading Suffix Array ; [2018-07-19 18:26:18.641] [stderrLog] [info] Loading Transcript Info ; [2018-07-19 18:26:18.647] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-19 18:26:18.648] [stderrLog] [info] There were 179 set bits in the bit array; [2018-07-19 18:26:18.648] [stderrLog] [info] Computing transcript lengths; [2018-07-19 18:26:18.648] [stderrLog] [info] Waiting to finish loading hash; [2018-07-19 18:26:18.720] [stderrLog] [info] Done loading index; [2018-07-19 18:26:18.506] [jointLog] [info] There is 1 library.; [2018-07-19 18:26:18.629] [jointLog] [info] Loading Quasi index; [2018-07-19 18:26:18.631] [jointLog] [info] Loading 32-bit quasi index; [2018-07-19 18:26:18.720] [jointLog] [info] done; [2018-07-19 18:26:18.720] [jointLog] [info] Index contained 179 targets; [2018-07-19 18:26:18.728] [alevinLog] [error] Barcode not found in frequency table. **Desktop (please complete the following information):**; - OS: Linux; - Version:; `$ uname -a; Linux login1 3.0.101-0.47.86.1.11753.0.PTF-default #1 SMP Wed Oct 19 14:11:00 UTC 2016 (56c73f1) x86_64 x86_64 x86_64 GNU/Linux`; `$ lsb_release -a; LSB Version:	core-2.0-noarch:core-3.2-noarch:core-4.0-noarch:core-2.0-x86_64:core-3.2-x86_64:core-4.0-x86_64:desktop-4.0-amd64:desktop-4.0-noarch:graphics-2.0-amd64:graphics-2.0-noarch:graphics-3.2-amd64:graphics-3.2-noarch:graphics-4.0-amd64:graphics-4.0-noarch; Distributor ID:	SUSE LINUX; Description:	SUSE Linux Enterprise Server 11 (x86_64); Release:	11; Codename:	n/a`. **Additional context**; I included a 10K subset of reads in the tarball, which leads to the same behavior by Alevin.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253
https://github.com/COMBINE-lab/salmon/issues/253:5483,Security,hash,hash,5483,arcodes; [2018-07-19 18:26:13.334] [alevinLog] [info] Total 54879 white-listed Barcodes; [2018-07-19 18:26:18.285] [alevinLog] [info] Done populating Z matrix; [2018-07-19 18:26:18.300] [alevinLog] [info] Done indexing Barcodes; [2018-07-19 18:26:18.301] [alevinLog] [info] Total Unique barcodes found: 978816; [2018-07-19 18:26:18.301] [alevinLog] [info] Used Barcodes except Whitelist: 26208; [2018-07-19 18:26:18.504] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-07-19 18:26:18.505] [alevinLog] [info] parsing read library format; [2018-07-19 18:26:18.632] [stderrLog] [info] Loading Suffix Array ; [2018-07-19 18:26:18.641] [stderrLog] [info] Loading Transcript Info ; [2018-07-19 18:26:18.647] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-19 18:26:18.648] [stderrLog] [info] There were 179 set bits in the bit array; [2018-07-19 18:26:18.648] [stderrLog] [info] Computing transcript lengths; [2018-07-19 18:26:18.648] [stderrLog] [info] Waiting to finish loading hash; [2018-07-19 18:26:18.720] [stderrLog] [info] Done loading index; [2018-07-19 18:26:18.506] [jointLog] [info] There is 1 library.; [2018-07-19 18:26:18.629] [jointLog] [info] Loading Quasi index; [2018-07-19 18:26:18.631] [jointLog] [info] Loading 32-bit quasi index; [2018-07-19 18:26:18.720] [jointLog] [info] done; [2018-07-19 18:26:18.720] [jointLog] [info] Index contained 179 targets; [2018-07-19 18:26:18.728] [alevinLog] [error] Barcode not found in frequency table. **Desktop (please complete the following information):**; - OS: Linux; - Version:; `$ uname -a; Linux login1 3.0.101-0.47.86.1.11753.0.PTF-default #1 SMP Wed Oct 19 14:11:00 UTC 2016 (56c73f1) x86_64 x86_64 x86_64 GNU/Linux`; `$ lsb_release -a; LSB Version:	core-2.0-noarch:core-3.2-noarch:core-4.0-noarch:core-2.0-x86_64:core-3.2-x86_64:core-4.0-x86_64:desktop-4.0-amd64:desktop-4.0-noarch:graphics-2.0-amd64:graphics-2.0-noarch:graphics-3.2-amd64:graphics-3.2-noarch:graphics-4.0-amd64:graphics-4.0-noarch; ,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253
https://github.com/COMBINE-lab/salmon/issues/253:318,Testability,log,log,318,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin. **Describe the bug**; I am trying to use Alevin to quantify a single cell RNA-Seq 10x Genomics CHROMIUM dataset. I am using Salmon 0.10.2, and it does not produce the count matrix. The output folder contains nothing but the log files. Specifically, I get the following error:; `[2018-07-19 16:27:46.916] [alevinLog] [error] Barcode not found in frequency table`; The full messages are bellow. **To Reproduce**; Steps and data to reproduce the behavior:; I explain how to download the data and reproduce the issue in the following. Specifically, please provide at least the following information:; * Which version of salmon was used?; 0.10.2. * How was salmon installed (compiled, downloaded executable, through bioconda)?; conda config --append channels conda-forge; conda config --append channels bioconda; conda install salmon=0.10.2. * Which reference (e.g. transcriptome) was used?; I am interested only in the transposons. Therefore, I am using the ""canonical DNA sequences of the transposable elements from species in the genus Drosophila"", which are available from the [Bergman](https://github.com/bergmanlab/transposons) Lab. Specifically, I use [this](https://github.com/bergmanlab/transposons/blob/master/current/transposon_sequence_set.fa) fasta file. The first 3 lines are:; >FBte0000104; GTGACATATCCATAAGTCCCTAAGACTTAAGCATATGCCTACATACTAATACACTTACAA; CACATACACCCCAATACAACATACACTACTCCGGATGTACCCAACAGATACCAGATAAGA; In another study, I have successfully used Salmon to quantify transposon expression from bulk RNA-Seq data with a mapping rate of 2%, which is enough for the kind of analysis that I am interested in. * Which read files were used?; The [SRR6327122](https://trace.ncbi.nlm.nih.gov/Traces/sra/?run=SRR6327122) run. The fastq files can be downloaded in a couple of hours using the SRA Toolkit, e.g.,; `fastq-dump --split-files --gzip --outdir ./ SRR6327122`; The first few lines of the ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253
https://github.com/COMBINE-lab/salmon/issues/253:3479,Testability,Log,Logs,3479," were used?; One can download the data and results tarball; [bcNotFound-2018-07-19.tar.gz](https://github.com/COMBINE-lab/salmon/files/2211985/bcNotFound-2018-07-19.tar.gz).; First, I indexed the reference using:; `salmon index -k 31 -t transposon_sequence_set.fa -i index`; Then, I ran Alevin using the following command:; `salmon alevin -l ISR -1 SRR6327122_1.fastq.gz -2 SRR6327122_2.fastq.gz --chromium -i index -p 2 -o alevin_output --tgMap transposon_sequence_set.fa.tsv --whitelist cell_barcode_seq.txt --dumpCsvCounts`. **Expected behavior**; A clear and concise description of what you expected to happen.; The count matrix be saved when Alevin is done. **Screenshots**; The full output messages are:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Logs will be written to alevin_output/logs; ### salmon (single-cell-based) v0.10.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { SRR6327122_1.fastq.gz }; ### [ mates2 ] => { SRR6327122_2.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { index }; ### [ threads ] => { 2 }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { transposon_sequence_set.fa.tsv }; ### [ whitelist ] => { cell_barcode_seq.txt }; ### [ dumpCsvCounts ] => { }. [2018-07-19 18:24:03.053] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-19 18:24:03.059] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 87 Million barcodes. [2018-07-19 18:26:13.307] [alevinLog] [info] Done barcode density calculation.; [2018-07-19 18:26:13.307] [alevinLog] [info] # Barcodes Used: 86885223 / 87959276.; [2018-07-19 18:26:13.334] [alevinLog] [info] Done importing white-list Barcodes; [2018-07-19 18:26:13.334] [alevinLo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253
https://github.com/COMBINE-lab/salmon/issues/253:3517,Testability,log,logs,3517," were used?; One can download the data and results tarball; [bcNotFound-2018-07-19.tar.gz](https://github.com/COMBINE-lab/salmon/files/2211985/bcNotFound-2018-07-19.tar.gz).; First, I indexed the reference using:; `salmon index -k 31 -t transposon_sequence_set.fa -i index`; Then, I ran Alevin using the following command:; `salmon alevin -l ISR -1 SRR6327122_1.fastq.gz -2 SRR6327122_2.fastq.gz --chromium -i index -p 2 -o alevin_output --tgMap transposon_sequence_set.fa.tsv --whitelist cell_barcode_seq.txt --dumpCsvCounts`. **Expected behavior**; A clear and concise description of what you expected to happen.; The count matrix be saved when Alevin is done. **Screenshots**; The full output messages are:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Logs will be written to alevin_output/logs; ### salmon (single-cell-based) v0.10.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { SRR6327122_1.fastq.gz }; ### [ mates2 ] => { SRR6327122_2.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { index }; ### [ threads ] => { 2 }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { transposon_sequence_set.fa.tsv }; ### [ whitelist ] => { cell_barcode_seq.txt }; ### [ dumpCsvCounts ] => { }. [2018-07-19 18:24:03.053] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-19 18:24:03.059] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 87 Million barcodes. [2018-07-19 18:26:13.307] [alevinLog] [info] Done barcode density calculation.; [2018-07-19 18:26:13.307] [alevinLog] [info] # Barcodes Used: 86885223 / 87959276.; [2018-07-19 18:26:13.334] [alevinLog] [info] Done importing white-list Barcodes; [2018-07-19 18:26:13.334] [alevinLo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253
https://github.com/COMBINE-lab/salmon/issues/253:3067,Usability,clear,clear,3067,".1 1 length=36; CTGATCCTCGAGAGCACTCACAGAGTTTTTTGTTTT; +SRR6327122.1 1 length=36; AAFFFJJJJJJJJJJJJJJJJJJJJJ7-----A<-<; And; `$ zcat SRR6327122_2.fastq.gz |head -n 4`; @SRR6327122.1 1 length=88; CGGCCACAAGATCGCCTTTTTATCCCTCGCCCAGAGCACCCCCCGACCCCACATCCCCTGCTTCACGGCCCCCCTCGCGGCCTACCCG; +SRR6327122.1 1 length=88; --7-<7----7---77----77A-7--7-A7-7---7-A-A7<F-777-77-A---A<A----77--77------------7------. * Which which program options were used?; One can download the data and results tarball; [bcNotFound-2018-07-19.tar.gz](https://github.com/COMBINE-lab/salmon/files/2211985/bcNotFound-2018-07-19.tar.gz).; First, I indexed the reference using:; `salmon index -k 31 -t transposon_sequence_set.fa -i index`; Then, I ran Alevin using the following command:; `salmon alevin -l ISR -1 SRR6327122_1.fastq.gz -2 SRR6327122_2.fastq.gz --chromium -i index -p 2 -o alevin_output --tgMap transposon_sequence_set.fa.tsv --whitelist cell_barcode_seq.txt --dumpCsvCounts`. **Expected behavior**; A clear and concise description of what you expected to happen.; The count matrix be saved when Alevin is done. **Screenshots**; The full output messages are:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Logs will be written to alevin_output/logs; ### salmon (single-cell-based) v0.10.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { SRR6327122_1.fastq.gz }; ### [ mates2 ] => { SRR6327122_2.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { index }; ### [ threads ] => { 2 }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { transposon_sequence_set.fa.tsv }; ### [ whitelist ] => { cell_barcode_seq.txt }; ### [ dumpCsvCounts ] => { }. [2018-07-19 18:24:03.053] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatib",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253
https://github.com/COMBINE-lab/salmon/issues/254:143,Availability,error,error,143,"Hi,. I have had success using Salmon and Alevin after the hash-resize-hotfix issues. However, when I try to compile the latest commit I get an error for an undeclared error. I have tried searching through the external dependencies for the definition of `rapmap::utils::ChainStatus` but I cannot find it. Thanks!. ```; [ 6%] Built target libbwa; [ 12%] Built target libtbb; [ 19%] Built target libcereal; [ 26%] Built target libdivsufsort; [ 32%] Built target libstadenio; [ 38%] Built target libspdlog; [ 45%] Built target libgff; [ 47%] Built target ksw2pp_sse4; [ 49%] Built target alevin_core; [ 54%] Built target ksw2pp_basic; [ 56%] Built target ksw2pp_sse2; [ 57%] Built target ksw2pp; [ 72%] Built target salmon_core; [ 76%] Built target unitTests; [ 77%] Building CXX object src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:790:43: error: 'rapmap::utils::ChainStatus' has not been declared; rapmap::utils::ChainStatus chainStat,; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp: In function 'int32_t getAlnScore(ksw2pp::KSW2Aligner&, ksw_extz_t&, int32_t, const char*, int32_t, char*, int32_t, int8_t, int8_t, int32_t, int, uint32_t, AlnCacheMap&)':; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:794:35: error: 'rapmap::utils::ChainStatus' has not been declared; if (chainStat == rapmap::utils::ChainStatus::PERFECT) {; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:813:70: error: 'rapmap::utils::ChainStatus' has not been declared; bool doUngapped{(!invalidStart) and (chainStat == rapmap::utils::ChainStatus::UNGAPPED)};; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp: In function 'void processReadsQuasi(paired_parser*, ReadExperimentT&, ReadLibrary&, AlnGroupVec<rapmap::utils::QuasiAlignment>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, RapMapIndexT*, std::vector<Transcript>&, ForgettingMassCalculator&, ClusterForest&, FragmentL",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/254
https://github.com/COMBINE-lab/salmon/issues/254:167,Availability,error,error,167,"Hi,. I have had success using Salmon and Alevin after the hash-resize-hotfix issues. However, when I try to compile the latest commit I get an error for an undeclared error. I have tried searching through the external dependencies for the definition of `rapmap::utils::ChainStatus` but I cannot find it. Thanks!. ```; [ 6%] Built target libbwa; [ 12%] Built target libtbb; [ 19%] Built target libcereal; [ 26%] Built target libdivsufsort; [ 32%] Built target libstadenio; [ 38%] Built target libspdlog; [ 45%] Built target libgff; [ 47%] Built target ksw2pp_sse4; [ 49%] Built target alevin_core; [ 54%] Built target ksw2pp_basic; [ 56%] Built target ksw2pp_sse2; [ 57%] Built target ksw2pp; [ 72%] Built target salmon_core; [ 76%] Built target unitTests; [ 77%] Building CXX object src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:790:43: error: 'rapmap::utils::ChainStatus' has not been declared; rapmap::utils::ChainStatus chainStat,; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp: In function 'int32_t getAlnScore(ksw2pp::KSW2Aligner&, ksw_extz_t&, int32_t, const char*, int32_t, char*, int32_t, int8_t, int8_t, int32_t, int, uint32_t, AlnCacheMap&)':; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:794:35: error: 'rapmap::utils::ChainStatus' has not been declared; if (chainStat == rapmap::utils::ChainStatus::PERFECT) {; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:813:70: error: 'rapmap::utils::ChainStatus' has not been declared; bool doUngapped{(!invalidStart) and (chainStat == rapmap::utils::ChainStatus::UNGAPPED)};; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp: In function 'void processReadsQuasi(paired_parser*, ReadExperimentT&, ReadLibrary&, AlnGroupVec<rapmap::utils::QuasiAlignment>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, RapMapIndexT*, std::vector<Transcript>&, ForgettingMassCalculator&, ClusterForest&, FragmentL",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/254
https://github.com/COMBINE-lab/salmon/issues/254:888,Availability,error,error,888,"Hi,. I have had success using Salmon and Alevin after the hash-resize-hotfix issues. However, when I try to compile the latest commit I get an error for an undeclared error. I have tried searching through the external dependencies for the definition of `rapmap::utils::ChainStatus` but I cannot find it. Thanks!. ```; [ 6%] Built target libbwa; [ 12%] Built target libtbb; [ 19%] Built target libcereal; [ 26%] Built target libdivsufsort; [ 32%] Built target libstadenio; [ 38%] Built target libspdlog; [ 45%] Built target libgff; [ 47%] Built target ksw2pp_sse4; [ 49%] Built target alevin_core; [ 54%] Built target ksw2pp_basic; [ 56%] Built target ksw2pp_sse2; [ 57%] Built target ksw2pp; [ 72%] Built target salmon_core; [ 76%] Built target unitTests; [ 77%] Building CXX object src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:790:43: error: 'rapmap::utils::ChainStatus' has not been declared; rapmap::utils::ChainStatus chainStat,; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp: In function 'int32_t getAlnScore(ksw2pp::KSW2Aligner&, ksw_extz_t&, int32_t, const char*, int32_t, char*, int32_t, int8_t, int8_t, int32_t, int, uint32_t, AlnCacheMap&)':; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:794:35: error: 'rapmap::utils::ChainStatus' has not been declared; if (chainStat == rapmap::utils::ChainStatus::PERFECT) {; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:813:70: error: 'rapmap::utils::ChainStatus' has not been declared; bool doUngapped{(!invalidStart) and (chainStat == rapmap::utils::ChainStatus::UNGAPPED)};; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp: In function 'void processReadsQuasi(paired_parser*, ReadExperimentT&, ReadLibrary&, AlnGroupVec<rapmap::utils::QuasiAlignment>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, RapMapIndexT*, std::vector<Transcript>&, ForgettingMassCalculator&, ClusterForest&, FragmentL",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/254
https://github.com/COMBINE-lab/salmon/issues/254:1268,Availability,error,error,1268," [ 12%] Built target libtbb; [ 19%] Built target libcereal; [ 26%] Built target libdivsufsort; [ 32%] Built target libstadenio; [ 38%] Built target libspdlog; [ 45%] Built target libgff; [ 47%] Built target ksw2pp_sse4; [ 49%] Built target alevin_core; [ 54%] Built target ksw2pp_basic; [ 56%] Built target ksw2pp_sse2; [ 57%] Built target ksw2pp; [ 72%] Built target salmon_core; [ 76%] Built target unitTests; [ 77%] Building CXX object src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:790:43: error: 'rapmap::utils::ChainStatus' has not been declared; rapmap::utils::ChainStatus chainStat,; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp: In function 'int32_t getAlnScore(ksw2pp::KSW2Aligner&, ksw_extz_t&, int32_t, const char*, int32_t, char*, int32_t, int8_t, int8_t, int32_t, int, uint32_t, AlnCacheMap&)':; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:794:35: error: 'rapmap::utils::ChainStatus' has not been declared; if (chainStat == rapmap::utils::ChainStatus::PERFECT) {; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:813:70: error: 'rapmap::utils::ChainStatus' has not been declared; bool doUngapped{(!invalidStart) and (chainStat == rapmap::utils::ChainStatus::UNGAPPED)};; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp: In function 'void processReadsQuasi(paired_parser*, ReadExperimentT&, ReadLibrary&, AlnGroupVec<rapmap::utils::QuasiAlignment>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, RapMapIndexT*, std::vector<Transcript>&, ForgettingMassCalculator&, ClusterForest&, FragmentLengthDistribution&, BiasParams&, mem_opt_t*, SalmonOpts&, double, std::mutex&, bool, std::atomic<bool>&, volatile bool&)':; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:977:6: error: 'class rapmap::utils::MappingConfig' has no member named 'maxSlack'; mc.maxSlack = salmonOpts.consensusSlack;; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuanti",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/254
https://github.com/COMBINE-lab/salmon/issues/254:1444,Availability,error,error,1444," Built target ksw2pp_sse4; [ 49%] Built target alevin_core; [ 54%] Built target ksw2pp_basic; [ 56%] Built target ksw2pp_sse2; [ 57%] Built target ksw2pp; [ 72%] Built target salmon_core; [ 76%] Built target unitTests; [ 77%] Building CXX object src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:790:43: error: 'rapmap::utils::ChainStatus' has not been declared; rapmap::utils::ChainStatus chainStat,; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp: In function 'int32_t getAlnScore(ksw2pp::KSW2Aligner&, ksw_extz_t&, int32_t, const char*, int32_t, char*, int32_t, int8_t, int8_t, int32_t, int, uint32_t, AlnCacheMap&)':; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:794:35: error: 'rapmap::utils::ChainStatus' has not been declared; if (chainStat == rapmap::utils::ChainStatus::PERFECT) {; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:813:70: error: 'rapmap::utils::ChainStatus' has not been declared; bool doUngapped{(!invalidStart) and (chainStat == rapmap::utils::ChainStatus::UNGAPPED)};; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp: In function 'void processReadsQuasi(paired_parser*, ReadExperimentT&, ReadLibrary&, AlnGroupVec<rapmap::utils::QuasiAlignment>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, RapMapIndexT*, std::vector<Transcript>&, ForgettingMassCalculator&, ClusterForest&, FragmentLengthDistribution&, BiasParams&, mem_opt_t*, SalmonOpts&, double, std::mutex&, bool, std::atomic<bool>&, volatile bool&)':; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:977:6: error: 'class rapmap::utils::MappingConfig' has no member named 'maxSlack'; mc.maxSlack = salmonOpts.consensusSlack;; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1210:94: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.pos, r1ptr, l1, tseq, tlen, a, b, maxLeftScore, h.chainStatus.getLeft",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/254
https://github.com/COMBINE-lab/salmon/issues/254:2181,Availability,error,error,2181,"ww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:794:35: error: 'rapmap::utils::ChainStatus' has not been declared; if (chainStat == rapmap::utils::ChainStatus::PERFECT) {; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:813:70: error: 'rapmap::utils::ChainStatus' has not been declared; bool doUngapped{(!invalidStart) and (chainStat == rapmap::utils::ChainStatus::UNGAPPED)};; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp: In function 'void processReadsQuasi(paired_parser*, ReadExperimentT&, ReadLibrary&, AlnGroupVec<rapmap::utils::QuasiAlignment>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, RapMapIndexT*, std::vector<Transcript>&, ForgettingMassCalculator&, ClusterForest&, FragmentLengthDistribution&, BiasParams&, mem_opt_t*, SalmonOpts&, double, std::mutex&, bool, std::atomic<bool>&, volatile bool&)':; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:977:6: error: 'class rapmap::utils::MappingConfig' has no member named 'maxSlack'; mc.maxSlack = salmonOpts.consensusSlack;; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1210:94: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.pos, r1ptr, l1, tseq, tlen, a, b, maxLeftScore, h.chainStatus.getLeft(), buf; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1213:99: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.matePos, r2ptr, l2, tseq, tlen, a, b, maxRightScore, h.chainStatus.getRight(; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1224:93: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.pos, rptr, l1, tseq, tlen, a, b, maxLeftScore, h.chainStatus.getLeft(), buf,; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1234:94: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.pos, r",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/254
https://github.com/COMBINE-lab/salmon/issues/254:2360,Availability,error,error,2360,"almon/src/SalmonQuantify.cpp:813:70: error: 'rapmap::utils::ChainStatus' has not been declared; bool doUngapped{(!invalidStart) and (chainStat == rapmap::utils::ChainStatus::UNGAPPED)};; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp: In function 'void processReadsQuasi(paired_parser*, ReadExperimentT&, ReadLibrary&, AlnGroupVec<rapmap::utils::QuasiAlignment>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, RapMapIndexT*, std::vector<Transcript>&, ForgettingMassCalculator&, ClusterForest&, FragmentLengthDistribution&, BiasParams&, mem_opt_t*, SalmonOpts&, double, std::mutex&, bool, std::atomic<bool>&, volatile bool&)':; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:977:6: error: 'class rapmap::utils::MappingConfig' has no member named 'maxSlack'; mc.maxSlack = salmonOpts.consensusSlack;; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1210:94: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.pos, r1ptr, l1, tseq, tlen, a, b, maxLeftScore, h.chainStatus.getLeft(), buf; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1213:99: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.matePos, r2ptr, l2, tseq, tlen, a, b, maxRightScore, h.chainStatus.getRight(; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1224:93: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.pos, rptr, l1, tseq, tlen, a, b, maxLeftScore, h.chainStatus.getLeft(), buf,; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1234:94: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.pos, rptr, l2, tseq, tlen, a, b, maxRightScore, h.chainStatus.getRight(), bu; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp: In function 'void processReadsQuasi(single_parser*, ReadExperimentT&",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/254
https://github.com/COMBINE-lab/salmon/issues/254:2607,Availability,error,error,2607,"tion 'void processReadsQuasi(paired_parser*, ReadExperimentT&, ReadLibrary&, AlnGroupVec<rapmap::utils::QuasiAlignment>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, RapMapIndexT*, std::vector<Transcript>&, ForgettingMassCalculator&, ClusterForest&, FragmentLengthDistribution&, BiasParams&, mem_opt_t*, SalmonOpts&, double, std::mutex&, bool, std::atomic<bool>&, volatile bool&)':; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:977:6: error: 'class rapmap::utils::MappingConfig' has no member named 'maxSlack'; mc.maxSlack = salmonOpts.consensusSlack;; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1210:94: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.pos, r1ptr, l1, tseq, tlen, a, b, maxLeftScore, h.chainStatus.getLeft(), buf; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1213:99: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.matePos, r2ptr, l2, tseq, tlen, a, b, maxRightScore, h.chainStatus.getRight(; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1224:93: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.pos, rptr, l1, tseq, tlen, a, b, maxLeftScore, h.chainStatus.getLeft(), buf,; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1234:94: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.pos, rptr, l2, tseq, tlen, a, b, maxRightScore, h.chainStatus.getRight(), bu; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp: In function 'void processReadsQuasi(single_parser*, ReadExperimentT&, ReadLibrary&, AlnGroupVec<rapmap::utils::QuasiAlignment>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, RapMapIndexT*, std::vector<Transcript>&, ForgettingMas",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/254
https://github.com/COMBINE-lab/salmon/issues/254:2854,Availability,error,error,2854,"int>&, RapMapIndexT*, std::vector<Transcript>&, ForgettingMassCalculator&, ClusterForest&, FragmentLengthDistribution&, BiasParams&, mem_opt_t*, SalmonOpts&, double, std::mutex&, bool, std::atomic<bool>&, volatile bool&)':; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:977:6: error: 'class rapmap::utils::MappingConfig' has no member named 'maxSlack'; mc.maxSlack = salmonOpts.consensusSlack;; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1210:94: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.pos, r1ptr, l1, tseq, tlen, a, b, maxLeftScore, h.chainStatus.getLeft(), buf; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1213:99: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.matePos, r2ptr, l2, tseq, tlen, a, b, maxRightScore, h.chainStatus.getRight(; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1224:93: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.pos, rptr, l1, tseq, tlen, a, b, maxLeftScore, h.chainStatus.getLeft(), buf,; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1234:94: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.pos, rptr, l2, tseq, tlen, a, b, maxRightScore, h.chainStatus.getRight(), bu; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp: In function 'void processReadsQuasi(single_parser*, ReadExperimentT&, ReadLibrary&, AlnGroupVec<rapmap::utils::QuasiAlignment>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, RapMapIndexT*, std::vector<Transcript>&, ForgettingMassCalculator&, ClusterForest&, FragmentLengthDistribution&, BiasParams&, mem_opt_t*, SalmonOpts&, double, std::mutex&, bool, std::atomic<bool>&, volatile bool&)':; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1557:6: error: 'class rapmap::utils",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/254
https://github.com/COMBINE-lab/salmon/issues/254:3101,Availability,error,error,3101,"on/src/SalmonQuantify.cpp:977:6: error: 'class rapmap::utils::MappingConfig' has no member named 'maxSlack'; mc.maxSlack = salmonOpts.consensusSlack;; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1210:94: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.pos, r1ptr, l1, tseq, tlen, a, b, maxLeftScore, h.chainStatus.getLeft(), buf; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1213:99: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.matePos, r2ptr, l2, tseq, tlen, a, b, maxRightScore, h.chainStatus.getRight(; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1224:93: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.pos, rptr, l1, tseq, tlen, a, b, maxLeftScore, h.chainStatus.getLeft(), buf,; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1234:94: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.pos, rptr, l2, tseq, tlen, a, b, maxRightScore, h.chainStatus.getRight(), bu; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp: In function 'void processReadsQuasi(single_parser*, ReadExperimentT&, ReadLibrary&, AlnGroupVec<rapmap::utils::QuasiAlignment>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, RapMapIndexT*, std::vector<Transcript>&, ForgettingMassCalculator&, ClusterForest&, FragmentLengthDistribution&, BiasParams&, mem_opt_t*, SalmonOpts&, double, std::mutex&, bool, std::atomic<bool>&, volatile bool&)':; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1557:6: error: 'class rapmap::utils::MappingConfig' has no member named 'maxSlack'; mc.maxSlack = salmonOpts.consensusSlack;; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1682:91: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(al",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/254
https://github.com/COMBINE-lab/salmon/issues/254:3875,Availability,error,error,3875,"gnment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.matePos, r2ptr, l2, tseq, tlen, a, b, maxRightScore, h.chainStatus.getRight(; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1224:93: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.pos, rptr, l1, tseq, tlen, a, b, maxLeftScore, h.chainStatus.getLeft(), buf,; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1234:94: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.pos, rptr, l2, tseq, tlen, a, b, maxRightScore, h.chainStatus.getRight(), bu; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp: In function 'void processReadsQuasi(single_parser*, ReadExperimentT&, ReadLibrary&, AlnGroupVec<rapmap::utils::QuasiAlignment>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, RapMapIndexT*, std::vector<Transcript>&, ForgettingMassCalculator&, ClusterForest&, FragmentLengthDistribution&, BiasParams&, mem_opt_t*, SalmonOpts&, double, std::mutex&, bool, std::atomic<bool>&, volatile bool&)':; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1557:6: error: 'class rapmap::utils::MappingConfig' has no member named 'maxSlack'; mc.maxSlack = salmonOpts.consensusSlack;; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1682:91: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.pos, rptr, l1, tseq, tlen, a, b, maxReadScore, h.chainStatus.getLeft(), buf, a; ^; src/CMakeFiles/salmon.dir/build.make:566: recipe for target 'src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o' failed; make[2]: *** [src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o] Error 1; CMakeFiles/Makefile2:594: recipe for target 'src/CMakeFiles/salmon.dir/all' failed; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/254
https://github.com/COMBINE-lab/salmon/issues/254:4054,Availability,error,error,4054,"gnment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.matePos, r2ptr, l2, tseq, tlen, a, b, maxRightScore, h.chainStatus.getRight(; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1224:93: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.pos, rptr, l1, tseq, tlen, a, b, maxLeftScore, h.chainStatus.getLeft(), buf,; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1234:94: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.pos, rptr, l2, tseq, tlen, a, b, maxRightScore, h.chainStatus.getRight(), bu; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp: In function 'void processReadsQuasi(single_parser*, ReadExperimentT&, ReadLibrary&, AlnGroupVec<rapmap::utils::QuasiAlignment>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, RapMapIndexT*, std::vector<Transcript>&, ForgettingMassCalculator&, ClusterForest&, FragmentLengthDistribution&, BiasParams&, mem_opt_t*, SalmonOpts&, double, std::mutex&, bool, std::atomic<bool>&, volatile bool&)':; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1557:6: error: 'class rapmap::utils::MappingConfig' has no member named 'maxSlack'; mc.maxSlack = salmonOpts.consensusSlack;; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1682:91: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.pos, rptr, l1, tseq, tlen, a, b, maxReadScore, h.chainStatus.getLeft(), buf, a; ^; src/CMakeFiles/salmon.dir/build.make:566: recipe for target 'src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o' failed; make[2]: *** [src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o] Error 1; CMakeFiles/Makefile2:594: recipe for target 'src/CMakeFiles/salmon.dir/all' failed; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/254
https://github.com/COMBINE-lab/salmon/issues/254:4424,Availability,Error,Error,4424,"gnment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.matePos, r2ptr, l2, tseq, tlen, a, b, maxRightScore, h.chainStatus.getRight(; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1224:93: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.pos, rptr, l1, tseq, tlen, a, b, maxLeftScore, h.chainStatus.getLeft(), buf,; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1234:94: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.pos, rptr, l2, tseq, tlen, a, b, maxRightScore, h.chainStatus.getRight(), bu; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp: In function 'void processReadsQuasi(single_parser*, ReadExperimentT&, ReadLibrary&, AlnGroupVec<rapmap::utils::QuasiAlignment>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, RapMapIndexT*, std::vector<Transcript>&, ForgettingMassCalculator&, ClusterForest&, FragmentLengthDistribution&, BiasParams&, mem_opt_t*, SalmonOpts&, double, std::mutex&, bool, std::atomic<bool>&, volatile bool&)':; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1557:6: error: 'class rapmap::utils::MappingConfig' has no member named 'maxSlack'; mc.maxSlack = salmonOpts.consensusSlack;; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1682:91: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.pos, rptr, l1, tseq, tlen, a, b, maxReadScore, h.chainStatus.getLeft(), buf, a; ^; src/CMakeFiles/salmon.dir/build.make:566: recipe for target 'src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o' failed; make[2]: *** [src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o] Error 1; CMakeFiles/Makefile2:594: recipe for target 'src/CMakeFiles/salmon.dir/all' failed; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/254
https://github.com/COMBINE-lab/salmon/issues/254:4562,Availability,Error,Error,4562,"gnment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.matePos, r2ptr, l2, tseq, tlen, a, b, maxRightScore, h.chainStatus.getRight(; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1224:93: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.pos, rptr, l1, tseq, tlen, a, b, maxLeftScore, h.chainStatus.getLeft(), buf,; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1234:94: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.pos, rptr, l2, tseq, tlen, a, b, maxRightScore, h.chainStatus.getRight(), bu; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp: In function 'void processReadsQuasi(single_parser*, ReadExperimentT&, ReadLibrary&, AlnGroupVec<rapmap::utils::QuasiAlignment>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, RapMapIndexT*, std::vector<Transcript>&, ForgettingMassCalculator&, ClusterForest&, FragmentLengthDistribution&, BiasParams&, mem_opt_t*, SalmonOpts&, double, std::mutex&, bool, std::atomic<bool>&, volatile bool&)':; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1557:6: error: 'class rapmap::utils::MappingConfig' has no member named 'maxSlack'; mc.maxSlack = salmonOpts.consensusSlack;; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1682:91: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.pos, rptr, l1, tseq, tlen, a, b, maxReadScore, h.chainStatus.getLeft(), buf, a; ^; src/CMakeFiles/salmon.dir/build.make:566: recipe for target 'src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o' failed; make[2]: *** [src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o] Error 1; CMakeFiles/Makefile2:594: recipe for target 'src/CMakeFiles/salmon.dir/all' failed; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/254
https://github.com/COMBINE-lab/salmon/issues/254:4633,Availability,Error,Error,4633,"gnment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.matePos, r2ptr, l2, tseq, tlen, a, b, maxRightScore, h.chainStatus.getRight(; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1224:93: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.pos, rptr, l1, tseq, tlen, a, b, maxLeftScore, h.chainStatus.getLeft(), buf,; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1234:94: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.pos, rptr, l2, tseq, tlen, a, b, maxRightScore, h.chainStatus.getRight(), bu; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp: In function 'void processReadsQuasi(single_parser*, ReadExperimentT&, ReadLibrary&, AlnGroupVec<rapmap::utils::QuasiAlignment>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, RapMapIndexT*, std::vector<Transcript>&, ForgettingMassCalculator&, ClusterForest&, FragmentLengthDistribution&, BiasParams&, mem_opt_t*, SalmonOpts&, double, std::mutex&, bool, std::atomic<bool>&, volatile bool&)':; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1557:6: error: 'class rapmap::utils::MappingConfig' has no member named 'maxSlack'; mc.maxSlack = salmonOpts.consensusSlack;; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1682:91: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.pos, rptr, l1, tseq, tlen, a, b, maxReadScore, h.chainStatus.getLeft(), buf, a; ^; src/CMakeFiles/salmon.dir/build.make:566: recipe for target 'src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o' failed; make[2]: *** [src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o] Error 1; CMakeFiles/Makefile2:594: recipe for target 'src/CMakeFiles/salmon.dir/all' failed; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/254
https://github.com/COMBINE-lab/salmon/issues/254:70,Deployability,hotfix,hotfix,70,"Hi,. I have had success using Salmon and Alevin after the hash-resize-hotfix issues. However, when I try to compile the latest commit I get an error for an undeclared error. I have tried searching through the external dependencies for the definition of `rapmap::utils::ChainStatus` but I cannot find it. Thanks!. ```; [ 6%] Built target libbwa; [ 12%] Built target libtbb; [ 19%] Built target libcereal; [ 26%] Built target libdivsufsort; [ 32%] Built target libstadenio; [ 38%] Built target libspdlog; [ 45%] Built target libgff; [ 47%] Built target ksw2pp_sse4; [ 49%] Built target alevin_core; [ 54%] Built target ksw2pp_basic; [ 56%] Built target ksw2pp_sse2; [ 57%] Built target ksw2pp; [ 72%] Built target salmon_core; [ 76%] Built target unitTests; [ 77%] Building CXX object src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:790:43: error: 'rapmap::utils::ChainStatus' has not been declared; rapmap::utils::ChainStatus chainStat,; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp: In function 'int32_t getAlnScore(ksw2pp::KSW2Aligner&, ksw_extz_t&, int32_t, const char*, int32_t, char*, int32_t, int8_t, int8_t, int32_t, int, uint32_t, AlnCacheMap&)':; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:794:35: error: 'rapmap::utils::ChainStatus' has not been declared; if (chainStat == rapmap::utils::ChainStatus::PERFECT) {; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:813:70: error: 'rapmap::utils::ChainStatus' has not been declared; bool doUngapped{(!invalidStart) and (chainStat == rapmap::utils::ChainStatus::UNGAPPED)};; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp: In function 'void processReadsQuasi(paired_parser*, ReadExperimentT&, ReadLibrary&, AlnGroupVec<rapmap::utils::QuasiAlignment>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, RapMapIndexT*, std::vector<Transcript>&, ForgettingMassCalculator&, ClusterForest&, FragmentL",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/254
https://github.com/COMBINE-lab/salmon/issues/254:218,Integrability,depend,dependencies,218,"Hi,. I have had success using Salmon and Alevin after the hash-resize-hotfix issues. However, when I try to compile the latest commit I get an error for an undeclared error. I have tried searching through the external dependencies for the definition of `rapmap::utils::ChainStatus` but I cannot find it. Thanks!. ```; [ 6%] Built target libbwa; [ 12%] Built target libtbb; [ 19%] Built target libcereal; [ 26%] Built target libdivsufsort; [ 32%] Built target libstadenio; [ 38%] Built target libspdlog; [ 45%] Built target libgff; [ 47%] Built target ksw2pp_sse4; [ 49%] Built target alevin_core; [ 54%] Built target ksw2pp_basic; [ 56%] Built target ksw2pp_sse2; [ 57%] Built target ksw2pp; [ 72%] Built target salmon_core; [ 76%] Built target unitTests; [ 77%] Building CXX object src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:790:43: error: 'rapmap::utils::ChainStatus' has not been declared; rapmap::utils::ChainStatus chainStat,; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp: In function 'int32_t getAlnScore(ksw2pp::KSW2Aligner&, ksw_extz_t&, int32_t, const char*, int32_t, char*, int32_t, int8_t, int8_t, int32_t, int, uint32_t, AlnCacheMap&)':; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:794:35: error: 'rapmap::utils::ChainStatus' has not been declared; if (chainStat == rapmap::utils::ChainStatus::PERFECT) {; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:813:70: error: 'rapmap::utils::ChainStatus' has not been declared; bool doUngapped{(!invalidStart) and (chainStat == rapmap::utils::ChainStatus::UNGAPPED)};; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp: In function 'void processReadsQuasi(paired_parser*, ReadExperimentT&, ReadLibrary&, AlnGroupVec<rapmap::utils::QuasiAlignment>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, RapMapIndexT*, std::vector<Transcript>&, ForgettingMassCalculator&, ClusterForest&, FragmentL",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/254
https://github.com/COMBINE-lab/salmon/issues/254:58,Security,hash,hash-resize-hotfix,58,"Hi,. I have had success using Salmon and Alevin after the hash-resize-hotfix issues. However, when I try to compile the latest commit I get an error for an undeclared error. I have tried searching through the external dependencies for the definition of `rapmap::utils::ChainStatus` but I cannot find it. Thanks!. ```; [ 6%] Built target libbwa; [ 12%] Built target libtbb; [ 19%] Built target libcereal; [ 26%] Built target libdivsufsort; [ 32%] Built target libstadenio; [ 38%] Built target libspdlog; [ 45%] Built target libgff; [ 47%] Built target ksw2pp_sse4; [ 49%] Built target alevin_core; [ 54%] Built target ksw2pp_basic; [ 56%] Built target ksw2pp_sse2; [ 57%] Built target ksw2pp; [ 72%] Built target salmon_core; [ 76%] Built target unitTests; [ 77%] Building CXX object src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:790:43: error: 'rapmap::utils::ChainStatus' has not been declared; rapmap::utils::ChainStatus chainStat,; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp: In function 'int32_t getAlnScore(ksw2pp::KSW2Aligner&, ksw_extz_t&, int32_t, const char*, int32_t, char*, int32_t, int8_t, int8_t, int32_t, int, uint32_t, AlnCacheMap&)':; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:794:35: error: 'rapmap::utils::ChainStatus' has not been declared; if (chainStat == rapmap::utils::ChainStatus::PERFECT) {; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:813:70: error: 'rapmap::utils::ChainStatus' has not been declared; bool doUngapped{(!invalidStart) and (chainStat == rapmap::utils::ChainStatus::UNGAPPED)};; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp: In function 'void processReadsQuasi(paired_parser*, ReadExperimentT&, ReadLibrary&, AlnGroupVec<rapmap::utils::QuasiAlignment>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, RapMapIndexT*, std::vector<Transcript>&, ForgettingMassCalculator&, ClusterForest&, FragmentL",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/254
https://github.com/COMBINE-lab/salmon/issues/255:506,Availability,down,downloaded,506,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; A clear and concise description of what the bug is.; The cDNA fasta file contains 176241 ENSTs,but the result file only contains 166667 ENSTs.; **To Reproduce**; Steps and data to reproduce the behavior:; The steps and data are as follows. ; Specifically, please provide at least the following information:. * Which version of salmon was used? v0.9.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable; * Which reference (e.g. transcriptome) was used? ; Homo_sapiens.GRCh38.cdna.all.fa obtained from Ensembl release 83; * Which read files were used? ; GSE41009; * Which which program options were used? ; Building index: salmon index -t filepath/Homo_sapiens.GRCh38.cdna.all.fa -i V83-homo_index --type quasi -k 31; Quantification: salmon quant -p 50 -i filepath/V83-homo_index -l IU -1 ESC-SRR574820_1.fastq ESC-SRR574821_1.fastq -2 ESC-SRR574820_2.fastq ESC-SRR574821_2.fastq -o ESC-quantification. **Expected behavior**; A clear and concise description of what you expected to happen.; The result file should contain all the ENSTs existed in cDNA fasta file.; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; uname -a; Linux mn1 2.6.32-431.29.2.2.ky3.1.x86_64 #1 SMP Thu Sep 25 10:15:09 CST 2014 x86_64 x86_64 x86_64 GNU/Linux. lsb_release -a; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch; Distributor ID:	NeoKylin; Description:	NeoKylin release 3.2 (Carambola); Release:	3.2; Codename:	Carambola; **Additional context**; Add any other context about the prob",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/255
https://github.com/COMBINE-lab/salmon/issues/255:549,Availability,down,downloaded,549,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; A clear and concise description of what the bug is.; The cDNA fasta file contains 176241 ENSTs,but the result file only contains 166667 ENSTs.; **To Reproduce**; Steps and data to reproduce the behavior:; The steps and data are as follows. ; Specifically, please provide at least the following information:. * Which version of salmon was used? v0.9.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable; * Which reference (e.g. transcriptome) was used? ; Homo_sapiens.GRCh38.cdna.all.fa obtained from Ensembl release 83; * Which read files were used? ; GSE41009; * Which which program options were used? ; Building index: salmon index -t filepath/Homo_sapiens.GRCh38.cdna.all.fa -i V83-homo_index --type quasi -k 31; Quantification: salmon quant -p 50 -i filepath/V83-homo_index -l IU -1 ESC-SRR574820_1.fastq ESC-SRR574821_1.fastq -2 ESC-SRR574820_2.fastq ESC-SRR574821_2.fastq -o ESC-quantification. **Expected behavior**; A clear and concise description of what you expected to happen.; The result file should contain all the ENSTs existed in cDNA fasta file.; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; uname -a; Linux mn1 2.6.32-431.29.2.2.ky3.1.x86_64 #1 SMP Thu Sep 25 10:15:09 CST 2014 x86_64 x86_64 x86_64 GNU/Linux. lsb_release -a; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch; Distributor ID:	NeoKylin; Description:	NeoKylin release 3.2 (Carambola); Release:	3.2; Codename:	Carambola; **Additional context**; Add any other context about the prob",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/255
https://github.com/COMBINE-lab/salmon/issues/255:485,Deployability,install,installed,485,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; A clear and concise description of what the bug is.; The cDNA fasta file contains 176241 ENSTs,but the result file only contains 166667 ENSTs.; **To Reproduce**; Steps and data to reproduce the behavior:; The steps and data are as follows. ; Specifically, please provide at least the following information:. * Which version of salmon was used? v0.9.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable; * Which reference (e.g. transcriptome) was used? ; Homo_sapiens.GRCh38.cdna.all.fa obtained from Ensembl release 83; * Which read files were used? ; GSE41009; * Which which program options were used? ; Building index: salmon index -t filepath/Homo_sapiens.GRCh38.cdna.all.fa -i V83-homo_index --type quasi -k 31; Quantification: salmon quant -p 50 -i filepath/V83-homo_index -l IU -1 ESC-SRR574820_1.fastq ESC-SRR574821_1.fastq -2 ESC-SRR574820_2.fastq ESC-SRR574821_2.fastq -o ESC-quantification. **Expected behavior**; A clear and concise description of what you expected to happen.; The result file should contain all the ENSTs existed in cDNA fasta file.; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; uname -a; Linux mn1 2.6.32-431.29.2.2.ky3.1.x86_64 #1 SMP Thu Sep 25 10:15:09 CST 2014 x86_64 x86_64 x86_64 GNU/Linux. lsb_release -a; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch; Distributor ID:	NeoKylin; Description:	NeoKylin release 3.2 (Carambola); Release:	3.2; Codename:	Carambola; **Additional context**; Add any other context about the prob",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/255
https://github.com/COMBINE-lab/salmon/issues/255:677,Deployability,release,release,677,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; A clear and concise description of what the bug is.; The cDNA fasta file contains 176241 ENSTs,but the result file only contains 166667 ENSTs.; **To Reproduce**; Steps and data to reproduce the behavior:; The steps and data are as follows. ; Specifically, please provide at least the following information:. * Which version of salmon was used? v0.9.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable; * Which reference (e.g. transcriptome) was used? ; Homo_sapiens.GRCh38.cdna.all.fa obtained from Ensembl release 83; * Which read files were used? ; GSE41009; * Which which program options were used? ; Building index: salmon index -t filepath/Homo_sapiens.GRCh38.cdna.all.fa -i V83-homo_index --type quasi -k 31; Quantification: salmon quant -p 50 -i filepath/V83-homo_index -l IU -1 ESC-SRR574820_1.fastq ESC-SRR574821_1.fastq -2 ESC-SRR574820_2.fastq ESC-SRR574821_2.fastq -o ESC-quantification. **Expected behavior**; A clear and concise description of what you expected to happen.; The result file should contain all the ENSTs existed in cDNA fasta file.; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; uname -a; Linux mn1 2.6.32-431.29.2.2.ky3.1.x86_64 #1 SMP Thu Sep 25 10:15:09 CST 2014 x86_64 x86_64 x86_64 GNU/Linux. lsb_release -a; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch; Distributor ID:	NeoKylin; Description:	NeoKylin release 3.2 (Carambola); Release:	3.2; Codename:	Carambola; **Additional context**; Add any other context about the prob",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/255
https://github.com/COMBINE-lab/salmon/issues/255:1881,Deployability,release,release,1881,"ug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; A clear and concise description of what the bug is.; The cDNA fasta file contains 176241 ENSTs,but the result file only contains 166667 ENSTs.; **To Reproduce**; Steps and data to reproduce the behavior:; The steps and data are as follows. ; Specifically, please provide at least the following information:. * Which version of salmon was used? v0.9.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable; * Which reference (e.g. transcriptome) was used? ; Homo_sapiens.GRCh38.cdna.all.fa obtained from Ensembl release 83; * Which read files were used? ; GSE41009; * Which which program options were used? ; Building index: salmon index -t filepath/Homo_sapiens.GRCh38.cdna.all.fa -i V83-homo_index --type quasi -k 31; Quantification: salmon quant -p 50 -i filepath/V83-homo_index -l IU -1 ESC-SRR574820_1.fastq ESC-SRR574821_1.fastq -2 ESC-SRR574820_2.fastq ESC-SRR574821_2.fastq -o ESC-quantification. **Expected behavior**; A clear and concise description of what you expected to happen.; The result file should contain all the ENSTs existed in cDNA fasta file.; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; uname -a; Linux mn1 2.6.32-431.29.2.2.ky3.1.x86_64 #1 SMP Thu Sep 25 10:15:09 CST 2014 x86_64 x86_64 x86_64 GNU/Linux. lsb_release -a; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch; Distributor ID:	NeoKylin; Description:	NeoKylin release 3.2 (Carambola); Release:	3.2; Codename:	Carambola; **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/255
https://github.com/COMBINE-lab/salmon/issues/255:1906,Deployability,Release,Release,1906,"ug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; A clear and concise description of what the bug is.; The cDNA fasta file contains 176241 ENSTs,but the result file only contains 166667 ENSTs.; **To Reproduce**; Steps and data to reproduce the behavior:; The steps and data are as follows. ; Specifically, please provide at least the following information:. * Which version of salmon was used? v0.9.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable; * Which reference (e.g. transcriptome) was used? ; Homo_sapiens.GRCh38.cdna.all.fa obtained from Ensembl release 83; * Which read files were used? ; GSE41009; * Which which program options were used? ; Building index: salmon index -t filepath/Homo_sapiens.GRCh38.cdna.all.fa -i V83-homo_index --type quasi -k 31; Quantification: salmon quant -p 50 -i filepath/V83-homo_index -l IU -1 ESC-SRR574820_1.fastq ESC-SRR574821_1.fastq -2 ESC-SRR574820_2.fastq ESC-SRR574821_2.fastq -o ESC-quantification. **Expected behavior**; A clear and concise description of what you expected to happen.; The result file should contain all the ENSTs existed in cDNA fasta file.; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; uname -a; Linux mn1 2.6.32-431.29.2.2.ky3.1.x86_64 #1 SMP Thu Sep 25 10:15:09 CST 2014 x86_64 x86_64 x86_64 GNU/Linux. lsb_release -a; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch; Distributor ID:	NeoKylin; Description:	NeoKylin release 3.2 (Carambola); Release:	3.2; Codename:	Carambola; **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/255
https://github.com/COMBINE-lab/salmon/issues/255:118,Usability,clear,clear,118,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; A clear and concise description of what the bug is.; The cDNA fasta file contains 176241 ENSTs,but the result file only contains 166667 ENSTs.; **To Reproduce**; Steps and data to reproduce the behavior:; The steps and data are as follows. ; Specifically, please provide at least the following information:. * Which version of salmon was used? v0.9.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable; * Which reference (e.g. transcriptome) was used? ; Homo_sapiens.GRCh38.cdna.all.fa obtained from Ensembl release 83; * Which read files were used? ; GSE41009; * Which which program options were used? ; Building index: salmon index -t filepath/Homo_sapiens.GRCh38.cdna.all.fa -i V83-homo_index --type quasi -k 31; Quantification: salmon quant -p 50 -i filepath/V83-homo_index -l IU -1 ESC-SRR574820_1.fastq ESC-SRR574821_1.fastq -2 ESC-SRR574820_2.fastq ESC-SRR574821_2.fastq -o ESC-quantification. **Expected behavior**; A clear and concise description of what you expected to happen.; The result file should contain all the ENSTs existed in cDNA fasta file.; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; uname -a; Linux mn1 2.6.32-431.29.2.2.ky3.1.x86_64 #1 SMP Thu Sep 25 10:15:09 CST 2014 x86_64 x86_64 x86_64 GNU/Linux. lsb_release -a; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch; Distributor ID:	NeoKylin; Description:	NeoKylin release 3.2 (Carambola); Release:	3.2; Codename:	Carambola; **Additional context**; Add any other context about the prob",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/255
https://github.com/COMBINE-lab/salmon/issues/255:1095,Usability,clear,clear,1095,"ug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; A clear and concise description of what the bug is.; The cDNA fasta file contains 176241 ENSTs,but the result file only contains 166667 ENSTs.; **To Reproduce**; Steps and data to reproduce the behavior:; The steps and data are as follows. ; Specifically, please provide at least the following information:. * Which version of salmon was used? v0.9.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable; * Which reference (e.g. transcriptome) was used? ; Homo_sapiens.GRCh38.cdna.all.fa obtained from Ensembl release 83; * Which read files were used? ; GSE41009; * Which which program options were used? ; Building index: salmon index -t filepath/Homo_sapiens.GRCh38.cdna.all.fa -i V83-homo_index --type quasi -k 31; Quantification: salmon quant -p 50 -i filepath/V83-homo_index -l IU -1 ESC-SRR574820_1.fastq ESC-SRR574821_1.fastq -2 ESC-SRR574820_2.fastq ESC-SRR574821_2.fastq -o ESC-quantification. **Expected behavior**; A clear and concise description of what you expected to happen.; The result file should contain all the ENSTs existed in cDNA fasta file.; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; uname -a; Linux mn1 2.6.32-431.29.2.2.ky3.1.x86_64 #1 SMP Thu Sep 25 10:15:09 CST 2014 x86_64 x86_64 x86_64 GNU/Linux. lsb_release -a; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch; Distributor ID:	NeoKylin; Description:	NeoKylin release 3.2 (Carambola); Release:	3.2; Codename:	Carambola; **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/255
https://github.com/COMBINE-lab/salmon/issues/256:85,Availability,error,error,85,"I ran the latest binary salmon (Salmon v0.11.0). But it said, ""salmon: symbol lookup error: salmon: undefined symbol: _ZNSt6locale10_S_classicE"". Can the issue for the binary salmon be fixed?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/256
https://github.com/COMBINE-lab/salmon/issues/258:6016,Availability,down,downloaded,6016,"e = 0.590918%. ```. and then this after processing the cells:; ```; [2018-07-24 10:56:23.180] [alevinLog] [info] Total 21135 UMI after deduplicating.; [2018-07-24 10:56:23.180] [alevinLog] [warning] Skipped 4 barcodes due to No mapped read; [2018-07-24 10:56:23.213] [alevinLog] [info] Clearing EqMap; Might take some time.; [2018-07-24 10:56:23.230] [alevinLog] [info] Starting Import of the gene count matrix.; [2018-07-24 10:56:23.743] [alevinLog] [info] Done Importing gene count matrix for dimension 290x57964; [2018-07-24 10:56:23.743] [alevinLog] [info] Starting dumping cell v gene counts in csv format; [2018-07-24 10:56:29.089] [alevinLog] [info] Finished dumping csv counts; [2018-07-24 10:56:29.089] [alevinLog] [info] Starting white listing; [2018-07-24 10:56:29.090] [alevinLog] [info] Done importing order of barcodes ""quants_mat_rows.txt"" file.; [2018-07-24 10:56:29.090] [alevinLog] [info] Total 290 barcodes found; [2018-07-24 10:56:29.090] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2018-07-24 10:56:29.090] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2018-07-24 10:56:29.090] [alevinLog] [info] Starting to make feature Matrix; [2018-07-24 10:56:29.354] [alevinLog] [info] Done making regular featues; [2018-07-24 10:56:29.354] [alevinLog] [info] Done making feature Matrix; [2018-07-24 10:56:29.359] [alevinLog] [info] Finished white listing; [2018-07-24 10:56:29.371] [alevinLog] [info] Finished optimizer; ```. Other info:; Salmon v0.11.0 - downloaded binary from Github; I used Gencode 28 for the transcriptome; read files: https://www.ncbi.nlm.nih.gov/sra/SRX2676721[accn]. OS: CentOS; version: 2.6.32-696.23.1.el6.centos.plus.x86_64; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch; Distributor ID:	CentOS; Description:	CentOS release 6.9 (Final); Release:	6.9; Codename:	Final",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/258
https://github.com/COMBINE-lab/salmon/issues/258:6411,Deployability,release,release,6411,"e = 0.590918%. ```. and then this after processing the cells:; ```; [2018-07-24 10:56:23.180] [alevinLog] [info] Total 21135 UMI after deduplicating.; [2018-07-24 10:56:23.180] [alevinLog] [warning] Skipped 4 barcodes due to No mapped read; [2018-07-24 10:56:23.213] [alevinLog] [info] Clearing EqMap; Might take some time.; [2018-07-24 10:56:23.230] [alevinLog] [info] Starting Import of the gene count matrix.; [2018-07-24 10:56:23.743] [alevinLog] [info] Done Importing gene count matrix for dimension 290x57964; [2018-07-24 10:56:23.743] [alevinLog] [info] Starting dumping cell v gene counts in csv format; [2018-07-24 10:56:29.089] [alevinLog] [info] Finished dumping csv counts; [2018-07-24 10:56:29.089] [alevinLog] [info] Starting white listing; [2018-07-24 10:56:29.090] [alevinLog] [info] Done importing order of barcodes ""quants_mat_rows.txt"" file.; [2018-07-24 10:56:29.090] [alevinLog] [info] Total 290 barcodes found; [2018-07-24 10:56:29.090] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2018-07-24 10:56:29.090] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2018-07-24 10:56:29.090] [alevinLog] [info] Starting to make feature Matrix; [2018-07-24 10:56:29.354] [alevinLog] [info] Done making regular featues; [2018-07-24 10:56:29.354] [alevinLog] [info] Done making feature Matrix; [2018-07-24 10:56:29.359] [alevinLog] [info] Finished white listing; [2018-07-24 10:56:29.371] [alevinLog] [info] Finished optimizer; ```. Other info:; Salmon v0.11.0 - downloaded binary from Github; I used Gencode 28 for the transcriptome; read files: https://www.ncbi.nlm.nih.gov/sra/SRX2676721[accn]. OS: CentOS; version: 2.6.32-696.23.1.el6.centos.plus.x86_64; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch; Distributor ID:	CentOS; Description:	CentOS release 6.9 (Final); Release:	6.9; Codename:	Final",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/258
https://github.com/COMBINE-lab/salmon/issues/258:6432,Deployability,Release,Release,6432,"e = 0.590918%. ```. and then this after processing the cells:; ```; [2018-07-24 10:56:23.180] [alevinLog] [info] Total 21135 UMI after deduplicating.; [2018-07-24 10:56:23.180] [alevinLog] [warning] Skipped 4 barcodes due to No mapped read; [2018-07-24 10:56:23.213] [alevinLog] [info] Clearing EqMap; Might take some time.; [2018-07-24 10:56:23.230] [alevinLog] [info] Starting Import of the gene count matrix.; [2018-07-24 10:56:23.743] [alevinLog] [info] Done Importing gene count matrix for dimension 290x57964; [2018-07-24 10:56:23.743] [alevinLog] [info] Starting dumping cell v gene counts in csv format; [2018-07-24 10:56:29.089] [alevinLog] [info] Finished dumping csv counts; [2018-07-24 10:56:29.089] [alevinLog] [info] Starting white listing; [2018-07-24 10:56:29.090] [alevinLog] [info] Done importing order of barcodes ""quants_mat_rows.txt"" file.; [2018-07-24 10:56:29.090] [alevinLog] [info] Total 290 barcodes found; [2018-07-24 10:56:29.090] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2018-07-24 10:56:29.090] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2018-07-24 10:56:29.090] [alevinLog] [info] Starting to make feature Matrix; [2018-07-24 10:56:29.354] [alevinLog] [info] Done making regular featues; [2018-07-24 10:56:29.354] [alevinLog] [info] Done making feature Matrix; [2018-07-24 10:56:29.359] [alevinLog] [info] Finished white listing; [2018-07-24 10:56:29.371] [alevinLog] [info] Finished optimizer; ```. Other info:; Salmon v0.11.0 - downloaded binary from Github; I used Gencode 28 for the transcriptome; read files: https://www.ncbi.nlm.nih.gov/sra/SRX2676721[accn]. OS: CentOS; version: 2.6.32-696.23.1.el6.centos.plus.x86_64; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch; Distributor ID:	CentOS; Description:	CentOS release 6.9 (Final); Release:	6.9; Codename:	Final",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/258
https://github.com/COMBINE-lab/salmon/issues/258:2752,Performance,Load,Loading,2752,"18-07-26 11:25:30.228] [alevinLog] [info] Knee found left boundary at 202 ; [2018-07-26 11:25:31.135] [alevinLog] [info] Gauss Corrected Boundary at 22 ; [2018-07-26 11:25:31.135] [alevinLog] [info] Learned InvCov: 1044.2 normfactor: 295.235; [2018-07-26 11:25:31.135] [alevinLog] [info] Total 222(has 200 low confidence) barcodes; [2018-07-26 11:25:31.440] [alevinLog] [info] Done True Barcode Sampling; [2018-07-26 11:25:31.789] [alevinLog] [info] Done populating Z matrix; [2018-07-26 11:25:31.793] [alevinLog] [info] Done indexing Barcodes; [2018-07-26 11:25:31.793] [alevinLog] [info] Total Unique barcodes found: 10630133; [2018-07-26 11:25:31.793] [alevinLog] [info] Used Barcodes except Whitelist: 10603; [2018-07-26 11:25:31.938] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-07-26 11:25:31.939] [alevinLog] [info] parsing read library format; [2018-07-26 11:25:31.949] [jointLog] [info] There is 1 library.; [2018-07-26 11:25:32.331] [jointLog] [info] Loading Quasi index; [2018-07-26 11:25:32.331] [jointLog] [info] Loading 32-bit quasi index; [2018-07-26 11:25:32.357] [stderrLog] [info] Loading Suffix Array ; [2018-07-26 11:26:09.413] [stderrLog] [info] Loading Transcript Info ; [2018-07-26 11:26:10.896] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-26 11:26:11.159] [stderrLog] [info] There were 203027 set bits in the bit array; [2018-07-26 11:26:11.225] [stderrLog] [info] Computing transcript lengths; [2018-07-26 11:26:11.226] [stderrLog] [info] Waiting to finish loading hash; [2018-07-26 11:26:14.654] [stderrLog] [info] Done loading index; [2018-07-26 11:26:14.654] [jointLog] [info] done; [2018-07-26 11:26:14.654] [jointLog] [info] Index contained 203027 targets. Incorrect call for umi extractIncorrect call for umi extract; ```. I traced it back to AlevinUtils.cpp in the source files but could not make sense of it from there. The program will run completely on the same data and library if I change --dropseq to --Chromium, event",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/258
https://github.com/COMBINE-lab/salmon/issues/258:2817,Performance,Load,Loading,2817," 202 ; [2018-07-26 11:25:31.135] [alevinLog] [info] Gauss Corrected Boundary at 22 ; [2018-07-26 11:25:31.135] [alevinLog] [info] Learned InvCov: 1044.2 normfactor: 295.235; [2018-07-26 11:25:31.135] [alevinLog] [info] Total 222(has 200 low confidence) barcodes; [2018-07-26 11:25:31.440] [alevinLog] [info] Done True Barcode Sampling; [2018-07-26 11:25:31.789] [alevinLog] [info] Done populating Z matrix; [2018-07-26 11:25:31.793] [alevinLog] [info] Done indexing Barcodes; [2018-07-26 11:25:31.793] [alevinLog] [info] Total Unique barcodes found: 10630133; [2018-07-26 11:25:31.793] [alevinLog] [info] Used Barcodes except Whitelist: 10603; [2018-07-26 11:25:31.938] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-07-26 11:25:31.939] [alevinLog] [info] parsing read library format; [2018-07-26 11:25:31.949] [jointLog] [info] There is 1 library.; [2018-07-26 11:25:32.331] [jointLog] [info] Loading Quasi index; [2018-07-26 11:25:32.331] [jointLog] [info] Loading 32-bit quasi index; [2018-07-26 11:25:32.357] [stderrLog] [info] Loading Suffix Array ; [2018-07-26 11:26:09.413] [stderrLog] [info] Loading Transcript Info ; [2018-07-26 11:26:10.896] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-26 11:26:11.159] [stderrLog] [info] There were 203027 set bits in the bit array; [2018-07-26 11:26:11.225] [stderrLog] [info] Computing transcript lengths; [2018-07-26 11:26:11.226] [stderrLog] [info] Waiting to finish loading hash; [2018-07-26 11:26:14.654] [stderrLog] [info] Done loading index; [2018-07-26 11:26:14.654] [jointLog] [info] done; [2018-07-26 11:26:14.654] [jointLog] [info] Index contained 203027 targets. Incorrect call for umi extractIncorrect call for umi extract; ```. I traced it back to AlevinUtils.cpp in the source files but could not make sense of it from there. The program will run completely on the same data and library if I change --dropseq to --Chromium, eventually outputting the following after processing the reads:. ```; [20",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/258
https://github.com/COMBINE-lab/salmon/issues/258:2890,Performance,Load,Loading,2890,"undary at 22 ; [2018-07-26 11:25:31.135] [alevinLog] [info] Learned InvCov: 1044.2 normfactor: 295.235; [2018-07-26 11:25:31.135] [alevinLog] [info] Total 222(has 200 low confidence) barcodes; [2018-07-26 11:25:31.440] [alevinLog] [info] Done True Barcode Sampling; [2018-07-26 11:25:31.789] [alevinLog] [info] Done populating Z matrix; [2018-07-26 11:25:31.793] [alevinLog] [info] Done indexing Barcodes; [2018-07-26 11:25:31.793] [alevinLog] [info] Total Unique barcodes found: 10630133; [2018-07-26 11:25:31.793] [alevinLog] [info] Used Barcodes except Whitelist: 10603; [2018-07-26 11:25:31.938] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-07-26 11:25:31.939] [alevinLog] [info] parsing read library format; [2018-07-26 11:25:31.949] [jointLog] [info] There is 1 library.; [2018-07-26 11:25:32.331] [jointLog] [info] Loading Quasi index; [2018-07-26 11:25:32.331] [jointLog] [info] Loading 32-bit quasi index; [2018-07-26 11:25:32.357] [stderrLog] [info] Loading Suffix Array ; [2018-07-26 11:26:09.413] [stderrLog] [info] Loading Transcript Info ; [2018-07-26 11:26:10.896] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-26 11:26:11.159] [stderrLog] [info] There were 203027 set bits in the bit array; [2018-07-26 11:26:11.225] [stderrLog] [info] Computing transcript lengths; [2018-07-26 11:26:11.226] [stderrLog] [info] Waiting to finish loading hash; [2018-07-26 11:26:14.654] [stderrLog] [info] Done loading index; [2018-07-26 11:26:14.654] [jointLog] [info] done; [2018-07-26 11:26:14.654] [jointLog] [info] Index contained 203027 targets. Incorrect call for umi extractIncorrect call for umi extract; ```. I traced it back to AlevinUtils.cpp in the source files but could not make sense of it from there. The program will run completely on the same data and library if I change --dropseq to --Chromium, eventually outputting the following after processing the reads:. ```; [2018-07-24 10:56:20.712] [jointLog] [info] Computed 9968 rich equivalenc",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/258
https://github.com/COMBINE-lab/salmon/issues/258:2958,Performance,Load,Loading,2958,"nvCov: 1044.2 normfactor: 295.235; [2018-07-26 11:25:31.135] [alevinLog] [info] Total 222(has 200 low confidence) barcodes; [2018-07-26 11:25:31.440] [alevinLog] [info] Done True Barcode Sampling; [2018-07-26 11:25:31.789] [alevinLog] [info] Done populating Z matrix; [2018-07-26 11:25:31.793] [alevinLog] [info] Done indexing Barcodes; [2018-07-26 11:25:31.793] [alevinLog] [info] Total Unique barcodes found: 10630133; [2018-07-26 11:25:31.793] [alevinLog] [info] Used Barcodes except Whitelist: 10603; [2018-07-26 11:25:31.938] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-07-26 11:25:31.939] [alevinLog] [info] parsing read library format; [2018-07-26 11:25:31.949] [jointLog] [info] There is 1 library.; [2018-07-26 11:25:32.331] [jointLog] [info] Loading Quasi index; [2018-07-26 11:25:32.331] [jointLog] [info] Loading 32-bit quasi index; [2018-07-26 11:25:32.357] [stderrLog] [info] Loading Suffix Array ; [2018-07-26 11:26:09.413] [stderrLog] [info] Loading Transcript Info ; [2018-07-26 11:26:10.896] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-26 11:26:11.159] [stderrLog] [info] There were 203027 set bits in the bit array; [2018-07-26 11:26:11.225] [stderrLog] [info] Computing transcript lengths; [2018-07-26 11:26:11.226] [stderrLog] [info] Waiting to finish loading hash; [2018-07-26 11:26:14.654] [stderrLog] [info] Done loading index; [2018-07-26 11:26:14.654] [jointLog] [info] done; [2018-07-26 11:26:14.654] [jointLog] [info] Index contained 203027 targets. Incorrect call for umi extractIncorrect call for umi extract; ```. I traced it back to AlevinUtils.cpp in the source files but could not make sense of it from there. The program will run completely on the same data and library if I change --dropseq to --Chromium, eventually outputting the following after processing the reads:. ```; [2018-07-24 10:56:20.712] [jointLog] [info] Computed 9968 rich equivalence classes for further processing; [2018-07-24 10:56:20.712] [jointLog]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/258
https://github.com/COMBINE-lab/salmon/issues/258:3029,Performance,Load,Loading,3029,"info] Total 222(has 200 low confidence) barcodes; [2018-07-26 11:25:31.440] [alevinLog] [info] Done True Barcode Sampling; [2018-07-26 11:25:31.789] [alevinLog] [info] Done populating Z matrix; [2018-07-26 11:25:31.793] [alevinLog] [info] Done indexing Barcodes; [2018-07-26 11:25:31.793] [alevinLog] [info] Total Unique barcodes found: 10630133; [2018-07-26 11:25:31.793] [alevinLog] [info] Used Barcodes except Whitelist: 10603; [2018-07-26 11:25:31.938] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-07-26 11:25:31.939] [alevinLog] [info] parsing read library format; [2018-07-26 11:25:31.949] [jointLog] [info] There is 1 library.; [2018-07-26 11:25:32.331] [jointLog] [info] Loading Quasi index; [2018-07-26 11:25:32.331] [jointLog] [info] Loading 32-bit quasi index; [2018-07-26 11:25:32.357] [stderrLog] [info] Loading Suffix Array ; [2018-07-26 11:26:09.413] [stderrLog] [info] Loading Transcript Info ; [2018-07-26 11:26:10.896] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-26 11:26:11.159] [stderrLog] [info] There were 203027 set bits in the bit array; [2018-07-26 11:26:11.225] [stderrLog] [info] Computing transcript lengths; [2018-07-26 11:26:11.226] [stderrLog] [info] Waiting to finish loading hash; [2018-07-26 11:26:14.654] [stderrLog] [info] Done loading index; [2018-07-26 11:26:14.654] [jointLog] [info] done; [2018-07-26 11:26:14.654] [jointLog] [info] Index contained 203027 targets. Incorrect call for umi extractIncorrect call for umi extract; ```. I traced it back to AlevinUtils.cpp in the source files but could not make sense of it from there. The program will run completely on the same data and library if I change --dropseq to --Chromium, eventually outputting the following after processing the reads:. ```; [2018-07-24 10:56:20.712] [jointLog] [info] Computed 9968 rich equivalence classes for further processing; [2018-07-24 10:56:20.712] [jointLog] [info] Counted 2785976 total reads in the equivalence classes; [2018-07-",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/258
https://github.com/COMBINE-lab/salmon/issues/258:3288,Performance,load,loading,3288,"ne indexing Barcodes; [2018-07-26 11:25:31.793] [alevinLog] [info] Total Unique barcodes found: 10630133; [2018-07-26 11:25:31.793] [alevinLog] [info] Used Barcodes except Whitelist: 10603; [2018-07-26 11:25:31.938] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-07-26 11:25:31.939] [alevinLog] [info] parsing read library format; [2018-07-26 11:25:31.949] [jointLog] [info] There is 1 library.; [2018-07-26 11:25:32.331] [jointLog] [info] Loading Quasi index; [2018-07-26 11:25:32.331] [jointLog] [info] Loading 32-bit quasi index; [2018-07-26 11:25:32.357] [stderrLog] [info] Loading Suffix Array ; [2018-07-26 11:26:09.413] [stderrLog] [info] Loading Transcript Info ; [2018-07-26 11:26:10.896] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-26 11:26:11.159] [stderrLog] [info] There were 203027 set bits in the bit array; [2018-07-26 11:26:11.225] [stderrLog] [info] Computing transcript lengths; [2018-07-26 11:26:11.226] [stderrLog] [info] Waiting to finish loading hash; [2018-07-26 11:26:14.654] [stderrLog] [info] Done loading index; [2018-07-26 11:26:14.654] [jointLog] [info] done; [2018-07-26 11:26:14.654] [jointLog] [info] Index contained 203027 targets. Incorrect call for umi extractIncorrect call for umi extract; ```. I traced it back to AlevinUtils.cpp in the source files but could not make sense of it from there. The program will run completely on the same data and library if I change --dropseq to --Chromium, eventually outputting the following after processing the reads:. ```; [2018-07-24 10:56:20.712] [jointLog] [info] Computed 9968 rich equivalence classes for further processing; [2018-07-24 10:56:20.712] [jointLog] [info] Counted 2785976 total reads in the equivalence classes; [2018-07-24 10:56:20.729] [jointLog] [warning] Only 2785976 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2018-07-24 10:56:20.729] [jointLog] [war",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/258
https://github.com/COMBINE-lab/salmon/issues/258:3352,Performance,load,loading,3352,"l Unique barcodes found: 10630133; [2018-07-26 11:25:31.793] [alevinLog] [info] Used Barcodes except Whitelist: 10603; [2018-07-26 11:25:31.938] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-07-26 11:25:31.939] [alevinLog] [info] parsing read library format; [2018-07-26 11:25:31.949] [jointLog] [info] There is 1 library.; [2018-07-26 11:25:32.331] [jointLog] [info] Loading Quasi index; [2018-07-26 11:25:32.331] [jointLog] [info] Loading 32-bit quasi index; [2018-07-26 11:25:32.357] [stderrLog] [info] Loading Suffix Array ; [2018-07-26 11:26:09.413] [stderrLog] [info] Loading Transcript Info ; [2018-07-26 11:26:10.896] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-26 11:26:11.159] [stderrLog] [info] There were 203027 set bits in the bit array; [2018-07-26 11:26:11.225] [stderrLog] [info] Computing transcript lengths; [2018-07-26 11:26:11.226] [stderrLog] [info] Waiting to finish loading hash; [2018-07-26 11:26:14.654] [stderrLog] [info] Done loading index; [2018-07-26 11:26:14.654] [jointLog] [info] done; [2018-07-26 11:26:14.654] [jointLog] [info] Index contained 203027 targets. Incorrect call for umi extractIncorrect call for umi extract; ```. I traced it back to AlevinUtils.cpp in the source files but could not make sense of it from there. The program will run completely on the same data and library if I change --dropseq to --Chromium, eventually outputting the following after processing the reads:. ```; [2018-07-24 10:56:20.712] [jointLog] [info] Computed 9968 rich equivalence classes for further processing; [2018-07-24 10:56:20.712] [jointLog] [info] Counted 2785976 total reads in the equivalence classes; [2018-07-24 10:56:20.729] [jointLog] [warning] Only 2785976 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2018-07-24 10:56:20.729] [jointLog] [warning] Found 82730645 reads with CB+UMI length smaller than expected.Ple",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/258
https://github.com/COMBINE-lab/salmon/issues/258:5970,Performance,optimiz,optimizer,5970,"e = 0.590918%. ```. and then this after processing the cells:; ```; [2018-07-24 10:56:23.180] [alevinLog] [info] Total 21135 UMI after deduplicating.; [2018-07-24 10:56:23.180] [alevinLog] [warning] Skipped 4 barcodes due to No mapped read; [2018-07-24 10:56:23.213] [alevinLog] [info] Clearing EqMap; Might take some time.; [2018-07-24 10:56:23.230] [alevinLog] [info] Starting Import of the gene count matrix.; [2018-07-24 10:56:23.743] [alevinLog] [info] Done Importing gene count matrix for dimension 290x57964; [2018-07-24 10:56:23.743] [alevinLog] [info] Starting dumping cell v gene counts in csv format; [2018-07-24 10:56:29.089] [alevinLog] [info] Finished dumping csv counts; [2018-07-24 10:56:29.089] [alevinLog] [info] Starting white listing; [2018-07-24 10:56:29.090] [alevinLog] [info] Done importing order of barcodes ""quants_mat_rows.txt"" file.; [2018-07-24 10:56:29.090] [alevinLog] [info] Total 290 barcodes found; [2018-07-24 10:56:29.090] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2018-07-24 10:56:29.090] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2018-07-24 10:56:29.090] [alevinLog] [info] Starting to make feature Matrix; [2018-07-24 10:56:29.354] [alevinLog] [info] Done making regular featues; [2018-07-24 10:56:29.354] [alevinLog] [info] Done making feature Matrix; [2018-07-24 10:56:29.359] [alevinLog] [info] Finished white listing; [2018-07-24 10:56:29.371] [alevinLog] [info] Finished optimizer; ```. Other info:; Salmon v0.11.0 - downloaded binary from Github; I used Gencode 28 for the transcriptome; read files: https://www.ncbi.nlm.nih.gov/sra/SRX2676721[accn]. OS: CentOS; version: 2.6.32-696.23.1.el6.centos.plus.x86_64; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch; Distributor ID:	CentOS; Description:	CentOS release 6.9 (Final); Release:	6.9; Codename:	Final",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/258
https://github.com/COMBINE-lab/salmon/issues/258:3296,Security,hash,hash,3296,"ne indexing Barcodes; [2018-07-26 11:25:31.793] [alevinLog] [info] Total Unique barcodes found: 10630133; [2018-07-26 11:25:31.793] [alevinLog] [info] Used Barcodes except Whitelist: 10603; [2018-07-26 11:25:31.938] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-07-26 11:25:31.939] [alevinLog] [info] parsing read library format; [2018-07-26 11:25:31.949] [jointLog] [info] There is 1 library.; [2018-07-26 11:25:32.331] [jointLog] [info] Loading Quasi index; [2018-07-26 11:25:32.331] [jointLog] [info] Loading 32-bit quasi index; [2018-07-26 11:25:32.357] [stderrLog] [info] Loading Suffix Array ; [2018-07-26 11:26:09.413] [stderrLog] [info] Loading Transcript Info ; [2018-07-26 11:26:10.896] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-26 11:26:11.159] [stderrLog] [info] There were 203027 set bits in the bit array; [2018-07-26 11:26:11.225] [stderrLog] [info] Computing transcript lengths; [2018-07-26 11:26:11.226] [stderrLog] [info] Waiting to finish loading hash; [2018-07-26 11:26:14.654] [stderrLog] [info] Done loading index; [2018-07-26 11:26:14.654] [jointLog] [info] done; [2018-07-26 11:26:14.654] [jointLog] [info] Index contained 203027 targets. Incorrect call for umi extractIncorrect call for umi extract; ```. I traced it back to AlevinUtils.cpp in the source files but could not make sense of it from there. The program will run completely on the same data and library if I change --dropseq to --Chromium, eventually outputting the following after processing the reads:. ```; [2018-07-24 10:56:20.712] [jointLog] [info] Computed 9968 rich equivalence classes for further processing; [2018-07-24 10:56:20.712] [jointLog] [info] Counted 2785976 total reads in the equivalence classes; [2018-07-24 10:56:20.729] [jointLog] [warning] Only 2785976 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2018-07-24 10:56:20.729] [jointLog] [war",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/258
https://github.com/COMBINE-lab/salmon/issues/258:775,Testability,Log,Logs,775,"Hi,. I'm having issues getting alevin to work on dropseq data after following the tutorial for setting it up. I am using the following command to run it:. salmon alevin -l ISR -1 SRR6054189.sra_1.fastq -2 SRR6054189.sra_2.fastq --dropseq -i ~/Documents/CordBlood/data/index_15 -p 10 -o ~/Documents/CordBlood/data/alevin_out --tgMap ~/Documents/CordBlood/data/txp2gene.tsv --dumpCsvCounts. and eventually get; ""Incorrect call for umi extract"". Here's the full output:. ```; salmon alevin -l ISR -1 SRR6054189.sra_1.fastq -2 SRR6054189.sra_2.fastq --dropseq -i ~/Documents/CordBlood/data/index_15 -p 4 -o ~/Documents/CordBlood/data/alevin4p_out_combined --tgMap ~/Documents/CordBlood/data/txp2gene.tsv --dumpCsvCounts; Version Info: This is the most recent version of Salmon.; Logs will be written to ~/Documents/CordBlood/data/alevin4p_out_combined/logs; ### salmon (single-cell-based) v0.11.0; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { SRR6054189.sra_1.fastq }; ### [ mates2 ] => { SRR6054189.sra_2.fastq }; ### [ dropseq ] => { }; ### [ index ] => {~/Documents/CordBlood/data/index_15 }; ### [ threads ] => { 4 }; ### [ output ] => {~/Documents/CordBlood/data/alevin4p_out_combined }; ### [ tgMap ] => {~/Documents/CordBlood/data/txp2gene.tsv }; ### [ dumpCsvCounts ] => { }. [2018-07-26 11:15:08.510] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-26 11:15:08.524] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 471 Million barcodes. [2018-07-26 11:25:20.231] [alevinLog] [info] Done barcode density calculation.; [2018-07-26 11:25:20.231] [alevinLog] [info] # Barcodes Used: 470701906 / 471465434.; [2018-07-26 11:25:30.228] [alevinLog] [info] Knee found left boundary at 202 ; [2018-07-26 11:25:31.135] [alevinLog] [info] Gauss Corrected Boundary at 22 ; [2018-07-26 11:25:31.135] [alevinLog] [info] Learned InvCov: 1044.2 normfactor: 295.23",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/258
https://github.com/COMBINE-lab/salmon/issues/258:848,Testability,log,logs,848,"Hi,. I'm having issues getting alevin to work on dropseq data after following the tutorial for setting it up. I am using the following command to run it:. salmon alevin -l ISR -1 SRR6054189.sra_1.fastq -2 SRR6054189.sra_2.fastq --dropseq -i ~/Documents/CordBlood/data/index_15 -p 10 -o ~/Documents/CordBlood/data/alevin_out --tgMap ~/Documents/CordBlood/data/txp2gene.tsv --dumpCsvCounts. and eventually get; ""Incorrect call for umi extract"". Here's the full output:. ```; salmon alevin -l ISR -1 SRR6054189.sra_1.fastq -2 SRR6054189.sra_2.fastq --dropseq -i ~/Documents/CordBlood/data/index_15 -p 4 -o ~/Documents/CordBlood/data/alevin4p_out_combined --tgMap ~/Documents/CordBlood/data/txp2gene.tsv --dumpCsvCounts; Version Info: This is the most recent version of Salmon.; Logs will be written to ~/Documents/CordBlood/data/alevin4p_out_combined/logs; ### salmon (single-cell-based) v0.11.0; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { SRR6054189.sra_1.fastq }; ### [ mates2 ] => { SRR6054189.sra_2.fastq }; ### [ dropseq ] => { }; ### [ index ] => {~/Documents/CordBlood/data/index_15 }; ### [ threads ] => { 4 }; ### [ output ] => {~/Documents/CordBlood/data/alevin4p_out_combined }; ### [ tgMap ] => {~/Documents/CordBlood/data/txp2gene.tsv }; ### [ dumpCsvCounts ] => { }. [2018-07-26 11:15:08.510] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-26 11:15:08.524] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 471 Million barcodes. [2018-07-26 11:25:20.231] [alevinLog] [info] Done barcode density calculation.; [2018-07-26 11:25:20.231] [alevinLog] [info] # Barcodes Used: 470701906 / 471465434.; [2018-07-26 11:25:30.228] [alevinLog] [info] Knee found left boundary at 202 ; [2018-07-26 11:25:31.135] [alevinLog] [info] Gauss Corrected Boundary at 22 ; [2018-07-26 11:25:31.135] [alevinLog] [info] Learned InvCov: 1044.2 normfactor: 295.23",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/258
https://github.com/COMBINE-lab/salmon/issues/258:1960,Usability,Learn,Learned,1960,bType ] => { ISR }; ### [ mates1 ] => { SRR6054189.sra_1.fastq }; ### [ mates2 ] => { SRR6054189.sra_2.fastq }; ### [ dropseq ] => { }; ### [ index ] => {~/Documents/CordBlood/data/index_15 }; ### [ threads ] => { 4 }; ### [ output ] => {~/Documents/CordBlood/data/alevin4p_out_combined }; ### [ tgMap ] => {~/Documents/CordBlood/data/txp2gene.tsv }; ### [ dumpCsvCounts ] => { }. [2018-07-26 11:15:08.510] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-26 11:15:08.524] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 471 Million barcodes. [2018-07-26 11:25:20.231] [alevinLog] [info] Done barcode density calculation.; [2018-07-26 11:25:20.231] [alevinLog] [info] # Barcodes Used: 470701906 / 471465434.; [2018-07-26 11:25:30.228] [alevinLog] [info] Knee found left boundary at 202 ; [2018-07-26 11:25:31.135] [alevinLog] [info] Gauss Corrected Boundary at 22 ; [2018-07-26 11:25:31.135] [alevinLog] [info] Learned InvCov: 1044.2 normfactor: 295.235; [2018-07-26 11:25:31.135] [alevinLog] [info] Total 222(has 200 low confidence) barcodes; [2018-07-26 11:25:31.440] [alevinLog] [info] Done True Barcode Sampling; [2018-07-26 11:25:31.789] [alevinLog] [info] Done populating Z matrix; [2018-07-26 11:25:31.793] [alevinLog] [info] Done indexing Barcodes; [2018-07-26 11:25:31.793] [alevinLog] [info] Total Unique barcodes found: 10630133; [2018-07-26 11:25:31.793] [alevinLog] [info] Used Barcodes except Whitelist: 10603; [2018-07-26 11:25:31.938] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-07-26 11:25:31.939] [alevinLog] [info] parsing read library format; [2018-07-26 11:25:31.949] [jointLog] [info] There is 1 library.; [2018-07-26 11:25:32.331] [jointLog] [info] Loading Quasi index; [2018-07-26 11:25:32.331] [jointLog] [info] Loading 32-bit quasi index; [2018-07-26 11:25:32.357] [stderrLog] [info] Loading Suffix Array ; [2018-07-26 11:26:09.413] [stderrLog] [info] L,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/258
https://github.com/COMBINE-lab/salmon/issues/258:4747,Usability,Clear,Clearing,4747,"um, eventually outputting the following after processing the reads:. ```; [2018-07-24 10:56:20.712] [jointLog] [info] Computed 9968 rich equivalence classes for further processing; [2018-07-24 10:56:20.712] [jointLog] [info] Counted 2785976 total reads in the equivalence classes; [2018-07-24 10:56:20.729] [jointLog] [warning] Only 2785976 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2018-07-24 10:56:20.729] [jointLog] [warning] Found 82730645 reads with CB+UMI length smaller than expected.Please report on github if this number is too large; [2018-07-24 10:56:20.729] [jointLog] [info] Mapping rate = 0.590918%. ```. and then this after processing the cells:; ```; [2018-07-24 10:56:23.180] [alevinLog] [info] Total 21135 UMI after deduplicating.; [2018-07-24 10:56:23.180] [alevinLog] [warning] Skipped 4 barcodes due to No mapped read; [2018-07-24 10:56:23.213] [alevinLog] [info] Clearing EqMap; Might take some time.; [2018-07-24 10:56:23.230] [alevinLog] [info] Starting Import of the gene count matrix.; [2018-07-24 10:56:23.743] [alevinLog] [info] Done Importing gene count matrix for dimension 290x57964; [2018-07-24 10:56:23.743] [alevinLog] [info] Starting dumping cell v gene counts in csv format; [2018-07-24 10:56:29.089] [alevinLog] [info] Finished dumping csv counts; [2018-07-24 10:56:29.089] [alevinLog] [info] Starting white listing; [2018-07-24 10:56:29.090] [alevinLog] [info] Done importing order of barcodes ""quants_mat_rows.txt"" file.; [2018-07-24 10:56:29.090] [alevinLog] [info] Total 290 barcodes found; [2018-07-24 10:56:29.090] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2018-07-24 10:56:29.090] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2018-07-24 10:56:29.090] [alevinLog] [info] Starting to make feature Matrix; [2018-07-24 10:56:29.354] [alevinLog] [info] Done maki",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/258
https://github.com/COMBINE-lab/salmon/issues/259:277,Deployability,update,updated,277,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Both. **Describe the bug**; When viewing http://salmon.readthedocs.io/en/latest/index.html, the page header described Salmon 0.8.1. Is the documentation out of date, or is that simply not an updated version number?. **To Reproduce**; View http://salmon.readthedocs.io/en/latest/index.html. **Expected behavior**; Salmon 0.11.0 is the latest release, thus I expected the latest version of the documentation to reflect that.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/259
https://github.com/COMBINE-lab/salmon/issues/259:427,Deployability,release,release,427,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Both. **Describe the bug**; When viewing http://salmon.readthedocs.io/en/latest/index.html, the page header described Salmon 0.8.1. Is the documentation out of date, or is that simply not an updated version number?. **To Reproduce**; View http://salmon.readthedocs.io/en/latest/index.html. **Expected behavior**; Salmon 0.11.0 is the latest release, thus I expected the latest version of the documentation to reflect that.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/259
https://github.com/COMBINE-lab/salmon/issues/259:263,Usability,simpl,simply,263,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Both. **Describe the bug**; When viewing http://salmon.readthedocs.io/en/latest/index.html, the page header described Salmon 0.8.1. Is the documentation out of date, or is that simply not an updated version number?. **To Reproduce**; View http://salmon.readthedocs.io/en/latest/index.html. **Expected behavior**; Salmon 0.11.0 is the latest release, thus I expected the latest version of the documentation to reflect that.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/259
https://github.com/COMBINE-lab/salmon/issues/260:57,Deployability,deploy,deployment,57,While Bioconda is working on resolving the issue for osx deployment of salmon (>v10.2). the following binary can be used for osx based testing of Salmon/Alevin. Note: The code has been compiled on Osx High Sierra (v 10.13.2) and can potentially create problem with other versions of osx.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/260
https://github.com/COMBINE-lab/salmon/issues/260:135,Testability,test,testing,135,While Bioconda is working on resolving the issue for osx deployment of salmon (>v10.2). the following binary can be used for osx based testing of Salmon/Alevin. Note: The code has been compiled on Osx High Sierra (v 10.13.2) and can potentially create problem with other versions of osx.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/260
https://github.com/COMBINE-lab/salmon/issues/261:162,Availability,fault,fault,162,"This issue is related to salmon (bulk mode). When running salmon quant, everything seems to run normally until the very end, when there is suddenly ""Segmentation fault (core dumped)"" and then a quant file is not written. Started with --gcBias, then tried with --seqBias, then without either and get the same error. Have run Salmon in the past with no issues. Have updated to the latest version but problem persists. The version is salmon (mapping-based) v0.11.1 and was installed through bioconda.; The command being run is:. ```; salmon quant -i /data2/csijcs/hg38/hg38.transcriptome.index -l A \; -1 ${dir}/${samp}/${samp}_R1_001.fastq.gz \; -2 ${dir}/${samp}/${samp}_R2_001.fastq.gz \; -p 16 -o ${dir}/salmon_quants/${samp}; ```. The output is:; ```; Processing sample PBMC_AML_BM_001; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.11.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /data2/csijcs/hg38/hg38.transcriptome.index }; ### [ libType ] => { A }; ### [ mates1 ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/PBMC_AML_BM_001/PBMC_AML_BM_001_R1_001.fastq.gz }; ### [ mates2 ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/PBMC_AML_BM_001/PBMC_AML_BM_001_R2_001.fastq.gz }; ### [ threads ] => { 16 }; ### [ output ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/PBMC_AML_BM_001 }; Logs will be written to /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/PBMC_AML_BM_001/logs; [2018-07-30 15:41:42.232] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-30 15:41:42.232] [jointLog] [info] parsing read library format; [2018-07-30 15:41:42.232] [jointLog] [info] There is 1 library.; [2018-07-30 15:41:45.840] [jointLog] [info] Loading Quasi index; [2018-07-30 15:41:45.840] [jointLog] [info] Loading 32-bit quasi index; [2018-07-30 15:41:45.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261
https://github.com/COMBINE-lab/salmon/issues/261:308,Availability,error,error,308,"This issue is related to salmon (bulk mode). When running salmon quant, everything seems to run normally until the very end, when there is suddenly ""Segmentation fault (core dumped)"" and then a quant file is not written. Started with --gcBias, then tried with --seqBias, then without either and get the same error. Have run Salmon in the past with no issues. Have updated to the latest version but problem persists. The version is salmon (mapping-based) v0.11.1 and was installed through bioconda.; The command being run is:. ```; salmon quant -i /data2/csijcs/hg38/hg38.transcriptome.index -l A \; -1 ${dir}/${samp}/${samp}_R1_001.fastq.gz \; -2 ${dir}/${samp}/${samp}_R2_001.fastq.gz \; -p 16 -o ${dir}/salmon_quants/${samp}; ```. The output is:; ```; Processing sample PBMC_AML_BM_001; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.11.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /data2/csijcs/hg38/hg38.transcriptome.index }; ### [ libType ] => { A }; ### [ mates1 ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/PBMC_AML_BM_001/PBMC_AML_BM_001_R1_001.fastq.gz }; ### [ mates2 ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/PBMC_AML_BM_001/PBMC_AML_BM_001_R2_001.fastq.gz }; ### [ threads ] => { 16 }; ### [ output ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/PBMC_AML_BM_001 }; Logs will be written to /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/PBMC_AML_BM_001/logs; [2018-07-30 15:41:42.232] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-30 15:41:42.232] [jointLog] [info] parsing read library format; [2018-07-30 15:41:42.232] [jointLog] [info] There is 1 library.; [2018-07-30 15:41:45.840] [jointLog] [info] Loading Quasi index; [2018-07-30 15:41:45.840] [jointLog] [info] Loading 32-bit quasi index; [2018-07-30 15:41:45.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261
https://github.com/COMBINE-lab/salmon/issues/261:4735,Availability,fault,fault,4735,o probability fragments; [2018-07-30 16:26:22.399] [jointLog] [info] Thread saw mini-batch with a maximum of 0.06% zero probability fragments; [2018-07-30 16:26:22.399] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability fragments; [2018-07-30 16:26:22.432] [jointLog] [info] Thread saw mini-batch with a maximum of 0.06% zero probability fragments; [2018-07-30 16:26:22.469] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability fragments; [2018-07-30 16:26:22.513] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability fragments; [2018-07-30 16:26:22.582] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability fragments; [2018-07-30 16:26:22.605] [jointLog] [info] Thread saw mini-batch with a maximum of 0.06% zero probability fragments; [2018-07-30 16:26:22.631] [jointLog] [info] Thread saw mini-batch with a maximum of 0.06% zero probability fragments; [2018-07-30 16:26:22.678] [jointLog] [info] Thread saw mini-batch with a maximum of 0.06% zero probability fragments; [2018-07-30 16:26:22.679] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability fragments; [2018-07-30 16:26:22.739] [jointLog] [info] Thread saw mini-batch with a maximum of 0.06% zero probability fragments; [2018-07-30 16:26:22.771] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability fragments; [2018-07-30 16:26:22.807] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability fragments; [2018-07-30 16:26:22.828] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability fragments; [2018-07-30 16:26:22.896] [jointLog] [info] Thread saw mini-batch with a maximum of 0.06% zero probability fragments. Segmentation fault (core dumped); ```. The environment is Linux Elmo 3.16.0-77-generic #99~14.04.1-Ubuntu SMP Tue Jun 28 19:17:10 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux. Any help would be much appreciated,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261
https://github.com/COMBINE-lab/salmon/issues/261:364,Deployability,update,updated,364,"This issue is related to salmon (bulk mode). When running salmon quant, everything seems to run normally until the very end, when there is suddenly ""Segmentation fault (core dumped)"" and then a quant file is not written. Started with --gcBias, then tried with --seqBias, then without either and get the same error. Have run Salmon in the past with no issues. Have updated to the latest version but problem persists. The version is salmon (mapping-based) v0.11.1 and was installed through bioconda.; The command being run is:. ```; salmon quant -i /data2/csijcs/hg38/hg38.transcriptome.index -l A \; -1 ${dir}/${samp}/${samp}_R1_001.fastq.gz \; -2 ${dir}/${samp}/${samp}_R2_001.fastq.gz \; -p 16 -o ${dir}/salmon_quants/${samp}; ```. The output is:; ```; Processing sample PBMC_AML_BM_001; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.11.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /data2/csijcs/hg38/hg38.transcriptome.index }; ### [ libType ] => { A }; ### [ mates1 ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/PBMC_AML_BM_001/PBMC_AML_BM_001_R1_001.fastq.gz }; ### [ mates2 ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/PBMC_AML_BM_001/PBMC_AML_BM_001_R2_001.fastq.gz }; ### [ threads ] => { 16 }; ### [ output ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/PBMC_AML_BM_001 }; Logs will be written to /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/PBMC_AML_BM_001/logs; [2018-07-30 15:41:42.232] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-30 15:41:42.232] [jointLog] [info] parsing read library format; [2018-07-30 15:41:42.232] [jointLog] [info] There is 1 library.; [2018-07-30 15:41:45.840] [jointLog] [info] Loading Quasi index; [2018-07-30 15:41:45.840] [jointLog] [info] Loading 32-bit quasi index; [2018-07-30 15:41:45.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261
https://github.com/COMBINE-lab/salmon/issues/261:470,Deployability,install,installed,470,"This issue is related to salmon (bulk mode). When running salmon quant, everything seems to run normally until the very end, when there is suddenly ""Segmentation fault (core dumped)"" and then a quant file is not written. Started with --gcBias, then tried with --seqBias, then without either and get the same error. Have run Salmon in the past with no issues. Have updated to the latest version but problem persists. The version is salmon (mapping-based) v0.11.1 and was installed through bioconda.; The command being run is:. ```; salmon quant -i /data2/csijcs/hg38/hg38.transcriptome.index -l A \; -1 ${dir}/${samp}/${samp}_R1_001.fastq.gz \; -2 ${dir}/${samp}/${samp}_R2_001.fastq.gz \; -p 16 -o ${dir}/salmon_quants/${samp}; ```. The output is:; ```; Processing sample PBMC_AML_BM_001; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.11.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /data2/csijcs/hg38/hg38.transcriptome.index }; ### [ libType ] => { A }; ### [ mates1 ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/PBMC_AML_BM_001/PBMC_AML_BM_001_R1_001.fastq.gz }; ### [ mates2 ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/PBMC_AML_BM_001/PBMC_AML_BM_001_R2_001.fastq.gz }; ### [ threads ] => { 16 }; ### [ output ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/PBMC_AML_BM_001 }; Logs will be written to /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/PBMC_AML_BM_001/logs; [2018-07-30 15:41:42.232] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-30 15:41:42.232] [jointLog] [info] parsing read library format; [2018-07-30 15:41:42.232] [jointLog] [info] There is 1 library.; [2018-07-30 15:41:45.840] [jointLog] [info] Loading Quasi index; [2018-07-30 15:41:45.840] [jointLog] [info] Loading 32-bit quasi index; [2018-07-30 15:41:45.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261
https://github.com/COMBINE-lab/salmon/issues/261:1887,Performance,Load,Loading,1887," ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /data2/csijcs/hg38/hg38.transcriptome.index }; ### [ libType ] => { A }; ### [ mates1 ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/PBMC_AML_BM_001/PBMC_AML_BM_001_R1_001.fastq.gz }; ### [ mates2 ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/PBMC_AML_BM_001/PBMC_AML_BM_001_R2_001.fastq.gz }; ### [ threads ] => { 16 }; ### [ output ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/PBMC_AML_BM_001 }; Logs will be written to /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/PBMC_AML_BM_001/logs; [2018-07-30 15:41:42.232] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-30 15:41:42.232] [jointLog] [info] parsing read library format; [2018-07-30 15:41:42.232] [jointLog] [info] There is 1 library.; [2018-07-30 15:41:45.840] [jointLog] [info] Loading Quasi index; [2018-07-30 15:41:45.840] [jointLog] [info] Loading 32-bit quasi index; [2018-07-30 15:41:45.840] [stderrLog] [info] Loading Suffix Array ; [2018-07-30 15:42:39.168] [stderrLog] [info] Loading Transcript Info ; [2018-07-30 15:42:53.599] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-30 15:42:56.236] [stderrLog] [info] There were 203027 set bits in the bit array; [2018-07-30 15:42:56.328] [stderrLog] [info] Computing transcript lengths; [2018-07-30 15:42:56.329] [stderrLog] [info] Waiting to finish loading hash; [2018-07-30 15:42:56.329] [stderrLog] [info] Done loading index; [2018-07-30 15:42:56.329] [jointLog] [info] done; [2018-07-30 15:42:56.329] [jointLog] [info] Index contained 203027 targets. processed 4000003 fragments; processed 298000000 fragments 0.071773[2018-07-30 15:43:47.415] [jointLog] [info] Automatically detected most likely library type as IU; hits: 20950511, hits per frag: 0.0703073[2018-07-30 16:26:22.399] [jointLog] [info] Thread saw mini-bat",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261
https://github.com/COMBINE-lab/salmon/issues/261:1952,Performance,Load,Loading,1952,"sijcs/hg38/hg38.transcriptome.index }; ### [ libType ] => { A }; ### [ mates1 ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/PBMC_AML_BM_001/PBMC_AML_BM_001_R1_001.fastq.gz }; ### [ mates2 ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/PBMC_AML_BM_001/PBMC_AML_BM_001_R2_001.fastq.gz }; ### [ threads ] => { 16 }; ### [ output ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/PBMC_AML_BM_001 }; Logs will be written to /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/PBMC_AML_BM_001/logs; [2018-07-30 15:41:42.232] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-30 15:41:42.232] [jointLog] [info] parsing read library format; [2018-07-30 15:41:42.232] [jointLog] [info] There is 1 library.; [2018-07-30 15:41:45.840] [jointLog] [info] Loading Quasi index; [2018-07-30 15:41:45.840] [jointLog] [info] Loading 32-bit quasi index; [2018-07-30 15:41:45.840] [stderrLog] [info] Loading Suffix Array ; [2018-07-30 15:42:39.168] [stderrLog] [info] Loading Transcript Info ; [2018-07-30 15:42:53.599] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-30 15:42:56.236] [stderrLog] [info] There were 203027 set bits in the bit array; [2018-07-30 15:42:56.328] [stderrLog] [info] Computing transcript lengths; [2018-07-30 15:42:56.329] [stderrLog] [info] Waiting to finish loading hash; [2018-07-30 15:42:56.329] [stderrLog] [info] Done loading index; [2018-07-30 15:42:56.329] [jointLog] [info] done; [2018-07-30 15:42:56.329] [jointLog] [info] Index contained 203027 targets. processed 4000003 fragments; processed 298000000 fragments 0.071773[2018-07-30 15:43:47.415] [jointLog] [info] Automatically detected most likely library type as IU; hits: 20950511, hits per frag: 0.0703073[2018-07-30 16:26:22.399] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability fragments; [2018-07-30 1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261
https://github.com/COMBINE-lab/salmon/issues/261:2025,Performance,Load,Loading,2025," mates1 ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/PBMC_AML_BM_001/PBMC_AML_BM_001_R1_001.fastq.gz }; ### [ mates2 ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/PBMC_AML_BM_001/PBMC_AML_BM_001_R2_001.fastq.gz }; ### [ threads ] => { 16 }; ### [ output ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/PBMC_AML_BM_001 }; Logs will be written to /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/PBMC_AML_BM_001/logs; [2018-07-30 15:41:42.232] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-30 15:41:42.232] [jointLog] [info] parsing read library format; [2018-07-30 15:41:42.232] [jointLog] [info] There is 1 library.; [2018-07-30 15:41:45.840] [jointLog] [info] Loading Quasi index; [2018-07-30 15:41:45.840] [jointLog] [info] Loading 32-bit quasi index; [2018-07-30 15:41:45.840] [stderrLog] [info] Loading Suffix Array ; [2018-07-30 15:42:39.168] [stderrLog] [info] Loading Transcript Info ; [2018-07-30 15:42:53.599] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-30 15:42:56.236] [stderrLog] [info] There were 203027 set bits in the bit array; [2018-07-30 15:42:56.328] [stderrLog] [info] Computing transcript lengths; [2018-07-30 15:42:56.329] [stderrLog] [info] Waiting to finish loading hash; [2018-07-30 15:42:56.329] [stderrLog] [info] Done loading index; [2018-07-30 15:42:56.329] [jointLog] [info] done; [2018-07-30 15:42:56.329] [jointLog] [info] Index contained 203027 targets. processed 4000003 fragments; processed 298000000 fragments 0.071773[2018-07-30 15:43:47.415] [jointLog] [info] Automatically detected most likely library type as IU; hits: 20950511, hits per frag: 0.0703073[2018-07-30 16:26:22.399] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability fragments; [2018-07-30 16:26:22.399] [jointLog] [info] Thread saw mini-batch with a maximum of",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261
https://github.com/COMBINE-lab/salmon/issues/261:2093,Performance,Load,Loading,2093,"sh_samples/PBMC_AML_BM_001/PBMC_AML_BM_001_R1_001.fastq.gz }; ### [ mates2 ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/PBMC_AML_BM_001/PBMC_AML_BM_001_R2_001.fastq.gz }; ### [ threads ] => { 16 }; ### [ output ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/PBMC_AML_BM_001 }; Logs will be written to /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/PBMC_AML_BM_001/logs; [2018-07-30 15:41:42.232] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-30 15:41:42.232] [jointLog] [info] parsing read library format; [2018-07-30 15:41:42.232] [jointLog] [info] There is 1 library.; [2018-07-30 15:41:45.840] [jointLog] [info] Loading Quasi index; [2018-07-30 15:41:45.840] [jointLog] [info] Loading 32-bit quasi index; [2018-07-30 15:41:45.840] [stderrLog] [info] Loading Suffix Array ; [2018-07-30 15:42:39.168] [stderrLog] [info] Loading Transcript Info ; [2018-07-30 15:42:53.599] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-30 15:42:56.236] [stderrLog] [info] There were 203027 set bits in the bit array; [2018-07-30 15:42:56.328] [stderrLog] [info] Computing transcript lengths; [2018-07-30 15:42:56.329] [stderrLog] [info] Waiting to finish loading hash; [2018-07-30 15:42:56.329] [stderrLog] [info] Done loading index; [2018-07-30 15:42:56.329] [jointLog] [info] done; [2018-07-30 15:42:56.329] [jointLog] [info] Index contained 203027 targets. processed 4000003 fragments; processed 298000000 fragments 0.071773[2018-07-30 15:43:47.415] [jointLog] [info] Automatically detected most likely library type as IU; hits: 20950511, hits per frag: 0.0703073[2018-07-30 16:26:22.399] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability fragments; [2018-07-30 16:26:22.399] [jointLog] [info] Thread saw mini-batch with a maximum of 0.06% zero probability fragments; [2018-07-30 16:26:22.399] [jointLog",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261
https://github.com/COMBINE-lab/salmon/issues/261:2164,Performance,Load,Loading,2164," ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/PBMC_AML_BM_001/PBMC_AML_BM_001_R2_001.fastq.gz }; ### [ threads ] => { 16 }; ### [ output ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/PBMC_AML_BM_001 }; Logs will be written to /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/PBMC_AML_BM_001/logs; [2018-07-30 15:41:42.232] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-30 15:41:42.232] [jointLog] [info] parsing read library format; [2018-07-30 15:41:42.232] [jointLog] [info] There is 1 library.; [2018-07-30 15:41:45.840] [jointLog] [info] Loading Quasi index; [2018-07-30 15:41:45.840] [jointLog] [info] Loading 32-bit quasi index; [2018-07-30 15:41:45.840] [stderrLog] [info] Loading Suffix Array ; [2018-07-30 15:42:39.168] [stderrLog] [info] Loading Transcript Info ; [2018-07-30 15:42:53.599] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-30 15:42:56.236] [stderrLog] [info] There were 203027 set bits in the bit array; [2018-07-30 15:42:56.328] [stderrLog] [info] Computing transcript lengths; [2018-07-30 15:42:56.329] [stderrLog] [info] Waiting to finish loading hash; [2018-07-30 15:42:56.329] [stderrLog] [info] Done loading index; [2018-07-30 15:42:56.329] [jointLog] [info] done; [2018-07-30 15:42:56.329] [jointLog] [info] Index contained 203027 targets. processed 4000003 fragments; processed 298000000 fragments 0.071773[2018-07-30 15:43:47.415] [jointLog] [info] Automatically detected most likely library type as IU; hits: 20950511, hits per frag: 0.0703073[2018-07-30 16:26:22.399] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability fragments; [2018-07-30 16:26:22.399] [jointLog] [info] Thread saw mini-batch with a maximum of 0.06% zero probability fragments; [2018-07-30 16:26:22.399] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability f",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261
https://github.com/COMBINE-lab/salmon/issues/261:2423,Performance,load,loading,2423,"n_quants/PBMC_AML_BM_001 }; Logs will be written to /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/PBMC_AML_BM_001/logs; [2018-07-30 15:41:42.232] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-30 15:41:42.232] [jointLog] [info] parsing read library format; [2018-07-30 15:41:42.232] [jointLog] [info] There is 1 library.; [2018-07-30 15:41:45.840] [jointLog] [info] Loading Quasi index; [2018-07-30 15:41:45.840] [jointLog] [info] Loading 32-bit quasi index; [2018-07-30 15:41:45.840] [stderrLog] [info] Loading Suffix Array ; [2018-07-30 15:42:39.168] [stderrLog] [info] Loading Transcript Info ; [2018-07-30 15:42:53.599] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-30 15:42:56.236] [stderrLog] [info] There were 203027 set bits in the bit array; [2018-07-30 15:42:56.328] [stderrLog] [info] Computing transcript lengths; [2018-07-30 15:42:56.329] [stderrLog] [info] Waiting to finish loading hash; [2018-07-30 15:42:56.329] [stderrLog] [info] Done loading index; [2018-07-30 15:42:56.329] [jointLog] [info] done; [2018-07-30 15:42:56.329] [jointLog] [info] Index contained 203027 targets. processed 4000003 fragments; processed 298000000 fragments 0.071773[2018-07-30 15:43:47.415] [jointLog] [info] Automatically detected most likely library type as IU; hits: 20950511, hits per frag: 0.0703073[2018-07-30 16:26:22.399] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability fragments; [2018-07-30 16:26:22.399] [jointLog] [info] Thread saw mini-batch with a maximum of 0.06% zero probability fragments; [2018-07-30 16:26:22.399] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability fragments; [2018-07-30 16:26:22.432] [jointLog] [info] Thread saw mini-batch with a maximum of 0.06% zero probability fragments; [2018-07-30 16:26:22.469] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability fragmen",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261
https://github.com/COMBINE-lab/salmon/issues/261:2487,Performance,load,loading,2487,"NA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/PBMC_AML_BM_001/logs; [2018-07-30 15:41:42.232] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-30 15:41:42.232] [jointLog] [info] parsing read library format; [2018-07-30 15:41:42.232] [jointLog] [info] There is 1 library.; [2018-07-30 15:41:45.840] [jointLog] [info] Loading Quasi index; [2018-07-30 15:41:45.840] [jointLog] [info] Loading 32-bit quasi index; [2018-07-30 15:41:45.840] [stderrLog] [info] Loading Suffix Array ; [2018-07-30 15:42:39.168] [stderrLog] [info] Loading Transcript Info ; [2018-07-30 15:42:53.599] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-30 15:42:56.236] [stderrLog] [info] There were 203027 set bits in the bit array; [2018-07-30 15:42:56.328] [stderrLog] [info] Computing transcript lengths; [2018-07-30 15:42:56.329] [stderrLog] [info] Waiting to finish loading hash; [2018-07-30 15:42:56.329] [stderrLog] [info] Done loading index; [2018-07-30 15:42:56.329] [jointLog] [info] done; [2018-07-30 15:42:56.329] [jointLog] [info] Index contained 203027 targets. processed 4000003 fragments; processed 298000000 fragments 0.071773[2018-07-30 15:43:47.415] [jointLog] [info] Automatically detected most likely library type as IU; hits: 20950511, hits per frag: 0.0703073[2018-07-30 16:26:22.399] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability fragments; [2018-07-30 16:26:22.399] [jointLog] [info] Thread saw mini-batch with a maximum of 0.06% zero probability fragments; [2018-07-30 16:26:22.399] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability fragments; [2018-07-30 16:26:22.432] [jointLog] [info] Thread saw mini-batch with a maximum of 0.06% zero probability fragments; [2018-07-30 16:26:22.469] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability fragments; [2018-07-30 16:26:22.513] [jointLog] [info] Thread saw mini-batch w",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261
https://github.com/COMBINE-lab/salmon/issues/261:2753,Safety,detect,detected,2753,"ormat; [2018-07-30 15:41:42.232] [jointLog] [info] There is 1 library.; [2018-07-30 15:41:45.840] [jointLog] [info] Loading Quasi index; [2018-07-30 15:41:45.840] [jointLog] [info] Loading 32-bit quasi index; [2018-07-30 15:41:45.840] [stderrLog] [info] Loading Suffix Array ; [2018-07-30 15:42:39.168] [stderrLog] [info] Loading Transcript Info ; [2018-07-30 15:42:53.599] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-30 15:42:56.236] [stderrLog] [info] There were 203027 set bits in the bit array; [2018-07-30 15:42:56.328] [stderrLog] [info] Computing transcript lengths; [2018-07-30 15:42:56.329] [stderrLog] [info] Waiting to finish loading hash; [2018-07-30 15:42:56.329] [stderrLog] [info] Done loading index; [2018-07-30 15:42:56.329] [jointLog] [info] done; [2018-07-30 15:42:56.329] [jointLog] [info] Index contained 203027 targets. processed 4000003 fragments; processed 298000000 fragments 0.071773[2018-07-30 15:43:47.415] [jointLog] [info] Automatically detected most likely library type as IU; hits: 20950511, hits per frag: 0.0703073[2018-07-30 16:26:22.399] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability fragments; [2018-07-30 16:26:22.399] [jointLog] [info] Thread saw mini-batch with a maximum of 0.06% zero probability fragments; [2018-07-30 16:26:22.399] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability fragments; [2018-07-30 16:26:22.432] [jointLog] [info] Thread saw mini-batch with a maximum of 0.06% zero probability fragments; [2018-07-30 16:26:22.469] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability fragments; [2018-07-30 16:26:22.513] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability fragments; [2018-07-30 16:26:22.582] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability fragments; [2018-07-30 16:26:22.605] [jointLog] [info] Thread saw mini-batch with a maximum of 0.06% zero probability fragm",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261
https://github.com/COMBINE-lab/salmon/issues/261:2431,Security,hash,hash,2431,"n_quants/PBMC_AML_BM_001 }; Logs will be written to /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/PBMC_AML_BM_001/logs; [2018-07-30 15:41:42.232] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-30 15:41:42.232] [jointLog] [info] parsing read library format; [2018-07-30 15:41:42.232] [jointLog] [info] There is 1 library.; [2018-07-30 15:41:45.840] [jointLog] [info] Loading Quasi index; [2018-07-30 15:41:45.840] [jointLog] [info] Loading 32-bit quasi index; [2018-07-30 15:41:45.840] [stderrLog] [info] Loading Suffix Array ; [2018-07-30 15:42:39.168] [stderrLog] [info] Loading Transcript Info ; [2018-07-30 15:42:53.599] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-30 15:42:56.236] [stderrLog] [info] There were 203027 set bits in the bit array; [2018-07-30 15:42:56.328] [stderrLog] [info] Computing transcript lengths; [2018-07-30 15:42:56.329] [stderrLog] [info] Waiting to finish loading hash; [2018-07-30 15:42:56.329] [stderrLog] [info] Done loading index; [2018-07-30 15:42:56.329] [jointLog] [info] done; [2018-07-30 15:42:56.329] [jointLog] [info] Index contained 203027 targets. processed 4000003 fragments; processed 298000000 fragments 0.071773[2018-07-30 15:43:47.415] [jointLog] [info] Automatically detected most likely library type as IU; hits: 20950511, hits per frag: 0.0703073[2018-07-30 16:26:22.399] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability fragments; [2018-07-30 16:26:22.399] [jointLog] [info] Thread saw mini-batch with a maximum of 0.06% zero probability fragments; [2018-07-30 16:26:22.399] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability fragments; [2018-07-30 16:26:22.432] [jointLog] [info] Thread saw mini-batch with a maximum of 0.06% zero probability fragments; [2018-07-30 16:26:22.469] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability fragmen",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261
https://github.com/COMBINE-lab/salmon/issues/261:1447,Testability,Log,Logs,1447,ng-based) v0.11.1 and was installed through bioconda.; The command being run is:. ```; salmon quant -i /data2/csijcs/hg38/hg38.transcriptome.index -l A \; -1 ${dir}/${samp}/${samp}_R1_001.fastq.gz \; -2 ${dir}/${samp}/${samp}_R2_001.fastq.gz \; -p 16 -o ${dir}/salmon_quants/${samp}; ```. The output is:; ```; Processing sample PBMC_AML_BM_001; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.11.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /data2/csijcs/hg38/hg38.transcriptome.index }; ### [ libType ] => { A }; ### [ mates1 ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/PBMC_AML_BM_001/PBMC_AML_BM_001_R1_001.fastq.gz }; ### [ mates2 ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/PBMC_AML_BM_001/PBMC_AML_BM_001_R2_001.fastq.gz }; ### [ threads ] => { 16 }; ### [ output ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/PBMC_AML_BM_001 }; Logs will be written to /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/PBMC_AML_BM_001/logs; [2018-07-30 15:41:42.232] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-30 15:41:42.232] [jointLog] [info] parsing read library format; [2018-07-30 15:41:42.232] [jointLog] [info] There is 1 library.; [2018-07-30 15:41:45.840] [jointLog] [info] Loading Quasi index; [2018-07-30 15:41:45.840] [jointLog] [info] Loading 32-bit quasi index; [2018-07-30 15:41:45.840] [stderrLog] [info] Loading Suffix Array ; [2018-07-30 15:42:39.168] [stderrLog] [info] Loading Transcript Info ; [2018-07-30 15:42:53.599] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-30 15:42:56.236] [stderrLog] [info] There were 203027 set bits in the bit array; [2018-07-30 15:42:56.328] [stderrLog] [info] Computing transcript lengths; [2018-07-30 15:42:56.329] [stderrLog] [info] Waiting to finish loading hash; [2018-07,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261
https://github.com/COMBINE-lab/salmon/issues/261:1566,Testability,log,logs,1566,ng-based) v0.11.1 and was installed through bioconda.; The command being run is:. ```; salmon quant -i /data2/csijcs/hg38/hg38.transcriptome.index -l A \; -1 ${dir}/${samp}/${samp}_R1_001.fastq.gz \; -2 ${dir}/${samp}/${samp}_R2_001.fastq.gz \; -p 16 -o ${dir}/salmon_quants/${samp}; ```. The output is:; ```; Processing sample PBMC_AML_BM_001; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.11.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /data2/csijcs/hg38/hg38.transcriptome.index }; ### [ libType ] => { A }; ### [ mates1 ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/PBMC_AML_BM_001/PBMC_AML_BM_001_R1_001.fastq.gz }; ### [ mates2 ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/PBMC_AML_BM_001/PBMC_AML_BM_001_R2_001.fastq.gz }; ### [ threads ] => { 16 }; ### [ output ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/PBMC_AML_BM_001 }; Logs will be written to /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/PBMC_AML_BM_001/logs; [2018-07-30 15:41:42.232] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-30 15:41:42.232] [jointLog] [info] parsing read library format; [2018-07-30 15:41:42.232] [jointLog] [info] There is 1 library.; [2018-07-30 15:41:45.840] [jointLog] [info] Loading Quasi index; [2018-07-30 15:41:45.840] [jointLog] [info] Loading 32-bit quasi index; [2018-07-30 15:41:45.840] [stderrLog] [info] Loading Suffix Array ; [2018-07-30 15:42:39.168] [stderrLog] [info] Loading Transcript Info ; [2018-07-30 15:42:53.599] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-30 15:42:56.236] [stderrLog] [info] There were 203027 set bits in the bit array; [2018-07-30 15:42:56.328] [stderrLog] [info] Computing transcript lengths; [2018-07-30 15:42:56.329] [stderrLog] [info] Waiting to finish loading hash; [2018-07,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261
https://github.com/COMBINE-lab/salmon/issues/262:560,Availability,avail,available,560,"Hi Rob, ; After successfully finishing my DE analysis on gene expression, I want to use the package IsoformSwitchAnalyzeR which as mentioned here [https://github.com/COMBINE-lab/salmon/issues/214](url) must utilize the `--keepDupicates ` argument when indexing the transcriptome with gencode annotations. As I read this only after, I need to re-run my analysis, but would *really* like to use the initial version 10.1 which I have installed as well as which is on the cluster. When I enter the conda environment, I receive an update that the newest version is available and I should update.. is there any way to force salmon to index the transcriptome with the current (10.1) version? . ```; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; salmon v0.10.1; ```; Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/262
https://github.com/COMBINE-lab/salmon/issues/262:739,Availability,avail,available,739,"Hi Rob, ; After successfully finishing my DE analysis on gene expression, I want to use the package IsoformSwitchAnalyzeR which as mentioned here [https://github.com/COMBINE-lab/salmon/issues/214](url) must utilize the `--keepDupicates ` argument when indexing the transcriptome with gencode annotations. As I read this only after, I need to re-run my analysis, but would *really* like to use the initial version 10.1 which I have installed as well as which is on the cluster. When I enter the conda environment, I receive an update that the newest version is available and I should update.. is there any way to force salmon to index the transcriptome with the current (10.1) version? . ```; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; salmon v0.10.1; ```; Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/262
https://github.com/COMBINE-lab/salmon/issues/262:781,Availability,avail,available,781,"Hi Rob, ; After successfully finishing my DE analysis on gene expression, I want to use the package IsoformSwitchAnalyzeR which as mentioned here [https://github.com/COMBINE-lab/salmon/issues/214](url) must utilize the `--keepDupicates ` argument when indexing the transcriptome with gencode annotations. As I read this only after, I need to re-run my analysis, but would *really* like to use the initial version 10.1 which I have installed as well as which is on the cluster. When I enter the conda environment, I receive an update that the newest version is available and I should update.. is there any way to force salmon to index the transcriptome with the current (10.1) version? . ```; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; salmon v0.10.1; ```; Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/262
https://github.com/COMBINE-lab/salmon/issues/262:431,Deployability,install,installed,431,"Hi Rob, ; After successfully finishing my DE analysis on gene expression, I want to use the package IsoformSwitchAnalyzeR which as mentioned here [https://github.com/COMBINE-lab/salmon/issues/214](url) must utilize the `--keepDupicates ` argument when indexing the transcriptome with gencode annotations. As I read this only after, I need to re-run my analysis, but would *really* like to use the initial version 10.1 which I have installed as well as which is on the cluster. When I enter the conda environment, I receive an update that the newest version is available and I should update.. is there any way to force salmon to index the transcriptome with the current (10.1) version? . ```; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; salmon v0.10.1; ```; Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/262
https://github.com/COMBINE-lab/salmon/issues/262:526,Deployability,update,update,526,"Hi Rob, ; After successfully finishing my DE analysis on gene expression, I want to use the package IsoformSwitchAnalyzeR which as mentioned here [https://github.com/COMBINE-lab/salmon/issues/214](url) must utilize the `--keepDupicates ` argument when indexing the transcriptome with gencode annotations. As I read this only after, I need to re-run my analysis, but would *really* like to use the initial version 10.1 which I have installed as well as which is on the cluster. When I enter the conda environment, I receive an update that the newest version is available and I should update.. is there any way to force salmon to index the transcriptome with the current (10.1) version? . ```; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; salmon v0.10.1; ```; Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/262
https://github.com/COMBINE-lab/salmon/issues/262:583,Deployability,update,update,583,"Hi Rob, ; After successfully finishing my DE analysis on gene expression, I want to use the package IsoformSwitchAnalyzeR which as mentioned here [https://github.com/COMBINE-lab/salmon/issues/214](url) must utilize the `--keepDupicates ` argument when indexing the transcriptome with gencode annotations. As I read this only after, I need to re-run my analysis, but would *really* like to use the initial version 10.1 which I have installed as well as which is on the cluster. When I enter the conda environment, I receive an update that the newest version is available and I should update.. is there any way to force salmon to index the transcriptome with the current (10.1) version? . ```; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; salmon v0.10.1; ```; Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/262
https://github.com/COMBINE-lab/salmon/issues/262:832,Deployability,release,releases,832,"Hi Rob, ; After successfully finishing my DE analysis on gene expression, I want to use the package IsoformSwitchAnalyzeR which as mentioned here [https://github.com/COMBINE-lab/salmon/issues/214](url) must utilize the `--keepDupicates ` argument when indexing the transcriptome with gencode annotations. As I read this only after, I need to re-run my analysis, but would *really* like to use the initial version 10.1 which I have installed as well as which is on the cluster. When I enter the conda environment, I receive an update that the newest version is available and I should update.. is there any way to force salmon to index the transcriptome with the current (10.1) version? . ```; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; salmon v0.10.1; ```; Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/262
https://github.com/COMBINE-lab/salmon/issues/262:901,Deployability,upgrade,upgrade,901,"Hi Rob, ; After successfully finishing my DE analysis on gene expression, I want to use the package IsoformSwitchAnalyzeR which as mentioned here [https://github.com/COMBINE-lab/salmon/issues/214](url) must utilize the `--keepDupicates ` argument when indexing the transcriptome with gencode annotations. As I read this only after, I need to re-run my analysis, but would *really* like to use the initial version 10.1 which I have installed as well as which is on the cluster. When I enter the conda environment, I receive an update that the newest version is available and I should update.. is there any way to force salmon to index the transcriptome with the current (10.1) version? . ```; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; salmon v0.10.1; ```; Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/262
https://github.com/COMBINE-lab/salmon/issues/263:644,Availability,Error,Error,644,"Hello,. Compilation bug; Trying to compile latest source code of salmon 0.11.1 (git fetched) on CentOS 7. With:; CXX=/usr/bin/clang++; CC=/usr/bin/clang; /usr/bin/clang --version; clang version 3.4.2 (tags/RELEASE_34/dot2-final); Target: x86_64-redhat-linux-gnu; Thread model: posix. /path/to/cmake/cmake-3.11.4/cmake-3.11.4-Linux-x86_64/bin/cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBoost_NO_BOOST_CMAKE=BOOL:ON -DBOOST_LIBRARYDIR=/path/to/.local/boost/boost-1.67.0/lib -DBOOST_INCLUDEDIR=/path/to/.local/boost/boost-1.67.0/include -DCMAKE_INSTALL_PREFIX=/path/to/.local/salmon/salmon-0.11.1 .. boost 1.67 containing all default 113 libraries. Error:; Many warnings and fatal errors, including; warning: unknown warning option '-Wno-unused-local-typedefs' [-Wunknown-warning-option]; In file included from /path/to/downloads/salmon/src/edlib.cpp:4:; /path/to/downloads/salmon/include/edlib.h:4:10: fatal error: 'cstdint' file not found; #include <cstdint>; ^; warning: unknown warning option '-Wno-unused-local-typedefs' [-Wunknown-warning-option]; In file included from /path/to/downloads/salmon/src/AlevinUtils.cpp:1:; /path/to/downloads/salmon/include/AlevinUtils.hpp:4:10: fatal error: 'algorithm' file not found; #include <algorithm>; warning: unknown warning option '-Wno-unused-local-typedefs' [-Wunknown-warning-option]; In file included from /path/to/downloads/salmon/src/jellyfish/mer_dna.cc:18:; /path/to/downloads/salmon/include/jellyfish/mer_dna.hpp:27:10: fatal error: 'iostream' file not found; #include <iostream>; /path/to/downloads/salmon/include/eigen3/Eigen/Core:66:12: fatal error: 'new'In file included from file /path/to/downloads/salmon/src/LibraryFormat.cpp not :found; 1:; /path/to/downloads/salmon/include/LibraryFormat.hpp: #include <new>4:10:. Best,; juugii",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/263
https://github.com/COMBINE-lab/salmon/issues/263:676,Availability,error,errors,676,"Hello,. Compilation bug; Trying to compile latest source code of salmon 0.11.1 (git fetched) on CentOS 7. With:; CXX=/usr/bin/clang++; CC=/usr/bin/clang; /usr/bin/clang --version; clang version 3.4.2 (tags/RELEASE_34/dot2-final); Target: x86_64-redhat-linux-gnu; Thread model: posix. /path/to/cmake/cmake-3.11.4/cmake-3.11.4-Linux-x86_64/bin/cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBoost_NO_BOOST_CMAKE=BOOL:ON -DBOOST_LIBRARYDIR=/path/to/.local/boost/boost-1.67.0/lib -DBOOST_INCLUDEDIR=/path/to/.local/boost/boost-1.67.0/include -DCMAKE_INSTALL_PREFIX=/path/to/.local/salmon/salmon-0.11.1 .. boost 1.67 containing all default 113 libraries. Error:; Many warnings and fatal errors, including; warning: unknown warning option '-Wno-unused-local-typedefs' [-Wunknown-warning-option]; In file included from /path/to/downloads/salmon/src/edlib.cpp:4:; /path/to/downloads/salmon/include/edlib.h:4:10: fatal error: 'cstdint' file not found; #include <cstdint>; ^; warning: unknown warning option '-Wno-unused-local-typedefs' [-Wunknown-warning-option]; In file included from /path/to/downloads/salmon/src/AlevinUtils.cpp:1:; /path/to/downloads/salmon/include/AlevinUtils.hpp:4:10: fatal error: 'algorithm' file not found; #include <algorithm>; warning: unknown warning option '-Wno-unused-local-typedefs' [-Wunknown-warning-option]; In file included from /path/to/downloads/salmon/src/jellyfish/mer_dna.cc:18:; /path/to/downloads/salmon/include/jellyfish/mer_dna.hpp:27:10: fatal error: 'iostream' file not found; #include <iostream>; /path/to/downloads/salmon/include/eigen3/Eigen/Core:66:12: fatal error: 'new'In file included from file /path/to/downloads/salmon/src/LibraryFormat.cpp not :found; 1:; /path/to/downloads/salmon/include/LibraryFormat.hpp: #include <new>4:10:. Best,; juugii",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/263
https://github.com/COMBINE-lab/salmon/issues/263:815,Availability,down,downloads,815,"Hello,. Compilation bug; Trying to compile latest source code of salmon 0.11.1 (git fetched) on CentOS 7. With:; CXX=/usr/bin/clang++; CC=/usr/bin/clang; /usr/bin/clang --version; clang version 3.4.2 (tags/RELEASE_34/dot2-final); Target: x86_64-redhat-linux-gnu; Thread model: posix. /path/to/cmake/cmake-3.11.4/cmake-3.11.4-Linux-x86_64/bin/cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBoost_NO_BOOST_CMAKE=BOOL:ON -DBOOST_LIBRARYDIR=/path/to/.local/boost/boost-1.67.0/lib -DBOOST_INCLUDEDIR=/path/to/.local/boost/boost-1.67.0/include -DCMAKE_INSTALL_PREFIX=/path/to/.local/salmon/salmon-0.11.1 .. boost 1.67 containing all default 113 libraries. Error:; Many warnings and fatal errors, including; warning: unknown warning option '-Wno-unused-local-typedefs' [-Wunknown-warning-option]; In file included from /path/to/downloads/salmon/src/edlib.cpp:4:; /path/to/downloads/salmon/include/edlib.h:4:10: fatal error: 'cstdint' file not found; #include <cstdint>; ^; warning: unknown warning option '-Wno-unused-local-typedefs' [-Wunknown-warning-option]; In file included from /path/to/downloads/salmon/src/AlevinUtils.cpp:1:; /path/to/downloads/salmon/include/AlevinUtils.hpp:4:10: fatal error: 'algorithm' file not found; #include <algorithm>; warning: unknown warning option '-Wno-unused-local-typedefs' [-Wunknown-warning-option]; In file included from /path/to/downloads/salmon/src/jellyfish/mer_dna.cc:18:; /path/to/downloads/salmon/include/jellyfish/mer_dna.hpp:27:10: fatal error: 'iostream' file not found; #include <iostream>; /path/to/downloads/salmon/include/eigen3/Eigen/Core:66:12: fatal error: 'new'In file included from file /path/to/downloads/salmon/src/LibraryFormat.cpp not :found; 1:; /path/to/downloads/salmon/include/LibraryFormat.hpp: #include <new>4:10:. Best,; juugii",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/263
https://github.com/COMBINE-lab/salmon/issues/263:859,Availability,down,downloads,859,"Hello,. Compilation bug; Trying to compile latest source code of salmon 0.11.1 (git fetched) on CentOS 7. With:; CXX=/usr/bin/clang++; CC=/usr/bin/clang; /usr/bin/clang --version; clang version 3.4.2 (tags/RELEASE_34/dot2-final); Target: x86_64-redhat-linux-gnu; Thread model: posix. /path/to/cmake/cmake-3.11.4/cmake-3.11.4-Linux-x86_64/bin/cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBoost_NO_BOOST_CMAKE=BOOL:ON -DBOOST_LIBRARYDIR=/path/to/.local/boost/boost-1.67.0/lib -DBOOST_INCLUDEDIR=/path/to/.local/boost/boost-1.67.0/include -DCMAKE_INSTALL_PREFIX=/path/to/.local/salmon/salmon-0.11.1 .. boost 1.67 containing all default 113 libraries. Error:; Many warnings and fatal errors, including; warning: unknown warning option '-Wno-unused-local-typedefs' [-Wunknown-warning-option]; In file included from /path/to/downloads/salmon/src/edlib.cpp:4:; /path/to/downloads/salmon/include/edlib.h:4:10: fatal error: 'cstdint' file not found; #include <cstdint>; ^; warning: unknown warning option '-Wno-unused-local-typedefs' [-Wunknown-warning-option]; In file included from /path/to/downloads/salmon/src/AlevinUtils.cpp:1:; /path/to/downloads/salmon/include/AlevinUtils.hpp:4:10: fatal error: 'algorithm' file not found; #include <algorithm>; warning: unknown warning option '-Wno-unused-local-typedefs' [-Wunknown-warning-option]; In file included from /path/to/downloads/salmon/src/jellyfish/mer_dna.cc:18:; /path/to/downloads/salmon/include/jellyfish/mer_dna.hpp:27:10: fatal error: 'iostream' file not found; #include <iostream>; /path/to/downloads/salmon/include/eigen3/Eigen/Core:66:12: fatal error: 'new'In file included from file /path/to/downloads/salmon/src/LibraryFormat.cpp not :found; 1:; /path/to/downloads/salmon/include/LibraryFormat.hpp: #include <new>4:10:. Best,; juugii",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/263
https://github.com/COMBINE-lab/salmon/issues/263:904,Availability,error,error,904,"Hello,. Compilation bug; Trying to compile latest source code of salmon 0.11.1 (git fetched) on CentOS 7. With:; CXX=/usr/bin/clang++; CC=/usr/bin/clang; /usr/bin/clang --version; clang version 3.4.2 (tags/RELEASE_34/dot2-final); Target: x86_64-redhat-linux-gnu; Thread model: posix. /path/to/cmake/cmake-3.11.4/cmake-3.11.4-Linux-x86_64/bin/cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBoost_NO_BOOST_CMAKE=BOOL:ON -DBOOST_LIBRARYDIR=/path/to/.local/boost/boost-1.67.0/lib -DBOOST_INCLUDEDIR=/path/to/.local/boost/boost-1.67.0/include -DCMAKE_INSTALL_PREFIX=/path/to/.local/salmon/salmon-0.11.1 .. boost 1.67 containing all default 113 libraries. Error:; Many warnings and fatal errors, including; warning: unknown warning option '-Wno-unused-local-typedefs' [-Wunknown-warning-option]; In file included from /path/to/downloads/salmon/src/edlib.cpp:4:; /path/to/downloads/salmon/include/edlib.h:4:10: fatal error: 'cstdint' file not found; #include <cstdint>; ^; warning: unknown warning option '-Wno-unused-local-typedefs' [-Wunknown-warning-option]; In file included from /path/to/downloads/salmon/src/AlevinUtils.cpp:1:; /path/to/downloads/salmon/include/AlevinUtils.hpp:4:10: fatal error: 'algorithm' file not found; #include <algorithm>; warning: unknown warning option '-Wno-unused-local-typedefs' [-Wunknown-warning-option]; In file included from /path/to/downloads/salmon/src/jellyfish/mer_dna.cc:18:; /path/to/downloads/salmon/include/jellyfish/mer_dna.hpp:27:10: fatal error: 'iostream' file not found; #include <iostream>; /path/to/downloads/salmon/include/eigen3/Eigen/Core:66:12: fatal error: 'new'In file included from file /path/to/downloads/salmon/src/LibraryFormat.cpp not :found; 1:; /path/to/downloads/salmon/include/LibraryFormat.hpp: #include <new>4:10:. Best,; juugii",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/263
https://github.com/COMBINE-lab/salmon/issues/263:1080,Availability,down,downloads,1080,"Hello,. Compilation bug; Trying to compile latest source code of salmon 0.11.1 (git fetched) on CentOS 7. With:; CXX=/usr/bin/clang++; CC=/usr/bin/clang; /usr/bin/clang --version; clang version 3.4.2 (tags/RELEASE_34/dot2-final); Target: x86_64-redhat-linux-gnu; Thread model: posix. /path/to/cmake/cmake-3.11.4/cmake-3.11.4-Linux-x86_64/bin/cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBoost_NO_BOOST_CMAKE=BOOL:ON -DBOOST_LIBRARYDIR=/path/to/.local/boost/boost-1.67.0/lib -DBOOST_INCLUDEDIR=/path/to/.local/boost/boost-1.67.0/include -DCMAKE_INSTALL_PREFIX=/path/to/.local/salmon/salmon-0.11.1 .. boost 1.67 containing all default 113 libraries. Error:; Many warnings and fatal errors, including; warning: unknown warning option '-Wno-unused-local-typedefs' [-Wunknown-warning-option]; In file included from /path/to/downloads/salmon/src/edlib.cpp:4:; /path/to/downloads/salmon/include/edlib.h:4:10: fatal error: 'cstdint' file not found; #include <cstdint>; ^; warning: unknown warning option '-Wno-unused-local-typedefs' [-Wunknown-warning-option]; In file included from /path/to/downloads/salmon/src/AlevinUtils.cpp:1:; /path/to/downloads/salmon/include/AlevinUtils.hpp:4:10: fatal error: 'algorithm' file not found; #include <algorithm>; warning: unknown warning option '-Wno-unused-local-typedefs' [-Wunknown-warning-option]; In file included from /path/to/downloads/salmon/src/jellyfish/mer_dna.cc:18:; /path/to/downloads/salmon/include/jellyfish/mer_dna.hpp:27:10: fatal error: 'iostream' file not found; #include <iostream>; /path/to/downloads/salmon/include/eigen3/Eigen/Core:66:12: fatal error: 'new'In file included from file /path/to/downloads/salmon/src/LibraryFormat.cpp not :found; 1:; /path/to/downloads/salmon/include/LibraryFormat.hpp: #include <new>4:10:. Best,; juugii",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/263
https://github.com/COMBINE-lab/salmon/issues/263:1130,Availability,down,downloads,1130,"Hello,. Compilation bug; Trying to compile latest source code of salmon 0.11.1 (git fetched) on CentOS 7. With:; CXX=/usr/bin/clang++; CC=/usr/bin/clang; /usr/bin/clang --version; clang version 3.4.2 (tags/RELEASE_34/dot2-final); Target: x86_64-redhat-linux-gnu; Thread model: posix. /path/to/cmake/cmake-3.11.4/cmake-3.11.4-Linux-x86_64/bin/cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBoost_NO_BOOST_CMAKE=BOOL:ON -DBOOST_LIBRARYDIR=/path/to/.local/boost/boost-1.67.0/lib -DBOOST_INCLUDEDIR=/path/to/.local/boost/boost-1.67.0/include -DCMAKE_INSTALL_PREFIX=/path/to/.local/salmon/salmon-0.11.1 .. boost 1.67 containing all default 113 libraries. Error:; Many warnings and fatal errors, including; warning: unknown warning option '-Wno-unused-local-typedefs' [-Wunknown-warning-option]; In file included from /path/to/downloads/salmon/src/edlib.cpp:4:; /path/to/downloads/salmon/include/edlib.h:4:10: fatal error: 'cstdint' file not found; #include <cstdint>; ^; warning: unknown warning option '-Wno-unused-local-typedefs' [-Wunknown-warning-option]; In file included from /path/to/downloads/salmon/src/AlevinUtils.cpp:1:; /path/to/downloads/salmon/include/AlevinUtils.hpp:4:10: fatal error: 'algorithm' file not found; #include <algorithm>; warning: unknown warning option '-Wno-unused-local-typedefs' [-Wunknown-warning-option]; In file included from /path/to/downloads/salmon/src/jellyfish/mer_dna.cc:18:; /path/to/downloads/salmon/include/jellyfish/mer_dna.hpp:27:10: fatal error: 'iostream' file not found; #include <iostream>; /path/to/downloads/salmon/include/eigen3/Eigen/Core:66:12: fatal error: 'new'In file included from file /path/to/downloads/salmon/src/LibraryFormat.cpp not :found; 1:; /path/to/downloads/salmon/include/LibraryFormat.hpp: #include <new>4:10:. Best,; juugii",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/263
https://github.com/COMBINE-lab/salmon/issues/263:1183,Availability,error,error,1183,"Hello,. Compilation bug; Trying to compile latest source code of salmon 0.11.1 (git fetched) on CentOS 7. With:; CXX=/usr/bin/clang++; CC=/usr/bin/clang; /usr/bin/clang --version; clang version 3.4.2 (tags/RELEASE_34/dot2-final); Target: x86_64-redhat-linux-gnu; Thread model: posix. /path/to/cmake/cmake-3.11.4/cmake-3.11.4-Linux-x86_64/bin/cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBoost_NO_BOOST_CMAKE=BOOL:ON -DBOOST_LIBRARYDIR=/path/to/.local/boost/boost-1.67.0/lib -DBOOST_INCLUDEDIR=/path/to/.local/boost/boost-1.67.0/include -DCMAKE_INSTALL_PREFIX=/path/to/.local/salmon/salmon-0.11.1 .. boost 1.67 containing all default 113 libraries. Error:; Many warnings and fatal errors, including; warning: unknown warning option '-Wno-unused-local-typedefs' [-Wunknown-warning-option]; In file included from /path/to/downloads/salmon/src/edlib.cpp:4:; /path/to/downloads/salmon/include/edlib.h:4:10: fatal error: 'cstdint' file not found; #include <cstdint>; ^; warning: unknown warning option '-Wno-unused-local-typedefs' [-Wunknown-warning-option]; In file included from /path/to/downloads/salmon/src/AlevinUtils.cpp:1:; /path/to/downloads/salmon/include/AlevinUtils.hpp:4:10: fatal error: 'algorithm' file not found; #include <algorithm>; warning: unknown warning option '-Wno-unused-local-typedefs' [-Wunknown-warning-option]; In file included from /path/to/downloads/salmon/src/jellyfish/mer_dna.cc:18:; /path/to/downloads/salmon/include/jellyfish/mer_dna.hpp:27:10: fatal error: 'iostream' file not found; #include <iostream>; /path/to/downloads/salmon/include/eigen3/Eigen/Core:66:12: fatal error: 'new'In file included from file /path/to/downloads/salmon/src/LibraryFormat.cpp not :found; 1:; /path/to/downloads/salmon/include/LibraryFormat.hpp: #include <new>4:10:. Best,; juugii",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/263
https://github.com/COMBINE-lab/salmon/issues/263:1360,Availability,down,downloads,1360,"Hello,. Compilation bug; Trying to compile latest source code of salmon 0.11.1 (git fetched) on CentOS 7. With:; CXX=/usr/bin/clang++; CC=/usr/bin/clang; /usr/bin/clang --version; clang version 3.4.2 (tags/RELEASE_34/dot2-final); Target: x86_64-redhat-linux-gnu; Thread model: posix. /path/to/cmake/cmake-3.11.4/cmake-3.11.4-Linux-x86_64/bin/cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBoost_NO_BOOST_CMAKE=BOOL:ON -DBOOST_LIBRARYDIR=/path/to/.local/boost/boost-1.67.0/lib -DBOOST_INCLUDEDIR=/path/to/.local/boost/boost-1.67.0/include -DCMAKE_INSTALL_PREFIX=/path/to/.local/salmon/salmon-0.11.1 .. boost 1.67 containing all default 113 libraries. Error:; Many warnings and fatal errors, including; warning: unknown warning option '-Wno-unused-local-typedefs' [-Wunknown-warning-option]; In file included from /path/to/downloads/salmon/src/edlib.cpp:4:; /path/to/downloads/salmon/include/edlib.h:4:10: fatal error: 'cstdint' file not found; #include <cstdint>; ^; warning: unknown warning option '-Wno-unused-local-typedefs' [-Wunknown-warning-option]; In file included from /path/to/downloads/salmon/src/AlevinUtils.cpp:1:; /path/to/downloads/salmon/include/AlevinUtils.hpp:4:10: fatal error: 'algorithm' file not found; #include <algorithm>; warning: unknown warning option '-Wno-unused-local-typedefs' [-Wunknown-warning-option]; In file included from /path/to/downloads/salmon/src/jellyfish/mer_dna.cc:18:; /path/to/downloads/salmon/include/jellyfish/mer_dna.hpp:27:10: fatal error: 'iostream' file not found; #include <iostream>; /path/to/downloads/salmon/include/eigen3/Eigen/Core:66:12: fatal error: 'new'In file included from file /path/to/downloads/salmon/src/LibraryFormat.cpp not :found; 1:; /path/to/downloads/salmon/include/LibraryFormat.hpp: #include <new>4:10:. Best,; juugii",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/263
https://github.com/COMBINE-lab/salmon/issues/263:1416,Availability,down,downloads,1416,"Hello,. Compilation bug; Trying to compile latest source code of salmon 0.11.1 (git fetched) on CentOS 7. With:; CXX=/usr/bin/clang++; CC=/usr/bin/clang; /usr/bin/clang --version; clang version 3.4.2 (tags/RELEASE_34/dot2-final); Target: x86_64-redhat-linux-gnu; Thread model: posix. /path/to/cmake/cmake-3.11.4/cmake-3.11.4-Linux-x86_64/bin/cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBoost_NO_BOOST_CMAKE=BOOL:ON -DBOOST_LIBRARYDIR=/path/to/.local/boost/boost-1.67.0/lib -DBOOST_INCLUDEDIR=/path/to/.local/boost/boost-1.67.0/include -DCMAKE_INSTALL_PREFIX=/path/to/.local/salmon/salmon-0.11.1 .. boost 1.67 containing all default 113 libraries. Error:; Many warnings and fatal errors, including; warning: unknown warning option '-Wno-unused-local-typedefs' [-Wunknown-warning-option]; In file included from /path/to/downloads/salmon/src/edlib.cpp:4:; /path/to/downloads/salmon/include/edlib.h:4:10: fatal error: 'cstdint' file not found; #include <cstdint>; ^; warning: unknown warning option '-Wno-unused-local-typedefs' [-Wunknown-warning-option]; In file included from /path/to/downloads/salmon/src/AlevinUtils.cpp:1:; /path/to/downloads/salmon/include/AlevinUtils.hpp:4:10: fatal error: 'algorithm' file not found; #include <algorithm>; warning: unknown warning option '-Wno-unused-local-typedefs' [-Wunknown-warning-option]; In file included from /path/to/downloads/salmon/src/jellyfish/mer_dna.cc:18:; /path/to/downloads/salmon/include/jellyfish/mer_dna.hpp:27:10: fatal error: 'iostream' file not found; #include <iostream>; /path/to/downloads/salmon/include/eigen3/Eigen/Core:66:12: fatal error: 'new'In file included from file /path/to/downloads/salmon/src/LibraryFormat.cpp not :found; 1:; /path/to/downloads/salmon/include/LibraryFormat.hpp: #include <new>4:10:. Best,; juugii",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/263
https://github.com/COMBINE-lab/salmon/issues/263:1476,Availability,error,error,1476,"Hello,. Compilation bug; Trying to compile latest source code of salmon 0.11.1 (git fetched) on CentOS 7. With:; CXX=/usr/bin/clang++; CC=/usr/bin/clang; /usr/bin/clang --version; clang version 3.4.2 (tags/RELEASE_34/dot2-final); Target: x86_64-redhat-linux-gnu; Thread model: posix. /path/to/cmake/cmake-3.11.4/cmake-3.11.4-Linux-x86_64/bin/cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBoost_NO_BOOST_CMAKE=BOOL:ON -DBOOST_LIBRARYDIR=/path/to/.local/boost/boost-1.67.0/lib -DBOOST_INCLUDEDIR=/path/to/.local/boost/boost-1.67.0/include -DCMAKE_INSTALL_PREFIX=/path/to/.local/salmon/salmon-0.11.1 .. boost 1.67 containing all default 113 libraries. Error:; Many warnings and fatal errors, including; warning: unknown warning option '-Wno-unused-local-typedefs' [-Wunknown-warning-option]; In file included from /path/to/downloads/salmon/src/edlib.cpp:4:; /path/to/downloads/salmon/include/edlib.h:4:10: fatal error: 'cstdint' file not found; #include <cstdint>; ^; warning: unknown warning option '-Wno-unused-local-typedefs' [-Wunknown-warning-option]; In file included from /path/to/downloads/salmon/src/AlevinUtils.cpp:1:; /path/to/downloads/salmon/include/AlevinUtils.hpp:4:10: fatal error: 'algorithm' file not found; #include <algorithm>; warning: unknown warning option '-Wno-unused-local-typedefs' [-Wunknown-warning-option]; In file included from /path/to/downloads/salmon/src/jellyfish/mer_dna.cc:18:; /path/to/downloads/salmon/include/jellyfish/mer_dna.hpp:27:10: fatal error: 'iostream' file not found; #include <iostream>; /path/to/downloads/salmon/include/eigen3/Eigen/Core:66:12: fatal error: 'new'In file included from file /path/to/downloads/salmon/src/LibraryFormat.cpp not :found; 1:; /path/to/downloads/salmon/include/LibraryFormat.hpp: #include <new>4:10:. Best,; juugii",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/263
https://github.com/COMBINE-lab/salmon/issues/263:1540,Availability,down,downloads,1540,"Hello,. Compilation bug; Trying to compile latest source code of salmon 0.11.1 (git fetched) on CentOS 7. With:; CXX=/usr/bin/clang++; CC=/usr/bin/clang; /usr/bin/clang --version; clang version 3.4.2 (tags/RELEASE_34/dot2-final); Target: x86_64-redhat-linux-gnu; Thread model: posix. /path/to/cmake/cmake-3.11.4/cmake-3.11.4-Linux-x86_64/bin/cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBoost_NO_BOOST_CMAKE=BOOL:ON -DBOOST_LIBRARYDIR=/path/to/.local/boost/boost-1.67.0/lib -DBOOST_INCLUDEDIR=/path/to/.local/boost/boost-1.67.0/include -DCMAKE_INSTALL_PREFIX=/path/to/.local/salmon/salmon-0.11.1 .. boost 1.67 containing all default 113 libraries. Error:; Many warnings and fatal errors, including; warning: unknown warning option '-Wno-unused-local-typedefs' [-Wunknown-warning-option]; In file included from /path/to/downloads/salmon/src/edlib.cpp:4:; /path/to/downloads/salmon/include/edlib.h:4:10: fatal error: 'cstdint' file not found; #include <cstdint>; ^; warning: unknown warning option '-Wno-unused-local-typedefs' [-Wunknown-warning-option]; In file included from /path/to/downloads/salmon/src/AlevinUtils.cpp:1:; /path/to/downloads/salmon/include/AlevinUtils.hpp:4:10: fatal error: 'algorithm' file not found; #include <algorithm>; warning: unknown warning option '-Wno-unused-local-typedefs' [-Wunknown-warning-option]; In file included from /path/to/downloads/salmon/src/jellyfish/mer_dna.cc:18:; /path/to/downloads/salmon/include/jellyfish/mer_dna.hpp:27:10: fatal error: 'iostream' file not found; #include <iostream>; /path/to/downloads/salmon/include/eigen3/Eigen/Core:66:12: fatal error: 'new'In file included from file /path/to/downloads/salmon/src/LibraryFormat.cpp not :found; 1:; /path/to/downloads/salmon/include/LibraryFormat.hpp: #include <new>4:10:. Best,; juugii",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/263
https://github.com/COMBINE-lab/salmon/issues/263:1596,Availability,error,error,1596,"Hello,. Compilation bug; Trying to compile latest source code of salmon 0.11.1 (git fetched) on CentOS 7. With:; CXX=/usr/bin/clang++; CC=/usr/bin/clang; /usr/bin/clang --version; clang version 3.4.2 (tags/RELEASE_34/dot2-final); Target: x86_64-redhat-linux-gnu; Thread model: posix. /path/to/cmake/cmake-3.11.4/cmake-3.11.4-Linux-x86_64/bin/cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBoost_NO_BOOST_CMAKE=BOOL:ON -DBOOST_LIBRARYDIR=/path/to/.local/boost/boost-1.67.0/lib -DBOOST_INCLUDEDIR=/path/to/.local/boost/boost-1.67.0/include -DCMAKE_INSTALL_PREFIX=/path/to/.local/salmon/salmon-0.11.1 .. boost 1.67 containing all default 113 libraries. Error:; Many warnings and fatal errors, including; warning: unknown warning option '-Wno-unused-local-typedefs' [-Wunknown-warning-option]; In file included from /path/to/downloads/salmon/src/edlib.cpp:4:; /path/to/downloads/salmon/include/edlib.h:4:10: fatal error: 'cstdint' file not found; #include <cstdint>; ^; warning: unknown warning option '-Wno-unused-local-typedefs' [-Wunknown-warning-option]; In file included from /path/to/downloads/salmon/src/AlevinUtils.cpp:1:; /path/to/downloads/salmon/include/AlevinUtils.hpp:4:10: fatal error: 'algorithm' file not found; #include <algorithm>; warning: unknown warning option '-Wno-unused-local-typedefs' [-Wunknown-warning-option]; In file included from /path/to/downloads/salmon/src/jellyfish/mer_dna.cc:18:; /path/to/downloads/salmon/include/jellyfish/mer_dna.hpp:27:10: fatal error: 'iostream' file not found; #include <iostream>; /path/to/downloads/salmon/include/eigen3/Eigen/Core:66:12: fatal error: 'new'In file included from file /path/to/downloads/salmon/src/LibraryFormat.cpp not :found; 1:; /path/to/downloads/salmon/include/LibraryFormat.hpp: #include <new>4:10:. Best,; juugii",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/263
https://github.com/COMBINE-lab/salmon/issues/263:1644,Availability,down,downloads,1644,"Hello,. Compilation bug; Trying to compile latest source code of salmon 0.11.1 (git fetched) on CentOS 7. With:; CXX=/usr/bin/clang++; CC=/usr/bin/clang; /usr/bin/clang --version; clang version 3.4.2 (tags/RELEASE_34/dot2-final); Target: x86_64-redhat-linux-gnu; Thread model: posix. /path/to/cmake/cmake-3.11.4/cmake-3.11.4-Linux-x86_64/bin/cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBoost_NO_BOOST_CMAKE=BOOL:ON -DBOOST_LIBRARYDIR=/path/to/.local/boost/boost-1.67.0/lib -DBOOST_INCLUDEDIR=/path/to/.local/boost/boost-1.67.0/include -DCMAKE_INSTALL_PREFIX=/path/to/.local/salmon/salmon-0.11.1 .. boost 1.67 containing all default 113 libraries. Error:; Many warnings and fatal errors, including; warning: unknown warning option '-Wno-unused-local-typedefs' [-Wunknown-warning-option]; In file included from /path/to/downloads/salmon/src/edlib.cpp:4:; /path/to/downloads/salmon/include/edlib.h:4:10: fatal error: 'cstdint' file not found; #include <cstdint>; ^; warning: unknown warning option '-Wno-unused-local-typedefs' [-Wunknown-warning-option]; In file included from /path/to/downloads/salmon/src/AlevinUtils.cpp:1:; /path/to/downloads/salmon/include/AlevinUtils.hpp:4:10: fatal error: 'algorithm' file not found; #include <algorithm>; warning: unknown warning option '-Wno-unused-local-typedefs' [-Wunknown-warning-option]; In file included from /path/to/downloads/salmon/src/jellyfish/mer_dna.cc:18:; /path/to/downloads/salmon/include/jellyfish/mer_dna.hpp:27:10: fatal error: 'iostream' file not found; #include <iostream>; /path/to/downloads/salmon/include/eigen3/Eigen/Core:66:12: fatal error: 'new'In file included from file /path/to/downloads/salmon/src/LibraryFormat.cpp not :found; 1:; /path/to/downloads/salmon/include/LibraryFormat.hpp: #include <new>4:10:. Best,; juugii",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/263
https://github.com/COMBINE-lab/salmon/issues/263:1708,Availability,down,downloads,1708,"Hello,. Compilation bug; Trying to compile latest source code of salmon 0.11.1 (git fetched) on CentOS 7. With:; CXX=/usr/bin/clang++; CC=/usr/bin/clang; /usr/bin/clang --version; clang version 3.4.2 (tags/RELEASE_34/dot2-final); Target: x86_64-redhat-linux-gnu; Thread model: posix. /path/to/cmake/cmake-3.11.4/cmake-3.11.4-Linux-x86_64/bin/cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBoost_NO_BOOST_CMAKE=BOOL:ON -DBOOST_LIBRARYDIR=/path/to/.local/boost/boost-1.67.0/lib -DBOOST_INCLUDEDIR=/path/to/.local/boost/boost-1.67.0/include -DCMAKE_INSTALL_PREFIX=/path/to/.local/salmon/salmon-0.11.1 .. boost 1.67 containing all default 113 libraries. Error:; Many warnings and fatal errors, including; warning: unknown warning option '-Wno-unused-local-typedefs' [-Wunknown-warning-option]; In file included from /path/to/downloads/salmon/src/edlib.cpp:4:; /path/to/downloads/salmon/include/edlib.h:4:10: fatal error: 'cstdint' file not found; #include <cstdint>; ^; warning: unknown warning option '-Wno-unused-local-typedefs' [-Wunknown-warning-option]; In file included from /path/to/downloads/salmon/src/AlevinUtils.cpp:1:; /path/to/downloads/salmon/include/AlevinUtils.hpp:4:10: fatal error: 'algorithm' file not found; #include <algorithm>; warning: unknown warning option '-Wno-unused-local-typedefs' [-Wunknown-warning-option]; In file included from /path/to/downloads/salmon/src/jellyfish/mer_dna.cc:18:; /path/to/downloads/salmon/include/jellyfish/mer_dna.hpp:27:10: fatal error: 'iostream' file not found; #include <iostream>; /path/to/downloads/salmon/include/eigen3/Eigen/Core:66:12: fatal error: 'new'In file included from file /path/to/downloads/salmon/src/LibraryFormat.cpp not :found; 1:; /path/to/downloads/salmon/include/LibraryFormat.hpp: #include <new>4:10:. Best,; juugii",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/263
https://github.com/COMBINE-lab/salmon/issues/264:497,Availability,error,error,497,"Hello,; salmon 0.11.1, on CentOS 7.; Tested with install from precompiled binaires, and from bioconda/conda 4.5.9. (1) salmon -h is fine, but salmon [command] -h takes lots of time, and ends up with; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon. It could be related to any bad local proxy settings. Is there any way to skip the upgrade information lookup as a command-line option ?. (2) segmentation error with alevin; ### salmon (single-cell-based) v0.11.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ threads ] => { 10 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /path/to/sample_S1_L001_R1_001.fastq.gz }; ### [ mates2 ] => { /path/to/sample_S1_L001_R2_001.fastq.gz }; ### [ index ] => { /path/to/salmonIndex }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { tx2gene.tsv }. [2018-08-03 14:31:41.793] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-08-03 14:31:41.810] [alevinLog] [info] Processing barcodes files (if Present) ; processed 109 Million barcodes; segmentation error (core dumped). No any other logs available, programs stopped. Best,; juugii.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/264
https://github.com/COMBINE-lab/salmon/issues/264:1171,Availability,error,error,1171,"Hello,; salmon 0.11.1, on CentOS 7.; Tested with install from precompiled binaires, and from bioconda/conda 4.5.9. (1) salmon -h is fine, but salmon [command] -h takes lots of time, and ends up with; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon. It could be related to any bad local proxy settings. Is there any way to skip the upgrade information lookup as a command-line option ?. (2) segmentation error with alevin; ### salmon (single-cell-based) v0.11.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ threads ] => { 10 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /path/to/sample_S1_L001_R1_001.fastq.gz }; ### [ mates2 ] => { /path/to/sample_S1_L001_R2_001.fastq.gz }; ### [ index ] => { /path/to/salmonIndex }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { tx2gene.tsv }. [2018-08-03 14:31:41.793] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-08-03 14:31:41.810] [alevinLog] [info] Processing barcodes files (if Present) ; processed 109 Million barcodes; segmentation error (core dumped). No any other logs available, programs stopped. Best,; juugii.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/264
https://github.com/COMBINE-lab/salmon/issues/264:1210,Availability,avail,available,1210,"Hello,; salmon 0.11.1, on CentOS 7.; Tested with install from precompiled binaires, and from bioconda/conda 4.5.9. (1) salmon -h is fine, but salmon [command] -h takes lots of time, and ends up with; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon. It could be related to any bad local proxy settings. Is there any way to skip the upgrade information lookup as a command-line option ?. (2) segmentation error with alevin; ### salmon (single-cell-based) v0.11.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ threads ] => { 10 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /path/to/sample_S1_L001_R1_001.fastq.gz }; ### [ mates2 ] => { /path/to/sample_S1_L001_R2_001.fastq.gz }; ### [ index ] => { /path/to/salmonIndex }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { tx2gene.tsv }. [2018-08-03 14:31:41.793] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-08-03 14:31:41.810] [alevinLog] [info] Processing barcodes files (if Present) ; processed 109 Million barcodes; segmentation error (core dumped). No any other logs available, programs stopped. Best,; juugii.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/264
https://github.com/COMBINE-lab/salmon/issues/264:49,Deployability,install,install,49,"Hello,; salmon 0.11.1, on CentOS 7.; Tested with install from precompiled binaires, and from bioconda/conda 4.5.9. (1) salmon -h is fine, but salmon [command] -h takes lots of time, and ends up with; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon. It could be related to any bad local proxy settings. Is there any way to skip the upgrade information lookup as a command-line option ?. (2) segmentation error with alevin; ### salmon (single-cell-based) v0.11.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ threads ] => { 10 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /path/to/sample_S1_L001_R1_001.fastq.gz }; ### [ mates2 ] => { /path/to/sample_S1_L001_R2_001.fastq.gz }; ### [ index ] => { /path/to/salmonIndex }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { tx2gene.tsv }. [2018-08-03 14:31:41.793] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-08-03 14:31:41.810] [alevinLog] [info] Processing barcodes files (if Present) ; processed 109 Million barcodes; segmentation error (core dumped). No any other logs available, programs stopped. Best,; juugii.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/264
https://github.com/COMBINE-lab/salmon/issues/264:232,Deployability,upgrade,upgrade,232,"Hello,; salmon 0.11.1, on CentOS 7.; Tested with install from precompiled binaires, and from bioconda/conda 4.5.9. (1) salmon -h is fine, but salmon [command] -h takes lots of time, and ends up with; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon. It could be related to any bad local proxy settings. Is there any way to skip the upgrade information lookup as a command-line option ?. (2) segmentation error with alevin; ### salmon (single-cell-based) v0.11.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ threads ] => { 10 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /path/to/sample_S1_L001_R1_001.fastq.gz }; ### [ mates2 ] => { /path/to/sample_S1_L001_R2_001.fastq.gz }; ### [ index ] => { /path/to/salmonIndex }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { tx2gene.tsv }. [2018-08-03 14:31:41.793] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-08-03 14:31:41.810] [alevinLog] [info] Processing barcodes files (if Present) ; processed 109 Million barcodes; segmentation error (core dumped). No any other logs available, programs stopped. Best,; juugii.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/264
https://github.com/COMBINE-lab/salmon/issues/264:284,Deployability,upgrade,upgrades,284,"Hello,; salmon 0.11.1, on CentOS 7.; Tested with install from precompiled binaires, and from bioconda/conda 4.5.9. (1) salmon -h is fine, but salmon [command] -h takes lots of time, and ends up with; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon. It could be related to any bad local proxy settings. Is there any way to skip the upgrade information lookup as a command-line option ?. (2) segmentation error with alevin; ### salmon (single-cell-based) v0.11.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ threads ] => { 10 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /path/to/sample_S1_L001_R1_001.fastq.gz }; ### [ mates2 ] => { /path/to/sample_S1_L001_R2_001.fastq.gz }; ### [ index ] => { /path/to/salmonIndex }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { tx2gene.tsv }. [2018-08-03 14:31:41.793] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-08-03 14:31:41.810] [alevinLog] [info] Processing barcodes files (if Present) ; processed 109 Million barcodes; segmentation error (core dumped). No any other logs available, programs stopped. Best,; juugii.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/264
https://github.com/COMBINE-lab/salmon/issues/264:425,Deployability,upgrade,upgrade,425,"Hello,; salmon 0.11.1, on CentOS 7.; Tested with install from precompiled binaires, and from bioconda/conda 4.5.9. (1) salmon -h is fine, but salmon [command] -h takes lots of time, and ends up with; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon. It could be related to any bad local proxy settings. Is there any way to skip the upgrade information lookup as a command-line option ?. (2) segmentation error with alevin; ### salmon (single-cell-based) v0.11.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ threads ] => { 10 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /path/to/sample_S1_L001_R1_001.fastq.gz }; ### [ mates2 ] => { /path/to/sample_S1_L001_R2_001.fastq.gz }; ### [ index ] => { /path/to/salmonIndex }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { tx2gene.tsv }. [2018-08-03 14:31:41.793] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-08-03 14:31:41.810] [alevinLog] [info] Processing barcodes files (if Present) ; processed 109 Million barcodes; segmentation error (core dumped). No any other logs available, programs stopped. Best,; juugii.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/264
https://github.com/COMBINE-lab/salmon/issues/264:37,Testability,Test,Tested,37,"Hello,; salmon 0.11.1, on CentOS 7.; Tested with install from precompiled binaires, and from bioconda/conda 4.5.9. (1) salmon -h is fine, but salmon [command] -h takes lots of time, and ends up with; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon. It could be related to any bad local proxy settings. Is there any way to skip the upgrade information lookup as a command-line option ?. (2) segmentation error with alevin; ### salmon (single-cell-based) v0.11.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ threads ] => { 10 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /path/to/sample_S1_L001_R1_001.fastq.gz }; ### [ mates2 ] => { /path/to/sample_S1_L001_R2_001.fastq.gz }; ### [ index ] => { /path/to/salmonIndex }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { tx2gene.tsv }. [2018-08-03 14:31:41.793] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-08-03 14:31:41.810] [alevinLog] [info] Processing barcodes files (if Present) ; processed 109 Million barcodes; segmentation error (core dumped). No any other logs available, programs stopped. Best,; juugii.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/264
https://github.com/COMBINE-lab/salmon/issues/264:1205,Testability,log,logs,1205,"Hello,; salmon 0.11.1, on CentOS 7.; Tested with install from precompiled binaires, and from bioconda/conda 4.5.9. (1) salmon -h is fine, but salmon [command] -h takes lots of time, and ends up with; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon. It could be related to any bad local proxy settings. Is there any way to skip the upgrade information lookup as a command-line option ?. (2) segmentation error with alevin; ### salmon (single-cell-based) v0.11.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ threads ] => { 10 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /path/to/sample_S1_L001_R1_001.fastq.gz }; ### [ mates2 ] => { /path/to/sample_S1_L001_R2_001.fastq.gz }; ### [ index ] => { /path/to/salmonIndex }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { tx2gene.tsv }. [2018-08-03 14:31:41.793] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-08-03 14:31:41.810] [alevinLog] [info] Processing barcodes files (if Present) ; processed 109 Million barcodes; segmentation error (core dumped). No any other logs available, programs stopped. Best,; juugii.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/264
https://github.com/COMBINE-lab/salmon/issues/265:59,Availability,down,downloaded,59,"Dear salmon authors,. While I was using **salmon (v0.11.0, downloaded executable, on a Ubuntu Linux** server) to process a **single-end RNA-seq library**, it reported the following error message:. ""**[ERROR] Transcript IDs are not in sorted order; please report this bug on GitHub!**"" . Actually I found it reports this error message for over tens of millions of times through greping the log file. And the command line I applied to invoke salmon was like this:. ""**salmon quant -i mySalmonIndexFile(FMD based/transcriptome) -l A -r myLibrary.fastq -p 8**"". It looks like this is something about single-end reads processing, since I arbitrarily picked up another pair-end library, which works prefectly fine with command line ""-1 PE_library_1.fastq -2 PE_library_2.fastq"", however, when I deliberately provide only one end of the library with ""-r PE_library_1/2.fastq"", exactly the same error was recurred immediately. Curiously, salmon could still accomplish the whole procedure and generate the results file with the aformentioned error reported. But I' m worried about its reliability in this situation. I' m wondering if you have any clues about this issue. With many thanks ahead!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/265
https://github.com/COMBINE-lab/salmon/issues/265:181,Availability,error,error,181,"Dear salmon authors,. While I was using **salmon (v0.11.0, downloaded executable, on a Ubuntu Linux** server) to process a **single-end RNA-seq library**, it reported the following error message:. ""**[ERROR] Transcript IDs are not in sorted order; please report this bug on GitHub!**"" . Actually I found it reports this error message for over tens of millions of times through greping the log file. And the command line I applied to invoke salmon was like this:. ""**salmon quant -i mySalmonIndexFile(FMD based/transcriptome) -l A -r myLibrary.fastq -p 8**"". It looks like this is something about single-end reads processing, since I arbitrarily picked up another pair-end library, which works prefectly fine with command line ""-1 PE_library_1.fastq -2 PE_library_2.fastq"", however, when I deliberately provide only one end of the library with ""-r PE_library_1/2.fastq"", exactly the same error was recurred immediately. Curiously, salmon could still accomplish the whole procedure and generate the results file with the aformentioned error reported. But I' m worried about its reliability in this situation. I' m wondering if you have any clues about this issue. With many thanks ahead!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/265
https://github.com/COMBINE-lab/salmon/issues/265:201,Availability,ERROR,ERROR,201,"Dear salmon authors,. While I was using **salmon (v0.11.0, downloaded executable, on a Ubuntu Linux** server) to process a **single-end RNA-seq library**, it reported the following error message:. ""**[ERROR] Transcript IDs are not in sorted order; please report this bug on GitHub!**"" . Actually I found it reports this error message for over tens of millions of times through greping the log file. And the command line I applied to invoke salmon was like this:. ""**salmon quant -i mySalmonIndexFile(FMD based/transcriptome) -l A -r myLibrary.fastq -p 8**"". It looks like this is something about single-end reads processing, since I arbitrarily picked up another pair-end library, which works prefectly fine with command line ""-1 PE_library_1.fastq -2 PE_library_2.fastq"", however, when I deliberately provide only one end of the library with ""-r PE_library_1/2.fastq"", exactly the same error was recurred immediately. Curiously, salmon could still accomplish the whole procedure and generate the results file with the aformentioned error reported. But I' m worried about its reliability in this situation. I' m wondering if you have any clues about this issue. With many thanks ahead!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/265
https://github.com/COMBINE-lab/salmon/issues/265:320,Availability,error,error,320,"Dear salmon authors,. While I was using **salmon (v0.11.0, downloaded executable, on a Ubuntu Linux** server) to process a **single-end RNA-seq library**, it reported the following error message:. ""**[ERROR] Transcript IDs are not in sorted order; please report this bug on GitHub!**"" . Actually I found it reports this error message for over tens of millions of times through greping the log file. And the command line I applied to invoke salmon was like this:. ""**salmon quant -i mySalmonIndexFile(FMD based/transcriptome) -l A -r myLibrary.fastq -p 8**"". It looks like this is something about single-end reads processing, since I arbitrarily picked up another pair-end library, which works prefectly fine with command line ""-1 PE_library_1.fastq -2 PE_library_2.fastq"", however, when I deliberately provide only one end of the library with ""-r PE_library_1/2.fastq"", exactly the same error was recurred immediately. Curiously, salmon could still accomplish the whole procedure and generate the results file with the aformentioned error reported. But I' m worried about its reliability in this situation. I' m wondering if you have any clues about this issue. With many thanks ahead!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/265
https://github.com/COMBINE-lab/salmon/issues/265:887,Availability,error,error,887,"Dear salmon authors,. While I was using **salmon (v0.11.0, downloaded executable, on a Ubuntu Linux** server) to process a **single-end RNA-seq library**, it reported the following error message:. ""**[ERROR] Transcript IDs are not in sorted order; please report this bug on GitHub!**"" . Actually I found it reports this error message for over tens of millions of times through greping the log file. And the command line I applied to invoke salmon was like this:. ""**salmon quant -i mySalmonIndexFile(FMD based/transcriptome) -l A -r myLibrary.fastq -p 8**"". It looks like this is something about single-end reads processing, since I arbitrarily picked up another pair-end library, which works prefectly fine with command line ""-1 PE_library_1.fastq -2 PE_library_2.fastq"", however, when I deliberately provide only one end of the library with ""-r PE_library_1/2.fastq"", exactly the same error was recurred immediately. Curiously, salmon could still accomplish the whole procedure and generate the results file with the aformentioned error reported. But I' m worried about its reliability in this situation. I' m wondering if you have any clues about this issue. With many thanks ahead!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/265
https://github.com/COMBINE-lab/salmon/issues/265:1033,Availability,error,error,1033,"Dear salmon authors,. While I was using **salmon (v0.11.0, downloaded executable, on a Ubuntu Linux** server) to process a **single-end RNA-seq library**, it reported the following error message:. ""**[ERROR] Transcript IDs are not in sorted order; please report this bug on GitHub!**"" . Actually I found it reports this error message for over tens of millions of times through greping the log file. And the command line I applied to invoke salmon was like this:. ""**salmon quant -i mySalmonIndexFile(FMD based/transcriptome) -l A -r myLibrary.fastq -p 8**"". It looks like this is something about single-end reads processing, since I arbitrarily picked up another pair-end library, which works prefectly fine with command line ""-1 PE_library_1.fastq -2 PE_library_2.fastq"", however, when I deliberately provide only one end of the library with ""-r PE_library_1/2.fastq"", exactly the same error was recurred immediately. Curiously, salmon could still accomplish the whole procedure and generate the results file with the aformentioned error reported. But I' m worried about its reliability in this situation. I' m wondering if you have any clues about this issue. With many thanks ahead!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/265
https://github.com/COMBINE-lab/salmon/issues/265:1076,Availability,reliab,reliability,1076,"Dear salmon authors,. While I was using **salmon (v0.11.0, downloaded executable, on a Ubuntu Linux** server) to process a **single-end RNA-seq library**, it reported the following error message:. ""**[ERROR] Transcript IDs are not in sorted order; please report this bug on GitHub!**"" . Actually I found it reports this error message for over tens of millions of times through greping the log file. And the command line I applied to invoke salmon was like this:. ""**salmon quant -i mySalmonIndexFile(FMD based/transcriptome) -l A -r myLibrary.fastq -p 8**"". It looks like this is something about single-end reads processing, since I arbitrarily picked up another pair-end library, which works prefectly fine with command line ""-1 PE_library_1.fastq -2 PE_library_2.fastq"", however, when I deliberately provide only one end of the library with ""-r PE_library_1/2.fastq"", exactly the same error was recurred immediately. Curiously, salmon could still accomplish the whole procedure and generate the results file with the aformentioned error reported. But I' m worried about its reliability in this situation. I' m wondering if you have any clues about this issue. With many thanks ahead!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/265
https://github.com/COMBINE-lab/salmon/issues/265:187,Integrability,message,message,187,"Dear salmon authors,. While I was using **salmon (v0.11.0, downloaded executable, on a Ubuntu Linux** server) to process a **single-end RNA-seq library**, it reported the following error message:. ""**[ERROR] Transcript IDs are not in sorted order; please report this bug on GitHub!**"" . Actually I found it reports this error message for over tens of millions of times through greping the log file. And the command line I applied to invoke salmon was like this:. ""**salmon quant -i mySalmonIndexFile(FMD based/transcriptome) -l A -r myLibrary.fastq -p 8**"". It looks like this is something about single-end reads processing, since I arbitrarily picked up another pair-end library, which works prefectly fine with command line ""-1 PE_library_1.fastq -2 PE_library_2.fastq"", however, when I deliberately provide only one end of the library with ""-r PE_library_1/2.fastq"", exactly the same error was recurred immediately. Curiously, salmon could still accomplish the whole procedure and generate the results file with the aformentioned error reported. But I' m worried about its reliability in this situation. I' m wondering if you have any clues about this issue. With many thanks ahead!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/265
https://github.com/COMBINE-lab/salmon/issues/265:326,Integrability,message,message,326,"Dear salmon authors,. While I was using **salmon (v0.11.0, downloaded executable, on a Ubuntu Linux** server) to process a **single-end RNA-seq library**, it reported the following error message:. ""**[ERROR] Transcript IDs are not in sorted order; please report this bug on GitHub!**"" . Actually I found it reports this error message for over tens of millions of times through greping the log file. And the command line I applied to invoke salmon was like this:. ""**salmon quant -i mySalmonIndexFile(FMD based/transcriptome) -l A -r myLibrary.fastq -p 8**"". It looks like this is something about single-end reads processing, since I arbitrarily picked up another pair-end library, which works prefectly fine with command line ""-1 PE_library_1.fastq -2 PE_library_2.fastq"", however, when I deliberately provide only one end of the library with ""-r PE_library_1/2.fastq"", exactly the same error was recurred immediately. Curiously, salmon could still accomplish the whole procedure and generate the results file with the aformentioned error reported. But I' m worried about its reliability in this situation. I' m wondering if you have any clues about this issue. With many thanks ahead!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/265
https://github.com/COMBINE-lab/salmon/issues/265:389,Testability,log,log,389,"Dear salmon authors,. While I was using **salmon (v0.11.0, downloaded executable, on a Ubuntu Linux** server) to process a **single-end RNA-seq library**, it reported the following error message:. ""**[ERROR] Transcript IDs are not in sorted order; please report this bug on GitHub!**"" . Actually I found it reports this error message for over tens of millions of times through greping the log file. And the command line I applied to invoke salmon was like this:. ""**salmon quant -i mySalmonIndexFile(FMD based/transcriptome) -l A -r myLibrary.fastq -p 8**"". It looks like this is something about single-end reads processing, since I arbitrarily picked up another pair-end library, which works prefectly fine with command line ""-1 PE_library_1.fastq -2 PE_library_2.fastq"", however, when I deliberately provide only one end of the library with ""-r PE_library_1/2.fastq"", exactly the same error was recurred immediately. Curiously, salmon could still accomplish the whole procedure and generate the results file with the aformentioned error reported. But I' m worried about its reliability in this situation. I' m wondering if you have any clues about this issue. With many thanks ahead!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/265
https://github.com/COMBINE-lab/salmon/issues/267:563,Testability,log,logs,563,"Hello salmon team and @k3yavi,; I would like to have an idea of the sequencing saturation in my samples (10x) based on the alevin UMI deduplication default algorithm (that is, the fraction of duplicated reads from unique transcripts that are sequenced at least 2 times). I use this as a quality metrics to evaluate if the sequencing depth is adequate and the amount of information I could be missing. Also, I would like to play with the different deduplication options in alevin and use it as a comparison point.; I have not been able to find informations in the logs that could help me to compute the seq sat, and I am not sure about the terms used in the output. Could you point me in the right direction?; Best wishes.; (salmon 0.11.1, python 3.6.5 with pip, centOS 7)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/267
https://github.com/COMBINE-lab/salmon/issues/268:467,Availability,fault,fault,467,"Hello,; I'm running in to problems trying to run salmon quant. I've installed the latest version 0.11.2 via bioconda, and successfully constructed an index of the C. elegans Wormbase WS265 transcriptome with the following settings:. `salmon index -k 21 -p 24 -t ${txome_reference} -i ${index_path}`. but upon running quant with the following command:. `salmon quant -i ${index_path} -o ${out_prefix} -l IU -1 ${mate1_reads} -2 ${mate2_reads}; `. I get a segmentation fault error midway through running:. ```hits: 122146249, hits per frag: 2.10747; processed 58500001 fragments; hits: 123209453, hits per frag: 2.11344; processed 59000000 fragments; hits: 124280773, hits per frag: 2.10932. /cm/local/apps/slurm/var/spool/job28571481/slurm_script: line 39: 1187 Segmentation fault salmon quant -i ${index_path} -o ${out_prefix} -l IU -1 ${mate1_reads} -2 ${mate2_reads}; ```. If it helps I'm running this on the following SRA data:; > SRR016679; > SRR016680; > SRR016681. This is running on a CentOS release 6.9 cluster. The script in which salmon is being called is being run through SLURM 17.11.7 workload management software. I tried installing a older version of salmon ( 0.9.1 ) through conda and ended up with the same error running that version. ; I've also tried downloading the source and compiling, but am running in to an error upon calling make:. ```libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: error: lzma.h: No such file or directory; cram_io.c: In function 'lzma_mem_deflate':; cram_io.c:1389: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1389: error: (Each undeclared identifier is reported only once; cram_io.c:1389: error: for each function it appears in.); cram_io.c:1389: error: 'LZMA_CHECK_CRC32' undeclared (first use in this function); cram_io.c: In function 'lzma_mem_inflate':; cram_io.c:1399: er",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/268
https://github.com/COMBINE-lab/salmon/issues/268:473,Availability,error,error,473,"Hello,; I'm running in to problems trying to run salmon quant. I've installed the latest version 0.11.2 via bioconda, and successfully constructed an index of the C. elegans Wormbase WS265 transcriptome with the following settings:. `salmon index -k 21 -p 24 -t ${txome_reference} -i ${index_path}`. but upon running quant with the following command:. `salmon quant -i ${index_path} -o ${out_prefix} -l IU -1 ${mate1_reads} -2 ${mate2_reads}; `. I get a segmentation fault error midway through running:. ```hits: 122146249, hits per frag: 2.10747; processed 58500001 fragments; hits: 123209453, hits per frag: 2.11344; processed 59000000 fragments; hits: 124280773, hits per frag: 2.10932. /cm/local/apps/slurm/var/spool/job28571481/slurm_script: line 39: 1187 Segmentation fault salmon quant -i ${index_path} -o ${out_prefix} -l IU -1 ${mate1_reads} -2 ${mate2_reads}; ```. If it helps I'm running this on the following SRA data:; > SRR016679; > SRR016680; > SRR016681. This is running on a CentOS release 6.9 cluster. The script in which salmon is being called is being run through SLURM 17.11.7 workload management software. I tried installing a older version of salmon ( 0.9.1 ) through conda and ended up with the same error running that version. ; I've also tried downloading the source and compiling, but am running in to an error upon calling make:. ```libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: error: lzma.h: No such file or directory; cram_io.c: In function 'lzma_mem_deflate':; cram_io.c:1389: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1389: error: (Each undeclared identifier is reported only once; cram_io.c:1389: error: for each function it appears in.); cram_io.c:1389: error: 'LZMA_CHECK_CRC32' undeclared (first use in this function); cram_io.c: In function 'lzma_mem_inflate':; cram_io.c:1399: er",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/268
https://github.com/COMBINE-lab/salmon/issues/268:774,Availability,fault,fault,774,"Hello,; I'm running in to problems trying to run salmon quant. I've installed the latest version 0.11.2 via bioconda, and successfully constructed an index of the C. elegans Wormbase WS265 transcriptome with the following settings:. `salmon index -k 21 -p 24 -t ${txome_reference} -i ${index_path}`. but upon running quant with the following command:. `salmon quant -i ${index_path} -o ${out_prefix} -l IU -1 ${mate1_reads} -2 ${mate2_reads}; `. I get a segmentation fault error midway through running:. ```hits: 122146249, hits per frag: 2.10747; processed 58500001 fragments; hits: 123209453, hits per frag: 2.11344; processed 59000000 fragments; hits: 124280773, hits per frag: 2.10932. /cm/local/apps/slurm/var/spool/job28571481/slurm_script: line 39: 1187 Segmentation fault salmon quant -i ${index_path} -o ${out_prefix} -l IU -1 ${mate1_reads} -2 ${mate2_reads}; ```. If it helps I'm running this on the following SRA data:; > SRR016679; > SRR016680; > SRR016681. This is running on a CentOS release 6.9 cluster. The script in which salmon is being called is being run through SLURM 17.11.7 workload management software. I tried installing a older version of salmon ( 0.9.1 ) through conda and ended up with the same error running that version. ; I've also tried downloading the source and compiling, but am running in to an error upon calling make:. ```libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: error: lzma.h: No such file or directory; cram_io.c: In function 'lzma_mem_deflate':; cram_io.c:1389: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1389: error: (Each undeclared identifier is reported only once; cram_io.c:1389: error: for each function it appears in.); cram_io.c:1389: error: 'LZMA_CHECK_CRC32' undeclared (first use in this function); cram_io.c: In function 'lzma_mem_inflate':; cram_io.c:1399: er",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/268
https://github.com/COMBINE-lab/salmon/issues/268:1224,Availability,error,error,1224,"lowing settings:. `salmon index -k 21 -p 24 -t ${txome_reference} -i ${index_path}`. but upon running quant with the following command:. `salmon quant -i ${index_path} -o ${out_prefix} -l IU -1 ${mate1_reads} -2 ${mate2_reads}; `. I get a segmentation fault error midway through running:. ```hits: 122146249, hits per frag: 2.10747; processed 58500001 fragments; hits: 123209453, hits per frag: 2.11344; processed 59000000 fragments; hits: 124280773, hits per frag: 2.10932. /cm/local/apps/slurm/var/spool/job28571481/slurm_script: line 39: 1187 Segmentation fault salmon quant -i ${index_path} -o ${out_prefix} -l IU -1 ${mate1_reads} -2 ${mate2_reads}; ```. If it helps I'm running this on the following SRA data:; > SRR016679; > SRR016680; > SRR016681. This is running on a CentOS release 6.9 cluster. The script in which salmon is being called is being run through SLURM 17.11.7 workload management software. I tried installing a older version of salmon ( 0.9.1 ) through conda and ended up with the same error running that version. ; I've also tried downloading the source and compiling, but am running in to an error upon calling make:. ```libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: error: lzma.h: No such file or directory; cram_io.c: In function 'lzma_mem_deflate':; cram_io.c:1389: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1389: error: (Each undeclared identifier is reported only once; cram_io.c:1389: error: for each function it appears in.); cram_io.c:1389: error: 'LZMA_CHECK_CRC32' undeclared (first use in this function); cram_io.c: In function 'lzma_mem_inflate':; cram_io.c:1399: error: 'lzma_stream' undeclared (first use in this function); cram_io.c:1399: error: expected ';' before 'strm'; cram_io.c:1405: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1405: error: 'strm'",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/268
https://github.com/COMBINE-lab/salmon/issues/268:1270,Availability,down,downloading,1270,"upon running quant with the following command:. `salmon quant -i ${index_path} -o ${out_prefix} -l IU -1 ${mate1_reads} -2 ${mate2_reads}; `. I get a segmentation fault error midway through running:. ```hits: 122146249, hits per frag: 2.10747; processed 58500001 fragments; hits: 123209453, hits per frag: 2.11344; processed 59000000 fragments; hits: 124280773, hits per frag: 2.10932. /cm/local/apps/slurm/var/spool/job28571481/slurm_script: line 39: 1187 Segmentation fault salmon quant -i ${index_path} -o ${out_prefix} -l IU -1 ${mate1_reads} -2 ${mate2_reads}; ```. If it helps I'm running this on the following SRA data:; > SRR016679; > SRR016680; > SRR016681. This is running on a CentOS release 6.9 cluster. The script in which salmon is being called is being run through SLURM 17.11.7 workload management software. I tried installing a older version of salmon ( 0.9.1 ) through conda and ended up with the same error running that version. ; I've also tried downloading the source and compiling, but am running in to an error upon calling make:. ```libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: error: lzma.h: No such file or directory; cram_io.c: In function 'lzma_mem_deflate':; cram_io.c:1389: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1389: error: (Each undeclared identifier is reported only once; cram_io.c:1389: error: for each function it appears in.); cram_io.c:1389: error: 'LZMA_CHECK_CRC32' undeclared (first use in this function); cram_io.c: In function 'lzma_mem_inflate':; cram_io.c:1399: error: 'lzma_stream' undeclared (first use in this function); cram_io.c:1399: error: expected ';' before 'strm'; cram_io.c:1405: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1405: error: 'strm' undeclared (first use in this function); cram_io.c:1420: error: 'LZMA_RUN' undeclared (f",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/268
https://github.com/COMBINE-lab/salmon/issues/268:1332,Availability,error,error,1332,"upon running quant with the following command:. `salmon quant -i ${index_path} -o ${out_prefix} -l IU -1 ${mate1_reads} -2 ${mate2_reads}; `. I get a segmentation fault error midway through running:. ```hits: 122146249, hits per frag: 2.10747; processed 58500001 fragments; hits: 123209453, hits per frag: 2.11344; processed 59000000 fragments; hits: 124280773, hits per frag: 2.10932. /cm/local/apps/slurm/var/spool/job28571481/slurm_script: line 39: 1187 Segmentation fault salmon quant -i ${index_path} -o ${out_prefix} -l IU -1 ${mate1_reads} -2 ${mate2_reads}; ```. If it helps I'm running this on the following SRA data:; > SRR016679; > SRR016680; > SRR016681. This is running on a CentOS release 6.9 cluster. The script in which salmon is being called is being run through SLURM 17.11.7 workload management software. I tried installing a older version of salmon ( 0.9.1 ) through conda and ended up with the same error running that version. ; I've also tried downloading the source and compiling, but am running in to an error upon calling make:. ```libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: error: lzma.h: No such file or directory; cram_io.c: In function 'lzma_mem_deflate':; cram_io.c:1389: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1389: error: (Each undeclared identifier is reported only once; cram_io.c:1389: error: for each function it appears in.); cram_io.c:1389: error: 'LZMA_CHECK_CRC32' undeclared (first use in this function); cram_io.c: In function 'lzma_mem_inflate':; cram_io.c:1399: error: 'lzma_stream' undeclared (first use in this function); cram_io.c:1399: error: expected ';' before 'strm'; cram_io.c:1405: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1405: error: 'strm' undeclared (first use in this function); cram_io.c:1420: error: 'LZMA_RUN' undeclared (f",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/268
https://github.com/COMBINE-lab/salmon/issues/268:1564,Availability,error,error,1564,"1 fragments; hits: 123209453, hits per frag: 2.11344; processed 59000000 fragments; hits: 124280773, hits per frag: 2.10932. /cm/local/apps/slurm/var/spool/job28571481/slurm_script: line 39: 1187 Segmentation fault salmon quant -i ${index_path} -o ${out_prefix} -l IU -1 ${mate1_reads} -2 ${mate2_reads}; ```. If it helps I'm running this on the following SRA data:; > SRR016679; > SRR016680; > SRR016681. This is running on a CentOS release 6.9 cluster. The script in which salmon is being called is being run through SLURM 17.11.7 workload management software. I tried installing a older version of salmon ( 0.9.1 ) through conda and ended up with the same error running that version. ; I've also tried downloading the source and compiling, but am running in to an error upon calling make:. ```libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: error: lzma.h: No such file or directory; cram_io.c: In function 'lzma_mem_deflate':; cram_io.c:1389: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1389: error: (Each undeclared identifier is reported only once; cram_io.c:1389: error: for each function it appears in.); cram_io.c:1389: error: 'LZMA_CHECK_CRC32' undeclared (first use in this function); cram_io.c: In function 'lzma_mem_inflate':; cram_io.c:1399: error: 'lzma_stream' undeclared (first use in this function); cram_io.c:1399: error: expected ';' before 'strm'; cram_io.c:1405: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1405: error: 'strm' undeclared (first use in this function); cram_io.c:1420: error: 'LZMA_RUN' undeclared (first use in this function); cram_io.c:1421: error: 'LZMA_STREAM_END' undeclared (first use in this function); cram_io.c:1434: error: 'LZMA_FINISH' undeclared (first use in this function); make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; make[4]: *** [all-rec",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/268
https://github.com/COMBINE-lab/salmon/issues/268:1666,Availability,error,error,1666,"ocal/apps/slurm/var/spool/job28571481/slurm_script: line 39: 1187 Segmentation fault salmon quant -i ${index_path} -o ${out_prefix} -l IU -1 ${mate1_reads} -2 ${mate2_reads}; ```. If it helps I'm running this on the following SRA data:; > SRR016679; > SRR016680; > SRR016681. This is running on a CentOS release 6.9 cluster. The script in which salmon is being called is being run through SLURM 17.11.7 workload management software. I tried installing a older version of salmon ( 0.9.1 ) through conda and ended up with the same error running that version. ; I've also tried downloading the source and compiling, but am running in to an error upon calling make:. ```libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: error: lzma.h: No such file or directory; cram_io.c: In function 'lzma_mem_deflate':; cram_io.c:1389: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1389: error: (Each undeclared identifier is reported only once; cram_io.c:1389: error: for each function it appears in.); cram_io.c:1389: error: 'LZMA_CHECK_CRC32' undeclared (first use in this function); cram_io.c: In function 'lzma_mem_inflate':; cram_io.c:1399: error: 'lzma_stream' undeclared (first use in this function); cram_io.c:1399: error: expected ';' before 'strm'; cram_io.c:1405: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1405: error: 'strm' undeclared (first use in this function); cram_io.c:1420: error: 'LZMA_RUN' undeclared (first use in this function); cram_io.c:1421: error: 'LZMA_STREAM_END' undeclared (first use in this function); cram_io.c:1434: error: 'LZMA_FINISH' undeclared (first use in this function); make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; make[4]: *** [all-recursive] Error 1; make[3]: *** [all] Error 2; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; m",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/268
https://github.com/COMBINE-lab/salmon/issues/268:1740,Availability,error,error,1740,"tion fault salmon quant -i ${index_path} -o ${out_prefix} -l IU -1 ${mate1_reads} -2 ${mate2_reads}; ```. If it helps I'm running this on the following SRA data:; > SRR016679; > SRR016680; > SRR016681. This is running on a CentOS release 6.9 cluster. The script in which salmon is being called is being run through SLURM 17.11.7 workload management software. I tried installing a older version of salmon ( 0.9.1 ) through conda and ended up with the same error running that version. ; I've also tried downloading the source and compiling, but am running in to an error upon calling make:. ```libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: error: lzma.h: No such file or directory; cram_io.c: In function 'lzma_mem_deflate':; cram_io.c:1389: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1389: error: (Each undeclared identifier is reported only once; cram_io.c:1389: error: for each function it appears in.); cram_io.c:1389: error: 'LZMA_CHECK_CRC32' undeclared (first use in this function); cram_io.c: In function 'lzma_mem_inflate':; cram_io.c:1399: error: 'lzma_stream' undeclared (first use in this function); cram_io.c:1399: error: expected ';' before 'strm'; cram_io.c:1405: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1405: error: 'strm' undeclared (first use in this function); cram_io.c:1420: error: 'LZMA_RUN' undeclared (first use in this function); cram_io.c:1421: error: 'LZMA_STREAM_END' undeclared (first use in this function); cram_io.c:1434: error: 'LZMA_FINISH' undeclared (first use in this function); make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; make[4]: *** [all-recursive] Error 1; make[3]: *** [all] Error 2; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; make: *** [all] Erro",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/268
https://github.com/COMBINE-lab/salmon/issues/268:1814,Availability,error,error,1814,"ault salmon quant -i ${index_path} -o ${out_prefix} -l IU -1 ${mate1_reads} -2 ${mate2_reads}; ```. If it helps I'm running this on the following SRA data:; > SRR016679; > SRR016680; > SRR016681. This is running on a CentOS release 6.9 cluster. The script in which salmon is being called is being run through SLURM 17.11.7 workload management software. I tried installing a older version of salmon ( 0.9.1 ) through conda and ended up with the same error running that version. ; I've also tried downloading the source and compiling, but am running in to an error upon calling make:. ```libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: error: lzma.h: No such file or directory; cram_io.c: In function 'lzma_mem_deflate':; cram_io.c:1389: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1389: error: (Each undeclared identifier is reported only once; cram_io.c:1389: error: for each function it appears in.); cram_io.c:1389: error: 'LZMA_CHECK_CRC32' undeclared (first use in this function); cram_io.c: In function 'lzma_mem_inflate':; cram_io.c:1399: error: 'lzma_stream' undeclared (first use in this function); cram_io.c:1399: error: expected ';' before 'strm'; cram_io.c:1405: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1405: error: 'strm' undeclared (first use in this function); cram_io.c:1420: error: 'LZMA_RUN' undeclared (first use in this function); cram_io.c:1421: error: 'LZMA_STREAM_END' undeclared (first use in this function); cram_io.c:1434: error: 'LZMA_FINISH' undeclared (first use in this function); make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; make[4]: *** [all-recursive] Error 1; make[3]: *** [all] Error 2; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; make: *** [all] Error 2```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/268
https://github.com/COMBINE-lab/salmon/issues/268:1872,Availability,error,error,1872,"ault salmon quant -i ${index_path} -o ${out_prefix} -l IU -1 ${mate1_reads} -2 ${mate2_reads}; ```. If it helps I'm running this on the following SRA data:; > SRR016679; > SRR016680; > SRR016681. This is running on a CentOS release 6.9 cluster. The script in which salmon is being called is being run through SLURM 17.11.7 workload management software. I tried installing a older version of salmon ( 0.9.1 ) through conda and ended up with the same error running that version. ; I've also tried downloading the source and compiling, but am running in to an error upon calling make:. ```libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: error: lzma.h: No such file or directory; cram_io.c: In function 'lzma_mem_deflate':; cram_io.c:1389: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1389: error: (Each undeclared identifier is reported only once; cram_io.c:1389: error: for each function it appears in.); cram_io.c:1389: error: 'LZMA_CHECK_CRC32' undeclared (first use in this function); cram_io.c: In function 'lzma_mem_inflate':; cram_io.c:1399: error: 'lzma_stream' undeclared (first use in this function); cram_io.c:1399: error: expected ';' before 'strm'; cram_io.c:1405: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1405: error: 'strm' undeclared (first use in this function); cram_io.c:1420: error: 'LZMA_RUN' undeclared (first use in this function); cram_io.c:1421: error: 'LZMA_STREAM_END' undeclared (first use in this function); cram_io.c:1434: error: 'LZMA_FINISH' undeclared (first use in this function); make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; make[4]: *** [all-recursive] Error 1; make[3]: *** [all] Error 2; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; make: *** [all] Error 2```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/268
https://github.com/COMBINE-lab/salmon/issues/268:1999,Availability,error,error,1999,"ault salmon quant -i ${index_path} -o ${out_prefix} -l IU -1 ${mate1_reads} -2 ${mate2_reads}; ```. If it helps I'm running this on the following SRA data:; > SRR016679; > SRR016680; > SRR016681. This is running on a CentOS release 6.9 cluster. The script in which salmon is being called is being run through SLURM 17.11.7 workload management software. I tried installing a older version of salmon ( 0.9.1 ) through conda and ended up with the same error running that version. ; I've also tried downloading the source and compiling, but am running in to an error upon calling make:. ```libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: error: lzma.h: No such file or directory; cram_io.c: In function 'lzma_mem_deflate':; cram_io.c:1389: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1389: error: (Each undeclared identifier is reported only once; cram_io.c:1389: error: for each function it appears in.); cram_io.c:1389: error: 'LZMA_CHECK_CRC32' undeclared (first use in this function); cram_io.c: In function 'lzma_mem_inflate':; cram_io.c:1399: error: 'lzma_stream' undeclared (first use in this function); cram_io.c:1399: error: expected ';' before 'strm'; cram_io.c:1405: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1405: error: 'strm' undeclared (first use in this function); cram_io.c:1420: error: 'LZMA_RUN' undeclared (first use in this function); cram_io.c:1421: error: 'LZMA_STREAM_END' undeclared (first use in this function); cram_io.c:1434: error: 'LZMA_FINISH' undeclared (first use in this function); make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; make[4]: *** [all-recursive] Error 1; make[3]: *** [all] Error 2; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; make: *** [all] Error 2```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/268
https://github.com/COMBINE-lab/salmon/issues/268:2077,Availability,error,error,2077,"ault salmon quant -i ${index_path} -o ${out_prefix} -l IU -1 ${mate1_reads} -2 ${mate2_reads}; ```. If it helps I'm running this on the following SRA data:; > SRR016679; > SRR016680; > SRR016681. This is running on a CentOS release 6.9 cluster. The script in which salmon is being called is being run through SLURM 17.11.7 workload management software. I tried installing a older version of salmon ( 0.9.1 ) through conda and ended up with the same error running that version. ; I've also tried downloading the source and compiling, but am running in to an error upon calling make:. ```libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: error: lzma.h: No such file or directory; cram_io.c: In function 'lzma_mem_deflate':; cram_io.c:1389: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1389: error: (Each undeclared identifier is reported only once; cram_io.c:1389: error: for each function it appears in.); cram_io.c:1389: error: 'LZMA_CHECK_CRC32' undeclared (first use in this function); cram_io.c: In function 'lzma_mem_inflate':; cram_io.c:1399: error: 'lzma_stream' undeclared (first use in this function); cram_io.c:1399: error: expected ';' before 'strm'; cram_io.c:1405: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1405: error: 'strm' undeclared (first use in this function); cram_io.c:1420: error: 'LZMA_RUN' undeclared (first use in this function); cram_io.c:1421: error: 'LZMA_STREAM_END' undeclared (first use in this function); cram_io.c:1434: error: 'LZMA_FINISH' undeclared (first use in this function); make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; make[4]: *** [all-recursive] Error 1; make[3]: *** [all] Error 2; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; make: *** [all] Error 2```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/268
https://github.com/COMBINE-lab/salmon/issues/268:2128,Availability,error,error,2128,"ault salmon quant -i ${index_path} -o ${out_prefix} -l IU -1 ${mate1_reads} -2 ${mate2_reads}; ```. If it helps I'm running this on the following SRA data:; > SRR016679; > SRR016680; > SRR016681. This is running on a CentOS release 6.9 cluster. The script in which salmon is being called is being run through SLURM 17.11.7 workload management software. I tried installing a older version of salmon ( 0.9.1 ) through conda and ended up with the same error running that version. ; I've also tried downloading the source and compiling, but am running in to an error upon calling make:. ```libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: error: lzma.h: No such file or directory; cram_io.c: In function 'lzma_mem_deflate':; cram_io.c:1389: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1389: error: (Each undeclared identifier is reported only once; cram_io.c:1389: error: for each function it appears in.); cram_io.c:1389: error: 'LZMA_CHECK_CRC32' undeclared (first use in this function); cram_io.c: In function 'lzma_mem_inflate':; cram_io.c:1399: error: 'lzma_stream' undeclared (first use in this function); cram_io.c:1399: error: expected ';' before 'strm'; cram_io.c:1405: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1405: error: 'strm' undeclared (first use in this function); cram_io.c:1420: error: 'LZMA_RUN' undeclared (first use in this function); cram_io.c:1421: error: 'LZMA_STREAM_END' undeclared (first use in this function); cram_io.c:1434: error: 'LZMA_FINISH' undeclared (first use in this function); make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; make[4]: *** [all-recursive] Error 1; make[3]: *** [all] Error 2; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; make: *** [all] Error 2```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/268
https://github.com/COMBINE-lab/salmon/issues/268:2202,Availability,error,error,2202,"ault salmon quant -i ${index_path} -o ${out_prefix} -l IU -1 ${mate1_reads} -2 ${mate2_reads}; ```. If it helps I'm running this on the following SRA data:; > SRR016679; > SRR016680; > SRR016681. This is running on a CentOS release 6.9 cluster. The script in which salmon is being called is being run through SLURM 17.11.7 workload management software. I tried installing a older version of salmon ( 0.9.1 ) through conda and ended up with the same error running that version. ; I've also tried downloading the source and compiling, but am running in to an error upon calling make:. ```libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: error: lzma.h: No such file or directory; cram_io.c: In function 'lzma_mem_deflate':; cram_io.c:1389: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1389: error: (Each undeclared identifier is reported only once; cram_io.c:1389: error: for each function it appears in.); cram_io.c:1389: error: 'LZMA_CHECK_CRC32' undeclared (first use in this function); cram_io.c: In function 'lzma_mem_inflate':; cram_io.c:1399: error: 'lzma_stream' undeclared (first use in this function); cram_io.c:1399: error: expected ';' before 'strm'; cram_io.c:1405: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1405: error: 'strm' undeclared (first use in this function); cram_io.c:1420: error: 'LZMA_RUN' undeclared (first use in this function); cram_io.c:1421: error: 'LZMA_STREAM_END' undeclared (first use in this function); cram_io.c:1434: error: 'LZMA_FINISH' undeclared (first use in this function); make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; make[4]: *** [all-recursive] Error 1; make[3]: *** [all] Error 2; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; make: *** [all] Error 2```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/268
https://github.com/COMBINE-lab/salmon/issues/268:2273,Availability,error,error,2273,"ault salmon quant -i ${index_path} -o ${out_prefix} -l IU -1 ${mate1_reads} -2 ${mate2_reads}; ```. If it helps I'm running this on the following SRA data:; > SRR016679; > SRR016680; > SRR016681. This is running on a CentOS release 6.9 cluster. The script in which salmon is being called is being run through SLURM 17.11.7 workload management software. I tried installing a older version of salmon ( 0.9.1 ) through conda and ended up with the same error running that version. ; I've also tried downloading the source and compiling, but am running in to an error upon calling make:. ```libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: error: lzma.h: No such file or directory; cram_io.c: In function 'lzma_mem_deflate':; cram_io.c:1389: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1389: error: (Each undeclared identifier is reported only once; cram_io.c:1389: error: for each function it appears in.); cram_io.c:1389: error: 'LZMA_CHECK_CRC32' undeclared (first use in this function); cram_io.c: In function 'lzma_mem_inflate':; cram_io.c:1399: error: 'lzma_stream' undeclared (first use in this function); cram_io.c:1399: error: expected ';' before 'strm'; cram_io.c:1405: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1405: error: 'strm' undeclared (first use in this function); cram_io.c:1420: error: 'LZMA_RUN' undeclared (first use in this function); cram_io.c:1421: error: 'LZMA_STREAM_END' undeclared (first use in this function); cram_io.c:1434: error: 'LZMA_FINISH' undeclared (first use in this function); make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; make[4]: *** [all-recursive] Error 1; make[3]: *** [all] Error 2; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; make: *** [all] Error 2```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/268
https://github.com/COMBINE-lab/salmon/issues/268:2348,Availability,error,error,2348,"ault salmon quant -i ${index_path} -o ${out_prefix} -l IU -1 ${mate1_reads} -2 ${mate2_reads}; ```. If it helps I'm running this on the following SRA data:; > SRR016679; > SRR016680; > SRR016681. This is running on a CentOS release 6.9 cluster. The script in which salmon is being called is being run through SLURM 17.11.7 workload management software. I tried installing a older version of salmon ( 0.9.1 ) through conda and ended up with the same error running that version. ; I've also tried downloading the source and compiling, but am running in to an error upon calling make:. ```libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: error: lzma.h: No such file or directory; cram_io.c: In function 'lzma_mem_deflate':; cram_io.c:1389: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1389: error: (Each undeclared identifier is reported only once; cram_io.c:1389: error: for each function it appears in.); cram_io.c:1389: error: 'LZMA_CHECK_CRC32' undeclared (first use in this function); cram_io.c: In function 'lzma_mem_inflate':; cram_io.c:1399: error: 'lzma_stream' undeclared (first use in this function); cram_io.c:1399: error: expected ';' before 'strm'; cram_io.c:1405: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1405: error: 'strm' undeclared (first use in this function); cram_io.c:1420: error: 'LZMA_RUN' undeclared (first use in this function); cram_io.c:1421: error: 'LZMA_STREAM_END' undeclared (first use in this function); cram_io.c:1434: error: 'LZMA_FINISH' undeclared (first use in this function); make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; make[4]: *** [all-recursive] Error 1; make[3]: *** [all] Error 2; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; make: *** [all] Error 2```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/268
https://github.com/COMBINE-lab/salmon/issues/268:2430,Availability,error,error,2430,"ault salmon quant -i ${index_path} -o ${out_prefix} -l IU -1 ${mate1_reads} -2 ${mate2_reads}; ```. If it helps I'm running this on the following SRA data:; > SRR016679; > SRR016680; > SRR016681. This is running on a CentOS release 6.9 cluster. The script in which salmon is being called is being run through SLURM 17.11.7 workload management software. I tried installing a older version of salmon ( 0.9.1 ) through conda and ended up with the same error running that version. ; I've also tried downloading the source and compiling, but am running in to an error upon calling make:. ```libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: error: lzma.h: No such file or directory; cram_io.c: In function 'lzma_mem_deflate':; cram_io.c:1389: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1389: error: (Each undeclared identifier is reported only once; cram_io.c:1389: error: for each function it appears in.); cram_io.c:1389: error: 'LZMA_CHECK_CRC32' undeclared (first use in this function); cram_io.c: In function 'lzma_mem_inflate':; cram_io.c:1399: error: 'lzma_stream' undeclared (first use in this function); cram_io.c:1399: error: expected ';' before 'strm'; cram_io.c:1405: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1405: error: 'strm' undeclared (first use in this function); cram_io.c:1420: error: 'LZMA_RUN' undeclared (first use in this function); cram_io.c:1421: error: 'LZMA_STREAM_END' undeclared (first use in this function); cram_io.c:1434: error: 'LZMA_FINISH' undeclared (first use in this function); make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; make[4]: *** [all-recursive] Error 1; make[3]: *** [all] Error 2; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; make: *** [all] Error 2```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/268
https://github.com/COMBINE-lab/salmon/issues/268:2536,Availability,Error,Error,2536,"ault salmon quant -i ${index_path} -o ${out_prefix} -l IU -1 ${mate1_reads} -2 ${mate2_reads}; ```. If it helps I'm running this on the following SRA data:; > SRR016679; > SRR016680; > SRR016681. This is running on a CentOS release 6.9 cluster. The script in which salmon is being called is being run through SLURM 17.11.7 workload management software. I tried installing a older version of salmon ( 0.9.1 ) through conda and ended up with the same error running that version. ; I've also tried downloading the source and compiling, but am running in to an error upon calling make:. ```libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: error: lzma.h: No such file or directory; cram_io.c: In function 'lzma_mem_deflate':; cram_io.c:1389: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1389: error: (Each undeclared identifier is reported only once; cram_io.c:1389: error: for each function it appears in.); cram_io.c:1389: error: 'LZMA_CHECK_CRC32' undeclared (first use in this function); cram_io.c: In function 'lzma_mem_inflate':; cram_io.c:1399: error: 'lzma_stream' undeclared (first use in this function); cram_io.c:1399: error: expected ';' before 'strm'; cram_io.c:1405: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1405: error: 'strm' undeclared (first use in this function); cram_io.c:1420: error: 'LZMA_RUN' undeclared (first use in this function); cram_io.c:1421: error: 'LZMA_STREAM_END' undeclared (first use in this function); cram_io.c:1434: error: 'LZMA_FINISH' undeclared (first use in this function); make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; make[4]: *** [all-recursive] Error 1; make[3]: *** [all] Error 2; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; make: *** [all] Error 2```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/268
https://github.com/COMBINE-lab/salmon/issues/268:2574,Availability,Error,Error,2574,"ault salmon quant -i ${index_path} -o ${out_prefix} -l IU -1 ${mate1_reads} -2 ${mate2_reads}; ```. If it helps I'm running this on the following SRA data:; > SRR016679; > SRR016680; > SRR016681. This is running on a CentOS release 6.9 cluster. The script in which salmon is being called is being run through SLURM 17.11.7 workload management software. I tried installing a older version of salmon ( 0.9.1 ) through conda and ended up with the same error running that version. ; I've also tried downloading the source and compiling, but am running in to an error upon calling make:. ```libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: error: lzma.h: No such file or directory; cram_io.c: In function 'lzma_mem_deflate':; cram_io.c:1389: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1389: error: (Each undeclared identifier is reported only once; cram_io.c:1389: error: for each function it appears in.); cram_io.c:1389: error: 'LZMA_CHECK_CRC32' undeclared (first use in this function); cram_io.c: In function 'lzma_mem_inflate':; cram_io.c:1399: error: 'lzma_stream' undeclared (first use in this function); cram_io.c:1399: error: expected ';' before 'strm'; cram_io.c:1405: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1405: error: 'strm' undeclared (first use in this function); cram_io.c:1420: error: 'LZMA_RUN' undeclared (first use in this function); cram_io.c:1421: error: 'LZMA_STREAM_END' undeclared (first use in this function); cram_io.c:1434: error: 'LZMA_FINISH' undeclared (first use in this function); make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; make[4]: *** [all-recursive] Error 1; make[3]: *** [all] Error 2; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; make: *** [all] Error 2```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/268
https://github.com/COMBINE-lab/salmon/issues/268:2602,Availability,Error,Error,2602,"ault salmon quant -i ${index_path} -o ${out_prefix} -l IU -1 ${mate1_reads} -2 ${mate2_reads}; ```. If it helps I'm running this on the following SRA data:; > SRR016679; > SRR016680; > SRR016681. This is running on a CentOS release 6.9 cluster. The script in which salmon is being called is being run through SLURM 17.11.7 workload management software. I tried installing a older version of salmon ( 0.9.1 ) through conda and ended up with the same error running that version. ; I've also tried downloading the source and compiling, but am running in to an error upon calling make:. ```libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: error: lzma.h: No such file or directory; cram_io.c: In function 'lzma_mem_deflate':; cram_io.c:1389: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1389: error: (Each undeclared identifier is reported only once; cram_io.c:1389: error: for each function it appears in.); cram_io.c:1389: error: 'LZMA_CHECK_CRC32' undeclared (first use in this function); cram_io.c: In function 'lzma_mem_inflate':; cram_io.c:1399: error: 'lzma_stream' undeclared (first use in this function); cram_io.c:1399: error: expected ';' before 'strm'; cram_io.c:1405: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1405: error: 'strm' undeclared (first use in this function); cram_io.c:1420: error: 'LZMA_RUN' undeclared (first use in this function); cram_io.c:1421: error: 'LZMA_STREAM_END' undeclared (first use in this function); cram_io.c:1434: error: 'LZMA_FINISH' undeclared (first use in this function); make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; make[4]: *** [all-recursive] Error 1; make[3]: *** [all] Error 2; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; make: *** [all] Error 2```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/268
https://github.com/COMBINE-lab/salmon/issues/268:2685,Availability,Error,Error,2685,"ault salmon quant -i ${index_path} -o ${out_prefix} -l IU -1 ${mate1_reads} -2 ${mate2_reads}; ```. If it helps I'm running this on the following SRA data:; > SRR016679; > SRR016680; > SRR016681. This is running on a CentOS release 6.9 cluster. The script in which salmon is being called is being run through SLURM 17.11.7 workload management software. I tried installing a older version of salmon ( 0.9.1 ) through conda and ended up with the same error running that version. ; I've also tried downloading the source and compiling, but am running in to an error upon calling make:. ```libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: error: lzma.h: No such file or directory; cram_io.c: In function 'lzma_mem_deflate':; cram_io.c:1389: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1389: error: (Each undeclared identifier is reported only once; cram_io.c:1389: error: for each function it appears in.); cram_io.c:1389: error: 'LZMA_CHECK_CRC32' undeclared (first use in this function); cram_io.c: In function 'lzma_mem_inflate':; cram_io.c:1399: error: 'lzma_stream' undeclared (first use in this function); cram_io.c:1399: error: expected ';' before 'strm'; cram_io.c:1405: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1405: error: 'strm' undeclared (first use in this function); cram_io.c:1420: error: 'LZMA_RUN' undeclared (first use in this function); cram_io.c:1421: error: 'LZMA_STREAM_END' undeclared (first use in this function); cram_io.c:1434: error: 'LZMA_FINISH' undeclared (first use in this function); make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; make[4]: *** [all-recursive] Error 1; make[3]: *** [all] Error 2; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; make: *** [all] Error 2```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/268
https://github.com/COMBINE-lab/salmon/issues/268:2740,Availability,Error,Error,2740,"ault salmon quant -i ${index_path} -o ${out_prefix} -l IU -1 ${mate1_reads} -2 ${mate2_reads}; ```. If it helps I'm running this on the following SRA data:; > SRR016679; > SRR016680; > SRR016681. This is running on a CentOS release 6.9 cluster. The script in which salmon is being called is being run through SLURM 17.11.7 workload management software. I tried installing a older version of salmon ( 0.9.1 ) through conda and ended up with the same error running that version. ; I've also tried downloading the source and compiling, but am running in to an error upon calling make:. ```libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: error: lzma.h: No such file or directory; cram_io.c: In function 'lzma_mem_deflate':; cram_io.c:1389: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1389: error: (Each undeclared identifier is reported only once; cram_io.c:1389: error: for each function it appears in.); cram_io.c:1389: error: 'LZMA_CHECK_CRC32' undeclared (first use in this function); cram_io.c: In function 'lzma_mem_inflate':; cram_io.c:1399: error: 'lzma_stream' undeclared (first use in this function); cram_io.c:1399: error: expected ';' before 'strm'; cram_io.c:1405: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1405: error: 'strm' undeclared (first use in this function); cram_io.c:1420: error: 'LZMA_RUN' undeclared (first use in this function); cram_io.c:1421: error: 'LZMA_STREAM_END' undeclared (first use in this function); cram_io.c:1434: error: 'LZMA_FINISH' undeclared (first use in this function); make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; make[4]: *** [all-recursive] Error 1; make[3]: *** [all] Error 2; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; make: *** [all] Error 2```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/268
https://github.com/COMBINE-lab/salmon/issues/268:2765,Availability,Error,Error,2765,"ault salmon quant -i ${index_path} -o ${out_prefix} -l IU -1 ${mate1_reads} -2 ${mate2_reads}; ```. If it helps I'm running this on the following SRA data:; > SRR016679; > SRR016680; > SRR016681. This is running on a CentOS release 6.9 cluster. The script in which salmon is being called is being run through SLURM 17.11.7 workload management software. I tried installing a older version of salmon ( 0.9.1 ) through conda and ended up with the same error running that version. ; I've also tried downloading the source and compiling, but am running in to an error upon calling make:. ```libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: error: lzma.h: No such file or directory; cram_io.c: In function 'lzma_mem_deflate':; cram_io.c:1389: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1389: error: (Each undeclared identifier is reported only once; cram_io.c:1389: error: for each function it appears in.); cram_io.c:1389: error: 'LZMA_CHECK_CRC32' undeclared (first use in this function); cram_io.c: In function 'lzma_mem_inflate':; cram_io.c:1399: error: 'lzma_stream' undeclared (first use in this function); cram_io.c:1399: error: expected ';' before 'strm'; cram_io.c:1405: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1405: error: 'strm' undeclared (first use in this function); cram_io.c:1420: error: 'LZMA_RUN' undeclared (first use in this function); cram_io.c:1421: error: 'LZMA_STREAM_END' undeclared (first use in this function); cram_io.c:1434: error: 'LZMA_FINISH' undeclared (first use in this function); make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; make[4]: *** [all-recursive] Error 1; make[3]: *** [all] Error 2; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; make: *** [all] Error 2```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/268
https://github.com/COMBINE-lab/salmon/issues/268:68,Deployability,install,installed,68,"Hello,; I'm running in to problems trying to run salmon quant. I've installed the latest version 0.11.2 via bioconda, and successfully constructed an index of the C. elegans Wormbase WS265 transcriptome with the following settings:. `salmon index -k 21 -p 24 -t ${txome_reference} -i ${index_path}`. but upon running quant with the following command:. `salmon quant -i ${index_path} -o ${out_prefix} -l IU -1 ${mate1_reads} -2 ${mate2_reads}; `. I get a segmentation fault error midway through running:. ```hits: 122146249, hits per frag: 2.10747; processed 58500001 fragments; hits: 123209453, hits per frag: 2.11344; processed 59000000 fragments; hits: 124280773, hits per frag: 2.10932. /cm/local/apps/slurm/var/spool/job28571481/slurm_script: line 39: 1187 Segmentation fault salmon quant -i ${index_path} -o ${out_prefix} -l IU -1 ${mate1_reads} -2 ${mate2_reads}; ```. If it helps I'm running this on the following SRA data:; > SRR016679; > SRR016680; > SRR016681. This is running on a CentOS release 6.9 cluster. The script in which salmon is being called is being run through SLURM 17.11.7 workload management software. I tried installing a older version of salmon ( 0.9.1 ) through conda and ended up with the same error running that version. ; I've also tried downloading the source and compiling, but am running in to an error upon calling make:. ```libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: error: lzma.h: No such file or directory; cram_io.c: In function 'lzma_mem_deflate':; cram_io.c:1389: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1389: error: (Each undeclared identifier is reported only once; cram_io.c:1389: error: for each function it appears in.); cram_io.c:1389: error: 'LZMA_CHECK_CRC32' undeclared (first use in this function); cram_io.c: In function 'lzma_mem_inflate':; cram_io.c:1399: er",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/268
https://github.com/COMBINE-lab/salmon/issues/268:999,Deployability,release,release,999,"Hello,; I'm running in to problems trying to run salmon quant. I've installed the latest version 0.11.2 via bioconda, and successfully constructed an index of the C. elegans Wormbase WS265 transcriptome with the following settings:. `salmon index -k 21 -p 24 -t ${txome_reference} -i ${index_path}`. but upon running quant with the following command:. `salmon quant -i ${index_path} -o ${out_prefix} -l IU -1 ${mate1_reads} -2 ${mate2_reads}; `. I get a segmentation fault error midway through running:. ```hits: 122146249, hits per frag: 2.10747; processed 58500001 fragments; hits: 123209453, hits per frag: 2.11344; processed 59000000 fragments; hits: 124280773, hits per frag: 2.10932. /cm/local/apps/slurm/var/spool/job28571481/slurm_script: line 39: 1187 Segmentation fault salmon quant -i ${index_path} -o ${out_prefix} -l IU -1 ${mate1_reads} -2 ${mate2_reads}; ```. If it helps I'm running this on the following SRA data:; > SRR016679; > SRR016680; > SRR016681. This is running on a CentOS release 6.9 cluster. The script in which salmon is being called is being run through SLURM 17.11.7 workload management software. I tried installing a older version of salmon ( 0.9.1 ) through conda and ended up with the same error running that version. ; I've also tried downloading the source and compiling, but am running in to an error upon calling make:. ```libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: error: lzma.h: No such file or directory; cram_io.c: In function 'lzma_mem_deflate':; cram_io.c:1389: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1389: error: (Each undeclared identifier is reported only once; cram_io.c:1389: error: for each function it appears in.); cram_io.c:1389: error: 'LZMA_CHECK_CRC32' undeclared (first use in this function); cram_io.c: In function 'lzma_mem_inflate':; cram_io.c:1399: er",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/268
https://github.com/COMBINE-lab/salmon/issues/268:1136,Deployability,install,installing,1136,"dex of the C. elegans Wormbase WS265 transcriptome with the following settings:. `salmon index -k 21 -p 24 -t ${txome_reference} -i ${index_path}`. but upon running quant with the following command:. `salmon quant -i ${index_path} -o ${out_prefix} -l IU -1 ${mate1_reads} -2 ${mate2_reads}; `. I get a segmentation fault error midway through running:. ```hits: 122146249, hits per frag: 2.10747; processed 58500001 fragments; hits: 123209453, hits per frag: 2.11344; processed 59000000 fragments; hits: 124280773, hits per frag: 2.10932. /cm/local/apps/slurm/var/spool/job28571481/slurm_script: line 39: 1187 Segmentation fault salmon quant -i ${index_path} -o ${out_prefix} -l IU -1 ${mate1_reads} -2 ${mate2_reads}; ```. If it helps I'm running this on the following SRA data:; > SRR016679; > SRR016680; > SRR016681. This is running on a CentOS release 6.9 cluster. The script in which salmon is being called is being run through SLURM 17.11.7 workload management software. I tried installing a older version of salmon ( 0.9.1 ) through conda and ended up with the same error running that version. ; I've also tried downloading the source and compiling, but am running in to an error upon calling make:. ```libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: error: lzma.h: No such file or directory; cram_io.c: In function 'lzma_mem_deflate':; cram_io.c:1389: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1389: error: (Each undeclared identifier is reported only once; cram_io.c:1389: error: for each function it appears in.); cram_io.c:1389: error: 'LZMA_CHECK_CRC32' undeclared (first use in this function); cram_io.c: In function 'lzma_mem_inflate':; cram_io.c:1399: error: 'lzma_stream' undeclared (first use in this function); cram_io.c:1399: error: expected ';' before 'strm'; cram_io.c:1405: error: 'LZMA_OK' undecla",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/268
https://github.com/COMBINE-lab/salmon/issues/269:206,Integrability,protocol,protocols,206,"I've just started working in a single-cell genomics core facility, **alevin** looks really useful for our 10X runs! ; But I also have a substantial number of samples processed with the CEL-Seq and CEL-Seq2 protocols (also 3'-tag protocols). ; I'm interested in adding support for these protocols to Alevin. 1. Is that something you'd be interested in incorporating?; 2. Any hints on where to start messing around in the code to implement this would be much appreciated!. Cheers,; Pete",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/269
https://github.com/COMBINE-lab/salmon/issues/269:229,Integrability,protocol,protocols,229,"I've just started working in a single-cell genomics core facility, **alevin** looks really useful for our 10X runs! ; But I also have a substantial number of samples processed with the CEL-Seq and CEL-Seq2 protocols (also 3'-tag protocols). ; I'm interested in adding support for these protocols to Alevin. 1. Is that something you'd be interested in incorporating?; 2. Any hints on where to start messing around in the code to implement this would be much appreciated!. Cheers,; Pete",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/269
https://github.com/COMBINE-lab/salmon/issues/269:286,Integrability,protocol,protocols,286,"I've just started working in a single-cell genomics core facility, **alevin** looks really useful for our 10X runs! ; But I also have a substantial number of samples processed with the CEL-Seq and CEL-Seq2 protocols (also 3'-tag protocols). ; I'm interested in adding support for these protocols to Alevin. 1. Is that something you'd be interested in incorporating?; 2. Any hints on where to start messing around in the code to implement this would be much appreciated!. Cheers,; Pete",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/269
https://github.com/COMBINE-lab/salmon/issues/271:382,Availability,error,error,382,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; `salmon`. **Describe the bug**; Running `salmon quant` through my SLURM cluster consistently segfaults. I've attempted runs on `m4.2xlarge` & `m4.8xlarge` worker nodes. `Aug 16 19:38:23 ip-172-31-30-93 kernel: [ 681.083866] salmon[4167]: segfault at 2641a ip 00007fe2fcdc2dca sp 00007fff27128b90 error 4 in libtbb.so.2[7fe2fcda0000+37000]`. **To Reproduce**; * Which version of salmon was used?; * `salmon 0.9.1`; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Installed through conda; * `conda create -y --name salmon@0.9.1 bzip2=1.0.6 salmon=0.9.1 seqtk=1.2`; * Which reference (e.g. transcriptome) was used?; * `ftp://ftp.ensembl.org/pub/release-81/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz`; * Which read files were used?; * `ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR103/009/SRR1039509/SRR1039509_1.fastq.gz`; * Which program options were used?; ```; {; ""salmon_version"": ""0.9.1"",; ""index"": ""./index"",; ""libType"": ""U"",; ""unmatedReads"": ""./single.fastq"",; ""output"": ""./output"",; ""allowOrphansFMD"": [],; ""threads"": ""8"",; ""incompatPrior"": ""1e-20"",; ""biasSpeedSamp"": ""1"",; ""fldMax"": ""1000"",; ""fldMean"": ""200"",; ""fldSD"": ""80"",; ""forgettingFactor"": ""0.65"",; ""maxOcc"": ""200"",; ""maxReadOcc"": ""100"",; ""numBiasSamples"": ""2000000"",; ""numAuxModelSamples"": ""5000000"",; ""numPreAuxModelSamples"": ""1000000"",; ""numGibbsSamples"": ""0"",; ""numBootstraps"": ""0"",; ""vbPrior"": ""0.001"",; ""auxDir"": ""aux_info""; }; ``` . **Expected behavior**; For `salmon quant` to run to completion. **Desktop (please complete the following information):**; ```; Ubuntu Linux; Linux ip-172-31-24-127.ec2.internal 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux; Distributor ID:	Ubuntu; Description:	Ubuntu 14.04.5 LTS; Release:	14.04; Codename:	trusty; ```. **Additional context**; - This SLURM cluster is managed by [Galaxy Cloudman](https://galaxyproject.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271
https://github.com/COMBINE-lab/salmon/issues/271:538,Availability,down,downloaded,538,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; `salmon`. **Describe the bug**; Running `salmon quant` through my SLURM cluster consistently segfaults. I've attempted runs on `m4.2xlarge` & `m4.8xlarge` worker nodes. `Aug 16 19:38:23 ip-172-31-30-93 kernel: [ 681.083866] salmon[4167]: segfault at 2641a ip 00007fe2fcdc2dca sp 00007fff27128b90 error 4 in libtbb.so.2[7fe2fcda0000+37000]`. **To Reproduce**; * Which version of salmon was used?; * `salmon 0.9.1`; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Installed through conda; * `conda create -y --name salmon@0.9.1 bzip2=1.0.6 salmon=0.9.1 seqtk=1.2`; * Which reference (e.g. transcriptome) was used?; * `ftp://ftp.ensembl.org/pub/release-81/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz`; * Which read files were used?; * `ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR103/009/SRR1039509/SRR1039509_1.fastq.gz`; * Which program options were used?; ```; {; ""salmon_version"": ""0.9.1"",; ""index"": ""./index"",; ""libType"": ""U"",; ""unmatedReads"": ""./single.fastq"",; ""output"": ""./output"",; ""allowOrphansFMD"": [],; ""threads"": ""8"",; ""incompatPrior"": ""1e-20"",; ""biasSpeedSamp"": ""1"",; ""fldMax"": ""1000"",; ""fldMean"": ""200"",; ""fldSD"": ""80"",; ""forgettingFactor"": ""0.65"",; ""maxOcc"": ""200"",; ""maxReadOcc"": ""100"",; ""numBiasSamples"": ""2000000"",; ""numAuxModelSamples"": ""5000000"",; ""numPreAuxModelSamples"": ""1000000"",; ""numGibbsSamples"": ""0"",; ""numBootstraps"": ""0"",; ""vbPrior"": ""0.001"",; ""auxDir"": ""aux_info""; }; ``` . **Expected behavior**; For `salmon quant` to run to completion. **Desktop (please complete the following information):**; ```; Ubuntu Linux; Linux ip-172-31-24-127.ec2.internal 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux; Distributor ID:	Ubuntu; Description:	Ubuntu 14.04.5 LTS; Release:	14.04; Codename:	trusty; ```. **Additional context**; - This SLURM cluster is managed by [Galaxy Cloudman](https://galaxyproject.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271
https://github.com/COMBINE-lab/salmon/issues/271:2675,Availability,avail,avail,2675,"information):**; ```; Ubuntu Linux; Linux ip-172-31-24-127.ec2.internal 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux; Distributor ID:	Ubuntu; Description:	Ubuntu 14.04.5 LTS; Release:	14.04; Codename:	trusty; ```. **Additional context**; - This SLURM cluster is managed by [Galaxy Cloudman](https://galaxyproject.org/cloudman/), and my installation of Salmon is currently constrained to a conda install. . - I've fiddled with many different CPU/Memory requirements for each of these `salmon` jobs I've run and have only had successful runs while using a single thread on a single node (`--ntasks=1 --nodes=1`), but even then there were segfaults observed intermittently. - The current Galaxy Tool wrapper for Salmon runs `salmon index ... && salmon quant ...` for every input fastq by default, but I've also generated and pointed `salmon quant` to a common index and have observed the same segfault behavior. I've also tried out the `--perfectHash` flag in both of these scenarios to no avail. - I have the ability to specify/wrap another version of Salmon to be compatible with Galaxy if the thought is that a more recent release could help. - I'm happy to provide any context past this that could help solve the issue!. - Also, I lack any biological insight so I'll ping my colleague @gmnelson for backup in that space. **Terminal Output**; <details>; <summary>Example Output</summary>; <br>. ```; Fatal error: Exit code 139 (); Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [2018-08-16 19:42:27.806] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000434970.2], had length less than the k-mer length of 31 (perhaps after poly-A clipping)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271
https://github.com/COMBINE-lab/salmon/issues/271:2956,Availability,ping,ping,2956,"y [Galaxy Cloudman](https://galaxyproject.org/cloudman/), and my installation of Salmon is currently constrained to a conda install. . - I've fiddled with many different CPU/Memory requirements for each of these `salmon` jobs I've run and have only had successful runs while using a single thread on a single node (`--ntasks=1 --nodes=1`), but even then there were segfaults observed intermittently. - The current Galaxy Tool wrapper for Salmon runs `salmon index ... && salmon quant ...` for every input fastq by default, but I've also generated and pointed `salmon quant` to a common index and have observed the same segfault behavior. I've also tried out the `--perfectHash` flag in both of these scenarios to no avail. - I have the ability to specify/wrap another version of Salmon to be compatible with Galaxy if the thought is that a more recent release could help. - I'm happy to provide any context past this that could help solve the issue!. - Also, I lack any biological insight so I'll ping my colleague @gmnelson for backup in that space. **Terminal Output**; <details>; <summary>Example Output</summary>; <br>. ```; Fatal error: Exit code 139 (); Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [2018-08-16 19:42:27.806] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000434970.2], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000448914.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000415118.1], had length less than the k-mer length of 31 (perhaps after poly-A cli",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271
https://github.com/COMBINE-lab/salmon/issues/271:3094,Availability,error,error,3094,"CPU/Memory requirements for each of these `salmon` jobs I've run and have only had successful runs while using a single thread on a single node (`--ntasks=1 --nodes=1`), but even then there were segfaults observed intermittently. - The current Galaxy Tool wrapper for Salmon runs `salmon index ... && salmon quant ...` for every input fastq by default, but I've also generated and pointed `salmon quant` to a common index and have observed the same segfault behavior. I've also tried out the `--perfectHash` flag in both of these scenarios to no avail. - I have the ability to specify/wrap another version of Salmon to be compatible with Galaxy if the thought is that a more recent release could help. - I'm happy to provide any context past this that could help solve the issue!. - Also, I lack any biological insight so I'll ping my colleague @gmnelson for backup in that space. **Terminal Output**; <details>; <summary>Example Output</summary>; <br>. ```; Fatal error: Exit code 139 (); Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [2018-08-16 19:42:27.806] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000434970.2], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000448914.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000415118.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000632684.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping);",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271
https://github.com/COMBINE-lab/salmon/issues/271:3166,Availability,avail,available,3166,"CPU/Memory requirements for each of these `salmon` jobs I've run and have only had successful runs while using a single thread on a single node (`--ntasks=1 --nodes=1`), but even then there were segfaults observed intermittently. - The current Galaxy Tool wrapper for Salmon runs `salmon index ... && salmon quant ...` for every input fastq by default, but I've also generated and pointed `salmon quant` to a common index and have observed the same segfault behavior. I've also tried out the `--perfectHash` flag in both of these scenarios to no avail. - I have the ability to specify/wrap another version of Salmon to be compatible with Galaxy if the thought is that a more recent release could help. - I'm happy to provide any context past this that could help solve the issue!. - Also, I lack any biological insight so I'll ping my colleague @gmnelson for backup in that space. **Terminal Output**; <details>; <summary>Example Output</summary>; <br>. ```; Fatal error: Exit code 139 (); Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [2018-08-16 19:42:27.806] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000434970.2], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000448914.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000415118.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000632684.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping);",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271
https://github.com/COMBINE-lab/salmon/issues/271:3208,Availability,avail,available,3208,"y had successful runs while using a single thread on a single node (`--ntasks=1 --nodes=1`), but even then there were segfaults observed intermittently. - The current Galaxy Tool wrapper for Salmon runs `salmon index ... && salmon quant ...` for every input fastq by default, but I've also generated and pointed `salmon quant` to a common index and have observed the same segfault behavior. I've also tried out the `--perfectHash` flag in both of these scenarios to no avail. - I have the ability to specify/wrap another version of Salmon to be compatible with Galaxy if the thought is that a more recent release could help. - I'm happy to provide any context past this that could help solve the issue!. - Also, I lack any biological insight so I'll ping my colleague @gmnelson for backup in that space. **Terminal Output**; <details>; <summary>Example Output</summary>; <br>. ```; Fatal error: Exit code 139 (); Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [2018-08-16 19:42:27.806] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000434970.2], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000448914.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000415118.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000632684.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST000006",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271
https://github.com/COMBINE-lab/salmon/issues/271:22868,Availability,avail,available,22868," positions. processed 263000000 positions. processed 264000000 positions. processed 265000000 positions. processed 266000000 positions. processed 267000000 positions. processed 268000000 positions. processed 269000000 positions. processed 270000000 positions. processed 271000000 positions. processed 272000000 positions. processed 273000000 positions. processed 274000000 positions. processed 275000000 positions. processed 276000000 positions. processed 277000000 positions. processed 278000000 positions. processed 279000000 positions. processed 280000000 positions. processed 281000000 positions. processed 282000000 positions. processed 283000000 positions. processed 284000000 positions. processed 285000000 positions. processed 286000000 positions. processed 287000000 positions. processed 288000000 positions. processed 289000000 positions; khash had 109134690 keys; saving hash to disk . . . done; Elapsed time: 7.61947s; [2018-08-16 19:47:14.359] [jLog] [info] done building index; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ./index }; ### [ libType ] => { U }; ### [ unmatedReads ] => { ./single.fastq }; ### [ output ] => { ./output }; ### [ allowOrphansFMD ] => { }; ### [ threads ] => { 16 }; ### [ incompatPrior ] => { 1e-20 }; ### [ biasSpeedSamp ] => { 1 }; ### [ fldMax ] => { 1000 }; ### [ fldMean ] => { 200 }; ### [ fldSD ] => { 80 }; ### [ forgettingFactor ] => { 0.65 }; ### [ maxOcc ] => { 200 }; ### [ maxReadOcc ] => { 100 }; ### [ numBiasSamples ] => { 2000000 }; ### [ numAuxModelSamples ] => { 5000000 }; ### [ numPreAuxModelSamples ] => { 1000000 }; ### [ numGibbsSamples ] => { 0 }; ### [ numBootstraps ] => { 0 }; ### [ vbPrior ] => { 0.001 }; Logs ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271
https://github.com/COMBINE-lab/salmon/issues/271:22910,Availability,avail,available,22910,"ssed 265000000 positions. processed 266000000 positions. processed 267000000 positions. processed 268000000 positions. processed 269000000 positions. processed 270000000 positions. processed 271000000 positions. processed 272000000 positions. processed 273000000 positions. processed 274000000 positions. processed 275000000 positions. processed 276000000 positions. processed 277000000 positions. processed 278000000 positions. processed 279000000 positions. processed 280000000 positions. processed 281000000 positions. processed 282000000 positions. processed 283000000 positions. processed 284000000 positions. processed 285000000 positions. processed 286000000 positions. processed 287000000 positions. processed 288000000 positions. processed 289000000 positions; khash had 109134690 keys; saving hash to disk . . . done; Elapsed time: 7.61947s; [2018-08-16 19:47:14.359] [jLog] [info] done building index; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ./index }; ### [ libType ] => { U }; ### [ unmatedReads ] => { ./single.fastq }; ### [ output ] => { ./output }; ### [ allowOrphansFMD ] => { }; ### [ threads ] => { 16 }; ### [ incompatPrior ] => { 1e-20 }; ### [ biasSpeedSamp ] => { 1 }; ### [ fldMax ] => { 1000 }; ### [ fldMean ] => { 200 }; ### [ fldSD ] => { 80 }; ### [ forgettingFactor ] => { 0.65 }; ### [ maxOcc ] => { 200 }; ### [ maxReadOcc ] => { 100 }; ### [ numBiasSamples ] => { 2000000 }; ### [ numAuxModelSamples ] => { 5000000 }; ### [ numPreAuxModelSamples ] => { 1000000 }; ### [ numGibbsSamples ] => { 0 }; ### [ numBootstraps ] => { 0 }; ### [ vbPrior ] => { 0.001 }; Logs will be written to ./output/logs; [2018-08-16 19:47:14.418] [jointLog] [info] ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271
https://github.com/COMBINE-lab/salmon/issues/271:29038,Availability,fault,fault,29038,"0m; hits: 66225532; hits per frag: 4.42625[A. [32mprocessed[31m 15500006 [32mfragments[0m; hits: 68431333; hits per frag: 4.42688[A. [32mprocessed[31m 16000002 [32mfragments[0m; hits: 70643320; hits per frag: 4.44249[A. [32mprocessed[31m 16500002 [32mfragments[0m; hits: 72850859; hits per frag: 4.42435[A. [32mprocessed[31m 17500001 [32mfragments[0m; hits: 77275281; hits per frag: 4.43251[A. [32mprocessed[31m 18000005 [32mfragments[0m; hits: 79494713; hits per frag: 4.433[A. [32mprocessed[31m 18500000 [32mfragments[0m; hits: 81710387; hits per frag: 4.43219[A. [32mprocessed[31m 19000001 [32mfragments[0m; hits: 83924289; hits per frag: 4.42804[A. [32mprocessed[31m 19500000 [32mfragments[0m; hits: 86134985; hits per frag: 4.43392[A. [32mprocessed[31m 20000000 [32mfragments[0m; hits: 88347210; hits per frag: 4.42895[A. [32mprocessed[31m 20500003 [32mfragments[0m; hits: 90559781; hits per frag: 4.43081[A. [32mprocessed[31m 21000000 [32mfragments[0m; hits: 92771131; hits per frag: 4.42429. [2018-08-16 19:47:49.632] [jointLog] [info] Computed 260771 rich equivalence classes for further processing; [2018-08-16 19:47:49.632] [jointLog] [info] Counted 19352476 total reads in the equivalence classes ; [2018-08-16 19:47:49.646] [jointLog] [info] Mapping rate = 91.4764%. [2018-08-16 19:47:49.646] [jointLog] [info] finished quantifyLibrary(); [2018-08-16 19:47:49.649] [jointLog] [info] Starting optimizer; /mnt/galaxy/tmp/job_working_directory/000/900/tool_script.sh: line 50: 5733 Segmentation fault (core dumped) salmon quant --index ./index --libType U --unmatedReads ./single.fastq --output ./output --allowOrphans --threads ""${GALAXY_SLOTS:-4}"" --incompatPrior 1e-20 --biasSpeedSamp 1 --fldMax 1000 --fldMean 200 --fldSD 80 --forgettingFactor 0.65 --maxOcc 200 --maxReadOcc 100 --numBiasSamples 2000000 --numAuxModelSamples 5000000 --numPreAuxModelSamples 1000000 --numGibbsSamples 0 --numBootstraps 0 --vbPrior 0.001; ```<details>",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271
https://github.com/COMBINE-lab/salmon/issues/271:517,Deployability,install,installed,517,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; `salmon`. **Describe the bug**; Running `salmon quant` through my SLURM cluster consistently segfaults. I've attempted runs on `m4.2xlarge` & `m4.8xlarge` worker nodes. `Aug 16 19:38:23 ip-172-31-30-93 kernel: [ 681.083866] salmon[4167]: segfault at 2641a ip 00007fe2fcdc2dca sp 00007fff27128b90 error 4 in libtbb.so.2[7fe2fcda0000+37000]`. **To Reproduce**; * Which version of salmon was used?; * `salmon 0.9.1`; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Installed through conda; * `conda create -y --name salmon@0.9.1 bzip2=1.0.6 salmon=0.9.1 seqtk=1.2`; * Which reference (e.g. transcriptome) was used?; * `ftp://ftp.ensembl.org/pub/release-81/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz`; * Which read files were used?; * `ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR103/009/SRR1039509/SRR1039509_1.fastq.gz`; * Which program options were used?; ```; {; ""salmon_version"": ""0.9.1"",; ""index"": ""./index"",; ""libType"": ""U"",; ""unmatedReads"": ""./single.fastq"",; ""output"": ""./output"",; ""allowOrphansFMD"": [],; ""threads"": ""8"",; ""incompatPrior"": ""1e-20"",; ""biasSpeedSamp"": ""1"",; ""fldMax"": ""1000"",; ""fldMean"": ""200"",; ""fldSD"": ""80"",; ""forgettingFactor"": ""0.65"",; ""maxOcc"": ""200"",; ""maxReadOcc"": ""100"",; ""numBiasSamples"": ""2000000"",; ""numAuxModelSamples"": ""5000000"",; ""numPreAuxModelSamples"": ""1000000"",; ""numGibbsSamples"": ""0"",; ""numBootstraps"": ""0"",; ""vbPrior"": ""0.001"",; ""auxDir"": ""aux_info""; }; ``` . **Expected behavior**; For `salmon quant` to run to completion. **Desktop (please complete the following information):**; ```; Ubuntu Linux; Linux ip-172-31-24-127.ec2.internal 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux; Distributor ID:	Ubuntu; Description:	Ubuntu 14.04.5 LTS; Release:	14.04; Codename:	trusty; ```. **Additional context**; - This SLURM cluster is managed by [Galaxy Cloudman](https://galaxyproject.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271
https://github.com/COMBINE-lab/salmon/issues/271:583,Deployability,Install,Installed,583,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; `salmon`. **Describe the bug**; Running `salmon quant` through my SLURM cluster consistently segfaults. I've attempted runs on `m4.2xlarge` & `m4.8xlarge` worker nodes. `Aug 16 19:38:23 ip-172-31-30-93 kernel: [ 681.083866] salmon[4167]: segfault at 2641a ip 00007fe2fcdc2dca sp 00007fff27128b90 error 4 in libtbb.so.2[7fe2fcda0000+37000]`. **To Reproduce**; * Which version of salmon was used?; * `salmon 0.9.1`; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Installed through conda; * `conda create -y --name salmon@0.9.1 bzip2=1.0.6 salmon=0.9.1 seqtk=1.2`; * Which reference (e.g. transcriptome) was used?; * `ftp://ftp.ensembl.org/pub/release-81/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz`; * Which read files were used?; * `ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR103/009/SRR1039509/SRR1039509_1.fastq.gz`; * Which program options were used?; ```; {; ""salmon_version"": ""0.9.1"",; ""index"": ""./index"",; ""libType"": ""U"",; ""unmatedReads"": ""./single.fastq"",; ""output"": ""./output"",; ""allowOrphansFMD"": [],; ""threads"": ""8"",; ""incompatPrior"": ""1e-20"",; ""biasSpeedSamp"": ""1"",; ""fldMax"": ""1000"",; ""fldMean"": ""200"",; ""fldSD"": ""80"",; ""forgettingFactor"": ""0.65"",; ""maxOcc"": ""200"",; ""maxReadOcc"": ""100"",; ""numBiasSamples"": ""2000000"",; ""numAuxModelSamples"": ""5000000"",; ""numPreAuxModelSamples"": ""1000000"",; ""numGibbsSamples"": ""0"",; ""numBootstraps"": ""0"",; ""vbPrior"": ""0.001"",; ""auxDir"": ""aux_info""; }; ``` . **Expected behavior**; For `salmon quant` to run to completion. **Desktop (please complete the following information):**; ```; Ubuntu Linux; Linux ip-172-31-24-127.ec2.internal 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux; Distributor ID:	Ubuntu; Description:	Ubuntu 14.04.5 LTS; Release:	14.04; Codename:	trusty; ```. **Additional context**; - This SLURM cluster is managed by [Galaxy Cloudman](https://galaxyproject.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271
https://github.com/COMBINE-lab/salmon/issues/271:763,Deployability,release,release-,763,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; `salmon`. **Describe the bug**; Running `salmon quant` through my SLURM cluster consistently segfaults. I've attempted runs on `m4.2xlarge` & `m4.8xlarge` worker nodes. `Aug 16 19:38:23 ip-172-31-30-93 kernel: [ 681.083866] salmon[4167]: segfault at 2641a ip 00007fe2fcdc2dca sp 00007fff27128b90 error 4 in libtbb.so.2[7fe2fcda0000+37000]`. **To Reproduce**; * Which version of salmon was used?; * `salmon 0.9.1`; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Installed through conda; * `conda create -y --name salmon@0.9.1 bzip2=1.0.6 salmon=0.9.1 seqtk=1.2`; * Which reference (e.g. transcriptome) was used?; * `ftp://ftp.ensembl.org/pub/release-81/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz`; * Which read files were used?; * `ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR103/009/SRR1039509/SRR1039509_1.fastq.gz`; * Which program options were used?; ```; {; ""salmon_version"": ""0.9.1"",; ""index"": ""./index"",; ""libType"": ""U"",; ""unmatedReads"": ""./single.fastq"",; ""output"": ""./output"",; ""allowOrphansFMD"": [],; ""threads"": ""8"",; ""incompatPrior"": ""1e-20"",; ""biasSpeedSamp"": ""1"",; ""fldMax"": ""1000"",; ""fldMean"": ""200"",; ""fldSD"": ""80"",; ""forgettingFactor"": ""0.65"",; ""maxOcc"": ""200"",; ""maxReadOcc"": ""100"",; ""numBiasSamples"": ""2000000"",; ""numAuxModelSamples"": ""5000000"",; ""numPreAuxModelSamples"": ""1000000"",; ""numGibbsSamples"": ""0"",; ""numBootstraps"": ""0"",; ""vbPrior"": ""0.001"",; ""auxDir"": ""aux_info""; }; ``` . **Expected behavior**; For `salmon quant` to run to completion. **Desktop (please complete the following information):**; ```; Ubuntu Linux; Linux ip-172-31-24-127.ec2.internal 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux; Distributor ID:	Ubuntu; Description:	Ubuntu 14.04.5 LTS; Release:	14.04; Codename:	trusty; ```. **Additional context**; - This SLURM cluster is managed by [Galaxy Cloudman](https://galaxyproject.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271
https://github.com/COMBINE-lab/salmon/issues/271:1863,Deployability,Release,Release,1863," * `ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR103/009/SRR1039509/SRR1039509_1.fastq.gz`; * Which program options were used?; ```; {; ""salmon_version"": ""0.9.1"",; ""index"": ""./index"",; ""libType"": ""U"",; ""unmatedReads"": ""./single.fastq"",; ""output"": ""./output"",; ""allowOrphansFMD"": [],; ""threads"": ""8"",; ""incompatPrior"": ""1e-20"",; ""biasSpeedSamp"": ""1"",; ""fldMax"": ""1000"",; ""fldMean"": ""200"",; ""fldSD"": ""80"",; ""forgettingFactor"": ""0.65"",; ""maxOcc"": ""200"",; ""maxReadOcc"": ""100"",; ""numBiasSamples"": ""2000000"",; ""numAuxModelSamples"": ""5000000"",; ""numPreAuxModelSamples"": ""1000000"",; ""numGibbsSamples"": ""0"",; ""numBootstraps"": ""0"",; ""vbPrior"": ""0.001"",; ""auxDir"": ""aux_info""; }; ``` . **Expected behavior**; For `salmon quant` to run to completion. **Desktop (please complete the following information):**; ```; Ubuntu Linux; Linux ip-172-31-24-127.ec2.internal 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux; Distributor ID:	Ubuntu; Description:	Ubuntu 14.04.5 LTS; Release:	14.04; Codename:	trusty; ```. **Additional context**; - This SLURM cluster is managed by [Galaxy Cloudman](https://galaxyproject.org/cloudman/), and my installation of Salmon is currently constrained to a conda install. . - I've fiddled with many different CPU/Memory requirements for each of these `salmon` jobs I've run and have only had successful runs while using a single thread on a single node (`--ntasks=1 --nodes=1`), but even then there were segfaults observed intermittently. - The current Galaxy Tool wrapper for Salmon runs `salmon index ... && salmon quant ...` for every input fastq by default, but I've also generated and pointed `salmon quant` to a common index and have observed the same segfault behavior. I've also tried out the `--perfectHash` flag in both of these scenarios to no avail. - I have the ability to specify/wrap another version of Salmon to be compatible with Galaxy if the thought is that a more recent release could help. - I'm happy to provide any context ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271
https://github.com/COMBINE-lab/salmon/issues/271:2024,Deployability,install,installation,2024,"bType"": ""U"",; ""unmatedReads"": ""./single.fastq"",; ""output"": ""./output"",; ""allowOrphansFMD"": [],; ""threads"": ""8"",; ""incompatPrior"": ""1e-20"",; ""biasSpeedSamp"": ""1"",; ""fldMax"": ""1000"",; ""fldMean"": ""200"",; ""fldSD"": ""80"",; ""forgettingFactor"": ""0.65"",; ""maxOcc"": ""200"",; ""maxReadOcc"": ""100"",; ""numBiasSamples"": ""2000000"",; ""numAuxModelSamples"": ""5000000"",; ""numPreAuxModelSamples"": ""1000000"",; ""numGibbsSamples"": ""0"",; ""numBootstraps"": ""0"",; ""vbPrior"": ""0.001"",; ""auxDir"": ""aux_info""; }; ``` . **Expected behavior**; For `salmon quant` to run to completion. **Desktop (please complete the following information):**; ```; Ubuntu Linux; Linux ip-172-31-24-127.ec2.internal 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux; Distributor ID:	Ubuntu; Description:	Ubuntu 14.04.5 LTS; Release:	14.04; Codename:	trusty; ```. **Additional context**; - This SLURM cluster is managed by [Galaxy Cloudman](https://galaxyproject.org/cloudman/), and my installation of Salmon is currently constrained to a conda install. . - I've fiddled with many different CPU/Memory requirements for each of these `salmon` jobs I've run and have only had successful runs while using a single thread on a single node (`--ntasks=1 --nodes=1`), but even then there were segfaults observed intermittently. - The current Galaxy Tool wrapper for Salmon runs `salmon index ... && salmon quant ...` for every input fastq by default, but I've also generated and pointed `salmon quant` to a common index and have observed the same segfault behavior. I've also tried out the `--perfectHash` flag in both of these scenarios to no avail. - I have the ability to specify/wrap another version of Salmon to be compatible with Galaxy if the thought is that a more recent release could help. - I'm happy to provide any context past this that could help solve the issue!. - Also, I lack any biological insight so I'll ping my colleague @gmnelson for backup in that space. **Terminal Output**; <details>; <sum",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271
https://github.com/COMBINE-lab/salmon/issues/271:2083,Deployability,install,install,2083,"bType"": ""U"",; ""unmatedReads"": ""./single.fastq"",; ""output"": ""./output"",; ""allowOrphansFMD"": [],; ""threads"": ""8"",; ""incompatPrior"": ""1e-20"",; ""biasSpeedSamp"": ""1"",; ""fldMax"": ""1000"",; ""fldMean"": ""200"",; ""fldSD"": ""80"",; ""forgettingFactor"": ""0.65"",; ""maxOcc"": ""200"",; ""maxReadOcc"": ""100"",; ""numBiasSamples"": ""2000000"",; ""numAuxModelSamples"": ""5000000"",; ""numPreAuxModelSamples"": ""1000000"",; ""numGibbsSamples"": ""0"",; ""numBootstraps"": ""0"",; ""vbPrior"": ""0.001"",; ""auxDir"": ""aux_info""; }; ``` . **Expected behavior**; For `salmon quant` to run to completion. **Desktop (please complete the following information):**; ```; Ubuntu Linux; Linux ip-172-31-24-127.ec2.internal 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux; Distributor ID:	Ubuntu; Description:	Ubuntu 14.04.5 LTS; Release:	14.04; Codename:	trusty; ```. **Additional context**; - This SLURM cluster is managed by [Galaxy Cloudman](https://galaxyproject.org/cloudman/), and my installation of Salmon is currently constrained to a conda install. . - I've fiddled with many different CPU/Memory requirements for each of these `salmon` jobs I've run and have only had successful runs while using a single thread on a single node (`--ntasks=1 --nodes=1`), but even then there were segfaults observed intermittently. - The current Galaxy Tool wrapper for Salmon runs `salmon index ... && salmon quant ...` for every input fastq by default, but I've also generated and pointed `salmon quant` to a common index and have observed the same segfault behavior. I've also tried out the `--perfectHash` flag in both of these scenarios to no avail. - I have the ability to specify/wrap another version of Salmon to be compatible with Galaxy if the thought is that a more recent release could help. - I'm happy to provide any context past this that could help solve the issue!. - Also, I lack any biological insight so I'll ping my colleague @gmnelson for backup in that space. **Terminal Output**; <details>; <sum",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271
https://github.com/COMBINE-lab/salmon/issues/271:2811,Deployability,release,release,2811," 16:48:51 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux; Distributor ID:	Ubuntu; Description:	Ubuntu 14.04.5 LTS; Release:	14.04; Codename:	trusty; ```. **Additional context**; - This SLURM cluster is managed by [Galaxy Cloudman](https://galaxyproject.org/cloudman/), and my installation of Salmon is currently constrained to a conda install. . - I've fiddled with many different CPU/Memory requirements for each of these `salmon` jobs I've run and have only had successful runs while using a single thread on a single node (`--ntasks=1 --nodes=1`), but even then there were segfaults observed intermittently. - The current Galaxy Tool wrapper for Salmon runs `salmon index ... && salmon quant ...` for every input fastq by default, but I've also generated and pointed `salmon quant` to a common index and have observed the same segfault behavior. I've also tried out the `--perfectHash` flag in both of these scenarios to no avail. - I have the ability to specify/wrap another version of Salmon to be compatible with Galaxy if the thought is that a more recent release could help. - I'm happy to provide any context past this that could help solve the issue!. - Also, I lack any biological insight so I'll ping my colleague @gmnelson for backup in that space. **Terminal Output**; <details>; <summary>Example Output</summary>; <br>. ```; Fatal error: Exit code 139 (); Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [2018-08-16 19:42:27.806] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000434970.2], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000448914.1], had length less than the k-me",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271
https://github.com/COMBINE-lab/salmon/issues/271:3259,Deployability,release,releases,3259,"t even then there were segfaults observed intermittently. - The current Galaxy Tool wrapper for Salmon runs `salmon index ... && salmon quant ...` for every input fastq by default, but I've also generated and pointed `salmon quant` to a common index and have observed the same segfault behavior. I've also tried out the `--perfectHash` flag in both of these scenarios to no avail. - I have the ability to specify/wrap another version of Salmon to be compatible with Galaxy if the thought is that a more recent release could help. - I'm happy to provide any context past this that could help solve the issue!. - Also, I lack any biological insight so I'll ping my colleague @gmnelson for backup in that space. **Terminal Output**; <details>; <summary>Example Output</summary>; <br>. ```; Fatal error: Exit code 139 (); Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [2018-08-16 19:42:27.806] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000434970.2], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000448914.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000415118.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000632684.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000631435.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-08",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271
https://github.com/COMBINE-lab/salmon/issues/271:3328,Deployability,upgrade,upgrade,3328,"t even then there were segfaults observed intermittently. - The current Galaxy Tool wrapper for Salmon runs `salmon index ... && salmon quant ...` for every input fastq by default, but I've also generated and pointed `salmon quant` to a common index and have observed the same segfault behavior. I've also tried out the `--perfectHash` flag in both of these scenarios to no avail. - I have the ability to specify/wrap another version of Salmon to be compatible with Galaxy if the thought is that a more recent release could help. - I'm happy to provide any context past this that could help solve the issue!. - Also, I lack any biological insight so I'll ping my colleague @gmnelson for backup in that space. **Terminal Output**; <details>; <summary>Example Output</summary>; <br>. ```; Fatal error: Exit code 139 (); Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [2018-08-16 19:42:27.806] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000434970.2], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000448914.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000415118.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000632684.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000631435.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-08",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271
https://github.com/COMBINE-lab/salmon/issues/271:22961,Deployability,release,releases,22961,"ed 268000000 positions. processed 269000000 positions. processed 270000000 positions. processed 271000000 positions. processed 272000000 positions. processed 273000000 positions. processed 274000000 positions. processed 275000000 positions. processed 276000000 positions. processed 277000000 positions. processed 278000000 positions. processed 279000000 positions. processed 280000000 positions. processed 281000000 positions. processed 282000000 positions. processed 283000000 positions. processed 284000000 positions. processed 285000000 positions. processed 286000000 positions. processed 287000000 positions. processed 288000000 positions. processed 289000000 positions; khash had 109134690 keys; saving hash to disk . . . done; Elapsed time: 7.61947s; [2018-08-16 19:47:14.359] [jLog] [info] done building index; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ./index }; ### [ libType ] => { U }; ### [ unmatedReads ] => { ./single.fastq }; ### [ output ] => { ./output }; ### [ allowOrphansFMD ] => { }; ### [ threads ] => { 16 }; ### [ incompatPrior ] => { 1e-20 }; ### [ biasSpeedSamp ] => { 1 }; ### [ fldMax ] => { 1000 }; ### [ fldMean ] => { 200 }; ### [ fldSD ] => { 80 }; ### [ forgettingFactor ] => { 0.65 }; ### [ maxOcc ] => { 200 }; ### [ maxReadOcc ] => { 100 }; ### [ numBiasSamples ] => { 2000000 }; ### [ numAuxModelSamples ] => { 5000000 }; ### [ numPreAuxModelSamples ] => { 1000000 }; ### [ numGibbsSamples ] => { 0 }; ### [ numBootstraps ] => { 0 }; ### [ vbPrior ] => { 0.001 }; Logs will be written to ./output/logs; [2018-08-16 19:47:14.418] [jointLog] [info] parsing read library format; [2018-08-16 19:47:14.418] [jointLog] [info] There is 1 library.; [",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271
https://github.com/COMBINE-lab/salmon/issues/271:23030,Deployability,upgrade,upgrade,23030,"ed 268000000 positions. processed 269000000 positions. processed 270000000 positions. processed 271000000 positions. processed 272000000 positions. processed 273000000 positions. processed 274000000 positions. processed 275000000 positions. processed 276000000 positions. processed 277000000 positions. processed 278000000 positions. processed 279000000 positions. processed 280000000 positions. processed 281000000 positions. processed 282000000 positions. processed 283000000 positions. processed 284000000 positions. processed 285000000 positions. processed 286000000 positions. processed 287000000 positions. processed 288000000 positions. processed 289000000 positions; khash had 109134690 keys; saving hash to disk . . . done; Elapsed time: 7.61947s; [2018-08-16 19:47:14.359] [jLog] [info] done building index; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ./index }; ### [ libType ] => { U }; ### [ unmatedReads ] => { ./single.fastq }; ### [ output ] => { ./output }; ### [ allowOrphansFMD ] => { }; ### [ threads ] => { 16 }; ### [ incompatPrior ] => { 1e-20 }; ### [ biasSpeedSamp ] => { 1 }; ### [ fldMax ] => { 1000 }; ### [ fldMean ] => { 200 }; ### [ fldSD ] => { 80 }; ### [ forgettingFactor ] => { 0.65 }; ### [ maxOcc ] => { 200 }; ### [ maxReadOcc ] => { 100 }; ### [ numBiasSamples ] => { 2000000 }; ### [ numAuxModelSamples ] => { 5000000 }; ### [ numPreAuxModelSamples ] => { 1000000 }; ### [ numGibbsSamples ] => { 0 }; ### [ numBootstraps ] => { 0 }; ### [ vbPrior ] => { 0.001 }; Logs will be written to ./output/logs; [2018-08-16 19:47:14.418] [jointLog] [info] parsing read library format; [2018-08-16 19:47:14.418] [jointLog] [info] There is 1 library.; [",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271
https://github.com/COMBINE-lab/salmon/issues/271:2385,Integrability,wrap,wrapper,2385,"0"",; ""numPreAuxModelSamples"": ""1000000"",; ""numGibbsSamples"": ""0"",; ""numBootstraps"": ""0"",; ""vbPrior"": ""0.001"",; ""auxDir"": ""aux_info""; }; ``` . **Expected behavior**; For `salmon quant` to run to completion. **Desktop (please complete the following information):**; ```; Ubuntu Linux; Linux ip-172-31-24-127.ec2.internal 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux; Distributor ID:	Ubuntu; Description:	Ubuntu 14.04.5 LTS; Release:	14.04; Codename:	trusty; ```. **Additional context**; - This SLURM cluster is managed by [Galaxy Cloudman](https://galaxyproject.org/cloudman/), and my installation of Salmon is currently constrained to a conda install. . - I've fiddled with many different CPU/Memory requirements for each of these `salmon` jobs I've run and have only had successful runs while using a single thread on a single node (`--ntasks=1 --nodes=1`), but even then there were segfaults observed intermittently. - The current Galaxy Tool wrapper for Salmon runs `salmon index ... && salmon quant ...` for every input fastq by default, but I've also generated and pointed `salmon quant` to a common index and have observed the same segfault behavior. I've also tried out the `--perfectHash` flag in both of these scenarios to no avail. - I have the ability to specify/wrap another version of Salmon to be compatible with Galaxy if the thought is that a more recent release could help. - I'm happy to provide any context past this that could help solve the issue!. - Also, I lack any biological insight so I'll ping my colleague @gmnelson for backup in that space. **Terminal Output**; <details>; <summary>Example Output</summary>; <br>. ```; Fatal error: Exit code 139 (); Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [2018-08-16 19:42:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271
https://github.com/COMBINE-lab/salmon/issues/271:2714,Integrability,wrap,wrap,2714," 16:48:51 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux; Distributor ID:	Ubuntu; Description:	Ubuntu 14.04.5 LTS; Release:	14.04; Codename:	trusty; ```. **Additional context**; - This SLURM cluster is managed by [Galaxy Cloudman](https://galaxyproject.org/cloudman/), and my installation of Salmon is currently constrained to a conda install. . - I've fiddled with many different CPU/Memory requirements for each of these `salmon` jobs I've run and have only had successful runs while using a single thread on a single node (`--ntasks=1 --nodes=1`), but even then there were segfaults observed intermittently. - The current Galaxy Tool wrapper for Salmon runs `salmon index ... && salmon quant ...` for every input fastq by default, but I've also generated and pointed `salmon quant` to a common index and have observed the same segfault behavior. I've also tried out the `--perfectHash` flag in both of these scenarios to no avail. - I have the ability to specify/wrap another version of Salmon to be compatible with Galaxy if the thought is that a more recent release could help. - I'm happy to provide any context past this that could help solve the issue!. - Also, I lack any biological insight so I'll ping my colleague @gmnelson for backup in that space. **Terminal Output**; <details>; <summary>Example Output</summary>; <br>. ```; Fatal error: Exit code 139 (); Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [2018-08-16 19:42:27.806] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000434970.2], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000448914.1], had length less than the k-me",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271
https://github.com/COMBINE-lab/salmon/issues/271:24047,Performance,Load,Loading,24047,onvenience.; ###; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ./index }; ### [ libType ] => { U }; ### [ unmatedReads ] => { ./single.fastq }; ### [ output ] => { ./output }; ### [ allowOrphansFMD ] => { }; ### [ threads ] => { 16 }; ### [ incompatPrior ] => { 1e-20 }; ### [ biasSpeedSamp ] => { 1 }; ### [ fldMax ] => { 1000 }; ### [ fldMean ] => { 200 }; ### [ fldSD ] => { 80 }; ### [ forgettingFactor ] => { 0.65 }; ### [ maxOcc ] => { 200 }; ### [ maxReadOcc ] => { 100 }; ### [ numBiasSamples ] => { 2000000 }; ### [ numAuxModelSamples ] => { 5000000 }; ### [ numPreAuxModelSamples ] => { 1000000 }; ### [ numGibbsSamples ] => { 0 }; ### [ numBootstraps ] => { 0 }; ### [ vbPrior ] => { 0.001 }; Logs will be written to ./output/logs; [2018-08-16 19:47:14.418] [jointLog] [info] parsing read library format; [2018-08-16 19:47:14.418] [jointLog] [info] There is 1 library.; [2018-08-16 19:47:14.460] [stderrLog] [info] Loading Suffix Array ; [2018-08-16 19:47:14.459] [jointLog] [info] Loading Quasi index; [2018-08-16 19:47:14.459] [jointLog] [info] Loading 32-bit quasi index; [2018-08-16 19:47:15.044] [stderrLog] [info] Loading Transcript Info ; [2018-08-16 19:47:15.207] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-08-16 19:47:15.263] [stderrLog] [info] There were 173531 set bits in the bit array; [2018-08-16 19:47:15.285] [stderrLog] [info] Computing transcript lengths; [2018-08-16 19:47:15.285] [stderrLog] [info] Waiting to finish loading hash; [2018-08-16 19:47:20.808] [jointLog] [info] done; [2018-08-16 19:47:20.808] [jointLog] [info] Index contained 173531 targets; [2018-08-16 19:47:20.808] [stderrLog] [info] Done loading index. [A. [32mprocessed[31m 500002 [32mfragments[0m; hits: 2213374; hits per frag: 5.08859[A. [32mprocessed[31m 1000002 [32mfragments[0m; hits: 4422312; hits per frag: 4.78092[A. [32mprocessed[31m 1500006 [32mfragments[0m; hits: 6635818; hits per frag: 4.69843,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271
https://github.com/COMBINE-lab/salmon/issues/271:24114,Performance,Load,Loading,24114, ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ./index }; ### [ libType ] => { U }; ### [ unmatedReads ] => { ./single.fastq }; ### [ output ] => { ./output }; ### [ allowOrphansFMD ] => { }; ### [ threads ] => { 16 }; ### [ incompatPrior ] => { 1e-20 }; ### [ biasSpeedSamp ] => { 1 }; ### [ fldMax ] => { 1000 }; ### [ fldMean ] => { 200 }; ### [ fldSD ] => { 80 }; ### [ forgettingFactor ] => { 0.65 }; ### [ maxOcc ] => { 200 }; ### [ maxReadOcc ] => { 100 }; ### [ numBiasSamples ] => { 2000000 }; ### [ numAuxModelSamples ] => { 5000000 }; ### [ numPreAuxModelSamples ] => { 1000000 }; ### [ numGibbsSamples ] => { 0 }; ### [ numBootstraps ] => { 0 }; ### [ vbPrior ] => { 0.001 }; Logs will be written to ./output/logs; [2018-08-16 19:47:14.418] [jointLog] [info] parsing read library format; [2018-08-16 19:47:14.418] [jointLog] [info] There is 1 library.; [2018-08-16 19:47:14.460] [stderrLog] [info] Loading Suffix Array ; [2018-08-16 19:47:14.459] [jointLog] [info] Loading Quasi index; [2018-08-16 19:47:14.459] [jointLog] [info] Loading 32-bit quasi index; [2018-08-16 19:47:15.044] [stderrLog] [info] Loading Transcript Info ; [2018-08-16 19:47:15.207] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-08-16 19:47:15.263] [stderrLog] [info] There were 173531 set bits in the bit array; [2018-08-16 19:47:15.285] [stderrLog] [info] Computing transcript lengths; [2018-08-16 19:47:15.285] [stderrLog] [info] Waiting to finish loading hash; [2018-08-16 19:47:20.808] [jointLog] [info] done; [2018-08-16 19:47:20.808] [jointLog] [info] Index contained 173531 targets; [2018-08-16 19:47:20.808] [stderrLog] [info] Done loading index. [A. [32mprocessed[31m 500002 [32mfragments[0m; hits: 2213374; hits per frag: 5.08859[A. [32mprocessed[31m 1000002 [32mfragments[0m; hits: 4422312; hits per frag: 4.78092[A. [32mprocessed[31m 1500006 [32mfragments[0m; hits: 6635818; hits per frag: 4.69843[A. [32mprocessed[31m 2000001 [32mfragments[0m; hits: 8846970; ,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271
https://github.com/COMBINE-lab/salmon/issues/271:24179,Performance,Load,Loading,24179,}; ### [ libType ] => { U }; ### [ unmatedReads ] => { ./single.fastq }; ### [ output ] => { ./output }; ### [ allowOrphansFMD ] => { }; ### [ threads ] => { 16 }; ### [ incompatPrior ] => { 1e-20 }; ### [ biasSpeedSamp ] => { 1 }; ### [ fldMax ] => { 1000 }; ### [ fldMean ] => { 200 }; ### [ fldSD ] => { 80 }; ### [ forgettingFactor ] => { 0.65 }; ### [ maxOcc ] => { 200 }; ### [ maxReadOcc ] => { 100 }; ### [ numBiasSamples ] => { 2000000 }; ### [ numAuxModelSamples ] => { 5000000 }; ### [ numPreAuxModelSamples ] => { 1000000 }; ### [ numGibbsSamples ] => { 0 }; ### [ numBootstraps ] => { 0 }; ### [ vbPrior ] => { 0.001 }; Logs will be written to ./output/logs; [2018-08-16 19:47:14.418] [jointLog] [info] parsing read library format; [2018-08-16 19:47:14.418] [jointLog] [info] There is 1 library.; [2018-08-16 19:47:14.460] [stderrLog] [info] Loading Suffix Array ; [2018-08-16 19:47:14.459] [jointLog] [info] Loading Quasi index; [2018-08-16 19:47:14.459] [jointLog] [info] Loading 32-bit quasi index; [2018-08-16 19:47:15.044] [stderrLog] [info] Loading Transcript Info ; [2018-08-16 19:47:15.207] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-08-16 19:47:15.263] [stderrLog] [info] There were 173531 set bits in the bit array; [2018-08-16 19:47:15.285] [stderrLog] [info] Computing transcript lengths; [2018-08-16 19:47:15.285] [stderrLog] [info] Waiting to finish loading hash; [2018-08-16 19:47:20.808] [jointLog] [info] done; [2018-08-16 19:47:20.808] [jointLog] [info] Index contained 173531 targets; [2018-08-16 19:47:20.808] [stderrLog] [info] Done loading index. [A. [32mprocessed[31m 500002 [32mfragments[0m; hits: 2213374; hits per frag: 5.08859[A. [32mprocessed[31m 1000002 [32mfragments[0m; hits: 4422312; hits per frag: 4.78092[A. [32mprocessed[31m 1500006 [32mfragments[0m; hits: 6635818; hits per frag: 4.69843[A. [32mprocessed[31m 2000001 [32mfragments[0m; hits: 8846970; hits per frag: 4.55737[A. [32mprocessed[31m 2500021 [32mfragment,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271
https://github.com/COMBINE-lab/salmon/issues/271:24252,Performance,Load,Loading,24252,; ### [ output ] => { ./output }; ### [ allowOrphansFMD ] => { }; ### [ threads ] => { 16 }; ### [ incompatPrior ] => { 1e-20 }; ### [ biasSpeedSamp ] => { 1 }; ### [ fldMax ] => { 1000 }; ### [ fldMean ] => { 200 }; ### [ fldSD ] => { 80 }; ### [ forgettingFactor ] => { 0.65 }; ### [ maxOcc ] => { 200 }; ### [ maxReadOcc ] => { 100 }; ### [ numBiasSamples ] => { 2000000 }; ### [ numAuxModelSamples ] => { 5000000 }; ### [ numPreAuxModelSamples ] => { 1000000 }; ### [ numGibbsSamples ] => { 0 }; ### [ numBootstraps ] => { 0 }; ### [ vbPrior ] => { 0.001 }; Logs will be written to ./output/logs; [2018-08-16 19:47:14.418] [jointLog] [info] parsing read library format; [2018-08-16 19:47:14.418] [jointLog] [info] There is 1 library.; [2018-08-16 19:47:14.460] [stderrLog] [info] Loading Suffix Array ; [2018-08-16 19:47:14.459] [jointLog] [info] Loading Quasi index; [2018-08-16 19:47:14.459] [jointLog] [info] Loading 32-bit quasi index; [2018-08-16 19:47:15.044] [stderrLog] [info] Loading Transcript Info ; [2018-08-16 19:47:15.207] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-08-16 19:47:15.263] [stderrLog] [info] There were 173531 set bits in the bit array; [2018-08-16 19:47:15.285] [stderrLog] [info] Computing transcript lengths; [2018-08-16 19:47:15.285] [stderrLog] [info] Waiting to finish loading hash; [2018-08-16 19:47:20.808] [jointLog] [info] done; [2018-08-16 19:47:20.808] [jointLog] [info] Index contained 173531 targets; [2018-08-16 19:47:20.808] [stderrLog] [info] Done loading index. [A. [32mprocessed[31m 500002 [32mfragments[0m; hits: 2213374; hits per frag: 5.08859[A. [32mprocessed[31m 1000002 [32mfragments[0m; hits: 4422312; hits per frag: 4.78092[A. [32mprocessed[31m 1500006 [32mfragments[0m; hits: 6635818; hits per frag: 4.69843[A. [32mprocessed[31m 2000001 [32mfragments[0m; hits: 8846970; hits per frag: 4.55737[A. [32mprocessed[31m 2500021 [32mfragments[0m; hits: 11062734; hits per frag: 4.49592[A. [32mprocessed[31m 30,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271
https://github.com/COMBINE-lab/salmon/issues/271:24323,Performance,Load,Loading,24323,reads ] => { 16 }; ### [ incompatPrior ] => { 1e-20 }; ### [ biasSpeedSamp ] => { 1 }; ### [ fldMax ] => { 1000 }; ### [ fldMean ] => { 200 }; ### [ fldSD ] => { 80 }; ### [ forgettingFactor ] => { 0.65 }; ### [ maxOcc ] => { 200 }; ### [ maxReadOcc ] => { 100 }; ### [ numBiasSamples ] => { 2000000 }; ### [ numAuxModelSamples ] => { 5000000 }; ### [ numPreAuxModelSamples ] => { 1000000 }; ### [ numGibbsSamples ] => { 0 }; ### [ numBootstraps ] => { 0 }; ### [ vbPrior ] => { 0.001 }; Logs will be written to ./output/logs; [2018-08-16 19:47:14.418] [jointLog] [info] parsing read library format; [2018-08-16 19:47:14.418] [jointLog] [info] There is 1 library.; [2018-08-16 19:47:14.460] [stderrLog] [info] Loading Suffix Array ; [2018-08-16 19:47:14.459] [jointLog] [info] Loading Quasi index; [2018-08-16 19:47:14.459] [jointLog] [info] Loading 32-bit quasi index; [2018-08-16 19:47:15.044] [stderrLog] [info] Loading Transcript Info ; [2018-08-16 19:47:15.207] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-08-16 19:47:15.263] [stderrLog] [info] There were 173531 set bits in the bit array; [2018-08-16 19:47:15.285] [stderrLog] [info] Computing transcript lengths; [2018-08-16 19:47:15.285] [stderrLog] [info] Waiting to finish loading hash; [2018-08-16 19:47:20.808] [jointLog] [info] done; [2018-08-16 19:47:20.808] [jointLog] [info] Index contained 173531 targets; [2018-08-16 19:47:20.808] [stderrLog] [info] Done loading index. [A. [32mprocessed[31m 500002 [32mfragments[0m; hits: 2213374; hits per frag: 5.08859[A. [32mprocessed[31m 1000002 [32mfragments[0m; hits: 4422312; hits per frag: 4.78092[A. [32mprocessed[31m 1500006 [32mfragments[0m; hits: 6635818; hits per frag: 4.69843[A. [32mprocessed[31m 2000001 [32mfragments[0m; hits: 8846970; hits per frag: 4.55737[A. [32mprocessed[31m 2500021 [32mfragments[0m; hits: 11062734; hits per frag: 4.49592[A. [32mprocessed[31m 3000000 [32mfragments[0m; hits: 13274990; hits per frag: 4.48667[A. [32,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271
https://github.com/COMBINE-lab/salmon/issues/271:24582,Performance,load,loading,24582,xReadOcc ] => { 100 }; ### [ numBiasSamples ] => { 2000000 }; ### [ numAuxModelSamples ] => { 5000000 }; ### [ numPreAuxModelSamples ] => { 1000000 }; ### [ numGibbsSamples ] => { 0 }; ### [ numBootstraps ] => { 0 }; ### [ vbPrior ] => { 0.001 }; Logs will be written to ./output/logs; [2018-08-16 19:47:14.418] [jointLog] [info] parsing read library format; [2018-08-16 19:47:14.418] [jointLog] [info] There is 1 library.; [2018-08-16 19:47:14.460] [stderrLog] [info] Loading Suffix Array ; [2018-08-16 19:47:14.459] [jointLog] [info] Loading Quasi index; [2018-08-16 19:47:14.459] [jointLog] [info] Loading 32-bit quasi index; [2018-08-16 19:47:15.044] [stderrLog] [info] Loading Transcript Info ; [2018-08-16 19:47:15.207] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-08-16 19:47:15.263] [stderrLog] [info] There were 173531 set bits in the bit array; [2018-08-16 19:47:15.285] [stderrLog] [info] Computing transcript lengths; [2018-08-16 19:47:15.285] [stderrLog] [info] Waiting to finish loading hash; [2018-08-16 19:47:20.808] [jointLog] [info] done; [2018-08-16 19:47:20.808] [jointLog] [info] Index contained 173531 targets; [2018-08-16 19:47:20.808] [stderrLog] [info] Done loading index. [A. [32mprocessed[31m 500002 [32mfragments[0m; hits: 2213374; hits per frag: 5.08859[A. [32mprocessed[31m 1000002 [32mfragments[0m; hits: 4422312; hits per frag: 4.78092[A. [32mprocessed[31m 1500006 [32mfragments[0m; hits: 6635818; hits per frag: 4.69843[A. [32mprocessed[31m 2000001 [32mfragments[0m; hits: 8846970; hits per frag: 4.55737[A. [32mprocessed[31m 2500021 [32mfragments[0m; hits: 11062734; hits per frag: 4.49592[A. [32mprocessed[31m 3000000 [32mfragments[0m; hits: 13274990; hits per frag: 4.48667[A. [32mprocessed[31m 3500002 [32mfragments[0m; hits: 15430043; hits per frag: 4.48414[A. [32mprocessed[31m 4000004 [32mfragments[0m; hits: 17638270; hits per frag: 4.48376[A. [32mprocessed[31m 4500000 [32mfragments[0m; hits: 19856371; ,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271
https://github.com/COMBINE-lab/salmon/issues/271:24772,Performance,load,loading,24772,## [ numBootstraps ] => { 0 }; ### [ vbPrior ] => { 0.001 }; Logs will be written to ./output/logs; [2018-08-16 19:47:14.418] [jointLog] [info] parsing read library format; [2018-08-16 19:47:14.418] [jointLog] [info] There is 1 library.; [2018-08-16 19:47:14.460] [stderrLog] [info] Loading Suffix Array ; [2018-08-16 19:47:14.459] [jointLog] [info] Loading Quasi index; [2018-08-16 19:47:14.459] [jointLog] [info] Loading 32-bit quasi index; [2018-08-16 19:47:15.044] [stderrLog] [info] Loading Transcript Info ; [2018-08-16 19:47:15.207] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-08-16 19:47:15.263] [stderrLog] [info] There were 173531 set bits in the bit array; [2018-08-16 19:47:15.285] [stderrLog] [info] Computing transcript lengths; [2018-08-16 19:47:15.285] [stderrLog] [info] Waiting to finish loading hash; [2018-08-16 19:47:20.808] [jointLog] [info] done; [2018-08-16 19:47:20.808] [jointLog] [info] Index contained 173531 targets; [2018-08-16 19:47:20.808] [stderrLog] [info] Done loading index. [A. [32mprocessed[31m 500002 [32mfragments[0m; hits: 2213374; hits per frag: 5.08859[A. [32mprocessed[31m 1000002 [32mfragments[0m; hits: 4422312; hits per frag: 4.78092[A. [32mprocessed[31m 1500006 [32mfragments[0m; hits: 6635818; hits per frag: 4.69843[A. [32mprocessed[31m 2000001 [32mfragments[0m; hits: 8846970; hits per frag: 4.55737[A. [32mprocessed[31m 2500021 [32mfragments[0m; hits: 11062734; hits per frag: 4.49592[A. [32mprocessed[31m 3000000 [32mfragments[0m; hits: 13274990; hits per frag: 4.48667[A. [32mprocessed[31m 3500002 [32mfragments[0m; hits: 15430043; hits per frag: 4.48414[A. [32mprocessed[31m 4000004 [32mfragments[0m; hits: 17638270; hits per frag: 4.48376[A. [32mprocessed[31m 4500000 [32mfragments[0m; hits: 19856371; hits per frag: 4.45983[A. [32mprocessed[31m 5000000 [32mfragments[0m; hits: 22066072; hits per frag: 4.44139[A. [32mprocessed[31m 5500001 [32mfragments[0m; hits: 24279605; hits,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271
https://github.com/COMBINE-lab/salmon/issues/271:28938,Performance,optimiz,optimizer,28938,"0m; hits: 66225532; hits per frag: 4.42625[A. [32mprocessed[31m 15500006 [32mfragments[0m; hits: 68431333; hits per frag: 4.42688[A. [32mprocessed[31m 16000002 [32mfragments[0m; hits: 70643320; hits per frag: 4.44249[A. [32mprocessed[31m 16500002 [32mfragments[0m; hits: 72850859; hits per frag: 4.42435[A. [32mprocessed[31m 17500001 [32mfragments[0m; hits: 77275281; hits per frag: 4.43251[A. [32mprocessed[31m 18000005 [32mfragments[0m; hits: 79494713; hits per frag: 4.433[A. [32mprocessed[31m 18500000 [32mfragments[0m; hits: 81710387; hits per frag: 4.43219[A. [32mprocessed[31m 19000001 [32mfragments[0m; hits: 83924289; hits per frag: 4.42804[A. [32mprocessed[31m 19500000 [32mfragments[0m; hits: 86134985; hits per frag: 4.43392[A. [32mprocessed[31m 20000000 [32mfragments[0m; hits: 88347210; hits per frag: 4.42895[A. [32mprocessed[31m 20500003 [32mfragments[0m; hits: 90559781; hits per frag: 4.43081[A. [32mprocessed[31m 21000000 [32mfragments[0m; hits: 92771131; hits per frag: 4.42429. [2018-08-16 19:47:49.632] [jointLog] [info] Computed 260771 rich equivalence classes for further processing; [2018-08-16 19:47:49.632] [jointLog] [info] Counted 19352476 total reads in the equivalence classes ; [2018-08-16 19:47:49.646] [jointLog] [info] Mapping rate = 91.4764%. [2018-08-16 19:47:49.646] [jointLog] [info] finished quantifyLibrary(); [2018-08-16 19:47:49.649] [jointLog] [info] Starting optimizer; /mnt/galaxy/tmp/job_working_directory/000/900/tool_script.sh: line 50: 5733 Segmentation fault (core dumped) salmon quant --index ./index --libType U --unmatedReads ./single.fastq --output ./output --allowOrphans --threads ""${GALAXY_SLOTS:-4}"" --incompatPrior 1e-20 --biasSpeedSamp 1 --fldMax 1000 --fldMean 200 --fldSD 80 --forgettingFactor 0.65 --maxOcc 200 --maxReadOcc 100 --numBiasSamples 2000000 --numAuxModelSamples 5000000 --numPreAuxModelSamples 1000000 --numGibbsSamples 0 --numBootstraps 0 --vbPrior 0.001; ```<details>",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271
https://github.com/COMBINE-lab/salmon/issues/271:22711,Security,hash,hash,22711," processed 258000000 positions. processed 259000000 positions. processed 260000000 positions. processed 261000000 positions. processed 262000000 positions. processed 263000000 positions. processed 264000000 positions. processed 265000000 positions. processed 266000000 positions. processed 267000000 positions. processed 268000000 positions. processed 269000000 positions. processed 270000000 positions. processed 271000000 positions. processed 272000000 positions. processed 273000000 positions. processed 274000000 positions. processed 275000000 positions. processed 276000000 positions. processed 277000000 positions. processed 278000000 positions. processed 279000000 positions. processed 280000000 positions. processed 281000000 positions. processed 282000000 positions. processed 283000000 positions. processed 284000000 positions. processed 285000000 positions. processed 286000000 positions. processed 287000000 positions. processed 288000000 positions. processed 289000000 positions; khash had 109134690 keys; saving hash to disk . . . done; Elapsed time: 7.61947s; [2018-08-16 19:47:14.359] [jLog] [info] done building index; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ./index }; ### [ libType ] => { U }; ### [ unmatedReads ] => { ./single.fastq }; ### [ output ] => { ./output }; ### [ allowOrphansFMD ] => { }; ### [ threads ] => { 16 }; ### [ incompatPrior ] => { 1e-20 }; ### [ biasSpeedSamp ] => { 1 }; ### [ fldMax ] => { 1000 }; ### [ fldMean ] => { 200 }; ### [ fldSD ] => { 80 }; ### [ forgettingFactor ] => { 0.65 }; ### [ maxOcc ] => { 200 }; ### [ maxReadOcc ] => { 100 }; ### [ numBiasSamples ] => { 2000000 }; ### [ numAuxModelSamples ] => { 5000000 }; ###",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271
https://github.com/COMBINE-lab/salmon/issues/271:24590,Security,hash,hash,24590,xReadOcc ] => { 100 }; ### [ numBiasSamples ] => { 2000000 }; ### [ numAuxModelSamples ] => { 5000000 }; ### [ numPreAuxModelSamples ] => { 1000000 }; ### [ numGibbsSamples ] => { 0 }; ### [ numBootstraps ] => { 0 }; ### [ vbPrior ] => { 0.001 }; Logs will be written to ./output/logs; [2018-08-16 19:47:14.418] [jointLog] [info] parsing read library format; [2018-08-16 19:47:14.418] [jointLog] [info] There is 1 library.; [2018-08-16 19:47:14.460] [stderrLog] [info] Loading Suffix Array ; [2018-08-16 19:47:14.459] [jointLog] [info] Loading Quasi index; [2018-08-16 19:47:14.459] [jointLog] [info] Loading 32-bit quasi index; [2018-08-16 19:47:15.044] [stderrLog] [info] Loading Transcript Info ; [2018-08-16 19:47:15.207] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-08-16 19:47:15.263] [stderrLog] [info] There were 173531 set bits in the bit array; [2018-08-16 19:47:15.285] [stderrLog] [info] Computing transcript lengths; [2018-08-16 19:47:15.285] [stderrLog] [info] Waiting to finish loading hash; [2018-08-16 19:47:20.808] [jointLog] [info] done; [2018-08-16 19:47:20.808] [jointLog] [info] Index contained 173531 targets; [2018-08-16 19:47:20.808] [stderrLog] [info] Done loading index. [A. [32mprocessed[31m 500002 [32mfragments[0m; hits: 2213374; hits per frag: 5.08859[A. [32mprocessed[31m 1000002 [32mfragments[0m; hits: 4422312; hits per frag: 4.78092[A. [32mprocessed[31m 1500006 [32mfragments[0m; hits: 6635818; hits per frag: 4.69843[A. [32mprocessed[31m 2000001 [32mfragments[0m; hits: 8846970; hits per frag: 4.55737[A. [32mprocessed[31m 2500021 [32mfragments[0m; hits: 11062734; hits per frag: 4.49592[A. [32mprocessed[31m 3000000 [32mfragments[0m; hits: 13274990; hits per frag: 4.48667[A. [32mprocessed[31m 3500002 [32mfragments[0m; hits: 15430043; hits per frag: 4.48414[A. [32mprocessed[31m 4000004 [32mfragments[0m; hits: 17638270; hits per frag: 4.48376[A. [32mprocessed[31m 4500000 [32mfragments[0m; hits: 19856371; ,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271
https://github.com/COMBINE-lab/salmon/issues/271:23825,Testability,Log,Logs,23825," ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ./index }; ### [ libType ] => { U }; ### [ unmatedReads ] => { ./single.fastq }; ### [ output ] => { ./output }; ### [ allowOrphansFMD ] => { }; ### [ threads ] => { 16 }; ### [ incompatPrior ] => { 1e-20 }; ### [ biasSpeedSamp ] => { 1 }; ### [ fldMax ] => { 1000 }; ### [ fldMean ] => { 200 }; ### [ fldSD ] => { 80 }; ### [ forgettingFactor ] => { 0.65 }; ### [ maxOcc ] => { 200 }; ### [ maxReadOcc ] => { 100 }; ### [ numBiasSamples ] => { 2000000 }; ### [ numAuxModelSamples ] => { 5000000 }; ### [ numPreAuxModelSamples ] => { 1000000 }; ### [ numGibbsSamples ] => { 0 }; ### [ numBootstraps ] => { 0 }; ### [ vbPrior ] => { 0.001 }; Logs will be written to ./output/logs; [2018-08-16 19:47:14.418] [jointLog] [info] parsing read library format; [2018-08-16 19:47:14.418] [jointLog] [info] There is 1 library.; [2018-08-16 19:47:14.460] [stderrLog] [info] Loading Suffix Array ; [2018-08-16 19:47:14.459] [jointLog] [info] Loading Quasi index; [2018-08-16 19:47:14.459] [jointLog] [info] Loading 32-bit quasi index; [2018-08-16 19:47:15.044] [stderrLog] [info] Loading Transcript Info ; [2018-08-16 19:47:15.207] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-08-16 19:47:15.263] [stderrLog] [info] There were 173531 set bits in the bit array; [2018-08-16 19:47:15.285] [stderrLog] [info] Computing transcript lengths; [2018-08-16 19:47:15.285] [stderrLog] [info] Waiting to finish loading hash; [2018-08-16 19:47:20.808] [jointLog] [info] done; [2018-08-16 19:47:20.808] [jointLog] [info] Index contained 173531 targets; [2018-08-16 19:47:20.808] [stderrLog] [info] Done loading index. [A. [32mprocessed[31m 500002 [32mfragments",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271
https://github.com/COMBINE-lab/salmon/issues/271:23858,Testability,log,logs,23858," available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ./index }; ### [ libType ] => { U }; ### [ unmatedReads ] => { ./single.fastq }; ### [ output ] => { ./output }; ### [ allowOrphansFMD ] => { }; ### [ threads ] => { 16 }; ### [ incompatPrior ] => { 1e-20 }; ### [ biasSpeedSamp ] => { 1 }; ### [ fldMax ] => { 1000 }; ### [ fldMean ] => { 200 }; ### [ fldSD ] => { 80 }; ### [ forgettingFactor ] => { 0.65 }; ### [ maxOcc ] => { 200 }; ### [ maxReadOcc ] => { 100 }; ### [ numBiasSamples ] => { 2000000 }; ### [ numAuxModelSamples ] => { 5000000 }; ### [ numPreAuxModelSamples ] => { 1000000 }; ### [ numGibbsSamples ] => { 0 }; ### [ numBootstraps ] => { 0 }; ### [ vbPrior ] => { 0.001 }; Logs will be written to ./output/logs; [2018-08-16 19:47:14.418] [jointLog] [info] parsing read library format; [2018-08-16 19:47:14.418] [jointLog] [info] There is 1 library.; [2018-08-16 19:47:14.460] [stderrLog] [info] Loading Suffix Array ; [2018-08-16 19:47:14.459] [jointLog] [info] Loading Quasi index; [2018-08-16 19:47:14.459] [jointLog] [info] Loading 32-bit quasi index; [2018-08-16 19:47:15.044] [stderrLog] [info] Loading Transcript Info ; [2018-08-16 19:47:15.207] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-08-16 19:47:15.263] [stderrLog] [info] There were 173531 set bits in the bit array; [2018-08-16 19:47:15.285] [stderrLog] [info] Computing transcript lengths; [2018-08-16 19:47:15.285] [stderrLog] [info] Waiting to finish loading hash; [2018-08-16 19:47:20.808] [jointLog] [info] done; [2018-08-16 19:47:20.808] [jointLog] [info] Index contained 173531 targets; [2018-08-16 19:47:20.808] [stderrLog] [info] Done loading index. [A. [32mprocessed[31m 500002 [32mfragments[0m; hits: 2213374; hits per frag:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271
https://github.com/COMBINE-lab/salmon/issues/272:65,Testability,test,test,65,"Dear salmon project. I have a proposal. Right now, the Travis CI test has 1 case for gcc-7.; I thought if we could add and remove test cases easily such as latest version gcc-8, minimal support version gcc-5, clang, and Mac OSX, we would be happy to contribute the source code. Look at the RNA Sequence tool: Trinity's case. [1][2]; The structure of the `.travis.yml` is to add the test cases easily. It has gcc-N and Mac OSX case.; And I prepared it for this salmon project.; I would like to send pull-request soon after now. [1] https://travis-ci.org/trinityrnaseq/trinityrnaseq; [2] https://github.com/trinityrnaseq/trinityrnaseq/blob/master/.travis.yml",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/272
https://github.com/COMBINE-lab/salmon/issues/272:130,Testability,test,test,130,"Dear salmon project. I have a proposal. Right now, the Travis CI test has 1 case for gcc-7.; I thought if we could add and remove test cases easily such as latest version gcc-8, minimal support version gcc-5, clang, and Mac OSX, we would be happy to contribute the source code. Look at the RNA Sequence tool: Trinity's case. [1][2]; The structure of the `.travis.yml` is to add the test cases easily. It has gcc-N and Mac OSX case.; And I prepared it for this salmon project.; I would like to send pull-request soon after now. [1] https://travis-ci.org/trinityrnaseq/trinityrnaseq; [2] https://github.com/trinityrnaseq/trinityrnaseq/blob/master/.travis.yml",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/272
https://github.com/COMBINE-lab/salmon/issues/272:382,Testability,test,test,382,"Dear salmon project. I have a proposal. Right now, the Travis CI test has 1 case for gcc-7.; I thought if we could add and remove test cases easily such as latest version gcc-8, minimal support version gcc-5, clang, and Mac OSX, we would be happy to contribute the source code. Look at the RNA Sequence tool: Trinity's case. [1][2]; The structure of the `.travis.yml` is to add the test cases easily. It has gcc-N and Mac OSX case.; And I prepared it for this salmon project.; I would like to send pull-request soon after now. [1] https://travis-ci.org/trinityrnaseq/trinityrnaseq; [2] https://github.com/trinityrnaseq/trinityrnaseq/blob/master/.travis.yml",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/272
https://github.com/COMBINE-lab/salmon/pull/273:198,Modifiability,Refactor,Refactoring,198,"This is related to https://github.com/COMBINE-lab/salmon/issues/272. * Now there are 2 test cases on Travis CI, adding one case.; * Added code for speed up such as `git - depth: 1`, `make -j 4`.; * Refactoring. Removed tailing spaces. Notes:; * I added `gcc-5`'s case as maybe it is minimal support version of gcc for this project.; * I want to replace current case `gcc-7` to latest version `gcc-8` if you like.; * Total running time (""Ran for"" on the Travis page.) becomes faster than current situation. In my repository, total running time is ""15 min 11 sec"", seeing current master branch's test is around 17 min+. See [1]; * Removed `travis_wait`. Without the command, the default behavior is ""when a long running command or compile step regularly takes longer than 10 minutes without producing any output"". [2] I have not faced the situation when I did debug. ; * There are commented out area at the bottom of `.travis.yml`. However as we can run `git log -p .travis.yml` to check past modification, shall we remove the commented out ""whitelist"" area?. [1] https://travis-ci.org/junaruga/salmon/builds/417976633; [2] https://docs.travis-ci.com/user/common-build-problems/#build-times-out-because-no-output-was-received",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/273
https://github.com/COMBINE-lab/salmon/pull/273:87,Testability,test,test,87,"This is related to https://github.com/COMBINE-lab/salmon/issues/272. * Now there are 2 test cases on Travis CI, adding one case.; * Added code for speed up such as `git - depth: 1`, `make -j 4`.; * Refactoring. Removed tailing spaces. Notes:; * I added `gcc-5`'s case as maybe it is minimal support version of gcc for this project.; * I want to replace current case `gcc-7` to latest version `gcc-8` if you like.; * Total running time (""Ran for"" on the Travis page.) becomes faster than current situation. In my repository, total running time is ""15 min 11 sec"", seeing current master branch's test is around 17 min+. See [1]; * Removed `travis_wait`. Without the command, the default behavior is ""when a long running command or compile step regularly takes longer than 10 minutes without producing any output"". [2] I have not faced the situation when I did debug. ; * There are commented out area at the bottom of `.travis.yml`. However as we can run `git log -p .travis.yml` to check past modification, shall we remove the commented out ""whitelist"" area?. [1] https://travis-ci.org/junaruga/salmon/builds/417976633; [2] https://docs.travis-ci.com/user/common-build-problems/#build-times-out-because-no-output-was-received",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/273
https://github.com/COMBINE-lab/salmon/pull/273:594,Testability,test,test,594,"This is related to https://github.com/COMBINE-lab/salmon/issues/272. * Now there are 2 test cases on Travis CI, adding one case.; * Added code for speed up such as `git - depth: 1`, `make -j 4`.; * Refactoring. Removed tailing spaces. Notes:; * I added `gcc-5`'s case as maybe it is minimal support version of gcc for this project.; * I want to replace current case `gcc-7` to latest version `gcc-8` if you like.; * Total running time (""Ran for"" on the Travis page.) becomes faster than current situation. In my repository, total running time is ""15 min 11 sec"", seeing current master branch's test is around 17 min+. See [1]; * Removed `travis_wait`. Without the command, the default behavior is ""when a long running command or compile step regularly takes longer than 10 minutes without producing any output"". [2] I have not faced the situation when I did debug. ; * There are commented out area at the bottom of `.travis.yml`. However as we can run `git log -p .travis.yml` to check past modification, shall we remove the commented out ""whitelist"" area?. [1] https://travis-ci.org/junaruga/salmon/builds/417976633; [2] https://docs.travis-ci.com/user/common-build-problems/#build-times-out-because-no-output-was-received",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/273
https://github.com/COMBINE-lab/salmon/pull/273:957,Testability,log,log,957,"This is related to https://github.com/COMBINE-lab/salmon/issues/272. * Now there are 2 test cases on Travis CI, adding one case.; * Added code for speed up such as `git - depth: 1`, `make -j 4`.; * Refactoring. Removed tailing spaces. Notes:; * I added `gcc-5`'s case as maybe it is minimal support version of gcc for this project.; * I want to replace current case `gcc-7` to latest version `gcc-8` if you like.; * Total running time (""Ran for"" on the Travis page.) becomes faster than current situation. In my repository, total running time is ""15 min 11 sec"", seeing current master branch's test is around 17 min+. See [1]; * Removed `travis_wait`. Without the command, the default behavior is ""when a long running command or compile step regularly takes longer than 10 minutes without producing any output"". [2] I have not faced the situation when I did debug. ; * There are commented out area at the bottom of `.travis.yml`. However as we can run `git log -p .travis.yml` to check past modification, shall we remove the commented out ""whitelist"" area?. [1] https://travis-ci.org/junaruga/salmon/builds/417976633; [2] https://docs.travis-ci.com/user/common-build-problems/#build-times-out-because-no-output-was-received",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/273
https://github.com/COMBINE-lab/salmon/issues/274:110,Availability,down,downstream,110,"Hi, ; I am trying to calculate the alignment rate of each cellular barcode in the final expression matrix for downstream filtering. What is the best way to accomplish this with Alevin data? . I am currently using the _filtered_cb_frequency.txt_ file from _--dumpBfh_ and dividing the sum of each cell barcode's row in the gene expression matrix by the corresponding value in _filtered_cb_frequency.txt._ I assumed that that file lists the number of filtered reads that alignment was attempted on for each cellular barcode. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/274
https://github.com/COMBINE-lab/salmon/issues/275:46,Availability,error,error,46,"Currently on develop branch, there is a build error. https://travis-ci.org/COMBINE-lab/salmon/builds/418288039; https://api.travis-ci.org/v3/job/415232259/log.txt. ```; cd /home/travis/build/COMBINE-lab/salmon/external/boost_1_66_0 && CC=/usr/bin/gcc-7 CXX=/usr/bin/g++-7 /home/travis/build/COMBINE-lab/salmon/external/boost_1_66_0/b2 -d0 -j2 --with-iostreams --with-atomic --with-chrono --with-container --with-date_time --with-exception --with-filesystem --with-graph --with-graph_parallel --with-math --with-program_options --with-system --with-locale --with-timer toolset=gcc toolset=gcc cxxflags=-std=c++14 ""cxxflags= -std=c++14 -I/home/travis/build/COMBINE-lab/salmon/external/install/include -L/home/travis/build/COMBINE-lab/salmon/external/install/lib"" link=static install. g++: error: unrecognized command line option ‘-std=c++14’; ```. I suspect the `g++` (Not `g++-N`) is wrongly used for to build boost.; As a result, the old version `g++` version 4.8 does not support `-std=c++14`. Maybe. https://www.boost.org/doc/libs/1_66_0/more/getting_started/unix-variants.html; https://stackoverflow.com/questions/5346454/building-boost-with-different-gcc-version. Maybe below kind of process is necessary if CC=gcc-N. ```; $ echo ""using gcc : 7 : /usr/bin/g++-7 ; "" >> tools/build/src/user-config.jam; $ ./bootstrap.sh ...; $ ./b2 --toolset=gcc-7 ...; ```. Here is my work to fix the issue.; Still working in progress.; But you can imagine how I am trying to fix it. I am not familiar with the `cmake`.; https://github.com/junaruga/salmon/commit/6cb73098155f0e776d4eb68bc639f3d761dd8963. If possible, I want you to fix this issue :)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/275
https://github.com/COMBINE-lab/salmon/issues/275:787,Availability,error,error,787,"Currently on develop branch, there is a build error. https://travis-ci.org/COMBINE-lab/salmon/builds/418288039; https://api.travis-ci.org/v3/job/415232259/log.txt. ```; cd /home/travis/build/COMBINE-lab/salmon/external/boost_1_66_0 && CC=/usr/bin/gcc-7 CXX=/usr/bin/g++-7 /home/travis/build/COMBINE-lab/salmon/external/boost_1_66_0/b2 -d0 -j2 --with-iostreams --with-atomic --with-chrono --with-container --with-date_time --with-exception --with-filesystem --with-graph --with-graph_parallel --with-math --with-program_options --with-system --with-locale --with-timer toolset=gcc toolset=gcc cxxflags=-std=c++14 ""cxxflags= -std=c++14 -I/home/travis/build/COMBINE-lab/salmon/external/install/include -L/home/travis/build/COMBINE-lab/salmon/external/install/lib"" link=static install. g++: error: unrecognized command line option ‘-std=c++14’; ```. I suspect the `g++` (Not `g++-N`) is wrongly used for to build boost.; As a result, the old version `g++` version 4.8 does not support `-std=c++14`. Maybe. https://www.boost.org/doc/libs/1_66_0/more/getting_started/unix-variants.html; https://stackoverflow.com/questions/5346454/building-boost-with-different-gcc-version. Maybe below kind of process is necessary if CC=gcc-N. ```; $ echo ""using gcc : 7 : /usr/bin/g++-7 ; "" >> tools/build/src/user-config.jam; $ ./bootstrap.sh ...; $ ./b2 --toolset=gcc-7 ...; ```. Here is my work to fix the issue.; Still working in progress.; But you can imagine how I am trying to fix it. I am not familiar with the `cmake`.; https://github.com/junaruga/salmon/commit/6cb73098155f0e776d4eb68bc639f3d761dd8963. If possible, I want you to fix this issue :)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/275
https://github.com/COMBINE-lab/salmon/issues/275:1229,Availability,echo,echo,1229,"Currently on develop branch, there is a build error. https://travis-ci.org/COMBINE-lab/salmon/builds/418288039; https://api.travis-ci.org/v3/job/415232259/log.txt. ```; cd /home/travis/build/COMBINE-lab/salmon/external/boost_1_66_0 && CC=/usr/bin/gcc-7 CXX=/usr/bin/g++-7 /home/travis/build/COMBINE-lab/salmon/external/boost_1_66_0/b2 -d0 -j2 --with-iostreams --with-atomic --with-chrono --with-container --with-date_time --with-exception --with-filesystem --with-graph --with-graph_parallel --with-math --with-program_options --with-system --with-locale --with-timer toolset=gcc toolset=gcc cxxflags=-std=c++14 ""cxxflags= -std=c++14 -I/home/travis/build/COMBINE-lab/salmon/external/install/include -L/home/travis/build/COMBINE-lab/salmon/external/install/lib"" link=static install. g++: error: unrecognized command line option ‘-std=c++14’; ```. I suspect the `g++` (Not `g++-N`) is wrongly used for to build boost.; As a result, the old version `g++` version 4.8 does not support `-std=c++14`. Maybe. https://www.boost.org/doc/libs/1_66_0/more/getting_started/unix-variants.html; https://stackoverflow.com/questions/5346454/building-boost-with-different-gcc-version. Maybe below kind of process is necessary if CC=gcc-N. ```; $ echo ""using gcc : 7 : /usr/bin/g++-7 ; "" >> tools/build/src/user-config.jam; $ ./bootstrap.sh ...; $ ./b2 --toolset=gcc-7 ...; ```. Here is my work to fix the issue.; Still working in progress.; But you can imagine how I am trying to fix it. I am not familiar with the `cmake`.; https://github.com/junaruga/salmon/commit/6cb73098155f0e776d4eb68bc639f3d761dd8963. If possible, I want you to fix this issue :)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/275
https://github.com/COMBINE-lab/salmon/issues/275:683,Deployability,install,install,683,"Currently on develop branch, there is a build error. https://travis-ci.org/COMBINE-lab/salmon/builds/418288039; https://api.travis-ci.org/v3/job/415232259/log.txt. ```; cd /home/travis/build/COMBINE-lab/salmon/external/boost_1_66_0 && CC=/usr/bin/gcc-7 CXX=/usr/bin/g++-7 /home/travis/build/COMBINE-lab/salmon/external/boost_1_66_0/b2 -d0 -j2 --with-iostreams --with-atomic --with-chrono --with-container --with-date_time --with-exception --with-filesystem --with-graph --with-graph_parallel --with-math --with-program_options --with-system --with-locale --with-timer toolset=gcc toolset=gcc cxxflags=-std=c++14 ""cxxflags= -std=c++14 -I/home/travis/build/COMBINE-lab/salmon/external/install/include -L/home/travis/build/COMBINE-lab/salmon/external/install/lib"" link=static install. g++: error: unrecognized command line option ‘-std=c++14’; ```. I suspect the `g++` (Not `g++-N`) is wrongly used for to build boost.; As a result, the old version `g++` version 4.8 does not support `-std=c++14`. Maybe. https://www.boost.org/doc/libs/1_66_0/more/getting_started/unix-variants.html; https://stackoverflow.com/questions/5346454/building-boost-with-different-gcc-version. Maybe below kind of process is necessary if CC=gcc-N. ```; $ echo ""using gcc : 7 : /usr/bin/g++-7 ; "" >> tools/build/src/user-config.jam; $ ./bootstrap.sh ...; $ ./b2 --toolset=gcc-7 ...; ```. Here is my work to fix the issue.; Still working in progress.; But you can imagine how I am trying to fix it. I am not familiar with the `cmake`.; https://github.com/junaruga/salmon/commit/6cb73098155f0e776d4eb68bc639f3d761dd8963. If possible, I want you to fix this issue :)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/275
https://github.com/COMBINE-lab/salmon/issues/275:748,Deployability,install,install,748,"Currently on develop branch, there is a build error. https://travis-ci.org/COMBINE-lab/salmon/builds/418288039; https://api.travis-ci.org/v3/job/415232259/log.txt. ```; cd /home/travis/build/COMBINE-lab/salmon/external/boost_1_66_0 && CC=/usr/bin/gcc-7 CXX=/usr/bin/g++-7 /home/travis/build/COMBINE-lab/salmon/external/boost_1_66_0/b2 -d0 -j2 --with-iostreams --with-atomic --with-chrono --with-container --with-date_time --with-exception --with-filesystem --with-graph --with-graph_parallel --with-math --with-program_options --with-system --with-locale --with-timer toolset=gcc toolset=gcc cxxflags=-std=c++14 ""cxxflags= -std=c++14 -I/home/travis/build/COMBINE-lab/salmon/external/install/include -L/home/travis/build/COMBINE-lab/salmon/external/install/lib"" link=static install. g++: error: unrecognized command line option ‘-std=c++14’; ```. I suspect the `g++` (Not `g++-N`) is wrongly used for to build boost.; As a result, the old version `g++` version 4.8 does not support `-std=c++14`. Maybe. https://www.boost.org/doc/libs/1_66_0/more/getting_started/unix-variants.html; https://stackoverflow.com/questions/5346454/building-boost-with-different-gcc-version. Maybe below kind of process is necessary if CC=gcc-N. ```; $ echo ""using gcc : 7 : /usr/bin/g++-7 ; "" >> tools/build/src/user-config.jam; $ ./bootstrap.sh ...; $ ./b2 --toolset=gcc-7 ...; ```. Here is my work to fix the issue.; Still working in progress.; But you can imagine how I am trying to fix it. I am not familiar with the `cmake`.; https://github.com/junaruga/salmon/commit/6cb73098155f0e776d4eb68bc639f3d761dd8963. If possible, I want you to fix this issue :)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/275
https://github.com/COMBINE-lab/salmon/issues/275:773,Deployability,install,install,773,"Currently on develop branch, there is a build error. https://travis-ci.org/COMBINE-lab/salmon/builds/418288039; https://api.travis-ci.org/v3/job/415232259/log.txt. ```; cd /home/travis/build/COMBINE-lab/salmon/external/boost_1_66_0 && CC=/usr/bin/gcc-7 CXX=/usr/bin/g++-7 /home/travis/build/COMBINE-lab/salmon/external/boost_1_66_0/b2 -d0 -j2 --with-iostreams --with-atomic --with-chrono --with-container --with-date_time --with-exception --with-filesystem --with-graph --with-graph_parallel --with-math --with-program_options --with-system --with-locale --with-timer toolset=gcc toolset=gcc cxxflags=-std=c++14 ""cxxflags= -std=c++14 -I/home/travis/build/COMBINE-lab/salmon/external/install/include -L/home/travis/build/COMBINE-lab/salmon/external/install/lib"" link=static install. g++: error: unrecognized command line option ‘-std=c++14’; ```. I suspect the `g++` (Not `g++-N`) is wrongly used for to build boost.; As a result, the old version `g++` version 4.8 does not support `-std=c++14`. Maybe. https://www.boost.org/doc/libs/1_66_0/more/getting_started/unix-variants.html; https://stackoverflow.com/questions/5346454/building-boost-with-different-gcc-version. Maybe below kind of process is necessary if CC=gcc-N. ```; $ echo ""using gcc : 7 : /usr/bin/g++-7 ; "" >> tools/build/src/user-config.jam; $ ./bootstrap.sh ...; $ ./b2 --toolset=gcc-7 ...; ```. Here is my work to fix the issue.; Still working in progress.; But you can imagine how I am trying to fix it. I am not familiar with the `cmake`.; https://github.com/junaruga/salmon/commit/6cb73098155f0e776d4eb68bc639f3d761dd8963. If possible, I want you to fix this issue :)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/275
https://github.com/COMBINE-lab/salmon/issues/275:1294,Modifiability,config,config,1294,"Currently on develop branch, there is a build error. https://travis-ci.org/COMBINE-lab/salmon/builds/418288039; https://api.travis-ci.org/v3/job/415232259/log.txt. ```; cd /home/travis/build/COMBINE-lab/salmon/external/boost_1_66_0 && CC=/usr/bin/gcc-7 CXX=/usr/bin/g++-7 /home/travis/build/COMBINE-lab/salmon/external/boost_1_66_0/b2 -d0 -j2 --with-iostreams --with-atomic --with-chrono --with-container --with-date_time --with-exception --with-filesystem --with-graph --with-graph_parallel --with-math --with-program_options --with-system --with-locale --with-timer toolset=gcc toolset=gcc cxxflags=-std=c++14 ""cxxflags= -std=c++14 -I/home/travis/build/COMBINE-lab/salmon/external/install/include -L/home/travis/build/COMBINE-lab/salmon/external/install/lib"" link=static install. g++: error: unrecognized command line option ‘-std=c++14’; ```. I suspect the `g++` (Not `g++-N`) is wrongly used for to build boost.; As a result, the old version `g++` version 4.8 does not support `-std=c++14`. Maybe. https://www.boost.org/doc/libs/1_66_0/more/getting_started/unix-variants.html; https://stackoverflow.com/questions/5346454/building-boost-with-different-gcc-version. Maybe below kind of process is necessary if CC=gcc-N. ```; $ echo ""using gcc : 7 : /usr/bin/g++-7 ; "" >> tools/build/src/user-config.jam; $ ./bootstrap.sh ...; $ ./b2 --toolset=gcc-7 ...; ```. Here is my work to fix the issue.; Still working in progress.; But you can imagine how I am trying to fix it. I am not familiar with the `cmake`.; https://github.com/junaruga/salmon/commit/6cb73098155f0e776d4eb68bc639f3d761dd8963. If possible, I want you to fix this issue :)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/275
https://github.com/COMBINE-lab/salmon/issues/275:155,Testability,log,log,155,"Currently on develop branch, there is a build error. https://travis-ci.org/COMBINE-lab/salmon/builds/418288039; https://api.travis-ci.org/v3/job/415232259/log.txt. ```; cd /home/travis/build/COMBINE-lab/salmon/external/boost_1_66_0 && CC=/usr/bin/gcc-7 CXX=/usr/bin/g++-7 /home/travis/build/COMBINE-lab/salmon/external/boost_1_66_0/b2 -d0 -j2 --with-iostreams --with-atomic --with-chrono --with-container --with-date_time --with-exception --with-filesystem --with-graph --with-graph_parallel --with-math --with-program_options --with-system --with-locale --with-timer toolset=gcc toolset=gcc cxxflags=-std=c++14 ""cxxflags= -std=c++14 -I/home/travis/build/COMBINE-lab/salmon/external/install/include -L/home/travis/build/COMBINE-lab/salmon/external/install/lib"" link=static install. g++: error: unrecognized command line option ‘-std=c++14’; ```. I suspect the `g++` (Not `g++-N`) is wrongly used for to build boost.; As a result, the old version `g++` version 4.8 does not support `-std=c++14`. Maybe. https://www.boost.org/doc/libs/1_66_0/more/getting_started/unix-variants.html; https://stackoverflow.com/questions/5346454/building-boost-with-different-gcc-version. Maybe below kind of process is necessary if CC=gcc-N. ```; $ echo ""using gcc : 7 : /usr/bin/g++-7 ; "" >> tools/build/src/user-config.jam; $ ./bootstrap.sh ...; $ ./b2 --toolset=gcc-7 ...; ```. Here is my work to fix the issue.; Still working in progress.; But you can imagine how I am trying to fix it. I am not familiar with the `cmake`.; https://github.com/junaruga/salmon/commit/6cb73098155f0e776d4eb68bc639f3d761dd8963. If possible, I want you to fix this issue :)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/275
https://github.com/COMBINE-lab/salmon/pull/276:128,Availability,error,error,128,"This pull-request is for develop branch.; This fixes https://github.com/COMBINE-lab/salmon/issues/275 . The reason of the build error was because b2 was always built with ""gcc"".; I added something like below code. ```; echo ""using gcc : ${CC_VERSION} : ${CMAKE_CXX_COMPILER} ;"" > ${CMAKE_CURRENT_SOURCE_DIR}/external/boost_1_66_0/tools/build/src/user-config.jam. /path/to/b2 .. toolset=${CC} ...; ```; ; There are still challenges to fix it. 1. The `make test` was finished with timeout. When setting `travis_wait 30 make test`, still failed with the timeout. Maybe we need to change the unit test logic to output something (log or progress bar) regularly to `stdout` during the test process or change the test logic itself. It is freezing at the below point. ```; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process ; Test project /home/travis/build/junaruga/salmon/build; Start 1: unit_tests; ```. 2. The `b2` parameter string `toolset=gcc-7 cxxflags=-std=c++14` is duplicated like this. Maybe we can change the logic in `CMakeLists.txt`. ```; CC=/usr/bin/gcc-7 CXX=/usr/bin/g++-7 /home/travis/build/junaruga/salmon/external/boost_1_66_0/b2 -d0 -j2 --with-iostreams --with-atomic --with-chrono --with-container --with-date_time --with-exception --with-filesystem --with-graph --with-graph_parallel --with-math --with-program_options --with-system --with-locale --with-timer toolset=gcc-7 toolset=gcc-7 cxxflags=-std=c++14 ""cxxflags= -std=c++14 -I/home/travis/build/junaruga/salmon/external/install/include -L/home/travis/build/junaruga/salmon/external/install/lib"" link=static install; ```. 3. `CMakeLists.txt` and `cmake/*.cmake` have a mixture of the different code formatting style. Aligning for formatting those make us read the files easier. I found the useful information for that. [1][2][3][4].; * 2 or 4 space indent?; * ""Tab"" indent is unintentionally used maybe.; * `set(...)` or `set (...)`.; * `set or SET`. [1] the KDE cmake coding style: https://community.kde.org/Policies/CMake",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/276
https://github.com/COMBINE-lab/salmon/pull/276:219,Availability,echo,echo,219,"This pull-request is for develop branch.; This fixes https://github.com/COMBINE-lab/salmon/issues/275 . The reason of the build error was because b2 was always built with ""gcc"".; I added something like below code. ```; echo ""using gcc : ${CC_VERSION} : ${CMAKE_CXX_COMPILER} ;"" > ${CMAKE_CURRENT_SOURCE_DIR}/external/boost_1_66_0/tools/build/src/user-config.jam. /path/to/b2 .. toolset=${CC} ...; ```; ; There are still challenges to fix it. 1. The `make test` was finished with timeout. When setting `travis_wait 30 make test`, still failed with the timeout. Maybe we need to change the unit test logic to output something (log or progress bar) regularly to `stdout` during the test process or change the test logic itself. It is freezing at the below point. ```; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process ; Test project /home/travis/build/junaruga/salmon/build; Start 1: unit_tests; ```. 2. The `b2` parameter string `toolset=gcc-7 cxxflags=-std=c++14` is duplicated like this. Maybe we can change the logic in `CMakeLists.txt`. ```; CC=/usr/bin/gcc-7 CXX=/usr/bin/g++-7 /home/travis/build/junaruga/salmon/external/boost_1_66_0/b2 -d0 -j2 --with-iostreams --with-atomic --with-chrono --with-container --with-date_time --with-exception --with-filesystem --with-graph --with-graph_parallel --with-math --with-program_options --with-system --with-locale --with-timer toolset=gcc-7 toolset=gcc-7 cxxflags=-std=c++14 ""cxxflags= -std=c++14 -I/home/travis/build/junaruga/salmon/external/install/include -L/home/travis/build/junaruga/salmon/external/install/lib"" link=static install; ```. 3. `CMakeLists.txt` and `cmake/*.cmake` have a mixture of the different code formatting style. Aligning for formatting those make us read the files easier. I found the useful information for that. [1][2][3][4].; * 2 or 4 space indent?; * ""Tab"" indent is unintentionally used maybe.; * `set(...)` or `set (...)`.; * `set or SET`. [1] the KDE cmake coding style: https://community.kde.org/Policies/CMake",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/276
https://github.com/COMBINE-lab/salmon/pull/276:1499,Deployability,install,install,1499,"} ;"" > ${CMAKE_CURRENT_SOURCE_DIR}/external/boost_1_66_0/tools/build/src/user-config.jam. /path/to/b2 .. toolset=${CC} ...; ```; ; There are still challenges to fix it. 1. The `make test` was finished with timeout. When setting `travis_wait 30 make test`, still failed with the timeout. Maybe we need to change the unit test logic to output something (log or progress bar) regularly to `stdout` during the test process or change the test logic itself. It is freezing at the below point. ```; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process ; Test project /home/travis/build/junaruga/salmon/build; Start 1: unit_tests; ```. 2. The `b2` parameter string `toolset=gcc-7 cxxflags=-std=c++14` is duplicated like this. Maybe we can change the logic in `CMakeLists.txt`. ```; CC=/usr/bin/gcc-7 CXX=/usr/bin/g++-7 /home/travis/build/junaruga/salmon/external/boost_1_66_0/b2 -d0 -j2 --with-iostreams --with-atomic --with-chrono --with-container --with-date_time --with-exception --with-filesystem --with-graph --with-graph_parallel --with-math --with-program_options --with-system --with-locale --with-timer toolset=gcc-7 toolset=gcc-7 cxxflags=-std=c++14 ""cxxflags= -std=c++14 -I/home/travis/build/junaruga/salmon/external/install/include -L/home/travis/build/junaruga/salmon/external/install/lib"" link=static install; ```. 3. `CMakeLists.txt` and `cmake/*.cmake` have a mixture of the different code formatting style. Aligning for formatting those make us read the files easier. I found the useful information for that. [1][2][3][4].; * 2 or 4 space indent?; * ""Tab"" indent is unintentionally used maybe.; * `set(...)` or `set (...)`.; * `set or SET`. [1] the KDE cmake coding style: https://community.kde.org/Policies/CMake_Coding_Style; [2] Asking the cmake code formatter: https://stackoverflow.com/questions/41446408/is-there-any-utility-that-can-reformat-a-cmake-file; [3] cmake code formatter: https://github.com/cheshirekow/cmake_format; [4] cmake lint: https://github.com/richq/cmake-lint",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/276
https://github.com/COMBINE-lab/salmon/pull/276:1561,Deployability,install,install,1561,"} ;"" > ${CMAKE_CURRENT_SOURCE_DIR}/external/boost_1_66_0/tools/build/src/user-config.jam. /path/to/b2 .. toolset=${CC} ...; ```; ; There are still challenges to fix it. 1. The `make test` was finished with timeout. When setting `travis_wait 30 make test`, still failed with the timeout. Maybe we need to change the unit test logic to output something (log or progress bar) regularly to `stdout` during the test process or change the test logic itself. It is freezing at the below point. ```; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process ; Test project /home/travis/build/junaruga/salmon/build; Start 1: unit_tests; ```. 2. The `b2` parameter string `toolset=gcc-7 cxxflags=-std=c++14` is duplicated like this. Maybe we can change the logic in `CMakeLists.txt`. ```; CC=/usr/bin/gcc-7 CXX=/usr/bin/g++-7 /home/travis/build/junaruga/salmon/external/boost_1_66_0/b2 -d0 -j2 --with-iostreams --with-atomic --with-chrono --with-container --with-date_time --with-exception --with-filesystem --with-graph --with-graph_parallel --with-math --with-program_options --with-system --with-locale --with-timer toolset=gcc-7 toolset=gcc-7 cxxflags=-std=c++14 ""cxxflags= -std=c++14 -I/home/travis/build/junaruga/salmon/external/install/include -L/home/travis/build/junaruga/salmon/external/install/lib"" link=static install; ```. 3. `CMakeLists.txt` and `cmake/*.cmake` have a mixture of the different code formatting style. Aligning for formatting those make us read the files easier. I found the useful information for that. [1][2][3][4].; * 2 or 4 space indent?; * ""Tab"" indent is unintentionally used maybe.; * `set(...)` or `set (...)`.; * `set or SET`. [1] the KDE cmake coding style: https://community.kde.org/Policies/CMake_Coding_Style; [2] Asking the cmake code formatter: https://stackoverflow.com/questions/41446408/is-there-any-utility-that-can-reformat-a-cmake-file; [3] cmake code formatter: https://github.com/cheshirekow/cmake_format; [4] cmake lint: https://github.com/richq/cmake-lint",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/276
https://github.com/COMBINE-lab/salmon/pull/276:1586,Deployability,install,install,1586,"} ;"" > ${CMAKE_CURRENT_SOURCE_DIR}/external/boost_1_66_0/tools/build/src/user-config.jam. /path/to/b2 .. toolset=${CC} ...; ```; ; There are still challenges to fix it. 1. The `make test` was finished with timeout. When setting `travis_wait 30 make test`, still failed with the timeout. Maybe we need to change the unit test logic to output something (log or progress bar) regularly to `stdout` during the test process or change the test logic itself. It is freezing at the below point. ```; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process ; Test project /home/travis/build/junaruga/salmon/build; Start 1: unit_tests; ```. 2. The `b2` parameter string `toolset=gcc-7 cxxflags=-std=c++14` is duplicated like this. Maybe we can change the logic in `CMakeLists.txt`. ```; CC=/usr/bin/gcc-7 CXX=/usr/bin/g++-7 /home/travis/build/junaruga/salmon/external/boost_1_66_0/b2 -d0 -j2 --with-iostreams --with-atomic --with-chrono --with-container --with-date_time --with-exception --with-filesystem --with-graph --with-graph_parallel --with-math --with-program_options --with-system --with-locale --with-timer toolset=gcc-7 toolset=gcc-7 cxxflags=-std=c++14 ""cxxflags= -std=c++14 -I/home/travis/build/junaruga/salmon/external/install/include -L/home/travis/build/junaruga/salmon/external/install/lib"" link=static install; ```. 3. `CMakeLists.txt` and `cmake/*.cmake` have a mixture of the different code formatting style. Aligning for formatting those make us read the files easier. I found the useful information for that. [1][2][3][4].; * 2 or 4 space indent?; * ""Tab"" indent is unintentionally used maybe.; * `set(...)` or `set (...)`.; * `set or SET`. [1] the KDE cmake coding style: https://community.kde.org/Policies/CMake_Coding_Style; [2] Asking the cmake code formatter: https://stackoverflow.com/questions/41446408/is-there-any-utility-that-can-reformat-a-cmake-file; [3] cmake code formatter: https://github.com/cheshirekow/cmake_format; [4] cmake lint: https://github.com/richq/cmake-lint",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/276
https://github.com/COMBINE-lab/salmon/pull/276:351,Modifiability,config,config,351,"This pull-request is for develop branch.; This fixes https://github.com/COMBINE-lab/salmon/issues/275 . The reason of the build error was because b2 was always built with ""gcc"".; I added something like below code. ```; echo ""using gcc : ${CC_VERSION} : ${CMAKE_CXX_COMPILER} ;"" > ${CMAKE_CURRENT_SOURCE_DIR}/external/boost_1_66_0/tools/build/src/user-config.jam. /path/to/b2 .. toolset=${CC} ...; ```; ; There are still challenges to fix it. 1. The `make test` was finished with timeout. When setting `travis_wait 30 make test`, still failed with the timeout. Maybe we need to change the unit test logic to output something (log or progress bar) regularly to `stdout` during the test process or change the test logic itself. It is freezing at the below point. ```; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process ; Test project /home/travis/build/junaruga/salmon/build; Start 1: unit_tests; ```. 2. The `b2` parameter string `toolset=gcc-7 cxxflags=-std=c++14` is duplicated like this. Maybe we can change the logic in `CMakeLists.txt`. ```; CC=/usr/bin/gcc-7 CXX=/usr/bin/g++-7 /home/travis/build/junaruga/salmon/external/boost_1_66_0/b2 -d0 -j2 --with-iostreams --with-atomic --with-chrono --with-container --with-date_time --with-exception --with-filesystem --with-graph --with-graph_parallel --with-math --with-program_options --with-system --with-locale --with-timer toolset=gcc-7 toolset=gcc-7 cxxflags=-std=c++14 ""cxxflags= -std=c++14 -I/home/travis/build/junaruga/salmon/external/install/include -L/home/travis/build/junaruga/salmon/external/install/lib"" link=static install; ```. 3. `CMakeLists.txt` and `cmake/*.cmake` have a mixture of the different code formatting style. Aligning for formatting those make us read the files easier. I found the useful information for that. [1][2][3][4].; * 2 or 4 space indent?; * ""Tab"" indent is unintentionally used maybe.; * `set(...)` or `set (...)`.; * `set or SET`. [1] the KDE cmake coding style: https://community.kde.org/Policies/CMake",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/276
https://github.com/COMBINE-lab/salmon/pull/276:479,Safety,timeout,timeout,479,"This pull-request is for develop branch.; This fixes https://github.com/COMBINE-lab/salmon/issues/275 . The reason of the build error was because b2 was always built with ""gcc"".; I added something like below code. ```; echo ""using gcc : ${CC_VERSION} : ${CMAKE_CXX_COMPILER} ;"" > ${CMAKE_CURRENT_SOURCE_DIR}/external/boost_1_66_0/tools/build/src/user-config.jam. /path/to/b2 .. toolset=${CC} ...; ```; ; There are still challenges to fix it. 1. The `make test` was finished with timeout. When setting `travis_wait 30 make test`, still failed with the timeout. Maybe we need to change the unit test logic to output something (log or progress bar) regularly to `stdout` during the test process or change the test logic itself. It is freezing at the below point. ```; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process ; Test project /home/travis/build/junaruga/salmon/build; Start 1: unit_tests; ```. 2. The `b2` parameter string `toolset=gcc-7 cxxflags=-std=c++14` is duplicated like this. Maybe we can change the logic in `CMakeLists.txt`. ```; CC=/usr/bin/gcc-7 CXX=/usr/bin/g++-7 /home/travis/build/junaruga/salmon/external/boost_1_66_0/b2 -d0 -j2 --with-iostreams --with-atomic --with-chrono --with-container --with-date_time --with-exception --with-filesystem --with-graph --with-graph_parallel --with-math --with-program_options --with-system --with-locale --with-timer toolset=gcc-7 toolset=gcc-7 cxxflags=-std=c++14 ""cxxflags= -std=c++14 -I/home/travis/build/junaruga/salmon/external/install/include -L/home/travis/build/junaruga/salmon/external/install/lib"" link=static install; ```. 3. `CMakeLists.txt` and `cmake/*.cmake` have a mixture of the different code formatting style. Aligning for formatting those make us read the files easier. I found the useful information for that. [1][2][3][4].; * 2 or 4 space indent?; * ""Tab"" indent is unintentionally used maybe.; * `set(...)` or `set (...)`.; * `set or SET`. [1] the KDE cmake coding style: https://community.kde.org/Policies/CMake",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/276
https://github.com/COMBINE-lab/salmon/pull/276:551,Safety,timeout,timeout,551,"This pull-request is for develop branch.; This fixes https://github.com/COMBINE-lab/salmon/issues/275 . The reason of the build error was because b2 was always built with ""gcc"".; I added something like below code. ```; echo ""using gcc : ${CC_VERSION} : ${CMAKE_CXX_COMPILER} ;"" > ${CMAKE_CURRENT_SOURCE_DIR}/external/boost_1_66_0/tools/build/src/user-config.jam. /path/to/b2 .. toolset=${CC} ...; ```; ; There are still challenges to fix it. 1. The `make test` was finished with timeout. When setting `travis_wait 30 make test`, still failed with the timeout. Maybe we need to change the unit test logic to output something (log or progress bar) regularly to `stdout` during the test process or change the test logic itself. It is freezing at the below point. ```; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process ; Test project /home/travis/build/junaruga/salmon/build; Start 1: unit_tests; ```. 2. The `b2` parameter string `toolset=gcc-7 cxxflags=-std=c++14` is duplicated like this. Maybe we can change the logic in `CMakeLists.txt`. ```; CC=/usr/bin/gcc-7 CXX=/usr/bin/g++-7 /home/travis/build/junaruga/salmon/external/boost_1_66_0/b2 -d0 -j2 --with-iostreams --with-atomic --with-chrono --with-container --with-date_time --with-exception --with-filesystem --with-graph --with-graph_parallel --with-math --with-program_options --with-system --with-locale --with-timer toolset=gcc-7 toolset=gcc-7 cxxflags=-std=c++14 ""cxxflags= -std=c++14 -I/home/travis/build/junaruga/salmon/external/install/include -L/home/travis/build/junaruga/salmon/external/install/lib"" link=static install; ```. 3. `CMakeLists.txt` and `cmake/*.cmake` have a mixture of the different code formatting style. Aligning for formatting those make us read the files easier. I found the useful information for that. [1][2][3][4].; * 2 or 4 space indent?; * ""Tab"" indent is unintentionally used maybe.; * `set(...)` or `set (...)`.; * `set or SET`. [1] the KDE cmake coding style: https://community.kde.org/Policies/CMake",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/276
https://github.com/COMBINE-lab/salmon/pull/276:455,Testability,test,test,455,"This pull-request is for develop branch.; This fixes https://github.com/COMBINE-lab/salmon/issues/275 . The reason of the build error was because b2 was always built with ""gcc"".; I added something like below code. ```; echo ""using gcc : ${CC_VERSION} : ${CMAKE_CXX_COMPILER} ;"" > ${CMAKE_CURRENT_SOURCE_DIR}/external/boost_1_66_0/tools/build/src/user-config.jam. /path/to/b2 .. toolset=${CC} ...; ```; ; There are still challenges to fix it. 1. The `make test` was finished with timeout. When setting `travis_wait 30 make test`, still failed with the timeout. Maybe we need to change the unit test logic to output something (log or progress bar) regularly to `stdout` during the test process or change the test logic itself. It is freezing at the below point. ```; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process ; Test project /home/travis/build/junaruga/salmon/build; Start 1: unit_tests; ```. 2. The `b2` parameter string `toolset=gcc-7 cxxflags=-std=c++14` is duplicated like this. Maybe we can change the logic in `CMakeLists.txt`. ```; CC=/usr/bin/gcc-7 CXX=/usr/bin/g++-7 /home/travis/build/junaruga/salmon/external/boost_1_66_0/b2 -d0 -j2 --with-iostreams --with-atomic --with-chrono --with-container --with-date_time --with-exception --with-filesystem --with-graph --with-graph_parallel --with-math --with-program_options --with-system --with-locale --with-timer toolset=gcc-7 toolset=gcc-7 cxxflags=-std=c++14 ""cxxflags= -std=c++14 -I/home/travis/build/junaruga/salmon/external/install/include -L/home/travis/build/junaruga/salmon/external/install/lib"" link=static install; ```. 3. `CMakeLists.txt` and `cmake/*.cmake` have a mixture of the different code formatting style. Aligning for formatting those make us read the files easier. I found the useful information for that. [1][2][3][4].; * 2 or 4 space indent?; * ""Tab"" indent is unintentionally used maybe.; * `set(...)` or `set (...)`.; * `set or SET`. [1] the KDE cmake coding style: https://community.kde.org/Policies/CMake",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/276
https://github.com/COMBINE-lab/salmon/pull/276:522,Testability,test,test,522,"This pull-request is for develop branch.; This fixes https://github.com/COMBINE-lab/salmon/issues/275 . The reason of the build error was because b2 was always built with ""gcc"".; I added something like below code. ```; echo ""using gcc : ${CC_VERSION} : ${CMAKE_CXX_COMPILER} ;"" > ${CMAKE_CURRENT_SOURCE_DIR}/external/boost_1_66_0/tools/build/src/user-config.jam. /path/to/b2 .. toolset=${CC} ...; ```; ; There are still challenges to fix it. 1. The `make test` was finished with timeout. When setting `travis_wait 30 make test`, still failed with the timeout. Maybe we need to change the unit test logic to output something (log or progress bar) regularly to `stdout` during the test process or change the test logic itself. It is freezing at the below point. ```; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process ; Test project /home/travis/build/junaruga/salmon/build; Start 1: unit_tests; ```. 2. The `b2` parameter string `toolset=gcc-7 cxxflags=-std=c++14` is duplicated like this. Maybe we can change the logic in `CMakeLists.txt`. ```; CC=/usr/bin/gcc-7 CXX=/usr/bin/g++-7 /home/travis/build/junaruga/salmon/external/boost_1_66_0/b2 -d0 -j2 --with-iostreams --with-atomic --with-chrono --with-container --with-date_time --with-exception --with-filesystem --with-graph --with-graph_parallel --with-math --with-program_options --with-system --with-locale --with-timer toolset=gcc-7 toolset=gcc-7 cxxflags=-std=c++14 ""cxxflags= -std=c++14 -I/home/travis/build/junaruga/salmon/external/install/include -L/home/travis/build/junaruga/salmon/external/install/lib"" link=static install; ```. 3. `CMakeLists.txt` and `cmake/*.cmake` have a mixture of the different code formatting style. Aligning for formatting those make us read the files easier. I found the useful information for that. [1][2][3][4].; * 2 or 4 space indent?; * ""Tab"" indent is unintentionally used maybe.; * `set(...)` or `set (...)`.; * `set or SET`. [1] the KDE cmake coding style: https://community.kde.org/Policies/CMake",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/276
https://github.com/COMBINE-lab/salmon/pull/276:593,Testability,test,test,593,"This pull-request is for develop branch.; This fixes https://github.com/COMBINE-lab/salmon/issues/275 . The reason of the build error was because b2 was always built with ""gcc"".; I added something like below code. ```; echo ""using gcc : ${CC_VERSION} : ${CMAKE_CXX_COMPILER} ;"" > ${CMAKE_CURRENT_SOURCE_DIR}/external/boost_1_66_0/tools/build/src/user-config.jam. /path/to/b2 .. toolset=${CC} ...; ```; ; There are still challenges to fix it. 1. The `make test` was finished with timeout. When setting `travis_wait 30 make test`, still failed with the timeout. Maybe we need to change the unit test logic to output something (log or progress bar) regularly to `stdout` during the test process or change the test logic itself. It is freezing at the below point. ```; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process ; Test project /home/travis/build/junaruga/salmon/build; Start 1: unit_tests; ```. 2. The `b2` parameter string `toolset=gcc-7 cxxflags=-std=c++14` is duplicated like this. Maybe we can change the logic in `CMakeLists.txt`. ```; CC=/usr/bin/gcc-7 CXX=/usr/bin/g++-7 /home/travis/build/junaruga/salmon/external/boost_1_66_0/b2 -d0 -j2 --with-iostreams --with-atomic --with-chrono --with-container --with-date_time --with-exception --with-filesystem --with-graph --with-graph_parallel --with-math --with-program_options --with-system --with-locale --with-timer toolset=gcc-7 toolset=gcc-7 cxxflags=-std=c++14 ""cxxflags= -std=c++14 -I/home/travis/build/junaruga/salmon/external/install/include -L/home/travis/build/junaruga/salmon/external/install/lib"" link=static install; ```. 3. `CMakeLists.txt` and `cmake/*.cmake` have a mixture of the different code formatting style. Aligning for formatting those make us read the files easier. I found the useful information for that. [1][2][3][4].; * 2 or 4 space indent?; * ""Tab"" indent is unintentionally used maybe.; * `set(...)` or `set (...)`.; * `set or SET`. [1] the KDE cmake coding style: https://community.kde.org/Policies/CMake",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/276
https://github.com/COMBINE-lab/salmon/pull/276:598,Testability,log,logic,598,"This pull-request is for develop branch.; This fixes https://github.com/COMBINE-lab/salmon/issues/275 . The reason of the build error was because b2 was always built with ""gcc"".; I added something like below code. ```; echo ""using gcc : ${CC_VERSION} : ${CMAKE_CXX_COMPILER} ;"" > ${CMAKE_CURRENT_SOURCE_DIR}/external/boost_1_66_0/tools/build/src/user-config.jam. /path/to/b2 .. toolset=${CC} ...; ```; ; There are still challenges to fix it. 1. The `make test` was finished with timeout. When setting `travis_wait 30 make test`, still failed with the timeout. Maybe we need to change the unit test logic to output something (log or progress bar) regularly to `stdout` during the test process or change the test logic itself. It is freezing at the below point. ```; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process ; Test project /home/travis/build/junaruga/salmon/build; Start 1: unit_tests; ```. 2. The `b2` parameter string `toolset=gcc-7 cxxflags=-std=c++14` is duplicated like this. Maybe we can change the logic in `CMakeLists.txt`. ```; CC=/usr/bin/gcc-7 CXX=/usr/bin/g++-7 /home/travis/build/junaruga/salmon/external/boost_1_66_0/b2 -d0 -j2 --with-iostreams --with-atomic --with-chrono --with-container --with-date_time --with-exception --with-filesystem --with-graph --with-graph_parallel --with-math --with-program_options --with-system --with-locale --with-timer toolset=gcc-7 toolset=gcc-7 cxxflags=-std=c++14 ""cxxflags= -std=c++14 -I/home/travis/build/junaruga/salmon/external/install/include -L/home/travis/build/junaruga/salmon/external/install/lib"" link=static install; ```. 3. `CMakeLists.txt` and `cmake/*.cmake` have a mixture of the different code formatting style. Aligning for formatting those make us read the files easier. I found the useful information for that. [1][2][3][4].; * 2 or 4 space indent?; * ""Tab"" indent is unintentionally used maybe.; * `set(...)` or `set (...)`.; * `set or SET`. [1] the KDE cmake coding style: https://community.kde.org/Policies/CMake",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/276
https://github.com/COMBINE-lab/salmon/pull/276:625,Testability,log,log,625,"This pull-request is for develop branch.; This fixes https://github.com/COMBINE-lab/salmon/issues/275 . The reason of the build error was because b2 was always built with ""gcc"".; I added something like below code. ```; echo ""using gcc : ${CC_VERSION} : ${CMAKE_CXX_COMPILER} ;"" > ${CMAKE_CURRENT_SOURCE_DIR}/external/boost_1_66_0/tools/build/src/user-config.jam. /path/to/b2 .. toolset=${CC} ...; ```; ; There are still challenges to fix it. 1. The `make test` was finished with timeout. When setting `travis_wait 30 make test`, still failed with the timeout. Maybe we need to change the unit test logic to output something (log or progress bar) regularly to `stdout` during the test process or change the test logic itself. It is freezing at the below point. ```; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process ; Test project /home/travis/build/junaruga/salmon/build; Start 1: unit_tests; ```. 2. The `b2` parameter string `toolset=gcc-7 cxxflags=-std=c++14` is duplicated like this. Maybe we can change the logic in `CMakeLists.txt`. ```; CC=/usr/bin/gcc-7 CXX=/usr/bin/g++-7 /home/travis/build/junaruga/salmon/external/boost_1_66_0/b2 -d0 -j2 --with-iostreams --with-atomic --with-chrono --with-container --with-date_time --with-exception --with-filesystem --with-graph --with-graph_parallel --with-math --with-program_options --with-system --with-locale --with-timer toolset=gcc-7 toolset=gcc-7 cxxflags=-std=c++14 ""cxxflags= -std=c++14 -I/home/travis/build/junaruga/salmon/external/install/include -L/home/travis/build/junaruga/salmon/external/install/lib"" link=static install; ```. 3. `CMakeLists.txt` and `cmake/*.cmake` have a mixture of the different code formatting style. Aligning for formatting those make us read the files easier. I found the useful information for that. [1][2][3][4].; * 2 or 4 space indent?; * ""Tab"" indent is unintentionally used maybe.; * `set(...)` or `set (...)`.; * `set or SET`. [1] the KDE cmake coding style: https://community.kde.org/Policies/CMake",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/276
https://github.com/COMBINE-lab/salmon/pull/276:679,Testability,test,test,679,"This pull-request is for develop branch.; This fixes https://github.com/COMBINE-lab/salmon/issues/275 . The reason of the build error was because b2 was always built with ""gcc"".; I added something like below code. ```; echo ""using gcc : ${CC_VERSION} : ${CMAKE_CXX_COMPILER} ;"" > ${CMAKE_CURRENT_SOURCE_DIR}/external/boost_1_66_0/tools/build/src/user-config.jam. /path/to/b2 .. toolset=${CC} ...; ```; ; There are still challenges to fix it. 1. The `make test` was finished with timeout. When setting `travis_wait 30 make test`, still failed with the timeout. Maybe we need to change the unit test logic to output something (log or progress bar) regularly to `stdout` during the test process or change the test logic itself. It is freezing at the below point. ```; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process ; Test project /home/travis/build/junaruga/salmon/build; Start 1: unit_tests; ```. 2. The `b2` parameter string `toolset=gcc-7 cxxflags=-std=c++14` is duplicated like this. Maybe we can change the logic in `CMakeLists.txt`. ```; CC=/usr/bin/gcc-7 CXX=/usr/bin/g++-7 /home/travis/build/junaruga/salmon/external/boost_1_66_0/b2 -d0 -j2 --with-iostreams --with-atomic --with-chrono --with-container --with-date_time --with-exception --with-filesystem --with-graph --with-graph_parallel --with-math --with-program_options --with-system --with-locale --with-timer toolset=gcc-7 toolset=gcc-7 cxxflags=-std=c++14 ""cxxflags= -std=c++14 -I/home/travis/build/junaruga/salmon/external/install/include -L/home/travis/build/junaruga/salmon/external/install/lib"" link=static install; ```. 3. `CMakeLists.txt` and `cmake/*.cmake` have a mixture of the different code formatting style. Aligning for formatting those make us read the files easier. I found the useful information for that. [1][2][3][4].; * 2 or 4 space indent?; * ""Tab"" indent is unintentionally used maybe.; * `set(...)` or `set (...)`.; * `set or SET`. [1] the KDE cmake coding style: https://community.kde.org/Policies/CMake",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/276
https://github.com/COMBINE-lab/salmon/pull/276:706,Testability,test,test,706,"This pull-request is for develop branch.; This fixes https://github.com/COMBINE-lab/salmon/issues/275 . The reason of the build error was because b2 was always built with ""gcc"".; I added something like below code. ```; echo ""using gcc : ${CC_VERSION} : ${CMAKE_CXX_COMPILER} ;"" > ${CMAKE_CURRENT_SOURCE_DIR}/external/boost_1_66_0/tools/build/src/user-config.jam. /path/to/b2 .. toolset=${CC} ...; ```; ; There are still challenges to fix it. 1. The `make test` was finished with timeout. When setting `travis_wait 30 make test`, still failed with the timeout. Maybe we need to change the unit test logic to output something (log or progress bar) regularly to `stdout` during the test process or change the test logic itself. It is freezing at the below point. ```; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process ; Test project /home/travis/build/junaruga/salmon/build; Start 1: unit_tests; ```. 2. The `b2` parameter string `toolset=gcc-7 cxxflags=-std=c++14` is duplicated like this. Maybe we can change the logic in `CMakeLists.txt`. ```; CC=/usr/bin/gcc-7 CXX=/usr/bin/g++-7 /home/travis/build/junaruga/salmon/external/boost_1_66_0/b2 -d0 -j2 --with-iostreams --with-atomic --with-chrono --with-container --with-date_time --with-exception --with-filesystem --with-graph --with-graph_parallel --with-math --with-program_options --with-system --with-locale --with-timer toolset=gcc-7 toolset=gcc-7 cxxflags=-std=c++14 ""cxxflags= -std=c++14 -I/home/travis/build/junaruga/salmon/external/install/include -L/home/travis/build/junaruga/salmon/external/install/lib"" link=static install; ```. 3. `CMakeLists.txt` and `cmake/*.cmake` have a mixture of the different code formatting style. Aligning for formatting those make us read the files easier. I found the useful information for that. [1][2][3][4].; * 2 or 4 space indent?; * ""Tab"" indent is unintentionally used maybe.; * `set(...)` or `set (...)`.; * `set or SET`. [1] the KDE cmake coding style: https://community.kde.org/Policies/CMake",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/276
https://github.com/COMBINE-lab/salmon/pull/276:711,Testability,log,logic,711,"This pull-request is for develop branch.; This fixes https://github.com/COMBINE-lab/salmon/issues/275 . The reason of the build error was because b2 was always built with ""gcc"".; I added something like below code. ```; echo ""using gcc : ${CC_VERSION} : ${CMAKE_CXX_COMPILER} ;"" > ${CMAKE_CURRENT_SOURCE_DIR}/external/boost_1_66_0/tools/build/src/user-config.jam. /path/to/b2 .. toolset=${CC} ...; ```; ; There are still challenges to fix it. 1. The `make test` was finished with timeout. When setting `travis_wait 30 make test`, still failed with the timeout. Maybe we need to change the unit test logic to output something (log or progress bar) regularly to `stdout` during the test process or change the test logic itself. It is freezing at the below point. ```; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process ; Test project /home/travis/build/junaruga/salmon/build; Start 1: unit_tests; ```. 2. The `b2` parameter string `toolset=gcc-7 cxxflags=-std=c++14` is duplicated like this. Maybe we can change the logic in `CMakeLists.txt`. ```; CC=/usr/bin/gcc-7 CXX=/usr/bin/g++-7 /home/travis/build/junaruga/salmon/external/boost_1_66_0/b2 -d0 -j2 --with-iostreams --with-atomic --with-chrono --with-container --with-date_time --with-exception --with-filesystem --with-graph --with-graph_parallel --with-math --with-program_options --with-system --with-locale --with-timer toolset=gcc-7 toolset=gcc-7 cxxflags=-std=c++14 ""cxxflags= -std=c++14 -I/home/travis/build/junaruga/salmon/external/install/include -L/home/travis/build/junaruga/salmon/external/install/lib"" link=static install; ```. 3. `CMakeLists.txt` and `cmake/*.cmake` have a mixture of the different code formatting style. Aligning for formatting those make us read the files easier. I found the useful information for that. [1][2][3][4].; * 2 or 4 space indent?; * ""Tab"" indent is unintentionally used maybe.; * `set(...)` or `set (...)`.; * `set or SET`. [1] the KDE cmake coding style: https://community.kde.org/Policies/CMake",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/276
https://github.com/COMBINE-lab/salmon/pull/276:826,Testability,Test,Test,826,"This pull-request is for develop branch.; This fixes https://github.com/COMBINE-lab/salmon/issues/275 . The reason of the build error was because b2 was always built with ""gcc"".; I added something like below code. ```; echo ""using gcc : ${CC_VERSION} : ${CMAKE_CXX_COMPILER} ;"" > ${CMAKE_CURRENT_SOURCE_DIR}/external/boost_1_66_0/tools/build/src/user-config.jam. /path/to/b2 .. toolset=${CC} ...; ```; ; There are still challenges to fix it. 1. The `make test` was finished with timeout. When setting `travis_wait 30 make test`, still failed with the timeout. Maybe we need to change the unit test logic to output something (log or progress bar) regularly to `stdout` during the test process or change the test logic itself. It is freezing at the below point. ```; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process ; Test project /home/travis/build/junaruga/salmon/build; Start 1: unit_tests; ```. 2. The `b2` parameter string `toolset=gcc-7 cxxflags=-std=c++14` is duplicated like this. Maybe we can change the logic in `CMakeLists.txt`. ```; CC=/usr/bin/gcc-7 CXX=/usr/bin/g++-7 /home/travis/build/junaruga/salmon/external/boost_1_66_0/b2 -d0 -j2 --with-iostreams --with-atomic --with-chrono --with-container --with-date_time --with-exception --with-filesystem --with-graph --with-graph_parallel --with-math --with-program_options --with-system --with-locale --with-timer toolset=gcc-7 toolset=gcc-7 cxxflags=-std=c++14 ""cxxflags= -std=c++14 -I/home/travis/build/junaruga/salmon/external/install/include -L/home/travis/build/junaruga/salmon/external/install/lib"" link=static install; ```. 3. `CMakeLists.txt` and `cmake/*.cmake` have a mixture of the different code formatting style. Aligning for formatting those make us read the files easier. I found the useful information for that. [1][2][3][4].; * 2 or 4 space indent?; * ""Tab"" indent is unintentionally used maybe.; * `set(...)` or `set (...)`.; * `set or SET`. [1] the KDE cmake coding style: https://community.kde.org/Policies/CMake",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/276
https://github.com/COMBINE-lab/salmon/pull/276:1021,Testability,log,logic,1021,"s for develop branch.; This fixes https://github.com/COMBINE-lab/salmon/issues/275 . The reason of the build error was because b2 was always built with ""gcc"".; I added something like below code. ```; echo ""using gcc : ${CC_VERSION} : ${CMAKE_CXX_COMPILER} ;"" > ${CMAKE_CURRENT_SOURCE_DIR}/external/boost_1_66_0/tools/build/src/user-config.jam. /path/to/b2 .. toolset=${CC} ...; ```; ; There are still challenges to fix it. 1. The `make test` was finished with timeout. When setting `travis_wait 30 make test`, still failed with the timeout. Maybe we need to change the unit test logic to output something (log or progress bar) regularly to `stdout` during the test process or change the test logic itself. It is freezing at the below point. ```; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process ; Test project /home/travis/build/junaruga/salmon/build; Start 1: unit_tests; ```. 2. The `b2` parameter string `toolset=gcc-7 cxxflags=-std=c++14` is duplicated like this. Maybe we can change the logic in `CMakeLists.txt`. ```; CC=/usr/bin/gcc-7 CXX=/usr/bin/g++-7 /home/travis/build/junaruga/salmon/external/boost_1_66_0/b2 -d0 -j2 --with-iostreams --with-atomic --with-chrono --with-container --with-date_time --with-exception --with-filesystem --with-graph --with-graph_parallel --with-math --with-program_options --with-system --with-locale --with-timer toolset=gcc-7 toolset=gcc-7 cxxflags=-std=c++14 ""cxxflags= -std=c++14 -I/home/travis/build/junaruga/salmon/external/install/include -L/home/travis/build/junaruga/salmon/external/install/lib"" link=static install; ```. 3. `CMakeLists.txt` and `cmake/*.cmake` have a mixture of the different code formatting style. Aligning for formatting those make us read the files easier. I found the useful information for that. [1][2][3][4].; * 2 or 4 space indent?; * ""Tab"" indent is unintentionally used maybe.; * `set(...)` or `set (...)`.; * `set or SET`. [1] the KDE cmake coding style: https://community.kde.org/Policies/CMake_Coding_Style; [2]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/276
https://github.com/COMBINE-lab/salmon/pull/276:632,Usability,progress bar,progress bar,632,"This pull-request is for develop branch.; This fixes https://github.com/COMBINE-lab/salmon/issues/275 . The reason of the build error was because b2 was always built with ""gcc"".; I added something like below code. ```; echo ""using gcc : ${CC_VERSION} : ${CMAKE_CXX_COMPILER} ;"" > ${CMAKE_CURRENT_SOURCE_DIR}/external/boost_1_66_0/tools/build/src/user-config.jam. /path/to/b2 .. toolset=${CC} ...; ```; ; There are still challenges to fix it. 1. The `make test` was finished with timeout. When setting `travis_wait 30 make test`, still failed with the timeout. Maybe we need to change the unit test logic to output something (log or progress bar) regularly to `stdout` during the test process or change the test logic itself. It is freezing at the below point. ```; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process ; Test project /home/travis/build/junaruga/salmon/build; Start 1: unit_tests; ```. 2. The `b2` parameter string `toolset=gcc-7 cxxflags=-std=c++14` is duplicated like this. Maybe we can change the logic in `CMakeLists.txt`. ```; CC=/usr/bin/gcc-7 CXX=/usr/bin/g++-7 /home/travis/build/junaruga/salmon/external/boost_1_66_0/b2 -d0 -j2 --with-iostreams --with-atomic --with-chrono --with-container --with-date_time --with-exception --with-filesystem --with-graph --with-graph_parallel --with-math --with-program_options --with-system --with-locale --with-timer toolset=gcc-7 toolset=gcc-7 cxxflags=-std=c++14 ""cxxflags= -std=c++14 -I/home/travis/build/junaruga/salmon/external/install/include -L/home/travis/build/junaruga/salmon/external/install/lib"" link=static install; ```. 3. `CMakeLists.txt` and `cmake/*.cmake` have a mixture of the different code formatting style. Aligning for formatting those make us read the files easier. I found the useful information for that. [1][2][3][4].; * 2 or 4 space indent?; * ""Tab"" indent is unintentionally used maybe.; * `set(...)` or `set (...)`.; * `set or SET`. [1] the KDE cmake coding style: https://community.kde.org/Policies/CMake",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/276
https://github.com/COMBINE-lab/salmon/issues/277:191,Deployability,upgrade,upgrade,191,"Whenever I run any command with latest official docker image of salmon, as an example:; ```; docker run combinelab/salmon:latest salmon swim; ```; I get; ```; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/277
https://github.com/COMBINE-lab/salmon/issues/277:243,Deployability,upgrade,upgrades,243,"Whenever I run any command with latest official docker image of salmon, as an example:; ```; docker run combinelab/salmon:latest salmon swim; ```; I get; ```; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/277
https://github.com/COMBINE-lab/salmon/issues/278:71,Availability,error,errors,71,"When I run salmon quantmerge I figure out the commands options only by errors, it would be useful to see the full list of options either in help or salmon docs",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/278
https://github.com/COMBINE-lab/salmon/issues/279:447,Availability,down,downloaded,447,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; No. **Describe the bug**; I ran `salmon quant` and the `lib_format_counts.json` file that was produced contained a `NaN` value which is not valid JSON. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?. 0.9.1. * How was salmon installed (compiled, downloaded executable, through bioconda)?. From our dockerfile:; ```; # Install Salmon; ENV SALMON_VERSION 0.9.1; RUN wget https://github.com/COMBINE-lab/salmon/releases/download/v${SALMON_VERSION}/Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz; RUN tar -xzf Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz; # Create soft link `/usr/local/bin/salmon` that points to the actual program; RUN ln -sf `pwd`/Salmon-latest_linux_x86_64/bin/salmon /usr/local/bin/; RUN rm -f Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz; # End Salmon installation.; ```. * Which reference (e.g. transcriptome) was used?. One we prepared. We got the raw transcriptome from ensembl, then prepared it with:; https://github.com/AlexsLemonade/refinebio/blob/dev/workers/data_refinery_workers/processors/transcriptome_index.py. Which produced:; https://s3.amazonaws.com/data-refinery-test-assets/Caenorhabditis_elegans_short_1527089586.tar.gz. * Which read files were used?. Two read files out of:; https://s3.amazonaws.com/data-refinery-test-assets/salmon_tests.tar.gz. found within that archive at:; `test_experiment/raw/reads_1.fastq`; and ; `test_experiment/raw/reads_2.fastq`. Unfortunately I am not entirely sure where these were found. * Which which program options were used?. The exact invocation of salmon was:; ```; salmon --no-version-check quant -l A --biasSpeedSamp 5 -i /home/user/data_store/processed/TEST/TRANSCRIPTOME_INDEX/index -1 /home/user/data_store/salmon_tests/test_experiment/raw/reads_1.fastq -2 /home/user/data_store/salmon_tests/test_experiment/raw/reads_2.fas",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/279
https://github.com/COMBINE-lab/salmon/issues/279:617,Availability,down,download,617,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; No. **Describe the bug**; I ran `salmon quant` and the `lib_format_counts.json` file that was produced contained a `NaN` value which is not valid JSON. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?. 0.9.1. * How was salmon installed (compiled, downloaded executable, through bioconda)?. From our dockerfile:; ```; # Install Salmon; ENV SALMON_VERSION 0.9.1; RUN wget https://github.com/COMBINE-lab/salmon/releases/download/v${SALMON_VERSION}/Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz; RUN tar -xzf Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz; # Create soft link `/usr/local/bin/salmon` that points to the actual program; RUN ln -sf `pwd`/Salmon-latest_linux_x86_64/bin/salmon /usr/local/bin/; RUN rm -f Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz; # End Salmon installation.; ```. * Which reference (e.g. transcriptome) was used?. One we prepared. We got the raw transcriptome from ensembl, then prepared it with:; https://github.com/AlexsLemonade/refinebio/blob/dev/workers/data_refinery_workers/processors/transcriptome_index.py. Which produced:; https://s3.amazonaws.com/data-refinery-test-assets/Caenorhabditis_elegans_short_1527089586.tar.gz. * Which read files were used?. Two read files out of:; https://s3.amazonaws.com/data-refinery-test-assets/salmon_tests.tar.gz. found within that archive at:; `test_experiment/raw/reads_1.fastq`; and ; `test_experiment/raw/reads_2.fastq`. Unfortunately I am not entirely sure where these were found. * Which which program options were used?. The exact invocation of salmon was:; ```; salmon --no-version-check quant -l A --biasSpeedSamp 5 -i /home/user/data_store/processed/TEST/TRANSCRIPTOME_INDEX/index -1 /home/user/data_store/salmon_tests/test_experiment/raw/reads_1.fastq -2 /home/user/data_store/salmon_tests/test_experiment/raw/reads_2.fas",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/279
https://github.com/COMBINE-lab/salmon/issues/279:2337,Availability,error,error,2337,"finery-test-assets/Caenorhabditis_elegans_short_1527089586.tar.gz. * Which read files were used?. Two read files out of:; https://s3.amazonaws.com/data-refinery-test-assets/salmon_tests.tar.gz. found within that archive at:; `test_experiment/raw/reads_1.fastq`; and ; `test_experiment/raw/reads_2.fastq`. Unfortunately I am not entirely sure where these were found. * Which which program options were used?. The exact invocation of salmon was:; ```; salmon --no-version-check quant -l A --biasSpeedSamp 5 -i /home/user/data_store/processed/TEST/TRANSCRIPTOME_INDEX/index -1 /home/user/data_store/salmon_tests/test_experiment/raw/reads_1.fastq -2 /home/user/data_store/salmon_tests/test_experiment/raw/reads_2.fastq -p 20 -o /home/user/data_store/TEST/test_sample/processed/ --seqBias --gcBias --dumpEq --writeUnmappedNames; ```. **Expected behavior**; This happened while I was modifying the tests for running salmon. I'm guessing that my code isn't quite right yet so something going wrong isn't quite unexpected. However I would have expected an error to come out of Salmon rather than producing JSON which is invalid. **Desktop (please complete the following information):**. Our exact environment for running this is described here:; https://github.com/AlexsLemonade/refinebio/blob/dev/workers/dockerfiles/Dockerfile.salmon. The base image is `ubuntu:16.04`. **Additional context**; Here is the contents of `lib_format_counts.json` file (github won't let me upload it):; ```; {; ""read_files"": ""( /home/user/data_store/salmon_tests/test_experiment/raw/reads_1.fastq, /home/user/data_store/salmon_tests/test_experiment/raw/reads_2.fastq )"",; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 184,; ""num_assigned_fragments"": 184,; ""num_consistent_mappings"": 0,; ""num_inconsistent_mappings"": 255,; ""strand_mapping_bias"": NaN,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 0,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 0,; ""SF"": 126,; ""SR"": 129,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/279
https://github.com/COMBINE-lab/salmon/issues/279:426,Deployability,install,installed,426,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; No. **Describe the bug**; I ran `salmon quant` and the `lib_format_counts.json` file that was produced contained a `NaN` value which is not valid JSON. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?. 0.9.1. * How was salmon installed (compiled, downloaded executable, through bioconda)?. From our dockerfile:; ```; # Install Salmon; ENV SALMON_VERSION 0.9.1; RUN wget https://github.com/COMBINE-lab/salmon/releases/download/v${SALMON_VERSION}/Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz; RUN tar -xzf Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz; # Create soft link `/usr/local/bin/salmon` that points to the actual program; RUN ln -sf `pwd`/Salmon-latest_linux_x86_64/bin/salmon /usr/local/bin/; RUN rm -f Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz; # End Salmon installation.; ```. * Which reference (e.g. transcriptome) was used?. One we prepared. We got the raw transcriptome from ensembl, then prepared it with:; https://github.com/AlexsLemonade/refinebio/blob/dev/workers/data_refinery_workers/processors/transcriptome_index.py. Which produced:; https://s3.amazonaws.com/data-refinery-test-assets/Caenorhabditis_elegans_short_1527089586.tar.gz. * Which read files were used?. Two read files out of:; https://s3.amazonaws.com/data-refinery-test-assets/salmon_tests.tar.gz. found within that archive at:; `test_experiment/raw/reads_1.fastq`; and ; `test_experiment/raw/reads_2.fastq`. Unfortunately I am not entirely sure where these were found. * Which which program options were used?. The exact invocation of salmon was:; ```; salmon --no-version-check quant -l A --biasSpeedSamp 5 -i /home/user/data_store/processed/TEST/TRANSCRIPTOME_INDEX/index -1 /home/user/data_store/salmon_tests/test_experiment/raw/reads_1.fastq -2 /home/user/data_store/salmon_tests/test_experiment/raw/reads_2.fas",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/279
https://github.com/COMBINE-lab/salmon/issues/279:519,Deployability,Install,Install,519,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; No. **Describe the bug**; I ran `salmon quant` and the `lib_format_counts.json` file that was produced contained a `NaN` value which is not valid JSON. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?. 0.9.1. * How was salmon installed (compiled, downloaded executable, through bioconda)?. From our dockerfile:; ```; # Install Salmon; ENV SALMON_VERSION 0.9.1; RUN wget https://github.com/COMBINE-lab/salmon/releases/download/v${SALMON_VERSION}/Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz; RUN tar -xzf Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz; # Create soft link `/usr/local/bin/salmon` that points to the actual program; RUN ln -sf `pwd`/Salmon-latest_linux_x86_64/bin/salmon /usr/local/bin/; RUN rm -f Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz; # End Salmon installation.; ```. * Which reference (e.g. transcriptome) was used?. One we prepared. We got the raw transcriptome from ensembl, then prepared it with:; https://github.com/AlexsLemonade/refinebio/blob/dev/workers/data_refinery_workers/processors/transcriptome_index.py. Which produced:; https://s3.amazonaws.com/data-refinery-test-assets/Caenorhabditis_elegans_short_1527089586.tar.gz. * Which read files were used?. Two read files out of:; https://s3.amazonaws.com/data-refinery-test-assets/salmon_tests.tar.gz. found within that archive at:; `test_experiment/raw/reads_1.fastq`; and ; `test_experiment/raw/reads_2.fastq`. Unfortunately I am not entirely sure where these were found. * Which which program options were used?. The exact invocation of salmon was:; ```; salmon --no-version-check quant -l A --biasSpeedSamp 5 -i /home/user/data_store/processed/TEST/TRANSCRIPTOME_INDEX/index -1 /home/user/data_store/salmon_tests/test_experiment/raw/reads_1.fastq -2 /home/user/data_store/salmon_tests/test_experiment/raw/reads_2.fas",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/279
https://github.com/COMBINE-lab/salmon/issues/279:608,Deployability,release,releases,608,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; No. **Describe the bug**; I ran `salmon quant` and the `lib_format_counts.json` file that was produced contained a `NaN` value which is not valid JSON. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?. 0.9.1. * How was salmon installed (compiled, downloaded executable, through bioconda)?. From our dockerfile:; ```; # Install Salmon; ENV SALMON_VERSION 0.9.1; RUN wget https://github.com/COMBINE-lab/salmon/releases/download/v${SALMON_VERSION}/Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz; RUN tar -xzf Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz; # Create soft link `/usr/local/bin/salmon` that points to the actual program; RUN ln -sf `pwd`/Salmon-latest_linux_x86_64/bin/salmon /usr/local/bin/; RUN rm -f Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz; # End Salmon installation.; ```. * Which reference (e.g. transcriptome) was used?. One we prepared. We got the raw transcriptome from ensembl, then prepared it with:; https://github.com/AlexsLemonade/refinebio/blob/dev/workers/data_refinery_workers/processors/transcriptome_index.py. Which produced:; https://s3.amazonaws.com/data-refinery-test-assets/Caenorhabditis_elegans_short_1527089586.tar.gz. * Which read files were used?. Two read files out of:; https://s3.amazonaws.com/data-refinery-test-assets/salmon_tests.tar.gz. found within that archive at:; `test_experiment/raw/reads_1.fastq`; and ; `test_experiment/raw/reads_2.fastq`. Unfortunately I am not entirely sure where these were found. * Which which program options were used?. The exact invocation of salmon was:; ```; salmon --no-version-check quant -l A --biasSpeedSamp 5 -i /home/user/data_store/processed/TEST/TRANSCRIPTOME_INDEX/index -1 /home/user/data_store/salmon_tests/test_experiment/raw/reads_1.fastq -2 /home/user/data_store/salmon_tests/test_experiment/raw/reads_2.fas",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/279
https://github.com/COMBINE-lab/salmon/issues/279:969,Deployability,install,installation,969,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; No. **Describe the bug**; I ran `salmon quant` and the `lib_format_counts.json` file that was produced contained a `NaN` value which is not valid JSON. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?. 0.9.1. * How was salmon installed (compiled, downloaded executable, through bioconda)?. From our dockerfile:; ```; # Install Salmon; ENV SALMON_VERSION 0.9.1; RUN wget https://github.com/COMBINE-lab/salmon/releases/download/v${SALMON_VERSION}/Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz; RUN tar -xzf Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz; # Create soft link `/usr/local/bin/salmon` that points to the actual program; RUN ln -sf `pwd`/Salmon-latest_linux_x86_64/bin/salmon /usr/local/bin/; RUN rm -f Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz; # End Salmon installation.; ```. * Which reference (e.g. transcriptome) was used?. One we prepared. We got the raw transcriptome from ensembl, then prepared it with:; https://github.com/AlexsLemonade/refinebio/blob/dev/workers/data_refinery_workers/processors/transcriptome_index.py. Which produced:; https://s3.amazonaws.com/data-refinery-test-assets/Caenorhabditis_elegans_short_1527089586.tar.gz. * Which read files were used?. Two read files out of:; https://s3.amazonaws.com/data-refinery-test-assets/salmon_tests.tar.gz. found within that archive at:; `test_experiment/raw/reads_1.fastq`; and ; `test_experiment/raw/reads_2.fastq`. Unfortunately I am not entirely sure where these were found. * Which which program options were used?. The exact invocation of salmon was:; ```; salmon --no-version-check quant -l A --biasSpeedSamp 5 -i /home/user/data_store/processed/TEST/TRANSCRIPTOME_INDEX/index -1 /home/user/data_store/salmon_tests/test_experiment/raw/reads_1.fastq -2 /home/user/data_store/salmon_tests/test_experiment/raw/reads_2.fas",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/279
https://github.com/COMBINE-lab/salmon/issues/279:1296,Testability,test,test-assets,1296,"please provide at least the following information:. * Which version of salmon was used?. 0.9.1. * How was salmon installed (compiled, downloaded executable, through bioconda)?. From our dockerfile:; ```; # Install Salmon; ENV SALMON_VERSION 0.9.1; RUN wget https://github.com/COMBINE-lab/salmon/releases/download/v${SALMON_VERSION}/Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz; RUN tar -xzf Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz; # Create soft link `/usr/local/bin/salmon` that points to the actual program; RUN ln -sf `pwd`/Salmon-latest_linux_x86_64/bin/salmon /usr/local/bin/; RUN rm -f Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz; # End Salmon installation.; ```. * Which reference (e.g. transcriptome) was used?. One we prepared. We got the raw transcriptome from ensembl, then prepared it with:; https://github.com/AlexsLemonade/refinebio/blob/dev/workers/data_refinery_workers/processors/transcriptome_index.py. Which produced:; https://s3.amazonaws.com/data-refinery-test-assets/Caenorhabditis_elegans_short_1527089586.tar.gz. * Which read files were used?. Two read files out of:; https://s3.amazonaws.com/data-refinery-test-assets/salmon_tests.tar.gz. found within that archive at:; `test_experiment/raw/reads_1.fastq`; and ; `test_experiment/raw/reads_2.fastq`. Unfortunately I am not entirely sure where these were found. * Which which program options were used?. The exact invocation of salmon was:; ```; salmon --no-version-check quant -l A --biasSpeedSamp 5 -i /home/user/data_store/processed/TEST/TRANSCRIPTOME_INDEX/index -1 /home/user/data_store/salmon_tests/test_experiment/raw/reads_1.fastq -2 /home/user/data_store/salmon_tests/test_experiment/raw/reads_2.fastq -p 20 -o /home/user/data_store/TEST/test_sample/processed/ --seqBias --gcBias --dumpEq --writeUnmappedNames; ```. **Expected behavior**; This happened while I was modifying the tests for running salmon. I'm guessing that my code isn't quite right yet so something going wrong isn't quite unexpected. However I",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/279
https://github.com/COMBINE-lab/salmon/issues/279:1450,Testability,test,test-assets,1450,"aded executable, through bioconda)?. From our dockerfile:; ```; # Install Salmon; ENV SALMON_VERSION 0.9.1; RUN wget https://github.com/COMBINE-lab/salmon/releases/download/v${SALMON_VERSION}/Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz; RUN tar -xzf Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz; # Create soft link `/usr/local/bin/salmon` that points to the actual program; RUN ln -sf `pwd`/Salmon-latest_linux_x86_64/bin/salmon /usr/local/bin/; RUN rm -f Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz; # End Salmon installation.; ```. * Which reference (e.g. transcriptome) was used?. One we prepared. We got the raw transcriptome from ensembl, then prepared it with:; https://github.com/AlexsLemonade/refinebio/blob/dev/workers/data_refinery_workers/processors/transcriptome_index.py. Which produced:; https://s3.amazonaws.com/data-refinery-test-assets/Caenorhabditis_elegans_short_1527089586.tar.gz. * Which read files were used?. Two read files out of:; https://s3.amazonaws.com/data-refinery-test-assets/salmon_tests.tar.gz. found within that archive at:; `test_experiment/raw/reads_1.fastq`; and ; `test_experiment/raw/reads_2.fastq`. Unfortunately I am not entirely sure where these were found. * Which which program options were used?. The exact invocation of salmon was:; ```; salmon --no-version-check quant -l A --biasSpeedSamp 5 -i /home/user/data_store/processed/TEST/TRANSCRIPTOME_INDEX/index -1 /home/user/data_store/salmon_tests/test_experiment/raw/reads_1.fastq -2 /home/user/data_store/salmon_tests/test_experiment/raw/reads_2.fastq -p 20 -o /home/user/data_store/TEST/test_sample/processed/ --seqBias --gcBias --dumpEq --writeUnmappedNames; ```. **Expected behavior**; This happened while I was modifying the tests for running salmon. I'm guessing that my code isn't quite right yet so something going wrong isn't quite unexpected. However I would have expected an error to come out of Salmon rather than producing JSON which is invalid. **Desktop (please complete the following inf",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/279
https://github.com/COMBINE-lab/salmon/issues/279:1829,Testability,TEST,TEST,1829," actual program; RUN ln -sf `pwd`/Salmon-latest_linux_x86_64/bin/salmon /usr/local/bin/; RUN rm -f Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz; # End Salmon installation.; ```. * Which reference (e.g. transcriptome) was used?. One we prepared. We got the raw transcriptome from ensembl, then prepared it with:; https://github.com/AlexsLemonade/refinebio/blob/dev/workers/data_refinery_workers/processors/transcriptome_index.py. Which produced:; https://s3.amazonaws.com/data-refinery-test-assets/Caenorhabditis_elegans_short_1527089586.tar.gz. * Which read files were used?. Two read files out of:; https://s3.amazonaws.com/data-refinery-test-assets/salmon_tests.tar.gz. found within that archive at:; `test_experiment/raw/reads_1.fastq`; and ; `test_experiment/raw/reads_2.fastq`. Unfortunately I am not entirely sure where these were found. * Which which program options were used?. The exact invocation of salmon was:; ```; salmon --no-version-check quant -l A --biasSpeedSamp 5 -i /home/user/data_store/processed/TEST/TRANSCRIPTOME_INDEX/index -1 /home/user/data_store/salmon_tests/test_experiment/raw/reads_1.fastq -2 /home/user/data_store/salmon_tests/test_experiment/raw/reads_2.fastq -p 20 -o /home/user/data_store/TEST/test_sample/processed/ --seqBias --gcBias --dumpEq --writeUnmappedNames; ```. **Expected behavior**; This happened while I was modifying the tests for running salmon. I'm guessing that my code isn't quite right yet so something going wrong isn't quite unexpected. However I would have expected an error to come out of Salmon rather than producing JSON which is invalid. **Desktop (please complete the following information):**. Our exact environment for running this is described here:; https://github.com/AlexsLemonade/refinebio/blob/dev/workers/dockerfiles/Dockerfile.salmon. The base image is `ubuntu:16.04`. **Additional context**; Here is the contents of `lib_format_counts.json` file (github won't let me upload it):; ```; {; ""read_files"": ""( /home/user/data_store/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/279
https://github.com/COMBINE-lab/salmon/issues/279:2035,Testability,TEST,TEST,2035,"e got the raw transcriptome from ensembl, then prepared it with:; https://github.com/AlexsLemonade/refinebio/blob/dev/workers/data_refinery_workers/processors/transcriptome_index.py. Which produced:; https://s3.amazonaws.com/data-refinery-test-assets/Caenorhabditis_elegans_short_1527089586.tar.gz. * Which read files were used?. Two read files out of:; https://s3.amazonaws.com/data-refinery-test-assets/salmon_tests.tar.gz. found within that archive at:; `test_experiment/raw/reads_1.fastq`; and ; `test_experiment/raw/reads_2.fastq`. Unfortunately I am not entirely sure where these were found. * Which which program options were used?. The exact invocation of salmon was:; ```; salmon --no-version-check quant -l A --biasSpeedSamp 5 -i /home/user/data_store/processed/TEST/TRANSCRIPTOME_INDEX/index -1 /home/user/data_store/salmon_tests/test_experiment/raw/reads_1.fastq -2 /home/user/data_store/salmon_tests/test_experiment/raw/reads_2.fastq -p 20 -o /home/user/data_store/TEST/test_sample/processed/ --seqBias --gcBias --dumpEq --writeUnmappedNames; ```. **Expected behavior**; This happened while I was modifying the tests for running salmon. I'm guessing that my code isn't quite right yet so something going wrong isn't quite unexpected. However I would have expected an error to come out of Salmon rather than producing JSON which is invalid. **Desktop (please complete the following information):**. Our exact environment for running this is described here:; https://github.com/AlexsLemonade/refinebio/blob/dev/workers/dockerfiles/Dockerfile.salmon. The base image is `ubuntu:16.04`. **Additional context**; Here is the contents of `lib_format_counts.json` file (github won't let me upload it):; ```; {; ""read_files"": ""( /home/user/data_store/salmon_tests/test_experiment/raw/reads_1.fastq, /home/user/data_store/salmon_tests/test_experiment/raw/reads_2.fastq )"",; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 184,; ""num_assigned_fragments"": 184,",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/279
https://github.com/COMBINE-lab/salmon/issues/279:2181,Testability,test,tests,2181,"ebio/blob/dev/workers/data_refinery_workers/processors/transcriptome_index.py. Which produced:; https://s3.amazonaws.com/data-refinery-test-assets/Caenorhabditis_elegans_short_1527089586.tar.gz. * Which read files were used?. Two read files out of:; https://s3.amazonaws.com/data-refinery-test-assets/salmon_tests.tar.gz. found within that archive at:; `test_experiment/raw/reads_1.fastq`; and ; `test_experiment/raw/reads_2.fastq`. Unfortunately I am not entirely sure where these were found. * Which which program options were used?. The exact invocation of salmon was:; ```; salmon --no-version-check quant -l A --biasSpeedSamp 5 -i /home/user/data_store/processed/TEST/TRANSCRIPTOME_INDEX/index -1 /home/user/data_store/salmon_tests/test_experiment/raw/reads_1.fastq -2 /home/user/data_store/salmon_tests/test_experiment/raw/reads_2.fastq -p 20 -o /home/user/data_store/TEST/test_sample/processed/ --seqBias --gcBias --dumpEq --writeUnmappedNames; ```. **Expected behavior**; This happened while I was modifying the tests for running salmon. I'm guessing that my code isn't quite right yet so something going wrong isn't quite unexpected. However I would have expected an error to come out of Salmon rather than producing JSON which is invalid. **Desktop (please complete the following information):**. Our exact environment for running this is described here:; https://github.com/AlexsLemonade/refinebio/blob/dev/workers/dockerfiles/Dockerfile.salmon. The base image is `ubuntu:16.04`. **Additional context**; Here is the contents of `lib_format_counts.json` file (github won't let me upload it):; ```; {; ""read_files"": ""( /home/user/data_store/salmon_tests/test_experiment/raw/reads_1.fastq, /home/user/data_store/salmon_tests/test_experiment/raw/reads_2.fastq )"",; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 184,; ""num_assigned_fragments"": 184,; ""num_consistent_mappings"": 0,; ""num_inconsistent_mappings"": 255,; ""strand_mapping_bias"": NaN,; ""MSF"": ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/279
https://github.com/COMBINE-lab/salmon/issues/281:17,Availability,down,download,17,"on linux, binary download of salmon: salmon-0.11.2-linux_x86_64. Trying to process some Drop-seq data. Command:. ./salmon-0.11.2-linux_x86_64/bin/salmon alevin -l A -1 data/mSpT3_S2_L001_R1_001.fastq data/mSpT3_S2_L002_R1_001.fastq -2 data/mSpT3_S2_L001_R2_001.fastq data/mSpT3_S2_L002_R2_001.fastq --dropseq -p 10 -o mSpT3 -i mouse_cdna --tgMap biomart.csv. Where I have downloaded the cdna as FASTA from biomart, and also generated a ENSMUST to ENSMUSG biomart.csv mapping file. Log is below. Since this is our first attempt at dropseq I also pulled out the first R1 and R2 sequences, in case these are somehow informative:. R1:; CAGGAGTGGATTTAGTCCTT; CGCGGAAGATGAGCATTATG; TTTCGTGCCGCCCTCCCTCG; ACAGCGACAAGGCTACCTCA; AATAGGGTCAACGATTAGAG; CGGATGGTTCCCAGCTGCCT; ACATTTCCGCGGTAGGGGGG; GTGGCAAGATTTAATATCCG. R2:; GAATANNNNNNNNNNNNNNNNNNNNAAGGATAACAGTTTCCAGTAC; GGACATTGGTCANCNNGCAGACACGGGTCAATGCGGCAAAAAACAA; GCAACNNNNNNNNNNNNNNNNNNNNGACNAGCGGGCTCACCATAAT; GNGTGNNNNNNNNNNNNNNNNNNNNCGANGTGATTTCTGCCCAGTG; CCCGACTGTNCTNNNNAAGGTCAGCAGTTCAAATCCCAGCAACCAC no hits found; GAGTGNNNNNNNNNNNNNNNCNNNGGCGGTTAGTGCTGAGAGTGCG; GCATACTGGTTGNCNNGCTGAAGTTTAAGGGCCTGGTTTTTTGAAA Cdv3 or Ncoa; GCACCCNANNNCNNNNCCGNAGNTCTGAAGATCAAATCACAGCAAA. ============================; ============================; ============================. Version Info: This is the most recent version of Salmon.; Logs will be written to mSpT3/logs; ### salmon (single-cell-based) v0.11.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { A }; ### [ mates1 ] => { data/mSpT3_S2_L001_R1_001.fastq data/mSpT3_S2_L002_R1_001.fastq }; ### [ mates2 ] => { data/mSpT3_S2_L001_R2_001.fastq data/mSpT3_S2_L002_R2_001.fastq }; ### [ dropseq ] => { }; ### [ threads ] => { 10 }; ### [ output ] => { mSpT3 }; ### [ index ] => { mouse_cdna }; ### [ tgMap ] => { biomart.csv }. [2018-08-29 11:26:45.317] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-08-29 11:26",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/281
https://github.com/COMBINE-lab/salmon/issues/281:372,Availability,down,downloaded,372,"on linux, binary download of salmon: salmon-0.11.2-linux_x86_64. Trying to process some Drop-seq data. Command:. ./salmon-0.11.2-linux_x86_64/bin/salmon alevin -l A -1 data/mSpT3_S2_L001_R1_001.fastq data/mSpT3_S2_L002_R1_001.fastq -2 data/mSpT3_S2_L001_R2_001.fastq data/mSpT3_S2_L002_R2_001.fastq --dropseq -p 10 -o mSpT3 -i mouse_cdna --tgMap biomart.csv. Where I have downloaded the cdna as FASTA from biomart, and also generated a ENSMUST to ENSMUSG biomart.csv mapping file. Log is below. Since this is our first attempt at dropseq I also pulled out the first R1 and R2 sequences, in case these are somehow informative:. R1:; CAGGAGTGGATTTAGTCCTT; CGCGGAAGATGAGCATTATG; TTTCGTGCCGCCCTCCCTCG; ACAGCGACAAGGCTACCTCA; AATAGGGTCAACGATTAGAG; CGGATGGTTCCCAGCTGCCT; ACATTTCCGCGGTAGGGGGG; GTGGCAAGATTTAATATCCG. R2:; GAATANNNNNNNNNNNNNNNNNNNNAAGGATAACAGTTTCCAGTAC; GGACATTGGTCANCNNGCAGACACGGGTCAATGCGGCAAAAAACAA; GCAACNNNNNNNNNNNNNNNNNNNNGACNAGCGGGCTCACCATAAT; GNGTGNNNNNNNNNNNNNNNNNNNNCGANGTGATTTCTGCCCAGTG; CCCGACTGTNCTNNNNAAGGTCAGCAGTTCAAATCCCAGCAACCAC no hits found; GAGTGNNNNNNNNNNNNNNNCNNNGGCGGTTAGTGCTGAGAGTGCG; GCATACTGGTTGNCNNGCTGAAGTTTAAGGGCCTGGTTTTTTGAAA Cdv3 or Ncoa; GCACCCNANNNCNNNNCCGNAGNTCTGAAGATCAAATCACAGCAAA. ============================; ============================; ============================. Version Info: This is the most recent version of Salmon.; Logs will be written to mSpT3/logs; ### salmon (single-cell-based) v0.11.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { A }; ### [ mates1 ] => { data/mSpT3_S2_L001_R1_001.fastq data/mSpT3_S2_L002_R1_001.fastq }; ### [ mates2 ] => { data/mSpT3_S2_L001_R2_001.fastq data/mSpT3_S2_L002_R2_001.fastq }; ### [ dropseq ] => { }; ### [ threads ] => { 10 }; ### [ output ] => { mSpT3 }; ### [ index ] => { mouse_cdna }; ### [ tgMap ] => { biomart.csv }. [2018-08-29 11:26:45.317] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-08-29 11:26",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/281
https://github.com/COMBINE-lab/salmon/issues/281:4778,Availability,ERROR,ERROR,4778,"30:57.209] [stderrLog] [info] Done loading index; [2018-08-29 11:30:57.209] [jointLog] [info] done; [2018-08-29 11:30:57.209] [jointLog] [info] Index contained 135226 targets. processed 2 Million fragments; processed 18 Million fragments 2.38179; hits: 42509133, hits per frag: 2.29867. [2018-08-29 11:33:18.039] [jointLog] [info] Computed 59040 rich equivalence classes for further processing; [2018-08-29 11:33:18.039] [jointLog] [info] Counted 8158322 total reads in the equivalence classes ; [2018-08-29 11:33:18.039] [jointLog] [warning] Found 187 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-08-29 11:33:18.039] [jointLog] [info] Mapping rate = 43.5974%. [2018-08-29 11:33:18.039] [jointLog] [info] finished quantifyLibrary(); Analyzed 14 cells (0% of all).vinLog] [info] Starting optimizer; ......; ......; Analyzed 544 cells (16% of all). ERROR: cell doesn't have any read count; ------------------------------------------------------------; Sender: LSF System <lsf@ebi5-164>; Subject: Job 9248384: <./salmon-0.11.2-linux_x86_64/bin/salmon alevin -l A -1 data/mSpT3_S2_L001_R1_001.fastq data/mSpT3_S2_L002_R1_001.fastq -2 data/mSpT3_S2_L001_R2_001.fastq data/mSpT3_S2_L002_R2_001.fastq --dropseq -p 10 -o mSpT3 -i mouse_cdna --tgMap biomart.csv> in cluster <EBI> Exited. Job <./salmon-0.11.2-linux_x86_64/bin/salmon alevin -l A -1 data/mSpT3_S2_L001_R1_001.fastq data/mSpT3_S2_L002_R1_001.fastq -2 data/mSpT3_S2_L001_R2_001.fastq data/mSpT3_S2_L002_R2_001.fastq --dropseq -p 10 -o mSpT3 -i mouse_cdna --tgMap biomart.csv> was submitted from host <ebi-login-001> by user <mahogny> in cluster <EBI>.; Job was executed on host(s) <10*ebi5-164>, in queue <research-rh7>, as user <mahogny> in cluster <EBI>.; </homes/mahogny> was used as the home directory.; </homes/mahogny/common/data/henrikson_celsee_20180825> was used as the working directory.; Started at Wed Aug 29 11:26:42 2018; Results reported at Wed Aug 29 11:33:2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/281
https://github.com/COMBINE-lab/salmon/issues/281:3294,Performance,Load,Loading,3294," [info] Knee found left boundary at 2385 ; [2018-08-29 11:28:19.290] [alevinLog] [warning] Gauss Prediction 0 Too far from knee prediction skipping it; [2018-08-29 11:28:19.290] [alevinLog] [info] Learned InvCov: 568.346 normfactor: 688.271; [2018-08-29 11:28:19.290] [alevinLog] [info] Total 3385(has 1000 low confidence) barcodes; [2018-08-29 11:28:19.297] [alevinLog] [info] Done True Barcode Sampling; [2018-08-29 11:28:19.433] [alevinLog] [info] Done populating Z matrix; [2018-08-29 11:28:19.437] [alevinLog] [info] Done indexing Barcodes; [2018-08-29 11:28:19.437] [alevinLog] [info] Total Unique barcodes found: 215368; [2018-08-29 11:28:19.437] [alevinLog] [info] Used Barcodes except Whitelist: 8563; [2018-08-29 11:28:19.464] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-08-29 11:28:19.477] [alevinLog] [info] parsing read library format; [2018-08-29 11:28:19.477] [jointLog] [info] There is 1 library.; [2018-08-29 11:28:27.306] [stderrLog] [info] Loading Suffix Array ; [2018-08-29 11:28:27.290] [jointLog] [info] Loading Quasi index; [2018-08-29 11:28:27.304] [jointLog] [info] Loading 32-bit quasi index; [2018-08-29 11:29:47.334] [stderrLog] [info] Loading Transcript Info ; [2018-08-29 11:30:08.761] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-08-29 11:30:11.254] [stderrLog] [info] There were 135226 set bits in the bit array; [2018-08-29 11:30:11.311] [stderrLog] [info] Computing transcript lengths; [2018-08-29 11:30:11.311] [stderrLog] [info] Waiting to finish loading hash; [2018-08-29 11:30:57.209] [stderrLog] [info] Done loading index; [2018-08-29 11:30:57.209] [jointLog] [info] done; [2018-08-29 11:30:57.209] [jointLog] [info] Index contained 135226 targets. processed 2 Million fragments; processed 18 Million fragments 2.38179; hits: 42509133, hits per frag: 2.29867. [2018-08-29 11:33:18.039] [jointLog] [info] Computed 59040 rich equivalence classes for further processing; [2018-08-29 11:33:18.039] [jointLog] [info] Counted",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/281
https://github.com/COMBINE-lab/salmon/issues/281:3361,Performance,Load,Loading,3361,"0] [alevinLog] [warning] Gauss Prediction 0 Too far from knee prediction skipping it; [2018-08-29 11:28:19.290] [alevinLog] [info] Learned InvCov: 568.346 normfactor: 688.271; [2018-08-29 11:28:19.290] [alevinLog] [info] Total 3385(has 1000 low confidence) barcodes; [2018-08-29 11:28:19.297] [alevinLog] [info] Done True Barcode Sampling; [2018-08-29 11:28:19.433] [alevinLog] [info] Done populating Z matrix; [2018-08-29 11:28:19.437] [alevinLog] [info] Done indexing Barcodes; [2018-08-29 11:28:19.437] [alevinLog] [info] Total Unique barcodes found: 215368; [2018-08-29 11:28:19.437] [alevinLog] [info] Used Barcodes except Whitelist: 8563; [2018-08-29 11:28:19.464] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-08-29 11:28:19.477] [alevinLog] [info] parsing read library format; [2018-08-29 11:28:19.477] [jointLog] [info] There is 1 library.; [2018-08-29 11:28:27.306] [stderrLog] [info] Loading Suffix Array ; [2018-08-29 11:28:27.290] [jointLog] [info] Loading Quasi index; [2018-08-29 11:28:27.304] [jointLog] [info] Loading 32-bit quasi index; [2018-08-29 11:29:47.334] [stderrLog] [info] Loading Transcript Info ; [2018-08-29 11:30:08.761] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-08-29 11:30:11.254] [stderrLog] [info] There were 135226 set bits in the bit array; [2018-08-29 11:30:11.311] [stderrLog] [info] Computing transcript lengths; [2018-08-29 11:30:11.311] [stderrLog] [info] Waiting to finish loading hash; [2018-08-29 11:30:57.209] [stderrLog] [info] Done loading index; [2018-08-29 11:30:57.209] [jointLog] [info] done; [2018-08-29 11:30:57.209] [jointLog] [info] Index contained 135226 targets. processed 2 Million fragments; processed 18 Million fragments 2.38179; hits: 42509133, hits per frag: 2.29867. [2018-08-29 11:33:18.039] [jointLog] [info] Computed 59040 rich equivalence classes for further processing; [2018-08-29 11:33:18.039] [jointLog] [info] Counted 8158322 total reads in the equivalence classes ; [2018-08-29 11:33",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/281
https://github.com/COMBINE-lab/salmon/issues/281:3426,Performance,Load,Loading,3426,"ion skipping it; [2018-08-29 11:28:19.290] [alevinLog] [info] Learned InvCov: 568.346 normfactor: 688.271; [2018-08-29 11:28:19.290] [alevinLog] [info] Total 3385(has 1000 low confidence) barcodes; [2018-08-29 11:28:19.297] [alevinLog] [info] Done True Barcode Sampling; [2018-08-29 11:28:19.433] [alevinLog] [info] Done populating Z matrix; [2018-08-29 11:28:19.437] [alevinLog] [info] Done indexing Barcodes; [2018-08-29 11:28:19.437] [alevinLog] [info] Total Unique barcodes found: 215368; [2018-08-29 11:28:19.437] [alevinLog] [info] Used Barcodes except Whitelist: 8563; [2018-08-29 11:28:19.464] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-08-29 11:28:19.477] [alevinLog] [info] parsing read library format; [2018-08-29 11:28:19.477] [jointLog] [info] There is 1 library.; [2018-08-29 11:28:27.306] [stderrLog] [info] Loading Suffix Array ; [2018-08-29 11:28:27.290] [jointLog] [info] Loading Quasi index; [2018-08-29 11:28:27.304] [jointLog] [info] Loading 32-bit quasi index; [2018-08-29 11:29:47.334] [stderrLog] [info] Loading Transcript Info ; [2018-08-29 11:30:08.761] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-08-29 11:30:11.254] [stderrLog] [info] There were 135226 set bits in the bit array; [2018-08-29 11:30:11.311] [stderrLog] [info] Computing transcript lengths; [2018-08-29 11:30:11.311] [stderrLog] [info] Waiting to finish loading hash; [2018-08-29 11:30:57.209] [stderrLog] [info] Done loading index; [2018-08-29 11:30:57.209] [jointLog] [info] done; [2018-08-29 11:30:57.209] [jointLog] [info] Index contained 135226 targets. processed 2 Million fragments; processed 18 Million fragments 2.38179; hits: 42509133, hits per frag: 2.29867. [2018-08-29 11:33:18.039] [jointLog] [info] Computed 59040 rich equivalence classes for further processing; [2018-08-29 11:33:18.039] [jointLog] [info] Counted 8158322 total reads in the equivalence classes ; [2018-08-29 11:33:18.039] [jointLog] [warning] Found 187 reads with `N` in the UMI se",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/281
https://github.com/COMBINE-lab/salmon/issues/281:3499,Performance,Load,Loading,3499,"nvCov: 568.346 normfactor: 688.271; [2018-08-29 11:28:19.290] [alevinLog] [info] Total 3385(has 1000 low confidence) barcodes; [2018-08-29 11:28:19.297] [alevinLog] [info] Done True Barcode Sampling; [2018-08-29 11:28:19.433] [alevinLog] [info] Done populating Z matrix; [2018-08-29 11:28:19.437] [alevinLog] [info] Done indexing Barcodes; [2018-08-29 11:28:19.437] [alevinLog] [info] Total Unique barcodes found: 215368; [2018-08-29 11:28:19.437] [alevinLog] [info] Used Barcodes except Whitelist: 8563; [2018-08-29 11:28:19.464] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-08-29 11:28:19.477] [alevinLog] [info] parsing read library format; [2018-08-29 11:28:19.477] [jointLog] [info] There is 1 library.; [2018-08-29 11:28:27.306] [stderrLog] [info] Loading Suffix Array ; [2018-08-29 11:28:27.290] [jointLog] [info] Loading Quasi index; [2018-08-29 11:28:27.304] [jointLog] [info] Loading 32-bit quasi index; [2018-08-29 11:29:47.334] [stderrLog] [info] Loading Transcript Info ; [2018-08-29 11:30:08.761] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-08-29 11:30:11.254] [stderrLog] [info] There were 135226 set bits in the bit array; [2018-08-29 11:30:11.311] [stderrLog] [info] Computing transcript lengths; [2018-08-29 11:30:11.311] [stderrLog] [info] Waiting to finish loading hash; [2018-08-29 11:30:57.209] [stderrLog] [info] Done loading index; [2018-08-29 11:30:57.209] [jointLog] [info] done; [2018-08-29 11:30:57.209] [jointLog] [info] Index contained 135226 targets. processed 2 Million fragments; processed 18 Million fragments 2.38179; hits: 42509133, hits per frag: 2.29867. [2018-08-29 11:33:18.039] [jointLog] [info] Computed 59040 rich equivalence classes for further processing; [2018-08-29 11:33:18.039] [jointLog] [info] Counted 8158322 total reads in the equivalence classes ; [2018-08-29 11:33:18.039] [jointLog] [warning] Found 187 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/281
https://github.com/COMBINE-lab/salmon/issues/281:3570,Performance,Load,Loading,3570,"[info] Total 3385(has 1000 low confidence) barcodes; [2018-08-29 11:28:19.297] [alevinLog] [info] Done True Barcode Sampling; [2018-08-29 11:28:19.433] [alevinLog] [info] Done populating Z matrix; [2018-08-29 11:28:19.437] [alevinLog] [info] Done indexing Barcodes; [2018-08-29 11:28:19.437] [alevinLog] [info] Total Unique barcodes found: 215368; [2018-08-29 11:28:19.437] [alevinLog] [info] Used Barcodes except Whitelist: 8563; [2018-08-29 11:28:19.464] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-08-29 11:28:19.477] [alevinLog] [info] parsing read library format; [2018-08-29 11:28:19.477] [jointLog] [info] There is 1 library.; [2018-08-29 11:28:27.306] [stderrLog] [info] Loading Suffix Array ; [2018-08-29 11:28:27.290] [jointLog] [info] Loading Quasi index; [2018-08-29 11:28:27.304] [jointLog] [info] Loading 32-bit quasi index; [2018-08-29 11:29:47.334] [stderrLog] [info] Loading Transcript Info ; [2018-08-29 11:30:08.761] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-08-29 11:30:11.254] [stderrLog] [info] There were 135226 set bits in the bit array; [2018-08-29 11:30:11.311] [stderrLog] [info] Computing transcript lengths; [2018-08-29 11:30:11.311] [stderrLog] [info] Waiting to finish loading hash; [2018-08-29 11:30:57.209] [stderrLog] [info] Done loading index; [2018-08-29 11:30:57.209] [jointLog] [info] done; [2018-08-29 11:30:57.209] [jointLog] [info] Index contained 135226 targets. processed 2 Million fragments; processed 18 Million fragments 2.38179; hits: 42509133, hits per frag: 2.29867. [2018-08-29 11:33:18.039] [jointLog] [info] Computed 59040 rich equivalence classes for further processing; [2018-08-29 11:33:18.039] [jointLog] [info] Counted 8158322 total reads in the equivalence classes ; [2018-08-29 11:33:18.039] [jointLog] [warning] Found 187 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-08-29 11:33:18.039] [jointLog] [info] Mapping rate = 43",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/281
https://github.com/COMBINE-lab/salmon/issues/281:3829,Performance,load,loading,3829," Done indexing Barcodes; [2018-08-29 11:28:19.437] [alevinLog] [info] Total Unique barcodes found: 215368; [2018-08-29 11:28:19.437] [alevinLog] [info] Used Barcodes except Whitelist: 8563; [2018-08-29 11:28:19.464] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-08-29 11:28:19.477] [alevinLog] [info] parsing read library format; [2018-08-29 11:28:19.477] [jointLog] [info] There is 1 library.; [2018-08-29 11:28:27.306] [stderrLog] [info] Loading Suffix Array ; [2018-08-29 11:28:27.290] [jointLog] [info] Loading Quasi index; [2018-08-29 11:28:27.304] [jointLog] [info] Loading 32-bit quasi index; [2018-08-29 11:29:47.334] [stderrLog] [info] Loading Transcript Info ; [2018-08-29 11:30:08.761] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-08-29 11:30:11.254] [stderrLog] [info] There were 135226 set bits in the bit array; [2018-08-29 11:30:11.311] [stderrLog] [info] Computing transcript lengths; [2018-08-29 11:30:11.311] [stderrLog] [info] Waiting to finish loading hash; [2018-08-29 11:30:57.209] [stderrLog] [info] Done loading index; [2018-08-29 11:30:57.209] [jointLog] [info] done; [2018-08-29 11:30:57.209] [jointLog] [info] Index contained 135226 targets. processed 2 Million fragments; processed 18 Million fragments 2.38179; hits: 42509133, hits per frag: 2.29867. [2018-08-29 11:33:18.039] [jointLog] [info] Computed 59040 rich equivalence classes for further processing; [2018-08-29 11:33:18.039] [jointLog] [info] Counted 8158322 total reads in the equivalence classes ; [2018-08-29 11:33:18.039] [jointLog] [warning] Found 187 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-08-29 11:33:18.039] [jointLog] [info] Mapping rate = 43.5974%. [2018-08-29 11:33:18.039] [jointLog] [info] finished quantifyLibrary(); Analyzed 14 cells (0% of all).vinLog] [info] Starting optimizer; ......; ......; Analyzed 544 cells (16% of all). ERROR: cell doesn't have any read count; -------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/281
https://github.com/COMBINE-lab/salmon/issues/281:3893,Performance,load,loading,3893,"otal Unique barcodes found: 215368; [2018-08-29 11:28:19.437] [alevinLog] [info] Used Barcodes except Whitelist: 8563; [2018-08-29 11:28:19.464] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-08-29 11:28:19.477] [alevinLog] [info] parsing read library format; [2018-08-29 11:28:19.477] [jointLog] [info] There is 1 library.; [2018-08-29 11:28:27.306] [stderrLog] [info] Loading Suffix Array ; [2018-08-29 11:28:27.290] [jointLog] [info] Loading Quasi index; [2018-08-29 11:28:27.304] [jointLog] [info] Loading 32-bit quasi index; [2018-08-29 11:29:47.334] [stderrLog] [info] Loading Transcript Info ; [2018-08-29 11:30:08.761] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-08-29 11:30:11.254] [stderrLog] [info] There were 135226 set bits in the bit array; [2018-08-29 11:30:11.311] [stderrLog] [info] Computing transcript lengths; [2018-08-29 11:30:11.311] [stderrLog] [info] Waiting to finish loading hash; [2018-08-29 11:30:57.209] [stderrLog] [info] Done loading index; [2018-08-29 11:30:57.209] [jointLog] [info] done; [2018-08-29 11:30:57.209] [jointLog] [info] Index contained 135226 targets. processed 2 Million fragments; processed 18 Million fragments 2.38179; hits: 42509133, hits per frag: 2.29867. [2018-08-29 11:33:18.039] [jointLog] [info] Computed 59040 rich equivalence classes for further processing; [2018-08-29 11:33:18.039] [jointLog] [info] Counted 8158322 total reads in the equivalence classes ; [2018-08-29 11:33:18.039] [jointLog] [warning] Found 187 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-08-29 11:33:18.039] [jointLog] [info] Mapping rate = 43.5974%. [2018-08-29 11:33:18.039] [jointLog] [info] finished quantifyLibrary(); Analyzed 14 cells (0% of all).vinLog] [info] Starting optimizer; ......; ......; Analyzed 544 cells (16% of all). ERROR: cell doesn't have any read count; ------------------------------------------------------------; Sender: LSF Syst",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/281
https://github.com/COMBINE-lab/salmon/issues/281:4718,Performance,optimiz,optimizer,4718,"311] [stderrLog] [info] Computing transcript lengths; [2018-08-29 11:30:11.311] [stderrLog] [info] Waiting to finish loading hash; [2018-08-29 11:30:57.209] [stderrLog] [info] Done loading index; [2018-08-29 11:30:57.209] [jointLog] [info] done; [2018-08-29 11:30:57.209] [jointLog] [info] Index contained 135226 targets. processed 2 Million fragments; processed 18 Million fragments 2.38179; hits: 42509133, hits per frag: 2.29867. [2018-08-29 11:33:18.039] [jointLog] [info] Computed 59040 rich equivalence classes for further processing; [2018-08-29 11:33:18.039] [jointLog] [info] Counted 8158322 total reads in the equivalence classes ; [2018-08-29 11:33:18.039] [jointLog] [warning] Found 187 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-08-29 11:33:18.039] [jointLog] [info] Mapping rate = 43.5974%. [2018-08-29 11:33:18.039] [jointLog] [info] finished quantifyLibrary(); Analyzed 14 cells (0% of all).vinLog] [info] Starting optimizer; ......; ......; Analyzed 544 cells (16% of all). ERROR: cell doesn't have any read count; ------------------------------------------------------------; Sender: LSF System <lsf@ebi5-164>; Subject: Job 9248384: <./salmon-0.11.2-linux_x86_64/bin/salmon alevin -l A -1 data/mSpT3_S2_L001_R1_001.fastq data/mSpT3_S2_L002_R1_001.fastq -2 data/mSpT3_S2_L001_R2_001.fastq data/mSpT3_S2_L002_R2_001.fastq --dropseq -p 10 -o mSpT3 -i mouse_cdna --tgMap biomart.csv> in cluster <EBI> Exited. Job <./salmon-0.11.2-linux_x86_64/bin/salmon alevin -l A -1 data/mSpT3_S2_L001_R1_001.fastq data/mSpT3_S2_L002_R1_001.fastq -2 data/mSpT3_S2_L001_R2_001.fastq data/mSpT3_S2_L002_R2_001.fastq --dropseq -p 10 -o mSpT3 -i mouse_cdna --tgMap biomart.csv> was submitted from host <ebi-login-001> by user <mahogny> in cluster <EBI>.; Job was executed on host(s) <10*ebi5-164>, in queue <research-rh7>, as user <mahogny> in cluster <EBI>.; </homes/mahogny> was used as the home directory.; </homes/mahogny/com",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/281
https://github.com/COMBINE-lab/salmon/issues/281:5584,Performance,queue,queue,5584,"4%. [2018-08-29 11:33:18.039] [jointLog] [info] finished quantifyLibrary(); Analyzed 14 cells (0% of all).vinLog] [info] Starting optimizer; ......; ......; Analyzed 544 cells (16% of all). ERROR: cell doesn't have any read count; ------------------------------------------------------------; Sender: LSF System <lsf@ebi5-164>; Subject: Job 9248384: <./salmon-0.11.2-linux_x86_64/bin/salmon alevin -l A -1 data/mSpT3_S2_L001_R1_001.fastq data/mSpT3_S2_L002_R1_001.fastq -2 data/mSpT3_S2_L001_R2_001.fastq data/mSpT3_S2_L002_R2_001.fastq --dropseq -p 10 -o mSpT3 -i mouse_cdna --tgMap biomart.csv> in cluster <EBI> Exited. Job <./salmon-0.11.2-linux_x86_64/bin/salmon alevin -l A -1 data/mSpT3_S2_L001_R1_001.fastq data/mSpT3_S2_L002_R1_001.fastq -2 data/mSpT3_S2_L001_R2_001.fastq data/mSpT3_S2_L002_R2_001.fastq --dropseq -p 10 -o mSpT3 -i mouse_cdna --tgMap biomart.csv> was submitted from host <ebi-login-001> by user <mahogny> in cluster <EBI>.; Job was executed on host(s) <10*ebi5-164>, in queue <research-rh7>, as user <mahogny> in cluster <EBI>.; </homes/mahogny> was used as the home directory.; </homes/mahogny/common/data/henrikson_celsee_20180825> was used as the working directory.; Started at Wed Aug 29 11:26:42 2018; Results reported at Wed Aug 29 11:33:22 2018. Your job looked like:. ------------------------------------------------------------; # LSBATCH: User input; ./salmon-0.11.2-linux_x86_64/bin/salmon alevin -l A -1 data/mSpT3_S2_L001_R1_001.fastq data/mSpT3_S2_L002_R1_001.fastq -2 data/mSpT3_S2_L001_R2_001.fastq data/mSpT3_S2_L002_R2_001.fastq --dropseq -p 10 -o mSpT3 -i mouse_cdna --tgMap biomart.csv; ------------------------------------------------------------. Exited with exit code 1. Resource usage summary:. CPU time : 306.36 sec.; Max Memory : 4490 MB; Average Memory : 2219.44 MB; Total Requested Memory : 30000.00 MB; Delta Memory : 25510.00 MB; (Delta: the difference between total requested memory and actual max usage.); Max Swap : 6420 MB. Max Processes : 3",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/281
https://github.com/COMBINE-lab/salmon/issues/281:2401,Safety,Predict,Prediction,2401,ngle-cell-based) v0.11.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { A }; ### [ mates1 ] => { data/mSpT3_S2_L001_R1_001.fastq data/mSpT3_S2_L002_R1_001.fastq }; ### [ mates2 ] => { data/mSpT3_S2_L001_R2_001.fastq data/mSpT3_S2_L002_R2_001.fastq }; ### [ dropseq ] => { }; ### [ threads ] => { 10 }; ### [ output ] => { mSpT3 }; ### [ index ] => { mouse_cdna }; ### [ tgMap ] => { biomart.csv }. [2018-08-29 11:26:45.317] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-08-29 11:26:45.325] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 18 Million barcodes. [2018-08-29 11:28:11.683] [alevinLog] [info] Done barcode density calculation.; [2018-08-29 11:28:11.683] [alevinLog] [info] # Barcodes Used: 18693290 / 18712858.; [2018-08-29 11:28:17.405] [alevinLog] [info] Knee found left boundary at 2385 ; [2018-08-29 11:28:19.290] [alevinLog] [warning] Gauss Prediction 0 Too far from knee prediction skipping it; [2018-08-29 11:28:19.290] [alevinLog] [info] Learned InvCov: 568.346 normfactor: 688.271; [2018-08-29 11:28:19.290] [alevinLog] [info] Total 3385(has 1000 low confidence) barcodes; [2018-08-29 11:28:19.297] [alevinLog] [info] Done True Barcode Sampling; [2018-08-29 11:28:19.433] [alevinLog] [info] Done populating Z matrix; [2018-08-29 11:28:19.437] [alevinLog] [info] Done indexing Barcodes; [2018-08-29 11:28:19.437] [alevinLog] [info] Total Unique barcodes found: 215368; [2018-08-29 11:28:19.437] [alevinLog] [info] Used Barcodes except Whitelist: 8563; [2018-08-29 11:28:19.464] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-08-29 11:28:19.477] [alevinLog] [info] parsing read library format; [2018-08-29 11:28:19.477] [jointLog] [info] There is 1 library.; [2018-08-29 11:28:27.306] [stderrLog] [info] Loading Suffix Array ; [2018-08-29 11:28:27.290] [jointLog] [info] Loading Quasi index; [2018-08-29 11:28:27.304] [jointLog] [inf,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/281
https://github.com/COMBINE-lab/salmon/issues/281:2432,Safety,predict,prediction,2432,ngle-cell-based) v0.11.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { A }; ### [ mates1 ] => { data/mSpT3_S2_L001_R1_001.fastq data/mSpT3_S2_L002_R1_001.fastq }; ### [ mates2 ] => { data/mSpT3_S2_L001_R2_001.fastq data/mSpT3_S2_L002_R2_001.fastq }; ### [ dropseq ] => { }; ### [ threads ] => { 10 }; ### [ output ] => { mSpT3 }; ### [ index ] => { mouse_cdna }; ### [ tgMap ] => { biomart.csv }. [2018-08-29 11:26:45.317] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-08-29 11:26:45.325] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 18 Million barcodes. [2018-08-29 11:28:11.683] [alevinLog] [info] Done barcode density calculation.; [2018-08-29 11:28:11.683] [alevinLog] [info] # Barcodes Used: 18693290 / 18712858.; [2018-08-29 11:28:17.405] [alevinLog] [info] Knee found left boundary at 2385 ; [2018-08-29 11:28:19.290] [alevinLog] [warning] Gauss Prediction 0 Too far from knee prediction skipping it; [2018-08-29 11:28:19.290] [alevinLog] [info] Learned InvCov: 568.346 normfactor: 688.271; [2018-08-29 11:28:19.290] [alevinLog] [info] Total 3385(has 1000 low confidence) barcodes; [2018-08-29 11:28:19.297] [alevinLog] [info] Done True Barcode Sampling; [2018-08-29 11:28:19.433] [alevinLog] [info] Done populating Z matrix; [2018-08-29 11:28:19.437] [alevinLog] [info] Done indexing Barcodes; [2018-08-29 11:28:19.437] [alevinLog] [info] Total Unique barcodes found: 215368; [2018-08-29 11:28:19.437] [alevinLog] [info] Used Barcodes except Whitelist: 8563; [2018-08-29 11:28:19.464] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-08-29 11:28:19.477] [alevinLog] [info] parsing read library format; [2018-08-29 11:28:19.477] [jointLog] [info] There is 1 library.; [2018-08-29 11:28:27.306] [stderrLog] [info] Loading Suffix Array ; [2018-08-29 11:28:27.290] [jointLog] [info] Loading Quasi index; [2018-08-29 11:28:27.304] [jointLog] [inf,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/281
https://github.com/COMBINE-lab/salmon/issues/281:3837,Security,hash,hash,3837," Done indexing Barcodes; [2018-08-29 11:28:19.437] [alevinLog] [info] Total Unique barcodes found: 215368; [2018-08-29 11:28:19.437] [alevinLog] [info] Used Barcodes except Whitelist: 8563; [2018-08-29 11:28:19.464] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-08-29 11:28:19.477] [alevinLog] [info] parsing read library format; [2018-08-29 11:28:19.477] [jointLog] [info] There is 1 library.; [2018-08-29 11:28:27.306] [stderrLog] [info] Loading Suffix Array ; [2018-08-29 11:28:27.290] [jointLog] [info] Loading Quasi index; [2018-08-29 11:28:27.304] [jointLog] [info] Loading 32-bit quasi index; [2018-08-29 11:29:47.334] [stderrLog] [info] Loading Transcript Info ; [2018-08-29 11:30:08.761] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-08-29 11:30:11.254] [stderrLog] [info] There were 135226 set bits in the bit array; [2018-08-29 11:30:11.311] [stderrLog] [info] Computing transcript lengths; [2018-08-29 11:30:11.311] [stderrLog] [info] Waiting to finish loading hash; [2018-08-29 11:30:57.209] [stderrLog] [info] Done loading index; [2018-08-29 11:30:57.209] [jointLog] [info] done; [2018-08-29 11:30:57.209] [jointLog] [info] Index contained 135226 targets. processed 2 Million fragments; processed 18 Million fragments 2.38179; hits: 42509133, hits per frag: 2.29867. [2018-08-29 11:33:18.039] [jointLog] [info] Computed 59040 rich equivalence classes for further processing; [2018-08-29 11:33:18.039] [jointLog] [info] Counted 8158322 total reads in the equivalence classes ; [2018-08-29 11:33:18.039] [jointLog] [warning] Found 187 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-08-29 11:33:18.039] [jointLog] [info] Mapping rate = 43.5974%. [2018-08-29 11:33:18.039] [jointLog] [info] finished quantifyLibrary(); Analyzed 14 cells (0% of all).vinLog] [info] Starting optimizer; ......; ......; Analyzed 544 cells (16% of all). ERROR: cell doesn't have any read count; -------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/281
https://github.com/COMBINE-lab/salmon/issues/281:481,Testability,Log,Log,481,"on linux, binary download of salmon: salmon-0.11.2-linux_x86_64. Trying to process some Drop-seq data. Command:. ./salmon-0.11.2-linux_x86_64/bin/salmon alevin -l A -1 data/mSpT3_S2_L001_R1_001.fastq data/mSpT3_S2_L002_R1_001.fastq -2 data/mSpT3_S2_L001_R2_001.fastq data/mSpT3_S2_L002_R2_001.fastq --dropseq -p 10 -o mSpT3 -i mouse_cdna --tgMap biomart.csv. Where I have downloaded the cdna as FASTA from biomart, and also generated a ENSMUST to ENSMUSG biomart.csv mapping file. Log is below. Since this is our first attempt at dropseq I also pulled out the first R1 and R2 sequences, in case these are somehow informative:. R1:; CAGGAGTGGATTTAGTCCTT; CGCGGAAGATGAGCATTATG; TTTCGTGCCGCCCTCCCTCG; ACAGCGACAAGGCTACCTCA; AATAGGGTCAACGATTAGAG; CGGATGGTTCCCAGCTGCCT; ACATTTCCGCGGTAGGGGGG; GTGGCAAGATTTAATATCCG. R2:; GAATANNNNNNNNNNNNNNNNNNNNAAGGATAACAGTTTCCAGTAC; GGACATTGGTCANCNNGCAGACACGGGTCAATGCGGCAAAAAACAA; GCAACNNNNNNNNNNNNNNNNNNNNGACNAGCGGGCTCACCATAAT; GNGTGNNNNNNNNNNNNNNNNNNNNCGANGTGATTTCTGCCCAGTG; CCCGACTGTNCTNNNNAAGGTCAGCAGTTCAAATCCCAGCAACCAC no hits found; GAGTGNNNNNNNNNNNNNNNCNNNGGCGGTTAGTGCTGAGAGTGCG; GCATACTGGTTGNCNNGCTGAAGTTTAAGGGCCTGGTTTTTTGAAA Cdv3 or Ncoa; GCACCCNANNNCNNNNCCGNAGNTCTGAAGATCAAATCACAGCAAA. ============================; ============================; ============================. Version Info: This is the most recent version of Salmon.; Logs will be written to mSpT3/logs; ### salmon (single-cell-based) v0.11.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { A }; ### [ mates1 ] => { data/mSpT3_S2_L001_R1_001.fastq data/mSpT3_S2_L002_R1_001.fastq }; ### [ mates2 ] => { data/mSpT3_S2_L001_R2_001.fastq data/mSpT3_S2_L002_R2_001.fastq }; ### [ dropseq ] => { }; ### [ threads ] => { 10 }; ### [ output ] => { mSpT3 }; ### [ index ] => { mouse_cdna }; ### [ tgMap ] => { biomart.csv }. [2018-08-29 11:26:45.317] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-08-29 11:26",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/281
https://github.com/COMBINE-lab/salmon/issues/281:1372,Testability,Log,Logs,1372,"biomart, and also generated a ENSMUST to ENSMUSG biomart.csv mapping file. Log is below. Since this is our first attempt at dropseq I also pulled out the first R1 and R2 sequences, in case these are somehow informative:. R1:; CAGGAGTGGATTTAGTCCTT; CGCGGAAGATGAGCATTATG; TTTCGTGCCGCCCTCCCTCG; ACAGCGACAAGGCTACCTCA; AATAGGGTCAACGATTAGAG; CGGATGGTTCCCAGCTGCCT; ACATTTCCGCGGTAGGGGGG; GTGGCAAGATTTAATATCCG. R2:; GAATANNNNNNNNNNNNNNNNNNNNAAGGATAACAGTTTCCAGTAC; GGACATTGGTCANCNNGCAGACACGGGTCAATGCGGCAAAAAACAA; GCAACNNNNNNNNNNNNNNNNNNNNGACNAGCGGGCTCACCATAAT; GNGTGNNNNNNNNNNNNNNNNNNNNCGANGTGATTTCTGCCCAGTG; CCCGACTGTNCTNNNNAAGGTCAGCAGTTCAAATCCCAGCAACCAC no hits found; GAGTGNNNNNNNNNNNNNNNCNNNGGCGGTTAGTGCTGAGAGTGCG; GCATACTGGTTGNCNNGCTGAAGTTTAAGGGCCTGGTTTTTTGAAA Cdv3 or Ncoa; GCACCCNANNNCNNNNCCGNAGNTCTGAAGATCAAATCACAGCAAA. ============================; ============================; ============================. Version Info: This is the most recent version of Salmon.; Logs will be written to mSpT3/logs; ### salmon (single-cell-based) v0.11.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { A }; ### [ mates1 ] => { data/mSpT3_S2_L001_R1_001.fastq data/mSpT3_S2_L002_R1_001.fastq }; ### [ mates2 ] => { data/mSpT3_S2_L001_R2_001.fastq data/mSpT3_S2_L002_R2_001.fastq }; ### [ dropseq ] => { }; ### [ threads ] => { 10 }; ### [ output ] => { mSpT3 }; ### [ index ] => { mouse_cdna }; ### [ tgMap ] => { biomart.csv }. [2018-08-29 11:26:45.317] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-08-29 11:26:45.325] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 18 Million barcodes. [2018-08-29 11:28:11.683] [alevinLog] [info] Done barcode density calculation.; [2018-08-29 11:28:11.683] [alevinLog] [info] # Barcodes Used: 18693290 / 18712858.; [2018-08-29 11:28:17.405] [alevinLog] [info] Knee found left boundary at 2385 ; [2018-08-29 11:28:19.290] [alevinLog] [warning] Gauss Predi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/281
https://github.com/COMBINE-lab/salmon/issues/281:1402,Testability,log,logs,1402,"biomart, and also generated a ENSMUST to ENSMUSG biomart.csv mapping file. Log is below. Since this is our first attempt at dropseq I also pulled out the first R1 and R2 sequences, in case these are somehow informative:. R1:; CAGGAGTGGATTTAGTCCTT; CGCGGAAGATGAGCATTATG; TTTCGTGCCGCCCTCCCTCG; ACAGCGACAAGGCTACCTCA; AATAGGGTCAACGATTAGAG; CGGATGGTTCCCAGCTGCCT; ACATTTCCGCGGTAGGGGGG; GTGGCAAGATTTAATATCCG. R2:; GAATANNNNNNNNNNNNNNNNNNNNAAGGATAACAGTTTCCAGTAC; GGACATTGGTCANCNNGCAGACACGGGTCAATGCGGCAAAAAACAA; GCAACNNNNNNNNNNNNNNNNNNNNGACNAGCGGGCTCACCATAAT; GNGTGNNNNNNNNNNNNNNNNNNNNCGANGTGATTTCTGCCCAGTG; CCCGACTGTNCTNNNNAAGGTCAGCAGTTCAAATCCCAGCAACCAC no hits found; GAGTGNNNNNNNNNNNNNNNCNNNGGCGGTTAGTGCTGAGAGTGCG; GCATACTGGTTGNCNNGCTGAAGTTTAAGGGCCTGGTTTTTTGAAA Cdv3 or Ncoa; GCACCCNANNNCNNNNCCGNAGNTCTGAAGATCAAATCACAGCAAA. ============================; ============================; ============================. Version Info: This is the most recent version of Salmon.; Logs will be written to mSpT3/logs; ### salmon (single-cell-based) v0.11.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { A }; ### [ mates1 ] => { data/mSpT3_S2_L001_R1_001.fastq data/mSpT3_S2_L002_R1_001.fastq }; ### [ mates2 ] => { data/mSpT3_S2_L001_R2_001.fastq data/mSpT3_S2_L002_R2_001.fastq }; ### [ dropseq ] => { }; ### [ threads ] => { 10 }; ### [ output ] => { mSpT3 }; ### [ index ] => { mouse_cdna }; ### [ tgMap ] => { biomart.csv }. [2018-08-29 11:26:45.317] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-08-29 11:26:45.325] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 18 Million barcodes. [2018-08-29 11:28:11.683] [alevinLog] [info] Done barcode density calculation.; [2018-08-29 11:28:11.683] [alevinLog] [info] # Barcodes Used: 18693290 / 18712858.; [2018-08-29 11:28:17.405] [alevinLog] [info] Knee found left boundary at 2385 ; [2018-08-29 11:28:19.290] [alevinLog] [warning] Gauss Predi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/281
https://github.com/COMBINE-lab/salmon/issues/281:5490,Testability,log,login-,5490," this number is too large; [2018-08-29 11:33:18.039] [jointLog] [info] Mapping rate = 43.5974%. [2018-08-29 11:33:18.039] [jointLog] [info] finished quantifyLibrary(); Analyzed 14 cells (0% of all).vinLog] [info] Starting optimizer; ......; ......; Analyzed 544 cells (16% of all). ERROR: cell doesn't have any read count; ------------------------------------------------------------; Sender: LSF System <lsf@ebi5-164>; Subject: Job 9248384: <./salmon-0.11.2-linux_x86_64/bin/salmon alevin -l A -1 data/mSpT3_S2_L001_R1_001.fastq data/mSpT3_S2_L002_R1_001.fastq -2 data/mSpT3_S2_L001_R2_001.fastq data/mSpT3_S2_L002_R2_001.fastq --dropseq -p 10 -o mSpT3 -i mouse_cdna --tgMap biomart.csv> in cluster <EBI> Exited. Job <./salmon-0.11.2-linux_x86_64/bin/salmon alevin -l A -1 data/mSpT3_S2_L001_R1_001.fastq data/mSpT3_S2_L002_R1_001.fastq -2 data/mSpT3_S2_L001_R2_001.fastq data/mSpT3_S2_L002_R2_001.fastq --dropseq -p 10 -o mSpT3 -i mouse_cdna --tgMap biomart.csv> was submitted from host <ebi-login-001> by user <mahogny> in cluster <EBI>.; Job was executed on host(s) <10*ebi5-164>, in queue <research-rh7>, as user <mahogny> in cluster <EBI>.; </homes/mahogny> was used as the home directory.; </homes/mahogny/common/data/henrikson_celsee_20180825> was used as the working directory.; Started at Wed Aug 29 11:26:42 2018; Results reported at Wed Aug 29 11:33:22 2018. Your job looked like:. ------------------------------------------------------------; # LSBATCH: User input; ./salmon-0.11.2-linux_x86_64/bin/salmon alevin -l A -1 data/mSpT3_S2_L001_R1_001.fastq data/mSpT3_S2_L002_R1_001.fastq -2 data/mSpT3_S2_L001_R2_001.fastq data/mSpT3_S2_L002_R2_001.fastq --dropseq -p 10 -o mSpT3 -i mouse_cdna --tgMap biomart.csv; ------------------------------------------------------------. Exited with exit code 1. Resource usage summary:. CPU time : 306.36 sec.; Max Memory : 4490 MB; Average Memory : 2219.44 MB; Total Requested Memory : 30000.00 MB; Delta Memory : 25510.00 MB; (Delta: the difference",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/281
https://github.com/COMBINE-lab/salmon/issues/281:2501,Usability,Learn,Learned,2501,in ; ### [ libType ] => { A }; ### [ mates1 ] => { data/mSpT3_S2_L001_R1_001.fastq data/mSpT3_S2_L002_R1_001.fastq }; ### [ mates2 ] => { data/mSpT3_S2_L001_R2_001.fastq data/mSpT3_S2_L002_R2_001.fastq }; ### [ dropseq ] => { }; ### [ threads ] => { 10 }; ### [ output ] => { mSpT3 }; ### [ index ] => { mouse_cdna }; ### [ tgMap ] => { biomart.csv }. [2018-08-29 11:26:45.317] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-08-29 11:26:45.325] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 18 Million barcodes. [2018-08-29 11:28:11.683] [alevinLog] [info] Done barcode density calculation.; [2018-08-29 11:28:11.683] [alevinLog] [info] # Barcodes Used: 18693290 / 18712858.; [2018-08-29 11:28:17.405] [alevinLog] [info] Knee found left boundary at 2385 ; [2018-08-29 11:28:19.290] [alevinLog] [warning] Gauss Prediction 0 Too far from knee prediction skipping it; [2018-08-29 11:28:19.290] [alevinLog] [info] Learned InvCov: 568.346 normfactor: 688.271; [2018-08-29 11:28:19.290] [alevinLog] [info] Total 3385(has 1000 low confidence) barcodes; [2018-08-29 11:28:19.297] [alevinLog] [info] Done True Barcode Sampling; [2018-08-29 11:28:19.433] [alevinLog] [info] Done populating Z matrix; [2018-08-29 11:28:19.437] [alevinLog] [info] Done indexing Barcodes; [2018-08-29 11:28:19.437] [alevinLog] [info] Total Unique barcodes found: 215368; [2018-08-29 11:28:19.437] [alevinLog] [info] Used Barcodes except Whitelist: 8563; [2018-08-29 11:28:19.464] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-08-29 11:28:19.477] [alevinLog] [info] parsing read library format; [2018-08-29 11:28:19.477] [jointLog] [info] There is 1 library.; [2018-08-29 11:28:27.306] [stderrLog] [info] Loading Suffix Array ; [2018-08-29 11:28:27.290] [jointLog] [info] Loading Quasi index; [2018-08-29 11:28:27.304] [jointLog] [info] Loading 32-bit quasi index; [2018-08-29 11:29:47.334] [stderrLog] [info] ,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/281
https://github.com/COMBINE-lab/salmon/issues/282:681,Availability,error,error,681,"I've found at least ~100 instances of identical RefSeq IDs that appear on more than one chromosome in the human genome reference. These are a mix of (I'm guessing) chrX/Y homologous genes, miRs, snoRNAs, and other long/short noncoding RNAs. This issue will also apply to genes appearing in genomic regions with sequence from multiple haplotypes (e.g. chr6_qbl_hap6, etc) since those also have identical RefSeq IDs. This is certainly bad practice for annotation purposes, but the consequence is that STAR effectively lumps the duplicates into one transcript model (e.g. 3 appearances of 68 bp miR means STAR annotates as one 204 bp gene), and salmon then finds a discrepancy during error modeling between the annotated and ""STAR-observed"" gene lengths, throwing a fatal error. One fix of course would be to remove duplicated sequences from the gene annotation prior to alignment with STAR, [or to have STAR deal with duplicated sequences differently](https://github.com/alexdobin/STAR/issues/482), but it might be nice to have some sort of check in place downstream as well to avoid failure.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/282
https://github.com/COMBINE-lab/salmon/issues/282:769,Availability,error,error,769,"I've found at least ~100 instances of identical RefSeq IDs that appear on more than one chromosome in the human genome reference. These are a mix of (I'm guessing) chrX/Y homologous genes, miRs, snoRNAs, and other long/short noncoding RNAs. This issue will also apply to genes appearing in genomic regions with sequence from multiple haplotypes (e.g. chr6_qbl_hap6, etc) since those also have identical RefSeq IDs. This is certainly bad practice for annotation purposes, but the consequence is that STAR effectively lumps the duplicates into one transcript model (e.g. 3 appearances of 68 bp miR means STAR annotates as one 204 bp gene), and salmon then finds a discrepancy during error modeling between the annotated and ""STAR-observed"" gene lengths, throwing a fatal error. One fix of course would be to remove duplicated sequences from the gene annotation prior to alignment with STAR, [or to have STAR deal with duplicated sequences differently](https://github.com/alexdobin/STAR/issues/482), but it might be nice to have some sort of check in place downstream as well to avoid failure.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/282
https://github.com/COMBINE-lab/salmon/issues/282:1054,Availability,down,downstream,1054,"I've found at least ~100 instances of identical RefSeq IDs that appear on more than one chromosome in the human genome reference. These are a mix of (I'm guessing) chrX/Y homologous genes, miRs, snoRNAs, and other long/short noncoding RNAs. This issue will also apply to genes appearing in genomic regions with sequence from multiple haplotypes (e.g. chr6_qbl_hap6, etc) since those also have identical RefSeq IDs. This is certainly bad practice for annotation purposes, but the consequence is that STAR effectively lumps the duplicates into one transcript model (e.g. 3 appearances of 68 bp miR means STAR annotates as one 204 bp gene), and salmon then finds a discrepancy during error modeling between the annotated and ""STAR-observed"" gene lengths, throwing a fatal error. One fix of course would be to remove duplicated sequences from the gene annotation prior to alignment with STAR, [or to have STAR deal with duplicated sequences differently](https://github.com/alexdobin/STAR/issues/482), but it might be nice to have some sort of check in place downstream as well to avoid failure.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/282
https://github.com/COMBINE-lab/salmon/issues/282:1082,Availability,failure,failure,1082,"I've found at least ~100 instances of identical RefSeq IDs that appear on more than one chromosome in the human genome reference. These are a mix of (I'm guessing) chrX/Y homologous genes, miRs, snoRNAs, and other long/short noncoding RNAs. This issue will also apply to genes appearing in genomic regions with sequence from multiple haplotypes (e.g. chr6_qbl_hap6, etc) since those also have identical RefSeq IDs. This is certainly bad practice for annotation purposes, but the consequence is that STAR effectively lumps the duplicates into one transcript model (e.g. 3 appearances of 68 bp miR means STAR annotates as one 204 bp gene), and salmon then finds a discrepancy during error modeling between the annotated and ""STAR-observed"" gene lengths, throwing a fatal error. One fix of course would be to remove duplicated sequences from the gene annotation prior to alignment with STAR, [or to have STAR deal with duplicated sequences differently](https://github.com/alexdobin/STAR/issues/482), but it might be nice to have some sort of check in place downstream as well to avoid failure.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/282
https://github.com/COMBINE-lab/salmon/issues/282:1076,Safety,avoid,avoid,1076,"I've found at least ~100 instances of identical RefSeq IDs that appear on more than one chromosome in the human genome reference. These are a mix of (I'm guessing) chrX/Y homologous genes, miRs, snoRNAs, and other long/short noncoding RNAs. This issue will also apply to genes appearing in genomic regions with sequence from multiple haplotypes (e.g. chr6_qbl_hap6, etc) since those also have identical RefSeq IDs. This is certainly bad practice for annotation purposes, but the consequence is that STAR effectively lumps the duplicates into one transcript model (e.g. 3 appearances of 68 bp miR means STAR annotates as one 204 bp gene), and salmon then finds a discrepancy during error modeling between the annotated and ""STAR-observed"" gene lengths, throwing a fatal error. One fix of course would be to remove duplicated sequences from the gene annotation prior to alignment with STAR, [or to have STAR deal with duplicated sequences differently](https://github.com/alexdobin/STAR/issues/482), but it might be nice to have some sort of check in place downstream as well to avoid failure.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/282
https://github.com/COMBINE-lab/salmon/issues/284:440,Availability,error,error,440,"Hi,. I am trying to process scRNAseq Chromium data using alevin. I already have results from cellranger and I wanted to compare them with alevin. I use the following command line; salmon alevin -lISR -1 Fastq1a.fastq.gz Fastq1b.fastq.gz -2 Fastq2a.fastq.gz Fastq2b.fastq.gz --chromium -i gencode.v25.transcripts_index -p 20 -o AlevinOUT --tgMap gencode.v25.txp2gene.tsv --dumpCsvCounts --whitelist 737K-august-2016.txt. I get the following error message at the end of the output; [alevinLog] [error] Barcode not found in frequency table. If I run the exact same files using without the --whitelist flag/file I get some results for a very small set of barcodes. Interestingly the barcodes found by alevin (I only checked 2 or 3) are also in the 737K-august-2016.txt file. . My first question is why alevin does not ""count"" barcodes (zero frequency) with the barcode file, and does estimate frequency for some (at least) barcodes without the barcode file. Considering that the barcodes in the latter case are also found in the whitelist file. . My second question is more about difference between alevin and cellranger. I do get estimated counts for a large number of barcodes (thousands) using cellranger, while barely on the order of a few hundreds, at best, using alevin. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/284
https://github.com/COMBINE-lab/salmon/issues/284:493,Availability,error,error,493,"Hi,. I am trying to process scRNAseq Chromium data using alevin. I already have results from cellranger and I wanted to compare them with alevin. I use the following command line; salmon alevin -lISR -1 Fastq1a.fastq.gz Fastq1b.fastq.gz -2 Fastq2a.fastq.gz Fastq2b.fastq.gz --chromium -i gencode.v25.transcripts_index -p 20 -o AlevinOUT --tgMap gencode.v25.txp2gene.tsv --dumpCsvCounts --whitelist 737K-august-2016.txt. I get the following error message at the end of the output; [alevinLog] [error] Barcode not found in frequency table. If I run the exact same files using without the --whitelist flag/file I get some results for a very small set of barcodes. Interestingly the barcodes found by alevin (I only checked 2 or 3) are also in the 737K-august-2016.txt file. . My first question is why alevin does not ""count"" barcodes (zero frequency) with the barcode file, and does estimate frequency for some (at least) barcodes without the barcode file. Considering that the barcodes in the latter case are also found in the whitelist file. . My second question is more about difference between alevin and cellranger. I do get estimated counts for a large number of barcodes (thousands) using cellranger, while barely on the order of a few hundreds, at best, using alevin. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/284
https://github.com/COMBINE-lab/salmon/issues/284:446,Integrability,message,message,446,"Hi,. I am trying to process scRNAseq Chromium data using alevin. I already have results from cellranger and I wanted to compare them with alevin. I use the following command line; salmon alevin -lISR -1 Fastq1a.fastq.gz Fastq1b.fastq.gz -2 Fastq2a.fastq.gz Fastq2b.fastq.gz --chromium -i gencode.v25.transcripts_index -p 20 -o AlevinOUT --tgMap gencode.v25.txp2gene.tsv --dumpCsvCounts --whitelist 737K-august-2016.txt. I get the following error message at the end of the output; [alevinLog] [error] Barcode not found in frequency table. If I run the exact same files using without the --whitelist flag/file I get some results for a very small set of barcodes. Interestingly the barcodes found by alevin (I only checked 2 or 3) are also in the 737K-august-2016.txt file. . My first question is why alevin does not ""count"" barcodes (zero frequency) with the barcode file, and does estimate frequency for some (at least) barcodes without the barcode file. Considering that the barcodes in the latter case are also found in the whitelist file. . My second question is more about difference between alevin and cellranger. I do get estimated counts for a large number of barcodes (thousands) using cellranger, while barely on the order of a few hundreds, at best, using alevin. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/284
https://github.com/COMBINE-lab/salmon/pull/285:465,Integrability,protocol,protocol-specific,465,A PR noting the differences in my approach to #269.; The one that I think needs addressing is in `writeFastq` (https://github.com/COMBINE-lab/salmon/compare/develop...PeteHaitch:develop?expand=1#diff-bf2f37cd9ea77a5c454a5bd860a924ee); without some change to this the `UMI` and `CB` are incorrectly extracted for CEL-Seq2. ; I simply commented out the original lines and modified it as needed for CEL-Seq2 in order to test my modified version.; I guess some sort of protocol-specific conditional is needed here. The remainder are minor/cosmetic choices of variable names (please feel free to ignore!).,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/285
https://github.com/COMBINE-lab/salmon/pull/285:555,Modifiability,variab,variable,555,A PR noting the differences in my approach to #269.; The one that I think needs addressing is in `writeFastq` (https://github.com/COMBINE-lab/salmon/compare/develop...PeteHaitch:develop?expand=1#diff-bf2f37cd9ea77a5c454a5bd860a924ee); without some change to this the `UMI` and `CB` are incorrectly extracted for CEL-Seq2. ; I simply commented out the original lines and modified it as needed for CEL-Seq2 in order to test my modified version.; I guess some sort of protocol-specific conditional is needed here. The remainder are minor/cosmetic choices of variable names (please feel free to ignore!).,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/285
https://github.com/COMBINE-lab/salmon/pull/285:417,Testability,test,test,417,A PR noting the differences in my approach to #269.; The one that I think needs addressing is in `writeFastq` (https://github.com/COMBINE-lab/salmon/compare/develop...PeteHaitch:develop?expand=1#diff-bf2f37cd9ea77a5c454a5bd860a924ee); without some change to this the `UMI` and `CB` are incorrectly extracted for CEL-Seq2. ; I simply commented out the original lines and modified it as needed for CEL-Seq2 in order to test my modified version.; I guess some sort of protocol-specific conditional is needed here. The remainder are minor/cosmetic choices of variable names (please feel free to ignore!).,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/285
https://github.com/COMBINE-lab/salmon/pull/285:326,Usability,simpl,simply,326,A PR noting the differences in my approach to #269.; The one that I think needs addressing is in `writeFastq` (https://github.com/COMBINE-lab/salmon/compare/develop...PeteHaitch:develop?expand=1#diff-bf2f37cd9ea77a5c454a5bd860a924ee); without some change to this the `UMI` and `CB` are incorrectly extracted for CEL-Seq2. ; I simply commented out the original lines and modified it as needed for CEL-Seq2 in order to test my modified version.; I guess some sort of protocol-specific conditional is needed here. The remainder are minor/cosmetic choices of variable names (please feel free to ignore!).,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/285
https://github.com/COMBINE-lab/salmon/issues/286:362,Availability,down,downgrade,362,"ok, this is not really a bug but I think it needs attention. i am using anaconda environment for many tools and keep it updated as much as possible with the `conda update --all` command. but the bottleneck is salmon, which has very old dependencies, and it's a dilemma either to update salmon from 0.8.1 (pretty old buggy version) to the latest one (0.11.3) and downgrade a bunch of other important packages, or vice versa. **Describe the bug**; a bug is a species of animal kingdom, a small insect (just kidding). **To Reproduce**; Steps and data to reproduce the behavior:; ```; $ conda update salmon; Solving environment: done. ## Package Plan ##. environment location: /home/software/anaconda2. added / updated specs: ; - salmon. The following packages will be downloaded:. package | build; ---------------------------|-----------------; salmon-0.11.3 | h86b0361_2 2.9 MB bioconda; blas-1.0 | mkl 6 KB; numpy-1.14.3 | py27h28100ab_1 41 KB; ------------------------------------------------------------; Total: 3.0 MB. The following packages will be UPDATED:. jemalloc: 4.5.0-0 bioconda --> 5.1.0-hfc679d8_0 conda-forge; libgcc-ng: 7.2.0-hdf63c60_3 conda-forge --> 8.2.0-hdf63c60_1 ; libstdcxx-ng: 7.2.0-hdf63c60_3 conda-forge --> 8.2.0-hdf63c60_1 ; salmon: 0.8.1-0 bioconda --> 0.11.3-h86b0361_2 bioconda . The following packages will be DOWNGRADED:. blas: 1.1-openblas conda-forge --> 1.0-mkl ; fastqc: 0.11.7-5 bioconda --> 0.11.6-2 bioconda ; gsl: 2.4-blas_openblash47a8a8e_1 conda-forge [blas_openblas] --> 2.1-2 conda-forge; numpy: 1.15.1-py27_blas_openblashd3ea46f_1 conda-forge [blas_openblas] --> 1.14.3-py27h28100ab_1 ; openjdk: 8.0.144-zulu8.23.0.3_2 conda-forge --> 8.0.121-1 ; scikit-learn: 0.19.2-py27_blas_openblasha84fab4_201 conda-forge [blas_openblas] --> 0.19.1-py27hedc7406_0 ; scipy: 1.1.0-py27_blas_openblash7943236_201 conda-forge [blas_openblas] --> 1.1.0-py27hd20e5f9_0; ```. **Expected behavior**; salmon should be updated to the latest version without the requirement of d",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/286
https://github.com/COMBINE-lab/salmon/issues/286:765,Availability,down,downloaded,765,"ok, this is not really a bug but I think it needs attention. i am using anaconda environment for many tools and keep it updated as much as possible with the `conda update --all` command. but the bottleneck is salmon, which has very old dependencies, and it's a dilemma either to update salmon from 0.8.1 (pretty old buggy version) to the latest one (0.11.3) and downgrade a bunch of other important packages, or vice versa. **Describe the bug**; a bug is a species of animal kingdom, a small insect (just kidding). **To Reproduce**; Steps and data to reproduce the behavior:; ```; $ conda update salmon; Solving environment: done. ## Package Plan ##. environment location: /home/software/anaconda2. added / updated specs: ; - salmon. The following packages will be downloaded:. package | build; ---------------------------|-----------------; salmon-0.11.3 | h86b0361_2 2.9 MB bioconda; blas-1.0 | mkl 6 KB; numpy-1.14.3 | py27h28100ab_1 41 KB; ------------------------------------------------------------; Total: 3.0 MB. The following packages will be UPDATED:. jemalloc: 4.5.0-0 bioconda --> 5.1.0-hfc679d8_0 conda-forge; libgcc-ng: 7.2.0-hdf63c60_3 conda-forge --> 8.2.0-hdf63c60_1 ; libstdcxx-ng: 7.2.0-hdf63c60_3 conda-forge --> 8.2.0-hdf63c60_1 ; salmon: 0.8.1-0 bioconda --> 0.11.3-h86b0361_2 bioconda . The following packages will be DOWNGRADED:. blas: 1.1-openblas conda-forge --> 1.0-mkl ; fastqc: 0.11.7-5 bioconda --> 0.11.6-2 bioconda ; gsl: 2.4-blas_openblash47a8a8e_1 conda-forge [blas_openblas] --> 2.1-2 conda-forge; numpy: 1.15.1-py27_blas_openblashd3ea46f_1 conda-forge [blas_openblas] --> 1.14.3-py27h28100ab_1 ; openjdk: 8.0.144-zulu8.23.0.3_2 conda-forge --> 8.0.121-1 ; scikit-learn: 0.19.2-py27_blas_openblasha84fab4_201 conda-forge [blas_openblas] --> 0.19.1-py27hedc7406_0 ; scipy: 1.1.0-py27_blas_openblash7943236_201 conda-forge [blas_openblas] --> 1.1.0-py27hd20e5f9_0; ```. **Expected behavior**; salmon should be updated to the latest version without the requirement of d",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/286
https://github.com/COMBINE-lab/salmon/issues/286:1341,Availability,DOWN,DOWNGRADED,1341,"possible with the `conda update --all` command. but the bottleneck is salmon, which has very old dependencies, and it's a dilemma either to update salmon from 0.8.1 (pretty old buggy version) to the latest one (0.11.3) and downgrade a bunch of other important packages, or vice versa. **Describe the bug**; a bug is a species of animal kingdom, a small insect (just kidding). **To Reproduce**; Steps and data to reproduce the behavior:; ```; $ conda update salmon; Solving environment: done. ## Package Plan ##. environment location: /home/software/anaconda2. added / updated specs: ; - salmon. The following packages will be downloaded:. package | build; ---------------------------|-----------------; salmon-0.11.3 | h86b0361_2 2.9 MB bioconda; blas-1.0 | mkl 6 KB; numpy-1.14.3 | py27h28100ab_1 41 KB; ------------------------------------------------------------; Total: 3.0 MB. The following packages will be UPDATED:. jemalloc: 4.5.0-0 bioconda --> 5.1.0-hfc679d8_0 conda-forge; libgcc-ng: 7.2.0-hdf63c60_3 conda-forge --> 8.2.0-hdf63c60_1 ; libstdcxx-ng: 7.2.0-hdf63c60_3 conda-forge --> 8.2.0-hdf63c60_1 ; salmon: 0.8.1-0 bioconda --> 0.11.3-h86b0361_2 bioconda . The following packages will be DOWNGRADED:. blas: 1.1-openblas conda-forge --> 1.0-mkl ; fastqc: 0.11.7-5 bioconda --> 0.11.6-2 bioconda ; gsl: 2.4-blas_openblash47a8a8e_1 conda-forge [blas_openblas] --> 2.1-2 conda-forge; numpy: 1.15.1-py27_blas_openblashd3ea46f_1 conda-forge [blas_openblas] --> 1.14.3-py27h28100ab_1 ; openjdk: 8.0.144-zulu8.23.0.3_2 conda-forge --> 8.0.121-1 ; scikit-learn: 0.19.2-py27_blas_openblasha84fab4_201 conda-forge [blas_openblas] --> 0.19.1-py27hedc7406_0 ; scipy: 1.1.0-py27_blas_openblash7943236_201 conda-forge [blas_openblas] --> 1.1.0-py27hd20e5f9_0; ```. **Expected behavior**; salmon should be updated to the latest version without the requirement of downgrading of its dependencies. Linux nscc04 2.6.32-696.30.1.el6.x86_64 #1 SMP Fri May 18 11:50:44 EDT 2018 x86_64 x86_64 x86_64 GNU/Linux",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/286
https://github.com/COMBINE-lab/salmon/issues/286:2000,Availability,down,downgrading,2000,"possible with the `conda update --all` command. but the bottleneck is salmon, which has very old dependencies, and it's a dilemma either to update salmon from 0.8.1 (pretty old buggy version) to the latest one (0.11.3) and downgrade a bunch of other important packages, or vice versa. **Describe the bug**; a bug is a species of animal kingdom, a small insect (just kidding). **To Reproduce**; Steps and data to reproduce the behavior:; ```; $ conda update salmon; Solving environment: done. ## Package Plan ##. environment location: /home/software/anaconda2. added / updated specs: ; - salmon. The following packages will be downloaded:. package | build; ---------------------------|-----------------; salmon-0.11.3 | h86b0361_2 2.9 MB bioconda; blas-1.0 | mkl 6 KB; numpy-1.14.3 | py27h28100ab_1 41 KB; ------------------------------------------------------------; Total: 3.0 MB. The following packages will be UPDATED:. jemalloc: 4.5.0-0 bioconda --> 5.1.0-hfc679d8_0 conda-forge; libgcc-ng: 7.2.0-hdf63c60_3 conda-forge --> 8.2.0-hdf63c60_1 ; libstdcxx-ng: 7.2.0-hdf63c60_3 conda-forge --> 8.2.0-hdf63c60_1 ; salmon: 0.8.1-0 bioconda --> 0.11.3-h86b0361_2 bioconda . The following packages will be DOWNGRADED:. blas: 1.1-openblas conda-forge --> 1.0-mkl ; fastqc: 0.11.7-5 bioconda --> 0.11.6-2 bioconda ; gsl: 2.4-blas_openblash47a8a8e_1 conda-forge [blas_openblas] --> 2.1-2 conda-forge; numpy: 1.15.1-py27_blas_openblashd3ea46f_1 conda-forge [blas_openblas] --> 1.14.3-py27h28100ab_1 ; openjdk: 8.0.144-zulu8.23.0.3_2 conda-forge --> 8.0.121-1 ; scikit-learn: 0.19.2-py27_blas_openblasha84fab4_201 conda-forge [blas_openblas] --> 0.19.1-py27hedc7406_0 ; scipy: 1.1.0-py27_blas_openblash7943236_201 conda-forge [blas_openblas] --> 1.1.0-py27hd20e5f9_0; ```. **Expected behavior**; salmon should be updated to the latest version without the requirement of downgrading of its dependencies. Linux nscc04 2.6.32-696.30.1.el6.x86_64 #1 SMP Fri May 18 11:50:44 EDT 2018 x86_64 x86_64 x86_64 GNU/Linux",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/286
https://github.com/COMBINE-lab/salmon/issues/286:120,Deployability,update,updated,120,"ok, this is not really a bug but I think it needs attention. i am using anaconda environment for many tools and keep it updated as much as possible with the `conda update --all` command. but the bottleneck is salmon, which has very old dependencies, and it's a dilemma either to update salmon from 0.8.1 (pretty old buggy version) to the latest one (0.11.3) and downgrade a bunch of other important packages, or vice versa. **Describe the bug**; a bug is a species of animal kingdom, a small insect (just kidding). **To Reproduce**; Steps and data to reproduce the behavior:; ```; $ conda update salmon; Solving environment: done. ## Package Plan ##. environment location: /home/software/anaconda2. added / updated specs: ; - salmon. The following packages will be downloaded:. package | build; ---------------------------|-----------------; salmon-0.11.3 | h86b0361_2 2.9 MB bioconda; blas-1.0 | mkl 6 KB; numpy-1.14.3 | py27h28100ab_1 41 KB; ------------------------------------------------------------; Total: 3.0 MB. The following packages will be UPDATED:. jemalloc: 4.5.0-0 bioconda --> 5.1.0-hfc679d8_0 conda-forge; libgcc-ng: 7.2.0-hdf63c60_3 conda-forge --> 8.2.0-hdf63c60_1 ; libstdcxx-ng: 7.2.0-hdf63c60_3 conda-forge --> 8.2.0-hdf63c60_1 ; salmon: 0.8.1-0 bioconda --> 0.11.3-h86b0361_2 bioconda . The following packages will be DOWNGRADED:. blas: 1.1-openblas conda-forge --> 1.0-mkl ; fastqc: 0.11.7-5 bioconda --> 0.11.6-2 bioconda ; gsl: 2.4-blas_openblash47a8a8e_1 conda-forge [blas_openblas] --> 2.1-2 conda-forge; numpy: 1.15.1-py27_blas_openblashd3ea46f_1 conda-forge [blas_openblas] --> 1.14.3-py27h28100ab_1 ; openjdk: 8.0.144-zulu8.23.0.3_2 conda-forge --> 8.0.121-1 ; scikit-learn: 0.19.2-py27_blas_openblasha84fab4_201 conda-forge [blas_openblas] --> 0.19.1-py27hedc7406_0 ; scipy: 1.1.0-py27_blas_openblash7943236_201 conda-forge [blas_openblas] --> 1.1.0-py27hd20e5f9_0; ```. **Expected behavior**; salmon should be updated to the latest version without the requirement of d",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/286
https://github.com/COMBINE-lab/salmon/issues/286:164,Deployability,update,update,164,"ok, this is not really a bug but I think it needs attention. i am using anaconda environment for many tools and keep it updated as much as possible with the `conda update --all` command. but the bottleneck is salmon, which has very old dependencies, and it's a dilemma either to update salmon from 0.8.1 (pretty old buggy version) to the latest one (0.11.3) and downgrade a bunch of other important packages, or vice versa. **Describe the bug**; a bug is a species of animal kingdom, a small insect (just kidding). **To Reproduce**; Steps and data to reproduce the behavior:; ```; $ conda update salmon; Solving environment: done. ## Package Plan ##. environment location: /home/software/anaconda2. added / updated specs: ; - salmon. The following packages will be downloaded:. package | build; ---------------------------|-----------------; salmon-0.11.3 | h86b0361_2 2.9 MB bioconda; blas-1.0 | mkl 6 KB; numpy-1.14.3 | py27h28100ab_1 41 KB; ------------------------------------------------------------; Total: 3.0 MB. The following packages will be UPDATED:. jemalloc: 4.5.0-0 bioconda --> 5.1.0-hfc679d8_0 conda-forge; libgcc-ng: 7.2.0-hdf63c60_3 conda-forge --> 8.2.0-hdf63c60_1 ; libstdcxx-ng: 7.2.0-hdf63c60_3 conda-forge --> 8.2.0-hdf63c60_1 ; salmon: 0.8.1-0 bioconda --> 0.11.3-h86b0361_2 bioconda . The following packages will be DOWNGRADED:. blas: 1.1-openblas conda-forge --> 1.0-mkl ; fastqc: 0.11.7-5 bioconda --> 0.11.6-2 bioconda ; gsl: 2.4-blas_openblash47a8a8e_1 conda-forge [blas_openblas] --> 2.1-2 conda-forge; numpy: 1.15.1-py27_blas_openblashd3ea46f_1 conda-forge [blas_openblas] --> 1.14.3-py27h28100ab_1 ; openjdk: 8.0.144-zulu8.23.0.3_2 conda-forge --> 8.0.121-1 ; scikit-learn: 0.19.2-py27_blas_openblasha84fab4_201 conda-forge [blas_openblas] --> 0.19.1-py27hedc7406_0 ; scipy: 1.1.0-py27_blas_openblash7943236_201 conda-forge [blas_openblas] --> 1.1.0-py27hd20e5f9_0; ```. **Expected behavior**; salmon should be updated to the latest version without the requirement of d",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/286
https://github.com/COMBINE-lab/salmon/issues/286:279,Deployability,update,update,279,"ok, this is not really a bug but I think it needs attention. i am using anaconda environment for many tools and keep it updated as much as possible with the `conda update --all` command. but the bottleneck is salmon, which has very old dependencies, and it's a dilemma either to update salmon from 0.8.1 (pretty old buggy version) to the latest one (0.11.3) and downgrade a bunch of other important packages, or vice versa. **Describe the bug**; a bug is a species of animal kingdom, a small insect (just kidding). **To Reproduce**; Steps and data to reproduce the behavior:; ```; $ conda update salmon; Solving environment: done. ## Package Plan ##. environment location: /home/software/anaconda2. added / updated specs: ; - salmon. The following packages will be downloaded:. package | build; ---------------------------|-----------------; salmon-0.11.3 | h86b0361_2 2.9 MB bioconda; blas-1.0 | mkl 6 KB; numpy-1.14.3 | py27h28100ab_1 41 KB; ------------------------------------------------------------; Total: 3.0 MB. The following packages will be UPDATED:. jemalloc: 4.5.0-0 bioconda --> 5.1.0-hfc679d8_0 conda-forge; libgcc-ng: 7.2.0-hdf63c60_3 conda-forge --> 8.2.0-hdf63c60_1 ; libstdcxx-ng: 7.2.0-hdf63c60_3 conda-forge --> 8.2.0-hdf63c60_1 ; salmon: 0.8.1-0 bioconda --> 0.11.3-h86b0361_2 bioconda . The following packages will be DOWNGRADED:. blas: 1.1-openblas conda-forge --> 1.0-mkl ; fastqc: 0.11.7-5 bioconda --> 0.11.6-2 bioconda ; gsl: 2.4-blas_openblash47a8a8e_1 conda-forge [blas_openblas] --> 2.1-2 conda-forge; numpy: 1.15.1-py27_blas_openblashd3ea46f_1 conda-forge [blas_openblas] --> 1.14.3-py27h28100ab_1 ; openjdk: 8.0.144-zulu8.23.0.3_2 conda-forge --> 8.0.121-1 ; scikit-learn: 0.19.2-py27_blas_openblasha84fab4_201 conda-forge [blas_openblas] --> 0.19.1-py27hedc7406_0 ; scipy: 1.1.0-py27_blas_openblash7943236_201 conda-forge [blas_openblas] --> 1.1.0-py27hd20e5f9_0; ```. **Expected behavior**; salmon should be updated to the latest version without the requirement of d",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/286
https://github.com/COMBINE-lab/salmon/issues/286:589,Deployability,update,update,589,"ok, this is not really a bug but I think it needs attention. i am using anaconda environment for many tools and keep it updated as much as possible with the `conda update --all` command. but the bottleneck is salmon, which has very old dependencies, and it's a dilemma either to update salmon from 0.8.1 (pretty old buggy version) to the latest one (0.11.3) and downgrade a bunch of other important packages, or vice versa. **Describe the bug**; a bug is a species of animal kingdom, a small insect (just kidding). **To Reproduce**; Steps and data to reproduce the behavior:; ```; $ conda update salmon; Solving environment: done. ## Package Plan ##. environment location: /home/software/anaconda2. added / updated specs: ; - salmon. The following packages will be downloaded:. package | build; ---------------------------|-----------------; salmon-0.11.3 | h86b0361_2 2.9 MB bioconda; blas-1.0 | mkl 6 KB; numpy-1.14.3 | py27h28100ab_1 41 KB; ------------------------------------------------------------; Total: 3.0 MB. The following packages will be UPDATED:. jemalloc: 4.5.0-0 bioconda --> 5.1.0-hfc679d8_0 conda-forge; libgcc-ng: 7.2.0-hdf63c60_3 conda-forge --> 8.2.0-hdf63c60_1 ; libstdcxx-ng: 7.2.0-hdf63c60_3 conda-forge --> 8.2.0-hdf63c60_1 ; salmon: 0.8.1-0 bioconda --> 0.11.3-h86b0361_2 bioconda . The following packages will be DOWNGRADED:. blas: 1.1-openblas conda-forge --> 1.0-mkl ; fastqc: 0.11.7-5 bioconda --> 0.11.6-2 bioconda ; gsl: 2.4-blas_openblash47a8a8e_1 conda-forge [blas_openblas] --> 2.1-2 conda-forge; numpy: 1.15.1-py27_blas_openblashd3ea46f_1 conda-forge [blas_openblas] --> 1.14.3-py27h28100ab_1 ; openjdk: 8.0.144-zulu8.23.0.3_2 conda-forge --> 8.0.121-1 ; scikit-learn: 0.19.2-py27_blas_openblasha84fab4_201 conda-forge [blas_openblas] --> 0.19.1-py27hedc7406_0 ; scipy: 1.1.0-py27_blas_openblash7943236_201 conda-forge [blas_openblas] --> 1.1.0-py27hd20e5f9_0; ```. **Expected behavior**; salmon should be updated to the latest version without the requirement of d",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/286
https://github.com/COMBINE-lab/salmon/issues/286:707,Deployability,update,updated,707,"ok, this is not really a bug but I think it needs attention. i am using anaconda environment for many tools and keep it updated as much as possible with the `conda update --all` command. but the bottleneck is salmon, which has very old dependencies, and it's a dilemma either to update salmon from 0.8.1 (pretty old buggy version) to the latest one (0.11.3) and downgrade a bunch of other important packages, or vice versa. **Describe the bug**; a bug is a species of animal kingdom, a small insect (just kidding). **To Reproduce**; Steps and data to reproduce the behavior:; ```; $ conda update salmon; Solving environment: done. ## Package Plan ##. environment location: /home/software/anaconda2. added / updated specs: ; - salmon. The following packages will be downloaded:. package | build; ---------------------------|-----------------; salmon-0.11.3 | h86b0361_2 2.9 MB bioconda; blas-1.0 | mkl 6 KB; numpy-1.14.3 | py27h28100ab_1 41 KB; ------------------------------------------------------------; Total: 3.0 MB. The following packages will be UPDATED:. jemalloc: 4.5.0-0 bioconda --> 5.1.0-hfc679d8_0 conda-forge; libgcc-ng: 7.2.0-hdf63c60_3 conda-forge --> 8.2.0-hdf63c60_1 ; libstdcxx-ng: 7.2.0-hdf63c60_3 conda-forge --> 8.2.0-hdf63c60_1 ; salmon: 0.8.1-0 bioconda --> 0.11.3-h86b0361_2 bioconda . The following packages will be DOWNGRADED:. blas: 1.1-openblas conda-forge --> 1.0-mkl ; fastqc: 0.11.7-5 bioconda --> 0.11.6-2 bioconda ; gsl: 2.4-blas_openblash47a8a8e_1 conda-forge [blas_openblas] --> 2.1-2 conda-forge; numpy: 1.15.1-py27_blas_openblashd3ea46f_1 conda-forge [blas_openblas] --> 1.14.3-py27h28100ab_1 ; openjdk: 8.0.144-zulu8.23.0.3_2 conda-forge --> 8.0.121-1 ; scikit-learn: 0.19.2-py27_blas_openblasha84fab4_201 conda-forge [blas_openblas] --> 0.19.1-py27hedc7406_0 ; scipy: 1.1.0-py27_blas_openblash7943236_201 conda-forge [blas_openblas] --> 1.1.0-py27hd20e5f9_0; ```. **Expected behavior**; salmon should be updated to the latest version without the requirement of d",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/286
https://github.com/COMBINE-lab/salmon/issues/286:1052,Deployability,UPDATE,UPDATED,1052," it needs attention. i am using anaconda environment for many tools and keep it updated as much as possible with the `conda update --all` command. but the bottleneck is salmon, which has very old dependencies, and it's a dilemma either to update salmon from 0.8.1 (pretty old buggy version) to the latest one (0.11.3) and downgrade a bunch of other important packages, or vice versa. **Describe the bug**; a bug is a species of animal kingdom, a small insect (just kidding). **To Reproduce**; Steps and data to reproduce the behavior:; ```; $ conda update salmon; Solving environment: done. ## Package Plan ##. environment location: /home/software/anaconda2. added / updated specs: ; - salmon. The following packages will be downloaded:. package | build; ---------------------------|-----------------; salmon-0.11.3 | h86b0361_2 2.9 MB bioconda; blas-1.0 | mkl 6 KB; numpy-1.14.3 | py27h28100ab_1 41 KB; ------------------------------------------------------------; Total: 3.0 MB. The following packages will be UPDATED:. jemalloc: 4.5.0-0 bioconda --> 5.1.0-hfc679d8_0 conda-forge; libgcc-ng: 7.2.0-hdf63c60_3 conda-forge --> 8.2.0-hdf63c60_1 ; libstdcxx-ng: 7.2.0-hdf63c60_3 conda-forge --> 8.2.0-hdf63c60_1 ; salmon: 0.8.1-0 bioconda --> 0.11.3-h86b0361_2 bioconda . The following packages will be DOWNGRADED:. blas: 1.1-openblas conda-forge --> 1.0-mkl ; fastqc: 0.11.7-5 bioconda --> 0.11.6-2 bioconda ; gsl: 2.4-blas_openblash47a8a8e_1 conda-forge [blas_openblas] --> 2.1-2 conda-forge; numpy: 1.15.1-py27_blas_openblashd3ea46f_1 conda-forge [blas_openblas] --> 1.14.3-py27h28100ab_1 ; openjdk: 8.0.144-zulu8.23.0.3_2 conda-forge --> 8.0.121-1 ; scikit-learn: 0.19.2-py27_blas_openblasha84fab4_201 conda-forge [blas_openblas] --> 0.19.1-py27hedc7406_0 ; scipy: 1.1.0-py27_blas_openblash7943236_201 conda-forge [blas_openblas] --> 1.1.0-py27hd20e5f9_0; ```. **Expected behavior**; salmon should be updated to the latest version without the requirement of downgrading of its dependencies. Linux ns",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/286
https://github.com/COMBINE-lab/salmon/issues/286:1943,Deployability,update,updated,1943,"possible with the `conda update --all` command. but the bottleneck is salmon, which has very old dependencies, and it's a dilemma either to update salmon from 0.8.1 (pretty old buggy version) to the latest one (0.11.3) and downgrade a bunch of other important packages, or vice versa. **Describe the bug**; a bug is a species of animal kingdom, a small insect (just kidding). **To Reproduce**; Steps and data to reproduce the behavior:; ```; $ conda update salmon; Solving environment: done. ## Package Plan ##. environment location: /home/software/anaconda2. added / updated specs: ; - salmon. The following packages will be downloaded:. package | build; ---------------------------|-----------------; salmon-0.11.3 | h86b0361_2 2.9 MB bioconda; blas-1.0 | mkl 6 KB; numpy-1.14.3 | py27h28100ab_1 41 KB; ------------------------------------------------------------; Total: 3.0 MB. The following packages will be UPDATED:. jemalloc: 4.5.0-0 bioconda --> 5.1.0-hfc679d8_0 conda-forge; libgcc-ng: 7.2.0-hdf63c60_3 conda-forge --> 8.2.0-hdf63c60_1 ; libstdcxx-ng: 7.2.0-hdf63c60_3 conda-forge --> 8.2.0-hdf63c60_1 ; salmon: 0.8.1-0 bioconda --> 0.11.3-h86b0361_2 bioconda . The following packages will be DOWNGRADED:. blas: 1.1-openblas conda-forge --> 1.0-mkl ; fastqc: 0.11.7-5 bioconda --> 0.11.6-2 bioconda ; gsl: 2.4-blas_openblash47a8a8e_1 conda-forge [blas_openblas] --> 2.1-2 conda-forge; numpy: 1.15.1-py27_blas_openblashd3ea46f_1 conda-forge [blas_openblas] --> 1.14.3-py27h28100ab_1 ; openjdk: 8.0.144-zulu8.23.0.3_2 conda-forge --> 8.0.121-1 ; scikit-learn: 0.19.2-py27_blas_openblasha84fab4_201 conda-forge [blas_openblas] --> 0.19.1-py27hedc7406_0 ; scipy: 1.1.0-py27_blas_openblash7943236_201 conda-forge [blas_openblas] --> 1.1.0-py27hd20e5f9_0; ```. **Expected behavior**; salmon should be updated to the latest version without the requirement of downgrading of its dependencies. Linux nscc04 2.6.32-696.30.1.el6.x86_64 #1 SMP Fri May 18 11:50:44 EDT 2018 x86_64 x86_64 x86_64 GNU/Linux",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/286
https://github.com/COMBINE-lab/salmon/issues/286:236,Integrability,depend,dependencies,236,"ok, this is not really a bug but I think it needs attention. i am using anaconda environment for many tools and keep it updated as much as possible with the `conda update --all` command. but the bottleneck is salmon, which has very old dependencies, and it's a dilemma either to update salmon from 0.8.1 (pretty old buggy version) to the latest one (0.11.3) and downgrade a bunch of other important packages, or vice versa. **Describe the bug**; a bug is a species of animal kingdom, a small insect (just kidding). **To Reproduce**; Steps and data to reproduce the behavior:; ```; $ conda update salmon; Solving environment: done. ## Package Plan ##. environment location: /home/software/anaconda2. added / updated specs: ; - salmon. The following packages will be downloaded:. package | build; ---------------------------|-----------------; salmon-0.11.3 | h86b0361_2 2.9 MB bioconda; blas-1.0 | mkl 6 KB; numpy-1.14.3 | py27h28100ab_1 41 KB; ------------------------------------------------------------; Total: 3.0 MB. The following packages will be UPDATED:. jemalloc: 4.5.0-0 bioconda --> 5.1.0-hfc679d8_0 conda-forge; libgcc-ng: 7.2.0-hdf63c60_3 conda-forge --> 8.2.0-hdf63c60_1 ; libstdcxx-ng: 7.2.0-hdf63c60_3 conda-forge --> 8.2.0-hdf63c60_1 ; salmon: 0.8.1-0 bioconda --> 0.11.3-h86b0361_2 bioconda . The following packages will be DOWNGRADED:. blas: 1.1-openblas conda-forge --> 1.0-mkl ; fastqc: 0.11.7-5 bioconda --> 0.11.6-2 bioconda ; gsl: 2.4-blas_openblash47a8a8e_1 conda-forge [blas_openblas] --> 2.1-2 conda-forge; numpy: 1.15.1-py27_blas_openblashd3ea46f_1 conda-forge [blas_openblas] --> 1.14.3-py27h28100ab_1 ; openjdk: 8.0.144-zulu8.23.0.3_2 conda-forge --> 8.0.121-1 ; scikit-learn: 0.19.2-py27_blas_openblasha84fab4_201 conda-forge [blas_openblas] --> 0.19.1-py27hedc7406_0 ; scipy: 1.1.0-py27_blas_openblash7943236_201 conda-forge [blas_openblas] --> 1.1.0-py27hd20e5f9_0; ```. **Expected behavior**; salmon should be updated to the latest version without the requirement of d",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/286
https://github.com/COMBINE-lab/salmon/issues/286:2019,Integrability,depend,dependencies,2019,"possible with the `conda update --all` command. but the bottleneck is salmon, which has very old dependencies, and it's a dilemma either to update salmon from 0.8.1 (pretty old buggy version) to the latest one (0.11.3) and downgrade a bunch of other important packages, or vice versa. **Describe the bug**; a bug is a species of animal kingdom, a small insect (just kidding). **To Reproduce**; Steps and data to reproduce the behavior:; ```; $ conda update salmon; Solving environment: done. ## Package Plan ##. environment location: /home/software/anaconda2. added / updated specs: ; - salmon. The following packages will be downloaded:. package | build; ---------------------------|-----------------; salmon-0.11.3 | h86b0361_2 2.9 MB bioconda; blas-1.0 | mkl 6 KB; numpy-1.14.3 | py27h28100ab_1 41 KB; ------------------------------------------------------------; Total: 3.0 MB. The following packages will be UPDATED:. jemalloc: 4.5.0-0 bioconda --> 5.1.0-hfc679d8_0 conda-forge; libgcc-ng: 7.2.0-hdf63c60_3 conda-forge --> 8.2.0-hdf63c60_1 ; libstdcxx-ng: 7.2.0-hdf63c60_3 conda-forge --> 8.2.0-hdf63c60_1 ; salmon: 0.8.1-0 bioconda --> 0.11.3-h86b0361_2 bioconda . The following packages will be DOWNGRADED:. blas: 1.1-openblas conda-forge --> 1.0-mkl ; fastqc: 0.11.7-5 bioconda --> 0.11.6-2 bioconda ; gsl: 2.4-blas_openblash47a8a8e_1 conda-forge [blas_openblas] --> 2.1-2 conda-forge; numpy: 1.15.1-py27_blas_openblashd3ea46f_1 conda-forge [blas_openblas] --> 1.14.3-py27h28100ab_1 ; openjdk: 8.0.144-zulu8.23.0.3_2 conda-forge --> 8.0.121-1 ; scikit-learn: 0.19.2-py27_blas_openblasha84fab4_201 conda-forge [blas_openblas] --> 0.19.1-py27hedc7406_0 ; scipy: 1.1.0-py27_blas_openblash7943236_201 conda-forge [blas_openblas] --> 1.1.0-py27hd20e5f9_0; ```. **Expected behavior**; salmon should be updated to the latest version without the requirement of downgrading of its dependencies. Linux nscc04 2.6.32-696.30.1.el6.x86_64 #1 SMP Fri May 18 11:50:44 EDT 2018 x86_64 x86_64 x86_64 GNU/Linux",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/286
https://github.com/COMBINE-lab/salmon/issues/286:195,Performance,bottleneck,bottleneck,195,"ok, this is not really a bug but I think it needs attention. i am using anaconda environment for many tools and keep it updated as much as possible with the `conda update --all` command. but the bottleneck is salmon, which has very old dependencies, and it's a dilemma either to update salmon from 0.8.1 (pretty old buggy version) to the latest one (0.11.3) and downgrade a bunch of other important packages, or vice versa. **Describe the bug**; a bug is a species of animal kingdom, a small insect (just kidding). **To Reproduce**; Steps and data to reproduce the behavior:; ```; $ conda update salmon; Solving environment: done. ## Package Plan ##. environment location: /home/software/anaconda2. added / updated specs: ; - salmon. The following packages will be downloaded:. package | build; ---------------------------|-----------------; salmon-0.11.3 | h86b0361_2 2.9 MB bioconda; blas-1.0 | mkl 6 KB; numpy-1.14.3 | py27h28100ab_1 41 KB; ------------------------------------------------------------; Total: 3.0 MB. The following packages will be UPDATED:. jemalloc: 4.5.0-0 bioconda --> 5.1.0-hfc679d8_0 conda-forge; libgcc-ng: 7.2.0-hdf63c60_3 conda-forge --> 8.2.0-hdf63c60_1 ; libstdcxx-ng: 7.2.0-hdf63c60_3 conda-forge --> 8.2.0-hdf63c60_1 ; salmon: 0.8.1-0 bioconda --> 0.11.3-h86b0361_2 bioconda . The following packages will be DOWNGRADED:. blas: 1.1-openblas conda-forge --> 1.0-mkl ; fastqc: 0.11.7-5 bioconda --> 0.11.6-2 bioconda ; gsl: 2.4-blas_openblash47a8a8e_1 conda-forge [blas_openblas] --> 2.1-2 conda-forge; numpy: 1.15.1-py27_blas_openblashd3ea46f_1 conda-forge [blas_openblas] --> 1.14.3-py27h28100ab_1 ; openjdk: 8.0.144-zulu8.23.0.3_2 conda-forge --> 8.0.121-1 ; scikit-learn: 0.19.2-py27_blas_openblasha84fab4_201 conda-forge [blas_openblas] --> 0.19.1-py27hedc7406_0 ; scipy: 1.1.0-py27_blas_openblash7943236_201 conda-forge [blas_openblas] --> 1.1.0-py27hd20e5f9_0; ```. **Expected behavior**; salmon should be updated to the latest version without the requirement of d",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/286
https://github.com/COMBINE-lab/salmon/issues/286:1699,Usability,learn,learn,1699,"possible with the `conda update --all` command. but the bottleneck is salmon, which has very old dependencies, and it's a dilemma either to update salmon from 0.8.1 (pretty old buggy version) to the latest one (0.11.3) and downgrade a bunch of other important packages, or vice versa. **Describe the bug**; a bug is a species of animal kingdom, a small insect (just kidding). **To Reproduce**; Steps and data to reproduce the behavior:; ```; $ conda update salmon; Solving environment: done. ## Package Plan ##. environment location: /home/software/anaconda2. added / updated specs: ; - salmon. The following packages will be downloaded:. package | build; ---------------------------|-----------------; salmon-0.11.3 | h86b0361_2 2.9 MB bioconda; blas-1.0 | mkl 6 KB; numpy-1.14.3 | py27h28100ab_1 41 KB; ------------------------------------------------------------; Total: 3.0 MB. The following packages will be UPDATED:. jemalloc: 4.5.0-0 bioconda --> 5.1.0-hfc679d8_0 conda-forge; libgcc-ng: 7.2.0-hdf63c60_3 conda-forge --> 8.2.0-hdf63c60_1 ; libstdcxx-ng: 7.2.0-hdf63c60_3 conda-forge --> 8.2.0-hdf63c60_1 ; salmon: 0.8.1-0 bioconda --> 0.11.3-h86b0361_2 bioconda . The following packages will be DOWNGRADED:. blas: 1.1-openblas conda-forge --> 1.0-mkl ; fastqc: 0.11.7-5 bioconda --> 0.11.6-2 bioconda ; gsl: 2.4-blas_openblash47a8a8e_1 conda-forge [blas_openblas] --> 2.1-2 conda-forge; numpy: 1.15.1-py27_blas_openblashd3ea46f_1 conda-forge [blas_openblas] --> 1.14.3-py27h28100ab_1 ; openjdk: 8.0.144-zulu8.23.0.3_2 conda-forge --> 8.0.121-1 ; scikit-learn: 0.19.2-py27_blas_openblasha84fab4_201 conda-forge [blas_openblas] --> 0.19.1-py27hedc7406_0 ; scipy: 1.1.0-py27_blas_openblash7943236_201 conda-forge [blas_openblas] --> 1.1.0-py27hd20e5f9_0; ```. **Expected behavior**; salmon should be updated to the latest version without the requirement of downgrading of its dependencies. Linux nscc04 2.6.32-696.30.1.el6.x86_64 #1 SMP Fri May 18 11:50:44 EDT 2018 x86_64 x86_64 x86_64 GNU/Linux",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/286
https://github.com/COMBINE-lab/salmon/issues/288:63,Deployability,release,release,63,"Why is salmon using a fork of jemalloc instead of the official release from the jemalloc project?. From CMakeLists.txt:; ```; DOWNLOAD_COMMAND curl -k -L https://github.com/COMBINE-lab/jemalloc/arch; ive/5.1.0.tar.gz -o jemalloc-5.1.0.tar.gz; ```; This seems to potentially conflict with; ` find_package(Jemalloc)`; which might locate an installation from a different build.; I want to ensure a consistent installation across all of our systems, whether or not jemalloc has been installed separately.; Thanks,; Jason",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/288
https://github.com/COMBINE-lab/salmon/issues/288:338,Deployability,install,installation,338,"Why is salmon using a fork of jemalloc instead of the official release from the jemalloc project?. From CMakeLists.txt:; ```; DOWNLOAD_COMMAND curl -k -L https://github.com/COMBINE-lab/jemalloc/arch; ive/5.1.0.tar.gz -o jemalloc-5.1.0.tar.gz; ```; This seems to potentially conflict with; ` find_package(Jemalloc)`; which might locate an installation from a different build.; I want to ensure a consistent installation across all of our systems, whether or not jemalloc has been installed separately.; Thanks,; Jason",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/288
https://github.com/COMBINE-lab/salmon/issues/288:406,Deployability,install,installation,406,"Why is salmon using a fork of jemalloc instead of the official release from the jemalloc project?. From CMakeLists.txt:; ```; DOWNLOAD_COMMAND curl -k -L https://github.com/COMBINE-lab/jemalloc/arch; ive/5.1.0.tar.gz -o jemalloc-5.1.0.tar.gz; ```; This seems to potentially conflict with; ` find_package(Jemalloc)`; which might locate an installation from a different build.; I want to ensure a consistent installation across all of our systems, whether or not jemalloc has been installed separately.; Thanks,; Jason",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/288
https://github.com/COMBINE-lab/salmon/issues/288:479,Deployability,install,installed,479,"Why is salmon using a fork of jemalloc instead of the official release from the jemalloc project?. From CMakeLists.txt:; ```; DOWNLOAD_COMMAND curl -k -L https://github.com/COMBINE-lab/jemalloc/arch; ive/5.1.0.tar.gz -o jemalloc-5.1.0.tar.gz; ```; This seems to potentially conflict with; ` find_package(Jemalloc)`; which might locate an installation from a different build.; I want to ensure a consistent installation across all of our systems, whether or not jemalloc has been installed separately.; Thanks,; Jason",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/288
https://github.com/COMBINE-lab/salmon/issues/289:656,Availability,down,downloaded,656,"**Describe the bug**; I am trying to quantify long reads mapped using minimap2 and I am getting a large number of the following messages:. ```; [2018-09-10 12:42:32.972] [jointLog] [warning] CIGAR = 106c16M1D7M1D8M1D26M1D55M3D8M1D32M2I14M1I8M1I52M1D14M1I2M1I19M1I1M1I7M11D28M1D5M3I40M1D5M1I5M1I6M1I13M147c; [2018-09-10 12:42:32.972] [jointLog] [warning] (in update()) CIGAR string for read [e6b69e2f-1bf2-4fd5-bace-d4d213164026] seems inconsistent. It refers to non-existant positions in the read!. ```. **To Reproduce**; * Which version of salmon was used?; salmon version: salmon 0.11.3, minimap2 version: 2.9-r720; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Installed through bioconda.; * Which reference (e.g. transcriptome) was used?; Ensembl [cDNA collection](http://ftp.ensembl.org/pub/release-93/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz).; * Which read files were used?; Nanopore reads.; * Which which program options were used?; salmon quant -p {threads} -t {input.trs} -l SF -a {input.bam} -o {output.tsv_dir}. **Desktop (please complete the following information):**; Ubuntu 14.04.5 LTS. **Additional context**; I am wondering whether the issue is caused by the fact that minimap2 does not include sequences in the secondary alignments. The errors disappear if I filter for primary alignments only.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/289
https://github.com/COMBINE-lab/salmon/issues/289:1308,Availability,error,errors,1308,"**Describe the bug**; I am trying to quantify long reads mapped using minimap2 and I am getting a large number of the following messages:. ```; [2018-09-10 12:42:32.972] [jointLog] [warning] CIGAR = 106c16M1D7M1D8M1D26M1D55M3D8M1D32M2I14M1I8M1I52M1D14M1I2M1I19M1I1M1I7M11D28M1D5M3I40M1D5M1I5M1I6M1I13M147c; [2018-09-10 12:42:32.972] [jointLog] [warning] (in update()) CIGAR string for read [e6b69e2f-1bf2-4fd5-bace-d4d213164026] seems inconsistent. It refers to non-existant positions in the read!. ```. **To Reproduce**; * Which version of salmon was used?; salmon version: salmon 0.11.3, minimap2 version: 2.9-r720; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Installed through bioconda.; * Which reference (e.g. transcriptome) was used?; Ensembl [cDNA collection](http://ftp.ensembl.org/pub/release-93/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz).; * Which read files were used?; Nanopore reads.; * Which which program options were used?; salmon quant -p {threads} -t {input.trs} -l SF -a {input.bam} -o {output.tsv_dir}. **Desktop (please complete the following information):**; Ubuntu 14.04.5 LTS. **Additional context**; I am wondering whether the issue is caused by the fact that minimap2 does not include sequences in the secondary alignments. The errors disappear if I filter for primary alignments only.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/289
https://github.com/COMBINE-lab/salmon/issues/289:358,Deployability,update,update,358,"**Describe the bug**; I am trying to quantify long reads mapped using minimap2 and I am getting a large number of the following messages:. ```; [2018-09-10 12:42:32.972] [jointLog] [warning] CIGAR = 106c16M1D7M1D8M1D26M1D55M3D8M1D32M2I14M1I8M1I52M1D14M1I2M1I19M1I1M1I7M11D28M1D5M3I40M1D5M1I5M1I6M1I13M147c; [2018-09-10 12:42:32.972] [jointLog] [warning] (in update()) CIGAR string for read [e6b69e2f-1bf2-4fd5-bace-d4d213164026] seems inconsistent. It refers to non-existant positions in the read!. ```. **To Reproduce**; * Which version of salmon was used?; salmon version: salmon 0.11.3, minimap2 version: 2.9-r720; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Installed through bioconda.; * Which reference (e.g. transcriptome) was used?; Ensembl [cDNA collection](http://ftp.ensembl.org/pub/release-93/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz).; * Which read files were used?; Nanopore reads.; * Which which program options were used?; salmon quant -p {threads} -t {input.trs} -l SF -a {input.bam} -o {output.tsv_dir}. **Desktop (please complete the following information):**; Ubuntu 14.04.5 LTS. **Additional context**; I am wondering whether the issue is caused by the fact that minimap2 does not include sequences in the secondary alignments. The errors disappear if I filter for primary alignments only.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/289
