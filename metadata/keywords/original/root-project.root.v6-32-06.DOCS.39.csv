id,quality_attribute,keyword,matched_word,match_idx,sentence,source,filename,author,repo,version,wiki,url
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:3007,Testability,test,testPoolingLayerCudnn,3007,ibraries(testConvBackpropagationCuda ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvBackpropagationCuda COMMAND testConvBackpropagationCuda). if (tmva-cudnn). add_executable(testForwardPassCudnn TestForwardPassCudnn.cxx); target_link_libraries(testForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-ForwardCudnn COMMAND testForwardPassCudnn). add_executable(testConvBackpropagationCudnn TestConvBackpropagationCudnn.cxx); target_link_libraries(testConvBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvBackpropagationCudnn COMMAND testConvBackpropagationCudnn). add_executable(testConvLayerCudnn TestConvLayerCudnn.cxx); target_link_libraries(testConvLayerCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayerCudnn COMMAND testConvLayerCudnn). add_executable(testPoolingLayerCudnn TestPoolingLayerCudnn.cxx); target_link_libraries(testPoolingLayerCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayerCudnn COMMAND testPoolingLayerCudnn). # test mixed architecture Cudnn Cpu; add_executable(testMixedArchitectures TestMixedArchitectures.cxx); target_link_libraries(testMixedArchitectures ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-MixedArchitectures COMMAND testMixedArchitectures). endif(). include_directories(${CUDA_INCLUDE_DIRS}). endif(). #-- -test of reference architecture; if (Test_Reference). ROOT_EXECUTABLE(testIm2Col TestIm2Col.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col COMMAND testIm2Col). ROOT_EXECUTABLE(testPoolingLayer TestPoolingLayer.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer COMMAND testPoolingLayer). ROOT_EXECUTABLE(testReshape TestReshape.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape COMMAND testReshape). ROOT_EXECUTABLE(testRotWeights TestRotateWeights.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights COMMAND testRotWeights).,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:3033,Testability,test,test,3033,D testConvBackpropagationCuda). if (tmva-cudnn). add_executable(testForwardPassCudnn TestForwardPassCudnn.cxx); target_link_libraries(testForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-ForwardCudnn COMMAND testForwardPassCudnn). add_executable(testConvBackpropagationCudnn TestConvBackpropagationCudnn.cxx); target_link_libraries(testConvBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvBackpropagationCudnn COMMAND testConvBackpropagationCudnn). add_executable(testConvLayerCudnn TestConvLayerCudnn.cxx); target_link_libraries(testConvLayerCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayerCudnn COMMAND testConvLayerCudnn). add_executable(testPoolingLayerCudnn TestPoolingLayerCudnn.cxx); target_link_libraries(testPoolingLayerCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayerCudnn COMMAND testPoolingLayerCudnn). # test mixed architecture Cudnn Cpu; add_executable(testMixedArchitectures TestMixedArchitectures.cxx); target_link_libraries(testMixedArchitectures ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-MixedArchitectures COMMAND testMixedArchitectures). endif(). include_directories(${CUDA_INCLUDE_DIRS}). endif(). #-- -test of reference architecture; if (Test_Reference). ROOT_EXECUTABLE(testIm2Col TestIm2Col.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col COMMAND testIm2Col). ROOT_EXECUTABLE(testPoolingLayer TestPoolingLayer.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer COMMAND testPoolingLayer). ROOT_EXECUTABLE(testReshape TestReshape.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape COMMAND testReshape). ROOT_EXECUTABLE(testRotWeights TestRotateWeights.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights COMMAND testRotWeights). #-- features not implemeted in ref architectures; #ROOT_EXECUTABLE(testForwardPass TestForwardPass.cxx LIBRARIES ${Libraries}); #R,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:3083,Testability,test,testMixedArchitectures,3083,D testConvBackpropagationCuda). if (tmva-cudnn). add_executable(testForwardPassCudnn TestForwardPassCudnn.cxx); target_link_libraries(testForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-ForwardCudnn COMMAND testForwardPassCudnn). add_executable(testConvBackpropagationCudnn TestConvBackpropagationCudnn.cxx); target_link_libraries(testConvBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvBackpropagationCudnn COMMAND testConvBackpropagationCudnn). add_executable(testConvLayerCudnn TestConvLayerCudnn.cxx); target_link_libraries(testConvLayerCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayerCudnn COMMAND testConvLayerCudnn). add_executable(testPoolingLayerCudnn TestPoolingLayerCudnn.cxx); target_link_libraries(testPoolingLayerCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayerCudnn COMMAND testPoolingLayerCudnn). # test mixed architecture Cudnn Cpu; add_executable(testMixedArchitectures TestMixedArchitectures.cxx); target_link_libraries(testMixedArchitectures ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-MixedArchitectures COMMAND testMixedArchitectures). endif(). include_directories(${CUDA_INCLUDE_DIRS}). endif(). #-- -test of reference architecture; if (Test_Reference). ROOT_EXECUTABLE(testIm2Col TestIm2Col.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col COMMAND testIm2Col). ROOT_EXECUTABLE(testPoolingLayer TestPoolingLayer.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer COMMAND testPoolingLayer). ROOT_EXECUTABLE(testReshape TestReshape.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape COMMAND testReshape). ROOT_EXECUTABLE(testRotWeights TestRotateWeights.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights COMMAND testRotWeights). #-- features not implemeted in ref architectures; #ROOT_EXECUTABLE(testForwardPass TestForwardPass.cxx LIBRARIES ${Libraries}); #R,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:3106,Testability,Test,TestMixedArchitectures,3106,D testConvBackpropagationCuda). if (tmva-cudnn). add_executable(testForwardPassCudnn TestForwardPassCudnn.cxx); target_link_libraries(testForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-ForwardCudnn COMMAND testForwardPassCudnn). add_executable(testConvBackpropagationCudnn TestConvBackpropagationCudnn.cxx); target_link_libraries(testConvBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvBackpropagationCudnn COMMAND testConvBackpropagationCudnn). add_executable(testConvLayerCudnn TestConvLayerCudnn.cxx); target_link_libraries(testConvLayerCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayerCudnn COMMAND testConvLayerCudnn). add_executable(testPoolingLayerCudnn TestPoolingLayerCudnn.cxx); target_link_libraries(testPoolingLayerCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayerCudnn COMMAND testPoolingLayerCudnn). # test mixed architecture Cudnn Cpu; add_executable(testMixedArchitectures TestMixedArchitectures.cxx); target_link_libraries(testMixedArchitectures ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-MixedArchitectures COMMAND testMixedArchitectures). endif(). include_directories(${CUDA_INCLUDE_DIRS}). endif(). #-- -test of reference architecture; if (Test_Reference). ROOT_EXECUTABLE(testIm2Col TestIm2Col.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col COMMAND testIm2Col). ROOT_EXECUTABLE(testPoolingLayer TestPoolingLayer.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer COMMAND testPoolingLayer). ROOT_EXECUTABLE(testReshape TestReshape.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape COMMAND testReshape). ROOT_EXECUTABLE(testRotWeights TestRotateWeights.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights COMMAND testRotWeights). #-- features not implemeted in ref architectures; #ROOT_EXECUTABLE(testForwardPass TestForwardPass.cxx LIBRARIES ${Libraries}); #R,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:3157,Testability,test,testMixedArchitectures,3157,(testForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-ForwardCudnn COMMAND testForwardPassCudnn). add_executable(testConvBackpropagationCudnn TestConvBackpropagationCudnn.cxx); target_link_libraries(testConvBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvBackpropagationCudnn COMMAND testConvBackpropagationCudnn). add_executable(testConvLayerCudnn TestConvLayerCudnn.cxx); target_link_libraries(testConvLayerCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayerCudnn COMMAND testConvLayerCudnn). add_executable(testPoolingLayerCudnn TestPoolingLayerCudnn.cxx); target_link_libraries(testPoolingLayerCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayerCudnn COMMAND testPoolingLayerCudnn). # test mixed architecture Cudnn Cpu; add_executable(testMixedArchitectures TestMixedArchitectures.cxx); target_link_libraries(testMixedArchitectures ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-MixedArchitectures COMMAND testMixedArchitectures). endif(). include_directories(${CUDA_INCLUDE_DIRS}). endif(). #-- -test of reference architecture; if (Test_Reference). ROOT_EXECUTABLE(testIm2Col TestIm2Col.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col COMMAND testIm2Col). ROOT_EXECUTABLE(testPoolingLayer TestPoolingLayer.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer COMMAND testPoolingLayer). ROOT_EXECUTABLE(testReshape TestReshape.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape COMMAND testReshape). ROOT_EXECUTABLE(testRotWeights TestRotateWeights.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights COMMAND testRotWeights). #-- features not implemeted in ref architectures; #ROOT_EXECUTABLE(testForwardPass TestForwardPass.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Forward COMMAND testForwardPass). #ROOT_EXECUTABLE(testConvNetLoss TestConvNetLoss.cxx LIBRARIES ${Librari,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:3271,Testability,test,testMixedArchitectures,3271,(testForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-ForwardCudnn COMMAND testForwardPassCudnn). add_executable(testConvBackpropagationCudnn TestConvBackpropagationCudnn.cxx); target_link_libraries(testConvBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvBackpropagationCudnn COMMAND testConvBackpropagationCudnn). add_executable(testConvLayerCudnn TestConvLayerCudnn.cxx); target_link_libraries(testConvLayerCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayerCudnn COMMAND testConvLayerCudnn). add_executable(testPoolingLayerCudnn TestPoolingLayerCudnn.cxx); target_link_libraries(testPoolingLayerCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayerCudnn COMMAND testPoolingLayerCudnn). # test mixed architecture Cudnn Cpu; add_executable(testMixedArchitectures TestMixedArchitectures.cxx); target_link_libraries(testMixedArchitectures ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-MixedArchitectures COMMAND testMixedArchitectures). endif(). include_directories(${CUDA_INCLUDE_DIRS}). endif(). #-- -test of reference architecture; if (Test_Reference). ROOT_EXECUTABLE(testIm2Col TestIm2Col.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col COMMAND testIm2Col). ROOT_EXECUTABLE(testPoolingLayer TestPoolingLayer.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer COMMAND testPoolingLayer). ROOT_EXECUTABLE(testReshape TestReshape.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape COMMAND testReshape). ROOT_EXECUTABLE(testRotWeights TestRotateWeights.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights COMMAND testRotWeights). #-- features not implemeted in ref architectures; #ROOT_EXECUTABLE(testForwardPass TestForwardPass.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Forward COMMAND testForwardPass). #ROOT_EXECUTABLE(testConvNetLoss TestConvNetLoss.cxx LIBRARIES ${Librari,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:3362,Testability,test,test,3362, TestConvBackpropagationCudnn.cxx); target_link_libraries(testConvBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvBackpropagationCudnn COMMAND testConvBackpropagationCudnn). add_executable(testConvLayerCudnn TestConvLayerCudnn.cxx); target_link_libraries(testConvLayerCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayerCudnn COMMAND testConvLayerCudnn). add_executable(testPoolingLayerCudnn TestPoolingLayerCudnn.cxx); target_link_libraries(testPoolingLayerCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayerCudnn COMMAND testPoolingLayerCudnn). # test mixed architecture Cudnn Cpu; add_executable(testMixedArchitectures TestMixedArchitectures.cxx); target_link_libraries(testMixedArchitectures ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-MixedArchitectures COMMAND testMixedArchitectures). endif(). include_directories(${CUDA_INCLUDE_DIRS}). endif(). #-- -test of reference architecture; if (Test_Reference). ROOT_EXECUTABLE(testIm2Col TestIm2Col.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col COMMAND testIm2Col). ROOT_EXECUTABLE(testPoolingLayer TestPoolingLayer.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer COMMAND testPoolingLayer). ROOT_EXECUTABLE(testReshape TestReshape.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape COMMAND testReshape). ROOT_EXECUTABLE(testRotWeights TestRotateWeights.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights COMMAND testRotWeights). #-- features not implemeted in ref architectures; #ROOT_EXECUTABLE(testForwardPass TestForwardPass.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Forward COMMAND testForwardPass). #ROOT_EXECUTABLE(testConvNetLoss TestConvNetLoss.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Loss COMMAND testConvNetLoss). #ROOT_EXECUTABLE(testConvNetPred TestConvNetPrediction.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:3553,Testability,test,testPoolingLayer,3553,COMMAND testConvBackpropagationCudnn). add_executable(testConvLayerCudnn TestConvLayerCudnn.cxx); target_link_libraries(testConvLayerCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayerCudnn COMMAND testConvLayerCudnn). add_executable(testPoolingLayerCudnn TestPoolingLayerCudnn.cxx); target_link_libraries(testPoolingLayerCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayerCudnn COMMAND testPoolingLayerCudnn). # test mixed architecture Cudnn Cpu; add_executable(testMixedArchitectures TestMixedArchitectures.cxx); target_link_libraries(testMixedArchitectures ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-MixedArchitectures COMMAND testMixedArchitectures). endif(). include_directories(${CUDA_INCLUDE_DIRS}). endif(). #-- -test of reference architecture; if (Test_Reference). ROOT_EXECUTABLE(testIm2Col TestIm2Col.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col COMMAND testIm2Col). ROOT_EXECUTABLE(testPoolingLayer TestPoolingLayer.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer COMMAND testPoolingLayer). ROOT_EXECUTABLE(testReshape TestReshape.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape COMMAND testReshape). ROOT_EXECUTABLE(testRotWeights TestRotateWeights.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights COMMAND testRotWeights). #-- features not implemeted in ref architectures; #ROOT_EXECUTABLE(testForwardPass TestForwardPass.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Forward COMMAND testForwardPass). #ROOT_EXECUTABLE(testConvNetLoss TestConvNetLoss.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Loss COMMAND testConvNetLoss). #ROOT_EXECUTABLE(testConvNetPred TestConvNetPrediction.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Pred COMMAND testConvNetPred). #ROOT_EXECUTABLE(testDLMinimization TestMinimization.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization COMMAND testDLMinim,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:3570,Testability,Test,TestPoolingLayer,3570,COMMAND testConvBackpropagationCudnn). add_executable(testConvLayerCudnn TestConvLayerCudnn.cxx); target_link_libraries(testConvLayerCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayerCudnn COMMAND testConvLayerCudnn). add_executable(testPoolingLayerCudnn TestPoolingLayerCudnn.cxx); target_link_libraries(testPoolingLayerCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayerCudnn COMMAND testPoolingLayerCudnn). # test mixed architecture Cudnn Cpu; add_executable(testMixedArchitectures TestMixedArchitectures.cxx); target_link_libraries(testMixedArchitectures ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-MixedArchitectures COMMAND testMixedArchitectures). endif(). include_directories(${CUDA_INCLUDE_DIRS}). endif(). #-- -test of reference architecture; if (Test_Reference). ROOT_EXECUTABLE(testIm2Col TestIm2Col.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col COMMAND testIm2Col). ROOT_EXECUTABLE(testPoolingLayer TestPoolingLayer.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer COMMAND testPoolingLayer). ROOT_EXECUTABLE(testReshape TestReshape.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape COMMAND testReshape). ROOT_EXECUTABLE(testRotWeights TestRotateWeights.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights COMMAND testRotWeights). #-- features not implemeted in ref architectures; #ROOT_EXECUTABLE(testForwardPass TestForwardPass.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Forward COMMAND testForwardPass). #ROOT_EXECUTABLE(testConvNetLoss TestConvNetLoss.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Loss COMMAND testConvNetLoss). #ROOT_EXECUTABLE(testConvNetPred TestConvNetPrediction.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Pred COMMAND testConvNetPred). #ROOT_EXECUTABLE(testDLMinimization TestMinimization.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization COMMAND testDLMinim,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:3664,Testability,test,testPoolingLayer,3664,TestConvLayerCudnn.cxx); target_link_libraries(testConvLayerCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayerCudnn COMMAND testConvLayerCudnn). add_executable(testPoolingLayerCudnn TestPoolingLayerCudnn.cxx); target_link_libraries(testPoolingLayerCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayerCudnn COMMAND testPoolingLayerCudnn). # test mixed architecture Cudnn Cpu; add_executable(testMixedArchitectures TestMixedArchitectures.cxx); target_link_libraries(testMixedArchitectures ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-MixedArchitectures COMMAND testMixedArchitectures). endif(). include_directories(${CUDA_INCLUDE_DIRS}). endif(). #-- -test of reference architecture; if (Test_Reference). ROOT_EXECUTABLE(testIm2Col TestIm2Col.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col COMMAND testIm2Col). ROOT_EXECUTABLE(testPoolingLayer TestPoolingLayer.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer COMMAND testPoolingLayer). ROOT_EXECUTABLE(testReshape TestReshape.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape COMMAND testReshape). ROOT_EXECUTABLE(testRotWeights TestRotateWeights.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights COMMAND testRotWeights). #-- features not implemeted in ref architectures; #ROOT_EXECUTABLE(testForwardPass TestForwardPass.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Forward COMMAND testForwardPass). #ROOT_EXECUTABLE(testConvNetLoss TestConvNetLoss.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Loss COMMAND testConvNetLoss). #ROOT_EXECUTABLE(testConvNetPred TestConvNetPrediction.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Pred COMMAND testConvNetPred). #ROOT_EXECUTABLE(testDLMinimization TestMinimization.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization COMMAND testDLMinimization). #ROOT_EXECUTABLE(testTensorDataLoader TestTensorDataLoader.cxx ,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:3699,Testability,test,testReshape,3699,Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayerCudnn COMMAND testConvLayerCudnn). add_executable(testPoolingLayerCudnn TestPoolingLayerCudnn.cxx); target_link_libraries(testPoolingLayerCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayerCudnn COMMAND testPoolingLayerCudnn). # test mixed architecture Cudnn Cpu; add_executable(testMixedArchitectures TestMixedArchitectures.cxx); target_link_libraries(testMixedArchitectures ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-MixedArchitectures COMMAND testMixedArchitectures). endif(). include_directories(${CUDA_INCLUDE_DIRS}). endif(). #-- -test of reference architecture; if (Test_Reference). ROOT_EXECUTABLE(testIm2Col TestIm2Col.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col COMMAND testIm2Col). ROOT_EXECUTABLE(testPoolingLayer TestPoolingLayer.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer COMMAND testPoolingLayer). ROOT_EXECUTABLE(testReshape TestReshape.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape COMMAND testReshape). ROOT_EXECUTABLE(testRotWeights TestRotateWeights.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights COMMAND testRotWeights). #-- features not implemeted in ref architectures; #ROOT_EXECUTABLE(testForwardPass TestForwardPass.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Forward COMMAND testForwardPass). #ROOT_EXECUTABLE(testConvNetLoss TestConvNetLoss.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Loss COMMAND testConvNetLoss). #ROOT_EXECUTABLE(testConvNetPred TestConvNetPrediction.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Pred COMMAND testConvNetPred). #ROOT_EXECUTABLE(testDLMinimization TestMinimization.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization COMMAND testDLMinimization). #ROOT_EXECUTABLE(testTensorDataLoader TestTensorDataLoader.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader ,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:3711,Testability,Test,TestReshape,3711,Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayerCudnn COMMAND testConvLayerCudnn). add_executable(testPoolingLayerCudnn TestPoolingLayerCudnn.cxx); target_link_libraries(testPoolingLayerCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayerCudnn COMMAND testPoolingLayerCudnn). # test mixed architecture Cudnn Cpu; add_executable(testMixedArchitectures TestMixedArchitectures.cxx); target_link_libraries(testMixedArchitectures ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-MixedArchitectures COMMAND testMixedArchitectures). endif(). include_directories(${CUDA_INCLUDE_DIRS}). endif(). #-- -test of reference architecture; if (Test_Reference). ROOT_EXECUTABLE(testIm2Col TestIm2Col.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col COMMAND testIm2Col). ROOT_EXECUTABLE(testPoolingLayer TestPoolingLayer.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer COMMAND testPoolingLayer). ROOT_EXECUTABLE(testReshape TestReshape.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape COMMAND testReshape). ROOT_EXECUTABLE(testRotWeights TestRotateWeights.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights COMMAND testRotWeights). #-- features not implemeted in ref architectures; #ROOT_EXECUTABLE(testForwardPass TestForwardPass.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Forward COMMAND testForwardPass). #ROOT_EXECUTABLE(testConvNetLoss TestConvNetLoss.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Loss COMMAND testConvNetLoss). #ROOT_EXECUTABLE(testConvNetPred TestConvNetPrediction.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Pred COMMAND testConvNetPred). #ROOT_EXECUTABLE(testDLMinimization TestMinimization.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization COMMAND testDLMinimization). #ROOT_EXECUTABLE(testTensorDataLoader TestTensorDataLoader.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader ,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:3795,Testability,test,testReshape,3795,onvLayerCudnn COMMAND testConvLayerCudnn). add_executable(testPoolingLayerCudnn TestPoolingLayerCudnn.cxx); target_link_libraries(testPoolingLayerCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayerCudnn COMMAND testPoolingLayerCudnn). # test mixed architecture Cudnn Cpu; add_executable(testMixedArchitectures TestMixedArchitectures.cxx); target_link_libraries(testMixedArchitectures ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-MixedArchitectures COMMAND testMixedArchitectures). endif(). include_directories(${CUDA_INCLUDE_DIRS}). endif(). #-- -test of reference architecture; if (Test_Reference). ROOT_EXECUTABLE(testIm2Col TestIm2Col.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col COMMAND testIm2Col). ROOT_EXECUTABLE(testPoolingLayer TestPoolingLayer.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer COMMAND testPoolingLayer). ROOT_EXECUTABLE(testReshape TestReshape.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape COMMAND testReshape). ROOT_EXECUTABLE(testRotWeights TestRotateWeights.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights COMMAND testRotWeights). #-- features not implemeted in ref architectures; #ROOT_EXECUTABLE(testForwardPass TestForwardPass.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Forward COMMAND testForwardPass). #ROOT_EXECUTABLE(testConvNetLoss TestConvNetLoss.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Loss COMMAND testConvNetLoss). #ROOT_EXECUTABLE(testConvNetPred TestConvNetPrediction.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Pred COMMAND testConvNetPred). #ROOT_EXECUTABLE(testDLMinimization TestMinimization.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization COMMAND testDLMinimization). #ROOT_EXECUTABLE(testTensorDataLoader TestTensorDataLoader.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader COMMAND testTensorDataLoader). endif(). #--- CPU tests. -------,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:3825,Testability,test,testRotWeights,3825,gLayerCudnn TestPoolingLayerCudnn.cxx); target_link_libraries(testPoolingLayerCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayerCudnn COMMAND testPoolingLayerCudnn). # test mixed architecture Cudnn Cpu; add_executable(testMixedArchitectures TestMixedArchitectures.cxx); target_link_libraries(testMixedArchitectures ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-MixedArchitectures COMMAND testMixedArchitectures). endif(). include_directories(${CUDA_INCLUDE_DIRS}). endif(). #-- -test of reference architecture; if (Test_Reference). ROOT_EXECUTABLE(testIm2Col TestIm2Col.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col COMMAND testIm2Col). ROOT_EXECUTABLE(testPoolingLayer TestPoolingLayer.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer COMMAND testPoolingLayer). ROOT_EXECUTABLE(testReshape TestReshape.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape COMMAND testReshape). ROOT_EXECUTABLE(testRotWeights TestRotateWeights.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights COMMAND testRotWeights). #-- features not implemeted in ref architectures; #ROOT_EXECUTABLE(testForwardPass TestForwardPass.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Forward COMMAND testForwardPass). #ROOT_EXECUTABLE(testConvNetLoss TestConvNetLoss.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Loss COMMAND testConvNetLoss). #ROOT_EXECUTABLE(testConvNetPred TestConvNetPrediction.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Pred COMMAND testConvNetPred). #ROOT_EXECUTABLE(testDLMinimization TestMinimization.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization COMMAND testDLMinimization). #ROOT_EXECUTABLE(testTensorDataLoader TestTensorDataLoader.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader COMMAND testTensorDataLoader). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmv,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:3840,Testability,Test,TestRotateWeights,3840,gLayerCudnn TestPoolingLayerCudnn.cxx); target_link_libraries(testPoolingLayerCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayerCudnn COMMAND testPoolingLayerCudnn). # test mixed architecture Cudnn Cpu; add_executable(testMixedArchitectures TestMixedArchitectures.cxx); target_link_libraries(testMixedArchitectures ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-MixedArchitectures COMMAND testMixedArchitectures). endif(). include_directories(${CUDA_INCLUDE_DIRS}). endif(). #-- -test of reference architecture; if (Test_Reference). ROOT_EXECUTABLE(testIm2Col TestIm2Col.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col COMMAND testIm2Col). ROOT_EXECUTABLE(testPoolingLayer TestPoolingLayer.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer COMMAND testPoolingLayer). ROOT_EXECUTABLE(testReshape TestReshape.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape COMMAND testReshape). ROOT_EXECUTABLE(testRotWeights TestRotateWeights.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights COMMAND testRotWeights). #-- features not implemeted in ref architectures; #ROOT_EXECUTABLE(testForwardPass TestForwardPass.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Forward COMMAND testForwardPass). #ROOT_EXECUTABLE(testConvNetLoss TestConvNetLoss.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Loss COMMAND testConvNetLoss). #ROOT_EXECUTABLE(testConvNetPred TestConvNetPrediction.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Pred COMMAND testConvNetPred). #ROOT_EXECUTABLE(testDLMinimization TestMinimization.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization COMMAND testDLMinimization). #ROOT_EXECUTABLE(testTensorDataLoader TestTensorDataLoader.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader COMMAND testTensorDataLoader). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmv,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:3933,Testability,test,testRotWeights,3933,ingLayerCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayerCudnn COMMAND testPoolingLayerCudnn). # test mixed architecture Cudnn Cpu; add_executable(testMixedArchitectures TestMixedArchitectures.cxx); target_link_libraries(testMixedArchitectures ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-MixedArchitectures COMMAND testMixedArchitectures). endif(). include_directories(${CUDA_INCLUDE_DIRS}). endif(). #-- -test of reference architecture; if (Test_Reference). ROOT_EXECUTABLE(testIm2Col TestIm2Col.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col COMMAND testIm2Col). ROOT_EXECUTABLE(testPoolingLayer TestPoolingLayer.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer COMMAND testPoolingLayer). ROOT_EXECUTABLE(testReshape TestReshape.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape COMMAND testReshape). ROOT_EXECUTABLE(testRotWeights TestRotateWeights.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights COMMAND testRotWeights). #-- features not implemeted in ref architectures; #ROOT_EXECUTABLE(testForwardPass TestForwardPass.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Forward COMMAND testForwardPass). #ROOT_EXECUTABLE(testConvNetLoss TestConvNetLoss.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Loss COMMAND testConvNetLoss). #ROOT_EXECUTABLE(testConvNetPred TestConvNetPrediction.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Pred COMMAND testConvNetPred). #ROOT_EXECUTABLE(testDLMinimization TestMinimization.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization COMMAND testDLMinimization). #ROOT_EXECUTABLE(testTensorDataLoader TestTensorDataLoader.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader COMMAND testTensorDataLoader). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). ROOT_EXECUTABLE(testIm2ColCpu TestIm2ColCpu.cxx LIBRARIES ${Lib,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:4017,Testability,test,testForwardPass,4017,COMMAND testPoolingLayerCudnn). # test mixed architecture Cudnn Cpu; add_executable(testMixedArchitectures TestMixedArchitectures.cxx); target_link_libraries(testMixedArchitectures ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-MixedArchitectures COMMAND testMixedArchitectures). endif(). include_directories(${CUDA_INCLUDE_DIRS}). endif(). #-- -test of reference architecture; if (Test_Reference). ROOT_EXECUTABLE(testIm2Col TestIm2Col.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col COMMAND testIm2Col). ROOT_EXECUTABLE(testPoolingLayer TestPoolingLayer.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer COMMAND testPoolingLayer). ROOT_EXECUTABLE(testReshape TestReshape.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape COMMAND testReshape). ROOT_EXECUTABLE(testRotWeights TestRotateWeights.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights COMMAND testRotWeights). #-- features not implemeted in ref architectures; #ROOT_EXECUTABLE(testForwardPass TestForwardPass.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Forward COMMAND testForwardPass). #ROOT_EXECUTABLE(testConvNetLoss TestConvNetLoss.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Loss COMMAND testConvNetLoss). #ROOT_EXECUTABLE(testConvNetPred TestConvNetPrediction.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Pred COMMAND testConvNetPred). #ROOT_EXECUTABLE(testDLMinimization TestMinimization.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization COMMAND testDLMinimization). #ROOT_EXECUTABLE(testTensorDataLoader TestTensorDataLoader.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader COMMAND testTensorDataLoader). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). ROOT_EXECUTABLE(testIm2ColCpu TestIm2ColCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col-CPU COMMAND testIm2ColCpu). ROOT_EXECUTABLE(testPoo,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:4033,Testability,Test,TestForwardPass,4033,COMMAND testPoolingLayerCudnn). # test mixed architecture Cudnn Cpu; add_executable(testMixedArchitectures TestMixedArchitectures.cxx); target_link_libraries(testMixedArchitectures ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-MixedArchitectures COMMAND testMixedArchitectures). endif(). include_directories(${CUDA_INCLUDE_DIRS}). endif(). #-- -test of reference architecture; if (Test_Reference). ROOT_EXECUTABLE(testIm2Col TestIm2Col.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col COMMAND testIm2Col). ROOT_EXECUTABLE(testPoolingLayer TestPoolingLayer.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer COMMAND testPoolingLayer). ROOT_EXECUTABLE(testReshape TestReshape.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape COMMAND testReshape). ROOT_EXECUTABLE(testRotWeights TestRotateWeights.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights COMMAND testRotWeights). #-- features not implemeted in ref architectures; #ROOT_EXECUTABLE(testForwardPass TestForwardPass.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Forward COMMAND testForwardPass). #ROOT_EXECUTABLE(testConvNetLoss TestConvNetLoss.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Loss COMMAND testConvNetLoss). #ROOT_EXECUTABLE(testConvNetPred TestConvNetPrediction.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Pred COMMAND testConvNetPred). #ROOT_EXECUTABLE(testDLMinimization TestMinimization.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization COMMAND testDLMinimization). #ROOT_EXECUTABLE(testTensorDataLoader TestTensorDataLoader.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader COMMAND testTensorDataLoader). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). ROOT_EXECUTABLE(testIm2ColCpu TestIm2ColCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col-CPU COMMAND testIm2ColCpu). ROOT_EXECUTABLE(testPoo,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:4122,Testability,test,testForwardPass,4122,chitectures TestMixedArchitectures.cxx); target_link_libraries(testMixedArchitectures ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-MixedArchitectures COMMAND testMixedArchitectures). endif(). include_directories(${CUDA_INCLUDE_DIRS}). endif(). #-- -test of reference architecture; if (Test_Reference). ROOT_EXECUTABLE(testIm2Col TestIm2Col.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col COMMAND testIm2Col). ROOT_EXECUTABLE(testPoolingLayer TestPoolingLayer.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer COMMAND testPoolingLayer). ROOT_EXECUTABLE(testReshape TestReshape.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape COMMAND testReshape). ROOT_EXECUTABLE(testRotWeights TestRotateWeights.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights COMMAND testRotWeights). #-- features not implemeted in ref architectures; #ROOT_EXECUTABLE(testForwardPass TestForwardPass.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Forward COMMAND testForwardPass). #ROOT_EXECUTABLE(testConvNetLoss TestConvNetLoss.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Loss COMMAND testConvNetLoss). #ROOT_EXECUTABLE(testConvNetPred TestConvNetPrediction.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Pred COMMAND testConvNetPred). #ROOT_EXECUTABLE(testDLMinimization TestMinimization.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization COMMAND testDLMinimization). #ROOT_EXECUTABLE(testTensorDataLoader TestTensorDataLoader.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader COMMAND testTensorDataLoader). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). ROOT_EXECUTABLE(testIm2ColCpu TestIm2ColCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col-CPU COMMAND testIm2ColCpu). ROOT_EXECUTABLE(testPoolingLayerCpu TestPoolingLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Poolin,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:4157,Testability,test,testConvNetLoss,4157,edArchitectures ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-MixedArchitectures COMMAND testMixedArchitectures). endif(). include_directories(${CUDA_INCLUDE_DIRS}). endif(). #-- -test of reference architecture; if (Test_Reference). ROOT_EXECUTABLE(testIm2Col TestIm2Col.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col COMMAND testIm2Col). ROOT_EXECUTABLE(testPoolingLayer TestPoolingLayer.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer COMMAND testPoolingLayer). ROOT_EXECUTABLE(testReshape TestReshape.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape COMMAND testReshape). ROOT_EXECUTABLE(testRotWeights TestRotateWeights.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights COMMAND testRotWeights). #-- features not implemeted in ref architectures; #ROOT_EXECUTABLE(testForwardPass TestForwardPass.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Forward COMMAND testForwardPass). #ROOT_EXECUTABLE(testConvNetLoss TestConvNetLoss.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Loss COMMAND testConvNetLoss). #ROOT_EXECUTABLE(testConvNetPred TestConvNetPrediction.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Pred COMMAND testConvNetPred). #ROOT_EXECUTABLE(testDLMinimization TestMinimization.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization COMMAND testDLMinimization). #ROOT_EXECUTABLE(testTensorDataLoader TestTensorDataLoader.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader COMMAND testTensorDataLoader). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). ROOT_EXECUTABLE(testIm2ColCpu TestIm2ColCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col-CPU COMMAND testIm2ColCpu). ROOT_EXECUTABLE(testPoolingLayerCpu TestPoolingLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer-CPU COMMAND testPoolingLayerCpu). ROOT_EXECUTABLE(testConvLayer,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:4173,Testability,Test,TestConvNetLoss,4173,edArchitectures ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-CNN-MixedArchitectures COMMAND testMixedArchitectures). endif(). include_directories(${CUDA_INCLUDE_DIRS}). endif(). #-- -test of reference architecture; if (Test_Reference). ROOT_EXECUTABLE(testIm2Col TestIm2Col.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col COMMAND testIm2Col). ROOT_EXECUTABLE(testPoolingLayer TestPoolingLayer.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer COMMAND testPoolingLayer). ROOT_EXECUTABLE(testReshape TestReshape.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape COMMAND testReshape). ROOT_EXECUTABLE(testRotWeights TestRotateWeights.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights COMMAND testRotWeights). #-- features not implemeted in ref architectures; #ROOT_EXECUTABLE(testForwardPass TestForwardPass.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Forward COMMAND testForwardPass). #ROOT_EXECUTABLE(testConvNetLoss TestConvNetLoss.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Loss COMMAND testConvNetLoss). #ROOT_EXECUTABLE(testConvNetPred TestConvNetPrediction.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Pred COMMAND testConvNetPred). #ROOT_EXECUTABLE(testDLMinimization TestMinimization.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization COMMAND testDLMinimization). #ROOT_EXECUTABLE(testTensorDataLoader TestTensorDataLoader.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader COMMAND testTensorDataLoader). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). ROOT_EXECUTABLE(testIm2ColCpu TestIm2ColCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col-CPU COMMAND testIm2ColCpu). ROOT_EXECUTABLE(testPoolingLayerCpu TestPoolingLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer-CPU COMMAND testPoolingLayerCpu). ROOT_EXECUTABLE(testConvLayer,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:4259,Testability,test,testConvNetLoss,4259,MVA-DNN-CNN-MixedArchitectures COMMAND testMixedArchitectures). endif(). include_directories(${CUDA_INCLUDE_DIRS}). endif(). #-- -test of reference architecture; if (Test_Reference). ROOT_EXECUTABLE(testIm2Col TestIm2Col.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col COMMAND testIm2Col). ROOT_EXECUTABLE(testPoolingLayer TestPoolingLayer.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer COMMAND testPoolingLayer). ROOT_EXECUTABLE(testReshape TestReshape.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape COMMAND testReshape). ROOT_EXECUTABLE(testRotWeights TestRotateWeights.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights COMMAND testRotWeights). #-- features not implemeted in ref architectures; #ROOT_EXECUTABLE(testForwardPass TestForwardPass.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Forward COMMAND testForwardPass). #ROOT_EXECUTABLE(testConvNetLoss TestConvNetLoss.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Loss COMMAND testConvNetLoss). #ROOT_EXECUTABLE(testConvNetPred TestConvNetPrediction.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Pred COMMAND testConvNetPred). #ROOT_EXECUTABLE(testDLMinimization TestMinimization.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization COMMAND testDLMinimization). #ROOT_EXECUTABLE(testTensorDataLoader TestTensorDataLoader.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader COMMAND testTensorDataLoader). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). ROOT_EXECUTABLE(testIm2ColCpu TestIm2ColCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col-CPU COMMAND testIm2ColCpu). ROOT_EXECUTABLE(testPoolingLayerCpu TestPoolingLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer-CPU COMMAND testPoolingLayerCpu). ROOT_EXECUTABLE(testConvLayerCpu TestConvLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:4294,Testability,test,testConvNetPred,4294, include_directories(${CUDA_INCLUDE_DIRS}). endif(). #-- -test of reference architecture; if (Test_Reference). ROOT_EXECUTABLE(testIm2Col TestIm2Col.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col COMMAND testIm2Col). ROOT_EXECUTABLE(testPoolingLayer TestPoolingLayer.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer COMMAND testPoolingLayer). ROOT_EXECUTABLE(testReshape TestReshape.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape COMMAND testReshape). ROOT_EXECUTABLE(testRotWeights TestRotateWeights.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights COMMAND testRotWeights). #-- features not implemeted in ref architectures; #ROOT_EXECUTABLE(testForwardPass TestForwardPass.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Forward COMMAND testForwardPass). #ROOT_EXECUTABLE(testConvNetLoss TestConvNetLoss.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Loss COMMAND testConvNetLoss). #ROOT_EXECUTABLE(testConvNetPred TestConvNetPrediction.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Pred COMMAND testConvNetPred). #ROOT_EXECUTABLE(testDLMinimization TestMinimization.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization COMMAND testDLMinimization). #ROOT_EXECUTABLE(testTensorDataLoader TestTensorDataLoader.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader COMMAND testTensorDataLoader). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). ROOT_EXECUTABLE(testIm2ColCpu TestIm2ColCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col-CPU COMMAND testIm2ColCpu). ROOT_EXECUTABLE(testPoolingLayerCpu TestPoolingLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer-CPU COMMAND testPoolingLayerCpu). ROOT_EXECUTABLE(testConvLayerCpu TestConvLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayer-CPU COMMAND testConvLayerCpu). ROOT_EXECUTABLE(testRo,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:4310,Testability,Test,TestConvNetPrediction,4310, include_directories(${CUDA_INCLUDE_DIRS}). endif(). #-- -test of reference architecture; if (Test_Reference). ROOT_EXECUTABLE(testIm2Col TestIm2Col.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col COMMAND testIm2Col). ROOT_EXECUTABLE(testPoolingLayer TestPoolingLayer.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer COMMAND testPoolingLayer). ROOT_EXECUTABLE(testReshape TestReshape.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape COMMAND testReshape). ROOT_EXECUTABLE(testRotWeights TestRotateWeights.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights COMMAND testRotWeights). #-- features not implemeted in ref architectures; #ROOT_EXECUTABLE(testForwardPass TestForwardPass.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Forward COMMAND testForwardPass). #ROOT_EXECUTABLE(testConvNetLoss TestConvNetLoss.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Loss COMMAND testConvNetLoss). #ROOT_EXECUTABLE(testConvNetPred TestConvNetPrediction.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Pred COMMAND testConvNetPred). #ROOT_EXECUTABLE(testDLMinimization TestMinimization.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization COMMAND testDLMinimization). #ROOT_EXECUTABLE(testTensorDataLoader TestTensorDataLoader.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader COMMAND testTensorDataLoader). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). ROOT_EXECUTABLE(testIm2ColCpu TestIm2ColCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col-CPU COMMAND testIm2ColCpu). ROOT_EXECUTABLE(testPoolingLayerCpu TestPoolingLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer-CPU COMMAND testPoolingLayerCpu). ROOT_EXECUTABLE(testConvLayerCpu TestConvLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayer-CPU COMMAND testConvLayerCpu). ROOT_EXECUTABLE(testRo,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:4402,Testability,test,testConvNetPred,4402,ence architecture; if (Test_Reference). ROOT_EXECUTABLE(testIm2Col TestIm2Col.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col COMMAND testIm2Col). ROOT_EXECUTABLE(testPoolingLayer TestPoolingLayer.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer COMMAND testPoolingLayer). ROOT_EXECUTABLE(testReshape TestReshape.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape COMMAND testReshape). ROOT_EXECUTABLE(testRotWeights TestRotateWeights.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights COMMAND testRotWeights). #-- features not implemeted in ref architectures; #ROOT_EXECUTABLE(testForwardPass TestForwardPass.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Forward COMMAND testForwardPass). #ROOT_EXECUTABLE(testConvNetLoss TestConvNetLoss.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Loss COMMAND testConvNetLoss). #ROOT_EXECUTABLE(testConvNetPred TestConvNetPrediction.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Pred COMMAND testConvNetPred). #ROOT_EXECUTABLE(testDLMinimization TestMinimization.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization COMMAND testDLMinimization). #ROOT_EXECUTABLE(testTensorDataLoader TestTensorDataLoader.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader COMMAND testTensorDataLoader). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). ROOT_EXECUTABLE(testIm2ColCpu TestIm2ColCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col-CPU COMMAND testIm2ColCpu). ROOT_EXECUTABLE(testPoolingLayerCpu TestPoolingLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer-CPU COMMAND testPoolingLayerCpu). ROOT_EXECUTABLE(testConvLayerCpu TestConvLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayer-CPU COMMAND testConvLayerCpu). ROOT_EXECUTABLE(testRotWeightsCpu TestRotateWeightsCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_T,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:4437,Testability,test,testDLMinimization,4437,Im2Col.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col COMMAND testIm2Col). ROOT_EXECUTABLE(testPoolingLayer TestPoolingLayer.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer COMMAND testPoolingLayer). ROOT_EXECUTABLE(testReshape TestReshape.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape COMMAND testReshape). ROOT_EXECUTABLE(testRotWeights TestRotateWeights.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights COMMAND testRotWeights). #-- features not implemeted in ref architectures; #ROOT_EXECUTABLE(testForwardPass TestForwardPass.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Forward COMMAND testForwardPass). #ROOT_EXECUTABLE(testConvNetLoss TestConvNetLoss.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Loss COMMAND testConvNetLoss). #ROOT_EXECUTABLE(testConvNetPred TestConvNetPrediction.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Pred COMMAND testConvNetPred). #ROOT_EXECUTABLE(testDLMinimization TestMinimization.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization COMMAND testDLMinimization). #ROOT_EXECUTABLE(testTensorDataLoader TestTensorDataLoader.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader COMMAND testTensorDataLoader). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). ROOT_EXECUTABLE(testIm2ColCpu TestIm2ColCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col-CPU COMMAND testIm2ColCpu). ROOT_EXECUTABLE(testPoolingLayerCpu TestPoolingLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer-CPU COMMAND testPoolingLayerCpu). ROOT_EXECUTABLE(testConvLayerCpu TestConvLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayer-CPU COMMAND testConvLayerCpu). ROOT_EXECUTABLE(testRotWeightsCpu TestRotateWeightsCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights-CPU COMMAND testRotWeightsCpu). ROOT_EXECU,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:4456,Testability,Test,TestMinimization,4456,Im2Col.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col COMMAND testIm2Col). ROOT_EXECUTABLE(testPoolingLayer TestPoolingLayer.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer COMMAND testPoolingLayer). ROOT_EXECUTABLE(testReshape TestReshape.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape COMMAND testReshape). ROOT_EXECUTABLE(testRotWeights TestRotateWeights.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights COMMAND testRotWeights). #-- features not implemeted in ref architectures; #ROOT_EXECUTABLE(testForwardPass TestForwardPass.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Forward COMMAND testForwardPass). #ROOT_EXECUTABLE(testConvNetLoss TestConvNetLoss.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Loss COMMAND testConvNetLoss). #ROOT_EXECUTABLE(testConvNetPred TestConvNetPrediction.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Pred COMMAND testConvNetPred). #ROOT_EXECUTABLE(testDLMinimization TestMinimization.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization COMMAND testDLMinimization). #ROOT_EXECUTABLE(testTensorDataLoader TestTensorDataLoader.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader COMMAND testTensorDataLoader). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). ROOT_EXECUTABLE(testIm2ColCpu TestIm2ColCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col-CPU COMMAND testIm2ColCpu). ROOT_EXECUTABLE(testPoolingLayerCpu TestPoolingLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer-CPU COMMAND testPoolingLayerCpu). ROOT_EXECUTABLE(testConvLayerCpu TestConvLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayer-CPU COMMAND testConvLayerCpu). ROOT_EXECUTABLE(testRotWeightsCpu TestRotateWeightsCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights-CPU COMMAND testRotWeightsCpu). ROOT_EXECU,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:4551,Testability,test,testDLMinimization,4551,D testIm2Col). ROOT_EXECUTABLE(testPoolingLayer TestPoolingLayer.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer COMMAND testPoolingLayer). ROOT_EXECUTABLE(testReshape TestReshape.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape COMMAND testReshape). ROOT_EXECUTABLE(testRotWeights TestRotateWeights.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights COMMAND testRotWeights). #-- features not implemeted in ref architectures; #ROOT_EXECUTABLE(testForwardPass TestForwardPass.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Forward COMMAND testForwardPass). #ROOT_EXECUTABLE(testConvNetLoss TestConvNetLoss.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Loss COMMAND testConvNetLoss). #ROOT_EXECUTABLE(testConvNetPred TestConvNetPrediction.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Pred COMMAND testConvNetPred). #ROOT_EXECUTABLE(testDLMinimization TestMinimization.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization COMMAND testDLMinimization). #ROOT_EXECUTABLE(testTensorDataLoader TestTensorDataLoader.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader COMMAND testTensorDataLoader). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). ROOT_EXECUTABLE(testIm2ColCpu TestIm2ColCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col-CPU COMMAND testIm2ColCpu). ROOT_EXECUTABLE(testPoolingLayerCpu TestPoolingLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer-CPU COMMAND testPoolingLayerCpu). ROOT_EXECUTABLE(testConvLayerCpu TestConvLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayer-CPU COMMAND testConvLayerCpu). ROOT_EXECUTABLE(testRotWeightsCpu TestRotateWeightsCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights-CPU COMMAND testRotWeightsCpu). ROOT_EXECUTABLE(testForwardPassCpu TestForwardPassCpu.cxx LIBRARIES ${Libraries}); ROO,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:4589,Testability,test,testTensorDataLoader,4589,${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer COMMAND testPoolingLayer). ROOT_EXECUTABLE(testReshape TestReshape.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape COMMAND testReshape). ROOT_EXECUTABLE(testRotWeights TestRotateWeights.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights COMMAND testRotWeights). #-- features not implemeted in ref architectures; #ROOT_EXECUTABLE(testForwardPass TestForwardPass.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Forward COMMAND testForwardPass). #ROOT_EXECUTABLE(testConvNetLoss TestConvNetLoss.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Loss COMMAND testConvNetLoss). #ROOT_EXECUTABLE(testConvNetPred TestConvNetPrediction.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Pred COMMAND testConvNetPred). #ROOT_EXECUTABLE(testDLMinimization TestMinimization.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization COMMAND testDLMinimization). #ROOT_EXECUTABLE(testTensorDataLoader TestTensorDataLoader.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader COMMAND testTensorDataLoader). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). ROOT_EXECUTABLE(testIm2ColCpu TestIm2ColCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col-CPU COMMAND testIm2ColCpu). ROOT_EXECUTABLE(testPoolingLayerCpu TestPoolingLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer-CPU COMMAND testPoolingLayerCpu). ROOT_EXECUTABLE(testConvLayerCpu TestConvLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayer-CPU COMMAND testConvLayerCpu). ROOT_EXECUTABLE(testRotWeightsCpu TestRotateWeightsCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights-CPU COMMAND testRotWeightsCpu). ROOT_EXECUTABLE(testForwardPassCpu TestForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Forward-CPU COMMAND testForwardPassCpu). ROOT_EXECUTABL,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:4610,Testability,Test,TestTensorDataLoader,4610,${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer COMMAND testPoolingLayer). ROOT_EXECUTABLE(testReshape TestReshape.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape COMMAND testReshape). ROOT_EXECUTABLE(testRotWeights TestRotateWeights.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights COMMAND testRotWeights). #-- features not implemeted in ref architectures; #ROOT_EXECUTABLE(testForwardPass TestForwardPass.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Forward COMMAND testForwardPass). #ROOT_EXECUTABLE(testConvNetLoss TestConvNetLoss.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Loss COMMAND testConvNetLoss). #ROOT_EXECUTABLE(testConvNetPred TestConvNetPrediction.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Pred COMMAND testConvNetPred). #ROOT_EXECUTABLE(testDLMinimization TestMinimization.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization COMMAND testDLMinimization). #ROOT_EXECUTABLE(testTensorDataLoader TestTensorDataLoader.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader COMMAND testTensorDataLoader). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). ROOT_EXECUTABLE(testIm2ColCpu TestIm2ColCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col-CPU COMMAND testIm2ColCpu). ROOT_EXECUTABLE(testPoolingLayerCpu TestPoolingLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer-CPU COMMAND testPoolingLayerCpu). ROOT_EXECUTABLE(testConvLayerCpu TestConvLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayer-CPU COMMAND testConvLayerCpu). ROOT_EXECUTABLE(testRotWeightsCpu TestRotateWeightsCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights-CPU COMMAND testRotWeightsCpu). ROOT_EXECUTABLE(testForwardPassCpu TestForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Forward-CPU COMMAND testForwardPassCpu). ROOT_EXECUTABL,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:4711,Testability,test,testTensorDataLoader,4711, ROOT_EXECUTABLE(testReshape TestReshape.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape COMMAND testReshape). ROOT_EXECUTABLE(testRotWeights TestRotateWeights.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights COMMAND testRotWeights). #-- features not implemeted in ref architectures; #ROOT_EXECUTABLE(testForwardPass TestForwardPass.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Forward COMMAND testForwardPass). #ROOT_EXECUTABLE(testConvNetLoss TestConvNetLoss.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Loss COMMAND testConvNetLoss). #ROOT_EXECUTABLE(testConvNetPred TestConvNetPrediction.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Pred COMMAND testConvNetPred). #ROOT_EXECUTABLE(testDLMinimization TestMinimization.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization COMMAND testDLMinimization). #ROOT_EXECUTABLE(testTensorDataLoader TestTensorDataLoader.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader COMMAND testTensorDataLoader). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). ROOT_EXECUTABLE(testIm2ColCpu TestIm2ColCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col-CPU COMMAND testIm2ColCpu). ROOT_EXECUTABLE(testPoolingLayerCpu TestPoolingLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer-CPU COMMAND testPoolingLayerCpu). ROOT_EXECUTABLE(testConvLayerCpu TestConvLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayer-CPU COMMAND testConvLayerCpu). ROOT_EXECUTABLE(testRotWeightsCpu TestRotateWeightsCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights-CPU COMMAND testRotWeightsCpu). ROOT_EXECUTABLE(testForwardPassCpu TestForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Forward-CPU COMMAND testForwardPassCpu). ROOT_EXECUTABLE(testConvNetLossCpu TestConvNetLossCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TES,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:4752,Testability,test,tests,4752,; ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape COMMAND testReshape). ROOT_EXECUTABLE(testRotWeights TestRotateWeights.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights COMMAND testRotWeights). #-- features not implemeted in ref architectures; #ROOT_EXECUTABLE(testForwardPass TestForwardPass.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Forward COMMAND testForwardPass). #ROOT_EXECUTABLE(testConvNetLoss TestConvNetLoss.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Loss COMMAND testConvNetLoss). #ROOT_EXECUTABLE(testConvNetPred TestConvNetPrediction.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Pred COMMAND testConvNetPred). #ROOT_EXECUTABLE(testDLMinimization TestMinimization.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization COMMAND testDLMinimization). #ROOT_EXECUTABLE(testTensorDataLoader TestTensorDataLoader.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader COMMAND testTensorDataLoader). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). ROOT_EXECUTABLE(testIm2ColCpu TestIm2ColCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col-CPU COMMAND testIm2ColCpu). ROOT_EXECUTABLE(testPoolingLayerCpu TestPoolingLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer-CPU COMMAND testPoolingLayerCpu). ROOT_EXECUTABLE(testConvLayerCpu TestConvLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayer-CPU COMMAND testConvLayerCpu). ROOT_EXECUTABLE(testRotWeightsCpu TestRotateWeightsCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights-CPU COMMAND testRotWeightsCpu). ROOT_EXECUTABLE(testForwardPassCpu TestForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Forward-CPU COMMAND testForwardPassCpu). ROOT_EXECUTABLE(testConvNetLossCpu TestConvNetLossCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Loss-CPU COMMAND testConvNetLossCpu). ROOT_EXECUTABLE,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:4992,Testability,test,testPoolingLayerCpu,4992,OT_EXECUTABLE(testForwardPass TestForwardPass.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Forward COMMAND testForwardPass). #ROOT_EXECUTABLE(testConvNetLoss TestConvNetLoss.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Loss COMMAND testConvNetLoss). #ROOT_EXECUTABLE(testConvNetPred TestConvNetPrediction.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Pred COMMAND testConvNetPred). #ROOT_EXECUTABLE(testDLMinimization TestMinimization.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization COMMAND testDLMinimization). #ROOT_EXECUTABLE(testTensorDataLoader TestTensorDataLoader.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader COMMAND testTensorDataLoader). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). ROOT_EXECUTABLE(testIm2ColCpu TestIm2ColCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col-CPU COMMAND testIm2ColCpu). ROOT_EXECUTABLE(testPoolingLayerCpu TestPoolingLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer-CPU COMMAND testPoolingLayerCpu). ROOT_EXECUTABLE(testConvLayerCpu TestConvLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayer-CPU COMMAND testConvLayerCpu). ROOT_EXECUTABLE(testRotWeightsCpu TestRotateWeightsCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights-CPU COMMAND testRotWeightsCpu). ROOT_EXECUTABLE(testForwardPassCpu TestForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Forward-CPU COMMAND testForwardPassCpu). ROOT_EXECUTABLE(testConvNetLossCpu TestConvNetLossCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Loss-CPU COMMAND testConvNetLossCpu). ROOT_EXECUTABLE(testConvNetPredCpu TestConvNetPredictionCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Pred-CPU COMMAND testConvNetPredCpu). ROOT_EXECUTABLE(testReshapeCpu TestReshapeCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape-CPU C,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:5012,Testability,Test,TestPoolingLayerCpu,5012,OT_EXECUTABLE(testForwardPass TestForwardPass.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Forward COMMAND testForwardPass). #ROOT_EXECUTABLE(testConvNetLoss TestConvNetLoss.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Loss COMMAND testConvNetLoss). #ROOT_EXECUTABLE(testConvNetPred TestConvNetPrediction.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Pred COMMAND testConvNetPred). #ROOT_EXECUTABLE(testDLMinimization TestMinimization.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization COMMAND testDLMinimization). #ROOT_EXECUTABLE(testTensorDataLoader TestTensorDataLoader.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader COMMAND testTensorDataLoader). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). ROOT_EXECUTABLE(testIm2ColCpu TestIm2ColCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col-CPU COMMAND testIm2ColCpu). ROOT_EXECUTABLE(testPoolingLayerCpu TestPoolingLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer-CPU COMMAND testPoolingLayerCpu). ROOT_EXECUTABLE(testConvLayerCpu TestConvLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayer-CPU COMMAND testConvLayerCpu). ROOT_EXECUTABLE(testRotWeightsCpu TestRotateWeightsCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights-CPU COMMAND testRotWeightsCpu). ROOT_EXECUTABLE(testForwardPassCpu TestForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Forward-CPU COMMAND testForwardPassCpu). ROOT_EXECUTABLE(testConvNetLossCpu TestConvNetLossCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Loss-CPU COMMAND testConvNetLossCpu). ROOT_EXECUTABLE(testConvNetPredCpu TestConvNetPredictionCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Pred-CPU COMMAND testConvNetPredCpu). ROOT_EXECUTABLE(testReshapeCpu TestReshapeCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape-CPU C,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:5113,Testability,test,testPoolingLayerCpu,5113,_ADD_TEST(TMVA-DNN-CNN-Forward COMMAND testForwardPass). #ROOT_EXECUTABLE(testConvNetLoss TestConvNetLoss.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Loss COMMAND testConvNetLoss). #ROOT_EXECUTABLE(testConvNetPred TestConvNetPrediction.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Pred COMMAND testConvNetPred). #ROOT_EXECUTABLE(testDLMinimization TestMinimization.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization COMMAND testDLMinimization). #ROOT_EXECUTABLE(testTensorDataLoader TestTensorDataLoader.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader COMMAND testTensorDataLoader). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). ROOT_EXECUTABLE(testIm2ColCpu TestIm2ColCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col-CPU COMMAND testIm2ColCpu). ROOT_EXECUTABLE(testPoolingLayerCpu TestPoolingLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer-CPU COMMAND testPoolingLayerCpu). ROOT_EXECUTABLE(testConvLayerCpu TestConvLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayer-CPU COMMAND testConvLayerCpu). ROOT_EXECUTABLE(testRotWeightsCpu TestRotateWeightsCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights-CPU COMMAND testRotWeightsCpu). ROOT_EXECUTABLE(testForwardPassCpu TestForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Forward-CPU COMMAND testForwardPassCpu). ROOT_EXECUTABLE(testConvNetLossCpu TestConvNetLossCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Loss-CPU COMMAND testConvNetLossCpu). ROOT_EXECUTABLE(testConvNetPredCpu TestConvNetPredictionCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Pred-CPU COMMAND testConvNetPredCpu). ROOT_EXECUTABLE(testReshapeCpu TestReshapeCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape-CPU COMMAND testReshapeCpu). #-- need to be fixed; #ROOT_EXECUTABLE(testTensorDataLo,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:5151,Testability,test,testConvLayerCpu,5151,stConvNetLoss TestConvNetLoss.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Loss COMMAND testConvNetLoss). #ROOT_EXECUTABLE(testConvNetPred TestConvNetPrediction.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Pred COMMAND testConvNetPred). #ROOT_EXECUTABLE(testDLMinimization TestMinimization.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization COMMAND testDLMinimization). #ROOT_EXECUTABLE(testTensorDataLoader TestTensorDataLoader.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader COMMAND testTensorDataLoader). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). ROOT_EXECUTABLE(testIm2ColCpu TestIm2ColCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col-CPU COMMAND testIm2ColCpu). ROOT_EXECUTABLE(testPoolingLayerCpu TestPoolingLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer-CPU COMMAND testPoolingLayerCpu). ROOT_EXECUTABLE(testConvLayerCpu TestConvLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayer-CPU COMMAND testConvLayerCpu). ROOT_EXECUTABLE(testRotWeightsCpu TestRotateWeightsCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights-CPU COMMAND testRotWeightsCpu). ROOT_EXECUTABLE(testForwardPassCpu TestForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Forward-CPU COMMAND testForwardPassCpu). ROOT_EXECUTABLE(testConvNetLossCpu TestConvNetLossCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Loss-CPU COMMAND testConvNetLossCpu). ROOT_EXECUTABLE(testConvNetPredCpu TestConvNetPredictionCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Pred-CPU COMMAND testConvNetPredCpu). ROOT_EXECUTABLE(testReshapeCpu TestReshapeCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape-CPU COMMAND testReshapeCpu). #-- need to be fixed; #ROOT_EXECUTABLE(testTensorDataLoaderCpu TestTensorDataLoaderCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(T,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:5168,Testability,Test,TestConvLayerCpu,5168,stConvNetLoss TestConvNetLoss.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Loss COMMAND testConvNetLoss). #ROOT_EXECUTABLE(testConvNetPred TestConvNetPrediction.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Pred COMMAND testConvNetPred). #ROOT_EXECUTABLE(testDLMinimization TestMinimization.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization COMMAND testDLMinimization). #ROOT_EXECUTABLE(testTensorDataLoader TestTensorDataLoader.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader COMMAND testTensorDataLoader). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). ROOT_EXECUTABLE(testIm2ColCpu TestIm2ColCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col-CPU COMMAND testIm2ColCpu). ROOT_EXECUTABLE(testPoolingLayerCpu TestPoolingLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer-CPU COMMAND testPoolingLayerCpu). ROOT_EXECUTABLE(testConvLayerCpu TestConvLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayer-CPU COMMAND testConvLayerCpu). ROOT_EXECUTABLE(testRotWeightsCpu TestRotateWeightsCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights-CPU COMMAND testRotWeightsCpu). ROOT_EXECUTABLE(testForwardPassCpu TestForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Forward-CPU COMMAND testForwardPassCpu). ROOT_EXECUTABLE(testConvNetLossCpu TestConvNetLossCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Loss-CPU COMMAND testConvNetLossCpu). ROOT_EXECUTABLE(testConvNetPredCpu TestConvNetPredictionCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Pred-CPU COMMAND testConvNetPredCpu). ROOT_EXECUTABLE(testReshapeCpu TestReshapeCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape-CPU COMMAND testReshapeCpu). #-- need to be fixed; #ROOT_EXECUTABLE(testTensorDataLoaderCpu TestTensorDataLoaderCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(T,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:5263,Testability,test,testConvLayerCpu,5263,TMVA-DNN-CNN-Loss COMMAND testConvNetLoss). #ROOT_EXECUTABLE(testConvNetPred TestConvNetPrediction.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Pred COMMAND testConvNetPred). #ROOT_EXECUTABLE(testDLMinimization TestMinimization.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization COMMAND testDLMinimization). #ROOT_EXECUTABLE(testTensorDataLoader TestTensorDataLoader.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader COMMAND testTensorDataLoader). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). ROOT_EXECUTABLE(testIm2ColCpu TestIm2ColCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col-CPU COMMAND testIm2ColCpu). ROOT_EXECUTABLE(testPoolingLayerCpu TestPoolingLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer-CPU COMMAND testPoolingLayerCpu). ROOT_EXECUTABLE(testConvLayerCpu TestConvLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayer-CPU COMMAND testConvLayerCpu). ROOT_EXECUTABLE(testRotWeightsCpu TestRotateWeightsCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights-CPU COMMAND testRotWeightsCpu). ROOT_EXECUTABLE(testForwardPassCpu TestForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Forward-CPU COMMAND testForwardPassCpu). ROOT_EXECUTABLE(testConvNetLossCpu TestConvNetLossCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Loss-CPU COMMAND testConvNetLossCpu). ROOT_EXECUTABLE(testConvNetPredCpu TestConvNetPredictionCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Pred-CPU COMMAND testConvNetPredCpu). ROOT_EXECUTABLE(testReshapeCpu TestReshapeCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape-CPU COMMAND testReshapeCpu). #-- need to be fixed; #ROOT_EXECUTABLE(testTensorDataLoaderCpu TestTensorDataLoaderCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader-CPU COMMAND testTensorDataLoaderCpu). #ROOT_EX,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:5298,Testability,test,testRotWeightsCpu,5298, TestConvNetPrediction.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Pred COMMAND testConvNetPred). #ROOT_EXECUTABLE(testDLMinimization TestMinimization.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization COMMAND testDLMinimization). #ROOT_EXECUTABLE(testTensorDataLoader TestTensorDataLoader.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader COMMAND testTensorDataLoader). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). ROOT_EXECUTABLE(testIm2ColCpu TestIm2ColCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col-CPU COMMAND testIm2ColCpu). ROOT_EXECUTABLE(testPoolingLayerCpu TestPoolingLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer-CPU COMMAND testPoolingLayerCpu). ROOT_EXECUTABLE(testConvLayerCpu TestConvLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayer-CPU COMMAND testConvLayerCpu). ROOT_EXECUTABLE(testRotWeightsCpu TestRotateWeightsCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights-CPU COMMAND testRotWeightsCpu). ROOT_EXECUTABLE(testForwardPassCpu TestForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Forward-CPU COMMAND testForwardPassCpu). ROOT_EXECUTABLE(testConvNetLossCpu TestConvNetLossCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Loss-CPU COMMAND testConvNetLossCpu). ROOT_EXECUTABLE(testConvNetPredCpu TestConvNetPredictionCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Pred-CPU COMMAND testConvNetPredCpu). ROOT_EXECUTABLE(testReshapeCpu TestReshapeCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape-CPU COMMAND testReshapeCpu). #-- need to be fixed; #ROOT_EXECUTABLE(testTensorDataLoaderCpu TestTensorDataLoaderCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader-CPU COMMAND testTensorDataLoaderCpu). #ROOT_EXECUTABLE(testDLMinimizationCpu TestMinimizationCpu.cxx LIBRARIES ${Libraries,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:5316,Testability,Test,TestRotateWeightsCpu,5316, TestConvNetPrediction.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Pred COMMAND testConvNetPred). #ROOT_EXECUTABLE(testDLMinimization TestMinimization.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization COMMAND testDLMinimization). #ROOT_EXECUTABLE(testTensorDataLoader TestTensorDataLoader.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader COMMAND testTensorDataLoader). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). ROOT_EXECUTABLE(testIm2ColCpu TestIm2ColCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col-CPU COMMAND testIm2ColCpu). ROOT_EXECUTABLE(testPoolingLayerCpu TestPoolingLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer-CPU COMMAND testPoolingLayerCpu). ROOT_EXECUTABLE(testConvLayerCpu TestConvLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayer-CPU COMMAND testConvLayerCpu). ROOT_EXECUTABLE(testRotWeightsCpu TestRotateWeightsCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights-CPU COMMAND testRotWeightsCpu). ROOT_EXECUTABLE(testForwardPassCpu TestForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Forward-CPU COMMAND testForwardPassCpu). ROOT_EXECUTABLE(testConvNetLossCpu TestConvNetLossCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Loss-CPU COMMAND testConvNetLossCpu). ROOT_EXECUTABLE(testConvNetPredCpu TestConvNetPredictionCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Pred-CPU COMMAND testConvNetPredCpu). ROOT_EXECUTABLE(testReshapeCpu TestReshapeCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape-CPU COMMAND testReshapeCpu). #-- need to be fixed; #ROOT_EXECUTABLE(testTensorDataLoaderCpu TestTensorDataLoaderCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader-CPU COMMAND testTensorDataLoaderCpu). #ROOT_EXECUTABLE(testDLMinimizationCpu TestMinimizationCpu.cxx LIBRARIES ${Libraries,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:5416,Testability,test,testRotWeightsCpu,5416,NN-Pred COMMAND testConvNetPred). #ROOT_EXECUTABLE(testDLMinimization TestMinimization.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization COMMAND testDLMinimization). #ROOT_EXECUTABLE(testTensorDataLoader TestTensorDataLoader.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader COMMAND testTensorDataLoader). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). ROOT_EXECUTABLE(testIm2ColCpu TestIm2ColCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col-CPU COMMAND testIm2ColCpu). ROOT_EXECUTABLE(testPoolingLayerCpu TestPoolingLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer-CPU COMMAND testPoolingLayerCpu). ROOT_EXECUTABLE(testConvLayerCpu TestConvLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayer-CPU COMMAND testConvLayerCpu). ROOT_EXECUTABLE(testRotWeightsCpu TestRotateWeightsCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights-CPU COMMAND testRotWeightsCpu). ROOT_EXECUTABLE(testForwardPassCpu TestForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Forward-CPU COMMAND testForwardPassCpu). ROOT_EXECUTABLE(testConvNetLossCpu TestConvNetLossCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Loss-CPU COMMAND testConvNetLossCpu). ROOT_EXECUTABLE(testConvNetPredCpu TestConvNetPredictionCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Pred-CPU COMMAND testConvNetPredCpu). ROOT_EXECUTABLE(testReshapeCpu TestReshapeCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape-CPU COMMAND testReshapeCpu). #-- need to be fixed; #ROOT_EXECUTABLE(testTensorDataLoaderCpu TestTensorDataLoaderCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader-CPU COMMAND testTensorDataLoaderCpu). #ROOT_EXECUTABLE(testDLMinimizationCpu TestMinimizationCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization-CPU COMMAND testDLMinimizationCp,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:5452,Testability,test,testForwardPassCpu,5452,nimization.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization COMMAND testDLMinimization). #ROOT_EXECUTABLE(testTensorDataLoader TestTensorDataLoader.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader COMMAND testTensorDataLoader). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). ROOT_EXECUTABLE(testIm2ColCpu TestIm2ColCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col-CPU COMMAND testIm2ColCpu). ROOT_EXECUTABLE(testPoolingLayerCpu TestPoolingLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer-CPU COMMAND testPoolingLayerCpu). ROOT_EXECUTABLE(testConvLayerCpu TestConvLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayer-CPU COMMAND testConvLayerCpu). ROOT_EXECUTABLE(testRotWeightsCpu TestRotateWeightsCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights-CPU COMMAND testRotWeightsCpu). ROOT_EXECUTABLE(testForwardPassCpu TestForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Forward-CPU COMMAND testForwardPassCpu). ROOT_EXECUTABLE(testConvNetLossCpu TestConvNetLossCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Loss-CPU COMMAND testConvNetLossCpu). ROOT_EXECUTABLE(testConvNetPredCpu TestConvNetPredictionCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Pred-CPU COMMAND testConvNetPredCpu). ROOT_EXECUTABLE(testReshapeCpu TestReshapeCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape-CPU COMMAND testReshapeCpu). #-- need to be fixed; #ROOT_EXECUTABLE(testTensorDataLoaderCpu TestTensorDataLoaderCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader-CPU COMMAND testTensorDataLoaderCpu). #ROOT_EXECUTABLE(testDLMinimizationCpu TestMinimizationCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization-CPU COMMAND testDLMinimizationCpu). ROOT_EXECUTABLE(testConvBackpropagationCpu TestConvBackpropagation.cxx LI,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:5471,Testability,Test,TestForwardPassCpu,5471,nimization.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization COMMAND testDLMinimization). #ROOT_EXECUTABLE(testTensorDataLoader TestTensorDataLoader.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader COMMAND testTensorDataLoader). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). ROOT_EXECUTABLE(testIm2ColCpu TestIm2ColCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col-CPU COMMAND testIm2ColCpu). ROOT_EXECUTABLE(testPoolingLayerCpu TestPoolingLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer-CPU COMMAND testPoolingLayerCpu). ROOT_EXECUTABLE(testConvLayerCpu TestConvLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayer-CPU COMMAND testConvLayerCpu). ROOT_EXECUTABLE(testRotWeightsCpu TestRotateWeightsCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights-CPU COMMAND testRotWeightsCpu). ROOT_EXECUTABLE(testForwardPassCpu TestForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Forward-CPU COMMAND testForwardPassCpu). ROOT_EXECUTABLE(testConvNetLossCpu TestConvNetLossCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Loss-CPU COMMAND testConvNetLossCpu). ROOT_EXECUTABLE(testConvNetPredCpu TestConvNetPredictionCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Pred-CPU COMMAND testConvNetPredCpu). ROOT_EXECUTABLE(testReshapeCpu TestReshapeCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape-CPU COMMAND testReshapeCpu). #-- need to be fixed; #ROOT_EXECUTABLE(testTensorDataLoaderCpu TestTensorDataLoaderCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader-CPU COMMAND testTensorDataLoaderCpu). #ROOT_EXECUTABLE(testDLMinimizationCpu TestMinimizationCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization-CPU COMMAND testDLMinimizationCpu). ROOT_EXECUTABLE(testConvBackpropagationCpu TestConvBackpropagation.cxx LI,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:5566,Testability,test,testForwardPassCpu,5566,tion COMMAND testDLMinimization). #ROOT_EXECUTABLE(testTensorDataLoader TestTensorDataLoader.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader COMMAND testTensorDataLoader). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). ROOT_EXECUTABLE(testIm2ColCpu TestIm2ColCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col-CPU COMMAND testIm2ColCpu). ROOT_EXECUTABLE(testPoolingLayerCpu TestPoolingLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer-CPU COMMAND testPoolingLayerCpu). ROOT_EXECUTABLE(testConvLayerCpu TestConvLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayer-CPU COMMAND testConvLayerCpu). ROOT_EXECUTABLE(testRotWeightsCpu TestRotateWeightsCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights-CPU COMMAND testRotWeightsCpu). ROOT_EXECUTABLE(testForwardPassCpu TestForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Forward-CPU COMMAND testForwardPassCpu). ROOT_EXECUTABLE(testConvNetLossCpu TestConvNetLossCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Loss-CPU COMMAND testConvNetLossCpu). ROOT_EXECUTABLE(testConvNetPredCpu TestConvNetPredictionCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Pred-CPU COMMAND testConvNetPredCpu). ROOT_EXECUTABLE(testReshapeCpu TestReshapeCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape-CPU COMMAND testReshapeCpu). #-- need to be fixed; #ROOT_EXECUTABLE(testTensorDataLoaderCpu TestTensorDataLoaderCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader-CPU COMMAND testTensorDataLoaderCpu). #ROOT_EXECUTABLE(testDLMinimizationCpu TestMinimizationCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization-CPU COMMAND testDLMinimizationCpu). ROOT_EXECUTABLE(testConvBackpropagationCpu TestConvBackpropagation.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Backpropagation-CPU COMMA,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:5603,Testability,test,testConvNetLossCpu,5603,tTensorDataLoader.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader COMMAND testTensorDataLoader). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). ROOT_EXECUTABLE(testIm2ColCpu TestIm2ColCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col-CPU COMMAND testIm2ColCpu). ROOT_EXECUTABLE(testPoolingLayerCpu TestPoolingLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer-CPU COMMAND testPoolingLayerCpu). ROOT_EXECUTABLE(testConvLayerCpu TestConvLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayer-CPU COMMAND testConvLayerCpu). ROOT_EXECUTABLE(testRotWeightsCpu TestRotateWeightsCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights-CPU COMMAND testRotWeightsCpu). ROOT_EXECUTABLE(testForwardPassCpu TestForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Forward-CPU COMMAND testForwardPassCpu). ROOT_EXECUTABLE(testConvNetLossCpu TestConvNetLossCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Loss-CPU COMMAND testConvNetLossCpu). ROOT_EXECUTABLE(testConvNetPredCpu TestConvNetPredictionCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Pred-CPU COMMAND testConvNetPredCpu). ROOT_EXECUTABLE(testReshapeCpu TestReshapeCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape-CPU COMMAND testReshapeCpu). #-- need to be fixed; #ROOT_EXECUTABLE(testTensorDataLoaderCpu TestTensorDataLoaderCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader-CPU COMMAND testTensorDataLoaderCpu). #ROOT_EXECUTABLE(testDLMinimizationCpu TestMinimizationCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization-CPU COMMAND testDLMinimizationCpu). ROOT_EXECUTABLE(testConvBackpropagationCpu TestConvBackpropagation.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Backpropagation-CPU COMMAND testConvBackpropagationCpu). ROOT_EXECUTABLE(testMethodDLCNN TestMethodDL,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:5622,Testability,Test,TestConvNetLossCpu,5622,tTensorDataLoader.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader COMMAND testTensorDataLoader). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). ROOT_EXECUTABLE(testIm2ColCpu TestIm2ColCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col-CPU COMMAND testIm2ColCpu). ROOT_EXECUTABLE(testPoolingLayerCpu TestPoolingLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer-CPU COMMAND testPoolingLayerCpu). ROOT_EXECUTABLE(testConvLayerCpu TestConvLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayer-CPU COMMAND testConvLayerCpu). ROOT_EXECUTABLE(testRotWeightsCpu TestRotateWeightsCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights-CPU COMMAND testRotWeightsCpu). ROOT_EXECUTABLE(testForwardPassCpu TestForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Forward-CPU COMMAND testForwardPassCpu). ROOT_EXECUTABLE(testConvNetLossCpu TestConvNetLossCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Loss-CPU COMMAND testConvNetLossCpu). ROOT_EXECUTABLE(testConvNetPredCpu TestConvNetPredictionCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Pred-CPU COMMAND testConvNetPredCpu). ROOT_EXECUTABLE(testReshapeCpu TestReshapeCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape-CPU COMMAND testReshapeCpu). #-- need to be fixed; #ROOT_EXECUTABLE(testTensorDataLoaderCpu TestTensorDataLoaderCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader-CPU COMMAND testTensorDataLoaderCpu). #ROOT_EXECUTABLE(testDLMinimizationCpu TestMinimizationCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization-CPU COMMAND testDLMinimizationCpu). ROOT_EXECUTABLE(testConvBackpropagationCpu TestConvBackpropagation.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Backpropagation-CPU COMMAND testConvBackpropagationCpu). ROOT_EXECUTABLE(testMethodDLCNN TestMethodDL,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:5714,Testability,test,testConvNetLossCpu,5714,sor-Data-Loader COMMAND testTensorDataLoader). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). ROOT_EXECUTABLE(testIm2ColCpu TestIm2ColCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col-CPU COMMAND testIm2ColCpu). ROOT_EXECUTABLE(testPoolingLayerCpu TestPoolingLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer-CPU COMMAND testPoolingLayerCpu). ROOT_EXECUTABLE(testConvLayerCpu TestConvLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayer-CPU COMMAND testConvLayerCpu). ROOT_EXECUTABLE(testRotWeightsCpu TestRotateWeightsCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights-CPU COMMAND testRotWeightsCpu). ROOT_EXECUTABLE(testForwardPassCpu TestForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Forward-CPU COMMAND testForwardPassCpu). ROOT_EXECUTABLE(testConvNetLossCpu TestConvNetLossCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Loss-CPU COMMAND testConvNetLossCpu). ROOT_EXECUTABLE(testConvNetPredCpu TestConvNetPredictionCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Pred-CPU COMMAND testConvNetPredCpu). ROOT_EXECUTABLE(testReshapeCpu TestReshapeCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape-CPU COMMAND testReshapeCpu). #-- need to be fixed; #ROOT_EXECUTABLE(testTensorDataLoaderCpu TestTensorDataLoaderCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader-CPU COMMAND testTensorDataLoaderCpu). #ROOT_EXECUTABLE(testDLMinimizationCpu TestMinimizationCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization-CPU COMMAND testDLMinimizationCpu). ROOT_EXECUTABLE(testConvBackpropagationCpu TestConvBackpropagation.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Backpropagation-CPU COMMAND testConvBackpropagationCpu). ROOT_EXECUTABLE(testMethodDLCNN TestMethodDLCNN.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-MethodDL COMMA,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:5751,Testability,test,testConvNetPredCpu,5751,orDataLoader). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). ROOT_EXECUTABLE(testIm2ColCpu TestIm2ColCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col-CPU COMMAND testIm2ColCpu). ROOT_EXECUTABLE(testPoolingLayerCpu TestPoolingLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer-CPU COMMAND testPoolingLayerCpu). ROOT_EXECUTABLE(testConvLayerCpu TestConvLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayer-CPU COMMAND testConvLayerCpu). ROOT_EXECUTABLE(testRotWeightsCpu TestRotateWeightsCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights-CPU COMMAND testRotWeightsCpu). ROOT_EXECUTABLE(testForwardPassCpu TestForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Forward-CPU COMMAND testForwardPassCpu). ROOT_EXECUTABLE(testConvNetLossCpu TestConvNetLossCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Loss-CPU COMMAND testConvNetLossCpu). ROOT_EXECUTABLE(testConvNetPredCpu TestConvNetPredictionCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Pred-CPU COMMAND testConvNetPredCpu). ROOT_EXECUTABLE(testReshapeCpu TestReshapeCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape-CPU COMMAND testReshapeCpu). #-- need to be fixed; #ROOT_EXECUTABLE(testTensorDataLoaderCpu TestTensorDataLoaderCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader-CPU COMMAND testTensorDataLoaderCpu). #ROOT_EXECUTABLE(testDLMinimizationCpu TestMinimizationCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization-CPU COMMAND testDLMinimizationCpu). ROOT_EXECUTABLE(testConvBackpropagationCpu TestConvBackpropagation.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Backpropagation-CPU COMMAND testConvBackpropagationCpu). ROOT_EXECUTABLE(testMethodDLCNN TestMethodDLCNN.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-MethodDL COMMAND testMethodDLCNN). endif (); ,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:5770,Testability,Test,TestConvNetPredictionCpu,5770,orDataLoader). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). ROOT_EXECUTABLE(testIm2ColCpu TestIm2ColCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col-CPU COMMAND testIm2ColCpu). ROOT_EXECUTABLE(testPoolingLayerCpu TestPoolingLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer-CPU COMMAND testPoolingLayerCpu). ROOT_EXECUTABLE(testConvLayerCpu TestConvLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayer-CPU COMMAND testConvLayerCpu). ROOT_EXECUTABLE(testRotWeightsCpu TestRotateWeightsCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights-CPU COMMAND testRotWeightsCpu). ROOT_EXECUTABLE(testForwardPassCpu TestForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Forward-CPU COMMAND testForwardPassCpu). ROOT_EXECUTABLE(testConvNetLossCpu TestConvNetLossCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Loss-CPU COMMAND testConvNetLossCpu). ROOT_EXECUTABLE(testConvNetPredCpu TestConvNetPredictionCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Pred-CPU COMMAND testConvNetPredCpu). ROOT_EXECUTABLE(testReshapeCpu TestReshapeCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape-CPU COMMAND testReshapeCpu). #-- need to be fixed; #ROOT_EXECUTABLE(testTensorDataLoaderCpu TestTensorDataLoaderCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader-CPU COMMAND testTensorDataLoaderCpu). #ROOT_EXECUTABLE(testDLMinimizationCpu TestMinimizationCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization-CPU COMMAND testDLMinimizationCpu). ROOT_EXECUTABLE(testConvBackpropagationCpu TestConvBackpropagation.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Backpropagation-CPU COMMAND testConvBackpropagationCpu). ROOT_EXECUTABLE(testMethodDLCNN TestMethodDLCNN.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-MethodDL COMMAND testMethodDLCNN). endif (); ,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:5868,Testability,test,testConvNetPredCpu,5868,orDataLoader). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). ROOT_EXECUTABLE(testIm2ColCpu TestIm2ColCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col-CPU COMMAND testIm2ColCpu). ROOT_EXECUTABLE(testPoolingLayerCpu TestPoolingLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer-CPU COMMAND testPoolingLayerCpu). ROOT_EXECUTABLE(testConvLayerCpu TestConvLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayer-CPU COMMAND testConvLayerCpu). ROOT_EXECUTABLE(testRotWeightsCpu TestRotateWeightsCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights-CPU COMMAND testRotWeightsCpu). ROOT_EXECUTABLE(testForwardPassCpu TestForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Forward-CPU COMMAND testForwardPassCpu). ROOT_EXECUTABLE(testConvNetLossCpu TestConvNetLossCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Loss-CPU COMMAND testConvNetLossCpu). ROOT_EXECUTABLE(testConvNetPredCpu TestConvNetPredictionCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Pred-CPU COMMAND testConvNetPredCpu). ROOT_EXECUTABLE(testReshapeCpu TestReshapeCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape-CPU COMMAND testReshapeCpu). #-- need to be fixed; #ROOT_EXECUTABLE(testTensorDataLoaderCpu TestTensorDataLoaderCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader-CPU COMMAND testTensorDataLoaderCpu). #ROOT_EXECUTABLE(testDLMinimizationCpu TestMinimizationCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization-CPU COMMAND testDLMinimizationCpu). ROOT_EXECUTABLE(testConvBackpropagationCpu TestConvBackpropagation.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Backpropagation-CPU COMMAND testConvBackpropagationCpu). ROOT_EXECUTABLE(testMethodDLCNN TestMethodDLCNN.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-MethodDL COMMAND testMethodDLCNN). endif (); ,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:5905,Testability,test,testReshapeCpu,5905,orDataLoader). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). ROOT_EXECUTABLE(testIm2ColCpu TestIm2ColCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col-CPU COMMAND testIm2ColCpu). ROOT_EXECUTABLE(testPoolingLayerCpu TestPoolingLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer-CPU COMMAND testPoolingLayerCpu). ROOT_EXECUTABLE(testConvLayerCpu TestConvLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayer-CPU COMMAND testConvLayerCpu). ROOT_EXECUTABLE(testRotWeightsCpu TestRotateWeightsCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights-CPU COMMAND testRotWeightsCpu). ROOT_EXECUTABLE(testForwardPassCpu TestForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Forward-CPU COMMAND testForwardPassCpu). ROOT_EXECUTABLE(testConvNetLossCpu TestConvNetLossCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Loss-CPU COMMAND testConvNetLossCpu). ROOT_EXECUTABLE(testConvNetPredCpu TestConvNetPredictionCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Pred-CPU COMMAND testConvNetPredCpu). ROOT_EXECUTABLE(testReshapeCpu TestReshapeCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape-CPU COMMAND testReshapeCpu). #-- need to be fixed; #ROOT_EXECUTABLE(testTensorDataLoaderCpu TestTensorDataLoaderCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader-CPU COMMAND testTensorDataLoaderCpu). #ROOT_EXECUTABLE(testDLMinimizationCpu TestMinimizationCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization-CPU COMMAND testDLMinimizationCpu). ROOT_EXECUTABLE(testConvBackpropagationCpu TestConvBackpropagation.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Backpropagation-CPU COMMAND testConvBackpropagationCpu). ROOT_EXECUTABLE(testMethodDLCNN TestMethodDLCNN.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-MethodDL COMMAND testMethodDLCNN). endif (); ,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:5920,Testability,Test,TestReshapeCpu,5920,orDataLoader). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). ROOT_EXECUTABLE(testIm2ColCpu TestIm2ColCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col-CPU COMMAND testIm2ColCpu). ROOT_EXECUTABLE(testPoolingLayerCpu TestPoolingLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer-CPU COMMAND testPoolingLayerCpu). ROOT_EXECUTABLE(testConvLayerCpu TestConvLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayer-CPU COMMAND testConvLayerCpu). ROOT_EXECUTABLE(testRotWeightsCpu TestRotateWeightsCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights-CPU COMMAND testRotWeightsCpu). ROOT_EXECUTABLE(testForwardPassCpu TestForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Forward-CPU COMMAND testForwardPassCpu). ROOT_EXECUTABLE(testConvNetLossCpu TestConvNetLossCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Loss-CPU COMMAND testConvNetLossCpu). ROOT_EXECUTABLE(testConvNetPredCpu TestConvNetPredictionCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Pred-CPU COMMAND testConvNetPredCpu). ROOT_EXECUTABLE(testReshapeCpu TestReshapeCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape-CPU COMMAND testReshapeCpu). #-- need to be fixed; #ROOT_EXECUTABLE(testTensorDataLoaderCpu TestTensorDataLoaderCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader-CPU COMMAND testTensorDataLoaderCpu). #ROOT_EXECUTABLE(testDLMinimizationCpu TestMinimizationCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization-CPU COMMAND testDLMinimizationCpu). ROOT_EXECUTABLE(testConvBackpropagationCpu TestConvBackpropagation.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Backpropagation-CPU COMMAND testConvBackpropagationCpu). ROOT_EXECUTABLE(testMethodDLCNN TestMethodDLCNN.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-MethodDL COMMAND testMethodDLCNN). endif (); ,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:6011,Testability,test,testReshapeCpu,6011,orDataLoader). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). ROOT_EXECUTABLE(testIm2ColCpu TestIm2ColCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col-CPU COMMAND testIm2ColCpu). ROOT_EXECUTABLE(testPoolingLayerCpu TestPoolingLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer-CPU COMMAND testPoolingLayerCpu). ROOT_EXECUTABLE(testConvLayerCpu TestConvLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayer-CPU COMMAND testConvLayerCpu). ROOT_EXECUTABLE(testRotWeightsCpu TestRotateWeightsCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights-CPU COMMAND testRotWeightsCpu). ROOT_EXECUTABLE(testForwardPassCpu TestForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Forward-CPU COMMAND testForwardPassCpu). ROOT_EXECUTABLE(testConvNetLossCpu TestConvNetLossCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Loss-CPU COMMAND testConvNetLossCpu). ROOT_EXECUTABLE(testConvNetPredCpu TestConvNetPredictionCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Pred-CPU COMMAND testConvNetPredCpu). ROOT_EXECUTABLE(testReshapeCpu TestReshapeCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape-CPU COMMAND testReshapeCpu). #-- need to be fixed; #ROOT_EXECUTABLE(testTensorDataLoaderCpu TestTensorDataLoaderCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader-CPU COMMAND testTensorDataLoaderCpu). #ROOT_EXECUTABLE(testDLMinimizationCpu TestMinimizationCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization-CPU COMMAND testDLMinimizationCpu). ROOT_EXECUTABLE(testConvBackpropagationCpu TestConvBackpropagation.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Backpropagation-CPU COMMAND testConvBackpropagationCpu). ROOT_EXECUTABLE(testMethodDLCNN TestMethodDLCNN.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-MethodDL COMMAND testMethodDLCNN). endif (); ,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:6067,Testability,test,testTensorDataLoaderCpu,6067,orDataLoader). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). ROOT_EXECUTABLE(testIm2ColCpu TestIm2ColCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col-CPU COMMAND testIm2ColCpu). ROOT_EXECUTABLE(testPoolingLayerCpu TestPoolingLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer-CPU COMMAND testPoolingLayerCpu). ROOT_EXECUTABLE(testConvLayerCpu TestConvLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayer-CPU COMMAND testConvLayerCpu). ROOT_EXECUTABLE(testRotWeightsCpu TestRotateWeightsCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights-CPU COMMAND testRotWeightsCpu). ROOT_EXECUTABLE(testForwardPassCpu TestForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Forward-CPU COMMAND testForwardPassCpu). ROOT_EXECUTABLE(testConvNetLossCpu TestConvNetLossCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Loss-CPU COMMAND testConvNetLossCpu). ROOT_EXECUTABLE(testConvNetPredCpu TestConvNetPredictionCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Pred-CPU COMMAND testConvNetPredCpu). ROOT_EXECUTABLE(testReshapeCpu TestReshapeCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape-CPU COMMAND testReshapeCpu). #-- need to be fixed; #ROOT_EXECUTABLE(testTensorDataLoaderCpu TestTensorDataLoaderCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader-CPU COMMAND testTensorDataLoaderCpu). #ROOT_EXECUTABLE(testDLMinimizationCpu TestMinimizationCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization-CPU COMMAND testDLMinimizationCpu). ROOT_EXECUTABLE(testConvBackpropagationCpu TestConvBackpropagation.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Backpropagation-CPU COMMAND testConvBackpropagationCpu). ROOT_EXECUTABLE(testMethodDLCNN TestMethodDLCNN.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-MethodDL COMMAND testMethodDLCNN). endif (); ,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:6091,Testability,Test,TestTensorDataLoaderCpu,6091,orDataLoader). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). ROOT_EXECUTABLE(testIm2ColCpu TestIm2ColCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col-CPU COMMAND testIm2ColCpu). ROOT_EXECUTABLE(testPoolingLayerCpu TestPoolingLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer-CPU COMMAND testPoolingLayerCpu). ROOT_EXECUTABLE(testConvLayerCpu TestConvLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayer-CPU COMMAND testConvLayerCpu). ROOT_EXECUTABLE(testRotWeightsCpu TestRotateWeightsCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights-CPU COMMAND testRotWeightsCpu). ROOT_EXECUTABLE(testForwardPassCpu TestForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Forward-CPU COMMAND testForwardPassCpu). ROOT_EXECUTABLE(testConvNetLossCpu TestConvNetLossCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Loss-CPU COMMAND testConvNetLossCpu). ROOT_EXECUTABLE(testConvNetPredCpu TestConvNetPredictionCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Pred-CPU COMMAND testConvNetPredCpu). ROOT_EXECUTABLE(testReshapeCpu TestReshapeCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape-CPU COMMAND testReshapeCpu). #-- need to be fixed; #ROOT_EXECUTABLE(testTensorDataLoaderCpu TestTensorDataLoaderCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader-CPU COMMAND testTensorDataLoaderCpu). #ROOT_EXECUTABLE(testDLMinimizationCpu TestMinimizationCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization-CPU COMMAND testDLMinimizationCpu). ROOT_EXECUTABLE(testConvBackpropagationCpu TestConvBackpropagation.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Backpropagation-CPU COMMAND testConvBackpropagationCpu). ROOT_EXECUTABLE(testMethodDLCNN TestMethodDLCNN.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-MethodDL COMMAND testMethodDLCNN). endif (); ,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:6199,Testability,test,testTensorDataLoaderCpu,6199,orDataLoader). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). ROOT_EXECUTABLE(testIm2ColCpu TestIm2ColCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col-CPU COMMAND testIm2ColCpu). ROOT_EXECUTABLE(testPoolingLayerCpu TestPoolingLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer-CPU COMMAND testPoolingLayerCpu). ROOT_EXECUTABLE(testConvLayerCpu TestConvLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayer-CPU COMMAND testConvLayerCpu). ROOT_EXECUTABLE(testRotWeightsCpu TestRotateWeightsCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights-CPU COMMAND testRotWeightsCpu). ROOT_EXECUTABLE(testForwardPassCpu TestForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Forward-CPU COMMAND testForwardPassCpu). ROOT_EXECUTABLE(testConvNetLossCpu TestConvNetLossCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Loss-CPU COMMAND testConvNetLossCpu). ROOT_EXECUTABLE(testConvNetPredCpu TestConvNetPredictionCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Pred-CPU COMMAND testConvNetPredCpu). ROOT_EXECUTABLE(testReshapeCpu TestReshapeCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape-CPU COMMAND testReshapeCpu). #-- need to be fixed; #ROOT_EXECUTABLE(testTensorDataLoaderCpu TestTensorDataLoaderCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader-CPU COMMAND testTensorDataLoaderCpu). #ROOT_EXECUTABLE(testDLMinimizationCpu TestMinimizationCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization-CPU COMMAND testDLMinimizationCpu). ROOT_EXECUTABLE(testConvBackpropagationCpu TestConvBackpropagation.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Backpropagation-CPU COMMAND testConvBackpropagationCpu). ROOT_EXECUTABLE(testMethodDLCNN TestMethodDLCNN.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-MethodDL COMMAND testMethodDLCNN). endif (); ,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:6242,Testability,test,testDLMinimizationCpu,6242,orDataLoader). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). ROOT_EXECUTABLE(testIm2ColCpu TestIm2ColCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col-CPU COMMAND testIm2ColCpu). ROOT_EXECUTABLE(testPoolingLayerCpu TestPoolingLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer-CPU COMMAND testPoolingLayerCpu). ROOT_EXECUTABLE(testConvLayerCpu TestConvLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayer-CPU COMMAND testConvLayerCpu). ROOT_EXECUTABLE(testRotWeightsCpu TestRotateWeightsCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights-CPU COMMAND testRotWeightsCpu). ROOT_EXECUTABLE(testForwardPassCpu TestForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Forward-CPU COMMAND testForwardPassCpu). ROOT_EXECUTABLE(testConvNetLossCpu TestConvNetLossCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Loss-CPU COMMAND testConvNetLossCpu). ROOT_EXECUTABLE(testConvNetPredCpu TestConvNetPredictionCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Pred-CPU COMMAND testConvNetPredCpu). ROOT_EXECUTABLE(testReshapeCpu TestReshapeCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape-CPU COMMAND testReshapeCpu). #-- need to be fixed; #ROOT_EXECUTABLE(testTensorDataLoaderCpu TestTensorDataLoaderCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader-CPU COMMAND testTensorDataLoaderCpu). #ROOT_EXECUTABLE(testDLMinimizationCpu TestMinimizationCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization-CPU COMMAND testDLMinimizationCpu). ROOT_EXECUTABLE(testConvBackpropagationCpu TestConvBackpropagation.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Backpropagation-CPU COMMAND testConvBackpropagationCpu). ROOT_EXECUTABLE(testMethodDLCNN TestMethodDLCNN.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-MethodDL COMMAND testMethodDLCNN). endif (); ,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:6264,Testability,Test,TestMinimizationCpu,6264,orDataLoader). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). ROOT_EXECUTABLE(testIm2ColCpu TestIm2ColCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col-CPU COMMAND testIm2ColCpu). ROOT_EXECUTABLE(testPoolingLayerCpu TestPoolingLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer-CPU COMMAND testPoolingLayerCpu). ROOT_EXECUTABLE(testConvLayerCpu TestConvLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayer-CPU COMMAND testConvLayerCpu). ROOT_EXECUTABLE(testRotWeightsCpu TestRotateWeightsCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights-CPU COMMAND testRotWeightsCpu). ROOT_EXECUTABLE(testForwardPassCpu TestForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Forward-CPU COMMAND testForwardPassCpu). ROOT_EXECUTABLE(testConvNetLossCpu TestConvNetLossCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Loss-CPU COMMAND testConvNetLossCpu). ROOT_EXECUTABLE(testConvNetPredCpu TestConvNetPredictionCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Pred-CPU COMMAND testConvNetPredCpu). ROOT_EXECUTABLE(testReshapeCpu TestReshapeCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape-CPU COMMAND testReshapeCpu). #-- need to be fixed; #ROOT_EXECUTABLE(testTensorDataLoaderCpu TestTensorDataLoaderCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader-CPU COMMAND testTensorDataLoaderCpu). #ROOT_EXECUTABLE(testDLMinimizationCpu TestMinimizationCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization-CPU COMMAND testDLMinimizationCpu). ROOT_EXECUTABLE(testConvBackpropagationCpu TestConvBackpropagation.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Backpropagation-CPU COMMAND testConvBackpropagationCpu). ROOT_EXECUTABLE(testMethodDLCNN TestMethodDLCNN.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-MethodDL COMMAND testMethodDLCNN). endif (); ,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:6366,Testability,test,testDLMinimizationCpu,6366,orDataLoader). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). ROOT_EXECUTABLE(testIm2ColCpu TestIm2ColCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col-CPU COMMAND testIm2ColCpu). ROOT_EXECUTABLE(testPoolingLayerCpu TestPoolingLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer-CPU COMMAND testPoolingLayerCpu). ROOT_EXECUTABLE(testConvLayerCpu TestConvLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayer-CPU COMMAND testConvLayerCpu). ROOT_EXECUTABLE(testRotWeightsCpu TestRotateWeightsCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights-CPU COMMAND testRotWeightsCpu). ROOT_EXECUTABLE(testForwardPassCpu TestForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Forward-CPU COMMAND testForwardPassCpu). ROOT_EXECUTABLE(testConvNetLossCpu TestConvNetLossCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Loss-CPU COMMAND testConvNetLossCpu). ROOT_EXECUTABLE(testConvNetPredCpu TestConvNetPredictionCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Pred-CPU COMMAND testConvNetPredCpu). ROOT_EXECUTABLE(testReshapeCpu TestReshapeCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape-CPU COMMAND testReshapeCpu). #-- need to be fixed; #ROOT_EXECUTABLE(testTensorDataLoaderCpu TestTensorDataLoaderCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader-CPU COMMAND testTensorDataLoaderCpu). #ROOT_EXECUTABLE(testDLMinimizationCpu TestMinimizationCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization-CPU COMMAND testDLMinimizationCpu). ROOT_EXECUTABLE(testConvBackpropagationCpu TestConvBackpropagation.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Backpropagation-CPU COMMAND testConvBackpropagationCpu). ROOT_EXECUTABLE(testMethodDLCNN TestMethodDLCNN.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-MethodDL COMMAND testMethodDLCNN). endif (); ,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:6406,Testability,test,testConvBackpropagationCpu,6406,orDataLoader). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). ROOT_EXECUTABLE(testIm2ColCpu TestIm2ColCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col-CPU COMMAND testIm2ColCpu). ROOT_EXECUTABLE(testPoolingLayerCpu TestPoolingLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer-CPU COMMAND testPoolingLayerCpu). ROOT_EXECUTABLE(testConvLayerCpu TestConvLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayer-CPU COMMAND testConvLayerCpu). ROOT_EXECUTABLE(testRotWeightsCpu TestRotateWeightsCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights-CPU COMMAND testRotWeightsCpu). ROOT_EXECUTABLE(testForwardPassCpu TestForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Forward-CPU COMMAND testForwardPassCpu). ROOT_EXECUTABLE(testConvNetLossCpu TestConvNetLossCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Loss-CPU COMMAND testConvNetLossCpu). ROOT_EXECUTABLE(testConvNetPredCpu TestConvNetPredictionCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Pred-CPU COMMAND testConvNetPredCpu). ROOT_EXECUTABLE(testReshapeCpu TestReshapeCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape-CPU COMMAND testReshapeCpu). #-- need to be fixed; #ROOT_EXECUTABLE(testTensorDataLoaderCpu TestTensorDataLoaderCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader-CPU COMMAND testTensorDataLoaderCpu). #ROOT_EXECUTABLE(testDLMinimizationCpu TestMinimizationCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization-CPU COMMAND testDLMinimizationCpu). ROOT_EXECUTABLE(testConvBackpropagationCpu TestConvBackpropagation.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Backpropagation-CPU COMMAND testConvBackpropagationCpu). ROOT_EXECUTABLE(testMethodDLCNN TestMethodDLCNN.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-MethodDL COMMAND testMethodDLCNN). endif (); ,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:6433,Testability,Test,TestConvBackpropagation,6433,orDataLoader). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). ROOT_EXECUTABLE(testIm2ColCpu TestIm2ColCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col-CPU COMMAND testIm2ColCpu). ROOT_EXECUTABLE(testPoolingLayerCpu TestPoolingLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer-CPU COMMAND testPoolingLayerCpu). ROOT_EXECUTABLE(testConvLayerCpu TestConvLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayer-CPU COMMAND testConvLayerCpu). ROOT_EXECUTABLE(testRotWeightsCpu TestRotateWeightsCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights-CPU COMMAND testRotWeightsCpu). ROOT_EXECUTABLE(testForwardPassCpu TestForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Forward-CPU COMMAND testForwardPassCpu). ROOT_EXECUTABLE(testConvNetLossCpu TestConvNetLossCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Loss-CPU COMMAND testConvNetLossCpu). ROOT_EXECUTABLE(testConvNetPredCpu TestConvNetPredictionCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Pred-CPU COMMAND testConvNetPredCpu). ROOT_EXECUTABLE(testReshapeCpu TestReshapeCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape-CPU COMMAND testReshapeCpu). #-- need to be fixed; #ROOT_EXECUTABLE(testTensorDataLoaderCpu TestTensorDataLoaderCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader-CPU COMMAND testTensorDataLoaderCpu). #ROOT_EXECUTABLE(testDLMinimizationCpu TestMinimizationCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization-CPU COMMAND testDLMinimizationCpu). ROOT_EXECUTABLE(testConvBackpropagationCpu TestConvBackpropagation.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Backpropagation-CPU COMMAND testConvBackpropagationCpu). ROOT_EXECUTABLE(testMethodDLCNN TestMethodDLCNN.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-MethodDL COMMAND testMethodDLCNN). endif (); ,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:6541,Testability,test,testConvBackpropagationCpu,6541,orDataLoader). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). ROOT_EXECUTABLE(testIm2ColCpu TestIm2ColCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col-CPU COMMAND testIm2ColCpu). ROOT_EXECUTABLE(testPoolingLayerCpu TestPoolingLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer-CPU COMMAND testPoolingLayerCpu). ROOT_EXECUTABLE(testConvLayerCpu TestConvLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayer-CPU COMMAND testConvLayerCpu). ROOT_EXECUTABLE(testRotWeightsCpu TestRotateWeightsCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights-CPU COMMAND testRotWeightsCpu). ROOT_EXECUTABLE(testForwardPassCpu TestForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Forward-CPU COMMAND testForwardPassCpu). ROOT_EXECUTABLE(testConvNetLossCpu TestConvNetLossCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Loss-CPU COMMAND testConvNetLossCpu). ROOT_EXECUTABLE(testConvNetPredCpu TestConvNetPredictionCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Pred-CPU COMMAND testConvNetPredCpu). ROOT_EXECUTABLE(testReshapeCpu TestReshapeCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape-CPU COMMAND testReshapeCpu). #-- need to be fixed; #ROOT_EXECUTABLE(testTensorDataLoaderCpu TestTensorDataLoaderCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader-CPU COMMAND testTensorDataLoaderCpu). #ROOT_EXECUTABLE(testDLMinimizationCpu TestMinimizationCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization-CPU COMMAND testDLMinimizationCpu). ROOT_EXECUTABLE(testConvBackpropagationCpu TestConvBackpropagation.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Backpropagation-CPU COMMAND testConvBackpropagationCpu). ROOT_EXECUTABLE(testMethodDLCNN TestMethodDLCNN.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-MethodDL COMMAND testMethodDLCNN). endif (); ,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:6586,Testability,test,testMethodDLCNN,6586,orDataLoader). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). ROOT_EXECUTABLE(testIm2ColCpu TestIm2ColCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col-CPU COMMAND testIm2ColCpu). ROOT_EXECUTABLE(testPoolingLayerCpu TestPoolingLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer-CPU COMMAND testPoolingLayerCpu). ROOT_EXECUTABLE(testConvLayerCpu TestConvLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayer-CPU COMMAND testConvLayerCpu). ROOT_EXECUTABLE(testRotWeightsCpu TestRotateWeightsCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights-CPU COMMAND testRotWeightsCpu). ROOT_EXECUTABLE(testForwardPassCpu TestForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Forward-CPU COMMAND testForwardPassCpu). ROOT_EXECUTABLE(testConvNetLossCpu TestConvNetLossCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Loss-CPU COMMAND testConvNetLossCpu). ROOT_EXECUTABLE(testConvNetPredCpu TestConvNetPredictionCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Pred-CPU COMMAND testConvNetPredCpu). ROOT_EXECUTABLE(testReshapeCpu TestReshapeCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape-CPU COMMAND testReshapeCpu). #-- need to be fixed; #ROOT_EXECUTABLE(testTensorDataLoaderCpu TestTensorDataLoaderCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader-CPU COMMAND testTensorDataLoaderCpu). #ROOT_EXECUTABLE(testDLMinimizationCpu TestMinimizationCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization-CPU COMMAND testDLMinimizationCpu). ROOT_EXECUTABLE(testConvBackpropagationCpu TestConvBackpropagation.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Backpropagation-CPU COMMAND testConvBackpropagationCpu). ROOT_EXECUTABLE(testMethodDLCNN TestMethodDLCNN.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-MethodDL COMMAND testMethodDLCNN). endif (); ,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:6602,Testability,Test,TestMethodDLCNN,6602,orDataLoader). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). ROOT_EXECUTABLE(testIm2ColCpu TestIm2ColCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col-CPU COMMAND testIm2ColCpu). ROOT_EXECUTABLE(testPoolingLayerCpu TestPoolingLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer-CPU COMMAND testPoolingLayerCpu). ROOT_EXECUTABLE(testConvLayerCpu TestConvLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayer-CPU COMMAND testConvLayerCpu). ROOT_EXECUTABLE(testRotWeightsCpu TestRotateWeightsCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights-CPU COMMAND testRotWeightsCpu). ROOT_EXECUTABLE(testForwardPassCpu TestForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Forward-CPU COMMAND testForwardPassCpu). ROOT_EXECUTABLE(testConvNetLossCpu TestConvNetLossCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Loss-CPU COMMAND testConvNetLossCpu). ROOT_EXECUTABLE(testConvNetPredCpu TestConvNetPredictionCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Pred-CPU COMMAND testConvNetPredCpu). ROOT_EXECUTABLE(testReshapeCpu TestReshapeCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape-CPU COMMAND testReshapeCpu). #-- need to be fixed; #ROOT_EXECUTABLE(testTensorDataLoaderCpu TestTensorDataLoaderCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader-CPU COMMAND testTensorDataLoaderCpu). #ROOT_EXECUTABLE(testDLMinimizationCpu TestMinimizationCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization-CPU COMMAND testDLMinimizationCpu). ROOT_EXECUTABLE(testConvBackpropagationCpu TestConvBackpropagation.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Backpropagation-CPU COMMAND testConvBackpropagationCpu). ROOT_EXECUTABLE(testMethodDLCNN TestMethodDLCNN.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-MethodDL COMMAND testMethodDLCNN). endif (); ,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt:6691,Testability,test,testMethodDLCNN,6691,orDataLoader). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). ROOT_EXECUTABLE(testIm2ColCpu TestIm2ColCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Im2Col-CPU COMMAND testIm2ColCpu). ROOT_EXECUTABLE(testPoolingLayerCpu TestPoolingLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-PoolingLayer-CPU COMMAND testPoolingLayerCpu). ROOT_EXECUTABLE(testConvLayerCpu TestConvLayerCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-ConvLayer-CPU COMMAND testConvLayerCpu). ROOT_EXECUTABLE(testRotWeightsCpu TestRotateWeightsCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-RotWeights-CPU COMMAND testRotWeightsCpu). ROOT_EXECUTABLE(testForwardPassCpu TestForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Forward-CPU COMMAND testForwardPassCpu). ROOT_EXECUTABLE(testConvNetLossCpu TestConvNetLossCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Loss-CPU COMMAND testConvNetLossCpu). ROOT_EXECUTABLE(testConvNetPredCpu TestConvNetPredictionCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Pred-CPU COMMAND testConvNetPredCpu). ROOT_EXECUTABLE(testReshapeCpu TestReshapeCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Reshape-CPU COMMAND testReshapeCpu). #-- need to be fixed; #ROOT_EXECUTABLE(testTensorDataLoaderCpu TestTensorDataLoaderCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-Tensor-Data-Loader-CPU COMMAND testTensorDataLoaderCpu). #ROOT_EXECUTABLE(testDLMinimizationCpu TestMinimizationCpu.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-CNN-Minimization-CPU COMMAND testDLMinimizationCpu). ROOT_EXECUTABLE(testConvBackpropagationCpu TestConvBackpropagation.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-Backpropagation-CPU COMMAND testConvBackpropagationCpu). ROOT_EXECUTABLE(testMethodDLCNN TestMethodDLCNN.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-CNN-MethodDL COMMAND testMethodDLCNN). endif (); ,MatchSource.DOCS,tmva/tmva/test/DNN/CNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/CMakeLists.txt:126,Testability,test,tests,126,############################################################################; # CMakeLists.txt file for building TMVA/DNN/GRU tests.; # @author Surya S Dwivedi; ############################################################################. set(Libraries TMVA). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn). list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testGRUBackpropagationCudnn TestGRUBackpropagationCudnn.cxx); target_link_libraries(testGRUBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-BackpropagationCudnn COMMAND testGRUBackpropagationCudnn). add_executable(testGRUForwardPassCudnn TestGRUForwardPassCudnn.cxx); target_link_libraries(testGRUForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-Forwaed-Cudnn COMMAND testGRUForwardPassCudnn). # GRU - Full Test GPU; add_executable(testFullGRUCudnn TestFullGRUCudnn.cxx); target_link_libraries(testFullGRUCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-Full-Cudnn COMMAND testFullGRUCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # GRU - Forward CPU; ROOT_EXECUTABLE(testGRUForwardPassCpu TestGRUForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Forward-Cpu COMMAND testGRUForwardPassCpu). # GRU - Backward CPU; ROOT_EXECUTABLE(testGRUBackpropagationCpu TestGRUBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Backward-Cpu COMMAND testGRUBackpropagationCpu). # GRU - Full Test CPU; ROOT_EXECUTABLE(testFullGRUCpu TestFullGRUCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Full-Cpu COMMAND testFullGRUCpu). endif (BLAS_FOUND AND imt); ,MatchSource.DOCS,tmva/tmva/test/DNN/GRU/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/CMakeLists.txt:270,Testability,test,tests,270,############################################################################; # CMakeLists.txt file for building TMVA/DNN/GRU tests.; # @author Surya S Dwivedi; ############################################################################. set(Libraries TMVA). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn). list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testGRUBackpropagationCudnn TestGRUBackpropagationCudnn.cxx); target_link_libraries(testGRUBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-BackpropagationCudnn COMMAND testGRUBackpropagationCudnn). add_executable(testGRUForwardPassCudnn TestGRUForwardPassCudnn.cxx); target_link_libraries(testGRUForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-Forwaed-Cudnn COMMAND testGRUForwardPassCudnn). # GRU - Full Test GPU; add_executable(testFullGRUCudnn TestFullGRUCudnn.cxx); target_link_libraries(testFullGRUCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-Full-Cudnn COMMAND testFullGRUCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # GRU - Forward CPU; ROOT_EXECUTABLE(testGRUForwardPassCpu TestGRUForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Forward-Cpu COMMAND testGRUForwardPassCpu). # GRU - Backward CPU; ROOT_EXECUTABLE(testGRUBackpropagationCpu TestGRUBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Backward-Cpu COMMAND testGRUBackpropagationCpu). # GRU - Full Test CPU; ROOT_EXECUTABLE(testFullGRUCpu TestFullGRUCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Full-Cpu COMMAND testFullGRUCpu). endif (BLAS_FOUND AND imt); ,MatchSource.DOCS,tmva/tmva/test/DNN/GRU/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/CMakeLists.txt:457,Testability,test,testGRUBackpropagationCudnn,457,############################################################################; # CMakeLists.txt file for building TMVA/DNN/GRU tests.; # @author Surya S Dwivedi; ############################################################################. set(Libraries TMVA). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn). list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testGRUBackpropagationCudnn TestGRUBackpropagationCudnn.cxx); target_link_libraries(testGRUBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-BackpropagationCudnn COMMAND testGRUBackpropagationCudnn). add_executable(testGRUForwardPassCudnn TestGRUForwardPassCudnn.cxx); target_link_libraries(testGRUForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-Forwaed-Cudnn COMMAND testGRUForwardPassCudnn). # GRU - Full Test GPU; add_executable(testFullGRUCudnn TestFullGRUCudnn.cxx); target_link_libraries(testFullGRUCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-Full-Cudnn COMMAND testFullGRUCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # GRU - Forward CPU; ROOT_EXECUTABLE(testGRUForwardPassCpu TestGRUForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Forward-Cpu COMMAND testGRUForwardPassCpu). # GRU - Backward CPU; ROOT_EXECUTABLE(testGRUBackpropagationCpu TestGRUBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Backward-Cpu COMMAND testGRUBackpropagationCpu). # GRU - Full Test CPU; ROOT_EXECUTABLE(testFullGRUCpu TestFullGRUCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Full-Cpu COMMAND testFullGRUCpu). endif (BLAS_FOUND AND imt); ,MatchSource.DOCS,tmva/tmva/test/DNN/GRU/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/CMakeLists.txt:485,Testability,Test,TestGRUBackpropagationCudnn,485,############################################################################; # CMakeLists.txt file for building TMVA/DNN/GRU tests.; # @author Surya S Dwivedi; ############################################################################. set(Libraries TMVA). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn). list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testGRUBackpropagationCudnn TestGRUBackpropagationCudnn.cxx); target_link_libraries(testGRUBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-BackpropagationCudnn COMMAND testGRUBackpropagationCudnn). add_executable(testGRUForwardPassCudnn TestGRUForwardPassCudnn.cxx); target_link_libraries(testGRUForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-Forwaed-Cudnn COMMAND testGRUForwardPassCudnn). # GRU - Full Test GPU; add_executable(testFullGRUCudnn TestFullGRUCudnn.cxx); target_link_libraries(testFullGRUCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-Full-Cudnn COMMAND testFullGRUCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # GRU - Forward CPU; ROOT_EXECUTABLE(testGRUForwardPassCpu TestGRUForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Forward-Cpu COMMAND testGRUForwardPassCpu). # GRU - Backward CPU; ROOT_EXECUTABLE(testGRUBackpropagationCpu TestGRUBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Backward-Cpu COMMAND testGRUBackpropagationCpu). # GRU - Full Test CPU; ROOT_EXECUTABLE(testFullGRUCpu TestFullGRUCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Full-Cpu COMMAND testFullGRUCpu). endif (BLAS_FOUND AND imt); ,MatchSource.DOCS,tmva/tmva/test/DNN/GRU/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/CMakeLists.txt:541,Testability,test,testGRUBackpropagationCudnn,541,############################################################################; # CMakeLists.txt file for building TMVA/DNN/GRU tests.; # @author Surya S Dwivedi; ############################################################################. set(Libraries TMVA). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn). list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testGRUBackpropagationCudnn TestGRUBackpropagationCudnn.cxx); target_link_libraries(testGRUBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-BackpropagationCudnn COMMAND testGRUBackpropagationCudnn). add_executable(testGRUForwardPassCudnn TestGRUForwardPassCudnn.cxx); target_link_libraries(testGRUForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-Forwaed-Cudnn COMMAND testGRUForwardPassCudnn). # GRU - Full Test GPU; add_executable(testFullGRUCudnn TestFullGRUCudnn.cxx); target_link_libraries(testFullGRUCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-Full-Cudnn COMMAND testFullGRUCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # GRU - Forward CPU; ROOT_EXECUTABLE(testGRUForwardPassCpu TestGRUForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Forward-Cpu COMMAND testGRUForwardPassCpu). # GRU - Backward CPU; ROOT_EXECUTABLE(testGRUBackpropagationCpu TestGRUBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Backward-Cpu COMMAND testGRUBackpropagationCpu). # GRU - Full Test CPU; ROOT_EXECUTABLE(testFullGRUCpu TestFullGRUCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Full-Cpu COMMAND testFullGRUCpu). endif (BLAS_FOUND AND imt); ,MatchSource.DOCS,tmva/tmva/test/DNN/GRU/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/CMakeLists.txt:662,Testability,test,testGRUBackpropagationCudnn,662,############################################################################; # CMakeLists.txt file for building TMVA/DNN/GRU tests.; # @author Surya S Dwivedi; ############################################################################. set(Libraries TMVA). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn). list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testGRUBackpropagationCudnn TestGRUBackpropagationCudnn.cxx); target_link_libraries(testGRUBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-BackpropagationCudnn COMMAND testGRUBackpropagationCudnn). add_executable(testGRUForwardPassCudnn TestGRUForwardPassCudnn.cxx); target_link_libraries(testGRUForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-Forwaed-Cudnn COMMAND testGRUForwardPassCudnn). # GRU - Full Test GPU; add_executable(testFullGRUCudnn TestFullGRUCudnn.cxx); target_link_libraries(testFullGRUCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-Full-Cudnn COMMAND testFullGRUCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # GRU - Forward CPU; ROOT_EXECUTABLE(testGRUForwardPassCpu TestGRUForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Forward-Cpu COMMAND testGRUForwardPassCpu). # GRU - Backward CPU; ROOT_EXECUTABLE(testGRUBackpropagationCpu TestGRUBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Backward-Cpu COMMAND testGRUBackpropagationCpu). # GRU - Full Test CPU; ROOT_EXECUTABLE(testFullGRUCpu TestFullGRUCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Full-Cpu COMMAND testFullGRUCpu). endif (BLAS_FOUND AND imt); ,MatchSource.DOCS,tmva/tmva/test/DNN/GRU/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/CMakeLists.txt:707,Testability,test,testGRUForwardPassCudnn,707,############################################################################; # CMakeLists.txt file for building TMVA/DNN/GRU tests.; # @author Surya S Dwivedi; ############################################################################. set(Libraries TMVA). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn). list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testGRUBackpropagationCudnn TestGRUBackpropagationCudnn.cxx); target_link_libraries(testGRUBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-BackpropagationCudnn COMMAND testGRUBackpropagationCudnn). add_executable(testGRUForwardPassCudnn TestGRUForwardPassCudnn.cxx); target_link_libraries(testGRUForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-Forwaed-Cudnn COMMAND testGRUForwardPassCudnn). # GRU - Full Test GPU; add_executable(testFullGRUCudnn TestFullGRUCudnn.cxx); target_link_libraries(testFullGRUCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-Full-Cudnn COMMAND testFullGRUCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # GRU - Forward CPU; ROOT_EXECUTABLE(testGRUForwardPassCpu TestGRUForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Forward-Cpu COMMAND testGRUForwardPassCpu). # GRU - Backward CPU; ROOT_EXECUTABLE(testGRUBackpropagationCpu TestGRUBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Backward-Cpu COMMAND testGRUBackpropagationCpu). # GRU - Full Test CPU; ROOT_EXECUTABLE(testFullGRUCpu TestFullGRUCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Full-Cpu COMMAND testFullGRUCpu). endif (BLAS_FOUND AND imt); ,MatchSource.DOCS,tmva/tmva/test/DNN/GRU/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/CMakeLists.txt:731,Testability,Test,TestGRUForwardPassCudnn,731,############################################################################; # CMakeLists.txt file for building TMVA/DNN/GRU tests.; # @author Surya S Dwivedi; ############################################################################. set(Libraries TMVA). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn). list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testGRUBackpropagationCudnn TestGRUBackpropagationCudnn.cxx); target_link_libraries(testGRUBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-BackpropagationCudnn COMMAND testGRUBackpropagationCudnn). add_executable(testGRUForwardPassCudnn TestGRUForwardPassCudnn.cxx); target_link_libraries(testGRUForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-Forwaed-Cudnn COMMAND testGRUForwardPassCudnn). # GRU - Full Test GPU; add_executable(testFullGRUCudnn TestFullGRUCudnn.cxx); target_link_libraries(testFullGRUCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-Full-Cudnn COMMAND testFullGRUCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # GRU - Forward CPU; ROOT_EXECUTABLE(testGRUForwardPassCpu TestGRUForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Forward-Cpu COMMAND testGRUForwardPassCpu). # GRU - Backward CPU; ROOT_EXECUTABLE(testGRUBackpropagationCpu TestGRUBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Backward-Cpu COMMAND testGRUBackpropagationCpu). # GRU - Full Test CPU; ROOT_EXECUTABLE(testFullGRUCpu TestFullGRUCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Full-Cpu COMMAND testFullGRUCpu). endif (BLAS_FOUND AND imt); ,MatchSource.DOCS,tmva/tmva/test/DNN/GRU/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/CMakeLists.txt:783,Testability,test,testGRUForwardPassCudnn,783,############################################################################; # CMakeLists.txt file for building TMVA/DNN/GRU tests.; # @author Surya S Dwivedi; ############################################################################. set(Libraries TMVA). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn). list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testGRUBackpropagationCudnn TestGRUBackpropagationCudnn.cxx); target_link_libraries(testGRUBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-BackpropagationCudnn COMMAND testGRUBackpropagationCudnn). add_executable(testGRUForwardPassCudnn TestGRUForwardPassCudnn.cxx); target_link_libraries(testGRUForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-Forwaed-Cudnn COMMAND testGRUForwardPassCudnn). # GRU - Full Test GPU; add_executable(testFullGRUCudnn TestFullGRUCudnn.cxx); target_link_libraries(testFullGRUCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-Full-Cudnn COMMAND testFullGRUCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # GRU - Forward CPU; ROOT_EXECUTABLE(testGRUForwardPassCpu TestGRUForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Forward-Cpu COMMAND testGRUForwardPassCpu). # GRU - Backward CPU; ROOT_EXECUTABLE(testGRUBackpropagationCpu TestGRUBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Backward-Cpu COMMAND testGRUBackpropagationCpu). # GRU - Full Test CPU; ROOT_EXECUTABLE(testFullGRUCpu TestFullGRUCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Full-Cpu COMMAND testFullGRUCpu). endif (BLAS_FOUND AND imt); ,MatchSource.DOCS,tmva/tmva/test/DNN/GRU/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/CMakeLists.txt:893,Testability,test,testGRUForwardPassCudnn,893,############################################################################; # CMakeLists.txt file for building TMVA/DNN/GRU tests.; # @author Surya S Dwivedi; ############################################################################. set(Libraries TMVA). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn). list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testGRUBackpropagationCudnn TestGRUBackpropagationCudnn.cxx); target_link_libraries(testGRUBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-BackpropagationCudnn COMMAND testGRUBackpropagationCudnn). add_executable(testGRUForwardPassCudnn TestGRUForwardPassCudnn.cxx); target_link_libraries(testGRUForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-Forwaed-Cudnn COMMAND testGRUForwardPassCudnn). # GRU - Full Test GPU; add_executable(testFullGRUCudnn TestFullGRUCudnn.cxx); target_link_libraries(testFullGRUCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-Full-Cudnn COMMAND testFullGRUCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # GRU - Forward CPU; ROOT_EXECUTABLE(testGRUForwardPassCpu TestGRUForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Forward-Cpu COMMAND testGRUForwardPassCpu). # GRU - Backward CPU; ROOT_EXECUTABLE(testGRUBackpropagationCpu TestGRUBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Backward-Cpu COMMAND testGRUBackpropagationCpu). # GRU - Full Test CPU; ROOT_EXECUTABLE(testFullGRUCpu TestFullGRUCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Full-Cpu COMMAND testFullGRUCpu). endif (BLAS_FOUND AND imt); ,MatchSource.DOCS,tmva/tmva/test/DNN/GRU/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/CMakeLists.txt:932,Testability,Test,Test,932,############################################################################; # CMakeLists.txt file for building TMVA/DNN/GRU tests.; # @author Surya S Dwivedi; ############################################################################. set(Libraries TMVA). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn). list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testGRUBackpropagationCudnn TestGRUBackpropagationCudnn.cxx); target_link_libraries(testGRUBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-BackpropagationCudnn COMMAND testGRUBackpropagationCudnn). add_executable(testGRUForwardPassCudnn TestGRUForwardPassCudnn.cxx); target_link_libraries(testGRUForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-Forwaed-Cudnn COMMAND testGRUForwardPassCudnn). # GRU - Full Test GPU; add_executable(testFullGRUCudnn TestFullGRUCudnn.cxx); target_link_libraries(testFullGRUCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-Full-Cudnn COMMAND testFullGRUCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # GRU - Forward CPU; ROOT_EXECUTABLE(testGRUForwardPassCpu TestGRUForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Forward-Cpu COMMAND testGRUForwardPassCpu). # GRU - Backward CPU; ROOT_EXECUTABLE(testGRUBackpropagationCpu TestGRUBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Backward-Cpu COMMAND testGRUBackpropagationCpu). # GRU - Full Test CPU; ROOT_EXECUTABLE(testFullGRUCpu TestFullGRUCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Full-Cpu COMMAND testFullGRUCpu). endif (BLAS_FOUND AND imt); ,MatchSource.DOCS,tmva/tmva/test/DNN/GRU/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/CMakeLists.txt:957,Testability,test,testFullGRUCudnn,957,############################################################################; # CMakeLists.txt file for building TMVA/DNN/GRU tests.; # @author Surya S Dwivedi; ############################################################################. set(Libraries TMVA). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn). list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testGRUBackpropagationCudnn TestGRUBackpropagationCudnn.cxx); target_link_libraries(testGRUBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-BackpropagationCudnn COMMAND testGRUBackpropagationCudnn). add_executable(testGRUForwardPassCudnn TestGRUForwardPassCudnn.cxx); target_link_libraries(testGRUForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-Forwaed-Cudnn COMMAND testGRUForwardPassCudnn). # GRU - Full Test GPU; add_executable(testFullGRUCudnn TestFullGRUCudnn.cxx); target_link_libraries(testFullGRUCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-Full-Cudnn COMMAND testFullGRUCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # GRU - Forward CPU; ROOT_EXECUTABLE(testGRUForwardPassCpu TestGRUForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Forward-Cpu COMMAND testGRUForwardPassCpu). # GRU - Backward CPU; ROOT_EXECUTABLE(testGRUBackpropagationCpu TestGRUBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Backward-Cpu COMMAND testGRUBackpropagationCpu). # GRU - Full Test CPU; ROOT_EXECUTABLE(testFullGRUCpu TestFullGRUCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Full-Cpu COMMAND testFullGRUCpu). endif (BLAS_FOUND AND imt); ,MatchSource.DOCS,tmva/tmva/test/DNN/GRU/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/CMakeLists.txt:974,Testability,Test,TestFullGRUCudnn,974,############################################################################; # CMakeLists.txt file for building TMVA/DNN/GRU tests.; # @author Surya S Dwivedi; ############################################################################. set(Libraries TMVA). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn). list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testGRUBackpropagationCudnn TestGRUBackpropagationCudnn.cxx); target_link_libraries(testGRUBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-BackpropagationCudnn COMMAND testGRUBackpropagationCudnn). add_executable(testGRUForwardPassCudnn TestGRUForwardPassCudnn.cxx); target_link_libraries(testGRUForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-Forwaed-Cudnn COMMAND testGRUForwardPassCudnn). # GRU - Full Test GPU; add_executable(testFullGRUCudnn TestFullGRUCudnn.cxx); target_link_libraries(testFullGRUCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-Full-Cudnn COMMAND testFullGRUCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # GRU - Forward CPU; ROOT_EXECUTABLE(testGRUForwardPassCpu TestGRUForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Forward-Cpu COMMAND testGRUForwardPassCpu). # GRU - Backward CPU; ROOT_EXECUTABLE(testGRUBackpropagationCpu TestGRUBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Backward-Cpu COMMAND testGRUBackpropagationCpu). # GRU - Full Test CPU; ROOT_EXECUTABLE(testFullGRUCpu TestFullGRUCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Full-Cpu COMMAND testFullGRUCpu). endif (BLAS_FOUND AND imt); ,MatchSource.DOCS,tmva/tmva/test/DNN/GRU/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/CMakeLists.txt:1019,Testability,test,testFullGRUCudnn,1019,############################################################################; # CMakeLists.txt file for building TMVA/DNN/GRU tests.; # @author Surya S Dwivedi; ############################################################################. set(Libraries TMVA). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn). list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testGRUBackpropagationCudnn TestGRUBackpropagationCudnn.cxx); target_link_libraries(testGRUBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-BackpropagationCudnn COMMAND testGRUBackpropagationCudnn). add_executable(testGRUForwardPassCudnn TestGRUForwardPassCudnn.cxx); target_link_libraries(testGRUForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-Forwaed-Cudnn COMMAND testGRUForwardPassCudnn). # GRU - Full Test GPU; add_executable(testFullGRUCudnn TestFullGRUCudnn.cxx); target_link_libraries(testFullGRUCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-Full-Cudnn COMMAND testFullGRUCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # GRU - Forward CPU; ROOT_EXECUTABLE(testGRUForwardPassCpu TestGRUForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Forward-Cpu COMMAND testGRUForwardPassCpu). # GRU - Backward CPU; ROOT_EXECUTABLE(testGRUBackpropagationCpu TestGRUBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Backward-Cpu COMMAND testGRUBackpropagationCpu). # GRU - Full Test CPU; ROOT_EXECUTABLE(testFullGRUCpu TestFullGRUCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Full-Cpu COMMAND testFullGRUCpu). endif (BLAS_FOUND AND imt); ,MatchSource.DOCS,tmva/tmva/test/DNN/GRU/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/CMakeLists.txt:1119,Testability,test,testFullGRUCudnn,1119,############################################################################; # CMakeLists.txt file for building TMVA/DNN/GRU tests.; # @author Surya S Dwivedi; ############################################################################. set(Libraries TMVA). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn). list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testGRUBackpropagationCudnn TestGRUBackpropagationCudnn.cxx); target_link_libraries(testGRUBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-BackpropagationCudnn COMMAND testGRUBackpropagationCudnn). add_executable(testGRUForwardPassCudnn TestGRUForwardPassCudnn.cxx); target_link_libraries(testGRUForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-Forwaed-Cudnn COMMAND testGRUForwardPassCudnn). # GRU - Full Test GPU; add_executable(testFullGRUCudnn TestFullGRUCudnn.cxx); target_link_libraries(testFullGRUCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-Full-Cudnn COMMAND testFullGRUCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # GRU - Forward CPU; ROOT_EXECUTABLE(testGRUForwardPassCpu TestGRUForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Forward-Cpu COMMAND testGRUForwardPassCpu). # GRU - Backward CPU; ROOT_EXECUTABLE(testGRUBackpropagationCpu TestGRUBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Backward-Cpu COMMAND testGRUBackpropagationCpu). # GRU - Full Test CPU; ROOT_EXECUTABLE(testFullGRUCpu TestFullGRUCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Full-Cpu COMMAND testFullGRUCpu). endif (BLAS_FOUND AND imt); ,MatchSource.DOCS,tmva/tmva/test/DNN/GRU/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/CMakeLists.txt:1180,Testability,test,tests,1180,############################################################################; # CMakeLists.txt file for building TMVA/DNN/GRU tests.; # @author Surya S Dwivedi; ############################################################################. set(Libraries TMVA). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn). list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testGRUBackpropagationCudnn TestGRUBackpropagationCudnn.cxx); target_link_libraries(testGRUBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-BackpropagationCudnn COMMAND testGRUBackpropagationCudnn). add_executable(testGRUForwardPassCudnn TestGRUForwardPassCudnn.cxx); target_link_libraries(testGRUForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-Forwaed-Cudnn COMMAND testGRUForwardPassCudnn). # GRU - Full Test GPU; add_executable(testFullGRUCudnn TestFullGRUCudnn.cxx); target_link_libraries(testFullGRUCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-Full-Cudnn COMMAND testFullGRUCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # GRU - Forward CPU; ROOT_EXECUTABLE(testGRUForwardPassCpu TestGRUForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Forward-Cpu COMMAND testGRUForwardPassCpu). # GRU - Backward CPU; ROOT_EXECUTABLE(testGRUBackpropagationCpu TestGRUBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Backward-Cpu COMMAND testGRUBackpropagationCpu). # GRU - Full Test CPU; ROOT_EXECUTABLE(testFullGRUCpu TestFullGRUCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Full-Cpu COMMAND testFullGRUCpu). endif (BLAS_FOUND AND imt); ,MatchSource.DOCS,tmva/tmva/test/DNN/GRU/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/CMakeLists.txt:1279,Testability,test,testGRUForwardPassCpu,1279,############################################################################; # CMakeLists.txt file for building TMVA/DNN/GRU tests.; # @author Surya S Dwivedi; ############################################################################. set(Libraries TMVA). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn). list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testGRUBackpropagationCudnn TestGRUBackpropagationCudnn.cxx); target_link_libraries(testGRUBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-BackpropagationCudnn COMMAND testGRUBackpropagationCudnn). add_executable(testGRUForwardPassCudnn TestGRUForwardPassCudnn.cxx); target_link_libraries(testGRUForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-Forwaed-Cudnn COMMAND testGRUForwardPassCudnn). # GRU - Full Test GPU; add_executable(testFullGRUCudnn TestFullGRUCudnn.cxx); target_link_libraries(testFullGRUCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-Full-Cudnn COMMAND testFullGRUCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # GRU - Forward CPU; ROOT_EXECUTABLE(testGRUForwardPassCpu TestGRUForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Forward-Cpu COMMAND testGRUForwardPassCpu). # GRU - Backward CPU; ROOT_EXECUTABLE(testGRUBackpropagationCpu TestGRUBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Backward-Cpu COMMAND testGRUBackpropagationCpu). # GRU - Full Test CPU; ROOT_EXECUTABLE(testFullGRUCpu TestFullGRUCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Full-Cpu COMMAND testFullGRUCpu). endif (BLAS_FOUND AND imt); ,MatchSource.DOCS,tmva/tmva/test/DNN/GRU/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/CMakeLists.txt:1301,Testability,Test,TestGRUForwardPassCpu,1301,############################################################################; # CMakeLists.txt file for building TMVA/DNN/GRU tests.; # @author Surya S Dwivedi; ############################################################################. set(Libraries TMVA). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn). list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testGRUBackpropagationCudnn TestGRUBackpropagationCudnn.cxx); target_link_libraries(testGRUBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-BackpropagationCudnn COMMAND testGRUBackpropagationCudnn). add_executable(testGRUForwardPassCudnn TestGRUForwardPassCudnn.cxx); target_link_libraries(testGRUForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-Forwaed-Cudnn COMMAND testGRUForwardPassCudnn). # GRU - Full Test GPU; add_executable(testFullGRUCudnn TestFullGRUCudnn.cxx); target_link_libraries(testFullGRUCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-Full-Cudnn COMMAND testFullGRUCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # GRU - Forward CPU; ROOT_EXECUTABLE(testGRUForwardPassCpu TestGRUForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Forward-Cpu COMMAND testGRUForwardPassCpu). # GRU - Backward CPU; ROOT_EXECUTABLE(testGRUBackpropagationCpu TestGRUBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Backward-Cpu COMMAND testGRUBackpropagationCpu). # GRU - Full Test CPU; ROOT_EXECUTABLE(testFullGRUCpu TestFullGRUCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Full-Cpu COMMAND testFullGRUCpu). endif (BLAS_FOUND AND imt); ,MatchSource.DOCS,tmva/tmva/test/DNN/GRU/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/CMakeLists.txt:1399,Testability,test,testGRUForwardPassCpu,1399,############################################################################; # CMakeLists.txt file for building TMVA/DNN/GRU tests.; # @author Surya S Dwivedi; ############################################################################. set(Libraries TMVA). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn). list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testGRUBackpropagationCudnn TestGRUBackpropagationCudnn.cxx); target_link_libraries(testGRUBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-BackpropagationCudnn COMMAND testGRUBackpropagationCudnn). add_executable(testGRUForwardPassCudnn TestGRUForwardPassCudnn.cxx); target_link_libraries(testGRUForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-Forwaed-Cudnn COMMAND testGRUForwardPassCudnn). # GRU - Full Test GPU; add_executable(testFullGRUCudnn TestFullGRUCudnn.cxx); target_link_libraries(testFullGRUCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-Full-Cudnn COMMAND testFullGRUCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # GRU - Forward CPU; ROOT_EXECUTABLE(testGRUForwardPassCpu TestGRUForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Forward-Cpu COMMAND testGRUForwardPassCpu). # GRU - Backward CPU; ROOT_EXECUTABLE(testGRUBackpropagationCpu TestGRUBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Backward-Cpu COMMAND testGRUBackpropagationCpu). # GRU - Full Test CPU; ROOT_EXECUTABLE(testFullGRUCpu TestFullGRUCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Full-Cpu COMMAND testFullGRUCpu). endif (BLAS_FOUND AND imt); ,MatchSource.DOCS,tmva/tmva/test/DNN/GRU/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/CMakeLists.txt:1461,Testability,test,testGRUBackpropagationCpu,1461,############################################################################; # CMakeLists.txt file for building TMVA/DNN/GRU tests.; # @author Surya S Dwivedi; ############################################################################. set(Libraries TMVA). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn). list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testGRUBackpropagationCudnn TestGRUBackpropagationCudnn.cxx); target_link_libraries(testGRUBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-BackpropagationCudnn COMMAND testGRUBackpropagationCudnn). add_executable(testGRUForwardPassCudnn TestGRUForwardPassCudnn.cxx); target_link_libraries(testGRUForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-Forwaed-Cudnn COMMAND testGRUForwardPassCudnn). # GRU - Full Test GPU; add_executable(testFullGRUCudnn TestFullGRUCudnn.cxx); target_link_libraries(testFullGRUCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-Full-Cudnn COMMAND testFullGRUCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # GRU - Forward CPU; ROOT_EXECUTABLE(testGRUForwardPassCpu TestGRUForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Forward-Cpu COMMAND testGRUForwardPassCpu). # GRU - Backward CPU; ROOT_EXECUTABLE(testGRUBackpropagationCpu TestGRUBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Backward-Cpu COMMAND testGRUBackpropagationCpu). # GRU - Full Test CPU; ROOT_EXECUTABLE(testFullGRUCpu TestFullGRUCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Full-Cpu COMMAND testFullGRUCpu). endif (BLAS_FOUND AND imt); ,MatchSource.DOCS,tmva/tmva/test/DNN/GRU/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/CMakeLists.txt:1487,Testability,Test,TestGRUBackpropagationCpu,1487,############################################################################; # CMakeLists.txt file for building TMVA/DNN/GRU tests.; # @author Surya S Dwivedi; ############################################################################. set(Libraries TMVA). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn). list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testGRUBackpropagationCudnn TestGRUBackpropagationCudnn.cxx); target_link_libraries(testGRUBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-BackpropagationCudnn COMMAND testGRUBackpropagationCudnn). add_executable(testGRUForwardPassCudnn TestGRUForwardPassCudnn.cxx); target_link_libraries(testGRUForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-Forwaed-Cudnn COMMAND testGRUForwardPassCudnn). # GRU - Full Test GPU; add_executable(testFullGRUCudnn TestFullGRUCudnn.cxx); target_link_libraries(testFullGRUCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-Full-Cudnn COMMAND testFullGRUCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # GRU - Forward CPU; ROOT_EXECUTABLE(testGRUForwardPassCpu TestGRUForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Forward-Cpu COMMAND testGRUForwardPassCpu). # GRU - Backward CPU; ROOT_EXECUTABLE(testGRUBackpropagationCpu TestGRUBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Backward-Cpu COMMAND testGRUBackpropagationCpu). # GRU - Full Test CPU; ROOT_EXECUTABLE(testFullGRUCpu TestFullGRUCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Full-Cpu COMMAND testFullGRUCpu). endif (BLAS_FOUND AND imt); ,MatchSource.DOCS,tmva/tmva/test/DNN/GRU/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/CMakeLists.txt:1590,Testability,test,testGRUBackpropagationCpu,1590,############################################################################; # CMakeLists.txt file for building TMVA/DNN/GRU tests.; # @author Surya S Dwivedi; ############################################################################. set(Libraries TMVA). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn). list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testGRUBackpropagationCudnn TestGRUBackpropagationCudnn.cxx); target_link_libraries(testGRUBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-BackpropagationCudnn COMMAND testGRUBackpropagationCudnn). add_executable(testGRUForwardPassCudnn TestGRUForwardPassCudnn.cxx); target_link_libraries(testGRUForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-Forwaed-Cudnn COMMAND testGRUForwardPassCudnn). # GRU - Full Test GPU; add_executable(testFullGRUCudnn TestFullGRUCudnn.cxx); target_link_libraries(testFullGRUCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-Full-Cudnn COMMAND testFullGRUCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # GRU - Forward CPU; ROOT_EXECUTABLE(testGRUForwardPassCpu TestGRUForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Forward-Cpu COMMAND testGRUForwardPassCpu). # GRU - Backward CPU; ROOT_EXECUTABLE(testGRUBackpropagationCpu TestGRUBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Backward-Cpu COMMAND testGRUBackpropagationCpu). # GRU - Full Test CPU; ROOT_EXECUTABLE(testFullGRUCpu TestFullGRUCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Full-Cpu COMMAND testFullGRUCpu). endif (BLAS_FOUND AND imt); ,MatchSource.DOCS,tmva/tmva/test/DNN/GRU/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/CMakeLists.txt:1631,Testability,Test,Test,1631,############################################################################; # CMakeLists.txt file for building TMVA/DNN/GRU tests.; # @author Surya S Dwivedi; ############################################################################. set(Libraries TMVA). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn). list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testGRUBackpropagationCudnn TestGRUBackpropagationCudnn.cxx); target_link_libraries(testGRUBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-BackpropagationCudnn COMMAND testGRUBackpropagationCudnn). add_executable(testGRUForwardPassCudnn TestGRUForwardPassCudnn.cxx); target_link_libraries(testGRUForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-Forwaed-Cudnn COMMAND testGRUForwardPassCudnn). # GRU - Full Test GPU; add_executable(testFullGRUCudnn TestFullGRUCudnn.cxx); target_link_libraries(testFullGRUCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-Full-Cudnn COMMAND testFullGRUCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # GRU - Forward CPU; ROOT_EXECUTABLE(testGRUForwardPassCpu TestGRUForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Forward-Cpu COMMAND testGRUForwardPassCpu). # GRU - Backward CPU; ROOT_EXECUTABLE(testGRUBackpropagationCpu TestGRUBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Backward-Cpu COMMAND testGRUBackpropagationCpu). # GRU - Full Test CPU; ROOT_EXECUTABLE(testFullGRUCpu TestFullGRUCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Full-Cpu COMMAND testFullGRUCpu). endif (BLAS_FOUND AND imt); ,MatchSource.DOCS,tmva/tmva/test/DNN/GRU/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/CMakeLists.txt:1657,Testability,test,testFullGRUCpu,1657,############################################################################; # CMakeLists.txt file for building TMVA/DNN/GRU tests.; # @author Surya S Dwivedi; ############################################################################. set(Libraries TMVA). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn). list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testGRUBackpropagationCudnn TestGRUBackpropagationCudnn.cxx); target_link_libraries(testGRUBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-BackpropagationCudnn COMMAND testGRUBackpropagationCudnn). add_executable(testGRUForwardPassCudnn TestGRUForwardPassCudnn.cxx); target_link_libraries(testGRUForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-Forwaed-Cudnn COMMAND testGRUForwardPassCudnn). # GRU - Full Test GPU; add_executable(testFullGRUCudnn TestFullGRUCudnn.cxx); target_link_libraries(testFullGRUCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-Full-Cudnn COMMAND testFullGRUCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # GRU - Forward CPU; ROOT_EXECUTABLE(testGRUForwardPassCpu TestGRUForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Forward-Cpu COMMAND testGRUForwardPassCpu). # GRU - Backward CPU; ROOT_EXECUTABLE(testGRUBackpropagationCpu TestGRUBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Backward-Cpu COMMAND testGRUBackpropagationCpu). # GRU - Full Test CPU; ROOT_EXECUTABLE(testFullGRUCpu TestFullGRUCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Full-Cpu COMMAND testFullGRUCpu). endif (BLAS_FOUND AND imt); ,MatchSource.DOCS,tmva/tmva/test/DNN/GRU/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/CMakeLists.txt:1672,Testability,Test,TestFullGRUCpu,1672,############################################################################; # CMakeLists.txt file for building TMVA/DNN/GRU tests.; # @author Surya S Dwivedi; ############################################################################. set(Libraries TMVA). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn). list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testGRUBackpropagationCudnn TestGRUBackpropagationCudnn.cxx); target_link_libraries(testGRUBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-BackpropagationCudnn COMMAND testGRUBackpropagationCudnn). add_executable(testGRUForwardPassCudnn TestGRUForwardPassCudnn.cxx); target_link_libraries(testGRUForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-Forwaed-Cudnn COMMAND testGRUForwardPassCudnn). # GRU - Full Test GPU; add_executable(testFullGRUCudnn TestFullGRUCudnn.cxx); target_link_libraries(testFullGRUCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-Full-Cudnn COMMAND testFullGRUCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # GRU - Forward CPU; ROOT_EXECUTABLE(testGRUForwardPassCpu TestGRUForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Forward-Cpu COMMAND testGRUForwardPassCpu). # GRU - Backward CPU; ROOT_EXECUTABLE(testGRUBackpropagationCpu TestGRUBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Backward-Cpu COMMAND testGRUBackpropagationCpu). # GRU - Full Test CPU; ROOT_EXECUTABLE(testFullGRUCpu TestFullGRUCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Full-Cpu COMMAND testFullGRUCpu). endif (BLAS_FOUND AND imt); ,MatchSource.DOCS,tmva/tmva/test/DNN/GRU/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/CMakeLists.txt:1760,Testability,test,testFullGRUCpu,1760,############################################################################; # CMakeLists.txt file for building TMVA/DNN/GRU tests.; # @author Surya S Dwivedi; ############################################################################. set(Libraries TMVA). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn). list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testGRUBackpropagationCudnn TestGRUBackpropagationCudnn.cxx); target_link_libraries(testGRUBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-BackpropagationCudnn COMMAND testGRUBackpropagationCudnn). add_executable(testGRUForwardPassCudnn TestGRUForwardPassCudnn.cxx); target_link_libraries(testGRUForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-Forwaed-Cudnn COMMAND testGRUForwardPassCudnn). # GRU - Full Test GPU; add_executable(testFullGRUCudnn TestFullGRUCudnn.cxx); target_link_libraries(testFullGRUCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-GRU-Full-Cudnn COMMAND testFullGRUCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # GRU - Forward CPU; ROOT_EXECUTABLE(testGRUForwardPassCpu TestGRUForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Forward-Cpu COMMAND testGRUForwardPassCpu). # GRU - Backward CPU; ROOT_EXECUTABLE(testGRUBackpropagationCpu TestGRUBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Backward-Cpu COMMAND testGRUBackpropagationCpu). # GRU - Full Test CPU; ROOT_EXECUTABLE(testFullGRUCpu TestFullGRUCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-GRU-Full-Cpu COMMAND testFullGRUCpu). endif (BLAS_FOUND AND imt); ,MatchSource.DOCS,tmva/tmva/test/DNN/GRU/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt:127,Testability,test,tests,127,############################################################################; # CMakeLists.txt file for building TMVA/DNN/LSTM tests.; # @author Surya S Dwivedi; ############################################################################. set(Libraries TMVA). # LSTM - Forward Reference; #ROOT_EXECUTABLE(testLSTMForwardPass TestLSTMForwardPass.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Forward COMMAND testLSTMForwardPass). # LSTM - Backpropagation Reference; #ROOT_EXECUTABLE(testLSTMBackpropagation TestLSTMBackpropagation.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Backpropagation COMMAND testLSTMBackpropagation). # LSTM - Full Test Reference; #ROOT_EXECUTABLE(testFullLSTM TestFullLSTM.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-FullLSTM COMMAND testFullLSTM). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn); list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testLSTMForwardPassCudnn TestLSTMForwardPassCudnn.cxx); target_link_libraries(testLSTMForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forwaed-Cudnn COMMAND testLSTMForwardPassCudnn). add_executable(testLSTMBackpropagationCudnn TestLSTMBackpropagationCudnn.cxx); target_link_libraries(testLSTMBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-BackpropagationCudnn COMMAND testLSTMBackpropagationCudnn); # Test crashes on ubuntu2404-cuda-12.6.1. See root-project/root#16790:; set_tests_properties(TMVA-DNN-LSTM-BackpropagationCudnn PROPERTIES DISABLED True). # LSTM - Full Test GPU; add_executable(testFullLSTMCudnn TestFullLSTMCudnn.cxx); target_link_libraries(testFullLSTMCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Full-Cudnn COMMAND testFullLSTMCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # LSTM - Forward CPU; ROOT_EXECUTA,MatchSource.DOCS,tmva/tmva/test/DNN/LSTM/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt:306,Testability,test,testLSTMForwardPass,306,############################################################################; # CMakeLists.txt file for building TMVA/DNN/LSTM tests.; # @author Surya S Dwivedi; ############################################################################. set(Libraries TMVA). # LSTM - Forward Reference; #ROOT_EXECUTABLE(testLSTMForwardPass TestLSTMForwardPass.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Forward COMMAND testLSTMForwardPass). # LSTM - Backpropagation Reference; #ROOT_EXECUTABLE(testLSTMBackpropagation TestLSTMBackpropagation.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Backpropagation COMMAND testLSTMBackpropagation). # LSTM - Full Test Reference; #ROOT_EXECUTABLE(testFullLSTM TestFullLSTM.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-FullLSTM COMMAND testFullLSTM). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn); list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testLSTMForwardPassCudnn TestLSTMForwardPassCudnn.cxx); target_link_libraries(testLSTMForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forwaed-Cudnn COMMAND testLSTMForwardPassCudnn). add_executable(testLSTMBackpropagationCudnn TestLSTMBackpropagationCudnn.cxx); target_link_libraries(testLSTMBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-BackpropagationCudnn COMMAND testLSTMBackpropagationCudnn); # Test crashes on ubuntu2404-cuda-12.6.1. See root-project/root#16790:; set_tests_properties(TMVA-DNN-LSTM-BackpropagationCudnn PROPERTIES DISABLED True). # LSTM - Full Test GPU; add_executable(testFullLSTMCudnn TestFullLSTMCudnn.cxx); target_link_libraries(testFullLSTMCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Full-Cudnn COMMAND testFullLSTMCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # LSTM - Forward CPU; ROOT_EXECUTA,MatchSource.DOCS,tmva/tmva/test/DNN/LSTM/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt:326,Testability,Test,TestLSTMForwardPass,326,############################################################################; # CMakeLists.txt file for building TMVA/DNN/LSTM tests.; # @author Surya S Dwivedi; ############################################################################. set(Libraries TMVA). # LSTM - Forward Reference; #ROOT_EXECUTABLE(testLSTMForwardPass TestLSTMForwardPass.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Forward COMMAND testLSTMForwardPass). # LSTM - Backpropagation Reference; #ROOT_EXECUTABLE(testLSTMBackpropagation TestLSTMBackpropagation.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Backpropagation COMMAND testLSTMBackpropagation). # LSTM - Full Test Reference; #ROOT_EXECUTABLE(testFullLSTM TestFullLSTM.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-FullLSTM COMMAND testFullLSTM). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn); list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testLSTMForwardPassCudnn TestLSTMForwardPassCudnn.cxx); target_link_libraries(testLSTMForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forwaed-Cudnn COMMAND testLSTMForwardPassCudnn). add_executable(testLSTMBackpropagationCudnn TestLSTMBackpropagationCudnn.cxx); target_link_libraries(testLSTMBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-BackpropagationCudnn COMMAND testLSTMBackpropagationCudnn); # Test crashes on ubuntu2404-cuda-12.6.1. See root-project/root#16790:; set_tests_properties(TMVA-DNN-LSTM-BackpropagationCudnn PROPERTIES DISABLED True). # LSTM - Full Test GPU; add_executable(testFullLSTMCudnn TestFullLSTMCudnn.cxx); target_link_libraries(testFullLSTMCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Full-Cudnn COMMAND testFullLSTMCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # LSTM - Forward CPU; ROOT_EXECUTA,MatchSource.DOCS,tmva/tmva/test/DNN/LSTM/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt:420,Testability,test,testLSTMForwardPass,420,############################################################################; # CMakeLists.txt file for building TMVA/DNN/LSTM tests.; # @author Surya S Dwivedi; ############################################################################. set(Libraries TMVA). # LSTM - Forward Reference; #ROOT_EXECUTABLE(testLSTMForwardPass TestLSTMForwardPass.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Forward COMMAND testLSTMForwardPass). # LSTM - Backpropagation Reference; #ROOT_EXECUTABLE(testLSTMBackpropagation TestLSTMBackpropagation.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Backpropagation COMMAND testLSTMBackpropagation). # LSTM - Full Test Reference; #ROOT_EXECUTABLE(testFullLSTM TestFullLSTM.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-FullLSTM COMMAND testFullLSTM). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn); list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testLSTMForwardPassCudnn TestLSTMForwardPassCudnn.cxx); target_link_libraries(testLSTMForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forwaed-Cudnn COMMAND testLSTMForwardPassCudnn). add_executable(testLSTMBackpropagationCudnn TestLSTMBackpropagationCudnn.cxx); target_link_libraries(testLSTMBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-BackpropagationCudnn COMMAND testLSTMBackpropagationCudnn); # Test crashes on ubuntu2404-cuda-12.6.1. See root-project/root#16790:; set_tests_properties(TMVA-DNN-LSTM-BackpropagationCudnn PROPERTIES DISABLED True). # LSTM - Full Test GPU; add_executable(testFullLSTMCudnn TestFullLSTMCudnn.cxx); target_link_libraries(testFullLSTMCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Full-Cudnn COMMAND testFullLSTMCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # LSTM - Forward CPU; ROOT_EXECUTA,MatchSource.DOCS,tmva/tmva/test/DNN/LSTM/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt:495,Testability,test,testLSTMBackpropagation,495,############################################################################; # CMakeLists.txt file for building TMVA/DNN/LSTM tests.; # @author Surya S Dwivedi; ############################################################################. set(Libraries TMVA). # LSTM - Forward Reference; #ROOT_EXECUTABLE(testLSTMForwardPass TestLSTMForwardPass.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Forward COMMAND testLSTMForwardPass). # LSTM - Backpropagation Reference; #ROOT_EXECUTABLE(testLSTMBackpropagation TestLSTMBackpropagation.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Backpropagation COMMAND testLSTMBackpropagation). # LSTM - Full Test Reference; #ROOT_EXECUTABLE(testFullLSTM TestFullLSTM.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-FullLSTM COMMAND testFullLSTM). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn); list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testLSTMForwardPassCudnn TestLSTMForwardPassCudnn.cxx); target_link_libraries(testLSTMForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forwaed-Cudnn COMMAND testLSTMForwardPassCudnn). add_executable(testLSTMBackpropagationCudnn TestLSTMBackpropagationCudnn.cxx); target_link_libraries(testLSTMBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-BackpropagationCudnn COMMAND testLSTMBackpropagationCudnn); # Test crashes on ubuntu2404-cuda-12.6.1. See root-project/root#16790:; set_tests_properties(TMVA-DNN-LSTM-BackpropagationCudnn PROPERTIES DISABLED True). # LSTM - Full Test GPU; add_executable(testFullLSTMCudnn TestFullLSTMCudnn.cxx); target_link_libraries(testFullLSTMCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Full-Cudnn COMMAND testFullLSTMCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # LSTM - Forward CPU; ROOT_EXECUTA,MatchSource.DOCS,tmva/tmva/test/DNN/LSTM/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt:519,Testability,Test,TestLSTMBackpropagation,519,############################################################################; # CMakeLists.txt file for building TMVA/DNN/LSTM tests.; # @author Surya S Dwivedi; ############################################################################. set(Libraries TMVA). # LSTM - Forward Reference; #ROOT_EXECUTABLE(testLSTMForwardPass TestLSTMForwardPass.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Forward COMMAND testLSTMForwardPass). # LSTM - Backpropagation Reference; #ROOT_EXECUTABLE(testLSTMBackpropagation TestLSTMBackpropagation.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Backpropagation COMMAND testLSTMBackpropagation). # LSTM - Full Test Reference; #ROOT_EXECUTABLE(testFullLSTM TestFullLSTM.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-FullLSTM COMMAND testFullLSTM). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn); list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testLSTMForwardPassCudnn TestLSTMForwardPassCudnn.cxx); target_link_libraries(testLSTMForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forwaed-Cudnn COMMAND testLSTMForwardPassCudnn). add_executable(testLSTMBackpropagationCudnn TestLSTMBackpropagationCudnn.cxx); target_link_libraries(testLSTMBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-BackpropagationCudnn COMMAND testLSTMBackpropagationCudnn); # Test crashes on ubuntu2404-cuda-12.6.1. See root-project/root#16790:; set_tests_properties(TMVA-DNN-LSTM-BackpropagationCudnn PROPERTIES DISABLED True). # LSTM - Full Test GPU; add_executable(testFullLSTMCudnn TestFullLSTMCudnn.cxx); target_link_libraries(testFullLSTMCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Full-Cudnn COMMAND testFullLSTMCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # LSTM - Forward CPU; ROOT_EXECUTA,MatchSource.DOCS,tmva/tmva/test/DNN/LSTM/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt:625,Testability,test,testLSTMBackpropagation,625,############################################################################; # CMakeLists.txt file for building TMVA/DNN/LSTM tests.; # @author Surya S Dwivedi; ############################################################################. set(Libraries TMVA). # LSTM - Forward Reference; #ROOT_EXECUTABLE(testLSTMForwardPass TestLSTMForwardPass.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Forward COMMAND testLSTMForwardPass). # LSTM - Backpropagation Reference; #ROOT_EXECUTABLE(testLSTMBackpropagation TestLSTMBackpropagation.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Backpropagation COMMAND testLSTMBackpropagation). # LSTM - Full Test Reference; #ROOT_EXECUTABLE(testFullLSTM TestFullLSTM.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-FullLSTM COMMAND testFullLSTM). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn); list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testLSTMForwardPassCudnn TestLSTMForwardPassCudnn.cxx); target_link_libraries(testLSTMForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forwaed-Cudnn COMMAND testLSTMForwardPassCudnn). add_executable(testLSTMBackpropagationCudnn TestLSTMBackpropagationCudnn.cxx); target_link_libraries(testLSTMBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-BackpropagationCudnn COMMAND testLSTMBackpropagationCudnn); # Test crashes on ubuntu2404-cuda-12.6.1. See root-project/root#16790:; set_tests_properties(TMVA-DNN-LSTM-BackpropagationCudnn PROPERTIES DISABLED True). # LSTM - Full Test GPU; add_executable(testFullLSTMCudnn TestFullLSTMCudnn.cxx); target_link_libraries(testFullLSTMCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Full-Cudnn COMMAND testFullLSTMCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # LSTM - Forward CPU; ROOT_EXECUTA,MatchSource.DOCS,tmva/tmva/test/DNN/LSTM/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt:665,Testability,Test,Test,665,############################################################################; # CMakeLists.txt file for building TMVA/DNN/LSTM tests.; # @author Surya S Dwivedi; ############################################################################. set(Libraries TMVA). # LSTM - Forward Reference; #ROOT_EXECUTABLE(testLSTMForwardPass TestLSTMForwardPass.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Forward COMMAND testLSTMForwardPass). # LSTM - Backpropagation Reference; #ROOT_EXECUTABLE(testLSTMBackpropagation TestLSTMBackpropagation.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Backpropagation COMMAND testLSTMBackpropagation). # LSTM - Full Test Reference; #ROOT_EXECUTABLE(testFullLSTM TestFullLSTM.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-FullLSTM COMMAND testFullLSTM). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn); list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testLSTMForwardPassCudnn TestLSTMForwardPassCudnn.cxx); target_link_libraries(testLSTMForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forwaed-Cudnn COMMAND testLSTMForwardPassCudnn). add_executable(testLSTMBackpropagationCudnn TestLSTMBackpropagationCudnn.cxx); target_link_libraries(testLSTMBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-BackpropagationCudnn COMMAND testLSTMBackpropagationCudnn); # Test crashes on ubuntu2404-cuda-12.6.1. See root-project/root#16790:; set_tests_properties(TMVA-DNN-LSTM-BackpropagationCudnn PROPERTIES DISABLED True). # LSTM - Full Test GPU; add_executable(testFullLSTMCudnn TestFullLSTMCudnn.cxx); target_link_libraries(testFullLSTMCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Full-Cudnn COMMAND testFullLSTMCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # LSTM - Forward CPU; ROOT_EXECUTA,MatchSource.DOCS,tmva/tmva/test/DNN/LSTM/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt:698,Testability,test,testFullLSTM,698,############################################################################; # CMakeLists.txt file for building TMVA/DNN/LSTM tests.; # @author Surya S Dwivedi; ############################################################################. set(Libraries TMVA). # LSTM - Forward Reference; #ROOT_EXECUTABLE(testLSTMForwardPass TestLSTMForwardPass.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Forward COMMAND testLSTMForwardPass). # LSTM - Backpropagation Reference; #ROOT_EXECUTABLE(testLSTMBackpropagation TestLSTMBackpropagation.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Backpropagation COMMAND testLSTMBackpropagation). # LSTM - Full Test Reference; #ROOT_EXECUTABLE(testFullLSTM TestFullLSTM.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-FullLSTM COMMAND testFullLSTM). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn); list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testLSTMForwardPassCudnn TestLSTMForwardPassCudnn.cxx); target_link_libraries(testLSTMForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forwaed-Cudnn COMMAND testLSTMForwardPassCudnn). add_executable(testLSTMBackpropagationCudnn TestLSTMBackpropagationCudnn.cxx); target_link_libraries(testLSTMBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-BackpropagationCudnn COMMAND testLSTMBackpropagationCudnn); # Test crashes on ubuntu2404-cuda-12.6.1. See root-project/root#16790:; set_tests_properties(TMVA-DNN-LSTM-BackpropagationCudnn PROPERTIES DISABLED True). # LSTM - Full Test GPU; add_executable(testFullLSTMCudnn TestFullLSTMCudnn.cxx); target_link_libraries(testFullLSTMCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Full-Cudnn COMMAND testFullLSTMCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # LSTM - Forward CPU; ROOT_EXECUTA,MatchSource.DOCS,tmva/tmva/test/DNN/LSTM/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt:711,Testability,Test,TestFullLSTM,711,############################################################################; # CMakeLists.txt file for building TMVA/DNN/LSTM tests.; # @author Surya S Dwivedi; ############################################################################. set(Libraries TMVA). # LSTM - Forward Reference; #ROOT_EXECUTABLE(testLSTMForwardPass TestLSTMForwardPass.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Forward COMMAND testLSTMForwardPass). # LSTM - Backpropagation Reference; #ROOT_EXECUTABLE(testLSTMBackpropagation TestLSTMBackpropagation.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Backpropagation COMMAND testLSTMBackpropagation). # LSTM - Full Test Reference; #ROOT_EXECUTABLE(testFullLSTM TestFullLSTM.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-FullLSTM COMMAND testFullLSTM). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn); list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testLSTMForwardPassCudnn TestLSTMForwardPassCudnn.cxx); target_link_libraries(testLSTMForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forwaed-Cudnn COMMAND testLSTMForwardPassCudnn). add_executable(testLSTMBackpropagationCudnn TestLSTMBackpropagationCudnn.cxx); target_link_libraries(testLSTMBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-BackpropagationCudnn COMMAND testLSTMBackpropagationCudnn); # Test crashes on ubuntu2404-cuda-12.6.1. See root-project/root#16790:; set_tests_properties(TMVA-DNN-LSTM-BackpropagationCudnn PROPERTIES DISABLED True). # LSTM - Full Test GPU; add_executable(testFullLSTMCudnn TestFullLSTMCudnn.cxx); target_link_libraries(testFullLSTMCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Full-Cudnn COMMAND testFullLSTMCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # LSTM - Forward CPU; ROOT_EXECUTA,MatchSource.DOCS,tmva/tmva/test/DNN/LSTM/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt:799,Testability,test,testFullLSTM,799,############################################################################; # CMakeLists.txt file for building TMVA/DNN/LSTM tests.; # @author Surya S Dwivedi; ############################################################################. set(Libraries TMVA). # LSTM - Forward Reference; #ROOT_EXECUTABLE(testLSTMForwardPass TestLSTMForwardPass.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Forward COMMAND testLSTMForwardPass). # LSTM - Backpropagation Reference; #ROOT_EXECUTABLE(testLSTMBackpropagation TestLSTMBackpropagation.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Backpropagation COMMAND testLSTMBackpropagation). # LSTM - Full Test Reference; #ROOT_EXECUTABLE(testFullLSTM TestFullLSTM.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-FullLSTM COMMAND testFullLSTM). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn); list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testLSTMForwardPassCudnn TestLSTMForwardPassCudnn.cxx); target_link_libraries(testLSTMForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forwaed-Cudnn COMMAND testLSTMForwardPassCudnn). add_executable(testLSTMBackpropagationCudnn TestLSTMBackpropagationCudnn.cxx); target_link_libraries(testLSTMBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-BackpropagationCudnn COMMAND testLSTMBackpropagationCudnn); # Test crashes on ubuntu2404-cuda-12.6.1. See root-project/root#16790:; set_tests_properties(TMVA-DNN-LSTM-BackpropagationCudnn PROPERTIES DISABLED True). # LSTM - Full Test GPU; add_executable(testFullLSTMCudnn TestFullLSTMCudnn.cxx); target_link_libraries(testFullLSTMCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Full-Cudnn COMMAND testFullLSTMCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # LSTM - Forward CPU; ROOT_EXECUTA,MatchSource.DOCS,tmva/tmva/test/DNN/LSTM/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt:824,Testability,test,tests,824,############################################################################; # CMakeLists.txt file for building TMVA/DNN/LSTM tests.; # @author Surya S Dwivedi; ############################################################################. set(Libraries TMVA). # LSTM - Forward Reference; #ROOT_EXECUTABLE(testLSTMForwardPass TestLSTMForwardPass.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Forward COMMAND testLSTMForwardPass). # LSTM - Backpropagation Reference; #ROOT_EXECUTABLE(testLSTMBackpropagation TestLSTMBackpropagation.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Backpropagation COMMAND testLSTMBackpropagation). # LSTM - Full Test Reference; #ROOT_EXECUTABLE(testFullLSTM TestFullLSTM.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-FullLSTM COMMAND testFullLSTM). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn); list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testLSTMForwardPassCudnn TestLSTMForwardPassCudnn.cxx); target_link_libraries(testLSTMForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forwaed-Cudnn COMMAND testLSTMForwardPassCudnn). add_executable(testLSTMBackpropagationCudnn TestLSTMBackpropagationCudnn.cxx); target_link_libraries(testLSTMBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-BackpropagationCudnn COMMAND testLSTMBackpropagationCudnn); # Test crashes on ubuntu2404-cuda-12.6.1. See root-project/root#16790:; set_tests_properties(TMVA-DNN-LSTM-BackpropagationCudnn PROPERTIES DISABLED True). # LSTM - Full Test GPU; add_executable(testFullLSTMCudnn TestFullLSTMCudnn.cxx); target_link_libraries(testFullLSTMCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Full-Cudnn COMMAND testFullLSTMCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # LSTM - Forward CPU; ROOT_EXECUTA,MatchSource.DOCS,tmva/tmva/test/DNN/LSTM/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt:1011,Testability,test,testLSTMForwardPassCudnn,1011,################################################; # CMakeLists.txt file for building TMVA/DNN/LSTM tests.; # @author Surya S Dwivedi; ############################################################################. set(Libraries TMVA). # LSTM - Forward Reference; #ROOT_EXECUTABLE(testLSTMForwardPass TestLSTMForwardPass.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Forward COMMAND testLSTMForwardPass). # LSTM - Backpropagation Reference; #ROOT_EXECUTABLE(testLSTMBackpropagation TestLSTMBackpropagation.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Backpropagation COMMAND testLSTMBackpropagation). # LSTM - Full Test Reference; #ROOT_EXECUTABLE(testFullLSTM TestFullLSTM.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-FullLSTM COMMAND testFullLSTM). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn); list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testLSTMForwardPassCudnn TestLSTMForwardPassCudnn.cxx); target_link_libraries(testLSTMForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forwaed-Cudnn COMMAND testLSTMForwardPassCudnn). add_executable(testLSTMBackpropagationCudnn TestLSTMBackpropagationCudnn.cxx); target_link_libraries(testLSTMBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-BackpropagationCudnn COMMAND testLSTMBackpropagationCudnn); # Test crashes on ubuntu2404-cuda-12.6.1. See root-project/root#16790:; set_tests_properties(TMVA-DNN-LSTM-BackpropagationCudnn PROPERTIES DISABLED True). # LSTM - Full Test GPU; add_executable(testFullLSTMCudnn TestFullLSTMCudnn.cxx); target_link_libraries(testFullLSTMCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Full-Cudnn COMMAND testFullLSTMCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # LSTM - Forward CPU; ROOT_EXECUTABLE(testLSTMForwardPassCpu ,MatchSource.DOCS,tmva/tmva/test/DNN/LSTM/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt:1036,Testability,Test,TestLSTMForwardPassCudnn,1036,################################################; # CMakeLists.txt file for building TMVA/DNN/LSTM tests.; # @author Surya S Dwivedi; ############################################################################. set(Libraries TMVA). # LSTM - Forward Reference; #ROOT_EXECUTABLE(testLSTMForwardPass TestLSTMForwardPass.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Forward COMMAND testLSTMForwardPass). # LSTM - Backpropagation Reference; #ROOT_EXECUTABLE(testLSTMBackpropagation TestLSTMBackpropagation.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Backpropagation COMMAND testLSTMBackpropagation). # LSTM - Full Test Reference; #ROOT_EXECUTABLE(testFullLSTM TestFullLSTM.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-FullLSTM COMMAND testFullLSTM). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn); list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testLSTMForwardPassCudnn TestLSTMForwardPassCudnn.cxx); target_link_libraries(testLSTMForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forwaed-Cudnn COMMAND testLSTMForwardPassCudnn). add_executable(testLSTMBackpropagationCudnn TestLSTMBackpropagationCudnn.cxx); target_link_libraries(testLSTMBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-BackpropagationCudnn COMMAND testLSTMBackpropagationCudnn); # Test crashes on ubuntu2404-cuda-12.6.1. See root-project/root#16790:; set_tests_properties(TMVA-DNN-LSTM-BackpropagationCudnn PROPERTIES DISABLED True). # LSTM - Full Test GPU; add_executable(testFullLSTMCudnn TestFullLSTMCudnn.cxx); target_link_libraries(testFullLSTMCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Full-Cudnn COMMAND testFullLSTMCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # LSTM - Forward CPU; ROOT_EXECUTABLE(testLSTMForwardPassCpu ,MatchSource.DOCS,tmva/tmva/test/DNN/LSTM/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt:1089,Testability,test,testLSTMForwardPassCudnn,1089, Surya S Dwivedi; ############################################################################. set(Libraries TMVA). # LSTM - Forward Reference; #ROOT_EXECUTABLE(testLSTMForwardPass TestLSTMForwardPass.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Forward COMMAND testLSTMForwardPass). # LSTM - Backpropagation Reference; #ROOT_EXECUTABLE(testLSTMBackpropagation TestLSTMBackpropagation.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Backpropagation COMMAND testLSTMBackpropagation). # LSTM - Full Test Reference; #ROOT_EXECUTABLE(testFullLSTM TestFullLSTM.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-FullLSTM COMMAND testFullLSTM). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn); list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testLSTMForwardPassCudnn TestLSTMForwardPassCudnn.cxx); target_link_libraries(testLSTMForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forwaed-Cudnn COMMAND testLSTMForwardPassCudnn). add_executable(testLSTMBackpropagationCudnn TestLSTMBackpropagationCudnn.cxx); target_link_libraries(testLSTMBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-BackpropagationCudnn COMMAND testLSTMBackpropagationCudnn); # Test crashes on ubuntu2404-cuda-12.6.1. See root-project/root#16790:; set_tests_properties(TMVA-DNN-LSTM-BackpropagationCudnn PROPERTIES DISABLED True). # LSTM - Full Test GPU; add_executable(testFullLSTMCudnn TestFullLSTMCudnn.cxx); target_link_libraries(testFullLSTMCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Full-Cudnn COMMAND testFullLSTMCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # LSTM - Forward CPU; ROOT_EXECUTABLE(testLSTMForwardPassCpu TestLSTMForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forward-Cpu COMMAND testLSTMForwardP,MatchSource.DOCS,tmva/tmva/test/DNN/LSTM/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt:1201,Testability,test,testLSTMForwardPassCudnn,1201, Surya S Dwivedi; ############################################################################. set(Libraries TMVA). # LSTM - Forward Reference; #ROOT_EXECUTABLE(testLSTMForwardPass TestLSTMForwardPass.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Forward COMMAND testLSTMForwardPass). # LSTM - Backpropagation Reference; #ROOT_EXECUTABLE(testLSTMBackpropagation TestLSTMBackpropagation.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Backpropagation COMMAND testLSTMBackpropagation). # LSTM - Full Test Reference; #ROOT_EXECUTABLE(testFullLSTM TestFullLSTM.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-FullLSTM COMMAND testFullLSTM). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn); list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testLSTMForwardPassCudnn TestLSTMForwardPassCudnn.cxx); target_link_libraries(testLSTMForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forwaed-Cudnn COMMAND testLSTMForwardPassCudnn). add_executable(testLSTMBackpropagationCudnn TestLSTMBackpropagationCudnn.cxx); target_link_libraries(testLSTMBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-BackpropagationCudnn COMMAND testLSTMBackpropagationCudnn); # Test crashes on ubuntu2404-cuda-12.6.1. See root-project/root#16790:; set_tests_properties(TMVA-DNN-LSTM-BackpropagationCudnn PROPERTIES DISABLED True). # LSTM - Full Test GPU; add_executable(testFullLSTMCudnn TestFullLSTMCudnn.cxx); target_link_libraries(testFullLSTMCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Full-Cudnn COMMAND testFullLSTMCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # LSTM - Forward CPU; ROOT_EXECUTABLE(testLSTMForwardPassCpu TestLSTMForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forward-Cpu COMMAND testLSTMForwardP,MatchSource.DOCS,tmva/tmva/test/DNN/LSTM/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt:1243,Testability,test,testLSTMBackpropagationCudnn,1243,STM - Forward Reference; #ROOT_EXECUTABLE(testLSTMForwardPass TestLSTMForwardPass.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Forward COMMAND testLSTMForwardPass). # LSTM - Backpropagation Reference; #ROOT_EXECUTABLE(testLSTMBackpropagation TestLSTMBackpropagation.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Backpropagation COMMAND testLSTMBackpropagation). # LSTM - Full Test Reference; #ROOT_EXECUTABLE(testFullLSTM TestFullLSTM.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-FullLSTM COMMAND testFullLSTM). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn); list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testLSTMForwardPassCudnn TestLSTMForwardPassCudnn.cxx); target_link_libraries(testLSTMForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forwaed-Cudnn COMMAND testLSTMForwardPassCudnn). add_executable(testLSTMBackpropagationCudnn TestLSTMBackpropagationCudnn.cxx); target_link_libraries(testLSTMBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-BackpropagationCudnn COMMAND testLSTMBackpropagationCudnn); # Test crashes on ubuntu2404-cuda-12.6.1. See root-project/root#16790:; set_tests_properties(TMVA-DNN-LSTM-BackpropagationCudnn PROPERTIES DISABLED True). # LSTM - Full Test GPU; add_executable(testFullLSTMCudnn TestFullLSTMCudnn.cxx); target_link_libraries(testFullLSTMCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Full-Cudnn COMMAND testFullLSTMCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # LSTM - Forward CPU; ROOT_EXECUTABLE(testLSTMForwardPassCpu TestLSTMForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forward-Cpu COMMAND testLSTMForwardPassCpu). # LSTM - Backward CPU; ROOT_EXECUTABLE(testLSTMBackpropagationCpu TestLSTMBackpropagationCpu.cxx LIBRARIES ${Li,MatchSource.DOCS,tmva/tmva/test/DNN/LSTM/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt:1272,Testability,Test,TestLSTMBackpropagationCudnn,1272,STM - Forward Reference; #ROOT_EXECUTABLE(testLSTMForwardPass TestLSTMForwardPass.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Forward COMMAND testLSTMForwardPass). # LSTM - Backpropagation Reference; #ROOT_EXECUTABLE(testLSTMBackpropagation TestLSTMBackpropagation.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Backpropagation COMMAND testLSTMBackpropagation). # LSTM - Full Test Reference; #ROOT_EXECUTABLE(testFullLSTM TestFullLSTM.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-FullLSTM COMMAND testFullLSTM). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn); list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testLSTMForwardPassCudnn TestLSTMForwardPassCudnn.cxx); target_link_libraries(testLSTMForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forwaed-Cudnn COMMAND testLSTMForwardPassCudnn). add_executable(testLSTMBackpropagationCudnn TestLSTMBackpropagationCudnn.cxx); target_link_libraries(testLSTMBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-BackpropagationCudnn COMMAND testLSTMBackpropagationCudnn); # Test crashes on ubuntu2404-cuda-12.6.1. See root-project/root#16790:; set_tests_properties(TMVA-DNN-LSTM-BackpropagationCudnn PROPERTIES DISABLED True). # LSTM - Full Test GPU; add_executable(testFullLSTMCudnn TestFullLSTMCudnn.cxx); target_link_libraries(testFullLSTMCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Full-Cudnn COMMAND testFullLSTMCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # LSTM - Forward CPU; ROOT_EXECUTABLE(testLSTMForwardPassCpu TestLSTMForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forward-Cpu COMMAND testLSTMForwardPassCpu). # LSTM - Backward CPU; ROOT_EXECUTABLE(testLSTMBackpropagationCpu TestLSTMBackpropagationCpu.cxx LIBRARIES ${Li,MatchSource.DOCS,tmva/tmva/test/DNN/LSTM/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt:1329,Testability,test,testLSTMBackpropagationCudnn,1329,d COMMAND testLSTMForwardPass). # LSTM - Backpropagation Reference; #ROOT_EXECUTABLE(testLSTMBackpropagation TestLSTMBackpropagation.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Backpropagation COMMAND testLSTMBackpropagation). # LSTM - Full Test Reference; #ROOT_EXECUTABLE(testFullLSTM TestFullLSTM.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-FullLSTM COMMAND testFullLSTM). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn); list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testLSTMForwardPassCudnn TestLSTMForwardPassCudnn.cxx); target_link_libraries(testLSTMForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forwaed-Cudnn COMMAND testLSTMForwardPassCudnn). add_executable(testLSTMBackpropagationCudnn TestLSTMBackpropagationCudnn.cxx); target_link_libraries(testLSTMBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-BackpropagationCudnn COMMAND testLSTMBackpropagationCudnn); # Test crashes on ubuntu2404-cuda-12.6.1. See root-project/root#16790:; set_tests_properties(TMVA-DNN-LSTM-BackpropagationCudnn PROPERTIES DISABLED True). # LSTM - Full Test GPU; add_executable(testFullLSTMCudnn TestFullLSTMCudnn.cxx); target_link_libraries(testFullLSTMCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Full-Cudnn COMMAND testFullLSTMCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # LSTM - Forward CPU; ROOT_EXECUTABLE(testLSTMForwardPassCpu TestLSTMForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forward-Cpu COMMAND testLSTMForwardPassCpu). # LSTM - Backward CPU; ROOT_EXECUTABLE(testLSTMBackpropagationCpu TestLSTMBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Backward-Cpu COMMAND testLSTMBackpropagationCpu). # LSTM - Full Test Reference; ROOT_EXECUTABLE(testFullLSTM,MatchSource.DOCS,tmva/tmva/test/DNN/LSTM/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt:1452,Testability,test,testLSTMBackpropagationCudnn,1452,d COMMAND testLSTMForwardPass). # LSTM - Backpropagation Reference; #ROOT_EXECUTABLE(testLSTMBackpropagation TestLSTMBackpropagation.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Backpropagation COMMAND testLSTMBackpropagation). # LSTM - Full Test Reference; #ROOT_EXECUTABLE(testFullLSTM TestFullLSTM.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-FullLSTM COMMAND testFullLSTM). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn); list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testLSTMForwardPassCudnn TestLSTMForwardPassCudnn.cxx); target_link_libraries(testLSTMForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forwaed-Cudnn COMMAND testLSTMForwardPassCudnn). add_executable(testLSTMBackpropagationCudnn TestLSTMBackpropagationCudnn.cxx); target_link_libraries(testLSTMBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-BackpropagationCudnn COMMAND testLSTMBackpropagationCudnn); # Test crashes on ubuntu2404-cuda-12.6.1. See root-project/root#16790:; set_tests_properties(TMVA-DNN-LSTM-BackpropagationCudnn PROPERTIES DISABLED True). # LSTM - Full Test GPU; add_executable(testFullLSTMCudnn TestFullLSTMCudnn.cxx); target_link_libraries(testFullLSTMCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Full-Cudnn COMMAND testFullLSTMCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # LSTM - Forward CPU; ROOT_EXECUTABLE(testLSTMForwardPassCpu TestLSTMForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forward-Cpu COMMAND testLSTMForwardPassCpu). # LSTM - Backward CPU; ROOT_EXECUTABLE(testLSTMBackpropagationCpu TestLSTMBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Backward-Cpu COMMAND testLSTMBackpropagationCpu). # LSTM - Full Test Reference; ROOT_EXECUTABLE(testFullLSTM,MatchSource.DOCS,tmva/tmva/test/DNN/LSTM/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt:1485,Testability,Test,Test,1485,d COMMAND testLSTMForwardPass). # LSTM - Backpropagation Reference; #ROOT_EXECUTABLE(testLSTMBackpropagation TestLSTMBackpropagation.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Backpropagation COMMAND testLSTMBackpropagation). # LSTM - Full Test Reference; #ROOT_EXECUTABLE(testFullLSTM TestFullLSTM.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-FullLSTM COMMAND testFullLSTM). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn); list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testLSTMForwardPassCudnn TestLSTMForwardPassCudnn.cxx); target_link_libraries(testLSTMForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forwaed-Cudnn COMMAND testLSTMForwardPassCudnn). add_executable(testLSTMBackpropagationCudnn TestLSTMBackpropagationCudnn.cxx); target_link_libraries(testLSTMBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-BackpropagationCudnn COMMAND testLSTMBackpropagationCudnn); # Test crashes on ubuntu2404-cuda-12.6.1. See root-project/root#16790:; set_tests_properties(TMVA-DNN-LSTM-BackpropagationCudnn PROPERTIES DISABLED True). # LSTM - Full Test GPU; add_executable(testFullLSTMCudnn TestFullLSTMCudnn.cxx); target_link_libraries(testFullLSTMCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Full-Cudnn COMMAND testFullLSTMCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # LSTM - Forward CPU; ROOT_EXECUTABLE(testLSTMForwardPassCpu TestLSTMForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forward-Cpu COMMAND testLSTMForwardPassCpu). # LSTM - Backward CPU; ROOT_EXECUTABLE(testLSTMBackpropagationCpu TestLSTMBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Backward-Cpu COMMAND testLSTMBackpropagationCpu). # LSTM - Full Test Reference; ROOT_EXECUTABLE(testFullLSTM,MatchSource.DOCS,tmva/tmva/test/DNN/LSTM/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt:1652,Testability,Test,Test,1652,ARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Backpropagation COMMAND testLSTMBackpropagation). # LSTM - Full Test Reference; #ROOT_EXECUTABLE(testFullLSTM TestFullLSTM.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-FullLSTM COMMAND testFullLSTM). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn); list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testLSTMForwardPassCudnn TestLSTMForwardPassCudnn.cxx); target_link_libraries(testLSTMForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forwaed-Cudnn COMMAND testLSTMForwardPassCudnn). add_executable(testLSTMBackpropagationCudnn TestLSTMBackpropagationCudnn.cxx); target_link_libraries(testLSTMBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-BackpropagationCudnn COMMAND testLSTMBackpropagationCudnn); # Test crashes on ubuntu2404-cuda-12.6.1. See root-project/root#16790:; set_tests_properties(TMVA-DNN-LSTM-BackpropagationCudnn PROPERTIES DISABLED True). # LSTM - Full Test GPU; add_executable(testFullLSTMCudnn TestFullLSTMCudnn.cxx); target_link_libraries(testFullLSTMCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Full-Cudnn COMMAND testFullLSTMCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # LSTM - Forward CPU; ROOT_EXECUTABLE(testLSTMForwardPassCpu TestLSTMForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forward-Cpu COMMAND testLSTMForwardPassCpu). # LSTM - Backward CPU; ROOT_EXECUTABLE(testLSTMBackpropagationCpu TestLSTMBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Backward-Cpu COMMAND testLSTMBackpropagationCpu). # LSTM - Full Test Reference; ROOT_EXECUTABLE(testFullLSTMCpu TestFullLSTMCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Full-Cpu COMMAND testFullLSTMCpu). endif (BLAS_FOUND AND imt); ,MatchSource.DOCS,tmva/tmva/test/DNN/LSTM/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt:1677,Testability,test,testFullLSTMCudnn,1677,ARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Backpropagation COMMAND testLSTMBackpropagation). # LSTM - Full Test Reference; #ROOT_EXECUTABLE(testFullLSTM TestFullLSTM.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-FullLSTM COMMAND testFullLSTM). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn); list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testLSTMForwardPassCudnn TestLSTMForwardPassCudnn.cxx); target_link_libraries(testLSTMForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forwaed-Cudnn COMMAND testLSTMForwardPassCudnn). add_executable(testLSTMBackpropagationCudnn TestLSTMBackpropagationCudnn.cxx); target_link_libraries(testLSTMBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-BackpropagationCudnn COMMAND testLSTMBackpropagationCudnn); # Test crashes on ubuntu2404-cuda-12.6.1. See root-project/root#16790:; set_tests_properties(TMVA-DNN-LSTM-BackpropagationCudnn PROPERTIES DISABLED True). # LSTM - Full Test GPU; add_executable(testFullLSTMCudnn TestFullLSTMCudnn.cxx); target_link_libraries(testFullLSTMCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Full-Cudnn COMMAND testFullLSTMCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # LSTM - Forward CPU; ROOT_EXECUTABLE(testLSTMForwardPassCpu TestLSTMForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forward-Cpu COMMAND testLSTMForwardPassCpu). # LSTM - Backward CPU; ROOT_EXECUTABLE(testLSTMBackpropagationCpu TestLSTMBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Backward-Cpu COMMAND testLSTMBackpropagationCpu). # LSTM - Full Test Reference; ROOT_EXECUTABLE(testFullLSTMCpu TestFullLSTMCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Full-Cpu COMMAND testFullLSTMCpu). endif (BLAS_FOUND AND imt); ,MatchSource.DOCS,tmva/tmva/test/DNN/LSTM/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt:1695,Testability,Test,TestFullLSTMCudnn,1695,ARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Backpropagation COMMAND testLSTMBackpropagation). # LSTM - Full Test Reference; #ROOT_EXECUTABLE(testFullLSTM TestFullLSTM.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-FullLSTM COMMAND testFullLSTM). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn); list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testLSTMForwardPassCudnn TestLSTMForwardPassCudnn.cxx); target_link_libraries(testLSTMForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forwaed-Cudnn COMMAND testLSTMForwardPassCudnn). add_executable(testLSTMBackpropagationCudnn TestLSTMBackpropagationCudnn.cxx); target_link_libraries(testLSTMBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-BackpropagationCudnn COMMAND testLSTMBackpropagationCudnn); # Test crashes on ubuntu2404-cuda-12.6.1. See root-project/root#16790:; set_tests_properties(TMVA-DNN-LSTM-BackpropagationCudnn PROPERTIES DISABLED True). # LSTM - Full Test GPU; add_executable(testFullLSTMCudnn TestFullLSTMCudnn.cxx); target_link_libraries(testFullLSTMCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Full-Cudnn COMMAND testFullLSTMCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # LSTM - Forward CPU; ROOT_EXECUTABLE(testLSTMForwardPassCpu TestLSTMForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forward-Cpu COMMAND testLSTMForwardPassCpu). # LSTM - Backward CPU; ROOT_EXECUTABLE(testLSTMBackpropagationCpu TestLSTMBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Backward-Cpu COMMAND testLSTMBackpropagationCpu). # LSTM - Full Test Reference; ROOT_EXECUTABLE(testFullLSTMCpu TestFullLSTMCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Full-Cpu COMMAND testFullLSTMCpu). endif (BLAS_FOUND AND imt); ,MatchSource.DOCS,tmva/tmva/test/DNN/LSTM/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt:1741,Testability,test,testFullLSTMCudnn,1741,ARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Backpropagation COMMAND testLSTMBackpropagation). # LSTM - Full Test Reference; #ROOT_EXECUTABLE(testFullLSTM TestFullLSTM.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-FullLSTM COMMAND testFullLSTM). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn); list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testLSTMForwardPassCudnn TestLSTMForwardPassCudnn.cxx); target_link_libraries(testLSTMForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forwaed-Cudnn COMMAND testLSTMForwardPassCudnn). add_executable(testLSTMBackpropagationCudnn TestLSTMBackpropagationCudnn.cxx); target_link_libraries(testLSTMBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-BackpropagationCudnn COMMAND testLSTMBackpropagationCudnn); # Test crashes on ubuntu2404-cuda-12.6.1. See root-project/root#16790:; set_tests_properties(TMVA-DNN-LSTM-BackpropagationCudnn PROPERTIES DISABLED True). # LSTM - Full Test GPU; add_executable(testFullLSTMCudnn TestFullLSTMCudnn.cxx); target_link_libraries(testFullLSTMCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Full-Cudnn COMMAND testFullLSTMCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # LSTM - Forward CPU; ROOT_EXECUTABLE(testLSTMForwardPassCpu TestLSTMForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forward-Cpu COMMAND testLSTMForwardPassCpu). # LSTM - Backward CPU; ROOT_EXECUTABLE(testLSTMBackpropagationCpu TestLSTMBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Backward-Cpu COMMAND testLSTMBackpropagationCpu). # LSTM - Full Test Reference; ROOT_EXECUTABLE(testFullLSTMCpu TestFullLSTMCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Full-Cpu COMMAND testFullLSTMCpu). endif (BLAS_FOUND AND imt); ,MatchSource.DOCS,tmva/tmva/test/DNN/LSTM/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt:1843,Testability,test,testFullLSTMCudnn,1843,ARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Backpropagation COMMAND testLSTMBackpropagation). # LSTM - Full Test Reference; #ROOT_EXECUTABLE(testFullLSTM TestFullLSTM.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-FullLSTM COMMAND testFullLSTM). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn); list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testLSTMForwardPassCudnn TestLSTMForwardPassCudnn.cxx); target_link_libraries(testLSTMForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forwaed-Cudnn COMMAND testLSTMForwardPassCudnn). add_executable(testLSTMBackpropagationCudnn TestLSTMBackpropagationCudnn.cxx); target_link_libraries(testLSTMBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-BackpropagationCudnn COMMAND testLSTMBackpropagationCudnn); # Test crashes on ubuntu2404-cuda-12.6.1. See root-project/root#16790:; set_tests_properties(TMVA-DNN-LSTM-BackpropagationCudnn PROPERTIES DISABLED True). # LSTM - Full Test GPU; add_executable(testFullLSTMCudnn TestFullLSTMCudnn.cxx); target_link_libraries(testFullLSTMCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Full-Cudnn COMMAND testFullLSTMCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # LSTM - Forward CPU; ROOT_EXECUTABLE(testLSTMForwardPassCpu TestLSTMForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forward-Cpu COMMAND testLSTMForwardPassCpu). # LSTM - Backward CPU; ROOT_EXECUTABLE(testLSTMBackpropagationCpu TestLSTMBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Backward-Cpu COMMAND testLSTMBackpropagationCpu). # LSTM - Full Test Reference; ROOT_EXECUTABLE(testFullLSTMCpu TestFullLSTMCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Full-Cpu COMMAND testFullLSTMCpu). endif (BLAS_FOUND AND imt); ,MatchSource.DOCS,tmva/tmva/test/DNN/LSTM/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt:1905,Testability,test,tests,1905,ARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Backpropagation COMMAND testLSTMBackpropagation). # LSTM - Full Test Reference; #ROOT_EXECUTABLE(testFullLSTM TestFullLSTM.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-FullLSTM COMMAND testFullLSTM). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn); list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testLSTMForwardPassCudnn TestLSTMForwardPassCudnn.cxx); target_link_libraries(testLSTMForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forwaed-Cudnn COMMAND testLSTMForwardPassCudnn). add_executable(testLSTMBackpropagationCudnn TestLSTMBackpropagationCudnn.cxx); target_link_libraries(testLSTMBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-BackpropagationCudnn COMMAND testLSTMBackpropagationCudnn); # Test crashes on ubuntu2404-cuda-12.6.1. See root-project/root#16790:; set_tests_properties(TMVA-DNN-LSTM-BackpropagationCudnn PROPERTIES DISABLED True). # LSTM - Full Test GPU; add_executable(testFullLSTMCudnn TestFullLSTMCudnn.cxx); target_link_libraries(testFullLSTMCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Full-Cudnn COMMAND testFullLSTMCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # LSTM - Forward CPU; ROOT_EXECUTABLE(testLSTMForwardPassCpu TestLSTMForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forward-Cpu COMMAND testLSTMForwardPassCpu). # LSTM - Backward CPU; ROOT_EXECUTABLE(testLSTMBackpropagationCpu TestLSTMBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Backward-Cpu COMMAND testLSTMBackpropagationCpu). # LSTM - Full Test Reference; ROOT_EXECUTABLE(testFullLSTMCpu TestFullLSTMCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Full-Cpu COMMAND testFullLSTMCpu). endif (BLAS_FOUND AND imt); ,MatchSource.DOCS,tmva/tmva/test/DNN/LSTM/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt:2005,Testability,test,testLSTMForwardPassCpu,2005,ARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Backpropagation COMMAND testLSTMBackpropagation). # LSTM - Full Test Reference; #ROOT_EXECUTABLE(testFullLSTM TestFullLSTM.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-FullLSTM COMMAND testFullLSTM). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn); list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testLSTMForwardPassCudnn TestLSTMForwardPassCudnn.cxx); target_link_libraries(testLSTMForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forwaed-Cudnn COMMAND testLSTMForwardPassCudnn). add_executable(testLSTMBackpropagationCudnn TestLSTMBackpropagationCudnn.cxx); target_link_libraries(testLSTMBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-BackpropagationCudnn COMMAND testLSTMBackpropagationCudnn); # Test crashes on ubuntu2404-cuda-12.6.1. See root-project/root#16790:; set_tests_properties(TMVA-DNN-LSTM-BackpropagationCudnn PROPERTIES DISABLED True). # LSTM - Full Test GPU; add_executable(testFullLSTMCudnn TestFullLSTMCudnn.cxx); target_link_libraries(testFullLSTMCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Full-Cudnn COMMAND testFullLSTMCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # LSTM - Forward CPU; ROOT_EXECUTABLE(testLSTMForwardPassCpu TestLSTMForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forward-Cpu COMMAND testLSTMForwardPassCpu). # LSTM - Backward CPU; ROOT_EXECUTABLE(testLSTMBackpropagationCpu TestLSTMBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Backward-Cpu COMMAND testLSTMBackpropagationCpu). # LSTM - Full Test Reference; ROOT_EXECUTABLE(testFullLSTMCpu TestFullLSTMCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Full-Cpu COMMAND testFullLSTMCpu). endif (BLAS_FOUND AND imt); ,MatchSource.DOCS,tmva/tmva/test/DNN/LSTM/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt:2028,Testability,Test,TestLSTMForwardPassCpu,2028,ARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Backpropagation COMMAND testLSTMBackpropagation). # LSTM - Full Test Reference; #ROOT_EXECUTABLE(testFullLSTM TestFullLSTM.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-FullLSTM COMMAND testFullLSTM). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn); list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testLSTMForwardPassCudnn TestLSTMForwardPassCudnn.cxx); target_link_libraries(testLSTMForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forwaed-Cudnn COMMAND testLSTMForwardPassCudnn). add_executable(testLSTMBackpropagationCudnn TestLSTMBackpropagationCudnn.cxx); target_link_libraries(testLSTMBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-BackpropagationCudnn COMMAND testLSTMBackpropagationCudnn); # Test crashes on ubuntu2404-cuda-12.6.1. See root-project/root#16790:; set_tests_properties(TMVA-DNN-LSTM-BackpropagationCudnn PROPERTIES DISABLED True). # LSTM - Full Test GPU; add_executable(testFullLSTMCudnn TestFullLSTMCudnn.cxx); target_link_libraries(testFullLSTMCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Full-Cudnn COMMAND testFullLSTMCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # LSTM - Forward CPU; ROOT_EXECUTABLE(testLSTMForwardPassCpu TestLSTMForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forward-Cpu COMMAND testLSTMForwardPassCpu). # LSTM - Backward CPU; ROOT_EXECUTABLE(testLSTMBackpropagationCpu TestLSTMBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Backward-Cpu COMMAND testLSTMBackpropagationCpu). # LSTM - Full Test Reference; ROOT_EXECUTABLE(testFullLSTMCpu TestFullLSTMCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Full-Cpu COMMAND testFullLSTMCpu). endif (BLAS_FOUND AND imt); ,MatchSource.DOCS,tmva/tmva/test/DNN/LSTM/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt:2128,Testability,test,testLSTMForwardPassCpu,2128,ARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Backpropagation COMMAND testLSTMBackpropagation). # LSTM - Full Test Reference; #ROOT_EXECUTABLE(testFullLSTM TestFullLSTM.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-FullLSTM COMMAND testFullLSTM). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn); list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testLSTMForwardPassCudnn TestLSTMForwardPassCudnn.cxx); target_link_libraries(testLSTMForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forwaed-Cudnn COMMAND testLSTMForwardPassCudnn). add_executable(testLSTMBackpropagationCudnn TestLSTMBackpropagationCudnn.cxx); target_link_libraries(testLSTMBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-BackpropagationCudnn COMMAND testLSTMBackpropagationCudnn); # Test crashes on ubuntu2404-cuda-12.6.1. See root-project/root#16790:; set_tests_properties(TMVA-DNN-LSTM-BackpropagationCudnn PROPERTIES DISABLED True). # LSTM - Full Test GPU; add_executable(testFullLSTMCudnn TestFullLSTMCudnn.cxx); target_link_libraries(testFullLSTMCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Full-Cudnn COMMAND testFullLSTMCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # LSTM - Forward CPU; ROOT_EXECUTABLE(testLSTMForwardPassCpu TestLSTMForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forward-Cpu COMMAND testLSTMForwardPassCpu). # LSTM - Backward CPU; ROOT_EXECUTABLE(testLSTMBackpropagationCpu TestLSTMBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Backward-Cpu COMMAND testLSTMBackpropagationCpu). # LSTM - Full Test Reference; ROOT_EXECUTABLE(testFullLSTMCpu TestFullLSTMCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Full-Cpu COMMAND testFullLSTMCpu). endif (BLAS_FOUND AND imt); ,MatchSource.DOCS,tmva/tmva/test/DNN/LSTM/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt:2192,Testability,test,testLSTMBackpropagationCpu,2192,ARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Backpropagation COMMAND testLSTMBackpropagation). # LSTM - Full Test Reference; #ROOT_EXECUTABLE(testFullLSTM TestFullLSTM.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-FullLSTM COMMAND testFullLSTM). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn); list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testLSTMForwardPassCudnn TestLSTMForwardPassCudnn.cxx); target_link_libraries(testLSTMForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forwaed-Cudnn COMMAND testLSTMForwardPassCudnn). add_executable(testLSTMBackpropagationCudnn TestLSTMBackpropagationCudnn.cxx); target_link_libraries(testLSTMBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-BackpropagationCudnn COMMAND testLSTMBackpropagationCudnn); # Test crashes on ubuntu2404-cuda-12.6.1. See root-project/root#16790:; set_tests_properties(TMVA-DNN-LSTM-BackpropagationCudnn PROPERTIES DISABLED True). # LSTM - Full Test GPU; add_executable(testFullLSTMCudnn TestFullLSTMCudnn.cxx); target_link_libraries(testFullLSTMCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Full-Cudnn COMMAND testFullLSTMCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # LSTM - Forward CPU; ROOT_EXECUTABLE(testLSTMForwardPassCpu TestLSTMForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forward-Cpu COMMAND testLSTMForwardPassCpu). # LSTM - Backward CPU; ROOT_EXECUTABLE(testLSTMBackpropagationCpu TestLSTMBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Backward-Cpu COMMAND testLSTMBackpropagationCpu). # LSTM - Full Test Reference; ROOT_EXECUTABLE(testFullLSTMCpu TestFullLSTMCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Full-Cpu COMMAND testFullLSTMCpu). endif (BLAS_FOUND AND imt); ,MatchSource.DOCS,tmva/tmva/test/DNN/LSTM/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt:2219,Testability,Test,TestLSTMBackpropagationCpu,2219,ARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Backpropagation COMMAND testLSTMBackpropagation). # LSTM - Full Test Reference; #ROOT_EXECUTABLE(testFullLSTM TestFullLSTM.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-FullLSTM COMMAND testFullLSTM). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn); list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testLSTMForwardPassCudnn TestLSTMForwardPassCudnn.cxx); target_link_libraries(testLSTMForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forwaed-Cudnn COMMAND testLSTMForwardPassCudnn). add_executable(testLSTMBackpropagationCudnn TestLSTMBackpropagationCudnn.cxx); target_link_libraries(testLSTMBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-BackpropagationCudnn COMMAND testLSTMBackpropagationCudnn); # Test crashes on ubuntu2404-cuda-12.6.1. See root-project/root#16790:; set_tests_properties(TMVA-DNN-LSTM-BackpropagationCudnn PROPERTIES DISABLED True). # LSTM - Full Test GPU; add_executable(testFullLSTMCudnn TestFullLSTMCudnn.cxx); target_link_libraries(testFullLSTMCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Full-Cudnn COMMAND testFullLSTMCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # LSTM - Forward CPU; ROOT_EXECUTABLE(testLSTMForwardPassCpu TestLSTMForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forward-Cpu COMMAND testLSTMForwardPassCpu). # LSTM - Backward CPU; ROOT_EXECUTABLE(testLSTMBackpropagationCpu TestLSTMBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Backward-Cpu COMMAND testLSTMBackpropagationCpu). # LSTM - Full Test Reference; ROOT_EXECUTABLE(testFullLSTMCpu TestFullLSTMCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Full-Cpu COMMAND testFullLSTMCpu). endif (BLAS_FOUND AND imt); ,MatchSource.DOCS,tmva/tmva/test/DNN/LSTM/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt:2324,Testability,test,testLSTMBackpropagationCpu,2324,ARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Backpropagation COMMAND testLSTMBackpropagation). # LSTM - Full Test Reference; #ROOT_EXECUTABLE(testFullLSTM TestFullLSTM.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-FullLSTM COMMAND testFullLSTM). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn); list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testLSTMForwardPassCudnn TestLSTMForwardPassCudnn.cxx); target_link_libraries(testLSTMForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forwaed-Cudnn COMMAND testLSTMForwardPassCudnn). add_executable(testLSTMBackpropagationCudnn TestLSTMBackpropagationCudnn.cxx); target_link_libraries(testLSTMBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-BackpropagationCudnn COMMAND testLSTMBackpropagationCudnn); # Test crashes on ubuntu2404-cuda-12.6.1. See root-project/root#16790:; set_tests_properties(TMVA-DNN-LSTM-BackpropagationCudnn PROPERTIES DISABLED True). # LSTM - Full Test GPU; add_executable(testFullLSTMCudnn TestFullLSTMCudnn.cxx); target_link_libraries(testFullLSTMCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Full-Cudnn COMMAND testFullLSTMCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # LSTM - Forward CPU; ROOT_EXECUTABLE(testLSTMForwardPassCpu TestLSTMForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forward-Cpu COMMAND testLSTMForwardPassCpu). # LSTM - Backward CPU; ROOT_EXECUTABLE(testLSTMBackpropagationCpu TestLSTMBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Backward-Cpu COMMAND testLSTMBackpropagationCpu). # LSTM - Full Test Reference; ROOT_EXECUTABLE(testFullLSTMCpu TestFullLSTMCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Full-Cpu COMMAND testFullLSTMCpu). endif (BLAS_FOUND AND imt); ,MatchSource.DOCS,tmva/tmva/test/DNN/LSTM/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt:2367,Testability,Test,Test,2367,ARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Backpropagation COMMAND testLSTMBackpropagation). # LSTM - Full Test Reference; #ROOT_EXECUTABLE(testFullLSTM TestFullLSTM.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-FullLSTM COMMAND testFullLSTM). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn); list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testLSTMForwardPassCudnn TestLSTMForwardPassCudnn.cxx); target_link_libraries(testLSTMForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forwaed-Cudnn COMMAND testLSTMForwardPassCudnn). add_executable(testLSTMBackpropagationCudnn TestLSTMBackpropagationCudnn.cxx); target_link_libraries(testLSTMBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-BackpropagationCudnn COMMAND testLSTMBackpropagationCudnn); # Test crashes on ubuntu2404-cuda-12.6.1. See root-project/root#16790:; set_tests_properties(TMVA-DNN-LSTM-BackpropagationCudnn PROPERTIES DISABLED True). # LSTM - Full Test GPU; add_executable(testFullLSTMCudnn TestFullLSTMCudnn.cxx); target_link_libraries(testFullLSTMCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Full-Cudnn COMMAND testFullLSTMCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # LSTM - Forward CPU; ROOT_EXECUTABLE(testLSTMForwardPassCpu TestLSTMForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forward-Cpu COMMAND testLSTMForwardPassCpu). # LSTM - Backward CPU; ROOT_EXECUTABLE(testLSTMBackpropagationCpu TestLSTMBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Backward-Cpu COMMAND testLSTMBackpropagationCpu). # LSTM - Full Test Reference; ROOT_EXECUTABLE(testFullLSTMCpu TestFullLSTMCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Full-Cpu COMMAND testFullLSTMCpu). endif (BLAS_FOUND AND imt); ,MatchSource.DOCS,tmva/tmva/test/DNN/LSTM/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt:2399,Testability,test,testFullLSTMCpu,2399,ARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Backpropagation COMMAND testLSTMBackpropagation). # LSTM - Full Test Reference; #ROOT_EXECUTABLE(testFullLSTM TestFullLSTM.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-FullLSTM COMMAND testFullLSTM). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn); list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testLSTMForwardPassCudnn TestLSTMForwardPassCudnn.cxx); target_link_libraries(testLSTMForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forwaed-Cudnn COMMAND testLSTMForwardPassCudnn). add_executable(testLSTMBackpropagationCudnn TestLSTMBackpropagationCudnn.cxx); target_link_libraries(testLSTMBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-BackpropagationCudnn COMMAND testLSTMBackpropagationCudnn); # Test crashes on ubuntu2404-cuda-12.6.1. See root-project/root#16790:; set_tests_properties(TMVA-DNN-LSTM-BackpropagationCudnn PROPERTIES DISABLED True). # LSTM - Full Test GPU; add_executable(testFullLSTMCudnn TestFullLSTMCudnn.cxx); target_link_libraries(testFullLSTMCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Full-Cudnn COMMAND testFullLSTMCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # LSTM - Forward CPU; ROOT_EXECUTABLE(testLSTMForwardPassCpu TestLSTMForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forward-Cpu COMMAND testLSTMForwardPassCpu). # LSTM - Backward CPU; ROOT_EXECUTABLE(testLSTMBackpropagationCpu TestLSTMBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Backward-Cpu COMMAND testLSTMBackpropagationCpu). # LSTM - Full Test Reference; ROOT_EXECUTABLE(testFullLSTMCpu TestFullLSTMCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Full-Cpu COMMAND testFullLSTMCpu). endif (BLAS_FOUND AND imt); ,MatchSource.DOCS,tmva/tmva/test/DNN/LSTM/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt:2415,Testability,Test,TestFullLSTMCpu,2415,ARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Backpropagation COMMAND testLSTMBackpropagation). # LSTM - Full Test Reference; #ROOT_EXECUTABLE(testFullLSTM TestFullLSTM.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-FullLSTM COMMAND testFullLSTM). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn); list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testLSTMForwardPassCudnn TestLSTMForwardPassCudnn.cxx); target_link_libraries(testLSTMForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forwaed-Cudnn COMMAND testLSTMForwardPassCudnn). add_executable(testLSTMBackpropagationCudnn TestLSTMBackpropagationCudnn.cxx); target_link_libraries(testLSTMBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-BackpropagationCudnn COMMAND testLSTMBackpropagationCudnn); # Test crashes on ubuntu2404-cuda-12.6.1. See root-project/root#16790:; set_tests_properties(TMVA-DNN-LSTM-BackpropagationCudnn PROPERTIES DISABLED True). # LSTM - Full Test GPU; add_executable(testFullLSTMCudnn TestFullLSTMCudnn.cxx); target_link_libraries(testFullLSTMCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Full-Cudnn COMMAND testFullLSTMCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # LSTM - Forward CPU; ROOT_EXECUTABLE(testLSTMForwardPassCpu TestLSTMForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forward-Cpu COMMAND testLSTMForwardPassCpu). # LSTM - Backward CPU; ROOT_EXECUTABLE(testLSTMBackpropagationCpu TestLSTMBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Backward-Cpu COMMAND testLSTMBackpropagationCpu). # LSTM - Full Test Reference; ROOT_EXECUTABLE(testFullLSTMCpu TestFullLSTMCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Full-Cpu COMMAND testFullLSTMCpu). endif (BLAS_FOUND AND imt); ,MatchSource.DOCS,tmva/tmva/test/DNN/LSTM/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt:2505,Testability,test,testFullLSTMCpu,2505,ARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-Backpropagation COMMAND testLSTMBackpropagation). # LSTM - Full Test Reference; #ROOT_EXECUTABLE(testFullLSTM TestFullLSTM.cxx LIBRARIES ${Libraries}); #ROOT_ADD_TEST(TMVA-DNN-LSTM-FullLSTM COMMAND testFullLSTM). #--- CUDA tests. ---------------------------; if (tmva-gpu AND tmva-cudnn); list(APPEND Libraries CUDA::cuda_driver CUDA::cudart). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES} ). add_executable(testLSTMForwardPassCudnn TestLSTMForwardPassCudnn.cxx); target_link_libraries(testLSTMForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forwaed-Cudnn COMMAND testLSTMForwardPassCudnn). add_executable(testLSTMBackpropagationCudnn TestLSTMBackpropagationCudnn.cxx); target_link_libraries(testLSTMBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-BackpropagationCudnn COMMAND testLSTMBackpropagationCudnn); # Test crashes on ubuntu2404-cuda-12.6.1. See root-project/root#16790:; set_tests_properties(TMVA-DNN-LSTM-BackpropagationCudnn PROPERTIES DISABLED True). # LSTM - Full Test GPU; add_executable(testFullLSTMCudnn TestFullLSTMCudnn.cxx); target_link_libraries(testFullLSTMCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Full-Cudnn COMMAND testFullLSTMCudnn). endif (tmva-gpu AND tmva-cudnn). #--- CPU tests. ----------------------------; if (BLAS_FOUND AND imt). # LSTM - Forward CPU; ROOT_EXECUTABLE(testLSTMForwardPassCpu TestLSTMForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Forward-Cpu COMMAND testLSTMForwardPassCpu). # LSTM - Backward CPU; ROOT_EXECUTABLE(testLSTMBackpropagationCpu TestLSTMBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Backward-Cpu COMMAND testLSTMBackpropagationCpu). # LSTM - Full Test Reference; ROOT_EXECUTABLE(testFullLSTMCpu TestFullLSTMCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-LSTM-Full-Cpu COMMAND testFullLSTMCpu). endif (BLAS_FOUND AND imt); ,MatchSource.DOCS,tmva/tmva/test/DNN/LSTM/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt:321,Testability,test,tests,321,"# Copyright (C) 1995-2019, Rene Brun and Fons Rademakers.; # All rights reserved.; #; # For the licensing terms see $ROOTSYS/LICENSE.; # For the list of contributors see $ROOTSYS/README/CREDITS. ############################################################################; # CMakeLists.txt file for building TMVA/DNN/RNN tests.; # @author Saurav Shekhar; ############################################################################. set(Libraries TMVA). if (tmva-gpu); list(APPEND Libraries CUDA::cuda_driver CUDA::cudart); endif(). #---Reference test. if (Test_Reference). # RNN - BackPropagation Reference; ROOT_EXECUTABLE(testRecurrentBackpropagation TestRecurrentBackpropagation.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Backpropagation COMMAND testRecurrentBackpropagation); #; # RNN - Forward Reference; ROOT_EXECUTABLE(testRecurrentForwardPass TestRecurrentForwardPass.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forward COMMAND testRecurrentForwardPass). # RNN - Full Test Reference; ROOT_EXECUTABLE(testFullRNN TestFullRNN.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-FullRNN COMMAND testFullRNN). endif(). #--- CUDA tests. ---------------------------; if (tmva-gpu). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES}). add_executable(testRecurrentBackpropagationCuda TestRecurrentBackpropagationCuda.cxx); target_link_libraries(testRecurrentBackpropagationCuda ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCuda COMMAND testRecurrentBackpropagationCuda); #mark the native Cuda test failing since RNN are supported only with Cudnn; set_tests_properties(TMVA-DNN-RNN-BackpropagationCuda PROPERTIES WILL_FAIL true). if (tmva-cudnn). add_executable(testRecurrentForwardPassCudnn TestRecurrentForwardPassCudnn.cxx); target_link_libraries(testRecurrentForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forwaed-Cudnn COMMAND testRecurrentForwardPassCudnn). add_executable(testRecurrentBackpropagatio",MatchSource.DOCS,tmva/tmva/test/DNN/RNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt:547,Testability,test,test,547,"# Copyright (C) 1995-2019, Rene Brun and Fons Rademakers.; # All rights reserved.; #; # For the licensing terms see $ROOTSYS/LICENSE.; # For the list of contributors see $ROOTSYS/README/CREDITS. ############################################################################; # CMakeLists.txt file for building TMVA/DNN/RNN tests.; # @author Saurav Shekhar; ############################################################################. set(Libraries TMVA). if (tmva-gpu); list(APPEND Libraries CUDA::cuda_driver CUDA::cudart); endif(). #---Reference test. if (Test_Reference). # RNN - BackPropagation Reference; ROOT_EXECUTABLE(testRecurrentBackpropagation TestRecurrentBackpropagation.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Backpropagation COMMAND testRecurrentBackpropagation); #; # RNN - Forward Reference; ROOT_EXECUTABLE(testRecurrentForwardPass TestRecurrentForwardPass.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forward COMMAND testRecurrentForwardPass). # RNN - Full Test Reference; ROOT_EXECUTABLE(testFullRNN TestFullRNN.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-FullRNN COMMAND testFullRNN). endif(). #--- CUDA tests. ---------------------------; if (tmva-gpu). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES}). add_executable(testRecurrentBackpropagationCuda TestRecurrentBackpropagationCuda.cxx); target_link_libraries(testRecurrentBackpropagationCuda ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCuda COMMAND testRecurrentBackpropagationCuda); #mark the native Cuda test failing since RNN are supported only with Cudnn; set_tests_properties(TMVA-DNN-RNN-BackpropagationCuda PROPERTIES WILL_FAIL true). if (tmva-cudnn). add_executable(testRecurrentForwardPassCudnn TestRecurrentForwardPassCudnn.cxx); target_link_libraries(testRecurrentForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forwaed-Cudnn COMMAND testRecurrentForwardPassCudnn). add_executable(testRecurrentBackpropagatio",MatchSource.DOCS,tmva/tmva/test/DNN/RNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt:625,Testability,test,testRecurrentBackpropagation,625,"# Copyright (C) 1995-2019, Rene Brun and Fons Rademakers.; # All rights reserved.; #; # For the licensing terms see $ROOTSYS/LICENSE.; # For the list of contributors see $ROOTSYS/README/CREDITS. ############################################################################; # CMakeLists.txt file for building TMVA/DNN/RNN tests.; # @author Saurav Shekhar; ############################################################################. set(Libraries TMVA). if (tmva-gpu); list(APPEND Libraries CUDA::cuda_driver CUDA::cudart); endif(). #---Reference test. if (Test_Reference). # RNN - BackPropagation Reference; ROOT_EXECUTABLE(testRecurrentBackpropagation TestRecurrentBackpropagation.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Backpropagation COMMAND testRecurrentBackpropagation); #; # RNN - Forward Reference; ROOT_EXECUTABLE(testRecurrentForwardPass TestRecurrentForwardPass.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forward COMMAND testRecurrentForwardPass). # RNN - Full Test Reference; ROOT_EXECUTABLE(testFullRNN TestFullRNN.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-FullRNN COMMAND testFullRNN). endif(). #--- CUDA tests. ---------------------------; if (tmva-gpu). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES}). add_executable(testRecurrentBackpropagationCuda TestRecurrentBackpropagationCuda.cxx); target_link_libraries(testRecurrentBackpropagationCuda ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCuda COMMAND testRecurrentBackpropagationCuda); #mark the native Cuda test failing since RNN are supported only with Cudnn; set_tests_properties(TMVA-DNN-RNN-BackpropagationCuda PROPERTIES WILL_FAIL true). if (tmva-cudnn). add_executable(testRecurrentForwardPassCudnn TestRecurrentForwardPassCudnn.cxx); target_link_libraries(testRecurrentForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forwaed-Cudnn COMMAND testRecurrentForwardPassCudnn). add_executable(testRecurrentBackpropagatio",MatchSource.DOCS,tmva/tmva/test/DNN/RNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt:654,Testability,Test,TestRecurrentBackpropagation,654,"# Copyright (C) 1995-2019, Rene Brun and Fons Rademakers.; # All rights reserved.; #; # For the licensing terms see $ROOTSYS/LICENSE.; # For the list of contributors see $ROOTSYS/README/CREDITS. ############################################################################; # CMakeLists.txt file for building TMVA/DNN/RNN tests.; # @author Saurav Shekhar; ############################################################################. set(Libraries TMVA). if (tmva-gpu); list(APPEND Libraries CUDA::cuda_driver CUDA::cudart); endif(). #---Reference test. if (Test_Reference). # RNN - BackPropagation Reference; ROOT_EXECUTABLE(testRecurrentBackpropagation TestRecurrentBackpropagation.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Backpropagation COMMAND testRecurrentBackpropagation); #; # RNN - Forward Reference; ROOT_EXECUTABLE(testRecurrentForwardPass TestRecurrentForwardPass.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forward COMMAND testRecurrentForwardPass). # RNN - Full Test Reference; ROOT_EXECUTABLE(testFullRNN TestFullRNN.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-FullRNN COMMAND testFullRNN). endif(). #--- CUDA tests. ---------------------------; if (tmva-gpu). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES}). add_executable(testRecurrentBackpropagationCuda TestRecurrentBackpropagationCuda.cxx); target_link_libraries(testRecurrentBackpropagationCuda ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCuda COMMAND testRecurrentBackpropagationCuda); #mark the native Cuda test failing since RNN are supported only with Cudnn; set_tests_properties(TMVA-DNN-RNN-BackpropagationCuda PROPERTIES WILL_FAIL true). if (tmva-cudnn). add_executable(testRecurrentForwardPassCudnn TestRecurrentForwardPassCudnn.cxx); target_link_libraries(testRecurrentForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forwaed-Cudnn COMMAND testRecurrentForwardPassCudnn). add_executable(testRecurrentBackpropagatio",MatchSource.DOCS,tmva/tmva/test/DNN/RNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt:763,Testability,test,testRecurrentBackpropagation,763,"# Copyright (C) 1995-2019, Rene Brun and Fons Rademakers.; # All rights reserved.; #; # For the licensing terms see $ROOTSYS/LICENSE.; # For the list of contributors see $ROOTSYS/README/CREDITS. ############################################################################; # CMakeLists.txt file for building TMVA/DNN/RNN tests.; # @author Saurav Shekhar; ############################################################################. set(Libraries TMVA). if (tmva-gpu); list(APPEND Libraries CUDA::cuda_driver CUDA::cudart); endif(). #---Reference test. if (Test_Reference). # RNN - BackPropagation Reference; ROOT_EXECUTABLE(testRecurrentBackpropagation TestRecurrentBackpropagation.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Backpropagation COMMAND testRecurrentBackpropagation); #; # RNN - Forward Reference; ROOT_EXECUTABLE(testRecurrentForwardPass TestRecurrentForwardPass.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forward COMMAND testRecurrentForwardPass). # RNN - Full Test Reference; ROOT_EXECUTABLE(testFullRNN TestFullRNN.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-FullRNN COMMAND testFullRNN). endif(). #--- CUDA tests. ---------------------------; if (tmva-gpu). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES}). add_executable(testRecurrentBackpropagationCuda TestRecurrentBackpropagationCuda.cxx); target_link_libraries(testRecurrentBackpropagationCuda ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCuda COMMAND testRecurrentBackpropagationCuda); #mark the native Cuda test failing since RNN are supported only with Cudnn; set_tests_properties(TMVA-DNN-RNN-BackpropagationCuda PROPERTIES WILL_FAIL true). if (tmva-cudnn). add_executable(testRecurrentForwardPassCudnn TestRecurrentForwardPassCudnn.cxx); target_link_libraries(testRecurrentForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forwaed-Cudnn COMMAND testRecurrentForwardPassCudnn). add_executable(testRecurrentBackpropagatio",MatchSource.DOCS,tmva/tmva/test/DNN/RNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt:840,Testability,test,testRecurrentForwardPass,840,"# Copyright (C) 1995-2019, Rene Brun and Fons Rademakers.; # All rights reserved.; #; # For the licensing terms see $ROOTSYS/LICENSE.; # For the list of contributors see $ROOTSYS/README/CREDITS. ############################################################################; # CMakeLists.txt file for building TMVA/DNN/RNN tests.; # @author Saurav Shekhar; ############################################################################. set(Libraries TMVA). if (tmva-gpu); list(APPEND Libraries CUDA::cuda_driver CUDA::cudart); endif(). #---Reference test. if (Test_Reference). # RNN - BackPropagation Reference; ROOT_EXECUTABLE(testRecurrentBackpropagation TestRecurrentBackpropagation.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Backpropagation COMMAND testRecurrentBackpropagation); #; # RNN - Forward Reference; ROOT_EXECUTABLE(testRecurrentForwardPass TestRecurrentForwardPass.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forward COMMAND testRecurrentForwardPass). # RNN - Full Test Reference; ROOT_EXECUTABLE(testFullRNN TestFullRNN.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-FullRNN COMMAND testFullRNN). endif(). #--- CUDA tests. ---------------------------; if (tmva-gpu). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES}). add_executable(testRecurrentBackpropagationCuda TestRecurrentBackpropagationCuda.cxx); target_link_libraries(testRecurrentBackpropagationCuda ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCuda COMMAND testRecurrentBackpropagationCuda); #mark the native Cuda test failing since RNN are supported only with Cudnn; set_tests_properties(TMVA-DNN-RNN-BackpropagationCuda PROPERTIES WILL_FAIL true). if (tmva-cudnn). add_executable(testRecurrentForwardPassCudnn TestRecurrentForwardPassCudnn.cxx); target_link_libraries(testRecurrentForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forwaed-Cudnn COMMAND testRecurrentForwardPassCudnn). add_executable(testRecurrentBackpropagatio",MatchSource.DOCS,tmva/tmva/test/DNN/RNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt:865,Testability,Test,TestRecurrentForwardPass,865,"# Copyright (C) 1995-2019, Rene Brun and Fons Rademakers.; # All rights reserved.; #; # For the licensing terms see $ROOTSYS/LICENSE.; # For the list of contributors see $ROOTSYS/README/CREDITS. ############################################################################; # CMakeLists.txt file for building TMVA/DNN/RNN tests.; # @author Saurav Shekhar; ############################################################################. set(Libraries TMVA). if (tmva-gpu); list(APPEND Libraries CUDA::cuda_driver CUDA::cudart); endif(). #---Reference test. if (Test_Reference). # RNN - BackPropagation Reference; ROOT_EXECUTABLE(testRecurrentBackpropagation TestRecurrentBackpropagation.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Backpropagation COMMAND testRecurrentBackpropagation); #; # RNN - Forward Reference; ROOT_EXECUTABLE(testRecurrentForwardPass TestRecurrentForwardPass.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forward COMMAND testRecurrentForwardPass). # RNN - Full Test Reference; ROOT_EXECUTABLE(testFullRNN TestFullRNN.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-FullRNN COMMAND testFullRNN). endif(). #--- CUDA tests. ---------------------------; if (tmva-gpu). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES}). add_executable(testRecurrentBackpropagationCuda TestRecurrentBackpropagationCuda.cxx); target_link_libraries(testRecurrentBackpropagationCuda ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCuda COMMAND testRecurrentBackpropagationCuda); #mark the native Cuda test failing since RNN are supported only with Cudnn; set_tests_properties(TMVA-DNN-RNN-BackpropagationCuda PROPERTIES WILL_FAIL true). if (tmva-cudnn). add_executable(testRecurrentForwardPassCudnn TestRecurrentForwardPassCudnn.cxx); target_link_libraries(testRecurrentForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forwaed-Cudnn COMMAND testRecurrentForwardPassCudnn). add_executable(testRecurrentBackpropagatio",MatchSource.DOCS,tmva/tmva/test/DNN/RNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt:962,Testability,test,testRecurrentForwardPass,962,"# Copyright (C) 1995-2019, Rene Brun and Fons Rademakers.; # All rights reserved.; #; # For the licensing terms see $ROOTSYS/LICENSE.; # For the list of contributors see $ROOTSYS/README/CREDITS. ############################################################################; # CMakeLists.txt file for building TMVA/DNN/RNN tests.; # @author Saurav Shekhar; ############################################################################. set(Libraries TMVA). if (tmva-gpu); list(APPEND Libraries CUDA::cuda_driver CUDA::cudart); endif(). #---Reference test. if (Test_Reference). # RNN - BackPropagation Reference; ROOT_EXECUTABLE(testRecurrentBackpropagation TestRecurrentBackpropagation.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Backpropagation COMMAND testRecurrentBackpropagation); #; # RNN - Forward Reference; ROOT_EXECUTABLE(testRecurrentForwardPass TestRecurrentForwardPass.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forward COMMAND testRecurrentForwardPass). # RNN - Full Test Reference; ROOT_EXECUTABLE(testFullRNN TestFullRNN.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-FullRNN COMMAND testFullRNN). endif(). #--- CUDA tests. ---------------------------; if (tmva-gpu). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES}). add_executable(testRecurrentBackpropagationCuda TestRecurrentBackpropagationCuda.cxx); target_link_libraries(testRecurrentBackpropagationCuda ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCuda COMMAND testRecurrentBackpropagationCuda); #mark the native Cuda test failing since RNN are supported only with Cudnn; set_tests_properties(TMVA-DNN-RNN-BackpropagationCuda PROPERTIES WILL_FAIL true). if (tmva-cudnn). add_executable(testRecurrentForwardPassCudnn TestRecurrentForwardPassCudnn.cxx); target_link_libraries(testRecurrentForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forwaed-Cudnn COMMAND testRecurrentForwardPassCudnn). add_executable(testRecurrentBackpropagatio",MatchSource.DOCS,tmva/tmva/test/DNN/RNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt:1002,Testability,Test,Test,1002,"19, Rene Brun and Fons Rademakers.; # All rights reserved.; #; # For the licensing terms see $ROOTSYS/LICENSE.; # For the list of contributors see $ROOTSYS/README/CREDITS. ############################################################################; # CMakeLists.txt file for building TMVA/DNN/RNN tests.; # @author Saurav Shekhar; ############################################################################. set(Libraries TMVA). if (tmva-gpu); list(APPEND Libraries CUDA::cuda_driver CUDA::cudart); endif(). #---Reference test. if (Test_Reference). # RNN - BackPropagation Reference; ROOT_EXECUTABLE(testRecurrentBackpropagation TestRecurrentBackpropagation.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Backpropagation COMMAND testRecurrentBackpropagation); #; # RNN - Forward Reference; ROOT_EXECUTABLE(testRecurrentForwardPass TestRecurrentForwardPass.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forward COMMAND testRecurrentForwardPass). # RNN - Full Test Reference; ROOT_EXECUTABLE(testFullRNN TestFullRNN.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-FullRNN COMMAND testFullRNN). endif(). #--- CUDA tests. ---------------------------; if (tmva-gpu). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES}). add_executable(testRecurrentBackpropagationCuda TestRecurrentBackpropagationCuda.cxx); target_link_libraries(testRecurrentBackpropagationCuda ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCuda COMMAND testRecurrentBackpropagationCuda); #mark the native Cuda test failing since RNN are supported only with Cudnn; set_tests_properties(TMVA-DNN-RNN-BackpropagationCuda PROPERTIES WILL_FAIL true). if (tmva-cudnn). add_executable(testRecurrentForwardPassCudnn TestRecurrentForwardPassCudnn.cxx); target_link_libraries(testRecurrentForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forwaed-Cudnn COMMAND testRecurrentForwardPassCudnn). add_executable(testRecurrentBackpropagationCudnn TestRecurrentBa",MatchSource.DOCS,tmva/tmva/test/DNN/RNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt:1034,Testability,test,testFullRNN,1034,"19, Rene Brun and Fons Rademakers.; # All rights reserved.; #; # For the licensing terms see $ROOTSYS/LICENSE.; # For the list of contributors see $ROOTSYS/README/CREDITS. ############################################################################; # CMakeLists.txt file for building TMVA/DNN/RNN tests.; # @author Saurav Shekhar; ############################################################################. set(Libraries TMVA). if (tmva-gpu); list(APPEND Libraries CUDA::cuda_driver CUDA::cudart); endif(). #---Reference test. if (Test_Reference). # RNN - BackPropagation Reference; ROOT_EXECUTABLE(testRecurrentBackpropagation TestRecurrentBackpropagation.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Backpropagation COMMAND testRecurrentBackpropagation); #; # RNN - Forward Reference; ROOT_EXECUTABLE(testRecurrentForwardPass TestRecurrentForwardPass.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forward COMMAND testRecurrentForwardPass). # RNN - Full Test Reference; ROOT_EXECUTABLE(testFullRNN TestFullRNN.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-FullRNN COMMAND testFullRNN). endif(). #--- CUDA tests. ---------------------------; if (tmva-gpu). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES}). add_executable(testRecurrentBackpropagationCuda TestRecurrentBackpropagationCuda.cxx); target_link_libraries(testRecurrentBackpropagationCuda ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCuda COMMAND testRecurrentBackpropagationCuda); #mark the native Cuda test failing since RNN are supported only with Cudnn; set_tests_properties(TMVA-DNN-RNN-BackpropagationCuda PROPERTIES WILL_FAIL true). if (tmva-cudnn). add_executable(testRecurrentForwardPassCudnn TestRecurrentForwardPassCudnn.cxx); target_link_libraries(testRecurrentForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forwaed-Cudnn COMMAND testRecurrentForwardPassCudnn). add_executable(testRecurrentBackpropagationCudnn TestRecurrentBa",MatchSource.DOCS,tmva/tmva/test/DNN/RNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt:1046,Testability,Test,TestFullRNN,1046,"19, Rene Brun and Fons Rademakers.; # All rights reserved.; #; # For the licensing terms see $ROOTSYS/LICENSE.; # For the list of contributors see $ROOTSYS/README/CREDITS. ############################################################################; # CMakeLists.txt file for building TMVA/DNN/RNN tests.; # @author Saurav Shekhar; ############################################################################. set(Libraries TMVA). if (tmva-gpu); list(APPEND Libraries CUDA::cuda_driver CUDA::cudart); endif(). #---Reference test. if (Test_Reference). # RNN - BackPropagation Reference; ROOT_EXECUTABLE(testRecurrentBackpropagation TestRecurrentBackpropagation.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Backpropagation COMMAND testRecurrentBackpropagation); #; # RNN - Forward Reference; ROOT_EXECUTABLE(testRecurrentForwardPass TestRecurrentForwardPass.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forward COMMAND testRecurrentForwardPass). # RNN - Full Test Reference; ROOT_EXECUTABLE(testFullRNN TestFullRNN.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-FullRNN COMMAND testFullRNN). endif(). #--- CUDA tests. ---------------------------; if (tmva-gpu). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES}). add_executable(testRecurrentBackpropagationCuda TestRecurrentBackpropagationCuda.cxx); target_link_libraries(testRecurrentBackpropagationCuda ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCuda COMMAND testRecurrentBackpropagationCuda); #mark the native Cuda test failing since RNN are supported only with Cudnn; set_tests_properties(TMVA-DNN-RNN-BackpropagationCuda PROPERTIES WILL_FAIL true). if (tmva-cudnn). add_executable(testRecurrentForwardPassCudnn TestRecurrentForwardPassCudnn.cxx); target_link_libraries(testRecurrentForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forwaed-Cudnn COMMAND testRecurrentForwardPassCudnn). add_executable(testRecurrentBackpropagationCudnn TestRecurrentBa",MatchSource.DOCS,tmva/tmva/test/DNN/RNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt:1130,Testability,test,testFullRNN,1130,nsing terms see $ROOTSYS/LICENSE.; # For the list of contributors see $ROOTSYS/README/CREDITS. ############################################################################; # CMakeLists.txt file for building TMVA/DNN/RNN tests.; # @author Saurav Shekhar; ############################################################################. set(Libraries TMVA). if (tmva-gpu); list(APPEND Libraries CUDA::cuda_driver CUDA::cudart); endif(). #---Reference test. if (Test_Reference). # RNN - BackPropagation Reference; ROOT_EXECUTABLE(testRecurrentBackpropagation TestRecurrentBackpropagation.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Backpropagation COMMAND testRecurrentBackpropagation); #; # RNN - Forward Reference; ROOT_EXECUTABLE(testRecurrentForwardPass TestRecurrentForwardPass.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forward COMMAND testRecurrentForwardPass). # RNN - Full Test Reference; ROOT_EXECUTABLE(testFullRNN TestFullRNN.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-FullRNN COMMAND testFullRNN). endif(). #--- CUDA tests. ---------------------------; if (tmva-gpu). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES}). add_executable(testRecurrentBackpropagationCuda TestRecurrentBackpropagationCuda.cxx); target_link_libraries(testRecurrentBackpropagationCuda ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCuda COMMAND testRecurrentBackpropagationCuda); #mark the native Cuda test failing since RNN are supported only with Cudnn; set_tests_properties(TMVA-DNN-RNN-BackpropagationCuda PROPERTIES WILL_FAIL true). if (tmva-cudnn). add_executable(testRecurrentForwardPassCudnn TestRecurrentForwardPassCudnn.cxx); target_link_libraries(testRecurrentForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forwaed-Cudnn COMMAND testRecurrentForwardPassCudnn). add_executable(testRecurrentBackpropagationCudnn TestRecurrentBackpropagationCudnn.cxx); target_link_libraries(testRecurrentBackpropagationCud,MatchSource.DOCS,tmva/tmva/test/DNN/RNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt:1163,Testability,test,tests,1163,utors see $ROOTSYS/README/CREDITS. ############################################################################; # CMakeLists.txt file for building TMVA/DNN/RNN tests.; # @author Saurav Shekhar; ############################################################################. set(Libraries TMVA). if (tmva-gpu); list(APPEND Libraries CUDA::cuda_driver CUDA::cudart); endif(). #---Reference test. if (Test_Reference). # RNN - BackPropagation Reference; ROOT_EXECUTABLE(testRecurrentBackpropagation TestRecurrentBackpropagation.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Backpropagation COMMAND testRecurrentBackpropagation); #; # RNN - Forward Reference; ROOT_EXECUTABLE(testRecurrentForwardPass TestRecurrentForwardPass.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forward COMMAND testRecurrentForwardPass). # RNN - Full Test Reference; ROOT_EXECUTABLE(testFullRNN TestFullRNN.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-FullRNN COMMAND testFullRNN). endif(). #--- CUDA tests. ---------------------------; if (tmva-gpu). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES}). add_executable(testRecurrentBackpropagationCuda TestRecurrentBackpropagationCuda.cxx); target_link_libraries(testRecurrentBackpropagationCuda ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCuda COMMAND testRecurrentBackpropagationCuda); #mark the native Cuda test failing since RNN are supported only with Cudnn; set_tests_properties(TMVA-DNN-RNN-BackpropagationCuda PROPERTIES WILL_FAIL true). if (tmva-cudnn). add_executable(testRecurrentForwardPassCudnn TestRecurrentForwardPassCudnn.cxx); target_link_libraries(testRecurrentForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forwaed-Cudnn COMMAND testRecurrentForwardPassCudnn). add_executable(testRecurrentBackpropagationCudnn TestRecurrentBackpropagationCudnn.cxx); target_link_libraries(testRecurrentBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-D,MatchSource.DOCS,tmva/tmva/test/DNN/RNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt:1279,Testability,test,testRecurrentBackpropagationCuda,1279,ing TMVA/DNN/RNN tests.; # @author Saurav Shekhar; ############################################################################. set(Libraries TMVA). if (tmva-gpu); list(APPEND Libraries CUDA::cuda_driver CUDA::cudart); endif(). #---Reference test. if (Test_Reference). # RNN - BackPropagation Reference; ROOT_EXECUTABLE(testRecurrentBackpropagation TestRecurrentBackpropagation.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Backpropagation COMMAND testRecurrentBackpropagation); #; # RNN - Forward Reference; ROOT_EXECUTABLE(testRecurrentForwardPass TestRecurrentForwardPass.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forward COMMAND testRecurrentForwardPass). # RNN - Full Test Reference; ROOT_EXECUTABLE(testFullRNN TestFullRNN.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-FullRNN COMMAND testFullRNN). endif(). #--- CUDA tests. ---------------------------; if (tmva-gpu). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES}). add_executable(testRecurrentBackpropagationCuda TestRecurrentBackpropagationCuda.cxx); target_link_libraries(testRecurrentBackpropagationCuda ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCuda COMMAND testRecurrentBackpropagationCuda); #mark the native Cuda test failing since RNN are supported only with Cudnn; set_tests_properties(TMVA-DNN-RNN-BackpropagationCuda PROPERTIES WILL_FAIL true). if (tmva-cudnn). add_executable(testRecurrentForwardPassCudnn TestRecurrentForwardPassCudnn.cxx); target_link_libraries(testRecurrentForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forwaed-Cudnn COMMAND testRecurrentForwardPassCudnn). add_executable(testRecurrentBackpropagationCudnn TestRecurrentBackpropagationCudnn.cxx); target_link_libraries(testRecurrentBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCudnn COMMAND testRecurrentBackpropagationCudnn). # Full Test GPU; add_executable(testFullRNNCudnn TestFullRNNCudnn.cxx);,MatchSource.DOCS,tmva/tmva/test/DNN/RNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt:1312,Testability,Test,TestRecurrentBackpropagationCuda,1312,ing TMVA/DNN/RNN tests.; # @author Saurav Shekhar; ############################################################################. set(Libraries TMVA). if (tmva-gpu); list(APPEND Libraries CUDA::cuda_driver CUDA::cudart); endif(). #---Reference test. if (Test_Reference). # RNN - BackPropagation Reference; ROOT_EXECUTABLE(testRecurrentBackpropagation TestRecurrentBackpropagation.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Backpropagation COMMAND testRecurrentBackpropagation); #; # RNN - Forward Reference; ROOT_EXECUTABLE(testRecurrentForwardPass TestRecurrentForwardPass.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forward COMMAND testRecurrentForwardPass). # RNN - Full Test Reference; ROOT_EXECUTABLE(testFullRNN TestFullRNN.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-FullRNN COMMAND testFullRNN). endif(). #--- CUDA tests. ---------------------------; if (tmva-gpu). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES}). add_executable(testRecurrentBackpropagationCuda TestRecurrentBackpropagationCuda.cxx); target_link_libraries(testRecurrentBackpropagationCuda ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCuda COMMAND testRecurrentBackpropagationCuda); #mark the native Cuda test failing since RNN are supported only with Cudnn; set_tests_properties(TMVA-DNN-RNN-BackpropagationCuda PROPERTIES WILL_FAIL true). if (tmva-cudnn). add_executable(testRecurrentForwardPassCudnn TestRecurrentForwardPassCudnn.cxx); target_link_libraries(testRecurrentForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forwaed-Cudnn COMMAND testRecurrentForwardPassCudnn). add_executable(testRecurrentBackpropagationCudnn TestRecurrentBackpropagationCudnn.cxx); target_link_libraries(testRecurrentBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCudnn COMMAND testRecurrentBackpropagationCudnn). # Full Test GPU; add_executable(testFullRNNCudnn TestFullRNNCudnn.cxx);,MatchSource.DOCS,tmva/tmva/test/DNN/RNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt:1373,Testability,test,testRecurrentBackpropagationCuda,1373,dart); endif(). #---Reference test. if (Test_Reference). # RNN - BackPropagation Reference; ROOT_EXECUTABLE(testRecurrentBackpropagation TestRecurrentBackpropagation.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Backpropagation COMMAND testRecurrentBackpropagation); #; # RNN - Forward Reference; ROOT_EXECUTABLE(testRecurrentForwardPass TestRecurrentForwardPass.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forward COMMAND testRecurrentForwardPass). # RNN - Full Test Reference; ROOT_EXECUTABLE(testFullRNN TestFullRNN.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-FullRNN COMMAND testFullRNN). endif(). #--- CUDA tests. ---------------------------; if (tmva-gpu). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES}). add_executable(testRecurrentBackpropagationCuda TestRecurrentBackpropagationCuda.cxx); target_link_libraries(testRecurrentBackpropagationCuda ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCuda COMMAND testRecurrentBackpropagationCuda); #mark the native Cuda test failing since RNN are supported only with Cudnn; set_tests_properties(TMVA-DNN-RNN-BackpropagationCuda PROPERTIES WILL_FAIL true). if (tmva-cudnn). add_executable(testRecurrentForwardPassCudnn TestRecurrentForwardPassCudnn.cxx); target_link_libraries(testRecurrentForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forwaed-Cudnn COMMAND testRecurrentForwardPassCudnn). add_executable(testRecurrentBackpropagationCudnn TestRecurrentBackpropagationCudnn.cxx); target_link_libraries(testRecurrentBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCudnn COMMAND testRecurrentBackpropagationCudnn). # Full Test GPU; add_executable(testFullRNNCudnn TestFullRNNCudnn.cxx); target_link_libraries(testFullRNNCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Full-Cudnn COMMAND testFullRNNCudnn). endif(). endif(). #--- CPU tests. ----------------------------; if ((BLA,MatchSource.DOCS,tmva/tmva/test/DNN/RNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt:1498,Testability,test,testRecurrentBackpropagationCuda,1498,dart); endif(). #---Reference test. if (Test_Reference). # RNN - BackPropagation Reference; ROOT_EXECUTABLE(testRecurrentBackpropagation TestRecurrentBackpropagation.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Backpropagation COMMAND testRecurrentBackpropagation); #; # RNN - Forward Reference; ROOT_EXECUTABLE(testRecurrentForwardPass TestRecurrentForwardPass.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forward COMMAND testRecurrentForwardPass). # RNN - Full Test Reference; ROOT_EXECUTABLE(testFullRNN TestFullRNN.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-FullRNN COMMAND testFullRNN). endif(). #--- CUDA tests. ---------------------------; if (tmva-gpu). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES}). add_executable(testRecurrentBackpropagationCuda TestRecurrentBackpropagationCuda.cxx); target_link_libraries(testRecurrentBackpropagationCuda ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCuda COMMAND testRecurrentBackpropagationCuda); #mark the native Cuda test failing since RNN are supported only with Cudnn; set_tests_properties(TMVA-DNN-RNN-BackpropagationCuda PROPERTIES WILL_FAIL true). if (tmva-cudnn). add_executable(testRecurrentForwardPassCudnn TestRecurrentForwardPassCudnn.cxx); target_link_libraries(testRecurrentForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forwaed-Cudnn COMMAND testRecurrentForwardPassCudnn). add_executable(testRecurrentBackpropagationCudnn TestRecurrentBackpropagationCudnn.cxx); target_link_libraries(testRecurrentBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCudnn COMMAND testRecurrentBackpropagationCudnn). # Full Test GPU; add_executable(testFullRNNCudnn TestFullRNNCudnn.cxx); target_link_libraries(testFullRNNCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Full-Cudnn COMMAND testFullRNNCudnn). endif(). endif(). #--- CPU tests. ----------------------------; if ((BLA,MatchSource.DOCS,tmva/tmva/test/DNN/RNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt:1555,Testability,test,test,1555,dart); endif(). #---Reference test. if (Test_Reference). # RNN - BackPropagation Reference; ROOT_EXECUTABLE(testRecurrentBackpropagation TestRecurrentBackpropagation.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Backpropagation COMMAND testRecurrentBackpropagation); #; # RNN - Forward Reference; ROOT_EXECUTABLE(testRecurrentForwardPass TestRecurrentForwardPass.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forward COMMAND testRecurrentForwardPass). # RNN - Full Test Reference; ROOT_EXECUTABLE(testFullRNN TestFullRNN.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-FullRNN COMMAND testFullRNN). endif(). #--- CUDA tests. ---------------------------; if (tmva-gpu). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES}). add_executable(testRecurrentBackpropagationCuda TestRecurrentBackpropagationCuda.cxx); target_link_libraries(testRecurrentBackpropagationCuda ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCuda COMMAND testRecurrentBackpropagationCuda); #mark the native Cuda test failing since RNN are supported only with Cudnn; set_tests_properties(TMVA-DNN-RNN-BackpropagationCuda PROPERTIES WILL_FAIL true). if (tmva-cudnn). add_executable(testRecurrentForwardPassCudnn TestRecurrentForwardPassCudnn.cxx); target_link_libraries(testRecurrentForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forwaed-Cudnn COMMAND testRecurrentForwardPassCudnn). add_executable(testRecurrentBackpropagationCudnn TestRecurrentBackpropagationCudnn.cxx); target_link_libraries(testRecurrentBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCudnn COMMAND testRecurrentBackpropagationCudnn). # Full Test GPU; add_executable(testFullRNNCudnn TestFullRNNCudnn.cxx); target_link_libraries(testFullRNNCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Full-Cudnn COMMAND testFullRNNCudnn). endif(). endif(). #--- CPU tests. ----------------------------; if ((BLA,MatchSource.DOCS,tmva/tmva/test/DNN/RNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt:1723,Testability,test,testRecurrentForwardPassCudnn,1723,opagation COMMAND testRecurrentBackpropagation); #; # RNN - Forward Reference; ROOT_EXECUTABLE(testRecurrentForwardPass TestRecurrentForwardPass.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forward COMMAND testRecurrentForwardPass). # RNN - Full Test Reference; ROOT_EXECUTABLE(testFullRNN TestFullRNN.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-FullRNN COMMAND testFullRNN). endif(). #--- CUDA tests. ---------------------------; if (tmva-gpu). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES}). add_executable(testRecurrentBackpropagationCuda TestRecurrentBackpropagationCuda.cxx); target_link_libraries(testRecurrentBackpropagationCuda ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCuda COMMAND testRecurrentBackpropagationCuda); #mark the native Cuda test failing since RNN are supported only with Cudnn; set_tests_properties(TMVA-DNN-RNN-BackpropagationCuda PROPERTIES WILL_FAIL true). if (tmva-cudnn). add_executable(testRecurrentForwardPassCudnn TestRecurrentForwardPassCudnn.cxx); target_link_libraries(testRecurrentForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forwaed-Cudnn COMMAND testRecurrentForwardPassCudnn). add_executable(testRecurrentBackpropagationCudnn TestRecurrentBackpropagationCudnn.cxx); target_link_libraries(testRecurrentBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCudnn COMMAND testRecurrentBackpropagationCudnn). # Full Test GPU; add_executable(testFullRNNCudnn TestFullRNNCudnn.cxx); target_link_libraries(testFullRNNCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Full-Cudnn COMMAND testFullRNNCudnn). endif(). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). # DNN - Forward CPU; ROOT_EXECUTABLE(testRecurrentForwardPassCpu TestRecurrentForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forward-Cpu COMMAND testRecurrentF,MatchSource.DOCS,tmva/tmva/test/DNN/RNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt:1753,Testability,Test,TestRecurrentForwardPassCudnn,1753,opagation COMMAND testRecurrentBackpropagation); #; # RNN - Forward Reference; ROOT_EXECUTABLE(testRecurrentForwardPass TestRecurrentForwardPass.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forward COMMAND testRecurrentForwardPass). # RNN - Full Test Reference; ROOT_EXECUTABLE(testFullRNN TestFullRNN.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-FullRNN COMMAND testFullRNN). endif(). #--- CUDA tests. ---------------------------; if (tmva-gpu). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES}). add_executable(testRecurrentBackpropagationCuda TestRecurrentBackpropagationCuda.cxx); target_link_libraries(testRecurrentBackpropagationCuda ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCuda COMMAND testRecurrentBackpropagationCuda); #mark the native Cuda test failing since RNN are supported only with Cudnn; set_tests_properties(TMVA-DNN-RNN-BackpropagationCuda PROPERTIES WILL_FAIL true). if (tmva-cudnn). add_executable(testRecurrentForwardPassCudnn TestRecurrentForwardPassCudnn.cxx); target_link_libraries(testRecurrentForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forwaed-Cudnn COMMAND testRecurrentForwardPassCudnn). add_executable(testRecurrentBackpropagationCudnn TestRecurrentBackpropagationCudnn.cxx); target_link_libraries(testRecurrentBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCudnn COMMAND testRecurrentBackpropagationCudnn). # Full Test GPU; add_executable(testFullRNNCudnn TestFullRNNCudnn.cxx); target_link_libraries(testFullRNNCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Full-Cudnn COMMAND testFullRNNCudnn). endif(). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). # DNN - Forward CPU; ROOT_EXECUTABLE(testRecurrentForwardPassCpu TestRecurrentForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forward-Cpu COMMAND testRecurrentF,MatchSource.DOCS,tmva/tmva/test/DNN/RNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt:1811,Testability,test,testRecurrentForwardPassCudnn,1811,ecurrentForwardPass.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forward COMMAND testRecurrentForwardPass). # RNN - Full Test Reference; ROOT_EXECUTABLE(testFullRNN TestFullRNN.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-FullRNN COMMAND testFullRNN). endif(). #--- CUDA tests. ---------------------------; if (tmva-gpu). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES}). add_executable(testRecurrentBackpropagationCuda TestRecurrentBackpropagationCuda.cxx); target_link_libraries(testRecurrentBackpropagationCuda ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCuda COMMAND testRecurrentBackpropagationCuda); #mark the native Cuda test failing since RNN are supported only with Cudnn; set_tests_properties(TMVA-DNN-RNN-BackpropagationCuda PROPERTIES WILL_FAIL true). if (tmva-cudnn). add_executable(testRecurrentForwardPassCudnn TestRecurrentForwardPassCudnn.cxx); target_link_libraries(testRecurrentForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forwaed-Cudnn COMMAND testRecurrentForwardPassCudnn). add_executable(testRecurrentBackpropagationCudnn TestRecurrentBackpropagationCudnn.cxx); target_link_libraries(testRecurrentBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCudnn COMMAND testRecurrentBackpropagationCudnn). # Full Test GPU; add_executable(testFullRNNCudnn TestFullRNNCudnn.cxx); target_link_libraries(testFullRNNCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Full-Cudnn COMMAND testFullRNNCudnn). endif(). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). # DNN - Forward CPU; ROOT_EXECUTABLE(testRecurrentForwardPassCpu TestRecurrentForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forward-Cpu COMMAND testRecurrentForwardPassCpu). ROOT_EXECUTABLE(testRecurrentBackpropagationCpu TestRecurrentBackpropagationCpu.cxx LIBRARIES ${Libraries}); R,MatchSource.DOCS,tmva/tmva/test/DNN/RNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt:1927,Testability,test,testRecurrentForwardPassCudnn,1927,ecurrentForwardPass.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forward COMMAND testRecurrentForwardPass). # RNN - Full Test Reference; ROOT_EXECUTABLE(testFullRNN TestFullRNN.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-FullRNN COMMAND testFullRNN). endif(). #--- CUDA tests. ---------------------------; if (tmva-gpu). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES}). add_executable(testRecurrentBackpropagationCuda TestRecurrentBackpropagationCuda.cxx); target_link_libraries(testRecurrentBackpropagationCuda ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCuda COMMAND testRecurrentBackpropagationCuda); #mark the native Cuda test failing since RNN are supported only with Cudnn; set_tests_properties(TMVA-DNN-RNN-BackpropagationCuda PROPERTIES WILL_FAIL true). if (tmva-cudnn). add_executable(testRecurrentForwardPassCudnn TestRecurrentForwardPassCudnn.cxx); target_link_libraries(testRecurrentForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forwaed-Cudnn COMMAND testRecurrentForwardPassCudnn). add_executable(testRecurrentBackpropagationCudnn TestRecurrentBackpropagationCudnn.cxx); target_link_libraries(testRecurrentBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCudnn COMMAND testRecurrentBackpropagationCudnn). # Full Test GPU; add_executable(testFullRNNCudnn TestFullRNNCudnn.cxx); target_link_libraries(testFullRNNCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Full-Cudnn COMMAND testFullRNNCudnn). endif(). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). # DNN - Forward CPU; ROOT_EXECUTABLE(testRecurrentForwardPassCpu TestRecurrentForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forward-Cpu COMMAND testRecurrentForwardPassCpu). ROOT_EXECUTABLE(testRecurrentBackpropagationCpu TestRecurrentBackpropagationCpu.cxx LIBRARIES ${Libraries}); R,MatchSource.DOCS,tmva/tmva/test/DNN/RNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt:1974,Testability,test,testRecurrentBackpropagationCudnn,1974,l Test Reference; ROOT_EXECUTABLE(testFullRNN TestFullRNN.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-FullRNN COMMAND testFullRNN). endif(). #--- CUDA tests. ---------------------------; if (tmva-gpu). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES}). add_executable(testRecurrentBackpropagationCuda TestRecurrentBackpropagationCuda.cxx); target_link_libraries(testRecurrentBackpropagationCuda ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCuda COMMAND testRecurrentBackpropagationCuda); #mark the native Cuda test failing since RNN are supported only with Cudnn; set_tests_properties(TMVA-DNN-RNN-BackpropagationCuda PROPERTIES WILL_FAIL true). if (tmva-cudnn). add_executable(testRecurrentForwardPassCudnn TestRecurrentForwardPassCudnn.cxx); target_link_libraries(testRecurrentForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forwaed-Cudnn COMMAND testRecurrentForwardPassCudnn). add_executable(testRecurrentBackpropagationCudnn TestRecurrentBackpropagationCudnn.cxx); target_link_libraries(testRecurrentBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCudnn COMMAND testRecurrentBackpropagationCudnn). # Full Test GPU; add_executable(testFullRNNCudnn TestFullRNNCudnn.cxx); target_link_libraries(testFullRNNCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Full-Cudnn COMMAND testFullRNNCudnn). endif(). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). # DNN - Forward CPU; ROOT_EXECUTABLE(testRecurrentForwardPassCpu TestRecurrentForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forward-Cpu COMMAND testRecurrentForwardPassCpu). ROOT_EXECUTABLE(testRecurrentBackpropagationCpu TestRecurrentBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Backpropagation-Cpu COMMAND testRecurrentBackpropagationCpu). # RNN - Full Test Reference; ROOT_EXECUTA,MatchSource.DOCS,tmva/tmva/test/DNN/RNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt:2008,Testability,Test,TestRecurrentBackpropagationCudnn,2008,l Test Reference; ROOT_EXECUTABLE(testFullRNN TestFullRNN.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-FullRNN COMMAND testFullRNN). endif(). #--- CUDA tests. ---------------------------; if (tmva-gpu). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES}). add_executable(testRecurrentBackpropagationCuda TestRecurrentBackpropagationCuda.cxx); target_link_libraries(testRecurrentBackpropagationCuda ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCuda COMMAND testRecurrentBackpropagationCuda); #mark the native Cuda test failing since RNN are supported only with Cudnn; set_tests_properties(TMVA-DNN-RNN-BackpropagationCuda PROPERTIES WILL_FAIL true). if (tmva-cudnn). add_executable(testRecurrentForwardPassCudnn TestRecurrentForwardPassCudnn.cxx); target_link_libraries(testRecurrentForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forwaed-Cudnn COMMAND testRecurrentForwardPassCudnn). add_executable(testRecurrentBackpropagationCudnn TestRecurrentBackpropagationCudnn.cxx); target_link_libraries(testRecurrentBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCudnn COMMAND testRecurrentBackpropagationCudnn). # Full Test GPU; add_executable(testFullRNNCudnn TestFullRNNCudnn.cxx); target_link_libraries(testFullRNNCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Full-Cudnn COMMAND testFullRNNCudnn). endif(). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). # DNN - Forward CPU; ROOT_EXECUTABLE(testRecurrentForwardPassCpu TestRecurrentForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forward-Cpu COMMAND testRecurrentForwardPassCpu). ROOT_EXECUTABLE(testRecurrentBackpropagationCpu TestRecurrentBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Backpropagation-Cpu COMMAND testRecurrentBackpropagationCpu). # RNN - Full Test Reference; ROOT_EXECUTA,MatchSource.DOCS,tmva/tmva/test/DNN/RNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt:2070,Testability,test,testRecurrentBackpropagationCudnn,2070,FullRNN). endif(). #--- CUDA tests. ---------------------------; if (tmva-gpu). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES}). add_executable(testRecurrentBackpropagationCuda TestRecurrentBackpropagationCuda.cxx); target_link_libraries(testRecurrentBackpropagationCuda ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCuda COMMAND testRecurrentBackpropagationCuda); #mark the native Cuda test failing since RNN are supported only with Cudnn; set_tests_properties(TMVA-DNN-RNN-BackpropagationCuda PROPERTIES WILL_FAIL true). if (tmva-cudnn). add_executable(testRecurrentForwardPassCudnn TestRecurrentForwardPassCudnn.cxx); target_link_libraries(testRecurrentForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forwaed-Cudnn COMMAND testRecurrentForwardPassCudnn). add_executable(testRecurrentBackpropagationCudnn TestRecurrentBackpropagationCudnn.cxx); target_link_libraries(testRecurrentBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCudnn COMMAND testRecurrentBackpropagationCudnn). # Full Test GPU; add_executable(testFullRNNCudnn TestFullRNNCudnn.cxx); target_link_libraries(testFullRNNCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Full-Cudnn COMMAND testFullRNNCudnn). endif(). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). # DNN - Forward CPU; ROOT_EXECUTABLE(testRecurrentForwardPassCpu TestRecurrentForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forward-Cpu COMMAND testRecurrentForwardPassCpu). ROOT_EXECUTABLE(testRecurrentBackpropagationCpu TestRecurrentBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Backpropagation-Cpu COMMAND testRecurrentBackpropagationCpu). # RNN - Full Test Reference; ROOT_EXECUTABLE(testFullRNNCpu TestFullRNNCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Full-Cpu COMMAND testFullRNNCpu). endif (); ,MatchSource.DOCS,tmva/tmva/test/DNN/RNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt:2197,Testability,test,testRecurrentBackpropagationCudnn,2197,FullRNN). endif(). #--- CUDA tests. ---------------------------; if (tmva-gpu). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES}). add_executable(testRecurrentBackpropagationCuda TestRecurrentBackpropagationCuda.cxx); target_link_libraries(testRecurrentBackpropagationCuda ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCuda COMMAND testRecurrentBackpropagationCuda); #mark the native Cuda test failing since RNN are supported only with Cudnn; set_tests_properties(TMVA-DNN-RNN-BackpropagationCuda PROPERTIES WILL_FAIL true). if (tmva-cudnn). add_executable(testRecurrentForwardPassCudnn TestRecurrentForwardPassCudnn.cxx); target_link_libraries(testRecurrentForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forwaed-Cudnn COMMAND testRecurrentForwardPassCudnn). add_executable(testRecurrentBackpropagationCudnn TestRecurrentBackpropagationCudnn.cxx); target_link_libraries(testRecurrentBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCudnn COMMAND testRecurrentBackpropagationCudnn). # Full Test GPU; add_executable(testFullRNNCudnn TestFullRNNCudnn.cxx); target_link_libraries(testFullRNNCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Full-Cudnn COMMAND testFullRNNCudnn). endif(). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). # DNN - Forward CPU; ROOT_EXECUTABLE(testRecurrentForwardPassCpu TestRecurrentForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forward-Cpu COMMAND testRecurrentForwardPassCpu). ROOT_EXECUTABLE(testRecurrentBackpropagationCpu TestRecurrentBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Backpropagation-Cpu COMMAND testRecurrentBackpropagationCpu). # RNN - Full Test Reference; ROOT_EXECUTABLE(testFullRNNCpu TestFullRNNCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Full-Cpu COMMAND testFullRNNCpu). endif (); ,MatchSource.DOCS,tmva/tmva/test/DNN/RNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt:2240,Testability,Test,Test,2240,FullRNN). endif(). #--- CUDA tests. ---------------------------; if (tmva-gpu). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES}). add_executable(testRecurrentBackpropagationCuda TestRecurrentBackpropagationCuda.cxx); target_link_libraries(testRecurrentBackpropagationCuda ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCuda COMMAND testRecurrentBackpropagationCuda); #mark the native Cuda test failing since RNN are supported only with Cudnn; set_tests_properties(TMVA-DNN-RNN-BackpropagationCuda PROPERTIES WILL_FAIL true). if (tmva-cudnn). add_executable(testRecurrentForwardPassCudnn TestRecurrentForwardPassCudnn.cxx); target_link_libraries(testRecurrentForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forwaed-Cudnn COMMAND testRecurrentForwardPassCudnn). add_executable(testRecurrentBackpropagationCudnn TestRecurrentBackpropagationCudnn.cxx); target_link_libraries(testRecurrentBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCudnn COMMAND testRecurrentBackpropagationCudnn). # Full Test GPU; add_executable(testFullRNNCudnn TestFullRNNCudnn.cxx); target_link_libraries(testFullRNNCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Full-Cudnn COMMAND testFullRNNCudnn). endif(). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). # DNN - Forward CPU; ROOT_EXECUTABLE(testRecurrentForwardPassCpu TestRecurrentForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forward-Cpu COMMAND testRecurrentForwardPassCpu). ROOT_EXECUTABLE(testRecurrentBackpropagationCpu TestRecurrentBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Backpropagation-Cpu COMMAND testRecurrentBackpropagationCpu). # RNN - Full Test Reference; ROOT_EXECUTABLE(testFullRNNCpu TestFullRNNCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Full-Cpu COMMAND testFullRNNCpu). endif (); ,MatchSource.DOCS,tmva/tmva/test/DNN/RNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt:2265,Testability,test,testFullRNNCudnn,2265,FullRNN). endif(). #--- CUDA tests. ---------------------------; if (tmva-gpu). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES}). add_executable(testRecurrentBackpropagationCuda TestRecurrentBackpropagationCuda.cxx); target_link_libraries(testRecurrentBackpropagationCuda ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCuda COMMAND testRecurrentBackpropagationCuda); #mark the native Cuda test failing since RNN are supported only with Cudnn; set_tests_properties(TMVA-DNN-RNN-BackpropagationCuda PROPERTIES WILL_FAIL true). if (tmva-cudnn). add_executable(testRecurrentForwardPassCudnn TestRecurrentForwardPassCudnn.cxx); target_link_libraries(testRecurrentForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forwaed-Cudnn COMMAND testRecurrentForwardPassCudnn). add_executable(testRecurrentBackpropagationCudnn TestRecurrentBackpropagationCudnn.cxx); target_link_libraries(testRecurrentBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCudnn COMMAND testRecurrentBackpropagationCudnn). # Full Test GPU; add_executable(testFullRNNCudnn TestFullRNNCudnn.cxx); target_link_libraries(testFullRNNCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Full-Cudnn COMMAND testFullRNNCudnn). endif(). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). # DNN - Forward CPU; ROOT_EXECUTABLE(testRecurrentForwardPassCpu TestRecurrentForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forward-Cpu COMMAND testRecurrentForwardPassCpu). ROOT_EXECUTABLE(testRecurrentBackpropagationCpu TestRecurrentBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Backpropagation-Cpu COMMAND testRecurrentBackpropagationCpu). # RNN - Full Test Reference; ROOT_EXECUTABLE(testFullRNNCpu TestFullRNNCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Full-Cpu COMMAND testFullRNNCpu). endif (); ,MatchSource.DOCS,tmva/tmva/test/DNN/RNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt:2282,Testability,Test,TestFullRNNCudnn,2282,FullRNN). endif(). #--- CUDA tests. ---------------------------; if (tmva-gpu). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES}). add_executable(testRecurrentBackpropagationCuda TestRecurrentBackpropagationCuda.cxx); target_link_libraries(testRecurrentBackpropagationCuda ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCuda COMMAND testRecurrentBackpropagationCuda); #mark the native Cuda test failing since RNN are supported only with Cudnn; set_tests_properties(TMVA-DNN-RNN-BackpropagationCuda PROPERTIES WILL_FAIL true). if (tmva-cudnn). add_executable(testRecurrentForwardPassCudnn TestRecurrentForwardPassCudnn.cxx); target_link_libraries(testRecurrentForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forwaed-Cudnn COMMAND testRecurrentForwardPassCudnn). add_executable(testRecurrentBackpropagationCudnn TestRecurrentBackpropagationCudnn.cxx); target_link_libraries(testRecurrentBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCudnn COMMAND testRecurrentBackpropagationCudnn). # Full Test GPU; add_executable(testFullRNNCudnn TestFullRNNCudnn.cxx); target_link_libraries(testFullRNNCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Full-Cudnn COMMAND testFullRNNCudnn). endif(). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). # DNN - Forward CPU; ROOT_EXECUTABLE(testRecurrentForwardPassCpu TestRecurrentForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forward-Cpu COMMAND testRecurrentForwardPassCpu). ROOT_EXECUTABLE(testRecurrentBackpropagationCpu TestRecurrentBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Backpropagation-Cpu COMMAND testRecurrentBackpropagationCpu). # RNN - Full Test Reference; ROOT_EXECUTABLE(testFullRNNCpu TestFullRNNCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Full-Cpu COMMAND testFullRNNCpu). endif (); ,MatchSource.DOCS,tmva/tmva/test/DNN/RNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt:2327,Testability,test,testFullRNNCudnn,2327,FullRNN). endif(). #--- CUDA tests. ---------------------------; if (tmva-gpu). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES}). add_executable(testRecurrentBackpropagationCuda TestRecurrentBackpropagationCuda.cxx); target_link_libraries(testRecurrentBackpropagationCuda ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCuda COMMAND testRecurrentBackpropagationCuda); #mark the native Cuda test failing since RNN are supported only with Cudnn; set_tests_properties(TMVA-DNN-RNN-BackpropagationCuda PROPERTIES WILL_FAIL true). if (tmva-cudnn). add_executable(testRecurrentForwardPassCudnn TestRecurrentForwardPassCudnn.cxx); target_link_libraries(testRecurrentForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forwaed-Cudnn COMMAND testRecurrentForwardPassCudnn). add_executable(testRecurrentBackpropagationCudnn TestRecurrentBackpropagationCudnn.cxx); target_link_libraries(testRecurrentBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCudnn COMMAND testRecurrentBackpropagationCudnn). # Full Test GPU; add_executable(testFullRNNCudnn TestFullRNNCudnn.cxx); target_link_libraries(testFullRNNCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Full-Cudnn COMMAND testFullRNNCudnn). endif(). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). # DNN - Forward CPU; ROOT_EXECUTABLE(testRecurrentForwardPassCpu TestRecurrentForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forward-Cpu COMMAND testRecurrentForwardPassCpu). ROOT_EXECUTABLE(testRecurrentBackpropagationCpu TestRecurrentBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Backpropagation-Cpu COMMAND testRecurrentBackpropagationCpu). # RNN - Full Test Reference; ROOT_EXECUTABLE(testFullRNNCpu TestFullRNNCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Full-Cpu COMMAND testFullRNNCpu). endif (); ,MatchSource.DOCS,tmva/tmva/test/DNN/RNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt:2427,Testability,test,testFullRNNCudnn,2427,FullRNN). endif(). #--- CUDA tests. ---------------------------; if (tmva-gpu). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES}). add_executable(testRecurrentBackpropagationCuda TestRecurrentBackpropagationCuda.cxx); target_link_libraries(testRecurrentBackpropagationCuda ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCuda COMMAND testRecurrentBackpropagationCuda); #mark the native Cuda test failing since RNN are supported only with Cudnn; set_tests_properties(TMVA-DNN-RNN-BackpropagationCuda PROPERTIES WILL_FAIL true). if (tmva-cudnn). add_executable(testRecurrentForwardPassCudnn TestRecurrentForwardPassCudnn.cxx); target_link_libraries(testRecurrentForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forwaed-Cudnn COMMAND testRecurrentForwardPassCudnn). add_executable(testRecurrentBackpropagationCudnn TestRecurrentBackpropagationCudnn.cxx); target_link_libraries(testRecurrentBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCudnn COMMAND testRecurrentBackpropagationCudnn). # Full Test GPU; add_executable(testFullRNNCudnn TestFullRNNCudnn.cxx); target_link_libraries(testFullRNNCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Full-Cudnn COMMAND testFullRNNCudnn). endif(). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). # DNN - Forward CPU; ROOT_EXECUTABLE(testRecurrentForwardPassCpu TestRecurrentForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forward-Cpu COMMAND testRecurrentForwardPassCpu). ROOT_EXECUTABLE(testRecurrentBackpropagationCpu TestRecurrentBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Backpropagation-Cpu COMMAND testRecurrentBackpropagationCpu). # RNN - Full Test Reference; ROOT_EXECUTABLE(testFullRNNCpu TestFullRNNCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Full-Cpu COMMAND testFullRNNCpu). endif (); ,MatchSource.DOCS,tmva/tmva/test/DNN/RNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt:2473,Testability,test,tests,2473,FullRNN). endif(). #--- CUDA tests. ---------------------------; if (tmva-gpu). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES}). add_executable(testRecurrentBackpropagationCuda TestRecurrentBackpropagationCuda.cxx); target_link_libraries(testRecurrentBackpropagationCuda ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCuda COMMAND testRecurrentBackpropagationCuda); #mark the native Cuda test failing since RNN are supported only with Cudnn; set_tests_properties(TMVA-DNN-RNN-BackpropagationCuda PROPERTIES WILL_FAIL true). if (tmva-cudnn). add_executable(testRecurrentForwardPassCudnn TestRecurrentForwardPassCudnn.cxx); target_link_libraries(testRecurrentForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forwaed-Cudnn COMMAND testRecurrentForwardPassCudnn). add_executable(testRecurrentBackpropagationCudnn TestRecurrentBackpropagationCudnn.cxx); target_link_libraries(testRecurrentBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCudnn COMMAND testRecurrentBackpropagationCudnn). # Full Test GPU; add_executable(testFullRNNCudnn TestFullRNNCudnn.cxx); target_link_libraries(testFullRNNCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Full-Cudnn COMMAND testFullRNNCudnn). endif(). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). # DNN - Forward CPU; ROOT_EXECUTABLE(testRecurrentForwardPassCpu TestRecurrentForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forward-Cpu COMMAND testRecurrentForwardPassCpu). ROOT_EXECUTABLE(testRecurrentBackpropagationCpu TestRecurrentBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Backpropagation-Cpu COMMAND testRecurrentBackpropagationCpu). # RNN - Full Test Reference; ROOT_EXECUTABLE(testFullRNNCpu TestFullRNNCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Full-Cpu COMMAND testFullRNNCpu). endif (); ,MatchSource.DOCS,tmva/tmva/test/DNN/RNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt:2599,Testability,test,testRecurrentForwardPassCpu,2599,FullRNN). endif(). #--- CUDA tests. ---------------------------; if (tmva-gpu). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES}). add_executable(testRecurrentBackpropagationCuda TestRecurrentBackpropagationCuda.cxx); target_link_libraries(testRecurrentBackpropagationCuda ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCuda COMMAND testRecurrentBackpropagationCuda); #mark the native Cuda test failing since RNN are supported only with Cudnn; set_tests_properties(TMVA-DNN-RNN-BackpropagationCuda PROPERTIES WILL_FAIL true). if (tmva-cudnn). add_executable(testRecurrentForwardPassCudnn TestRecurrentForwardPassCudnn.cxx); target_link_libraries(testRecurrentForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forwaed-Cudnn COMMAND testRecurrentForwardPassCudnn). add_executable(testRecurrentBackpropagationCudnn TestRecurrentBackpropagationCudnn.cxx); target_link_libraries(testRecurrentBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCudnn COMMAND testRecurrentBackpropagationCudnn). # Full Test GPU; add_executable(testFullRNNCudnn TestFullRNNCudnn.cxx); target_link_libraries(testFullRNNCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Full-Cudnn COMMAND testFullRNNCudnn). endif(). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). # DNN - Forward CPU; ROOT_EXECUTABLE(testRecurrentForwardPassCpu TestRecurrentForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forward-Cpu COMMAND testRecurrentForwardPassCpu). ROOT_EXECUTABLE(testRecurrentBackpropagationCpu TestRecurrentBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Backpropagation-Cpu COMMAND testRecurrentBackpropagationCpu). # RNN - Full Test Reference; ROOT_EXECUTABLE(testFullRNNCpu TestFullRNNCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Full-Cpu COMMAND testFullRNNCpu). endif (); ,MatchSource.DOCS,tmva/tmva/test/DNN/RNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt:2627,Testability,Test,TestRecurrentForwardPassCpu,2627,FullRNN). endif(). #--- CUDA tests. ---------------------------; if (tmva-gpu). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES}). add_executable(testRecurrentBackpropagationCuda TestRecurrentBackpropagationCuda.cxx); target_link_libraries(testRecurrentBackpropagationCuda ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCuda COMMAND testRecurrentBackpropagationCuda); #mark the native Cuda test failing since RNN are supported only with Cudnn; set_tests_properties(TMVA-DNN-RNN-BackpropagationCuda PROPERTIES WILL_FAIL true). if (tmva-cudnn). add_executable(testRecurrentForwardPassCudnn TestRecurrentForwardPassCudnn.cxx); target_link_libraries(testRecurrentForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forwaed-Cudnn COMMAND testRecurrentForwardPassCudnn). add_executable(testRecurrentBackpropagationCudnn TestRecurrentBackpropagationCudnn.cxx); target_link_libraries(testRecurrentBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCudnn COMMAND testRecurrentBackpropagationCudnn). # Full Test GPU; add_executable(testFullRNNCudnn TestFullRNNCudnn.cxx); target_link_libraries(testFullRNNCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Full-Cudnn COMMAND testFullRNNCudnn). endif(). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). # DNN - Forward CPU; ROOT_EXECUTABLE(testRecurrentForwardPassCpu TestRecurrentForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forward-Cpu COMMAND testRecurrentForwardPassCpu). ROOT_EXECUTABLE(testRecurrentBackpropagationCpu TestRecurrentBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Backpropagation-Cpu COMMAND testRecurrentBackpropagationCpu). # RNN - Full Test Reference; ROOT_EXECUTABLE(testFullRNNCpu TestFullRNNCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Full-Cpu COMMAND testFullRNNCpu). endif (); ,MatchSource.DOCS,tmva/tmva/test/DNN/RNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt:2731,Testability,test,testRecurrentForwardPassCpu,2731,FullRNN). endif(). #--- CUDA tests. ---------------------------; if (tmva-gpu). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES}). add_executable(testRecurrentBackpropagationCuda TestRecurrentBackpropagationCuda.cxx); target_link_libraries(testRecurrentBackpropagationCuda ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCuda COMMAND testRecurrentBackpropagationCuda); #mark the native Cuda test failing since RNN are supported only with Cudnn; set_tests_properties(TMVA-DNN-RNN-BackpropagationCuda PROPERTIES WILL_FAIL true). if (tmva-cudnn). add_executable(testRecurrentForwardPassCudnn TestRecurrentForwardPassCudnn.cxx); target_link_libraries(testRecurrentForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forwaed-Cudnn COMMAND testRecurrentForwardPassCudnn). add_executable(testRecurrentBackpropagationCudnn TestRecurrentBackpropagationCudnn.cxx); target_link_libraries(testRecurrentBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCudnn COMMAND testRecurrentBackpropagationCudnn). # Full Test GPU; add_executable(testFullRNNCudnn TestFullRNNCudnn.cxx); target_link_libraries(testFullRNNCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Full-Cudnn COMMAND testFullRNNCudnn). endif(). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). # DNN - Forward CPU; ROOT_EXECUTABLE(testRecurrentForwardPassCpu TestRecurrentForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forward-Cpu COMMAND testRecurrentForwardPassCpu). ROOT_EXECUTABLE(testRecurrentBackpropagationCpu TestRecurrentBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Backpropagation-Cpu COMMAND testRecurrentBackpropagationCpu). # RNN - Full Test Reference; ROOT_EXECUTABLE(testFullRNNCpu TestFullRNNCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Full-Cpu COMMAND testFullRNNCpu). endif (); ,MatchSource.DOCS,tmva/tmva/test/DNN/RNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt:2777,Testability,test,testRecurrentBackpropagationCpu,2777,FullRNN). endif(). #--- CUDA tests. ---------------------------; if (tmva-gpu). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES}). add_executable(testRecurrentBackpropagationCuda TestRecurrentBackpropagationCuda.cxx); target_link_libraries(testRecurrentBackpropagationCuda ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCuda COMMAND testRecurrentBackpropagationCuda); #mark the native Cuda test failing since RNN are supported only with Cudnn; set_tests_properties(TMVA-DNN-RNN-BackpropagationCuda PROPERTIES WILL_FAIL true). if (tmva-cudnn). add_executable(testRecurrentForwardPassCudnn TestRecurrentForwardPassCudnn.cxx); target_link_libraries(testRecurrentForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forwaed-Cudnn COMMAND testRecurrentForwardPassCudnn). add_executable(testRecurrentBackpropagationCudnn TestRecurrentBackpropagationCudnn.cxx); target_link_libraries(testRecurrentBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCudnn COMMAND testRecurrentBackpropagationCudnn). # Full Test GPU; add_executable(testFullRNNCudnn TestFullRNNCudnn.cxx); target_link_libraries(testFullRNNCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Full-Cudnn COMMAND testFullRNNCudnn). endif(). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). # DNN - Forward CPU; ROOT_EXECUTABLE(testRecurrentForwardPassCpu TestRecurrentForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forward-Cpu COMMAND testRecurrentForwardPassCpu). ROOT_EXECUTABLE(testRecurrentBackpropagationCpu TestRecurrentBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Backpropagation-Cpu COMMAND testRecurrentBackpropagationCpu). # RNN - Full Test Reference; ROOT_EXECUTABLE(testFullRNNCpu TestFullRNNCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Full-Cpu COMMAND testFullRNNCpu). endif (); ,MatchSource.DOCS,tmva/tmva/test/DNN/RNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt:2809,Testability,Test,TestRecurrentBackpropagationCpu,2809,FullRNN). endif(). #--- CUDA tests. ---------------------------; if (tmva-gpu). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES}). add_executable(testRecurrentBackpropagationCuda TestRecurrentBackpropagationCuda.cxx); target_link_libraries(testRecurrentBackpropagationCuda ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCuda COMMAND testRecurrentBackpropagationCuda); #mark the native Cuda test failing since RNN are supported only with Cudnn; set_tests_properties(TMVA-DNN-RNN-BackpropagationCuda PROPERTIES WILL_FAIL true). if (tmva-cudnn). add_executable(testRecurrentForwardPassCudnn TestRecurrentForwardPassCudnn.cxx); target_link_libraries(testRecurrentForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forwaed-Cudnn COMMAND testRecurrentForwardPassCudnn). add_executable(testRecurrentBackpropagationCudnn TestRecurrentBackpropagationCudnn.cxx); target_link_libraries(testRecurrentBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCudnn COMMAND testRecurrentBackpropagationCudnn). # Full Test GPU; add_executable(testFullRNNCudnn TestFullRNNCudnn.cxx); target_link_libraries(testFullRNNCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Full-Cudnn COMMAND testFullRNNCudnn). endif(). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). # DNN - Forward CPU; ROOT_EXECUTABLE(testRecurrentForwardPassCpu TestRecurrentForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forward-Cpu COMMAND testRecurrentForwardPassCpu). ROOT_EXECUTABLE(testRecurrentBackpropagationCpu TestRecurrentBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Backpropagation-Cpu COMMAND testRecurrentBackpropagationCpu). # RNN - Full Test Reference; ROOT_EXECUTABLE(testFullRNNCpu TestFullRNNCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Full-Cpu COMMAND testFullRNNCpu). endif (); ,MatchSource.DOCS,tmva/tmva/test/DNN/RNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt:2925,Testability,test,testRecurrentBackpropagationCpu,2925,FullRNN). endif(). #--- CUDA tests. ---------------------------; if (tmva-gpu). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES}). add_executable(testRecurrentBackpropagationCuda TestRecurrentBackpropagationCuda.cxx); target_link_libraries(testRecurrentBackpropagationCuda ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCuda COMMAND testRecurrentBackpropagationCuda); #mark the native Cuda test failing since RNN are supported only with Cudnn; set_tests_properties(TMVA-DNN-RNN-BackpropagationCuda PROPERTIES WILL_FAIL true). if (tmva-cudnn). add_executable(testRecurrentForwardPassCudnn TestRecurrentForwardPassCudnn.cxx); target_link_libraries(testRecurrentForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forwaed-Cudnn COMMAND testRecurrentForwardPassCudnn). add_executable(testRecurrentBackpropagationCudnn TestRecurrentBackpropagationCudnn.cxx); target_link_libraries(testRecurrentBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCudnn COMMAND testRecurrentBackpropagationCudnn). # Full Test GPU; add_executable(testFullRNNCudnn TestFullRNNCudnn.cxx); target_link_libraries(testFullRNNCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Full-Cudnn COMMAND testFullRNNCudnn). endif(). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). # DNN - Forward CPU; ROOT_EXECUTABLE(testRecurrentForwardPassCpu TestRecurrentForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forward-Cpu COMMAND testRecurrentForwardPassCpu). ROOT_EXECUTABLE(testRecurrentBackpropagationCpu TestRecurrentBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Backpropagation-Cpu COMMAND testRecurrentBackpropagationCpu). # RNN - Full Test Reference; ROOT_EXECUTABLE(testFullRNNCpu TestFullRNNCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Full-Cpu COMMAND testFullRNNCpu). endif (); ,MatchSource.DOCS,tmva/tmva/test/DNN/RNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt:2972,Testability,Test,Test,2972,FullRNN). endif(). #--- CUDA tests. ---------------------------; if (tmva-gpu). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES}). add_executable(testRecurrentBackpropagationCuda TestRecurrentBackpropagationCuda.cxx); target_link_libraries(testRecurrentBackpropagationCuda ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCuda COMMAND testRecurrentBackpropagationCuda); #mark the native Cuda test failing since RNN are supported only with Cudnn; set_tests_properties(TMVA-DNN-RNN-BackpropagationCuda PROPERTIES WILL_FAIL true). if (tmva-cudnn). add_executable(testRecurrentForwardPassCudnn TestRecurrentForwardPassCudnn.cxx); target_link_libraries(testRecurrentForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forwaed-Cudnn COMMAND testRecurrentForwardPassCudnn). add_executable(testRecurrentBackpropagationCudnn TestRecurrentBackpropagationCudnn.cxx); target_link_libraries(testRecurrentBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCudnn COMMAND testRecurrentBackpropagationCudnn). # Full Test GPU; add_executable(testFullRNNCudnn TestFullRNNCudnn.cxx); target_link_libraries(testFullRNNCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Full-Cudnn COMMAND testFullRNNCudnn). endif(). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). # DNN - Forward CPU; ROOT_EXECUTABLE(testRecurrentForwardPassCpu TestRecurrentForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forward-Cpu COMMAND testRecurrentForwardPassCpu). ROOT_EXECUTABLE(testRecurrentBackpropagationCpu TestRecurrentBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Backpropagation-Cpu COMMAND testRecurrentBackpropagationCpu). # RNN - Full Test Reference; ROOT_EXECUTABLE(testFullRNNCpu TestFullRNNCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Full-Cpu COMMAND testFullRNNCpu). endif (); ,MatchSource.DOCS,tmva/tmva/test/DNN/RNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt:3004,Testability,test,testFullRNNCpu,3004,FullRNN). endif(). #--- CUDA tests. ---------------------------; if (tmva-gpu). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES}). add_executable(testRecurrentBackpropagationCuda TestRecurrentBackpropagationCuda.cxx); target_link_libraries(testRecurrentBackpropagationCuda ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCuda COMMAND testRecurrentBackpropagationCuda); #mark the native Cuda test failing since RNN are supported only with Cudnn; set_tests_properties(TMVA-DNN-RNN-BackpropagationCuda PROPERTIES WILL_FAIL true). if (tmva-cudnn). add_executable(testRecurrentForwardPassCudnn TestRecurrentForwardPassCudnn.cxx); target_link_libraries(testRecurrentForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forwaed-Cudnn COMMAND testRecurrentForwardPassCudnn). add_executable(testRecurrentBackpropagationCudnn TestRecurrentBackpropagationCudnn.cxx); target_link_libraries(testRecurrentBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCudnn COMMAND testRecurrentBackpropagationCudnn). # Full Test GPU; add_executable(testFullRNNCudnn TestFullRNNCudnn.cxx); target_link_libraries(testFullRNNCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Full-Cudnn COMMAND testFullRNNCudnn). endif(). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). # DNN - Forward CPU; ROOT_EXECUTABLE(testRecurrentForwardPassCpu TestRecurrentForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forward-Cpu COMMAND testRecurrentForwardPassCpu). ROOT_EXECUTABLE(testRecurrentBackpropagationCpu TestRecurrentBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Backpropagation-Cpu COMMAND testRecurrentBackpropagationCpu). # RNN - Full Test Reference; ROOT_EXECUTABLE(testFullRNNCpu TestFullRNNCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Full-Cpu COMMAND testFullRNNCpu). endif (); ,MatchSource.DOCS,tmva/tmva/test/DNN/RNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt:3019,Testability,Test,TestFullRNNCpu,3019,FullRNN). endif(). #--- CUDA tests. ---------------------------; if (tmva-gpu). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES}). add_executable(testRecurrentBackpropagationCuda TestRecurrentBackpropagationCuda.cxx); target_link_libraries(testRecurrentBackpropagationCuda ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCuda COMMAND testRecurrentBackpropagationCuda); #mark the native Cuda test failing since RNN are supported only with Cudnn; set_tests_properties(TMVA-DNN-RNN-BackpropagationCuda PROPERTIES WILL_FAIL true). if (tmva-cudnn). add_executable(testRecurrentForwardPassCudnn TestRecurrentForwardPassCudnn.cxx); target_link_libraries(testRecurrentForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forwaed-Cudnn COMMAND testRecurrentForwardPassCudnn). add_executable(testRecurrentBackpropagationCudnn TestRecurrentBackpropagationCudnn.cxx); target_link_libraries(testRecurrentBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCudnn COMMAND testRecurrentBackpropagationCudnn). # Full Test GPU; add_executable(testFullRNNCudnn TestFullRNNCudnn.cxx); target_link_libraries(testFullRNNCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Full-Cudnn COMMAND testFullRNNCudnn). endif(). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). # DNN - Forward CPU; ROOT_EXECUTABLE(testRecurrentForwardPassCpu TestRecurrentForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forward-Cpu COMMAND testRecurrentForwardPassCpu). ROOT_EXECUTABLE(testRecurrentBackpropagationCpu TestRecurrentBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Backpropagation-Cpu COMMAND testRecurrentBackpropagationCpu). # RNN - Full Test Reference; ROOT_EXECUTABLE(testFullRNNCpu TestFullRNNCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Full-Cpu COMMAND testFullRNNCpu). endif (); ,MatchSource.DOCS,tmva/tmva/test/DNN/RNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt:3107,Testability,test,testFullRNNCpu,3107,FullRNN). endif(). #--- CUDA tests. ---------------------------; if (tmva-gpu). set(DNN_CUDA_LIBRARIES ${CUDA_CUBLAS_LIBRARIES}). add_executable(testRecurrentBackpropagationCuda TestRecurrentBackpropagationCuda.cxx); target_link_libraries(testRecurrentBackpropagationCuda ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCuda COMMAND testRecurrentBackpropagationCuda); #mark the native Cuda test failing since RNN are supported only with Cudnn; set_tests_properties(TMVA-DNN-RNN-BackpropagationCuda PROPERTIES WILL_FAIL true). if (tmva-cudnn). add_executable(testRecurrentForwardPassCudnn TestRecurrentForwardPassCudnn.cxx); target_link_libraries(testRecurrentForwardPassCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forwaed-Cudnn COMMAND testRecurrentForwardPassCudnn). add_executable(testRecurrentBackpropagationCudnn TestRecurrentBackpropagationCudnn.cxx); target_link_libraries(testRecurrentBackpropagationCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-BackpropagationCudnn COMMAND testRecurrentBackpropagationCudnn). # Full Test GPU; add_executable(testFullRNNCudnn TestFullRNNCudnn.cxx); target_link_libraries(testFullRNNCudnn ${Libraries} ${DNN_CUDA_LIBRARIES}); ROOT_ADD_TEST(TMVA-DNN-RNN-Full-Cudnn COMMAND testFullRNNCudnn). endif(). endif(). #--- CPU tests. ----------------------------; if ((BLAS_FOUND OR mathmore) AND imt AND tmva-cpu). # DNN - Forward CPU; ROOT_EXECUTABLE(testRecurrentForwardPassCpu TestRecurrentForwardPassCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Forward-Cpu COMMAND testRecurrentForwardPassCpu). ROOT_EXECUTABLE(testRecurrentBackpropagationCpu TestRecurrentBackpropagationCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Backpropagation-Cpu COMMAND testRecurrentBackpropagationCpu). # RNN - Full Test Reference; ROOT_EXECUTABLE(testFullRNNCpu TestFullRNNCpu.cxx LIBRARIES ${Libraries}); ROOT_ADD_TEST(TMVA-DNN-RNN-Full-Cpu COMMAND testFullRNNCpu). endif (); ,MatchSource.DOCS,tmva/tmva/test/DNN/RNN/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/CMakeLists.txt:1433,Integrability,Interface,InterfaceUtils,1433,##########################. if(NOT dataframe); return(); endif(). if(arrow); list(APPEND RDATAFRAME_EXTRA_HEADERS ROOT/RArrowDS.hxx); list(APPEND RDATAFRAME_EXTRA_INCLUDES -I${ARROW_INCLUDE_DIR}); endif(). if(sqlite); list(APPEND RDATAFRAME_EXTRA_HEADERS ROOT/RSqliteDS.hxx); endif(). if(root7); list(APPEND RDATAFRAME_EXTRA_HEADERS ROOT/RNTupleDS.hxx); list(APPEND RDATAFRAME_EXTRA_DEPS ROOTNTuple); endif(). if (imt); list(APPEND RDATAFRAME_EXTRA_DEPS Imt); endif(imt). set (EXTRA_DICT_OPTS); if (runtime_cxxmodules AND WIN32); set (EXTRA_DICT_OPTS NO_CXXMODULE); endif(). ROOT_STANDARD_LIBRARY_PACKAGE(ROOTDataFrame; HEADERS; ROOT/RCsvDS.hxx; ROOT/RVecDS.hxx; ROOT/RDataFrame.hxx; ROOT/RDataSource.hxx; ROOT/RDFHelpers.hxx; ROOT/RLazyDS.hxx; ROOT/RResultHandle.hxx; ROOT/RResultPtr.hxx; ROOT/RRootDS.hxx; ROOT/RSnapshotOptions.hxx; ROOT/RTrivialDS.hxx; ROOT/RDF/ActionHelpers.hxx; ROOT/RDF/ColumnReaderUtils.hxx; ROOT/RDF/GraphNode.hxx; ROOT/RDF/GraphUtils.hxx; ROOT/RDF/HistoModels.hxx; ROOT/RDF/InterfaceUtils.hxx; ROOT/RDF/RActionBase.hxx; ROOT/RDF/RAction.hxx; ROOT/RDF/RActionImpl.hxx; ROOT/RDF/RColumnRegister.hxx; ROOT/RDF/RNewSampleNotifier.hxx; ROOT/RDF/RSampleInfo.hxx; ROOT/RDF/RDefineBase.hxx; ROOT/RDF/RDefaultValueFor.hxx; ROOT/RDF/RDefine.hxx; ROOT/RDF/RDefinePerSample.hxx; ROOT/RDF/RDefineReader.hxx; ROOT/RDF/RDSColumnReader.hxx; ROOT/RDF/RColumnReaderBase.hxx; ROOT/RDF/RCutFlowReport.hxx; ROOT/RDF/RDatasetSpec.hxx; ROOT/RDF/RDisplay.hxx; ROOT/RDF/RFilterBase.hxx; ROOT/RDF/RFilter.hxx; ROOT/RDF/RInterface.hxx; ROOT/RDF/RInterfaceBase.hxx; ROOT/RDF/RJittedAction.hxx; ROOT/RDF/RJittedDefine.hxx; ROOT/RDF/RJittedFilter.hxx; ROOT/RDF/RJittedVariation.hxx; ROOT/RDF/RLazyDSImpl.hxx; ROOT/RDF/RLoopManager.hxx; ROOT/RDF/RMergeableValue.hxx; ROOT/RDF/RMetaData.hxx; ROOT/RDF/RNodeBase.hxx; ROOT/RDF/RRangeBase.hxx; ROOT/RDF/RRange.hxx; ROOT/RDF/RResultMap.hxx; ROOT/RDF/RSample.hxx; ROOT/RDF/RFilterWithMissingValues.hxx; ROOT/RDF/RTreeColumnReader.hxx; ROOT/RDF/RVariation.hxx; RO,MatchSource.DOCS,tree/dataframe/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/CMakeLists.txt:3475,Integrability,DEPEND,DEPENDENCIES,3475,RDF/RVariation.hxx; ROOT/RDF/RVariationBase.hxx; ROOT/RDF/RVariationReader.hxx; ROOT/RDF/RVariationsDescription.hxx; ROOT/RDF/RVariedAction.hxx; ROOT/RDF/Utils.hxx; ROOT/RDF/PyROOTHelpers.hxx; ROOT/RDF/RDFDescription.hxx; ${RDATAFRAME_EXTRA_HEADERS}; SOURCES; src/RActionBase.cxx; src/RCsvDS.cxx; src/RDefineBase.cxx; src/RDefineReader.cxx; src/RCutFlowReport.cxx; src/RDataFrame.cxx; src/RDatasetSpec.cxx; src/RDFActionHelpers.cxx; src/RDFColumnRegister.cxx; src/RDFDisplay.cxx; src/RDFGraphUtils.cxx; src/RDFHistoModels.cxx; src/RDFInterfaceUtils.cxx; src/RDFUtils.cxx; src/RDFHelpers.cxx; src/RFilterBase.cxx; src/RInterfaceBase.cxx; src/RInterface.cxx; src/RJittedAction.cxx; src/RJittedDefine.cxx; src/RJittedFilter.cxx; src/RJittedVariation.cxx; src/RLoopManager.cxx; src/RMetaData.cxx; src/RRangeBase.cxx; src/RSample.cxx; src/RResultPtr.cxx; src/RVariationBase.cxx; src/RVariationReader.cxx; src/RVariationsDescription.cxx; src/RRootDS.cxx; src/RTrivialDS.cxx; src/RDFDescription.cxx; DICTIONARY_OPTIONS; -writeEmptyRootPCM; ${RDATAFRAME_EXTRA_INCLUDES}; DEPENDENCIES; Tree; TreePlayer; Hist; RIO; ROOTVecOps; ${RDATAFRAME_EXTRA_DEPS}; ${EXTRA_DICT_OPTS}; ). if(arrow); target_sources(ROOTDataFrame PRIVATE src/RArrowDS.cxx); target_include_directories(ROOTDataFrame PRIVATE ${ARROW_INCLUDE_DIR}); target_link_libraries(ROOTDataFrame PRIVATE ${ARROW_SHARED_LIB}); endif(). if(sqlite); target_sources(ROOTDataFrame PRIVATE src/RSqliteDS.cxx); target_include_directories(ROOTDataFrame PRIVATE ${SQLITE_INCLUDE_DIR}); target_link_libraries(ROOTDataFrame PRIVATE ${SQLITE_LIBRARIES}); endif(). if(root7); target_sources(ROOTDataFrame PRIVATE src/RNTupleDS.cxx); endif(root7). if(MSVC); target_compile_definitions(ROOTDataFrame PRIVATE _USE_MATH_DEFINES); endif(). if(builtin_nlohmannjson); target_include_directories(ROOTDataFrame PRIVATE ${CMAKE_SOURCE_DIR}/builtins); else(); target_link_libraries(ROOTDataFrame PRIVATE nlohmann_json::nlohmann_json); endif(). ROOT_ADD_TEST_SUBDIRECTORY(test); ,MatchSource.DOCS,tree/dataframe/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/CMakeLists.txt:4405,Testability,test,test,4405,RDF/RVariation.hxx; ROOT/RDF/RVariationBase.hxx; ROOT/RDF/RVariationReader.hxx; ROOT/RDF/RVariationsDescription.hxx; ROOT/RDF/RVariedAction.hxx; ROOT/RDF/Utils.hxx; ROOT/RDF/PyROOTHelpers.hxx; ROOT/RDF/RDFDescription.hxx; ${RDATAFRAME_EXTRA_HEADERS}; SOURCES; src/RActionBase.cxx; src/RCsvDS.cxx; src/RDefineBase.cxx; src/RDefineReader.cxx; src/RCutFlowReport.cxx; src/RDataFrame.cxx; src/RDatasetSpec.cxx; src/RDFActionHelpers.cxx; src/RDFColumnRegister.cxx; src/RDFDisplay.cxx; src/RDFGraphUtils.cxx; src/RDFHistoModels.cxx; src/RDFInterfaceUtils.cxx; src/RDFUtils.cxx; src/RDFHelpers.cxx; src/RFilterBase.cxx; src/RInterfaceBase.cxx; src/RInterface.cxx; src/RJittedAction.cxx; src/RJittedDefine.cxx; src/RJittedFilter.cxx; src/RJittedVariation.cxx; src/RLoopManager.cxx; src/RMetaData.cxx; src/RRangeBase.cxx; src/RSample.cxx; src/RResultPtr.cxx; src/RVariationBase.cxx; src/RVariationReader.cxx; src/RVariationsDescription.cxx; src/RRootDS.cxx; src/RTrivialDS.cxx; src/RDFDescription.cxx; DICTIONARY_OPTIONS; -writeEmptyRootPCM; ${RDATAFRAME_EXTRA_INCLUDES}; DEPENDENCIES; Tree; TreePlayer; Hist; RIO; ROOTVecOps; ${RDATAFRAME_EXTRA_DEPS}; ${EXTRA_DICT_OPTS}; ). if(arrow); target_sources(ROOTDataFrame PRIVATE src/RArrowDS.cxx); target_include_directories(ROOTDataFrame PRIVATE ${ARROW_INCLUDE_DIR}); target_link_libraries(ROOTDataFrame PRIVATE ${ARROW_SHARED_LIB}); endif(). if(sqlite); target_sources(ROOTDataFrame PRIVATE src/RSqliteDS.cxx); target_include_directories(ROOTDataFrame PRIVATE ${SQLITE_INCLUDE_DIR}); target_link_libraries(ROOTDataFrame PRIVATE ${SQLITE_LIBRARIES}); endif(). if(root7); target_sources(ROOTDataFrame PRIVATE src/RNTupleDS.cxx); endif(root7). if(MSVC); target_compile_definitions(ROOTDataFrame PRIVATE _USE_MATH_DEFINES); endif(). if(builtin_nlohmannjson); target_include_directories(ROOTDataFrame PRIVATE ${CMAKE_SOURCE_DIR}/builtins); else(); target_link_libraries(ROOTDataFrame PRIVATE nlohmann_json::nlohmann_json); endif(). ROOT_ADD_TEST_SUBDIRECTORY(test); ,MatchSource.DOCS,tree/dataframe/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/CMakeLists.txt:2227,Integrability,DEPEND,DEPENDENCIES,2227,/RPage.hxx; ROOT/RPageAllocator.hxx; ROOT/RPageNullSink.hxx; ROOT/RPagePool.hxx; ROOT/RPageSinkBuf.hxx; ROOT/RPageSourceFriends.hxx; ROOT/RPageStorage.hxx; ROOT/RPageStorageFile.hxx; SOURCES; v7/src/RCluster.cxx; v7/src/RClusterPool.cxx; v7/src/RColumn.cxx; v7/src/RColumnElement.cxx; v7/src/RField.cxx; v7/src/RFieldVisitor.cxx; v7/src/RMiniFile.cxx; v7/src/RNTuple.cxx; v7/src/RNTupleDescriptor.cxx; v7/src/RNTupleDescriptorFmt.cxx; v7/src/RNTupleFillContext.cxx; v7/src/RNTupleIndex.cxx; v7/src/RNTupleMerger.cxx; v7/src/RNTupleMetrics.cxx; v7/src/RNTupleModel.cxx; v7/src/RNTupleParallelWriter.cxx; v7/src/RNTupleProcessor.cxx; v7/src/RNTupleReader.cxx; v7/src/RNTupleSerialize.cxx; v7/src/RNTupleUtil.cxx; v7/src/RNTupleWriteOptions.cxx; v7/src/RNTupleWriter.cxx; v7/src/RNTupleView.cxx; v7/src/RPage.cxx; v7/src/RPageAllocator.cxx; v7/src/RPagePool.cxx; v7/src/RPageSinkBuf.cxx; v7/src/RPageSourceFriends.cxx; v7/src/RPageStorage.cxx; v7/src/RPageStorageFile.cxx; LINKDEF; LinkDef.h; DEPENDENCIES; Imt; RIO; ROOTVecOps; ). target_link_libraries(ROOTNTuple PRIVATE xxHash::xxHash). # Enable RNTuple support for Intel DAOS; if(daos OR daos_mock); set(ROOTNTuple_EXTRA_HEADERS ROOT/RPageStorageDaos.hxx); target_sources(ROOTNTuple PRIVATE v7/src/RDaos.cxx v7/src/RPageStorageDaos.cxx); target_compile_definitions(ROOTNTuple PRIVATE R__ENABLE_DAOS). target_include_directories(ROOTNTuple PRIVATE ${UUID_INCLUDE_DIR}); target_link_libraries(ROOTNTuple PRIVATE ${UUID_LIBRARY}); if(daos_mock); target_include_directories(ROOTNTuple PRIVATE v7/inc/ROOT/libdaos_mock/); target_sources(ROOTNTuple PRIVATE v7/src/libdaos_mock/libdaos_mock.cxx); else(); target_include_directories(ROOTNTuple PRIVATE ${DAOS_INCLUDE_DIRS}); target_link_libraries(ROOTNTuple PRIVATE ${DAOS_LIBRARIES}); endif(); endif(). if(MSVC); target_compile_definitions(ROOTNTuple PRIVATE _USE_MATH_DEFINES); set_source_files_properties(v7/src/RField.cxx PROPERTIES COMPILE_FLAGS /bigobj); endif(). ROOT_ADD_TEST_SUBDIRECTORY(v7/test); ,MatchSource.DOCS,tree/ntuple/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/CMakeLists.txt:3230,Testability,test,test,3230,/RPage.hxx; ROOT/RPageAllocator.hxx; ROOT/RPageNullSink.hxx; ROOT/RPagePool.hxx; ROOT/RPageSinkBuf.hxx; ROOT/RPageSourceFriends.hxx; ROOT/RPageStorage.hxx; ROOT/RPageStorageFile.hxx; SOURCES; v7/src/RCluster.cxx; v7/src/RClusterPool.cxx; v7/src/RColumn.cxx; v7/src/RColumnElement.cxx; v7/src/RField.cxx; v7/src/RFieldVisitor.cxx; v7/src/RMiniFile.cxx; v7/src/RNTuple.cxx; v7/src/RNTupleDescriptor.cxx; v7/src/RNTupleDescriptorFmt.cxx; v7/src/RNTupleFillContext.cxx; v7/src/RNTupleIndex.cxx; v7/src/RNTupleMerger.cxx; v7/src/RNTupleMetrics.cxx; v7/src/RNTupleModel.cxx; v7/src/RNTupleParallelWriter.cxx; v7/src/RNTupleProcessor.cxx; v7/src/RNTupleReader.cxx; v7/src/RNTupleSerialize.cxx; v7/src/RNTupleUtil.cxx; v7/src/RNTupleWriteOptions.cxx; v7/src/RNTupleWriter.cxx; v7/src/RNTupleView.cxx; v7/src/RPage.cxx; v7/src/RPageAllocator.cxx; v7/src/RPagePool.cxx; v7/src/RPageSinkBuf.cxx; v7/src/RPageSourceFriends.cxx; v7/src/RPageStorage.cxx; v7/src/RPageStorageFile.cxx; LINKDEF; LinkDef.h; DEPENDENCIES; Imt; RIO; ROOTVecOps; ). target_link_libraries(ROOTNTuple PRIVATE xxHash::xxHash). # Enable RNTuple support for Intel DAOS; if(daos OR daos_mock); set(ROOTNTuple_EXTRA_HEADERS ROOT/RPageStorageDaos.hxx); target_sources(ROOTNTuple PRIVATE v7/src/RDaos.cxx v7/src/RPageStorageDaos.cxx); target_compile_definitions(ROOTNTuple PRIVATE R__ENABLE_DAOS). target_include_directories(ROOTNTuple PRIVATE ${UUID_INCLUDE_DIR}); target_link_libraries(ROOTNTuple PRIVATE ${UUID_LIBRARY}); if(daos_mock); target_include_directories(ROOTNTuple PRIVATE v7/inc/ROOT/libdaos_mock/); target_sources(ROOTNTuple PRIVATE v7/src/libdaos_mock/libdaos_mock.cxx); else(); target_include_directories(ROOTNTuple PRIVATE ${DAOS_INCLUDE_DIRS}); target_link_libraries(ROOTNTuple PRIVATE ${DAOS_LIBRARIES}); endif(); endif(). if(MSVC); target_compile_definitions(ROOTNTuple PRIVATE _USE_MATH_DEFINES); set_source_files_properties(v7/src/RField.cxx PROPERTIES COMPILE_FLAGS /bigobj); endif(). ROOT_ADD_TEST_SUBDIRECTORY(v7/test); ,MatchSource.DOCS,tree/ntuple/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/ntupleutil/CMakeLists.txt:676,Integrability,DEPEND,DEPENDENCIES,676,"# Copyright (C) 1995-2022, Rene Brun and Fons Rademakers.; # All rights reserved.; #; # For the licensing terms see $ROOTSYS/LICENSE.; # For the list of contributors see $ROOTSYS/README/CREDITS. ############################################################################; # CMakeLists.txt file for building ROOT ntuple extra utils package; # @author Jakob Blomer CERN; ############################################################################. if(NOT root7); return(); endif(). ROOT_STANDARD_LIBRARY_PACKAGE(ROOTNTupleUtil; HEADERS; ROOT/RNTupleImporter.hxx; ROOT/RNTupleInspector.hxx; SOURCES; v7/src/RNTupleImporter.cxx; v7/src/RNTupleInspector.cxx; LINKDEF; LinkDef.h; DEPENDENCIES; ROOTNTuple; Tree; Hist; ). if(MSVC); target_compile_definitions(ROOTNTupleUtil PRIVATE _USE_MATH_DEFINES); endif(). ROOT_ADD_TEST_SUBDIRECTORY(v7/test); ",MatchSource.DOCS,tree/ntupleutil/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntupleutil/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/ntupleutil/CMakeLists.txt:836,Testability,test,test,836,"# Copyright (C) 1995-2022, Rene Brun and Fons Rademakers.; # All rights reserved.; #; # For the licensing terms see $ROOTSYS/LICENSE.; # For the list of contributors see $ROOTSYS/README/CREDITS. ############################################################################; # CMakeLists.txt file for building ROOT ntuple extra utils package; # @author Jakob Blomer CERN; ############################################################################. if(NOT root7); return(); endif(). ROOT_STANDARD_LIBRARY_PACKAGE(ROOTNTupleUtil; HEADERS; ROOT/RNTupleImporter.hxx; ROOT/RNTupleInspector.hxx; SOURCES; v7/src/RNTupleImporter.cxx; v7/src/RNTupleInspector.cxx; LINKDEF; LinkDef.h; DEPENDENCIES; ROOTNTuple; Tree; Hist; ). if(MSVC); target_compile_definitions(ROOTNTupleUtil PRIVATE _USE_MATH_DEFINES); endif(). ROOT_ADD_TEST_SUBDIRECTORY(v7/test); ",MatchSource.DOCS,tree/ntupleutil/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntupleutil/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/readspeed/CMakeLists.txt:736,Testability,test,test,736,"# Copyright (C) 1995-2022, Rene Brun and Fons Rademakers.; # All rights reserved.; #; # For the licensing terms see $ROOTSYS/LICENSE.; # For the list of contributors see $ROOTSYS/README/CREDITS. ############################################################################; # CMakeLists.txt file for building ROOT readspeed package; # @author Bertrand Bellenot CERN; ############################################################################. ROOT_OBJECT_LIBRARY(ReadSpeed; src/ReadSpeed.cxx; src/ReadSpeedCLI.cxx; ). target_include_directories(ReadSpeed PRIVATE; ${CMAKE_SOURCE_DIR}/io/io/inc; ${CMAKE_SOURCE_DIR}/tree/tree/inc; ${CMAKE_SOURCE_DIR}/tree/treeplayer/inc; ${CMAKE_SOURCE_DIR}/core/imt/inc; ). ROOT_ADD_TEST_SUBDIRECTORY(test); ",MatchSource.DOCS,tree/readspeed/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/readspeed/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/tree/CMakeLists.txt:2449,Integrability,DEPEND,DEPENDENCIES,2449,owsable.h; TBranchCacheInfo.h; TBranchClones.h; TBranchElement.h; TBranch.h; TBranchObject.h; TBranchRef.h; TBranchSTL.h; TBufferSQL.h; TChainElement.h; TChain.h; TCut.h; TEntryListArray.h; TEntryListBlock.h; TEntryListFromFile.h; TEntryList.h; TEventList.h; TFriendElement.h; TIndArray.h; TLeafB.h; TLeafC.h; TLeafD.h; TLeafD32.h; TLeafElement.h; TLeafF.h; TLeafF16.h; TLeaf.h; TLeafI.h; TLeafL.h; TLeafG.h; TLeafObject.h; TLeafO.h; TLeafS.h; TNtupleD.h; TNtuple.h; TQueryResult.h; TreeUtils.h; TSelector.h; TSelectorList.h; TSelectorScalar.h; TTreeCache.h; TTreeCacheUnzip.h; TTreeCloner.h; TTree.h; TTreeResult.h; TTreeRow.h; TTreeSQL.h; TVirtualIndex.h; TVirtualTreePlayer.h; ROOT/InternalTreeUtils.hxx; ROOT/RFriendInfo.hxx; ROOT/TIOFeatures.hxx; SOURCES; src/InternalTreeUtils.cxx; src/RFriendInfo.cxx; src/TBasket.cxx; src/TBasketSQL.cxx; src/TBranchBrowsable.cxx; src/TBranchClones.cxx; src/TBranch.cxx; src/TBranchElement.cxx; src/TBranchIMTHelper.h; src/TBranchObject.cxx; src/TBranchRef.cxx; src/TBranchSTL.cxx; src/TBufferSQL.cxx; src/TChain.cxx; src/TChainElement.cxx; src/TCut.cxx; src/TEntryListArray.cxx; src/TEntryListBlock.cxx; src/TEntryList.cxx; src/TEntryListFromFile.cxx; src/TEventList.cxx; src/TFriendElement.cxx; src/TIOFeatures.cxx; src/TLeafB.cxx; src/TLeafC.cxx; src/TLeaf.cxx; src/TLeafD.cxx; src/TLeafD32.cxx; src/TLeafElement.cxx; src/TLeafF.cxx; src/TLeafF16.cxx; src/TLeafI.cxx; src/TLeafL.cxx; src/TLeafG.cxx; src/TLeafObject.cxx; src/TLeafO.cxx; src/TLeafS.cxx; src/TNtuple.cxx; src/TNtupleD.cxx; src/TQueryResult.cxx; src/TreeUtils.cxx; src/TSelector.cxx; src/TSelectorList.cxx; src/TSelectorScalar.cxx; src/TTreeCache.cxx; src/TTreeCacheUnzip.cxx; src/TTreeCloner.cxx; src/TTree.cxx; src/TTreeResult.cxx; src/TTreeRow.cxx; src/TTreeSQL.cxx; src/TVirtualIndex.cxx; src/TVirtualTreePlayer.cxx; DICTIONARY_OPTIONS; -writeEmptyRootPCM; DEPENDENCIES; ${TREE_EXTRA_DEPENDENCIES}; Net; RIO; MathCore; LIBRARIES; ${ROOT_ATOMIC_LIBS}; ). ROOT_ADD_TEST_SUBDIRECTORY(test); ,MatchSource.DOCS,tree/tree/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/tree/CMakeLists.txt:2573,Testability,test,test,2573,owsable.h; TBranchCacheInfo.h; TBranchClones.h; TBranchElement.h; TBranch.h; TBranchObject.h; TBranchRef.h; TBranchSTL.h; TBufferSQL.h; TChainElement.h; TChain.h; TCut.h; TEntryListArray.h; TEntryListBlock.h; TEntryListFromFile.h; TEntryList.h; TEventList.h; TFriendElement.h; TIndArray.h; TLeafB.h; TLeafC.h; TLeafD.h; TLeafD32.h; TLeafElement.h; TLeafF.h; TLeafF16.h; TLeaf.h; TLeafI.h; TLeafL.h; TLeafG.h; TLeafObject.h; TLeafO.h; TLeafS.h; TNtupleD.h; TNtuple.h; TQueryResult.h; TreeUtils.h; TSelector.h; TSelectorList.h; TSelectorScalar.h; TTreeCache.h; TTreeCacheUnzip.h; TTreeCloner.h; TTree.h; TTreeResult.h; TTreeRow.h; TTreeSQL.h; TVirtualIndex.h; TVirtualTreePlayer.h; ROOT/InternalTreeUtils.hxx; ROOT/RFriendInfo.hxx; ROOT/TIOFeatures.hxx; SOURCES; src/InternalTreeUtils.cxx; src/RFriendInfo.cxx; src/TBasket.cxx; src/TBasketSQL.cxx; src/TBranchBrowsable.cxx; src/TBranchClones.cxx; src/TBranch.cxx; src/TBranchElement.cxx; src/TBranchIMTHelper.h; src/TBranchObject.cxx; src/TBranchRef.cxx; src/TBranchSTL.cxx; src/TBufferSQL.cxx; src/TChain.cxx; src/TChainElement.cxx; src/TCut.cxx; src/TEntryListArray.cxx; src/TEntryListBlock.cxx; src/TEntryList.cxx; src/TEntryListFromFile.cxx; src/TEventList.cxx; src/TFriendElement.cxx; src/TIOFeatures.cxx; src/TLeafB.cxx; src/TLeafC.cxx; src/TLeaf.cxx; src/TLeafD.cxx; src/TLeafD32.cxx; src/TLeafElement.cxx; src/TLeafF.cxx; src/TLeafF16.cxx; src/TLeafI.cxx; src/TLeafL.cxx; src/TLeafG.cxx; src/TLeafObject.cxx; src/TLeafO.cxx; src/TLeafS.cxx; src/TNtuple.cxx; src/TNtupleD.cxx; src/TQueryResult.cxx; src/TreeUtils.cxx; src/TSelector.cxx; src/TSelectorList.cxx; src/TSelectorScalar.cxx; src/TTreeCache.cxx; src/TTreeCacheUnzip.cxx; src/TTreeCloner.cxx; src/TTree.cxx; src/TTreeResult.cxx; src/TTreeRow.cxx; src/TTreeSQL.cxx; src/TVirtualIndex.cxx; src/TVirtualTreePlayer.cxx; DICTIONARY_OPTIONS; -writeEmptyRootPCM; DEPENDENCIES; ${TREE_EXTRA_DEPENDENCIES}; Net; RIO; MathCore; LIBRARIES; ${ROOT_ATOMIC_LIBS}; ). ROOT_ADD_TEST_SUBDIRECTORY(test); ,MatchSource.DOCS,tree/tree/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/CMakeLists.txt:2345,Integrability,DEPEND,DEPENDENCIES,2345,xmodules AND WIN32); set (EXTRA_DICT_OPTS NO_CXXMODULE); endif(). ROOT_STANDARD_LIBRARY_PACKAGE(TreePlayer; HEADERS; ROOT/TTreeReaderFast.hxx; ROOT/TTreeReaderValueFast.hxx; TBranchProxyClassDescriptor.h; TBranchProxyDescriptor.h; TBranchProxyDirector.h; TBranchProxy.h; TChainIndex.h; TFileDrawMap.h; TFormLeafInfo.h; TFormLeafInfoReference.h; TFriendProxyDescriptor.h; TFriendProxy.h; TRefArrayProxy.h; TRefProxy.h; TSelectorDraw.h; TSelectorEntries.h; TSimpleAnalysis.h; TTreeDrawArgsParser.h; TTreeFormula.h; TTreeFormulaManager.h; TTreeGeneratorBase.h; TTreeIndex.h; TTreePerfStats.h; TTreePlayer.h; TTreeProxyGenerator.h; TTreeReaderArray.h; TTreeReaderGenerator.h; TTreeReader.h; TTreeReaderUtils.h; TTreeReaderValue.h; TTreeTableInterface.h; ${TREEPLAYER_EXTRA_HEADERS}; SOURCES; src/TBranchProxyClassDescriptor.cxx; src/TBranchProxy.cxx; src/TBranchProxyDescriptor.cxx; src/TBranchProxyDirector.cxx; src/TChainIndex.cxx; src/TFileDrawMap.cxx; src/TFormLeafInfo.cxx; src/TFormLeafInfoReference.cxx; src/TFriendProxy.cxx; src/TFriendProxyDescriptor.cxx; src/TRefArrayProxy.cxx; src/TRefProxy.cxx; src/TSelectorDraw.cxx; src/TSelectorEntries.cxx; src/TSimpleAnalysis.cxx; src/TTreeDrawArgsParser.cxx; src/TTreeFormula.cxx; src/TTreeFormulaManager.cxx; src/TTreeGeneratorBase.cxx; src/TTreeIndex.cxx; src/TTreePerfStats.cxx; src/TTreePlayer.cxx; src/TTreeProxyGenerator.cxx; src/TTreeReaderArray.cxx; src/TTreeReader.cxx; src/TTreeReaderFast.cxx; src/TTreeReaderGenerator.cxx; src/TTreeReaderValue.cxx; src/TTreeReaderValueFast.cxx; src/TTreeTableInterface.cxx; DICTIONARY_OPTIONS; -writeEmptyRootPCM; DEPENDENCIES; Gpad; Graf; Graf3d; Hist; ${TREEPLAYER_EXTRA_DEPENDENCIES}; MathCore; RIO; Tree; ${EXTRA_DICT_OPTS}; ). if(NOT MSVC); target_sources(TreePlayer PRIVATE; src/TMPWorkerTree.cxx; src/TTreeProcessorMP.cxx; ); target_link_libraries(TreePlayer PUBLIC MultiProc); endif(). if(imt); target_sources(TreePlayer PRIVATE src/TTreeProcessorMT.cxx); endif(). ROOT_ADD_TEST_SUBDIRECTORY(test); ,MatchSource.DOCS,tree/treeplayer/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/CMakeLists.txt:2731,Testability,test,test,2731,xmodules AND WIN32); set (EXTRA_DICT_OPTS NO_CXXMODULE); endif(). ROOT_STANDARD_LIBRARY_PACKAGE(TreePlayer; HEADERS; ROOT/TTreeReaderFast.hxx; ROOT/TTreeReaderValueFast.hxx; TBranchProxyClassDescriptor.h; TBranchProxyDescriptor.h; TBranchProxyDirector.h; TBranchProxy.h; TChainIndex.h; TFileDrawMap.h; TFormLeafInfo.h; TFormLeafInfoReference.h; TFriendProxyDescriptor.h; TFriendProxy.h; TRefArrayProxy.h; TRefProxy.h; TSelectorDraw.h; TSelectorEntries.h; TSimpleAnalysis.h; TTreeDrawArgsParser.h; TTreeFormula.h; TTreeFormulaManager.h; TTreeGeneratorBase.h; TTreeIndex.h; TTreePerfStats.h; TTreePlayer.h; TTreeProxyGenerator.h; TTreeReaderArray.h; TTreeReaderGenerator.h; TTreeReader.h; TTreeReaderUtils.h; TTreeReaderValue.h; TTreeTableInterface.h; ${TREEPLAYER_EXTRA_HEADERS}; SOURCES; src/TBranchProxyClassDescriptor.cxx; src/TBranchProxy.cxx; src/TBranchProxyDescriptor.cxx; src/TBranchProxyDirector.cxx; src/TChainIndex.cxx; src/TFileDrawMap.cxx; src/TFormLeafInfo.cxx; src/TFormLeafInfoReference.cxx; src/TFriendProxy.cxx; src/TFriendProxyDescriptor.cxx; src/TRefArrayProxy.cxx; src/TRefProxy.cxx; src/TSelectorDraw.cxx; src/TSelectorEntries.cxx; src/TSimpleAnalysis.cxx; src/TTreeDrawArgsParser.cxx; src/TTreeFormula.cxx; src/TTreeFormulaManager.cxx; src/TTreeGeneratorBase.cxx; src/TTreeIndex.cxx; src/TTreePerfStats.cxx; src/TTreePlayer.cxx; src/TTreeProxyGenerator.cxx; src/TTreeReaderArray.cxx; src/TTreeReader.cxx; src/TTreeReaderFast.cxx; src/TTreeReaderGenerator.cxx; src/TTreeReaderValue.cxx; src/TTreeReaderValueFast.cxx; src/TTreeTableInterface.cxx; DICTIONARY_OPTIONS; -writeEmptyRootPCM; DEPENDENCIES; Gpad; Graf; Graf3d; Hist; ${TREEPLAYER_EXTRA_DEPENDENCIES}; MathCore; RIO; Tree; ${EXTRA_DICT_OPTS}; ). if(NOT MSVC); target_sources(TreePlayer PRIVATE; src/TMPWorkerTree.cxx; src/TTreeProcessorMP.cxx; ); target_link_libraries(TreePlayer PUBLIC MultiProc); endif(). if(imt); target_sources(TreePlayer PRIVATE src/TTreeProcessorMT.cxx); endif(). ROOT_ADD_TEST_SUBDIRECTORY(test); ,MatchSource.DOCS,tree/treeplayer/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/CMakeLists.txt:989,Integrability,DEPEND,DEPENDENCIES,989,"# Copyright (C) 1995-2019, Rene Brun and Fons Rademakers.; # All rights reserved.; #; # For the licensing terms see $ROOTSYS/LICENSE.; # For the list of contributors see $ROOTSYS/README/CREDITS. ############################################################################; # CMakeLists.txt file for building ROOT tree/treeviewer package; # @author Pere Mato, CERN; ############################################################################. ROOT_STANDARD_LIBRARY_PACKAGE(TreeViewer; HEADERS; HelpTextTV.h; TGTreeTable.h; TParallelCoordEditor.h; TParallelCoord.h; TParallelCoordRange.h; TParallelCoordVar.h; TSpiderEditor.h; TSpider.h; TTreeViewer.h; TTVLVContainer.h; TTVSession.h; SOURCES; src/HelpTextTV.cxx; src/TGTreeTable.cxx; src/TParallelCoord.cxx; src/TParallelCoordEditor.cxx; src/TParallelCoordRange.cxx; src/TParallelCoordVar.cxx; src/TSpider.cxx; src/TSpiderEditor.cxx; src/TTreeViewer.cxx; src/TTVLVContainer.cxx; src/TTVSession.cxx; DICTIONARY_OPTIONS; -writeEmptyRootPCM; DEPENDENCIES; Ged; Gui; TreePlayer; ); if (CMAKE_COMPILER_IS_GNUCC AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 9.0); target_link_libraries(TreeViewer PUBLIC stdc++fs) # https://github.com/avast/retdec/issues/842; endif(). ",MatchSource.DOCS,tree/treeviewer/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/webviewer/CMakeLists.txt:302,Integrability,DEPEND,DEPENDENCIES,302,"# Copyright (C) 1995-2022, Rene Brun and Fons Rademakers.; # All rights reserved.; #; # For the licensing terms see $ROOTSYS/LICENSE.; # For the list of contributors see $ROOTSYS/README/CREDITS. ROOT_STANDARD_LIBRARY_PACKAGE(ROOTTreeViewer; HEADERS; ROOT/RTreeViewer.hxx; SOURCES; src/RTreeViewer.cxx; DEPENDENCIES; Tree; Hist; ROOTWebDisplay; ); ",MatchSource.DOCS,tree/webviewer/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/webviewer/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/test/CMakeLists.txt:1864,Integrability,DEPEND,DEPENDENCIES,1864,"TEST(dataframe_nodes dataframe_nodes.cxx LIBRARIES ROOTDataFrame); ROOT_ADD_GTEST(dataframe_regression dataframe_regression.cxx LIBRARIES Physics ROOTDataFrame GenVector); ROOT_ADD_GTEST(dataframe_utils dataframe_utils.cxx LIBRARIES ROOTDataFrame); ROOT_ADD_GTEST(dataframe_report dataframe_report.cxx LIBRARIES ROOTDataFrame); ROOT_ADD_GTEST(dataframe_incomplete_entries dataframe_incomplete_entries.cxx LIBRARIES ROOTDataFrame). if(MSVC); set_property(TARGET dataframe_cache APPEND_STRING PROPERTY LINK_FLAGS "" -STACK:10000000""); set_property(TARGET dataframe_interface APPEND_STRING PROPERTY LINK_FLAGS "" -STACK:10000000""); endif(). ROOT_ADD_GTEST(dataframe_splitcoll_arrayview dataframe_splitcoll_arrayview.cxx LIBRARIES ROOTDataFrame); target_include_directories(dataframe_splitcoll_arrayview PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}); ROOT_GENERATE_DICTIONARY(TwoFloatsDict ${CMAKE_CURRENT_SOURCE_DIR}/TwoFloats.h MODULE dataframe_splitcoll_arrayview LINKDEF TwoFloatsLinkDef.h OPTIONS -inlineInputHeader DEPENDENCIES RIO). ROOT_ADD_GTEST(dataframe_redefine dataframe_redefine.cxx LIBRARIES ROOTDataFrame); ROOT_ADD_GTEST(dataframe_definepersample dataframe_definepersample.cxx LIBRARIES ROOTDataFrame). if(NOT MSVC OR win_broken_tests); ROOT_ADD_GTEST(dataframe_simple dataframe_simple.cxx LIBRARIES ROOTDataFrame GenVector); target_include_directories(dataframe_simple PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}); ROOT_GENERATE_DICTIONARY(DataFrameSimpleDict ${CMAKE_CURRENT_SOURCE_DIR}/MaxSlotHelper.h ${CMAKE_CURRENT_SOURCE_DIR}/SimpleFiller.h MODULE dataframe_simple; LINKDEF DataFrameSimpleLinkDef.h OPTIONS -inlineInputHeader DEPENDENCIES ROOTDataFrame Hist); endif(); ROOT_ADD_GTEST(dataframe_vecops dataframe_vecops.cxx LIBRARIES ROOTDataFrame); ROOT_ADD_GTEST(dataframe_helpers dataframe_helpers.cxx LIBRARIES ROOTDataFrame); if(MSVC); set_source_files_properties(dataframe_helpers.cxx PROPERTIES COMPILE_FLAGS /bigobj); set_source_files_properties(dataframe_cache.cxx PROPERTIES COMPILE_FLAGS /bi",MatchSource.DOCS,tree/dataframe/test/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/test/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/test/CMakeLists.txt:2485,Integrability,DEPEND,DEPENDENCIES,2485,me_splitcoll_arrayview dataframe_splitcoll_arrayview.cxx LIBRARIES ROOTDataFrame); target_include_directories(dataframe_splitcoll_arrayview PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}); ROOT_GENERATE_DICTIONARY(TwoFloatsDict ${CMAKE_CURRENT_SOURCE_DIR}/TwoFloats.h MODULE dataframe_splitcoll_arrayview LINKDEF TwoFloatsLinkDef.h OPTIONS -inlineInputHeader DEPENDENCIES RIO). ROOT_ADD_GTEST(dataframe_redefine dataframe_redefine.cxx LIBRARIES ROOTDataFrame); ROOT_ADD_GTEST(dataframe_definepersample dataframe_definepersample.cxx LIBRARIES ROOTDataFrame). if(NOT MSVC OR win_broken_tests); ROOT_ADD_GTEST(dataframe_simple dataframe_simple.cxx LIBRARIES ROOTDataFrame GenVector); target_include_directories(dataframe_simple PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}); ROOT_GENERATE_DICTIONARY(DataFrameSimpleDict ${CMAKE_CURRENT_SOURCE_DIR}/MaxSlotHelper.h ${CMAKE_CURRENT_SOURCE_DIR}/SimpleFiller.h MODULE dataframe_simple; LINKDEF DataFrameSimpleLinkDef.h OPTIONS -inlineInputHeader DEPENDENCIES ROOTDataFrame Hist); endif(); ROOT_ADD_GTEST(dataframe_vecops dataframe_vecops.cxx LIBRARIES ROOTDataFrame); ROOT_ADD_GTEST(dataframe_helpers dataframe_helpers.cxx LIBRARIES ROOTDataFrame); if(MSVC); set_source_files_properties(dataframe_helpers.cxx PROPERTIES COMPILE_FLAGS /bigobj); set_source_files_properties(dataframe_cache.cxx PROPERTIES COMPILE_FLAGS /bigobj); endif(). if(NOT (MSVC OR (APPLE AND CMAKE_SYSTEM_PROCESSOR MATCHES arm64)) OR win_broken_tests OR M1_BROKEN_TESTS); ROOT_ADD_GTEST(dataframe_snapshot dataframe_snapshot.cxx LIBRARIES ROOTDataFrame); endif(). ROOT_ADD_GTEST(dataframe_datasetspec dataframe_datasetspec.cxx LIBRARIES ROOTDataFrame); if(builtin_nlohmannjson); target_include_directories(dataframe_datasetspec PRIVATE ${CMAKE_SOURCE_DIR}/builtins); else(); target_link_libraries(dataframe_datasetspec nlohmann_json::nlohmann_json); endif(). ROOT_ADD_GTEST(dataframe_display dataframe_display.cxx LIBRARIES ROOTDataFrame); ROOT_ADD_GTEST(dataframe_ranges dataframe_ranges.cxx LIBRARIES ROOT,MatchSource.DOCS,tree/dataframe/test/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/test/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/test/CMakeLists.txt:6153,Integrability,DEPEND,DEPENDENCIES,6153,"LY); configure_file(spec.json . COPYONLY); configure_file(pyspec.json . COPYONLY); configure_file(spec_ordering_samples_withFriends.json . COPYONLY); ROOT_ADD_GTEST(datasource_csv datasource_csv.cxx LIBRARIES ROOTDataFrame); if(MSVC AND CMAKE_SIZEOF_VOID_P EQUAL 8); set_source_files_properties(dataframe_vary.cxx COMPILE_FLAGS ""-bigobj""); endif(). #### TESTS REQUIRING EXTRA ROOT FEATURES ####; if (imt); ROOT_ADD_GTEST(dataframe_concurrency dataframe_concurrency.cxx LIBRARIES ROOTDataFrame); endif(). if(ARROW_FOUND); ROOT_ADD_GTEST(datasource_arrow datasource_arrow.cxx LIBRARIES ROOTDataFrame ${ARROW_SHARED_LIB}); target_include_directories(datasource_arrow BEFORE PRIVATE ${ARROW_INCLUDE_DIR}); endif(). if(root7); ROOT_ADD_GTEST(datasource_ntuple datasource_ntuple.cxx LIBRARIES ROOTDataFrame). ROOT_STANDARD_LIBRARY_PACKAGE(NTupleStruct; NO_INSTALL_HEADERS; HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/NTupleStruct.hxx; SOURCES NTupleStruct.cxx; LINKDEF NTupleStructLinkDef.h; DEPENDENCIES RIO); configure_file(NTupleStruct.hxx . COPYONLY); if(MSVC AND NOT CMAKE_GENERATOR MATCHES Ninja); add_custom_command(TARGET NTupleStruct POST_BUILD; COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/libNTupleStruct.dll; ${CMAKE_CURRENT_BINARY_DIR}/libNTupleStruct.dll); endif(). ROOT_ADD_GTEST(dataframe_unified_constructor dataframe_unified_constructor.cxx LIBRARIES ROOTDataFrame). ROOT_GENERATE_DICTIONARY(ClassWithArraysDict ${CMAKE_CURRENT_SOURCE_DIR}/ClassWithArrays.h; MODULE datasource_ntuple LINKDEF ClassWithArraysLinkDef.h OPTIONS -inlineInputHeader; DEPENDENCIES ROOTVecOps); endif(). if(sqlite); configure_file(RSqliteDS_test.sqlite . COPYONLY); ROOT_ADD_GTEST(datasource_sqlite datasource_sqlite.cxx LIBRARIES ROOTDataFrame ${SQLITE_LIBRARIES}); target_include_directories(datasource_sqlite BEFORE PRIVATE ${SQLITE_INCLUDE_DIR}); endif(). #### PYTHON TESTS ####; if(pyroot); if(NOT MSVC OR win_broken_tests OR CMAKE_CXX_STANDARD GREATER 14); ROOT_ADD_PYUNITTEST(dataframe_m",MatchSource.DOCS,tree/dataframe/test/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/test/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/test/CMakeLists.txt:6750,Integrability,DEPEND,DEPENDENCIES,6750,"GTEST(dataframe_concurrency dataframe_concurrency.cxx LIBRARIES ROOTDataFrame); endif(). if(ARROW_FOUND); ROOT_ADD_GTEST(datasource_arrow datasource_arrow.cxx LIBRARIES ROOTDataFrame ${ARROW_SHARED_LIB}); target_include_directories(datasource_arrow BEFORE PRIVATE ${ARROW_INCLUDE_DIR}); endif(). if(root7); ROOT_ADD_GTEST(datasource_ntuple datasource_ntuple.cxx LIBRARIES ROOTDataFrame). ROOT_STANDARD_LIBRARY_PACKAGE(NTupleStruct; NO_INSTALL_HEADERS; HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/NTupleStruct.hxx; SOURCES NTupleStruct.cxx; LINKDEF NTupleStructLinkDef.h; DEPENDENCIES RIO); configure_file(NTupleStruct.hxx . COPYONLY); if(MSVC AND NOT CMAKE_GENERATOR MATCHES Ninja); add_custom_command(TARGET NTupleStruct POST_BUILD; COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/libNTupleStruct.dll; ${CMAKE_CURRENT_BINARY_DIR}/libNTupleStruct.dll); endif(). ROOT_ADD_GTEST(dataframe_unified_constructor dataframe_unified_constructor.cxx LIBRARIES ROOTDataFrame). ROOT_GENERATE_DICTIONARY(ClassWithArraysDict ${CMAKE_CURRENT_SOURCE_DIR}/ClassWithArrays.h; MODULE datasource_ntuple LINKDEF ClassWithArraysLinkDef.h OPTIONS -inlineInputHeader; DEPENDENCIES ROOTVecOps); endif(). if(sqlite); configure_file(RSqliteDS_test.sqlite . COPYONLY); ROOT_ADD_GTEST(datasource_sqlite datasource_sqlite.cxx LIBRARIES ROOTDataFrame ${SQLITE_LIBRARIES}); target_include_directories(datasource_sqlite BEFORE PRIVATE ${SQLITE_INCLUDE_DIR}); endif(). #### PYTHON TESTS ####; if(pyroot); if(NOT MSVC OR win_broken_tests OR CMAKE_CXX_STANDARD GREATER 14); ROOT_ADD_PYUNITTEST(dataframe_misc dataframe_misc.py); ROOT_ADD_PYUNITTEST(dataframe_histograms dataframe_histograms.py); ROOT_ADD_PYUNITTEST(dataframe_cache dataframe_cache.py ENVIRONMENT LEGACY_PYROOT=""off""); ROOT_ADD_PYUNITTEST(dataframe_datasetspec dataframe_datasetspec.py ENVIRONMENT LEGACY_PYROOT=""off""); endif(); if(NOT MSVC OR win_broken_tests); ROOT_ADD_PYUNITTEST(dataframe_merge_results dataframe_merge_results.py); endif(); endif(); ",MatchSource.DOCS,tree/dataframe/test/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/test/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/test/CMakeLists.txt:6379,Modifiability,CONFIG,CONFIG,6379,"ds.json . COPYONLY); ROOT_ADD_GTEST(datasource_csv datasource_csv.cxx LIBRARIES ROOTDataFrame); if(MSVC AND CMAKE_SIZEOF_VOID_P EQUAL 8); set_source_files_properties(dataframe_vary.cxx COMPILE_FLAGS ""-bigobj""); endif(). #### TESTS REQUIRING EXTRA ROOT FEATURES ####; if (imt); ROOT_ADD_GTEST(dataframe_concurrency dataframe_concurrency.cxx LIBRARIES ROOTDataFrame); endif(). if(ARROW_FOUND); ROOT_ADD_GTEST(datasource_arrow datasource_arrow.cxx LIBRARIES ROOTDataFrame ${ARROW_SHARED_LIB}); target_include_directories(datasource_arrow BEFORE PRIVATE ${ARROW_INCLUDE_DIR}); endif(). if(root7); ROOT_ADD_GTEST(datasource_ntuple datasource_ntuple.cxx LIBRARIES ROOTDataFrame). ROOT_STANDARD_LIBRARY_PACKAGE(NTupleStruct; NO_INSTALL_HEADERS; HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/NTupleStruct.hxx; SOURCES NTupleStruct.cxx; LINKDEF NTupleStructLinkDef.h; DEPENDENCIES RIO); configure_file(NTupleStruct.hxx . COPYONLY); if(MSVC AND NOT CMAKE_GENERATOR MATCHES Ninja); add_custom_command(TARGET NTupleStruct POST_BUILD; COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/libNTupleStruct.dll; ${CMAKE_CURRENT_BINARY_DIR}/libNTupleStruct.dll); endif(). ROOT_ADD_GTEST(dataframe_unified_constructor dataframe_unified_constructor.cxx LIBRARIES ROOTDataFrame). ROOT_GENERATE_DICTIONARY(ClassWithArraysDict ${CMAKE_CURRENT_SOURCE_DIR}/ClassWithArrays.h; MODULE datasource_ntuple LINKDEF ClassWithArraysLinkDef.h OPTIONS -inlineInputHeader; DEPENDENCIES ROOTVecOps); endif(). if(sqlite); configure_file(RSqliteDS_test.sqlite . COPYONLY); ROOT_ADD_GTEST(datasource_sqlite datasource_sqlite.cxx LIBRARIES ROOTDataFrame ${SQLITE_LIBRARIES}); target_include_directories(datasource_sqlite BEFORE PRIVATE ${SQLITE_INCLUDE_DIR}); endif(). #### PYTHON TESTS ####; if(pyroot); if(NOT MSVC OR win_broken_tests OR CMAKE_CXX_STANDARD GREATER 14); ROOT_ADD_PYUNITTEST(dataframe_misc dataframe_misc.py); ROOT_ADD_PYUNITTEST(dataframe_histograms dataframe_histograms.py); ROOT_ADD_PYUNITTEST(dataframe_cache da",MatchSource.DOCS,tree/dataframe/test/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/test/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/test/CMakeLists.txt:255,Testability,TEST,TESTS,255,"# Copyright (C) 1995-2019, Rene Brun and Fons Rademakers.; # All rights reserved.; #; # For the licensing terms see $ROOTSYS/LICENSE.; # For the list of contributors see $ROOTSYS/README/CREDITS. # @author Danilo Piparo CERN, Enrico Guiraud CERN. #### C++ TESTS ####; ROOT_ADD_GTEST(dataframe_friends dataframe_friends.cxx LIBRARIES ROOTDataFrame); ROOT_ADD_GTEST(dataframe_colnames dataframe_colnames.cxx LIBRARIES ROOTDataFrame); ROOT_ADD_GTEST(dataframe_cache dataframe_cache.cxx LIBRARIES ROOTDataFrame); ROOT_ADD_GTEST(dataframe_callbacks dataframe_callbacks.cxx LIBRARIES ROOTDataFrame); ROOT_ADD_GTEST(dataframe_cloning dataframe_cloning.cxx LIBRARIES ROOTDataFrame); ROOT_ADD_GTEST(dataframe_histomodels dataframe_histomodels.cxx LIBRARIES ROOTDataFrame); ROOT_ADD_GTEST(dataframe_interface dataframe_interface.cxx LIBRARIES ROOTDataFrame); ROOT_ADD_GTEST(dataframe_nodes dataframe_nodes.cxx LIBRARIES ROOTDataFrame); ROOT_ADD_GTEST(dataframe_regression dataframe_regression.cxx LIBRARIES Physics ROOTDataFrame GenVector); ROOT_ADD_GTEST(dataframe_utils dataframe_utils.cxx LIBRARIES ROOTDataFrame); ROOT_ADD_GTEST(dataframe_report dataframe_report.cxx LIBRARIES ROOTDataFrame); ROOT_ADD_GTEST(dataframe_incomplete_entries dataframe_incomplete_entries.cxx LIBRARIES ROOTDataFrame). if(MSVC); set_property(TARGET dataframe_cache APPEND_STRING PROPERTY LINK_FLAGS "" -STACK:10000000""); set_property(TARGET dataframe_interface APPEND_STRING PROPERTY LINK_FLAGS "" -STACK:10000000""); endif(). ROOT_ADD_GTEST(dataframe_splitcoll_arrayview dataframe_splitcoll_arrayview.cxx LIBRARIES ROOTDataFrame); target_include_directories(dataframe_splitcoll_arrayview PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}); ROOT_GENERATE_DICTIONARY(TwoFloatsDict ${CMAKE_CURRENT_SOURCE_DIR}/TwoFloats.h MODULE dataframe_splitcoll_arrayview LINKDEF TwoFloatsLinkDef.h OPTIONS -inlineInputHeader DEPENDENCIES RIO). ROOT_ADD_GTEST(dataframe_redefine dataframe_redefine.cxx LIBRARIES ROOTDataFrame); ROOT_ADD_GTEST(dataframe_definepers",MatchSource.DOCS,tree/dataframe/test/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/test/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/test/CMakeLists.txt:4216,Testability,TEST,TESTS,4216,"_display.cxx LIBRARIES ROOTDataFrame); ROOT_ADD_GTEST(dataframe_ranges dataframe_ranges.cxx LIBRARIES ROOTDataFrame); ROOT_ADD_GTEST(dataframe_leaves dataframe_leaves.cxx LIBRARIES ROOTDataFrame); ROOT_ADD_GTEST(dataframe_resptr dataframe_resptr.cxx LIBRARIES ROOTDataFrame); ROOT_ADD_GTEST(dataframe_take dataframe_take.cxx LIBRARIES ROOTDataFrame); ROOT_ADD_GTEST(dataframe_entrylist dataframe_entrylist.cxx LIBRARIES ROOTDataFrame); ROOT_ADD_GTEST(dataframe_merge_results dataframe_merge_results.cxx LIBRARIES ROOTDataFrame); ROOT_ADD_GTEST(dataframe_samplecallback dataframe_samplecallback.cxx CounterHelper.h LIBRARIES ROOTDataFrame); ROOT_ADD_GTEST(dataframe_vary dataframe_vary.cxx LIBRARIES ROOTDataFrame); ROOT_ADD_GTEST(dataframe_compgraph dataframe_compgraph.cxx LIBRARIES ROOTDataFrame). #### TESTS FOR DIFFERENT DATASOURCES ####; if(MSVC AND MSVC_VERSION GREATER_EQUAL 1925 AND MSVC_VERSION LESS 1929 OR CMAKE_CXX_STANDARD LESS 17); # TODO: remove this workaround for MS compiler bug #1441527 once fixed; string(REPLACE ""-Od -Z7"" ""-O2"" CMAKE_CXX_FLAGS_DEBUG ""${CMAKE_CXX_FLAGS_DEBUG}""); string(REPLACE ""-Z7"" """" CMAKE_CXX_FLAGS_RELWITHDEBINFO ""${CMAKE_CXX_FLAGS_RELWITHDEBINFO}""); endif(). ROOT_ADD_GTEST(datasource_more datasource_more.cxx LIBRARIES ROOTDataFrame); ROOT_ADD_GTEST(datasource_root datasource_root.cxx LIBRARIES ROOTDataFrame); ROOT_ADD_GTEST(datasource_trivial datasource_trivial.cxx LIBRARIES ROOTDataFrame); ROOT_ADD_GTEST(datasource_lazy datasource_lazy.cxx LIBRARIES ROOTDataFrame); configure_file(RCsvDS_test_headers.csv . COPYONLY); configure_file(RCsvDS_test_noheaders.csv . COPYONLY); configure_file(RCsvDS_test_empty.csv . COPYONLY); configure_file(RCsvDS_test_win.csv . COPYONLY); configure_file(RCsvDS_test_NaNs.csv . COPYONLY); configure_file(spec.json . COPYONLY); configure_file(pyspec.json . COPYONLY); configure_file(spec_ordering_samples_withFriends.json . COPYONLY); ROOT_ADD_GTEST(datasource_csv datasource_csv.cxx LIBRARIES ROOTDataFrame); if(MSVC AND",MatchSource.DOCS,tree/dataframe/test/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/test/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/test/CMakeLists.txt:5529,Testability,TEST,TESTS,5529,"AGS_RELWITHDEBINFO}""); endif(). ROOT_ADD_GTEST(datasource_more datasource_more.cxx LIBRARIES ROOTDataFrame); ROOT_ADD_GTEST(datasource_root datasource_root.cxx LIBRARIES ROOTDataFrame); ROOT_ADD_GTEST(datasource_trivial datasource_trivial.cxx LIBRARIES ROOTDataFrame); ROOT_ADD_GTEST(datasource_lazy datasource_lazy.cxx LIBRARIES ROOTDataFrame); configure_file(RCsvDS_test_headers.csv . COPYONLY); configure_file(RCsvDS_test_noheaders.csv . COPYONLY); configure_file(RCsvDS_test_empty.csv . COPYONLY); configure_file(RCsvDS_test_win.csv . COPYONLY); configure_file(RCsvDS_test_NaNs.csv . COPYONLY); configure_file(spec.json . COPYONLY); configure_file(pyspec.json . COPYONLY); configure_file(spec_ordering_samples_withFriends.json . COPYONLY); ROOT_ADD_GTEST(datasource_csv datasource_csv.cxx LIBRARIES ROOTDataFrame); if(MSVC AND CMAKE_SIZEOF_VOID_P EQUAL 8); set_source_files_properties(dataframe_vary.cxx COMPILE_FLAGS ""-bigobj""); endif(). #### TESTS REQUIRING EXTRA ROOT FEATURES ####; if (imt); ROOT_ADD_GTEST(dataframe_concurrency dataframe_concurrency.cxx LIBRARIES ROOTDataFrame); endif(). if(ARROW_FOUND); ROOT_ADD_GTEST(datasource_arrow datasource_arrow.cxx LIBRARIES ROOTDataFrame ${ARROW_SHARED_LIB}); target_include_directories(datasource_arrow BEFORE PRIVATE ${ARROW_INCLUDE_DIR}); endif(). if(root7); ROOT_ADD_GTEST(datasource_ntuple datasource_ntuple.cxx LIBRARIES ROOTDataFrame). ROOT_STANDARD_LIBRARY_PACKAGE(NTupleStruct; NO_INSTALL_HEADERS; HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/NTupleStruct.hxx; SOURCES NTupleStruct.cxx; LINKDEF NTupleStructLinkDef.h; DEPENDENCIES RIO); configure_file(NTupleStruct.hxx . COPYONLY); if(MSVC AND NOT CMAKE_GENERATOR MATCHES Ninja); add_custom_command(TARGET NTupleStruct POST_BUILD; COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/libNTupleStruct.dll; ${CMAKE_CURRENT_BINARY_DIR}/libNTupleStruct.dll); endif(). ROOT_ADD_GTEST(dataframe_unified_constructor dataframe_unified_constructor.cxx LIBRARIES ROOTDataFrame). ROOT_GENER",MatchSource.DOCS,tree/dataframe/test/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/test/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/test/CMakeLists.txt:7053,Testability,TEST,TESTS,7053,"GTEST(dataframe_concurrency dataframe_concurrency.cxx LIBRARIES ROOTDataFrame); endif(). if(ARROW_FOUND); ROOT_ADD_GTEST(datasource_arrow datasource_arrow.cxx LIBRARIES ROOTDataFrame ${ARROW_SHARED_LIB}); target_include_directories(datasource_arrow BEFORE PRIVATE ${ARROW_INCLUDE_DIR}); endif(). if(root7); ROOT_ADD_GTEST(datasource_ntuple datasource_ntuple.cxx LIBRARIES ROOTDataFrame). ROOT_STANDARD_LIBRARY_PACKAGE(NTupleStruct; NO_INSTALL_HEADERS; HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/NTupleStruct.hxx; SOURCES NTupleStruct.cxx; LINKDEF NTupleStructLinkDef.h; DEPENDENCIES RIO); configure_file(NTupleStruct.hxx . COPYONLY); if(MSVC AND NOT CMAKE_GENERATOR MATCHES Ninja); add_custom_command(TARGET NTupleStruct POST_BUILD; COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/libNTupleStruct.dll; ${CMAKE_CURRENT_BINARY_DIR}/libNTupleStruct.dll); endif(). ROOT_ADD_GTEST(dataframe_unified_constructor dataframe_unified_constructor.cxx LIBRARIES ROOTDataFrame). ROOT_GENERATE_DICTIONARY(ClassWithArraysDict ${CMAKE_CURRENT_SOURCE_DIR}/ClassWithArrays.h; MODULE datasource_ntuple LINKDEF ClassWithArraysLinkDef.h OPTIONS -inlineInputHeader; DEPENDENCIES ROOTVecOps); endif(). if(sqlite); configure_file(RSqliteDS_test.sqlite . COPYONLY); ROOT_ADD_GTEST(datasource_sqlite datasource_sqlite.cxx LIBRARIES ROOTDataFrame ${SQLITE_LIBRARIES}); target_include_directories(datasource_sqlite BEFORE PRIVATE ${SQLITE_INCLUDE_DIR}); endif(). #### PYTHON TESTS ####; if(pyroot); if(NOT MSVC OR win_broken_tests OR CMAKE_CXX_STANDARD GREATER 14); ROOT_ADD_PYUNITTEST(dataframe_misc dataframe_misc.py); ROOT_ADD_PYUNITTEST(dataframe_histograms dataframe_histograms.py); ROOT_ADD_PYUNITTEST(dataframe_cache dataframe_cache.py ENVIRONMENT LEGACY_PYROOT=""off""); ROOT_ADD_PYUNITTEST(dataframe_datasetspec dataframe_datasetspec.py ENVIRONMENT LEGACY_PYROOT=""off""); endif(); if(NOT MSVC OR win_broken_tests); ROOT_ADD_PYUNITTEST(dataframe_merge_results dataframe_merge_results.py); endif(); endif(); ",MatchSource.DOCS,tree/dataframe/test/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/test/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/test/CMakeLists.txt:2385,Usability,Simpl,SimpleFiller,2385,"K:10000000""); set_property(TARGET dataframe_interface APPEND_STRING PROPERTY LINK_FLAGS "" -STACK:10000000""); endif(). ROOT_ADD_GTEST(dataframe_splitcoll_arrayview dataframe_splitcoll_arrayview.cxx LIBRARIES ROOTDataFrame); target_include_directories(dataframe_splitcoll_arrayview PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}); ROOT_GENERATE_DICTIONARY(TwoFloatsDict ${CMAKE_CURRENT_SOURCE_DIR}/TwoFloats.h MODULE dataframe_splitcoll_arrayview LINKDEF TwoFloatsLinkDef.h OPTIONS -inlineInputHeader DEPENDENCIES RIO). ROOT_ADD_GTEST(dataframe_redefine dataframe_redefine.cxx LIBRARIES ROOTDataFrame); ROOT_ADD_GTEST(dataframe_definepersample dataframe_definepersample.cxx LIBRARIES ROOTDataFrame). if(NOT MSVC OR win_broken_tests); ROOT_ADD_GTEST(dataframe_simple dataframe_simple.cxx LIBRARIES ROOTDataFrame GenVector); target_include_directories(dataframe_simple PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}); ROOT_GENERATE_DICTIONARY(DataFrameSimpleDict ${CMAKE_CURRENT_SOURCE_DIR}/MaxSlotHelper.h ${CMAKE_CURRENT_SOURCE_DIR}/SimpleFiller.h MODULE dataframe_simple; LINKDEF DataFrameSimpleLinkDef.h OPTIONS -inlineInputHeader DEPENDENCIES ROOTDataFrame Hist); endif(); ROOT_ADD_GTEST(dataframe_vecops dataframe_vecops.cxx LIBRARIES ROOTDataFrame); ROOT_ADD_GTEST(dataframe_helpers dataframe_helpers.cxx LIBRARIES ROOTDataFrame); if(MSVC); set_source_files_properties(dataframe_helpers.cxx PROPERTIES COMPILE_FLAGS /bigobj); set_source_files_properties(dataframe_cache.cxx PROPERTIES COMPILE_FLAGS /bigobj); endif(). if(NOT (MSVC OR (APPLE AND CMAKE_SYSTEM_PROCESSOR MATCHES arm64)) OR win_broken_tests OR M1_BROKEN_TESTS); ROOT_ADD_GTEST(dataframe_snapshot dataframe_snapshot.cxx LIBRARIES ROOTDataFrame); endif(). ROOT_ADD_GTEST(dataframe_datasetspec dataframe_datasetspec.cxx LIBRARIES ROOTDataFrame); if(builtin_nlohmannjson); target_include_directories(dataframe_datasetspec PRIVATE ${CMAKE_SOURCE_DIR}/builtins); else(); target_link_libraries(dataframe_datasetspec nlohmann_json::nlohmann_json); endif(). ROOT_ADD",MatchSource.DOCS,tree/dataframe/test/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/test/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/test/CMakeLists.txt:1791,Availability,avail,available,1791,"xx LIBRARIES ROOTNTuple CustomStruct); ROOT_ADD_GTEST(ntuple_bulk ntuple_bulk.cxx LIBRARIES ROOTNTuple CustomStruct); ROOT_ADD_GTEST(ntuple_cast ntuple_cast.cxx LIBRARIES ROOTNTuple); ROOT_ADD_GTEST(ntuple_checksum ntuple_checksum.cxx ntuple_test.cxx LIBRARIES ROOTNTuple); ROOT_ADD_GTEST(ntuple_cluster ntuple_cluster.cxx LIBRARIES ROOTNTuple); ROOT_ADD_GTEST(ntuple_compat ntuple_compat.cxx RXTuple.cxx LIBRARIES ROOTNTuple xxHash::xxHash); ROOT_GENERATE_DICTIONARY(RXTupleDict ${CMAKE_CURRENT_SOURCE_DIR}/RXTuple.hxx; MODULE ntuple_compat; LINKDEF RXTupleLinkDef.h; DEPENDENCIES RIO); ROOT_ADD_GTEST(ntuple_descriptor ntuple_descriptor.cxx LIBRARIES ROOTNTuple CustomStruct); ROOT_GENERATE_DICTIONARY(RNTupleDescriptorDict ${CMAKE_CURRENT_SOURCE_DIR}/RNTupleDescriptorDict.hxx; MODULE ntuple_descriptor; LINKDEF RNTupleDescriptorLinkDef.h; OPTIONS -inlineInputHeader; DEPENDENCIES RIO CustomStruct); ROOT_ADD_GTEST(ntuple_endian ntuple_endian.cxx LIBRARIES ROOTNTuple); if(NOT MSVC); # The unit test relies on fork(), which is not available on Windows.; ROOT_ADD_GTEST(ntuple_evolution ntuple_evolution.cxx LIBRARIES ROOTNTuple); endif(); ROOT_ADD_GTEST(ntuple_friends ntuple_friends.cxx LIBRARIES ROOTNTuple CustomStruct); ROOT_ADD_GTEST(ntuple_index ntuple_index.cxx LIBRARIES ROOTNTuple); ROOT_ADD_GTEST(ntuple_merger ntuple_merger.cxx LIBRARIES ROOTNTuple CustomStruct ZLIB::ZLIB); ROOT_ADD_GTEST(ntuple_metrics ntuple_metrics.cxx LIBRARIES ROOTNTuple CustomStruct); ROOT_ADD_GTEST(ntuple_model ntuple_model.cxx LIBRARIES ROOTNTuple CustomStruct); ROOT_ADD_GTEST(ntuple_multi_column ntuple_multi_column.cxx LIBRARIES ROOTNTuple); ROOT_ADD_GTEST(ntuple_packing ntuple_packing.cxx LIBRARIES ROOTNTuple CustomStruct); ROOT_ADD_GTEST(ntuple_pages ntuple_pages.cxx LIBRARIES ROOTNTuple CustomStruct); ROOT_ADD_GTEST(ntuple_print ntuple_print.cxx LIBRARIES ROOTNTuple CustomStruct); ROOT_ADD_GTEST(ntuple_processor ntuple_processor.cxx LIBRARIES ROOTNTuple); ROOT_ADD_GTEST(ntuple_project ntuple_proj",MatchSource.DOCS,tree/ntuple/v7/test/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/test/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/test/CMakeLists.txt:399,Integrability,DEPEND,DEPENDENCIES,399,"# Copyright (C) 1995-2019, Rene Brun and Fons Rademakers.; # All rights reserved.; #; # For the licensing terms see $ROOTSYS/LICENSE.; # For the list of contributors see $ROOTSYS/README/CREDITS. # @author Jakob Blomer CERN. ROOT_STANDARD_LIBRARY_PACKAGE(CustomStruct; NO_INSTALL_HEADERS; HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/CustomStruct.hxx; SOURCES CustomStruct.cxx; LINKDEF CustomStructLinkDef.h; DEPENDENCIES RIO); configure_file(CustomStruct.hxx . COPYONLY); if(MSVC AND NOT CMAKE_GENERATOR MATCHES Ninja); add_custom_command(TARGET CustomStruct POST_BUILD; COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/libCustomStruct.dll; ${CMAKE_CURRENT_BINARY_DIR}/libCustomStruct.dll); endif(). ROOT_ADD_GTEST(ntuple_basics ntuple_basics.cxx LIBRARIES ROOTNTuple CustomStruct); ROOT_ADD_GTEST(ntuple_bulk ntuple_bulk.cxx LIBRARIES ROOTNTuple CustomStruct); ROOT_ADD_GTEST(ntuple_cast ntuple_cast.cxx LIBRARIES ROOTNTuple); ROOT_ADD_GTEST(ntuple_checksum ntuple_checksum.cxx ntuple_test.cxx LIBRARIES ROOTNTuple); ROOT_ADD_GTEST(ntuple_cluster ntuple_cluster.cxx LIBRARIES ROOTNTuple); ROOT_ADD_GTEST(ntuple_compat ntuple_compat.cxx RXTuple.cxx LIBRARIES ROOTNTuple xxHash::xxHash); ROOT_GENERATE_DICTIONARY(RXTupleDict ${CMAKE_CURRENT_SOURCE_DIR}/RXTuple.hxx; MODULE ntuple_compat; LINKDEF RXTupleLinkDef.h; DEPENDENCIES RIO); ROOT_ADD_GTEST(ntuple_descriptor ntuple_descriptor.cxx LIBRARIES ROOTNTuple CustomStruct); ROOT_GENERATE_DICTIONARY(RNTupleDescriptorDict ${CMAKE_CURRENT_SOURCE_DIR}/RNTupleDescriptorDict.hxx; MODULE ntuple_descriptor; LINKDEF RNTupleDescriptorLinkDef.h; OPTIONS -inlineInputHeader; DEPENDENCIES RIO CustomStruct); ROOT_ADD_GTEST(ntuple_endian ntuple_endian.cxx LIBRARIES ROOTNTuple); if(NOT MSVC); # The unit test relies on fork(), which is not available on Windows.; ROOT_ADD_GTEST(ntuple_evolution ntuple_evolution.cxx LIBRARIES ROOTNTuple); endif(); ROOT_ADD_GTEST(ntuple_friends ntuple_friends.cxx LIBRARIES ROOTNTuple CustomStruct); ROOT_ADD_GTEST(nt",MatchSource.DOCS,tree/ntuple/v7/test/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/test/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/test/CMakeLists.txt:1326,Integrability,DEPEND,DEPENDENCIES,1326,"uct.cxx; LINKDEF CustomStructLinkDef.h; DEPENDENCIES RIO); configure_file(CustomStruct.hxx . COPYONLY); if(MSVC AND NOT CMAKE_GENERATOR MATCHES Ninja); add_custom_command(TARGET CustomStruct POST_BUILD; COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/libCustomStruct.dll; ${CMAKE_CURRENT_BINARY_DIR}/libCustomStruct.dll); endif(). ROOT_ADD_GTEST(ntuple_basics ntuple_basics.cxx LIBRARIES ROOTNTuple CustomStruct); ROOT_ADD_GTEST(ntuple_bulk ntuple_bulk.cxx LIBRARIES ROOTNTuple CustomStruct); ROOT_ADD_GTEST(ntuple_cast ntuple_cast.cxx LIBRARIES ROOTNTuple); ROOT_ADD_GTEST(ntuple_checksum ntuple_checksum.cxx ntuple_test.cxx LIBRARIES ROOTNTuple); ROOT_ADD_GTEST(ntuple_cluster ntuple_cluster.cxx LIBRARIES ROOTNTuple); ROOT_ADD_GTEST(ntuple_compat ntuple_compat.cxx RXTuple.cxx LIBRARIES ROOTNTuple xxHash::xxHash); ROOT_GENERATE_DICTIONARY(RXTupleDict ${CMAKE_CURRENT_SOURCE_DIR}/RXTuple.hxx; MODULE ntuple_compat; LINKDEF RXTupleLinkDef.h; DEPENDENCIES RIO); ROOT_ADD_GTEST(ntuple_descriptor ntuple_descriptor.cxx LIBRARIES ROOTNTuple CustomStruct); ROOT_GENERATE_DICTIONARY(RNTupleDescriptorDict ${CMAKE_CURRENT_SOURCE_DIR}/RNTupleDescriptorDict.hxx; MODULE ntuple_descriptor; LINKDEF RNTupleDescriptorLinkDef.h; OPTIONS -inlineInputHeader; DEPENDENCIES RIO CustomStruct); ROOT_ADD_GTEST(ntuple_endian ntuple_endian.cxx LIBRARIES ROOTNTuple); if(NOT MSVC); # The unit test relies on fork(), which is not available on Windows.; ROOT_ADD_GTEST(ntuple_evolution ntuple_evolution.cxx LIBRARIES ROOTNTuple); endif(); ROOT_ADD_GTEST(ntuple_friends ntuple_friends.cxx LIBRARIES ROOTNTuple CustomStruct); ROOT_ADD_GTEST(ntuple_index ntuple_index.cxx LIBRARIES ROOTNTuple); ROOT_ADD_GTEST(ntuple_merger ntuple_merger.cxx LIBRARIES ROOTNTuple CustomStruct ZLIB::ZLIB); ROOT_ADD_GTEST(ntuple_metrics ntuple_metrics.cxx LIBRARIES ROOTNTuple CustomStruct); ROOT_ADD_GTEST(ntuple_model ntuple_model.cxx LIBRARIES ROOTNTuple CustomStruct); ROOT_ADD_GTEST(ntuple_multi_column ntuple_multi_",MatchSource.DOCS,tree/ntuple/v7/test/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/test/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/test/CMakeLists.txt:1628,Integrability,DEPEND,DEPENDENCIES,1628,"ll; ${CMAKE_CURRENT_BINARY_DIR}/libCustomStruct.dll); endif(). ROOT_ADD_GTEST(ntuple_basics ntuple_basics.cxx LIBRARIES ROOTNTuple CustomStruct); ROOT_ADD_GTEST(ntuple_bulk ntuple_bulk.cxx LIBRARIES ROOTNTuple CustomStruct); ROOT_ADD_GTEST(ntuple_cast ntuple_cast.cxx LIBRARIES ROOTNTuple); ROOT_ADD_GTEST(ntuple_checksum ntuple_checksum.cxx ntuple_test.cxx LIBRARIES ROOTNTuple); ROOT_ADD_GTEST(ntuple_cluster ntuple_cluster.cxx LIBRARIES ROOTNTuple); ROOT_ADD_GTEST(ntuple_compat ntuple_compat.cxx RXTuple.cxx LIBRARIES ROOTNTuple xxHash::xxHash); ROOT_GENERATE_DICTIONARY(RXTupleDict ${CMAKE_CURRENT_SOURCE_DIR}/RXTuple.hxx; MODULE ntuple_compat; LINKDEF RXTupleLinkDef.h; DEPENDENCIES RIO); ROOT_ADD_GTEST(ntuple_descriptor ntuple_descriptor.cxx LIBRARIES ROOTNTuple CustomStruct); ROOT_GENERATE_DICTIONARY(RNTupleDescriptorDict ${CMAKE_CURRENT_SOURCE_DIR}/RNTupleDescriptorDict.hxx; MODULE ntuple_descriptor; LINKDEF RNTupleDescriptorLinkDef.h; OPTIONS -inlineInputHeader; DEPENDENCIES RIO CustomStruct); ROOT_ADD_GTEST(ntuple_endian ntuple_endian.cxx LIBRARIES ROOTNTuple); if(NOT MSVC); # The unit test relies on fork(), which is not available on Windows.; ROOT_ADD_GTEST(ntuple_evolution ntuple_evolution.cxx LIBRARIES ROOTNTuple); endif(); ROOT_ADD_GTEST(ntuple_friends ntuple_friends.cxx LIBRARIES ROOTNTuple CustomStruct); ROOT_ADD_GTEST(ntuple_index ntuple_index.cxx LIBRARIES ROOTNTuple); ROOT_ADD_GTEST(ntuple_merger ntuple_merger.cxx LIBRARIES ROOTNTuple CustomStruct ZLIB::ZLIB); ROOT_ADD_GTEST(ntuple_metrics ntuple_metrics.cxx LIBRARIES ROOTNTuple CustomStruct); ROOT_ADD_GTEST(ntuple_model ntuple_model.cxx LIBRARIES ROOTNTuple CustomStruct); ROOT_ADD_GTEST(ntuple_multi_column ntuple_multi_column.cxx LIBRARIES ROOTNTuple); ROOT_ADD_GTEST(ntuple_packing ntuple_packing.cxx LIBRARIES ROOTNTuple CustomStruct); ROOT_ADD_GTEST(ntuple_pages ntuple_pages.cxx LIBRARIES ROOTNTuple CustomStruct); ROOT_ADD_GTEST(ntuple_print ntuple_print.cxx LIBRARIES ROOTNTuple CustomStruct); ROOT_ADD_",MatchSource.DOCS,tree/ntuple/v7/test/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/test/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/test/CMakeLists.txt:3281,Integrability,DEPEND,DEPENDENCIES,3281,"Struct); ROOT_ADD_GTEST(ntuple_multi_column ntuple_multi_column.cxx LIBRARIES ROOTNTuple); ROOT_ADD_GTEST(ntuple_packing ntuple_packing.cxx LIBRARIES ROOTNTuple CustomStruct); ROOT_ADD_GTEST(ntuple_pages ntuple_pages.cxx LIBRARIES ROOTNTuple CustomStruct); ROOT_ADD_GTEST(ntuple_print ntuple_print.cxx LIBRARIES ROOTNTuple CustomStruct); ROOT_ADD_GTEST(ntuple_processor ntuple_processor.cxx LIBRARIES ROOTNTuple); ROOT_ADD_GTEST(ntuple_project ntuple_project.cxx LIBRARIES ROOTNTuple); ROOT_ADD_GTEST(ntuple_modelext ntuple_modelext.cxx LIBRARIES ROOTNTuple MathCore CustomStruct); ROOT_ADD_GTEST(ntuple_serialize ntuple_serialize.cxx LIBRARIES ROOTNTuple CustomStruct); if(NOT MSVC OR llvm13_broken_tests); ROOT_ADD_GTEST(ntuple_types ntuple_types.cxx LIBRARIES ROOTNTuple CustomStruct); ROOT_GENERATE_DICTIONARY(ProxiedSTLContainerDict ${CMAKE_CURRENT_SOURCE_DIR}/ProxiedSTLContainer.hxx; MODULE ntuple_types; LINKDEF ProxiedSTLContainerLinkDef.h; OPTIONS -inlineInputHeader; DEPENDENCIES CustomStruct); endif(); ROOT_ADD_GTEST(ntuple_view ntuple_view.cxx LIBRARIES ROOTNTuple CustomStruct); ROOT_ADD_GTEST(ntuple_zip ntuple_zip.cxx LIBRARIES ROOTNTuple CustomStruct). ROOT_ADD_GTEST(rfield_check rfield_check.cxx LIBRARIES ROOTNTuple CustomStruct); ROOT_ADD_GTEST(rfield_class rfield_class.cxx LIBRARIES ROOTNTuple CustomStruct Physics); ROOT_ADD_GTEST(rfield_string rfield_string.cxx LIBRARIES ROOTNTuple CustomStruct); ROOT_ADD_GTEST(rfield_variant rfield_variant.cxx LIBRARIES ROOTNTuple CustomStruct); if(MSVC); # Necessary to have TClass handle very large variants; set_property(TARGET rfield_variant APPEND_STRING PROPERTY LINK_FLAGS "" -STACK:8000000""); endif(); ROOT_ADD_GTEST(rfield_vector rfield_vector.cxx LIBRARIES ROOTNTuple CustomStruct). ROOT_ADD_GTEST(ntuple_minifile ntuple_minifile.cxx LIBRARIES ROOTNTuple Physics Tree CustomStruct); ROOT_ADD_GTEST(ntuple_show ntuple_show.cxx LIBRARIES ROOTNTuple CustomStruct); ROOT_ADD_GTEST(ntuple_storage ntuple_storage.cxx LIBRARIES ROOTNTup",MatchSource.DOCS,tree/ntuple/v7/test/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/test/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/test/CMakeLists.txt:4870,Integrability,DEPEND,DEPENDENCIES,4870,"ge variants; set_property(TARGET rfield_variant APPEND_STRING PROPERTY LINK_FLAGS "" -STACK:8000000""); endif(); ROOT_ADD_GTEST(rfield_vector rfield_vector.cxx LIBRARIES ROOTNTuple CustomStruct). ROOT_ADD_GTEST(ntuple_minifile ntuple_minifile.cxx LIBRARIES ROOTNTuple Physics Tree CustomStruct); ROOT_ADD_GTEST(ntuple_show ntuple_show.cxx LIBRARIES ROOTNTuple CustomStruct); ROOT_ADD_GTEST(ntuple_storage ntuple_storage.cxx LIBRARIES ROOTNTuple MathCore CustomStruct); ROOT_ADD_GTEST(ntuple_extended ntuple_extended.cxx LIBRARIES ROOTNTuple MathCore CustomStruct). ROOT_ADD_GTEST(ntuple_parallel_writer ntuple_parallel_writer.cxx LIBRARIES ROOTNTuple). ROOT_ADD_GTEST(ntuple_limits ntuple_limits.cxx LIBRARIES ROOTNTuple). ROOT_ADD_GTEST(rfield_streamer rfield_streamer.cxx StreamerField.cxx StreamerFieldXML.cxx LIBRARIES ROOTNTuple); ROOT_GENERATE_DICTIONARY(StreamerFieldDict ${CMAKE_CURRENT_SOURCE_DIR}/StreamerField.hxx; MODULE rfield_streamer LINKDEF StreamerFieldLinkDef.h OPTIONS -inlineInputHeader; DEPENDENCIES RIO). if(MSVC); set(genreflex ${CMAKE_BINARY_DIR}/bin/genreflex.exe); set(command ${CMAKE_COMMAND} -E env ""ROOTIGNOREPREFIX=1"" ${genreflex}); else(); set(genreflex ${CMAKE_BINARY_DIR}/bin/genreflex); set(command ${CMAKE_COMMAND} -E env ""LD_LIBRARY_PATH=${CMAKE_BINARY_DIR}/lib:$ENV{LD_LIBRARY_PATH}""; ""ROOTIGNOREPREFIX=1"" ${genreflex}); endif(). configure_file(StreamerFieldXML.h . COPYONLY); configure_file(StreamerFieldSelection.xml . COPYONLY); add_custom_command(OUTPUT StreamerFieldXMLDict.cxx StreamerFieldXMLDict_rdict.pcm; COMMAND ${command} StreamerFieldXML.h -o StreamerFieldXMLDict.cxx -s StreamerFieldSelection.xml; DEPENDS rootcling StreamerFieldXML.h StreamerFieldSelection.xml); add_library(StreamerFieldXMLDict OBJECT StreamerFieldXMLDict.cxx); set_target_properties(StreamerFieldXMLDict PROPERTIES POSITION_INDEPENDENT_CODE TRUE); target_sources(rfield_streamer PRIVATE $<TARGET_OBJECTS:StreamerFieldXMLDict>); target_compile_options(StreamerFieldXMLDict PRIVATE $",MatchSource.DOCS,tree/ntuple/v7/test/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/test/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/test/CMakeLists.txt:5511,Integrability,DEPEND,DEPENDS,5511,"EST(ntuple_limits ntuple_limits.cxx LIBRARIES ROOTNTuple). ROOT_ADD_GTEST(rfield_streamer rfield_streamer.cxx StreamerField.cxx StreamerFieldXML.cxx LIBRARIES ROOTNTuple); ROOT_GENERATE_DICTIONARY(StreamerFieldDict ${CMAKE_CURRENT_SOURCE_DIR}/StreamerField.hxx; MODULE rfield_streamer LINKDEF StreamerFieldLinkDef.h OPTIONS -inlineInputHeader; DEPENDENCIES RIO). if(MSVC); set(genreflex ${CMAKE_BINARY_DIR}/bin/genreflex.exe); set(command ${CMAKE_COMMAND} -E env ""ROOTIGNOREPREFIX=1"" ${genreflex}); else(); set(genreflex ${CMAKE_BINARY_DIR}/bin/genreflex); set(command ${CMAKE_COMMAND} -E env ""LD_LIBRARY_PATH=${CMAKE_BINARY_DIR}/lib:$ENV{LD_LIBRARY_PATH}""; ""ROOTIGNOREPREFIX=1"" ${genreflex}); endif(). configure_file(StreamerFieldXML.h . COPYONLY); configure_file(StreamerFieldSelection.xml . COPYONLY); add_custom_command(OUTPUT StreamerFieldXMLDict.cxx StreamerFieldXMLDict_rdict.pcm; COMMAND ${command} StreamerFieldXML.h -o StreamerFieldXMLDict.cxx -s StreamerFieldSelection.xml; DEPENDS rootcling StreamerFieldXML.h StreamerFieldSelection.xml); add_library(StreamerFieldXMLDict OBJECT StreamerFieldXMLDict.cxx); set_target_properties(StreamerFieldXMLDict PROPERTIES POSITION_INDEPENDENT_CODE TRUE); target_sources(rfield_streamer PRIVATE $<TARGET_OBJECTS:StreamerFieldXMLDict>); target_compile_options(StreamerFieldXMLDict PRIVATE $<TARGET_PROPERTY:rfield_streamer,COMPILE_OPTIONS>); target_compile_definitions(StreamerFieldXMLDict PRIVATE $<TARGET_PROPERTY:rfield_streamer,COMPILE_DEFINITIONS>); target_compile_features(StreamerFieldXMLDict PRIVATE $<TARGET_PROPERTY:rfield_streamer,COMPILE_FEATURES>); target_include_directories(StreamerFieldXMLDict PRIVATE $<TARGET_PROPERTY:rfield_streamer,INCLUDE_DIRECTORIES>); if(MSVC); add_custom_command(TARGET rfield_streamer POST_BUILD; COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/librfield_streamer_rdict.pcm; ${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/librfield_streamer_rdict.pcm; COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINAR",MatchSource.DOCS,tree/ntuple/v7/test/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/test/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/test/CMakeLists.txt:7203,Integrability,interface,interface,7203,"amerFieldSelection.xml . COPYONLY); add_custom_command(OUTPUT StreamerFieldXMLDict.cxx StreamerFieldXMLDict_rdict.pcm; COMMAND ${command} StreamerFieldXML.h -o StreamerFieldXMLDict.cxx -s StreamerFieldSelection.xml; DEPENDS rootcling StreamerFieldXML.h StreamerFieldSelection.xml); add_library(StreamerFieldXMLDict OBJECT StreamerFieldXMLDict.cxx); set_target_properties(StreamerFieldXMLDict PROPERTIES POSITION_INDEPENDENT_CODE TRUE); target_sources(rfield_streamer PRIVATE $<TARGET_OBJECTS:StreamerFieldXMLDict>); target_compile_options(StreamerFieldXMLDict PRIVATE $<TARGET_PROPERTY:rfield_streamer,COMPILE_OPTIONS>); target_compile_definitions(StreamerFieldXMLDict PRIVATE $<TARGET_PROPERTY:rfield_streamer,COMPILE_DEFINITIONS>); target_compile_features(StreamerFieldXMLDict PRIVATE $<TARGET_PROPERTY:rfield_streamer,COMPILE_FEATURES>); target_include_directories(StreamerFieldXMLDict PRIVATE $<TARGET_PROPERTY:rfield_streamer,INCLUDE_DIRECTORIES>); if(MSVC); add_custom_command(TARGET rfield_streamer POST_BUILD; COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/librfield_streamer_rdict.pcm; ${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/librfield_streamer_rdict.pcm; COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/StreamerFieldXMLDict_rdict.pcm; ${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/StreamerFieldXMLDict_rdict.pcm); endif(). if(daos OR daos_mock); # Label of the DAOS pool used for testing, if not provided (may be any for libdaos_mock).; if(NOT daos_test_pool); set(daos_test_pool ntuple-daos-test-pool); endif(). ROOT_ADD_GTEST(ntuple_storage_daos ntuple_storage_daos.cxx ntuple_test.cxx LIBRARIES ROOTNTuple MathCore CustomStruct); target_compile_definitions(ntuple_storage_daos PRIVATE R__DAOS_TEST_POOL=""${daos_test_pool}""). if(daos_mock); set_property(SOURCE ntuple_storage_daos.cxx; APPEND PROPERTY COMPILE_DEFINITIONS R__DAOS_TEST_MOCK=1); endif(); endif(). # RNTuple Python interface tests; if(pyroot); ROOT_ADD_PYUNITTEST(ntuple_py_model ntuple_model.py); endif(); ",MatchSource.DOCS,tree/ntuple/v7/test/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/test/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/test/CMakeLists.txt:625,Modifiability,CONFIG,CONFIG,625,"# Copyright (C) 1995-2019, Rene Brun and Fons Rademakers.; # All rights reserved.; #; # For the licensing terms see $ROOTSYS/LICENSE.; # For the list of contributors see $ROOTSYS/README/CREDITS. # @author Jakob Blomer CERN. ROOT_STANDARD_LIBRARY_PACKAGE(CustomStruct; NO_INSTALL_HEADERS; HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/CustomStruct.hxx; SOURCES CustomStruct.cxx; LINKDEF CustomStructLinkDef.h; DEPENDENCIES RIO); configure_file(CustomStruct.hxx . COPYONLY); if(MSVC AND NOT CMAKE_GENERATOR MATCHES Ninja); add_custom_command(TARGET CustomStruct POST_BUILD; COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/libCustomStruct.dll; ${CMAKE_CURRENT_BINARY_DIR}/libCustomStruct.dll); endif(). ROOT_ADD_GTEST(ntuple_basics ntuple_basics.cxx LIBRARIES ROOTNTuple CustomStruct); ROOT_ADD_GTEST(ntuple_bulk ntuple_bulk.cxx LIBRARIES ROOTNTuple CustomStruct); ROOT_ADD_GTEST(ntuple_cast ntuple_cast.cxx LIBRARIES ROOTNTuple); ROOT_ADD_GTEST(ntuple_checksum ntuple_checksum.cxx ntuple_test.cxx LIBRARIES ROOTNTuple); ROOT_ADD_GTEST(ntuple_cluster ntuple_cluster.cxx LIBRARIES ROOTNTuple); ROOT_ADD_GTEST(ntuple_compat ntuple_compat.cxx RXTuple.cxx LIBRARIES ROOTNTuple xxHash::xxHash); ROOT_GENERATE_DICTIONARY(RXTupleDict ${CMAKE_CURRENT_SOURCE_DIR}/RXTuple.hxx; MODULE ntuple_compat; LINKDEF RXTupleLinkDef.h; DEPENDENCIES RIO); ROOT_ADD_GTEST(ntuple_descriptor ntuple_descriptor.cxx LIBRARIES ROOTNTuple CustomStruct); ROOT_GENERATE_DICTIONARY(RNTupleDescriptorDict ${CMAKE_CURRENT_SOURCE_DIR}/RNTupleDescriptorDict.hxx; MODULE ntuple_descriptor; LINKDEF RNTupleDescriptorLinkDef.h; OPTIONS -inlineInputHeader; DEPENDENCIES RIO CustomStruct); ROOT_ADD_GTEST(ntuple_endian ntuple_endian.cxx LIBRARIES ROOTNTuple); if(NOT MSVC); # The unit test relies on fork(), which is not available on Windows.; ROOT_ADD_GTEST(ntuple_evolution ntuple_evolution.cxx LIBRARIES ROOTNTuple); endif(); ROOT_ADD_GTEST(ntuple_friends ntuple_friends.cxx LIBRARIES ROOTNTuple CustomStruct); ROOT_ADD_GTEST(nt",MatchSource.DOCS,tree/ntuple/v7/test/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/test/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/test/CMakeLists.txt:6434,Modifiability,CONFIG,CONFIG,6434,"amerFieldSelection.xml . COPYONLY); add_custom_command(OUTPUT StreamerFieldXMLDict.cxx StreamerFieldXMLDict_rdict.pcm; COMMAND ${command} StreamerFieldXML.h -o StreamerFieldXMLDict.cxx -s StreamerFieldSelection.xml; DEPENDS rootcling StreamerFieldXML.h StreamerFieldSelection.xml); add_library(StreamerFieldXMLDict OBJECT StreamerFieldXMLDict.cxx); set_target_properties(StreamerFieldXMLDict PROPERTIES POSITION_INDEPENDENT_CODE TRUE); target_sources(rfield_streamer PRIVATE $<TARGET_OBJECTS:StreamerFieldXMLDict>); target_compile_options(StreamerFieldXMLDict PRIVATE $<TARGET_PROPERTY:rfield_streamer,COMPILE_OPTIONS>); target_compile_definitions(StreamerFieldXMLDict PRIVATE $<TARGET_PROPERTY:rfield_streamer,COMPILE_DEFINITIONS>); target_compile_features(StreamerFieldXMLDict PRIVATE $<TARGET_PROPERTY:rfield_streamer,COMPILE_FEATURES>); target_include_directories(StreamerFieldXMLDict PRIVATE $<TARGET_PROPERTY:rfield_streamer,INCLUDE_DIRECTORIES>); if(MSVC); add_custom_command(TARGET rfield_streamer POST_BUILD; COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/librfield_streamer_rdict.pcm; ${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/librfield_streamer_rdict.pcm; COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/StreamerFieldXMLDict_rdict.pcm; ${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/StreamerFieldXMLDict_rdict.pcm); endif(). if(daos OR daos_mock); # Label of the DAOS pool used for testing, if not provided (may be any for libdaos_mock).; if(NOT daos_test_pool); set(daos_test_pool ntuple-daos-test-pool); endif(). ROOT_ADD_GTEST(ntuple_storage_daos ntuple_storage_daos.cxx ntuple_test.cxx LIBRARIES ROOTNTuple MathCore CustomStruct); target_compile_definitions(ntuple_storage_daos PRIVATE R__DAOS_TEST_POOL=""${daos_test_pool}""). if(daos_mock); set_property(SOURCE ntuple_storage_daos.cxx; APPEND PROPERTY COMPILE_DEFINITIONS R__DAOS_TEST_MOCK=1); endif(); endif(). # RNTuple Python interface tests; if(pyroot); ROOT_ADD_PYUNITTEST(ntuple_py_model ntuple_model.py); endif(); ",MatchSource.DOCS,tree/ntuple/v7/test/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/test/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/test/CMakeLists.txt:6595,Modifiability,CONFIG,CONFIG,6595,"amerFieldSelection.xml . COPYONLY); add_custom_command(OUTPUT StreamerFieldXMLDict.cxx StreamerFieldXMLDict_rdict.pcm; COMMAND ${command} StreamerFieldXML.h -o StreamerFieldXMLDict.cxx -s StreamerFieldSelection.xml; DEPENDS rootcling StreamerFieldXML.h StreamerFieldSelection.xml); add_library(StreamerFieldXMLDict OBJECT StreamerFieldXMLDict.cxx); set_target_properties(StreamerFieldXMLDict PROPERTIES POSITION_INDEPENDENT_CODE TRUE); target_sources(rfield_streamer PRIVATE $<TARGET_OBJECTS:StreamerFieldXMLDict>); target_compile_options(StreamerFieldXMLDict PRIVATE $<TARGET_PROPERTY:rfield_streamer,COMPILE_OPTIONS>); target_compile_definitions(StreamerFieldXMLDict PRIVATE $<TARGET_PROPERTY:rfield_streamer,COMPILE_DEFINITIONS>); target_compile_features(StreamerFieldXMLDict PRIVATE $<TARGET_PROPERTY:rfield_streamer,COMPILE_FEATURES>); target_include_directories(StreamerFieldXMLDict PRIVATE $<TARGET_PROPERTY:rfield_streamer,INCLUDE_DIRECTORIES>); if(MSVC); add_custom_command(TARGET rfield_streamer POST_BUILD; COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/librfield_streamer_rdict.pcm; ${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/librfield_streamer_rdict.pcm; COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/StreamerFieldXMLDict_rdict.pcm; ${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/StreamerFieldXMLDict_rdict.pcm); endif(). if(daos OR daos_mock); # Label of the DAOS pool used for testing, if not provided (may be any for libdaos_mock).; if(NOT daos_test_pool); set(daos_test_pool ntuple-daos-test-pool); endif(). ROOT_ADD_GTEST(ntuple_storage_daos ntuple_storage_daos.cxx ntuple_test.cxx LIBRARIES ROOTNTuple MathCore CustomStruct); target_compile_definitions(ntuple_storage_daos PRIVATE R__DAOS_TEST_POOL=""${daos_test_pool}""). if(daos_mock); set_property(SOURCE ntuple_storage_daos.cxx; APPEND PROPERTY COMPILE_DEFINITIONS R__DAOS_TEST_MOCK=1); endif(); endif(). # RNTuple Python interface tests; if(pyroot); ROOT_ADD_PYUNITTEST(ntuple_py_model ntuple_model.py); endif(); ",MatchSource.DOCS,tree/ntuple/v7/test/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/test/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/test/CMakeLists.txt:1755,Testability,test,test,1755,"xx LIBRARIES ROOTNTuple CustomStruct); ROOT_ADD_GTEST(ntuple_bulk ntuple_bulk.cxx LIBRARIES ROOTNTuple CustomStruct); ROOT_ADD_GTEST(ntuple_cast ntuple_cast.cxx LIBRARIES ROOTNTuple); ROOT_ADD_GTEST(ntuple_checksum ntuple_checksum.cxx ntuple_test.cxx LIBRARIES ROOTNTuple); ROOT_ADD_GTEST(ntuple_cluster ntuple_cluster.cxx LIBRARIES ROOTNTuple); ROOT_ADD_GTEST(ntuple_compat ntuple_compat.cxx RXTuple.cxx LIBRARIES ROOTNTuple xxHash::xxHash); ROOT_GENERATE_DICTIONARY(RXTupleDict ${CMAKE_CURRENT_SOURCE_DIR}/RXTuple.hxx; MODULE ntuple_compat; LINKDEF RXTupleLinkDef.h; DEPENDENCIES RIO); ROOT_ADD_GTEST(ntuple_descriptor ntuple_descriptor.cxx LIBRARIES ROOTNTuple CustomStruct); ROOT_GENERATE_DICTIONARY(RNTupleDescriptorDict ${CMAKE_CURRENT_SOURCE_DIR}/RNTupleDescriptorDict.hxx; MODULE ntuple_descriptor; LINKDEF RNTupleDescriptorLinkDef.h; OPTIONS -inlineInputHeader; DEPENDENCIES RIO CustomStruct); ROOT_ADD_GTEST(ntuple_endian ntuple_endian.cxx LIBRARIES ROOTNTuple); if(NOT MSVC); # The unit test relies on fork(), which is not available on Windows.; ROOT_ADD_GTEST(ntuple_evolution ntuple_evolution.cxx LIBRARIES ROOTNTuple); endif(); ROOT_ADD_GTEST(ntuple_friends ntuple_friends.cxx LIBRARIES ROOTNTuple CustomStruct); ROOT_ADD_GTEST(ntuple_index ntuple_index.cxx LIBRARIES ROOTNTuple); ROOT_ADD_GTEST(ntuple_merger ntuple_merger.cxx LIBRARIES ROOTNTuple CustomStruct ZLIB::ZLIB); ROOT_ADD_GTEST(ntuple_metrics ntuple_metrics.cxx LIBRARIES ROOTNTuple CustomStruct); ROOT_ADD_GTEST(ntuple_model ntuple_model.cxx LIBRARIES ROOTNTuple CustomStruct); ROOT_ADD_GTEST(ntuple_multi_column ntuple_multi_column.cxx LIBRARIES ROOTNTuple); ROOT_ADD_GTEST(ntuple_packing ntuple_packing.cxx LIBRARIES ROOTNTuple CustomStruct); ROOT_ADD_GTEST(ntuple_pages ntuple_pages.cxx LIBRARIES ROOTNTuple CustomStruct); ROOT_ADD_GTEST(ntuple_print ntuple_print.cxx LIBRARIES ROOTNTuple CustomStruct); ROOT_ADD_GTEST(ntuple_processor ntuple_processor.cxx LIBRARIES ROOTNTuple); ROOT_ADD_GTEST(ntuple_project ntuple_proj",MatchSource.DOCS,tree/ntuple/v7/test/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/test/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/test/CMakeLists.txt:6702,Testability,test,testing,6702,"amerFieldSelection.xml . COPYONLY); add_custom_command(OUTPUT StreamerFieldXMLDict.cxx StreamerFieldXMLDict_rdict.pcm; COMMAND ${command} StreamerFieldXML.h -o StreamerFieldXMLDict.cxx -s StreamerFieldSelection.xml; DEPENDS rootcling StreamerFieldXML.h StreamerFieldSelection.xml); add_library(StreamerFieldXMLDict OBJECT StreamerFieldXMLDict.cxx); set_target_properties(StreamerFieldXMLDict PROPERTIES POSITION_INDEPENDENT_CODE TRUE); target_sources(rfield_streamer PRIVATE $<TARGET_OBJECTS:StreamerFieldXMLDict>); target_compile_options(StreamerFieldXMLDict PRIVATE $<TARGET_PROPERTY:rfield_streamer,COMPILE_OPTIONS>); target_compile_definitions(StreamerFieldXMLDict PRIVATE $<TARGET_PROPERTY:rfield_streamer,COMPILE_DEFINITIONS>); target_compile_features(StreamerFieldXMLDict PRIVATE $<TARGET_PROPERTY:rfield_streamer,COMPILE_FEATURES>); target_include_directories(StreamerFieldXMLDict PRIVATE $<TARGET_PROPERTY:rfield_streamer,INCLUDE_DIRECTORIES>); if(MSVC); add_custom_command(TARGET rfield_streamer POST_BUILD; COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/librfield_streamer_rdict.pcm; ${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/librfield_streamer_rdict.pcm; COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/StreamerFieldXMLDict_rdict.pcm; ${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/StreamerFieldXMLDict_rdict.pcm); endif(). if(daos OR daos_mock); # Label of the DAOS pool used for testing, if not provided (may be any for libdaos_mock).; if(NOT daos_test_pool); set(daos_test_pool ntuple-daos-test-pool); endif(). ROOT_ADD_GTEST(ntuple_storage_daos ntuple_storage_daos.cxx ntuple_test.cxx LIBRARIES ROOTNTuple MathCore CustomStruct); target_compile_definitions(ntuple_storage_daos PRIVATE R__DAOS_TEST_POOL=""${daos_test_pool}""). if(daos_mock); set_property(SOURCE ntuple_storage_daos.cxx; APPEND PROPERTY COMPILE_DEFINITIONS R__DAOS_TEST_MOCK=1); endif(); endif(). # RNTuple Python interface tests; if(pyroot); ROOT_ADD_PYUNITTEST(ntuple_py_model ntuple_model.py); endif(); ",MatchSource.DOCS,tree/ntuple/v7/test/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/test/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/test/CMakeLists.txt:6814,Testability,test,test-pool,6814,"amerFieldSelection.xml . COPYONLY); add_custom_command(OUTPUT StreamerFieldXMLDict.cxx StreamerFieldXMLDict_rdict.pcm; COMMAND ${command} StreamerFieldXML.h -o StreamerFieldXMLDict.cxx -s StreamerFieldSelection.xml; DEPENDS rootcling StreamerFieldXML.h StreamerFieldSelection.xml); add_library(StreamerFieldXMLDict OBJECT StreamerFieldXMLDict.cxx); set_target_properties(StreamerFieldXMLDict PROPERTIES POSITION_INDEPENDENT_CODE TRUE); target_sources(rfield_streamer PRIVATE $<TARGET_OBJECTS:StreamerFieldXMLDict>); target_compile_options(StreamerFieldXMLDict PRIVATE $<TARGET_PROPERTY:rfield_streamer,COMPILE_OPTIONS>); target_compile_definitions(StreamerFieldXMLDict PRIVATE $<TARGET_PROPERTY:rfield_streamer,COMPILE_DEFINITIONS>); target_compile_features(StreamerFieldXMLDict PRIVATE $<TARGET_PROPERTY:rfield_streamer,COMPILE_FEATURES>); target_include_directories(StreamerFieldXMLDict PRIVATE $<TARGET_PROPERTY:rfield_streamer,INCLUDE_DIRECTORIES>); if(MSVC); add_custom_command(TARGET rfield_streamer POST_BUILD; COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/librfield_streamer_rdict.pcm; ${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/librfield_streamer_rdict.pcm; COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/StreamerFieldXMLDict_rdict.pcm; ${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/StreamerFieldXMLDict_rdict.pcm); endif(). if(daos OR daos_mock); # Label of the DAOS pool used for testing, if not provided (may be any for libdaos_mock).; if(NOT daos_test_pool); set(daos_test_pool ntuple-daos-test-pool); endif(). ROOT_ADD_GTEST(ntuple_storage_daos ntuple_storage_daos.cxx ntuple_test.cxx LIBRARIES ROOTNTuple MathCore CustomStruct); target_compile_definitions(ntuple_storage_daos PRIVATE R__DAOS_TEST_POOL=""${daos_test_pool}""). if(daos_mock); set_property(SOURCE ntuple_storage_daos.cxx; APPEND PROPERTY COMPILE_DEFINITIONS R__DAOS_TEST_MOCK=1); endif(); endif(). # RNTuple Python interface tests; if(pyroot); ROOT_ADD_PYUNITTEST(ntuple_py_model ntuple_model.py); endif(); ",MatchSource.DOCS,tree/ntuple/v7/test/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/test/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/test/CMakeLists.txt:7213,Testability,test,tests,7213,"amerFieldSelection.xml . COPYONLY); add_custom_command(OUTPUT StreamerFieldXMLDict.cxx StreamerFieldXMLDict_rdict.pcm; COMMAND ${command} StreamerFieldXML.h -o StreamerFieldXMLDict.cxx -s StreamerFieldSelection.xml; DEPENDS rootcling StreamerFieldXML.h StreamerFieldSelection.xml); add_library(StreamerFieldXMLDict OBJECT StreamerFieldXMLDict.cxx); set_target_properties(StreamerFieldXMLDict PROPERTIES POSITION_INDEPENDENT_CODE TRUE); target_sources(rfield_streamer PRIVATE $<TARGET_OBJECTS:StreamerFieldXMLDict>); target_compile_options(StreamerFieldXMLDict PRIVATE $<TARGET_PROPERTY:rfield_streamer,COMPILE_OPTIONS>); target_compile_definitions(StreamerFieldXMLDict PRIVATE $<TARGET_PROPERTY:rfield_streamer,COMPILE_DEFINITIONS>); target_compile_features(StreamerFieldXMLDict PRIVATE $<TARGET_PROPERTY:rfield_streamer,COMPILE_FEATURES>); target_include_directories(StreamerFieldXMLDict PRIVATE $<TARGET_PROPERTY:rfield_streamer,INCLUDE_DIRECTORIES>); if(MSVC); add_custom_command(TARGET rfield_streamer POST_BUILD; COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/librfield_streamer_rdict.pcm; ${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/librfield_streamer_rdict.pcm; COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/StreamerFieldXMLDict_rdict.pcm; ${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/StreamerFieldXMLDict_rdict.pcm); endif(). if(daos OR daos_mock); # Label of the DAOS pool used for testing, if not provided (may be any for libdaos_mock).; if(NOT daos_test_pool); set(daos_test_pool ntuple-daos-test-pool); endif(). ROOT_ADD_GTEST(ntuple_storage_daos ntuple_storage_daos.cxx ntuple_test.cxx LIBRARIES ROOTNTuple MathCore CustomStruct); target_compile_definitions(ntuple_storage_daos PRIVATE R__DAOS_TEST_POOL=""${daos_test_pool}""). if(daos_mock); set_property(SOURCE ntuple_storage_daos.cxx; APPEND PROPERTY COMPILE_DEFINITIONS R__DAOS_TEST_MOCK=1); endif(); endif(). # RNTuple Python interface tests; if(pyroot); ROOT_ADD_PYUNITTEST(ntuple_py_model ntuple_model.py); endif(); ",MatchSource.DOCS,tree/ntuple/v7/test/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/test/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/ntupleutil/v7/test/CMakeLists.txt:415,Integrability,DEPEND,DEPENDENCIES,415,"# Copyright (C) 1995-2022, Rene Brun and Fons Rademakers.; # All rights reserved.; #; # For the licensing terms see $ROOTSYS/LICENSE.; # For the list of contributors see $ROOTSYS/README/CREDITS. # @author Jakob Blomer CERN. ROOT_STANDARD_LIBRARY_PACKAGE(CustomStructUtil; NO_INSTALL_HEADERS; HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/CustomStructUtil.hxx; SOURCES CustomStructUtil.cxx; LINKDEF CustomStructUtilLinkDef.h; DEPENDENCIES RIO); configure_file(CustomStructUtil.hxx . COPYONLY); if(MSVC AND NOT CMAKE_GENERATOR MATCHES Ninja); add_custom_command(TARGET CustomStructUtil POST_BUILD; COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/libCustomStructUtil.dll; ${CMAKE_CURRENT_BINARY_DIR}/libCustomStructUtil.dll); endif(). ROOT_ADD_GTEST(ntuple_importer ntuple_importer.cxx LIBRARIES ROOTNTupleUtil CustomStructUtil); ROOT_ADD_GTEST(ntuple_inspector ntuple_inspector.cxx LIBRARIES ROOTNTupleUtil); ",MatchSource.DOCS,tree/ntupleutil/v7/test/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntupleutil/v7/test/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/ntupleutil/v7/test/CMakeLists.txt:649,Modifiability,CONFIG,CONFIG,649,"# Copyright (C) 1995-2022, Rene Brun and Fons Rademakers.; # All rights reserved.; #; # For the licensing terms see $ROOTSYS/LICENSE.; # For the list of contributors see $ROOTSYS/README/CREDITS. # @author Jakob Blomer CERN. ROOT_STANDARD_LIBRARY_PACKAGE(CustomStructUtil; NO_INSTALL_HEADERS; HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/CustomStructUtil.hxx; SOURCES CustomStructUtil.cxx; LINKDEF CustomStructUtilLinkDef.h; DEPENDENCIES RIO); configure_file(CustomStructUtil.hxx . COPYONLY); if(MSVC AND NOT CMAKE_GENERATOR MATCHES Ninja); add_custom_command(TARGET CustomStructUtil POST_BUILD; COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/libCustomStructUtil.dll; ${CMAKE_CURRENT_BINARY_DIR}/libCustomStructUtil.dll); endif(). ROOT_ADD_GTEST(ntuple_importer ntuple_importer.cxx LIBRARIES ROOTNTupleUtil CustomStructUtil); ROOT_ADD_GTEST(ntuple_inspector ntuple_inspector.cxx LIBRARIES ROOTNTupleUtil); ",MatchSource.DOCS,tree/ntupleutil/v7/test/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntupleutil/v7/test/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/tree/doc/index.txt:317,Usability,Guid,Guide,317,"This directory contains all the basic classes for creating/manipulating Trees.; BEGIN_HTML; Several documents describing the TTree classes are listed below:; <ul>; <li>The TTree data structure is documented in class TTree.</li>; <li><a href=""ftp://root.cern/root/doc/12Trees.pdf"">The Chapter about Trees in the Users Guide </a></li>; <li><a href=""ftp://root.cern/root/doc/21ExampleAnalysis.pdf"">The Chapter about Selectors in the Users Guide </a></li>; <li><a href=""ftp://root.cern/root/doc/24PROOF.pdf"">The Chapter about PROOF in the Users Guide </a></li>; <li><a href=""ftp://root.cern/root/doc/11InputOutput.pdf"">The Chapter about IO in the Users Guide </a></li>; <li><a href=""https://root.cern/manual/trees/#introducing-ttree"">Introducing TTree</a></li>; <li><a href=""https://root.cern/manual/trees/#reading-a-tree"">Reading a Tree </a></li>; <li><a href=""https://root.cern/manual/trees/#appending-ttrees-as-a-tchain"">Appending TTrees as a TChain</a></li>; </ul>; END_HTML; ",MatchSource.DOCS,tree/tree/doc/index.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/doc/index.txt
https://github.com/root-project/root/tree/v6-32-06/tree/tree/doc/index.txt:436,Usability,Guid,Guide,436,"This directory contains all the basic classes for creating/manipulating Trees.; BEGIN_HTML; Several documents describing the TTree classes are listed below:; <ul>; <li>The TTree data structure is documented in class TTree.</li>; <li><a href=""ftp://root.cern/root/doc/12Trees.pdf"">The Chapter about Trees in the Users Guide </a></li>; <li><a href=""ftp://root.cern/root/doc/21ExampleAnalysis.pdf"">The Chapter about Selectors in the Users Guide </a></li>; <li><a href=""ftp://root.cern/root/doc/24PROOF.pdf"">The Chapter about PROOF in the Users Guide </a></li>; <li><a href=""ftp://root.cern/root/doc/11InputOutput.pdf"">The Chapter about IO in the Users Guide </a></li>; <li><a href=""https://root.cern/manual/trees/#introducing-ttree"">Introducing TTree</a></li>; <li><a href=""https://root.cern/manual/trees/#reading-a-tree"">Reading a Tree </a></li>; <li><a href=""https://root.cern/manual/trees/#appending-ttrees-as-a-tchain"">Appending TTrees as a TChain</a></li>; </ul>; END_HTML; ",MatchSource.DOCS,tree/tree/doc/index.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/doc/index.txt
https://github.com/root-project/root/tree/v6-32-06/tree/tree/doc/index.txt:541,Usability,Guid,Guide,541,"This directory contains all the basic classes for creating/manipulating Trees.; BEGIN_HTML; Several documents describing the TTree classes are listed below:; <ul>; <li>The TTree data structure is documented in class TTree.</li>; <li><a href=""ftp://root.cern/root/doc/12Trees.pdf"">The Chapter about Trees in the Users Guide </a></li>; <li><a href=""ftp://root.cern/root/doc/21ExampleAnalysis.pdf"">The Chapter about Selectors in the Users Guide </a></li>; <li><a href=""ftp://root.cern/root/doc/24PROOF.pdf"">The Chapter about PROOF in the Users Guide </a></li>; <li><a href=""ftp://root.cern/root/doc/11InputOutput.pdf"">The Chapter about IO in the Users Guide </a></li>; <li><a href=""https://root.cern/manual/trees/#introducing-ttree"">Introducing TTree</a></li>; <li><a href=""https://root.cern/manual/trees/#reading-a-tree"">Reading a Tree </a></li>; <li><a href=""https://root.cern/manual/trees/#appending-ttrees-as-a-tchain"">Appending TTrees as a TChain</a></li>; </ul>; END_HTML; ",MatchSource.DOCS,tree/tree/doc/index.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/doc/index.txt
https://github.com/root-project/root/tree/v6-32-06/tree/tree/doc/index.txt:649,Usability,Guid,Guide,649,"This directory contains all the basic classes for creating/manipulating Trees.; BEGIN_HTML; Several documents describing the TTree classes are listed below:; <ul>; <li>The TTree data structure is documented in class TTree.</li>; <li><a href=""ftp://root.cern/root/doc/12Trees.pdf"">The Chapter about Trees in the Users Guide </a></li>; <li><a href=""ftp://root.cern/root/doc/21ExampleAnalysis.pdf"">The Chapter about Selectors in the Users Guide </a></li>; <li><a href=""ftp://root.cern/root/doc/24PROOF.pdf"">The Chapter about PROOF in the Users Guide </a></li>; <li><a href=""ftp://root.cern/root/doc/11InputOutput.pdf"">The Chapter about IO in the Users Guide </a></li>; <li><a href=""https://root.cern/manual/trees/#introducing-ttree"">Introducing TTree</a></li>; <li><a href=""https://root.cern/manual/trees/#reading-a-tree"">Reading a Tree </a></li>; <li><a href=""https://root.cern/manual/trees/#appending-ttrees-as-a-tchain"">Appending TTrees as a TChain</a></li>; </ul>; END_HTML; ",MatchSource.DOCS,tree/tree/doc/index.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/doc/index.txt
https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/CMakeLists.txt:978,Integrability,DEPEND,DEPENDENCIES,978,"pyright (C) 1995-2019, Rene Brun and Fons Rademakers.; # All rights reserved.; #; # For the licensing terms see $ROOTSYS/LICENSE.; # For the list of contributors see $ROOTSYS/README/CREDITS. ROOT_GENERATE_DICTIONARY(ElementStructDict ElementStruct.h LINKDEF ElementStructLinkDef.h OPTIONS -inlineInputHeader); ROOT_ADD_GTEST(testTOffsetGeneration TOffsetGeneration.cxx ElementStruct.cxx ElementStructDict.cxx; LIBRARIES RIO Tree MathCore; ); if(MSVC AND NOT CMAKE_GENERATOR MATCHES Ninja); add_custom_command(TARGET testTOffsetGeneration POST_BUILD; COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/libElementStructDict_rdict.pcm; ${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/libElementStructDict_rdict.pcm); endif(); target_include_directories(testTOffsetGeneration PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}); ROOT_STANDARD_LIBRARY_PACKAGE(SillyStruct NO_INSTALL_HEADERS HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/SillyStruct.h SOURCES SillyStruct.cxx LINKDEF SillyStructLinkDef.h DEPENDENCIES RIO); ROOT_ADD_GTEST(testBulkApi BulkApi.cxx LIBRARIES RIO Tree TreePlayer); #FIXME: tests are having timeout on 32bit CERN VM (in docker container everything is fine),; # to be reverted after investigation.; if(NOT CMAKE_SIZEOF_VOID_P EQUAL 4); ROOT_ADD_GTEST(testBulkApiMultiple BulkApiMultiple.cxx LIBRARIES RIO Tree TreePlayer TIMEOUT 3000); ROOT_ADD_GTEST(testBulkApiVarLength BulkApiVarLength.cxx LIBRARIES RIO Tree TreePlayer); ROOT_ADD_GTEST(testBulkApiSillyStruct BulkApiSillyStruct.cxx LIBRARIES RIO Tree TreePlayer SillyStruct); endif(); ROOT_ADD_GTEST(testTBasket TBasket.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTBranch TBranch.cxx LIBRARIES RIO Tree MathCore); ROOT_ADD_GTEST(testTIOFeatures TIOFeatures.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTTreeCluster TTreeClusterTest.cxx LIBRARIES RIO Tree MathCore); ROOT_ADD_GTEST(testTChainParsing TChainParsing.cxx LIBRARIES RIO Tree); if(imt); ROOT_ADD_GTEST(testTTreeImplicitMT ImplicitMT.cxx LIBRARIES RIO Tree); endif(); ROOT_ADD_GTEST(testTCha",MatchSource.DOCS,tree/tree/test/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/CMakeLists.txt:677,Modifiability,CONFIG,CONFIG,677,"# Copyright (C) 1995-2019, Rene Brun and Fons Rademakers.; # All rights reserved.; #; # For the licensing terms see $ROOTSYS/LICENSE.; # For the list of contributors see $ROOTSYS/README/CREDITS. ROOT_GENERATE_DICTIONARY(ElementStructDict ElementStruct.h LINKDEF ElementStructLinkDef.h OPTIONS -inlineInputHeader); ROOT_ADD_GTEST(testTOffsetGeneration TOffsetGeneration.cxx ElementStruct.cxx ElementStructDict.cxx; LIBRARIES RIO Tree MathCore; ); if(MSVC AND NOT CMAKE_GENERATOR MATCHES Ninja); add_custom_command(TARGET testTOffsetGeneration POST_BUILD; COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/libElementStructDict_rdict.pcm; ${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/libElementStructDict_rdict.pcm); endif(); target_include_directories(testTOffsetGeneration PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}); ROOT_STANDARD_LIBRARY_PACKAGE(SillyStruct NO_INSTALL_HEADERS HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/SillyStruct.h SOURCES SillyStruct.cxx LINKDEF SillyStructLinkDef.h DEPENDENCIES RIO); ROOT_ADD_GTEST(testBulkApi BulkApi.cxx LIBRARIES RIO Tree TreePlayer); #FIXME: tests are having timeout on 32bit CERN VM (in docker container everything is fine),; # to be reverted after investigation.; if(NOT CMAKE_SIZEOF_VOID_P EQUAL 4); ROOT_ADD_GTEST(testBulkApiMultiple BulkApiMultiple.cxx LIBRARIES RIO Tree TreePlayer TIMEOUT 3000); ROOT_ADD_GTEST(testBulkApiVarLength BulkApiVarLength.cxx LIBRARIES RIO Tree TreePlayer); ROOT_ADD_GTEST(testBulkApiSillyStruct BulkApiSillyStruct.cxx LIBRARIES RIO Tree TreePlayer SillyStruct); endif(); ROOT_ADD_GTEST(testTBasket TBasket.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTBranch TBranch.cxx LIBRARIES RIO Tree MathCore); ROOT_ADD_GTEST(testTIOFeatures TIOFeatures.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTTreeCluster TTreeClusterTest.cxx LIBRARIES RIO Tree MathCore); ROOT_ADD_GTEST(testTChainParsing TChainParsing.cxx LIBRARIES RIO Tree); if(imt); ROOT_ADD_GTEST(testTTreeImplicitMT ImplicitMT.cxx LIBRARIES RIO Tree); endif(); ROOT_ADD_GTEST(testT",MatchSource.DOCS,tree/tree/test/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/CMakeLists.txt:1093,Safety,timeout,timeout,1093," $ROOTSYS/LICENSE.; # For the list of contributors see $ROOTSYS/README/CREDITS. ROOT_GENERATE_DICTIONARY(ElementStructDict ElementStruct.h LINKDEF ElementStructLinkDef.h OPTIONS -inlineInputHeader); ROOT_ADD_GTEST(testTOffsetGeneration TOffsetGeneration.cxx ElementStruct.cxx ElementStructDict.cxx; LIBRARIES RIO Tree MathCore; ); if(MSVC AND NOT CMAKE_GENERATOR MATCHES Ninja); add_custom_command(TARGET testTOffsetGeneration POST_BUILD; COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/libElementStructDict_rdict.pcm; ${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/libElementStructDict_rdict.pcm); endif(); target_include_directories(testTOffsetGeneration PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}); ROOT_STANDARD_LIBRARY_PACKAGE(SillyStruct NO_INSTALL_HEADERS HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/SillyStruct.h SOURCES SillyStruct.cxx LINKDEF SillyStructLinkDef.h DEPENDENCIES RIO); ROOT_ADD_GTEST(testBulkApi BulkApi.cxx LIBRARIES RIO Tree TreePlayer); #FIXME: tests are having timeout on 32bit CERN VM (in docker container everything is fine),; # to be reverted after investigation.; if(NOT CMAKE_SIZEOF_VOID_P EQUAL 4); ROOT_ADD_GTEST(testBulkApiMultiple BulkApiMultiple.cxx LIBRARIES RIO Tree TreePlayer TIMEOUT 3000); ROOT_ADD_GTEST(testBulkApiVarLength BulkApiVarLength.cxx LIBRARIES RIO Tree TreePlayer); ROOT_ADD_GTEST(testBulkApiSillyStruct BulkApiSillyStruct.cxx LIBRARIES RIO Tree TreePlayer SillyStruct); endif(); ROOT_ADD_GTEST(testTBasket TBasket.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTBranch TBranch.cxx LIBRARIES RIO Tree MathCore); ROOT_ADD_GTEST(testTIOFeatures TIOFeatures.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTTreeCluster TTreeClusterTest.cxx LIBRARIES RIO Tree MathCore); ROOT_ADD_GTEST(testTChainParsing TChainParsing.cxx LIBRARIES RIO Tree); if(imt); ROOT_ADD_GTEST(testTTreeImplicitMT ImplicitMT.cxx LIBRARIES RIO Tree); endif(); ROOT_ADD_GTEST(testTChainSaveAsCxx TChainSaveAsCxx.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTChainRegressions TChainRegressions.cxx",MatchSource.DOCS,tree/tree/test/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/CMakeLists.txt:1322,Safety,TIMEOUT,TIMEOUT,1322,"tGeneration TOffsetGeneration.cxx ElementStruct.cxx ElementStructDict.cxx; LIBRARIES RIO Tree MathCore; ); if(MSVC AND NOT CMAKE_GENERATOR MATCHES Ninja); add_custom_command(TARGET testTOffsetGeneration POST_BUILD; COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/libElementStructDict_rdict.pcm; ${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/libElementStructDict_rdict.pcm); endif(); target_include_directories(testTOffsetGeneration PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}); ROOT_STANDARD_LIBRARY_PACKAGE(SillyStruct NO_INSTALL_HEADERS HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/SillyStruct.h SOURCES SillyStruct.cxx LINKDEF SillyStructLinkDef.h DEPENDENCIES RIO); ROOT_ADD_GTEST(testBulkApi BulkApi.cxx LIBRARIES RIO Tree TreePlayer); #FIXME: tests are having timeout on 32bit CERN VM (in docker container everything is fine),; # to be reverted after investigation.; if(NOT CMAKE_SIZEOF_VOID_P EQUAL 4); ROOT_ADD_GTEST(testBulkApiMultiple BulkApiMultiple.cxx LIBRARIES RIO Tree TreePlayer TIMEOUT 3000); ROOT_ADD_GTEST(testBulkApiVarLength BulkApiVarLength.cxx LIBRARIES RIO Tree TreePlayer); ROOT_ADD_GTEST(testBulkApiSillyStruct BulkApiSillyStruct.cxx LIBRARIES RIO Tree TreePlayer SillyStruct); endif(); ROOT_ADD_GTEST(testTBasket TBasket.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTBranch TBranch.cxx LIBRARIES RIO Tree MathCore); ROOT_ADD_GTEST(testTIOFeatures TIOFeatures.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTTreeCluster TTreeClusterTest.cxx LIBRARIES RIO Tree MathCore); ROOT_ADD_GTEST(testTChainParsing TChainParsing.cxx LIBRARIES RIO Tree); if(imt); ROOT_ADD_GTEST(testTTreeImplicitMT ImplicitMT.cxx LIBRARIES RIO Tree); endif(); ROOT_ADD_GTEST(testTChainSaveAsCxx TChainSaveAsCxx.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTChainRegressions TChainRegressions.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTTreeTruncatedDatatypes TTreeTruncatedDatatypes.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTTreeRegressions TTreeRegressions.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(entrylist_addsubl",MatchSource.DOCS,tree/tree/test/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/CMakeLists.txt:329,Testability,test,testTOffsetGeneration,329,"# Copyright (C) 1995-2019, Rene Brun and Fons Rademakers.; # All rights reserved.; #; # For the licensing terms see $ROOTSYS/LICENSE.; # For the list of contributors see $ROOTSYS/README/CREDITS. ROOT_GENERATE_DICTIONARY(ElementStructDict ElementStruct.h LINKDEF ElementStructLinkDef.h OPTIONS -inlineInputHeader); ROOT_ADD_GTEST(testTOffsetGeneration TOffsetGeneration.cxx ElementStruct.cxx ElementStructDict.cxx; LIBRARIES RIO Tree MathCore; ); if(MSVC AND NOT CMAKE_GENERATOR MATCHES Ninja); add_custom_command(TARGET testTOffsetGeneration POST_BUILD; COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/libElementStructDict_rdict.pcm; ${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/libElementStructDict_rdict.pcm); endif(); target_include_directories(testTOffsetGeneration PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}); ROOT_STANDARD_LIBRARY_PACKAGE(SillyStruct NO_INSTALL_HEADERS HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/SillyStruct.h SOURCES SillyStruct.cxx LINKDEF SillyStructLinkDef.h DEPENDENCIES RIO); ROOT_ADD_GTEST(testBulkApi BulkApi.cxx LIBRARIES RIO Tree TreePlayer); #FIXME: tests are having timeout on 32bit CERN VM (in docker container everything is fine),; # to be reverted after investigation.; if(NOT CMAKE_SIZEOF_VOID_P EQUAL 4); ROOT_ADD_GTEST(testBulkApiMultiple BulkApiMultiple.cxx LIBRARIES RIO Tree TreePlayer TIMEOUT 3000); ROOT_ADD_GTEST(testBulkApiVarLength BulkApiVarLength.cxx LIBRARIES RIO Tree TreePlayer); ROOT_ADD_GTEST(testBulkApiSillyStruct BulkApiSillyStruct.cxx LIBRARIES RIO Tree TreePlayer SillyStruct); endif(); ROOT_ADD_GTEST(testTBasket TBasket.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTBranch TBranch.cxx LIBRARIES RIO Tree MathCore); ROOT_ADD_GTEST(testTIOFeatures TIOFeatures.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTTreeCluster TTreeClusterTest.cxx LIBRARIES RIO Tree MathCore); ROOT_ADD_GTEST(testTChainParsing TChainParsing.cxx LIBRARIES RIO Tree); if(imt); ROOT_ADD_GTEST(testTTreeImplicitMT ImplicitMT.cxx LIBRARIES RIO Tree); endif(); ROOT_ADD_GTEST(testT",MatchSource.DOCS,tree/tree/test/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/CMakeLists.txt:520,Testability,test,testTOffsetGeneration,520,"# Copyright (C) 1995-2019, Rene Brun and Fons Rademakers.; # All rights reserved.; #; # For the licensing terms see $ROOTSYS/LICENSE.; # For the list of contributors see $ROOTSYS/README/CREDITS. ROOT_GENERATE_DICTIONARY(ElementStructDict ElementStruct.h LINKDEF ElementStructLinkDef.h OPTIONS -inlineInputHeader); ROOT_ADD_GTEST(testTOffsetGeneration TOffsetGeneration.cxx ElementStruct.cxx ElementStructDict.cxx; LIBRARIES RIO Tree MathCore; ); if(MSVC AND NOT CMAKE_GENERATOR MATCHES Ninja); add_custom_command(TARGET testTOffsetGeneration POST_BUILD; COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/libElementStructDict_rdict.pcm; ${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/libElementStructDict_rdict.pcm); endif(); target_include_directories(testTOffsetGeneration PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}); ROOT_STANDARD_LIBRARY_PACKAGE(SillyStruct NO_INSTALL_HEADERS HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/SillyStruct.h SOURCES SillyStruct.cxx LINKDEF SillyStructLinkDef.h DEPENDENCIES RIO); ROOT_ADD_GTEST(testBulkApi BulkApi.cxx LIBRARIES RIO Tree TreePlayer); #FIXME: tests are having timeout on 32bit CERN VM (in docker container everything is fine),; # to be reverted after investigation.; if(NOT CMAKE_SIZEOF_VOID_P EQUAL 4); ROOT_ADD_GTEST(testBulkApiMultiple BulkApiMultiple.cxx LIBRARIES RIO Tree TreePlayer TIMEOUT 3000); ROOT_ADD_GTEST(testBulkApiVarLength BulkApiVarLength.cxx LIBRARIES RIO Tree TreePlayer); ROOT_ADD_GTEST(testBulkApiSillyStruct BulkApiSillyStruct.cxx LIBRARIES RIO Tree TreePlayer SillyStruct); endif(); ROOT_ADD_GTEST(testTBasket TBasket.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTBranch TBranch.cxx LIBRARIES RIO Tree MathCore); ROOT_ADD_GTEST(testTIOFeatures TIOFeatures.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTTreeCluster TTreeClusterTest.cxx LIBRARIES RIO Tree MathCore); ROOT_ADD_GTEST(testTChainParsing TChainParsing.cxx LIBRARIES RIO Tree); if(imt); ROOT_ADD_GTEST(testTTreeImplicitMT ImplicitMT.cxx LIBRARIES RIO Tree); endif(); ROOT_ADD_GTEST(testT",MatchSource.DOCS,tree/tree/test/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/CMakeLists.txt:754,Testability,test,testTOffsetGeneration,754,"# Copyright (C) 1995-2019, Rene Brun and Fons Rademakers.; # All rights reserved.; #; # For the licensing terms see $ROOTSYS/LICENSE.; # For the list of contributors see $ROOTSYS/README/CREDITS. ROOT_GENERATE_DICTIONARY(ElementStructDict ElementStruct.h LINKDEF ElementStructLinkDef.h OPTIONS -inlineInputHeader); ROOT_ADD_GTEST(testTOffsetGeneration TOffsetGeneration.cxx ElementStruct.cxx ElementStructDict.cxx; LIBRARIES RIO Tree MathCore; ); if(MSVC AND NOT CMAKE_GENERATOR MATCHES Ninja); add_custom_command(TARGET testTOffsetGeneration POST_BUILD; COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/libElementStructDict_rdict.pcm; ${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/libElementStructDict_rdict.pcm); endif(); target_include_directories(testTOffsetGeneration PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}); ROOT_STANDARD_LIBRARY_PACKAGE(SillyStruct NO_INSTALL_HEADERS HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/SillyStruct.h SOURCES SillyStruct.cxx LINKDEF SillyStructLinkDef.h DEPENDENCIES RIO); ROOT_ADD_GTEST(testBulkApi BulkApi.cxx LIBRARIES RIO Tree TreePlayer); #FIXME: tests are having timeout on 32bit CERN VM (in docker container everything is fine),; # to be reverted after investigation.; if(NOT CMAKE_SIZEOF_VOID_P EQUAL 4); ROOT_ADD_GTEST(testBulkApiMultiple BulkApiMultiple.cxx LIBRARIES RIO Tree TreePlayer TIMEOUT 3000); ROOT_ADD_GTEST(testBulkApiVarLength BulkApiVarLength.cxx LIBRARIES RIO Tree TreePlayer); ROOT_ADD_GTEST(testBulkApiSillyStruct BulkApiSillyStruct.cxx LIBRARIES RIO Tree TreePlayer SillyStruct); endif(); ROOT_ADD_GTEST(testTBasket TBasket.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTBranch TBranch.cxx LIBRARIES RIO Tree MathCore); ROOT_ADD_GTEST(testTIOFeatures TIOFeatures.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTTreeCluster TTreeClusterTest.cxx LIBRARIES RIO Tree MathCore); ROOT_ADD_GTEST(testTChainParsing TChainParsing.cxx LIBRARIES RIO Tree); if(imt); ROOT_ADD_GTEST(testTTreeImplicitMT ImplicitMT.cxx LIBRARIES RIO Tree); endif(); ROOT_ADD_GTEST(testT",MatchSource.DOCS,tree/tree/test/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/CMakeLists.txt:1012,Testability,test,testBulkApi,1012,"pyright (C) 1995-2019, Rene Brun and Fons Rademakers.; # All rights reserved.; #; # For the licensing terms see $ROOTSYS/LICENSE.; # For the list of contributors see $ROOTSYS/README/CREDITS. ROOT_GENERATE_DICTIONARY(ElementStructDict ElementStruct.h LINKDEF ElementStructLinkDef.h OPTIONS -inlineInputHeader); ROOT_ADD_GTEST(testTOffsetGeneration TOffsetGeneration.cxx ElementStruct.cxx ElementStructDict.cxx; LIBRARIES RIO Tree MathCore; ); if(MSVC AND NOT CMAKE_GENERATOR MATCHES Ninja); add_custom_command(TARGET testTOffsetGeneration POST_BUILD; COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/libElementStructDict_rdict.pcm; ${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/libElementStructDict_rdict.pcm); endif(); target_include_directories(testTOffsetGeneration PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}); ROOT_STANDARD_LIBRARY_PACKAGE(SillyStruct NO_INSTALL_HEADERS HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/SillyStruct.h SOURCES SillyStruct.cxx LINKDEF SillyStructLinkDef.h DEPENDENCIES RIO); ROOT_ADD_GTEST(testBulkApi BulkApi.cxx LIBRARIES RIO Tree TreePlayer); #FIXME: tests are having timeout on 32bit CERN VM (in docker container everything is fine),; # to be reverted after investigation.; if(NOT CMAKE_SIZEOF_VOID_P EQUAL 4); ROOT_ADD_GTEST(testBulkApiMultiple BulkApiMultiple.cxx LIBRARIES RIO Tree TreePlayer TIMEOUT 3000); ROOT_ADD_GTEST(testBulkApiVarLength BulkApiVarLength.cxx LIBRARIES RIO Tree TreePlayer); ROOT_ADD_GTEST(testBulkApiSillyStruct BulkApiSillyStruct.cxx LIBRARIES RIO Tree TreePlayer SillyStruct); endif(); ROOT_ADD_GTEST(testTBasket TBasket.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTBranch TBranch.cxx LIBRARIES RIO Tree MathCore); ROOT_ADD_GTEST(testTIOFeatures TIOFeatures.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTTreeCluster TTreeClusterTest.cxx LIBRARIES RIO Tree MathCore); ROOT_ADD_GTEST(testTChainParsing TChainParsing.cxx LIBRARIES RIO Tree); if(imt); ROOT_ADD_GTEST(testTTreeImplicitMT ImplicitMT.cxx LIBRARIES RIO Tree); endif(); ROOT_ADD_GTEST(testTCha",MatchSource.DOCS,tree/tree/test/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/CMakeLists.txt:1076,Testability,test,tests,1076," $ROOTSYS/LICENSE.; # For the list of contributors see $ROOTSYS/README/CREDITS. ROOT_GENERATE_DICTIONARY(ElementStructDict ElementStruct.h LINKDEF ElementStructLinkDef.h OPTIONS -inlineInputHeader); ROOT_ADD_GTEST(testTOffsetGeneration TOffsetGeneration.cxx ElementStruct.cxx ElementStructDict.cxx; LIBRARIES RIO Tree MathCore; ); if(MSVC AND NOT CMAKE_GENERATOR MATCHES Ninja); add_custom_command(TARGET testTOffsetGeneration POST_BUILD; COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/libElementStructDict_rdict.pcm; ${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/libElementStructDict_rdict.pcm); endif(); target_include_directories(testTOffsetGeneration PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}); ROOT_STANDARD_LIBRARY_PACKAGE(SillyStruct NO_INSTALL_HEADERS HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/SillyStruct.h SOURCES SillyStruct.cxx LINKDEF SillyStructLinkDef.h DEPENDENCIES RIO); ROOT_ADD_GTEST(testBulkApi BulkApi.cxx LIBRARIES RIO Tree TreePlayer); #FIXME: tests are having timeout on 32bit CERN VM (in docker container everything is fine),; # to be reverted after investigation.; if(NOT CMAKE_SIZEOF_VOID_P EQUAL 4); ROOT_ADD_GTEST(testBulkApiMultiple BulkApiMultiple.cxx LIBRARIES RIO Tree TreePlayer TIMEOUT 3000); ROOT_ADD_GTEST(testBulkApiVarLength BulkApiVarLength.cxx LIBRARIES RIO Tree TreePlayer); ROOT_ADD_GTEST(testBulkApiSillyStruct BulkApiSillyStruct.cxx LIBRARIES RIO Tree TreePlayer SillyStruct); endif(); ROOT_ADD_GTEST(testTBasket TBasket.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTBranch TBranch.cxx LIBRARIES RIO Tree MathCore); ROOT_ADD_GTEST(testTIOFeatures TIOFeatures.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTTreeCluster TTreeClusterTest.cxx LIBRARIES RIO Tree MathCore); ROOT_ADD_GTEST(testTChainParsing TChainParsing.cxx LIBRARIES RIO Tree); if(imt); ROOT_ADD_GTEST(testTTreeImplicitMT ImplicitMT.cxx LIBRARIES RIO Tree); endif(); ROOT_ADD_GTEST(testTChainSaveAsCxx TChainSaveAsCxx.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTChainRegressions TChainRegressions.cxx",MatchSource.DOCS,tree/tree/test/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/CMakeLists.txt:1252,Testability,test,testBulkApiMultiple,1252,"ntStruct.h LINKDEF ElementStructLinkDef.h OPTIONS -inlineInputHeader); ROOT_ADD_GTEST(testTOffsetGeneration TOffsetGeneration.cxx ElementStruct.cxx ElementStructDict.cxx; LIBRARIES RIO Tree MathCore; ); if(MSVC AND NOT CMAKE_GENERATOR MATCHES Ninja); add_custom_command(TARGET testTOffsetGeneration POST_BUILD; COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/libElementStructDict_rdict.pcm; ${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/libElementStructDict_rdict.pcm); endif(); target_include_directories(testTOffsetGeneration PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}); ROOT_STANDARD_LIBRARY_PACKAGE(SillyStruct NO_INSTALL_HEADERS HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/SillyStruct.h SOURCES SillyStruct.cxx LINKDEF SillyStructLinkDef.h DEPENDENCIES RIO); ROOT_ADD_GTEST(testBulkApi BulkApi.cxx LIBRARIES RIO Tree TreePlayer); #FIXME: tests are having timeout on 32bit CERN VM (in docker container everything is fine),; # to be reverted after investigation.; if(NOT CMAKE_SIZEOF_VOID_P EQUAL 4); ROOT_ADD_GTEST(testBulkApiMultiple BulkApiMultiple.cxx LIBRARIES RIO Tree TreePlayer TIMEOUT 3000); ROOT_ADD_GTEST(testBulkApiVarLength BulkApiVarLength.cxx LIBRARIES RIO Tree TreePlayer); ROOT_ADD_GTEST(testBulkApiSillyStruct BulkApiSillyStruct.cxx LIBRARIES RIO Tree TreePlayer SillyStruct); endif(); ROOT_ADD_GTEST(testTBasket TBasket.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTBranch TBranch.cxx LIBRARIES RIO Tree MathCore); ROOT_ADD_GTEST(testTIOFeatures TIOFeatures.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTTreeCluster TTreeClusterTest.cxx LIBRARIES RIO Tree MathCore); ROOT_ADD_GTEST(testTChainParsing TChainParsing.cxx LIBRARIES RIO Tree); if(imt); ROOT_ADD_GTEST(testTTreeImplicitMT ImplicitMT.cxx LIBRARIES RIO Tree); endif(); ROOT_ADD_GTEST(testTChainSaveAsCxx TChainSaveAsCxx.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTChainRegressions TChainRegressions.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTTreeTruncatedDatatypes TTreeTruncatedDatatypes.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST",MatchSource.DOCS,tree/tree/test/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/CMakeLists.txt:1352,Testability,test,testBulkApiVarLength,1352,"tGeneration TOffsetGeneration.cxx ElementStruct.cxx ElementStructDict.cxx; LIBRARIES RIO Tree MathCore; ); if(MSVC AND NOT CMAKE_GENERATOR MATCHES Ninja); add_custom_command(TARGET testTOffsetGeneration POST_BUILD; COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/libElementStructDict_rdict.pcm; ${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/libElementStructDict_rdict.pcm); endif(); target_include_directories(testTOffsetGeneration PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}); ROOT_STANDARD_LIBRARY_PACKAGE(SillyStruct NO_INSTALL_HEADERS HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/SillyStruct.h SOURCES SillyStruct.cxx LINKDEF SillyStructLinkDef.h DEPENDENCIES RIO); ROOT_ADD_GTEST(testBulkApi BulkApi.cxx LIBRARIES RIO Tree TreePlayer); #FIXME: tests are having timeout on 32bit CERN VM (in docker container everything is fine),; # to be reverted after investigation.; if(NOT CMAKE_SIZEOF_VOID_P EQUAL 4); ROOT_ADD_GTEST(testBulkApiMultiple BulkApiMultiple.cxx LIBRARIES RIO Tree TreePlayer TIMEOUT 3000); ROOT_ADD_GTEST(testBulkApiVarLength BulkApiVarLength.cxx LIBRARIES RIO Tree TreePlayer); ROOT_ADD_GTEST(testBulkApiSillyStruct BulkApiSillyStruct.cxx LIBRARIES RIO Tree TreePlayer SillyStruct); endif(); ROOT_ADD_GTEST(testTBasket TBasket.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTBranch TBranch.cxx LIBRARIES RIO Tree MathCore); ROOT_ADD_GTEST(testTIOFeatures TIOFeatures.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTTreeCluster TTreeClusterTest.cxx LIBRARIES RIO Tree MathCore); ROOT_ADD_GTEST(testTChainParsing TChainParsing.cxx LIBRARIES RIO Tree); if(imt); ROOT_ADD_GTEST(testTTreeImplicitMT ImplicitMT.cxx LIBRARIES RIO Tree); endif(); ROOT_ADD_GTEST(testTChainSaveAsCxx TChainSaveAsCxx.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTChainRegressions TChainRegressions.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTTreeTruncatedDatatypes TTreeTruncatedDatatypes.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTTreeRegressions TTreeRegressions.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(entrylist_addsubl",MatchSource.DOCS,tree/tree/test/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/CMakeLists.txt:1441,Testability,test,testBulkApiSillyStruct,1441,"hCore; ); if(MSVC AND NOT CMAKE_GENERATOR MATCHES Ninja); add_custom_command(TARGET testTOffsetGeneration POST_BUILD; COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/libElementStructDict_rdict.pcm; ${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/libElementStructDict_rdict.pcm); endif(); target_include_directories(testTOffsetGeneration PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}); ROOT_STANDARD_LIBRARY_PACKAGE(SillyStruct NO_INSTALL_HEADERS HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/SillyStruct.h SOURCES SillyStruct.cxx LINKDEF SillyStructLinkDef.h DEPENDENCIES RIO); ROOT_ADD_GTEST(testBulkApi BulkApi.cxx LIBRARIES RIO Tree TreePlayer); #FIXME: tests are having timeout on 32bit CERN VM (in docker container everything is fine),; # to be reverted after investigation.; if(NOT CMAKE_SIZEOF_VOID_P EQUAL 4); ROOT_ADD_GTEST(testBulkApiMultiple BulkApiMultiple.cxx LIBRARIES RIO Tree TreePlayer TIMEOUT 3000); ROOT_ADD_GTEST(testBulkApiVarLength BulkApiVarLength.cxx LIBRARIES RIO Tree TreePlayer); ROOT_ADD_GTEST(testBulkApiSillyStruct BulkApiSillyStruct.cxx LIBRARIES RIO Tree TreePlayer SillyStruct); endif(); ROOT_ADD_GTEST(testTBasket TBasket.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTBranch TBranch.cxx LIBRARIES RIO Tree MathCore); ROOT_ADD_GTEST(testTIOFeatures TIOFeatures.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTTreeCluster TTreeClusterTest.cxx LIBRARIES RIO Tree MathCore); ROOT_ADD_GTEST(testTChainParsing TChainParsing.cxx LIBRARIES RIO Tree); if(imt); ROOT_ADD_GTEST(testTTreeImplicitMT ImplicitMT.cxx LIBRARIES RIO Tree); endif(); ROOT_ADD_GTEST(testTChainSaveAsCxx TChainSaveAsCxx.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTChainRegressions TChainRegressions.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTTreeTruncatedDatatypes TTreeTruncatedDatatypes.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTTreeRegressions TTreeRegressions.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(entrylist_addsublist entrylist_addsublist.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(chain_setentrylist chain_setentry",MatchSource.DOCS,tree/tree/test/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/CMakeLists.txt:1555,Testability,test,testTBasket,1555,"etGeneration POST_BUILD; COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/libElementStructDict_rdict.pcm; ${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/libElementStructDict_rdict.pcm); endif(); target_include_directories(testTOffsetGeneration PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}); ROOT_STANDARD_LIBRARY_PACKAGE(SillyStruct NO_INSTALL_HEADERS HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/SillyStruct.h SOURCES SillyStruct.cxx LINKDEF SillyStructLinkDef.h DEPENDENCIES RIO); ROOT_ADD_GTEST(testBulkApi BulkApi.cxx LIBRARIES RIO Tree TreePlayer); #FIXME: tests are having timeout on 32bit CERN VM (in docker container everything is fine),; # to be reverted after investigation.; if(NOT CMAKE_SIZEOF_VOID_P EQUAL 4); ROOT_ADD_GTEST(testBulkApiMultiple BulkApiMultiple.cxx LIBRARIES RIO Tree TreePlayer TIMEOUT 3000); ROOT_ADD_GTEST(testBulkApiVarLength BulkApiVarLength.cxx LIBRARIES RIO Tree TreePlayer); ROOT_ADD_GTEST(testBulkApiSillyStruct BulkApiSillyStruct.cxx LIBRARIES RIO Tree TreePlayer SillyStruct); endif(); ROOT_ADD_GTEST(testTBasket TBasket.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTBranch TBranch.cxx LIBRARIES RIO Tree MathCore); ROOT_ADD_GTEST(testTIOFeatures TIOFeatures.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTTreeCluster TTreeClusterTest.cxx LIBRARIES RIO Tree MathCore); ROOT_ADD_GTEST(testTChainParsing TChainParsing.cxx LIBRARIES RIO Tree); if(imt); ROOT_ADD_GTEST(testTTreeImplicitMT ImplicitMT.cxx LIBRARIES RIO Tree); endif(); ROOT_ADD_GTEST(testTChainSaveAsCxx TChainSaveAsCxx.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTChainRegressions TChainRegressions.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTTreeTruncatedDatatypes TTreeTruncatedDatatypes.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTTreeRegressions TTreeRegressions.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(entrylist_addsublist entrylist_addsublist.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(chain_setentrylist chain_setentrylist.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(entrylist_enter entrylist_enter.cxx LIBRARIES R",MatchSource.DOCS,tree/tree/test/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/CMakeLists.txt:1615,Testability,test,testTBranch,1615,"NARY_DIR}/libElementStructDict_rdict.pcm; ${CMAKE_CURRENT_BINARY_DIR}/$<CONFIG>/libElementStructDict_rdict.pcm); endif(); target_include_directories(testTOffsetGeneration PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}); ROOT_STANDARD_LIBRARY_PACKAGE(SillyStruct NO_INSTALL_HEADERS HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/SillyStruct.h SOURCES SillyStruct.cxx LINKDEF SillyStructLinkDef.h DEPENDENCIES RIO); ROOT_ADD_GTEST(testBulkApi BulkApi.cxx LIBRARIES RIO Tree TreePlayer); #FIXME: tests are having timeout on 32bit CERN VM (in docker container everything is fine),; # to be reverted after investigation.; if(NOT CMAKE_SIZEOF_VOID_P EQUAL 4); ROOT_ADD_GTEST(testBulkApiMultiple BulkApiMultiple.cxx LIBRARIES RIO Tree TreePlayer TIMEOUT 3000); ROOT_ADD_GTEST(testBulkApiVarLength BulkApiVarLength.cxx LIBRARIES RIO Tree TreePlayer); ROOT_ADD_GTEST(testBulkApiSillyStruct BulkApiSillyStruct.cxx LIBRARIES RIO Tree TreePlayer SillyStruct); endif(); ROOT_ADD_GTEST(testTBasket TBasket.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTBranch TBranch.cxx LIBRARIES RIO Tree MathCore); ROOT_ADD_GTEST(testTIOFeatures TIOFeatures.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTTreeCluster TTreeClusterTest.cxx LIBRARIES RIO Tree MathCore); ROOT_ADD_GTEST(testTChainParsing TChainParsing.cxx LIBRARIES RIO Tree); if(imt); ROOT_ADD_GTEST(testTTreeImplicitMT ImplicitMT.cxx LIBRARIES RIO Tree); endif(); ROOT_ADD_GTEST(testTChainSaveAsCxx TChainSaveAsCxx.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTChainRegressions TChainRegressions.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTTreeTruncatedDatatypes TTreeTruncatedDatatypes.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTTreeRegressions TTreeRegressions.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(entrylist_addsublist entrylist_addsublist.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(chain_setentrylist chain_setentrylist.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(entrylist_enter entrylist_enter.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(entrylist_enterrange entrylist_enterrange.cxx LIBRA",MatchSource.DOCS,tree/tree/test/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/CMakeLists.txt:1684,Testability,test,testTIOFeatures,1684,"}/$<CONFIG>/libElementStructDict_rdict.pcm); endif(); target_include_directories(testTOffsetGeneration PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}); ROOT_STANDARD_LIBRARY_PACKAGE(SillyStruct NO_INSTALL_HEADERS HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/SillyStruct.h SOURCES SillyStruct.cxx LINKDEF SillyStructLinkDef.h DEPENDENCIES RIO); ROOT_ADD_GTEST(testBulkApi BulkApi.cxx LIBRARIES RIO Tree TreePlayer); #FIXME: tests are having timeout on 32bit CERN VM (in docker container everything is fine),; # to be reverted after investigation.; if(NOT CMAKE_SIZEOF_VOID_P EQUAL 4); ROOT_ADD_GTEST(testBulkApiMultiple BulkApiMultiple.cxx LIBRARIES RIO Tree TreePlayer TIMEOUT 3000); ROOT_ADD_GTEST(testBulkApiVarLength BulkApiVarLength.cxx LIBRARIES RIO Tree TreePlayer); ROOT_ADD_GTEST(testBulkApiSillyStruct BulkApiSillyStruct.cxx LIBRARIES RIO Tree TreePlayer SillyStruct); endif(); ROOT_ADD_GTEST(testTBasket TBasket.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTBranch TBranch.cxx LIBRARIES RIO Tree MathCore); ROOT_ADD_GTEST(testTIOFeatures TIOFeatures.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTTreeCluster TTreeClusterTest.cxx LIBRARIES RIO Tree MathCore); ROOT_ADD_GTEST(testTChainParsing TChainParsing.cxx LIBRARIES RIO Tree); if(imt); ROOT_ADD_GTEST(testTTreeImplicitMT ImplicitMT.cxx LIBRARIES RIO Tree); endif(); ROOT_ADD_GTEST(testTChainSaveAsCxx TChainSaveAsCxx.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTChainRegressions TChainRegressions.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTTreeTruncatedDatatypes TTreeTruncatedDatatypes.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTTreeRegressions TTreeRegressions.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(entrylist_addsublist entrylist_addsublist.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(chain_setentrylist chain_setentrylist.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(entrylist_enter entrylist_enter.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(entrylist_enterrange entrylist_enterrange.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(friendinfo friendinfo.cxx LIBRARIES RI",MatchSource.DOCS,tree/tree/test/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/CMakeLists.txt:1752,Testability,test,testTTreeCluster,1752,">/libElementStructDict_rdict.pcm); endif(); target_include_directories(testTOffsetGeneration PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}); ROOT_STANDARD_LIBRARY_PACKAGE(SillyStruct NO_INSTALL_HEADERS HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/SillyStruct.h SOURCES SillyStruct.cxx LINKDEF SillyStructLinkDef.h DEPENDENCIES RIO); ROOT_ADD_GTEST(testBulkApi BulkApi.cxx LIBRARIES RIO Tree TreePlayer); #FIXME: tests are having timeout on 32bit CERN VM (in docker container everything is fine),; # to be reverted after investigation.; if(NOT CMAKE_SIZEOF_VOID_P EQUAL 4); ROOT_ADD_GTEST(testBulkApiMultiple BulkApiMultiple.cxx LIBRARIES RIO Tree TreePlayer TIMEOUT 3000); ROOT_ADD_GTEST(testBulkApiVarLength BulkApiVarLength.cxx LIBRARIES RIO Tree TreePlayer); ROOT_ADD_GTEST(testBulkApiSillyStruct BulkApiSillyStruct.cxx LIBRARIES RIO Tree TreePlayer SillyStruct); endif(); ROOT_ADD_GTEST(testTBasket TBasket.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTBranch TBranch.cxx LIBRARIES RIO Tree MathCore); ROOT_ADD_GTEST(testTIOFeatures TIOFeatures.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTTreeCluster TTreeClusterTest.cxx LIBRARIES RIO Tree MathCore); ROOT_ADD_GTEST(testTChainParsing TChainParsing.cxx LIBRARIES RIO Tree); if(imt); ROOT_ADD_GTEST(testTTreeImplicitMT ImplicitMT.cxx LIBRARIES RIO Tree); endif(); ROOT_ADD_GTEST(testTChainSaveAsCxx TChainSaveAsCxx.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTChainRegressions TChainRegressions.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTTreeTruncatedDatatypes TTreeTruncatedDatatypes.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTTreeRegressions TTreeRegressions.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(entrylist_addsublist entrylist_addsublist.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(chain_setentrylist chain_setentrylist.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(entrylist_enter entrylist_enter.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(entrylist_enterrange entrylist_enterrange.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(friendinfo friendinfo.cxx LIBRARIES RIO Tree); ",MatchSource.DOCS,tree/tree/test/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/CMakeLists.txt:1835,Testability,test,testTChainParsing,1835,">/libElementStructDict_rdict.pcm); endif(); target_include_directories(testTOffsetGeneration PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}); ROOT_STANDARD_LIBRARY_PACKAGE(SillyStruct NO_INSTALL_HEADERS HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/SillyStruct.h SOURCES SillyStruct.cxx LINKDEF SillyStructLinkDef.h DEPENDENCIES RIO); ROOT_ADD_GTEST(testBulkApi BulkApi.cxx LIBRARIES RIO Tree TreePlayer); #FIXME: tests are having timeout on 32bit CERN VM (in docker container everything is fine),; # to be reverted after investigation.; if(NOT CMAKE_SIZEOF_VOID_P EQUAL 4); ROOT_ADD_GTEST(testBulkApiMultiple BulkApiMultiple.cxx LIBRARIES RIO Tree TreePlayer TIMEOUT 3000); ROOT_ADD_GTEST(testBulkApiVarLength BulkApiVarLength.cxx LIBRARIES RIO Tree TreePlayer); ROOT_ADD_GTEST(testBulkApiSillyStruct BulkApiSillyStruct.cxx LIBRARIES RIO Tree TreePlayer SillyStruct); endif(); ROOT_ADD_GTEST(testTBasket TBasket.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTBranch TBranch.cxx LIBRARIES RIO Tree MathCore); ROOT_ADD_GTEST(testTIOFeatures TIOFeatures.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTTreeCluster TTreeClusterTest.cxx LIBRARIES RIO Tree MathCore); ROOT_ADD_GTEST(testTChainParsing TChainParsing.cxx LIBRARIES RIO Tree); if(imt); ROOT_ADD_GTEST(testTTreeImplicitMT ImplicitMT.cxx LIBRARIES RIO Tree); endif(); ROOT_ADD_GTEST(testTChainSaveAsCxx TChainSaveAsCxx.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTChainRegressions TChainRegressions.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTTreeTruncatedDatatypes TTreeTruncatedDatatypes.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTTreeRegressions TTreeRegressions.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(entrylist_addsublist entrylist_addsublist.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(chain_setentrylist chain_setentrylist.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(entrylist_enter entrylist_enter.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(entrylist_enterrange entrylist_enterrange.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(friendinfo friendinfo.cxx LIBRARIES RIO Tree); ",MatchSource.DOCS,tree/tree/test/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/CMakeLists.txt:1916,Testability,test,testTTreeImplicitMT,1916,">/libElementStructDict_rdict.pcm); endif(); target_include_directories(testTOffsetGeneration PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}); ROOT_STANDARD_LIBRARY_PACKAGE(SillyStruct NO_INSTALL_HEADERS HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/SillyStruct.h SOURCES SillyStruct.cxx LINKDEF SillyStructLinkDef.h DEPENDENCIES RIO); ROOT_ADD_GTEST(testBulkApi BulkApi.cxx LIBRARIES RIO Tree TreePlayer); #FIXME: tests are having timeout on 32bit CERN VM (in docker container everything is fine),; # to be reverted after investigation.; if(NOT CMAKE_SIZEOF_VOID_P EQUAL 4); ROOT_ADD_GTEST(testBulkApiMultiple BulkApiMultiple.cxx LIBRARIES RIO Tree TreePlayer TIMEOUT 3000); ROOT_ADD_GTEST(testBulkApiVarLength BulkApiVarLength.cxx LIBRARIES RIO Tree TreePlayer); ROOT_ADD_GTEST(testBulkApiSillyStruct BulkApiSillyStruct.cxx LIBRARIES RIO Tree TreePlayer SillyStruct); endif(); ROOT_ADD_GTEST(testTBasket TBasket.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTBranch TBranch.cxx LIBRARIES RIO Tree MathCore); ROOT_ADD_GTEST(testTIOFeatures TIOFeatures.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTTreeCluster TTreeClusterTest.cxx LIBRARIES RIO Tree MathCore); ROOT_ADD_GTEST(testTChainParsing TChainParsing.cxx LIBRARIES RIO Tree); if(imt); ROOT_ADD_GTEST(testTTreeImplicitMT ImplicitMT.cxx LIBRARIES RIO Tree); endif(); ROOT_ADD_GTEST(testTChainSaveAsCxx TChainSaveAsCxx.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTChainRegressions TChainRegressions.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTTreeTruncatedDatatypes TTreeTruncatedDatatypes.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTTreeRegressions TTreeRegressions.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(entrylist_addsublist entrylist_addsublist.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(chain_setentrylist chain_setentrylist.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(entrylist_enter entrylist_enter.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(entrylist_enterrange entrylist_enterrange.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(friendinfo friendinfo.cxx LIBRARIES RIO Tree); ",MatchSource.DOCS,tree/tree/test/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/CMakeLists.txt:1996,Testability,test,testTChainSaveAsCxx,1996,">/libElementStructDict_rdict.pcm); endif(); target_include_directories(testTOffsetGeneration PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}); ROOT_STANDARD_LIBRARY_PACKAGE(SillyStruct NO_INSTALL_HEADERS HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/SillyStruct.h SOURCES SillyStruct.cxx LINKDEF SillyStructLinkDef.h DEPENDENCIES RIO); ROOT_ADD_GTEST(testBulkApi BulkApi.cxx LIBRARIES RIO Tree TreePlayer); #FIXME: tests are having timeout on 32bit CERN VM (in docker container everything is fine),; # to be reverted after investigation.; if(NOT CMAKE_SIZEOF_VOID_P EQUAL 4); ROOT_ADD_GTEST(testBulkApiMultiple BulkApiMultiple.cxx LIBRARIES RIO Tree TreePlayer TIMEOUT 3000); ROOT_ADD_GTEST(testBulkApiVarLength BulkApiVarLength.cxx LIBRARIES RIO Tree TreePlayer); ROOT_ADD_GTEST(testBulkApiSillyStruct BulkApiSillyStruct.cxx LIBRARIES RIO Tree TreePlayer SillyStruct); endif(); ROOT_ADD_GTEST(testTBasket TBasket.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTBranch TBranch.cxx LIBRARIES RIO Tree MathCore); ROOT_ADD_GTEST(testTIOFeatures TIOFeatures.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTTreeCluster TTreeClusterTest.cxx LIBRARIES RIO Tree MathCore); ROOT_ADD_GTEST(testTChainParsing TChainParsing.cxx LIBRARIES RIO Tree); if(imt); ROOT_ADD_GTEST(testTTreeImplicitMT ImplicitMT.cxx LIBRARIES RIO Tree); endif(); ROOT_ADD_GTEST(testTChainSaveAsCxx TChainSaveAsCxx.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTChainRegressions TChainRegressions.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTTreeTruncatedDatatypes TTreeTruncatedDatatypes.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTTreeRegressions TTreeRegressions.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(entrylist_addsublist entrylist_addsublist.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(chain_setentrylist chain_setentrylist.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(entrylist_enter entrylist_enter.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(entrylist_enterrange entrylist_enterrange.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(friendinfo friendinfo.cxx LIBRARIES RIO Tree); ",MatchSource.DOCS,tree/tree/test/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/CMakeLists.txt:2072,Testability,test,testTChainRegressions,2072,">/libElementStructDict_rdict.pcm); endif(); target_include_directories(testTOffsetGeneration PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}); ROOT_STANDARD_LIBRARY_PACKAGE(SillyStruct NO_INSTALL_HEADERS HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/SillyStruct.h SOURCES SillyStruct.cxx LINKDEF SillyStructLinkDef.h DEPENDENCIES RIO); ROOT_ADD_GTEST(testBulkApi BulkApi.cxx LIBRARIES RIO Tree TreePlayer); #FIXME: tests are having timeout on 32bit CERN VM (in docker container everything is fine),; # to be reverted after investigation.; if(NOT CMAKE_SIZEOF_VOID_P EQUAL 4); ROOT_ADD_GTEST(testBulkApiMultiple BulkApiMultiple.cxx LIBRARIES RIO Tree TreePlayer TIMEOUT 3000); ROOT_ADD_GTEST(testBulkApiVarLength BulkApiVarLength.cxx LIBRARIES RIO Tree TreePlayer); ROOT_ADD_GTEST(testBulkApiSillyStruct BulkApiSillyStruct.cxx LIBRARIES RIO Tree TreePlayer SillyStruct); endif(); ROOT_ADD_GTEST(testTBasket TBasket.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTBranch TBranch.cxx LIBRARIES RIO Tree MathCore); ROOT_ADD_GTEST(testTIOFeatures TIOFeatures.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTTreeCluster TTreeClusterTest.cxx LIBRARIES RIO Tree MathCore); ROOT_ADD_GTEST(testTChainParsing TChainParsing.cxx LIBRARIES RIO Tree); if(imt); ROOT_ADD_GTEST(testTTreeImplicitMT ImplicitMT.cxx LIBRARIES RIO Tree); endif(); ROOT_ADD_GTEST(testTChainSaveAsCxx TChainSaveAsCxx.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTChainRegressions TChainRegressions.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTTreeTruncatedDatatypes TTreeTruncatedDatatypes.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTTreeRegressions TTreeRegressions.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(entrylist_addsublist entrylist_addsublist.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(chain_setentrylist chain_setentrylist.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(entrylist_enter entrylist_enter.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(entrylist_enterrange entrylist_enterrange.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(friendinfo friendinfo.cxx LIBRARIES RIO Tree); ",MatchSource.DOCS,tree/tree/test/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/CMakeLists.txt:2152,Testability,test,testTTreeTruncatedDatatypes,2152,">/libElementStructDict_rdict.pcm); endif(); target_include_directories(testTOffsetGeneration PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}); ROOT_STANDARD_LIBRARY_PACKAGE(SillyStruct NO_INSTALL_HEADERS HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/SillyStruct.h SOURCES SillyStruct.cxx LINKDEF SillyStructLinkDef.h DEPENDENCIES RIO); ROOT_ADD_GTEST(testBulkApi BulkApi.cxx LIBRARIES RIO Tree TreePlayer); #FIXME: tests are having timeout on 32bit CERN VM (in docker container everything is fine),; # to be reverted after investigation.; if(NOT CMAKE_SIZEOF_VOID_P EQUAL 4); ROOT_ADD_GTEST(testBulkApiMultiple BulkApiMultiple.cxx LIBRARIES RIO Tree TreePlayer TIMEOUT 3000); ROOT_ADD_GTEST(testBulkApiVarLength BulkApiVarLength.cxx LIBRARIES RIO Tree TreePlayer); ROOT_ADD_GTEST(testBulkApiSillyStruct BulkApiSillyStruct.cxx LIBRARIES RIO Tree TreePlayer SillyStruct); endif(); ROOT_ADD_GTEST(testTBasket TBasket.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTBranch TBranch.cxx LIBRARIES RIO Tree MathCore); ROOT_ADD_GTEST(testTIOFeatures TIOFeatures.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTTreeCluster TTreeClusterTest.cxx LIBRARIES RIO Tree MathCore); ROOT_ADD_GTEST(testTChainParsing TChainParsing.cxx LIBRARIES RIO Tree); if(imt); ROOT_ADD_GTEST(testTTreeImplicitMT ImplicitMT.cxx LIBRARIES RIO Tree); endif(); ROOT_ADD_GTEST(testTChainSaveAsCxx TChainSaveAsCxx.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTChainRegressions TChainRegressions.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTTreeTruncatedDatatypes TTreeTruncatedDatatypes.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTTreeRegressions TTreeRegressions.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(entrylist_addsublist entrylist_addsublist.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(chain_setentrylist chain_setentrylist.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(entrylist_enter entrylist_enter.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(entrylist_enterrange entrylist_enterrange.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(friendinfo friendinfo.cxx LIBRARIES RIO Tree); ",MatchSource.DOCS,tree/tree/test/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/CMakeLists.txt:2244,Testability,test,testTTreeRegressions,2244,">/libElementStructDict_rdict.pcm); endif(); target_include_directories(testTOffsetGeneration PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}); ROOT_STANDARD_LIBRARY_PACKAGE(SillyStruct NO_INSTALL_HEADERS HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/SillyStruct.h SOURCES SillyStruct.cxx LINKDEF SillyStructLinkDef.h DEPENDENCIES RIO); ROOT_ADD_GTEST(testBulkApi BulkApi.cxx LIBRARIES RIO Tree TreePlayer); #FIXME: tests are having timeout on 32bit CERN VM (in docker container everything is fine),; # to be reverted after investigation.; if(NOT CMAKE_SIZEOF_VOID_P EQUAL 4); ROOT_ADD_GTEST(testBulkApiMultiple BulkApiMultiple.cxx LIBRARIES RIO Tree TreePlayer TIMEOUT 3000); ROOT_ADD_GTEST(testBulkApiVarLength BulkApiVarLength.cxx LIBRARIES RIO Tree TreePlayer); ROOT_ADD_GTEST(testBulkApiSillyStruct BulkApiSillyStruct.cxx LIBRARIES RIO Tree TreePlayer SillyStruct); endif(); ROOT_ADD_GTEST(testTBasket TBasket.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTBranch TBranch.cxx LIBRARIES RIO Tree MathCore); ROOT_ADD_GTEST(testTIOFeatures TIOFeatures.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTTreeCluster TTreeClusterTest.cxx LIBRARIES RIO Tree MathCore); ROOT_ADD_GTEST(testTChainParsing TChainParsing.cxx LIBRARIES RIO Tree); if(imt); ROOT_ADD_GTEST(testTTreeImplicitMT ImplicitMT.cxx LIBRARIES RIO Tree); endif(); ROOT_ADD_GTEST(testTChainSaveAsCxx TChainSaveAsCxx.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTChainRegressions TChainRegressions.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTTreeTruncatedDatatypes TTreeTruncatedDatatypes.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(testTTreeRegressions TTreeRegressions.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(entrylist_addsublist entrylist_addsublist.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(chain_setentrylist chain_setentrylist.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(entrylist_enter entrylist_enter.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(entrylist_enterrange entrylist_enterrange.cxx LIBRARIES RIO Tree); ROOT_ADD_GTEST(friendinfo friendinfo.cxx LIBRARIES RIO Tree); ",MatchSource.DOCS,tree/tree/test/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/doc/index.txt:255,Usability,Guid,Guide,255,"This directory contains the ROOT Tree Viewer classes.; BEGIN_HTML; See:; <ul>; <li>The main tree viewer class is documented in class TTreeViewer.</li>; <li><a href=""ftp://root.cern/root/doc/12Trees.pdf"">The Chapter about Trees and Treeviewer in the Users Guide; </a></li>; </ul>; END_HTML; ",MatchSource.DOCS,tree/treeviewer/doc/index.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/doc/index.txt
https://github.com/root-project/root/tree/v6-32-06/tutorials/mc/mass_width_2008.mc.txt:972,Availability,error,error,972,"* MASSES, WIDTHS, AND MC ID NUMBERS FROM 2008 EDITION OF RPP; *; * The following values were generated on July 2008 by the Berkeley Particle; * Data Group from the Review of Particle Physics database and are intended; * for use in Monte Carlo programs.; *; * For questions regarding distribution or content of this file, contact; * the Particle Data Group at pdg@lbl.gov.; *; * To process the images in this file:; * 1) ignore documentation lines that begin with an asterisk; * 2) in a FORTRAN program, process data lines with; * FORMAT (BN, A1, 4I8, 1X, E15.0, 2(1X, E8.0), 1X, A21); * 3) column 1 contains either ""M"" or ""W"" indicating mass or width; * 2 - 9 \ Monte Carlo particle numbers as described in the ""Review of; * 10 - 17 | Particle Physics"". Charge states appear, as appropriate,; * 18 - 25 | from left-to-right in the order -, 0, +, ++.; * 26 - 33 /; * 34 blank; * 35 - 49 central value of the mass or width (double precision); * 50 blank; * 51 - 58 positive error; * 59 blank; * 60 - 67 negative error; * 68 blank; * 69 - 89 particle name left-justified in the field and; * charge states right-justified in the field.; * This field is for ease of visual examination of the file and; * should not be taken as a standardized presentation of; * particle names.; *; * Particle ID(s) Value (GeV) Errors (GeV) Name Charges; M 22 0.E+00 +0.0E+00 -0.0E+00 gamma 0; W 22 0.E+00 +0.0E+00 -0.0E+00 gamma 0; M 24 8.0398E+01 +2.5E-02 -2.5E-02 W +; W 24 2.14E+00 +4.0E-02 -4.0E-02 W +; M 23 9.11876E+01 +2.1E-03 -2.1E-03 Z 0; W 23 2.4952E+00 +2.3E-03 -2.3E-03 Z 0; M 11 5.10998910E-04 +1.3E-11 -1.3E-11 e -; W 11 0.E+00 +0.0E+00 -0.0E+00 e -; M 13 1.05658367E-01 +4.0E-09 -4.0E-09 mu -; W 13 3.015937E-19 +2.9E-24 -2.9E-24 mu -; M 15 1.77684E+00 +1.7E-04 -1.7E-04 tau -; W 15 2.280E-12 +8.0E-15 -8.0E-15 tau -; M 2 2.4E-03 +9.0E-04 -9.0E-04 u +2/3; M 1 4.8E-03 +1.2E-03 -1.2E-03 d -1/3; M 3 1.04E-01 +2.6E-02 -3.4E-02 s -1/3; M 4 1.27E+00 +7.0E-02 -1.1E-01 c +2/3; M 5 4.68E+00 +1.7E-01 -7.0E-02 b -1/",MatchSource.DOCS,tutorials/mc/mass_width_2008.mc.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/mc/mass_width_2008.mc.txt
https://github.com/root-project/root/tree/v6-32-06/tutorials/mc/mass_width_2008.mc.txt:1010,Availability,error,error,1010,"* MASSES, WIDTHS, AND MC ID NUMBERS FROM 2008 EDITION OF RPP; *; * The following values were generated on July 2008 by the Berkeley Particle; * Data Group from the Review of Particle Physics database and are intended; * for use in Monte Carlo programs.; *; * For questions regarding distribution or content of this file, contact; * the Particle Data Group at pdg@lbl.gov.; *; * To process the images in this file:; * 1) ignore documentation lines that begin with an asterisk; * 2) in a FORTRAN program, process data lines with; * FORMAT (BN, A1, 4I8, 1X, E15.0, 2(1X, E8.0), 1X, A21); * 3) column 1 contains either ""M"" or ""W"" indicating mass or width; * 2 - 9 \ Monte Carlo particle numbers as described in the ""Review of; * 10 - 17 | Particle Physics"". Charge states appear, as appropriate,; * 18 - 25 | from left-to-right in the order -, 0, +, ++.; * 26 - 33 /; * 34 blank; * 35 - 49 central value of the mass or width (double precision); * 50 blank; * 51 - 58 positive error; * 59 blank; * 60 - 67 negative error; * 68 blank; * 69 - 89 particle name left-justified in the field and; * charge states right-justified in the field.; * This field is for ease of visual examination of the file and; * should not be taken as a standardized presentation of; * particle names.; *; * Particle ID(s) Value (GeV) Errors (GeV) Name Charges; M 22 0.E+00 +0.0E+00 -0.0E+00 gamma 0; W 22 0.E+00 +0.0E+00 -0.0E+00 gamma 0; M 24 8.0398E+01 +2.5E-02 -2.5E-02 W +; W 24 2.14E+00 +4.0E-02 -4.0E-02 W +; M 23 9.11876E+01 +2.1E-03 -2.1E-03 Z 0; W 23 2.4952E+00 +2.3E-03 -2.3E-03 Z 0; M 11 5.10998910E-04 +1.3E-11 -1.3E-11 e -; W 11 0.E+00 +0.0E+00 -0.0E+00 e -; M 13 1.05658367E-01 +4.0E-09 -4.0E-09 mu -; W 13 3.015937E-19 +2.9E-24 -2.9E-24 mu -; M 15 1.77684E+00 +1.7E-04 -1.7E-04 tau -; W 15 2.280E-12 +8.0E-15 -8.0E-15 tau -; M 2 2.4E-03 +9.0E-04 -9.0E-04 u +2/3; M 1 4.8E-03 +1.2E-03 -1.2E-03 d -1/3; M 3 1.04E-01 +2.6E-02 -3.4E-02 s -1/3; M 4 1.27E+00 +7.0E-02 -1.1E-01 c +2/3; M 5 4.68E+00 +1.7E-01 -7.0E-02 b -1/",MatchSource.DOCS,tutorials/mc/mass_width_2008.mc.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/mc/mass_width_2008.mc.txt
https://github.com/root-project/root/tree/v6-32-06/tutorials/mc/mass_width_2008.mc.txt:1305,Availability,Error,Errors,1305,"t of this file, contact; * the Particle Data Group at pdg@lbl.gov.; *; * To process the images in this file:; * 1) ignore documentation lines that begin with an asterisk; * 2) in a FORTRAN program, process data lines with; * FORMAT (BN, A1, 4I8, 1X, E15.0, 2(1X, E8.0), 1X, A21); * 3) column 1 contains either ""M"" or ""W"" indicating mass or width; * 2 - 9 \ Monte Carlo particle numbers as described in the ""Review of; * 10 - 17 | Particle Physics"". Charge states appear, as appropriate,; * 18 - 25 | from left-to-right in the order -, 0, +, ++.; * 26 - 33 /; * 34 blank; * 35 - 49 central value of the mass or width (double precision); * 50 blank; * 51 - 58 positive error; * 59 blank; * 60 - 67 negative error; * 68 blank; * 69 - 89 particle name left-justified in the field and; * charge states right-justified in the field.; * This field is for ease of visual examination of the file and; * should not be taken as a standardized presentation of; * particle names.; *; * Particle ID(s) Value (GeV) Errors (GeV) Name Charges; M 22 0.E+00 +0.0E+00 -0.0E+00 gamma 0; W 22 0.E+00 +0.0E+00 -0.0E+00 gamma 0; M 24 8.0398E+01 +2.5E-02 -2.5E-02 W +; W 24 2.14E+00 +4.0E-02 -4.0E-02 W +; M 23 9.11876E+01 +2.1E-03 -2.1E-03 Z 0; W 23 2.4952E+00 +2.3E-03 -2.3E-03 Z 0; M 11 5.10998910E-04 +1.3E-11 -1.3E-11 e -; W 11 0.E+00 +0.0E+00 -0.0E+00 e -; M 13 1.05658367E-01 +4.0E-09 -4.0E-09 mu -; W 13 3.015937E-19 +2.9E-24 -2.9E-24 mu -; M 15 1.77684E+00 +1.7E-04 -1.7E-04 tau -; W 15 2.280E-12 +8.0E-15 -8.0E-15 tau -; M 2 2.4E-03 +9.0E-04 -9.0E-04 u +2/3; M 1 4.8E-03 +1.2E-03 -1.2E-03 d -1/3; M 3 1.04E-01 +2.6E-02 -3.4E-02 s -1/3; M 4 1.27E+00 +7.0E-02 -1.1E-01 c +2/3; M 5 4.68E+00 +1.7E-01 -7.0E-02 b -1/3; M 6 1.712E+02 +2.1E+00 -2.1E+00 t +2/3; M 211 1.3957018E-01 +3.5E-07 -3.5E-07 pi +; W 211 2.5452E-17 +5.0E-21 -5.0E-21 pi +; M 111 1.349766E-01 +6.0E-07 -6.0E-07 pi 0; W 111 7.9E-09 +6.0E-10 -6.0E-10 pi 0; M 221 5.47853E-01 +2.4E-05 -2.4E-05 eta 0; W 221 1.30E-06 +7.0E-08 -7.0E-08 eta 0; M 9000221 8.",MatchSource.DOCS,tutorials/mc/mass_width_2008.mc.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/mc/mass_width_2008.mc.txt
https://github.com/root-project/root/tree/v6-32-06/tutorials/mc/mass_width_2008.mc.txt:754,Energy Efficiency,Charge,Charge,754,"* MASSES, WIDTHS, AND MC ID NUMBERS FROM 2008 EDITION OF RPP; *; * The following values were generated on July 2008 by the Berkeley Particle; * Data Group from the Review of Particle Physics database and are intended; * for use in Monte Carlo programs.; *; * For questions regarding distribution or content of this file, contact; * the Particle Data Group at pdg@lbl.gov.; *; * To process the images in this file:; * 1) ignore documentation lines that begin with an asterisk; * 2) in a FORTRAN program, process data lines with; * FORMAT (BN, A1, 4I8, 1X, E15.0, 2(1X, E8.0), 1X, A21); * 3) column 1 contains either ""M"" or ""W"" indicating mass or width; * 2 - 9 \ Monte Carlo particle numbers as described in the ""Review of; * 10 - 17 | Particle Physics"". Charge states appear, as appropriate,; * 18 - 25 | from left-to-right in the order -, 0, +, ++.; * 26 - 33 /; * 34 blank; * 35 - 49 central value of the mass or width (double precision); * 50 blank; * 51 - 58 positive error; * 59 blank; * 60 - 67 negative error; * 68 blank; * 69 - 89 particle name left-justified in the field and; * charge states right-justified in the field.; * This field is for ease of visual examination of the file and; * should not be taken as a standardized presentation of; * particle names.; *; * Particle ID(s) Value (GeV) Errors (GeV) Name Charges; M 22 0.E+00 +0.0E+00 -0.0E+00 gamma 0; W 22 0.E+00 +0.0E+00 -0.0E+00 gamma 0; M 24 8.0398E+01 +2.5E-02 -2.5E-02 W +; W 24 2.14E+00 +4.0E-02 -4.0E-02 W +; M 23 9.11876E+01 +2.1E-03 -2.1E-03 Z 0; W 23 2.4952E+00 +2.3E-03 -2.3E-03 Z 0; M 11 5.10998910E-04 +1.3E-11 -1.3E-11 e -; W 11 0.E+00 +0.0E+00 -0.0E+00 e -; M 13 1.05658367E-01 +4.0E-09 -4.0E-09 mu -; W 13 3.015937E-19 +2.9E-24 -2.9E-24 mu -; M 15 1.77684E+00 +1.7E-04 -1.7E-04 tau -; W 15 2.280E-12 +8.0E-15 -8.0E-15 tau -; M 2 2.4E-03 +9.0E-04 -9.0E-04 u +2/3; M 1 4.8E-03 +1.2E-03 -1.2E-03 d -1/3; M 3 1.04E-01 +2.6E-02 -3.4E-02 s -1/3; M 4 1.27E+00 +7.0E-02 -1.1E-01 c +2/3; M 5 4.68E+00 +1.7E-01 -7.0E-02 b -1/",MatchSource.DOCS,tutorials/mc/mass_width_2008.mc.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/mc/mass_width_2008.mc.txt
https://github.com/root-project/root/tree/v6-32-06/tutorials/mc/mass_width_2008.mc.txt:1088,Energy Efficiency,charge,charge,1088,"* MASSES, WIDTHS, AND MC ID NUMBERS FROM 2008 EDITION OF RPP; *; * The following values were generated on July 2008 by the Berkeley Particle; * Data Group from the Review of Particle Physics database and are intended; * for use in Monte Carlo programs.; *; * For questions regarding distribution or content of this file, contact; * the Particle Data Group at pdg@lbl.gov.; *; * To process the images in this file:; * 1) ignore documentation lines that begin with an asterisk; * 2) in a FORTRAN program, process data lines with; * FORMAT (BN, A1, 4I8, 1X, E15.0, 2(1X, E8.0), 1X, A21); * 3) column 1 contains either ""M"" or ""W"" indicating mass or width; * 2 - 9 \ Monte Carlo particle numbers as described in the ""Review of; * 10 - 17 | Particle Physics"". Charge states appear, as appropriate,; * 18 - 25 | from left-to-right in the order -, 0, +, ++.; * 26 - 33 /; * 34 blank; * 35 - 49 central value of the mass or width (double precision); * 50 blank; * 51 - 58 positive error; * 59 blank; * 60 - 67 negative error; * 68 blank; * 69 - 89 particle name left-justified in the field and; * charge states right-justified in the field.; * This field is for ease of visual examination of the file and; * should not be taken as a standardized presentation of; * particle names.; *; * Particle ID(s) Value (GeV) Errors (GeV) Name Charges; M 22 0.E+00 +0.0E+00 -0.0E+00 gamma 0; W 22 0.E+00 +0.0E+00 -0.0E+00 gamma 0; M 24 8.0398E+01 +2.5E-02 -2.5E-02 W +; W 24 2.14E+00 +4.0E-02 -4.0E-02 W +; M 23 9.11876E+01 +2.1E-03 -2.1E-03 Z 0; W 23 2.4952E+00 +2.3E-03 -2.3E-03 Z 0; M 11 5.10998910E-04 +1.3E-11 -1.3E-11 e -; W 11 0.E+00 +0.0E+00 -0.0E+00 e -; M 13 1.05658367E-01 +4.0E-09 -4.0E-09 mu -; W 13 3.015937E-19 +2.9E-24 -2.9E-24 mu -; M 15 1.77684E+00 +1.7E-04 -1.7E-04 tau -; W 15 2.280E-12 +8.0E-15 -8.0E-15 tau -; M 2 2.4E-03 +9.0E-04 -9.0E-04 u +2/3; M 1 4.8E-03 +1.2E-03 -1.2E-03 d -1/3; M 3 1.04E-01 +2.6E-02 -3.4E-02 s -1/3; M 4 1.27E+00 +7.0E-02 -1.1E-01 c +2/3; M 5 4.68E+00 +1.7E-01 -7.0E-02 b -1/",MatchSource.DOCS,tutorials/mc/mass_width_2008.mc.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/mc/mass_width_2008.mc.txt
https://github.com/root-project/root/tree/v6-32-06/tutorials/mc/mass_width_2008.mc.txt:1323,Energy Efficiency,Charge,Charges,1323,"t of this file, contact; * the Particle Data Group at pdg@lbl.gov.; *; * To process the images in this file:; * 1) ignore documentation lines that begin with an asterisk; * 2) in a FORTRAN program, process data lines with; * FORMAT (BN, A1, 4I8, 1X, E15.0, 2(1X, E8.0), 1X, A21); * 3) column 1 contains either ""M"" or ""W"" indicating mass or width; * 2 - 9 \ Monte Carlo particle numbers as described in the ""Review of; * 10 - 17 | Particle Physics"". Charge states appear, as appropriate,; * 18 - 25 | from left-to-right in the order -, 0, +, ++.; * 26 - 33 /; * 34 blank; * 35 - 49 central value of the mass or width (double precision); * 50 blank; * 51 - 58 positive error; * 59 blank; * 60 - 67 negative error; * 68 blank; * 69 - 89 particle name left-justified in the field and; * charge states right-justified in the field.; * This field is for ease of visual examination of the file and; * should not be taken as a standardized presentation of; * particle names.; *; * Particle ID(s) Value (GeV) Errors (GeV) Name Charges; M 22 0.E+00 +0.0E+00 -0.0E+00 gamma 0; W 22 0.E+00 +0.0E+00 -0.0E+00 gamma 0; M 24 8.0398E+01 +2.5E-02 -2.5E-02 W +; W 24 2.14E+00 +4.0E-02 -4.0E-02 W +; M 23 9.11876E+01 +2.1E-03 -2.1E-03 Z 0; W 23 2.4952E+00 +2.3E-03 -2.3E-03 Z 0; M 11 5.10998910E-04 +1.3E-11 -1.3E-11 e -; W 11 0.E+00 +0.0E+00 -0.0E+00 e -; M 13 1.05658367E-01 +4.0E-09 -4.0E-09 mu -; W 13 3.015937E-19 +2.9E-24 -2.9E-24 mu -; M 15 1.77684E+00 +1.7E-04 -1.7E-04 tau -; W 15 2.280E-12 +8.0E-15 -8.0E-15 tau -; M 2 2.4E-03 +9.0E-04 -9.0E-04 u +2/3; M 1 4.8E-03 +1.2E-03 -1.2E-03 d -1/3; M 3 1.04E-01 +2.6E-02 -3.4E-02 s -1/3; M 4 1.27E+00 +7.0E-02 -1.1E-01 c +2/3; M 5 4.68E+00 +1.7E-01 -7.0E-02 b -1/3; M 6 1.712E+02 +2.1E+00 -2.1E+00 t +2/3; M 211 1.3957018E-01 +3.5E-07 -3.5E-07 pi +; W 211 2.5452E-17 +5.0E-21 -5.0E-21 pi +; M 111 1.349766E-01 +6.0E-07 -6.0E-07 pi 0; W 111 7.9E-09 +6.0E-10 -6.0E-10 pi 0; M 221 5.47853E-01 +2.4E-05 -2.4E-05 eta 0; W 221 1.30E-06 +7.0E-08 -7.0E-08 eta 0; M 9000221 8.",MatchSource.DOCS,tutorials/mc/mass_width_2008.mc.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/mc/mass_width_2008.mc.txt
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf505_asciicfg.txt:42,Security,hash,hash,42,[Section1]; # Comments lines start with a hash ; f = 0.52727 +/- 0.021516 L(0 - 1); m = 0.033901 +/- 0.054520 L(-10 - 10); p0 = 0.0069868 +/- 0.0082025 L(0 - 1); s = 0.99523 +/- 0.053043 L(-10 - 10). [Section2]; # Here we provide different values for the same parameters; f = 0.45 +/- 0.03 L(0 - 1); m = 0.025 +/- 0.02 L(-10 - 10); p0 = 0.0022 +/- 0.0001 L(0 - 1); s = 0.98 +/- 0.03 L(-10 - 10). [Section3]; # It is also OK to supply a partial list; # Here we declare f and m as constant as well; f = 0.372 C; m = 0.195 C. [Section 4]; # You can include other files as well; include rf505_asciicfg_example.txt. ,MatchSource.DOCS,tutorials/roofit/rf505_asciicfg.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf505_asciicfg.txt
https://github.com/root-project/root/tree/v6-32-06/tutorials/tree/simpleAnalysis.txt:942,Deployability,configurat,configuration,942,"# Example analysis illustrating the use of rootdrawtree / TSimpleAnalysis.; # Run as:; # $ rootdrawtree tutorials/tree/simpleAnalysis.txt. file_output.root #the output file in which histograms are stored. # The next line has the name of the tree of the input data. It is; # optional if there is exactly one tree in the first input file.; ntuple #name of the input tree. # The lines of the next block correspond to .root input files that; # contain the tree. In this case we use only one input file.; tutorials/hsimple.root # this is the input file. # The next block is composed by lines that allow to configure the; # histograms. They have the following syntax:; # NAME = EXPRESSION if CUT; # which corresponds to chain->Draw(""EXPRESSION >> NAME"", ""CUT""); # i.e. it will create a histogram called NAME and store it in; # file_output.root.; # ""if CUT"" is optional; hpx=px if px<-3 #first histogram; hpxpy=px:py #second histogram. # End of the configuration file; ",MatchSource.DOCS,tutorials/tree/simpleAnalysis.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tree/simpleAnalysis.txt
https://github.com/root-project/root/tree/v6-32-06/tutorials/tree/simpleAnalysis.txt:601,Modifiability,config,configure,601,"# Example analysis illustrating the use of rootdrawtree / TSimpleAnalysis.; # Run as:; # $ rootdrawtree tutorials/tree/simpleAnalysis.txt. file_output.root #the output file in which histograms are stored. # The next line has the name of the tree of the input data. It is; # optional if there is exactly one tree in the first input file.; ntuple #name of the input tree. # The lines of the next block correspond to .root input files that; # contain the tree. In this case we use only one input file.; tutorials/hsimple.root # this is the input file. # The next block is composed by lines that allow to configure the; # histograms. They have the following syntax:; # NAME = EXPRESSION if CUT; # which corresponds to chain->Draw(""EXPRESSION >> NAME"", ""CUT""); # i.e. it will create a histogram called NAME and store it in; # file_output.root.; # ""if CUT"" is optional; hpx=px if px<-3 #first histogram; hpxpy=px:py #second histogram. # End of the configuration file; ",MatchSource.DOCS,tutorials/tree/simpleAnalysis.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tree/simpleAnalysis.txt
https://github.com/root-project/root/tree/v6-32-06/tutorials/tree/simpleAnalysis.txt:942,Modifiability,config,configuration,942,"# Example analysis illustrating the use of rootdrawtree / TSimpleAnalysis.; # Run as:; # $ rootdrawtree tutorials/tree/simpleAnalysis.txt. file_output.root #the output file in which histograms are stored. # The next line has the name of the tree of the input data. It is; # optional if there is exactly one tree in the first input file.; ntuple #name of the input tree. # The lines of the next block correspond to .root input files that; # contain the tree. In this case we use only one input file.; tutorials/hsimple.root # this is the input file. # The next block is composed by lines that allow to configure the; # histograms. They have the following syntax:; # NAME = EXPRESSION if CUT; # which corresponds to chain->Draw(""EXPRESSION >> NAME"", ""CUT""); # i.e. it will create a histogram called NAME and store it in; # file_output.root.; # ""if CUT"" is optional; hpx=px if px<-3 #first histogram; hpxpy=px:py #second histogram. # End of the configuration file; ",MatchSource.DOCS,tutorials/tree/simpleAnalysis.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tree/simpleAnalysis.txt
https://github.com/root-project/root/tree/v6-32-06/tutorials/tree/simpleAnalysis.txt:119,Usability,simpl,simpleAnalysis,119,"# Example analysis illustrating the use of rootdrawtree / TSimpleAnalysis.; # Run as:; # $ rootdrawtree tutorials/tree/simpleAnalysis.txt. file_output.root #the output file in which histograms are stored. # The next line has the name of the tree of the input data. It is; # optional if there is exactly one tree in the first input file.; ntuple #name of the input tree. # The lines of the next block correspond to .root input files that; # contain the tree. In this case we use only one input file.; tutorials/hsimple.root # this is the input file. # The next block is composed by lines that allow to configure the; # histograms. They have the following syntax:; # NAME = EXPRESSION if CUT; # which corresponds to chain->Draw(""EXPRESSION >> NAME"", ""CUT""); # i.e. it will create a histogram called NAME and store it in; # file_output.root.; # ""if CUT"" is optional; hpx=px if px<-3 #first histogram; hpxpy=px:py #second histogram. # End of the configuration file; ",MatchSource.DOCS,tutorials/tree/simpleAnalysis.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tree/simpleAnalysis.txt
https://github.com/root-project/root/tree/v6-32-06/tutorials/tree/dictionary/CMakeLists.txt:330,Deployability,integrat,integrating,330,"# Copyright (C) 1995-2023, Rene Brun and Fons Rademakers.; # All rights reserved.; #; # For the licensing terms see $ROOTSYS/LICENSE.; # For the list of contributors see $ROOTSYS/README/CREDITS. #####################################################################################################################. # Details about integrating ROOT into CMake projects:; # https://root.cern/manual/integrate_root_into_my_cmake_project/. #####################################################################################################################. # CMakeLists.txt that creates a library with dictionary and a main program; cmake_minimum_required(VERSION 3.10 FATAL_ERROR). project(treeUsingCustomClass). #---Locate the ROOT package and defines a number of variables (e.g. ROOT_INCLUDE_DIRS); find_package(ROOT REQUIRED COMPONENTS Tree TreePlayer ROOTDataFrame). #---Include a CMake module which makes use of the previous variables and loads modules ; # with useful macros or functions such as ROOT_GENERATE_DICTIONARY; # For further details: https://root-forum.cern.ch/t/how-to-integrate-root-into-my-project-with-cmake/37175; include(${ROOT_USE_FILE}). #---Add include directory of ROOT to the build; include_directories(${CMAKE_SOURCE_DIR}). # CMake function provided by ROOT, used to generate the dictionary file, G__data2Tree.cxx; # See this link for further details:; # https://root.cern/manual/io_custom_classes/#using-cmake; ROOT_GENERATE_DICTIONARY(G__data2Tree data2Tree.hxx LINKDEF data2TreeLinkDef.hxx). #---Create a shared library from; # * the previously generated dictionary, G__data2Tree.cxx; # * the class implementation; add_library(data2TreeLib SHARED data2Tree.cxx G__data2Tree.cxx); target_link_libraries(data2TreeLib ${ROOT_LIBRARIES} ) ; add_dependencies(data2TreeLib G__data2Tree ). #--- This is needed on Windows in order to export the symbols and create the data2TreeLib.lib file; if(MSVC); set_target_properties(data2TreeLib PROPERTIES WINDOWS_EXPORT_ALL_SYMBOLS TRUE)",MatchSource.DOCS,tutorials/tree/dictionary/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tree/dictionary/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tutorials/tree/dictionary/CMakeLists.txt:1085,Deployability,integrat,integrate-root-into-my-project-with-cmake,1085,"$ROOTSYS/LICENSE.; # For the list of contributors see $ROOTSYS/README/CREDITS. #####################################################################################################################. # Details about integrating ROOT into CMake projects:; # https://root.cern/manual/integrate_root_into_my_cmake_project/. #####################################################################################################################. # CMakeLists.txt that creates a library with dictionary and a main program; cmake_minimum_required(VERSION 3.10 FATAL_ERROR). project(treeUsingCustomClass). #---Locate the ROOT package and defines a number of variables (e.g. ROOT_INCLUDE_DIRS); find_package(ROOT REQUIRED COMPONENTS Tree TreePlayer ROOTDataFrame). #---Include a CMake module which makes use of the previous variables and loads modules ; # with useful macros or functions such as ROOT_GENERATE_DICTIONARY; # For further details: https://root-forum.cern.ch/t/how-to-integrate-root-into-my-project-with-cmake/37175; include(${ROOT_USE_FILE}). #---Add include directory of ROOT to the build; include_directories(${CMAKE_SOURCE_DIR}). # CMake function provided by ROOT, used to generate the dictionary file, G__data2Tree.cxx; # See this link for further details:; # https://root.cern/manual/io_custom_classes/#using-cmake; ROOT_GENERATE_DICTIONARY(G__data2Tree data2Tree.hxx LINKDEF data2TreeLinkDef.hxx). #---Create a shared library from; # * the previously generated dictionary, G__data2Tree.cxx; # * the class implementation; add_library(data2TreeLib SHARED data2Tree.cxx G__data2Tree.cxx); target_link_libraries(data2TreeLib ${ROOT_LIBRARIES} ) ; add_dependencies(data2TreeLib G__data2Tree ). #--- This is needed on Windows in order to export the symbols and create the data2TreeLib.lib file; if(MSVC); set_target_properties(data2TreeLib PROPERTIES WINDOWS_EXPORT_ALL_SYMBOLS TRUE); endif(). #---Create a main program using the library; add_executable(treeExample main.cpp writeTree.cxx readTree.c",MatchSource.DOCS,tutorials/tree/dictionary/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tree/dictionary/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tutorials/tree/dictionary/CMakeLists.txt:330,Integrability,integrat,integrating,330,"# Copyright (C) 1995-2023, Rene Brun and Fons Rademakers.; # All rights reserved.; #; # For the licensing terms see $ROOTSYS/LICENSE.; # For the list of contributors see $ROOTSYS/README/CREDITS. #####################################################################################################################. # Details about integrating ROOT into CMake projects:; # https://root.cern/manual/integrate_root_into_my_cmake_project/. #####################################################################################################################. # CMakeLists.txt that creates a library with dictionary and a main program; cmake_minimum_required(VERSION 3.10 FATAL_ERROR). project(treeUsingCustomClass). #---Locate the ROOT package and defines a number of variables (e.g. ROOT_INCLUDE_DIRS); find_package(ROOT REQUIRED COMPONENTS Tree TreePlayer ROOTDataFrame). #---Include a CMake module which makes use of the previous variables and loads modules ; # with useful macros or functions such as ROOT_GENERATE_DICTIONARY; # For further details: https://root-forum.cern.ch/t/how-to-integrate-root-into-my-project-with-cmake/37175; include(${ROOT_USE_FILE}). #---Add include directory of ROOT to the build; include_directories(${CMAKE_SOURCE_DIR}). # CMake function provided by ROOT, used to generate the dictionary file, G__data2Tree.cxx; # See this link for further details:; # https://root.cern/manual/io_custom_classes/#using-cmake; ROOT_GENERATE_DICTIONARY(G__data2Tree data2Tree.hxx LINKDEF data2TreeLinkDef.hxx). #---Create a shared library from; # * the previously generated dictionary, G__data2Tree.cxx; # * the class implementation; add_library(data2TreeLib SHARED data2Tree.cxx G__data2Tree.cxx); target_link_libraries(data2TreeLib ${ROOT_LIBRARIES} ) ; add_dependencies(data2TreeLib G__data2Tree ). #--- This is needed on Windows in order to export the symbols and create the data2TreeLib.lib file; if(MSVC); set_target_properties(data2TreeLib PROPERTIES WINDOWS_EXPORT_ALL_SYMBOLS TRUE)",MatchSource.DOCS,tutorials/tree/dictionary/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tree/dictionary/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tutorials/tree/dictionary/CMakeLists.txt:1085,Integrability,integrat,integrate-root-into-my-project-with-cmake,1085,"$ROOTSYS/LICENSE.; # For the list of contributors see $ROOTSYS/README/CREDITS. #####################################################################################################################. # Details about integrating ROOT into CMake projects:; # https://root.cern/manual/integrate_root_into_my_cmake_project/. #####################################################################################################################. # CMakeLists.txt that creates a library with dictionary and a main program; cmake_minimum_required(VERSION 3.10 FATAL_ERROR). project(treeUsingCustomClass). #---Locate the ROOT package and defines a number of variables (e.g. ROOT_INCLUDE_DIRS); find_package(ROOT REQUIRED COMPONENTS Tree TreePlayer ROOTDataFrame). #---Include a CMake module which makes use of the previous variables and loads modules ; # with useful macros or functions such as ROOT_GENERATE_DICTIONARY; # For further details: https://root-forum.cern.ch/t/how-to-integrate-root-into-my-project-with-cmake/37175; include(${ROOT_USE_FILE}). #---Add include directory of ROOT to the build; include_directories(${CMAKE_SOURCE_DIR}). # CMake function provided by ROOT, used to generate the dictionary file, G__data2Tree.cxx; # See this link for further details:; # https://root.cern/manual/io_custom_classes/#using-cmake; ROOT_GENERATE_DICTIONARY(G__data2Tree data2Tree.hxx LINKDEF data2TreeLinkDef.hxx). #---Create a shared library from; # * the previously generated dictionary, G__data2Tree.cxx; # * the class implementation; add_library(data2TreeLib SHARED data2Tree.cxx G__data2Tree.cxx); target_link_libraries(data2TreeLib ${ROOT_LIBRARIES} ) ; add_dependencies(data2TreeLib G__data2Tree ). #--- This is needed on Windows in order to export the symbols and create the data2TreeLib.lib file; if(MSVC); set_target_properties(data2TreeLib PROPERTIES WINDOWS_EXPORT_ALL_SYMBOLS TRUE); endif(). #---Create a main program using the library; add_executable(treeExample main.cpp writeTree.cxx readTree.c",MatchSource.DOCS,tutorials/tree/dictionary/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tree/dictionary/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tutorials/tree/dictionary/CMakeLists.txt:763,Modifiability,variab,variables,763,"# Copyright (C) 1995-2023, Rene Brun and Fons Rademakers.; # All rights reserved.; #; # For the licensing terms see $ROOTSYS/LICENSE.; # For the list of contributors see $ROOTSYS/README/CREDITS. #####################################################################################################################. # Details about integrating ROOT into CMake projects:; # https://root.cern/manual/integrate_root_into_my_cmake_project/. #####################################################################################################################. # CMakeLists.txt that creates a library with dictionary and a main program; cmake_minimum_required(VERSION 3.10 FATAL_ERROR). project(treeUsingCustomClass). #---Locate the ROOT package and defines a number of variables (e.g. ROOT_INCLUDE_DIRS); find_package(ROOT REQUIRED COMPONENTS Tree TreePlayer ROOTDataFrame). #---Include a CMake module which makes use of the previous variables and loads modules ; # with useful macros or functions such as ROOT_GENERATE_DICTIONARY; # For further details: https://root-forum.cern.ch/t/how-to-integrate-root-into-my-project-with-cmake/37175; include(${ROOT_USE_FILE}). #---Add include directory of ROOT to the build; include_directories(${CMAKE_SOURCE_DIR}). # CMake function provided by ROOT, used to generate the dictionary file, G__data2Tree.cxx; # See this link for further details:; # https://root.cern/manual/io_custom_classes/#using-cmake; ROOT_GENERATE_DICTIONARY(G__data2Tree data2Tree.hxx LINKDEF data2TreeLinkDef.hxx). #---Create a shared library from; # * the previously generated dictionary, G__data2Tree.cxx; # * the class implementation; add_library(data2TreeLib SHARED data2Tree.cxx G__data2Tree.cxx); target_link_libraries(data2TreeLib ${ROOT_LIBRARIES} ) ; add_dependencies(data2TreeLib G__data2Tree ). #--- This is needed on Windows in order to export the symbols and create the data2TreeLib.lib file; if(MSVC); set_target_properties(data2TreeLib PROPERTIES WINDOWS_EXPORT_ALL_SYMBOLS TRUE)",MatchSource.DOCS,tutorials/tree/dictionary/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tree/dictionary/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tutorials/tree/dictionary/CMakeLists.txt:928,Modifiability,variab,variables,928,"# Copyright (C) 1995-2023, Rene Brun and Fons Rademakers.; # All rights reserved.; #; # For the licensing terms see $ROOTSYS/LICENSE.; # For the list of contributors see $ROOTSYS/README/CREDITS. #####################################################################################################################. # Details about integrating ROOT into CMake projects:; # https://root.cern/manual/integrate_root_into_my_cmake_project/. #####################################################################################################################. # CMakeLists.txt that creates a library with dictionary and a main program; cmake_minimum_required(VERSION 3.10 FATAL_ERROR). project(treeUsingCustomClass). #---Locate the ROOT package and defines a number of variables (e.g. ROOT_INCLUDE_DIRS); find_package(ROOT REQUIRED COMPONENTS Tree TreePlayer ROOTDataFrame). #---Include a CMake module which makes use of the previous variables and loads modules ; # with useful macros or functions such as ROOT_GENERATE_DICTIONARY; # For further details: https://root-forum.cern.ch/t/how-to-integrate-root-into-my-project-with-cmake/37175; include(${ROOT_USE_FILE}). #---Add include directory of ROOT to the build; include_directories(${CMAKE_SOURCE_DIR}). # CMake function provided by ROOT, used to generate the dictionary file, G__data2Tree.cxx; # See this link for further details:; # https://root.cern/manual/io_custom_classes/#using-cmake; ROOT_GENERATE_DICTIONARY(G__data2Tree data2Tree.hxx LINKDEF data2TreeLinkDef.hxx). #---Create a shared library from; # * the previously generated dictionary, G__data2Tree.cxx; # * the class implementation; add_library(data2TreeLib SHARED data2Tree.cxx G__data2Tree.cxx); target_link_libraries(data2TreeLib ${ROOT_LIBRARIES} ) ; add_dependencies(data2TreeLib G__data2Tree ). #--- This is needed on Windows in order to export the symbols and create the data2TreeLib.lib file; if(MSVC); set_target_properties(data2TreeLib PROPERTIES WINDOWS_EXPORT_ALL_SYMBOLS TRUE)",MatchSource.DOCS,tutorials/tree/dictionary/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tree/dictionary/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tutorials/tree/dictionary/CMakeLists.txt:942,Performance,load,loads,942,"# Copyright (C) 1995-2023, Rene Brun and Fons Rademakers.; # All rights reserved.; #; # For the licensing terms see $ROOTSYS/LICENSE.; # For the list of contributors see $ROOTSYS/README/CREDITS. #####################################################################################################################. # Details about integrating ROOT into CMake projects:; # https://root.cern/manual/integrate_root_into_my_cmake_project/. #####################################################################################################################. # CMakeLists.txt that creates a library with dictionary and a main program; cmake_minimum_required(VERSION 3.10 FATAL_ERROR). project(treeUsingCustomClass). #---Locate the ROOT package and defines a number of variables (e.g. ROOT_INCLUDE_DIRS); find_package(ROOT REQUIRED COMPONENTS Tree TreePlayer ROOTDataFrame). #---Include a CMake module which makes use of the previous variables and loads modules ; # with useful macros or functions such as ROOT_GENERATE_DICTIONARY; # For further details: https://root-forum.cern.ch/t/how-to-integrate-root-into-my-project-with-cmake/37175; include(${ROOT_USE_FILE}). #---Add include directory of ROOT to the build; include_directories(${CMAKE_SOURCE_DIR}). # CMake function provided by ROOT, used to generate the dictionary file, G__data2Tree.cxx; # See this link for further details:; # https://root.cern/manual/io_custom_classes/#using-cmake; ROOT_GENERATE_DICTIONARY(G__data2Tree data2Tree.hxx LINKDEF data2TreeLinkDef.hxx). #---Create a shared library from; # * the previously generated dictionary, G__data2Tree.cxx; # * the class implementation; add_library(data2TreeLib SHARED data2Tree.cxx G__data2Tree.cxx); target_link_libraries(data2TreeLib ${ROOT_LIBRARIES} ) ; add_dependencies(data2TreeLib G__data2Tree ). #--- This is needed on Windows in order to export the symbols and create the data2TreeLib.lib file; if(MSVC); set_target_properties(data2TreeLib PROPERTIES WINDOWS_EXPORT_ALL_SYMBOLS TRUE)",MatchSource.DOCS,tutorials/tree/dictionary/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tree/dictionary/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/qtweb/CMakeLists.txt:330,Availability,error,error,330,"cmake_minimum_required(VERSION 3.10 FATAL_ERROR). project(qtweb). set(CMAKE_AUTOMOC ON); set(CMAKE_AUTORCC ON); set(CMAKE_AUTOUIC ON); set(CMAKE_INCLUDE_CURRENT_DIR ON). find_package(ROOT REQUIRED); include(${ROOT_USE_FILE}). if(NOT withqt); if(ROOT_qt6web_FOUND); set(withqt 6); elseif(ROOT_qt5web_FOUND); set(withqt 5); else(); error(""Neither qt5web nor qt6web components were found""); endif(); endif(). if(withqt EQUAL 6); find_package(Qt6 COMPONENTS Core WebEngineCore WebEngineWidgets CONFIG); set(qt_libs Qt6::Core Qt6::Widgets Qt6::WebEngineCore Qt6::WebEngineWidgets); set(root_qtlib ROOT::ROOTQt6WebDisplay); elseif(withqt EQUAL 5); find_package(Qt5 COMPONENTS Widgets REQUIRED WebEngine WebEngineWidgets); set(qt_libs Qt5::Core Qt5::Widgets Qt5::WebEngine Qt5::WebEngineWidgets); set(root_qtlib ROOT::ROOTQt5WebDisplay); else(); error(""No matching withqt parameter found, check if qt5web or qt6web components are there""); endif(). add_executable(qtweb; ExampleWidget.ui; ExampleWidget.cpp; RCanvasWidget.cpp; RGeomViewerWidget.cpp; TCanvasWidget.cpp; ExampleMain.cpp; ). target_link_libraries(qtweb; ${qt_libs}; ${ROOT_LIBRARIES} ROOT::ROOTWebDisplay ${root_qtlib} ROOT::Gpad ROOT::WebGui6 ROOT::ROOTGpadv7 ROOT::ROOTCanvasPainter ROOT::Geom ROOT::ROOTBrowserv7 ROOT::ROOTGeomViewer; ); ",MatchSource.DOCS,tutorials/webgui/qtweb/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/qtweb/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/qtweb/CMakeLists.txt:839,Availability,error,error,839,"cmake_minimum_required(VERSION 3.10 FATAL_ERROR). project(qtweb). set(CMAKE_AUTOMOC ON); set(CMAKE_AUTORCC ON); set(CMAKE_AUTOUIC ON); set(CMAKE_INCLUDE_CURRENT_DIR ON). find_package(ROOT REQUIRED); include(${ROOT_USE_FILE}). if(NOT withqt); if(ROOT_qt6web_FOUND); set(withqt 6); elseif(ROOT_qt5web_FOUND); set(withqt 5); else(); error(""Neither qt5web nor qt6web components were found""); endif(); endif(). if(withqt EQUAL 6); find_package(Qt6 COMPONENTS Core WebEngineCore WebEngineWidgets CONFIG); set(qt_libs Qt6::Core Qt6::Widgets Qt6::WebEngineCore Qt6::WebEngineWidgets); set(root_qtlib ROOT::ROOTQt6WebDisplay); elseif(withqt EQUAL 5); find_package(Qt5 COMPONENTS Widgets REQUIRED WebEngine WebEngineWidgets); set(qt_libs Qt5::Core Qt5::Widgets Qt5::WebEngine Qt5::WebEngineWidgets); set(root_qtlib ROOT::ROOTQt5WebDisplay); else(); error(""No matching withqt parameter found, check if qt5web or qt6web components are there""); endif(). add_executable(qtweb; ExampleWidget.ui; ExampleWidget.cpp; RCanvasWidget.cpp; RGeomViewerWidget.cpp; TCanvasWidget.cpp; ExampleMain.cpp; ). target_link_libraries(qtweb; ${qt_libs}; ${ROOT_LIBRARIES} ROOT::ROOTWebDisplay ${root_qtlib} ROOT::Gpad ROOT::WebGui6 ROOT::ROOTGpadv7 ROOT::ROOTCanvasPainter ROOT::Geom ROOT::ROOTBrowserv7 ROOT::ROOTGeomViewer; ); ",MatchSource.DOCS,tutorials/webgui/qtweb/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/qtweb/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/qtweb/CMakeLists.txt:490,Modifiability,CONFIG,CONFIG,490,"cmake_minimum_required(VERSION 3.10 FATAL_ERROR). project(qtweb). set(CMAKE_AUTOMOC ON); set(CMAKE_AUTORCC ON); set(CMAKE_AUTOUIC ON); set(CMAKE_INCLUDE_CURRENT_DIR ON). find_package(ROOT REQUIRED); include(${ROOT_USE_FILE}). if(NOT withqt); if(ROOT_qt6web_FOUND); set(withqt 6); elseif(ROOT_qt5web_FOUND); set(withqt 5); else(); error(""Neither qt5web nor qt6web components were found""); endif(); endif(). if(withqt EQUAL 6); find_package(Qt6 COMPONENTS Core WebEngineCore WebEngineWidgets CONFIG); set(qt_libs Qt6::Core Qt6::Widgets Qt6::WebEngineCore Qt6::WebEngineWidgets); set(root_qtlib ROOT::ROOTQt6WebDisplay); elseif(withqt EQUAL 5); find_package(Qt5 COMPONENTS Widgets REQUIRED WebEngine WebEngineWidgets); set(qt_libs Qt5::Core Qt5::Widgets Qt5::WebEngine Qt5::WebEngineWidgets); set(root_qtlib ROOT::ROOTQt5WebDisplay); else(); error(""No matching withqt parameter found, check if qt5web or qt6web components are there""); endif(). add_executable(qtweb; ExampleWidget.ui; ExampleWidget.cpp; RCanvasWidget.cpp; RGeomViewerWidget.cpp; TCanvasWidget.cpp; ExampleMain.cpp; ). target_link_libraries(qtweb; ${qt_libs}; ${ROOT_LIBRARIES} ROOT::ROOTWebDisplay ${root_qtlib} ROOT::Gpad ROOT::WebGui6 ROOT::ROOTGpadv7 ROOT::ROOTCanvasPainter ROOT::Geom ROOT::ROOTBrowserv7 ROOT::ROOTGeomViewer; ); ",MatchSource.DOCS,tutorials/webgui/qtweb/CMakeLists.txt,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/qtweb/CMakeLists.txt
https://github.com/root-project/root/tree/v6-32-06/doc/index.html:149,Security,access,accessed,149,"These pages contain the documentation for all ROOT classes, and the conceptual structure of the ROOT classes, its modules.; The documentation can be accessed by browsing the modules below,; by accessing a certain class directly using the Class Index,; or by simply searching the reference guide (see search field above).; The ROOT Tutorials show how to use many of ROOT's classes. ",MatchSource.DOCS,doc/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/index.html:193,Security,access,accessing,193,"These pages contain the documentation for all ROOT classes, and the conceptual structure of the ROOT classes, its modules.; The documentation can be accessed by browsing the modules below,; by accessing a certain class directly using the Class Index,; or by simply searching the reference guide (see search field above).; The ROOT Tutorials show how to use many of ROOT's classes. ",MatchSource.DOCS,doc/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/index.html:258,Usability,simpl,simply,258,"These pages contain the documentation for all ROOT classes, and the conceptual structure of the ROOT classes, its modules.; The documentation can be accessed by browsing the modules below,; by accessing a certain class directly using the Class Index,; or by simply searching the reference guide (see search field above).; The ROOT Tutorials show how to use many of ROOT's classes. ",MatchSource.DOCS,doc/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/index.html:289,Usability,guid,guide,289,"These pages contain the documentation for all ROOT classes, and the conceptual structure of the ROOT classes, its modules.; The documentation can be accessed by browsing the modules below,; by accessing a certain class directly using the Class Index,; or by simply searching the reference guide (see search field above).; The ROOT Tutorials show how to use many of ROOT's classes. ",MatchSource.DOCS,doc/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/index.html
https://github.com/root-project/root/tree/v6-32-06/bindings/doc/v520/index.html:15,Deployability,release,release,15,". PyROOT. This release contains two big new features: the ability to use PROOF with; python, and the ability to pickle (python serialize) ROOT objects.; Pickling of ROOT objects is straightforward: just hand them to pickle (or; cPickle) like any other python object.; To use PROOF with python, derive your custom class from TPySelector, override; the methods that you want to specialize, and put it in a file that is shipped; to the worker nodes, e.g.:. from ROOT import TPySelector. class MyPySelector( TPySelector ):; def Begin( self ):; print 'py: beginning'. def SlaveBegin( self, tree ):; print 'py: slave beginning'. def Process( self, entry ):; self.fChain.GetEntry( entry ); print 'py: processing', self.fChain.ipi; return 1. def SlaveTerminate( self ):; print 'py: slave terminating'. def Terminate( self ):; print 'py: terminating'. The file containing the class (e.g. mymodule.py) will be treated as a; python module and should be loadable through PYTHONPATH (typically '.') at; the worker node.; Setup PROOF as normal, and call:. dataset.Process( 'TPySelector', 'mymodule' ). PROOF will instantiate a TPySelector instance, which will in turn pick up; the python class from module 'mymodule' and forward all calls. There are several improvements in language mappings, as well as cleanup of; the code for python2.2 (Py_ssize_t handling) and MacOS 10.3. Additionally,; there are code cleanups (removing use of CINT internals) that should be; fully transparent to the end-user. The language mapping improvements are:. Abstract classes can no longer be instantiated (__init__ will raise an exception); Looping over empty STL(-like) containers will yield an immediate StopIteration; Unknown& is favored over Unknown* in function overloading; Implemented unary-, unary+ (__neg__ and __pos__); Mapped operator bool() to __nonzero__; Support for templated member functions; Implemented __setitem__ for unsigned int& and unsigned long& returns. The python presentation of ROOT objects (ObjectProxy) ",MatchSource.DOCS,bindings/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/bindings/doc/v520/index.html:942,Performance,load,loadable,942,". PyROOT. This release contains two big new features: the ability to use PROOF with; python, and the ability to pickle (python serialize) ROOT objects.; Pickling of ROOT objects is straightforward: just hand them to pickle (or; cPickle) like any other python object.; To use PROOF with python, derive your custom class from TPySelector, override; the methods that you want to specialize, and put it in a file that is shipped; to the worker nodes, e.g.:. from ROOT import TPySelector. class MyPySelector( TPySelector ):; def Begin( self ):; print 'py: beginning'. def SlaveBegin( self, tree ):; print 'py: slave beginning'. def Process( self, entry ):; self.fChain.GetEntry( entry ); print 'py: processing', self.fChain.ipi; return 1. def SlaveTerminate( self ):; print 'py: slave terminating'. def Terminate( self ):; print 'py: terminating'. The file containing the class (e.g. mymodule.py) will be treated as a; python module and should be loadable through PYTHONPATH (typically '.') at; the worker node.; Setup PROOF as normal, and call:. dataset.Process( 'TPySelector', 'mymodule' ). PROOF will instantiate a TPySelector instance, which will in turn pick up; the python class from module 'mymodule' and forward all calls. There are several improvements in language mappings, as well as cleanup of; the code for python2.2 (Py_ssize_t handling) and MacOS 10.3. Additionally,; there are code cleanups (removing use of CINT internals) that should be; fully transparent to the end-user. The language mapping improvements are:. Abstract classes can no longer be instantiated (__init__ will raise an exception); Looping over empty STL(-like) containers will yield an immediate StopIteration; Unknown& is favored over Unknown* in function overloading; Implemented unary-, unary+ (__neg__ and __pos__); Mapped operator bool() to __nonzero__; Support for templated member functions; Implemented __setitem__ for unsigned int& and unsigned long& returns. The python presentation of ROOT objects (ObjectProxy) ",MatchSource.DOCS,bindings/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/bindings/doc/v522/index.html:475,Availability,avail,available,475,". MATLAB; A MATLAB/ROOT interface has been developped by Johannes Kissel.; It is a data interface for reading and writing ROOT files from within MATLAB; just as you do with MATLAB files. For more information, see this announcement at the ROOT Forum. PyROOT. Support for python 2.6 has been added. Older versions will compile fine, but will; have problems when using the buffer interface for C arrays. For user convenience, code was added to load a custom rootlogon.py/.C, if available.; This code is loaded on first use of the ROOT module, and the python rootlogon.py is; loaded as a module. The language was improved by added a _creates property to all MethodProxy methods.; By setting this value to True, objects returned by such methods will be owned (and; reference counted) by the python interpreter.; By default, the Clone() and DrawClone() methods will have _create equal to True. ",MatchSource.DOCS,bindings/doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/bindings/doc/v522/index.html:24,Integrability,interface,interface,24,". MATLAB; A MATLAB/ROOT interface has been developped by Johannes Kissel.; It is a data interface for reading and writing ROOT files from within MATLAB; just as you do with MATLAB files. For more information, see this announcement at the ROOT Forum. PyROOT. Support for python 2.6 has been added. Older versions will compile fine, but will; have problems when using the buffer interface for C arrays. For user convenience, code was added to load a custom rootlogon.py/.C, if available.; This code is loaded on first use of the ROOT module, and the python rootlogon.py is; loaded as a module. The language was improved by added a _creates property to all MethodProxy methods.; By setting this value to True, objects returned by such methods will be owned (and; reference counted) by the python interpreter.; By default, the Clone() and DrawClone() methods will have _create equal to True. ",MatchSource.DOCS,bindings/doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/bindings/doc/v522/index.html:88,Integrability,interface,interface,88,". MATLAB; A MATLAB/ROOT interface has been developped by Johannes Kissel.; It is a data interface for reading and writing ROOT files from within MATLAB; just as you do with MATLAB files. For more information, see this announcement at the ROOT Forum. PyROOT. Support for python 2.6 has been added. Older versions will compile fine, but will; have problems when using the buffer interface for C arrays. For user convenience, code was added to load a custom rootlogon.py/.C, if available.; This code is loaded on first use of the ROOT module, and the python rootlogon.py is; loaded as a module. The language was improved by added a _creates property to all MethodProxy methods.; By setting this value to True, objects returned by such methods will be owned (and; reference counted) by the python interpreter.; By default, the Clone() and DrawClone() methods will have _create equal to True. ",MatchSource.DOCS,bindings/doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/bindings/doc/v522/index.html:377,Integrability,interface,interface,377,". MATLAB; A MATLAB/ROOT interface has been developped by Johannes Kissel.; It is a data interface for reading and writing ROOT files from within MATLAB; just as you do with MATLAB files. For more information, see this announcement at the ROOT Forum. PyROOT. Support for python 2.6 has been added. Older versions will compile fine, but will; have problems when using the buffer interface for C arrays. For user convenience, code was added to load a custom rootlogon.py/.C, if available.; This code is loaded on first use of the ROOT module, and the python rootlogon.py is; loaded as a module. The language was improved by added a _creates property to all MethodProxy methods.; By setting this value to True, objects returned by such methods will be owned (and; reference counted) by the python interpreter.; By default, the Clone() and DrawClone() methods will have _create equal to True. ",MatchSource.DOCS,bindings/doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/bindings/doc/v522/index.html:441,Performance,load,load,441,". MATLAB; A MATLAB/ROOT interface has been developped by Johannes Kissel.; It is a data interface for reading and writing ROOT files from within MATLAB; just as you do with MATLAB files. For more information, see this announcement at the ROOT Forum. PyROOT. Support for python 2.6 has been added. Older versions will compile fine, but will; have problems when using the buffer interface for C arrays. For user convenience, code was added to load a custom rootlogon.py/.C, if available.; This code is loaded on first use of the ROOT module, and the python rootlogon.py is; loaded as a module. The language was improved by added a _creates property to all MethodProxy methods.; By setting this value to True, objects returned by such methods will be owned (and; reference counted) by the python interpreter.; By default, the Clone() and DrawClone() methods will have _create equal to True. ",MatchSource.DOCS,bindings/doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/bindings/doc/v522/index.html:500,Performance,load,loaded,500,". MATLAB; A MATLAB/ROOT interface has been developped by Johannes Kissel.; It is a data interface for reading and writing ROOT files from within MATLAB; just as you do with MATLAB files. For more information, see this announcement at the ROOT Forum. PyROOT. Support for python 2.6 has been added. Older versions will compile fine, but will; have problems when using the buffer interface for C arrays. For user convenience, code was added to load a custom rootlogon.py/.C, if available.; This code is loaded on first use of the ROOT module, and the python rootlogon.py is; loaded as a module. The language was improved by added a _creates property to all MethodProxy methods.; By setting this value to True, objects returned by such methods will be owned (and; reference counted) by the python interpreter.; By default, the Clone() and DrawClone() methods will have _create equal to True. ",MatchSource.DOCS,bindings/doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/bindings/doc/v522/index.html:572,Performance,load,loaded,572,". MATLAB; A MATLAB/ROOT interface has been developped by Johannes Kissel.; It is a data interface for reading and writing ROOT files from within MATLAB; just as you do with MATLAB files. For more information, see this announcement at the ROOT Forum. PyROOT. Support for python 2.6 has been added. Older versions will compile fine, but will; have problems when using the buffer interface for C arrays. For user convenience, code was added to load a custom rootlogon.py/.C, if available.; This code is loaded on first use of the ROOT module, and the python rootlogon.py is; loaded as a module. The language was improved by added a _creates property to all MethodProxy methods.; By setting this value to True, objects returned by such methods will be owned (and; reference counted) by the python interpreter.; By default, the Clone() and DrawClone() methods will have _create equal to True. ",MatchSource.DOCS,bindings/doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/bindings/doc/v524/index.html:550,Performance,load,loading,550,". PyROOT. Null-pointers now carry type, rather than being the None object, to make sure; that correct overloads are selected.; Memory policy is settable on individual functions, rather than only globally,; through the _mempolicy data member that functions carry. In order to support PyPy analysis of PyROOT code, getter/setter methods have; been added to the proxies.; The pydoc tool already benefits from this, since PyROOT objects are now a bit; easier to inspect by such standard tools. By short-circuiting some paths during class proxy creation, loading of the; libPyROOT module is now faster. ",MatchSource.DOCS,bindings/doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/bindings/doc/v526/index.html:44,Security,access,access,44,". PyROOT. Fixes were made to ""member-style"" access on TTrees, to handle several more; common cases, such as where names do not match, and sub-branching.; Likewise, TPySelector was improved to handle new use cases where it needed; a function default constructor, and where the user wants to change the; associated TTree. It is now possible to use buffers, rather than strings, for char* function; arguments. ",MatchSource.DOCS,bindings/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/bindings/doc/v528/index.html:898,Deployability,release,release,898,". PyROOT. Python 3 is now in principle supported: a problem remains with passing builtin; types by reference, since the internal object layout has changed.; There may be further problems with handling of char*: all strings are unicode in; p3, so if the C++ code is meant to see the char* as byte*, that won't work. Other significant feature improvements include:. Globally overloaded operators are now supported, and histogram unary; multiplication with scalar is mapped onto TH1.Scale.; Significant changes to equality and non-equality operators should make their; behavior more consistent across the board, and in particular globally overloaded; equality operators for STL iterators should work as expected (if a dictionary entry; is generated for them).; Global arrays of builtin types are now supported.; Added further mappings of operator converters for builtin types.; Individual methods can release the GIL, by setting the ""_threaded"" parameter; of the method to True.; Constructors need not be creators of new objects (controlled with their; ""_creates"" parameters).; Added access to TSelector protected data members in TPySelector.; Derivable Fitter base classes are added for use with ROOT::Fitter.; Special cases for RooFit are added to resolve a few specific overloading; problems.; A Python Warning is issued if a void* converter or executor is chosen out of; necessity (e.g. because dictionaries are missing).; A Python Warning is issued if keyword arguments are given (unsupported). Notable bug fixes include:. Object returns as a member of a temporary will keep a life line to that; temporary, to prevent it from being destroyed in a long expression.; Added ""_"" as a valid class name character.; Speed of the destruction of memory-regulated objects has been improved; (made linear, rather than quadratic). ",MatchSource.DOCS,bindings/doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/bindings/doc/v528/index.html:1081,Security,access,access,1081,". PyROOT. Python 3 is now in principle supported: a problem remains with passing builtin; types by reference, since the internal object layout has changed.; There may be further problems with handling of char*: all strings are unicode in; p3, so if the C++ code is meant to see the char* as byte*, that won't work. Other significant feature improvements include:. Globally overloaded operators are now supported, and histogram unary; multiplication with scalar is mapped onto TH1.Scale.; Significant changes to equality and non-equality operators should make their; behavior more consistent across the board, and in particular globally overloaded; equality operators for STL iterators should work as expected (if a dictionary entry; is generated for them).; Global arrays of builtin types are now supported.; Added further mappings of operator converters for builtin types.; Individual methods can release the GIL, by setting the ""_threaded"" parameter; of the method to True.; Constructors need not be creators of new objects (controlled with their; ""_creates"" parameters).; Added access to TSelector protected data members in TPySelector.; Derivable Fitter base classes are added for use with ROOT::Fitter.; Special cases for RooFit are added to resolve a few specific overloading; problems.; A Python Warning is issued if a void* converter or executor is chosen out of; necessity (e.g. because dictionaries are missing).; A Python Warning is issued if keyword arguments are given (unsupported). Notable bug fixes include:. Object returns as a member of a temporary will keep a life line to that; temporary, to prevent it from being destroyed in a long expression.; Added ""_"" as a valid class name character.; Speed of the destruction of memory-regulated objects has been improved; (made linear, rather than quadratic). ",MatchSource.DOCS,bindings/doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/bindings/doc/v530/index.html:58,Performance,Load,LoadMacro,58,". PyROOT. A couple of minor bug fixes related to TPython::LoadMacro, TClass::DynamicCast and the setting of pointers through operator[] on STL containers. ",MatchSource.DOCS,bindings/doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/core/cont/doc/Understanding_Collections.html:2178,Availability,avail,available,2178,"C++ compilers used with the ROOT system fully; support templates. In the mean time, knowing the; role TObject plays in collections can be helpful. In general you don't need to worry about TObject. Many ROOT; classes have TObject as an ancestor. In fact, collections themselves; are descendants of TObject. This makes it possible for collections to; contain other collections (subcollections) in a tree structure. Such trees; are used in the ROOT system to implement components of the graphics system; (graphics pads containing pads), geometries (detectors in detectors), etc. The basic protocol TObject defines for collection elements is shown below:. IsEqual(); Compare(); IsSortable(); Hash(). How to use and override these member functions is shown in the; example program. Types of Collections. The ROOT system implements the following type of collections:; arrays, lists, sorted lists, B-trees, hashtables and maps.; The figure below shows the inheritance hierarchy for the primary; collection classes. Ordered Collections (Sequences). Sequences are collections that are externally ordered because they; maintain internal elements according to the order in which they; were added. The following sequence collections are available:. TList; THashList; TOrdCollection; TObjArray; TClonesArray. Both a TObjArray as well as a TOrdCollection can be sorted; using their Sort() member function (assuming the stored items are; sortable). Sorted Collections. Sorted collections are ordered by an internal (automatic) sorting mechanism.; The following sorted collections are available:. TSortedList; TBtree. Unordered Collections. Unordered collections don't maintain the order in which the elements were added.; I.e. when you iterate over an unordered collection, you are not likely to; retrieve elements in the same order they were added to the collection.; The following unordered collections are available:. THashTable; TMap. Using Collections. Rene Brun,; Fons Rademakers. Last update 24/11/95 by FR. ",MatchSource.DOCS,core/cont/doc/Understanding_Collections.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/doc/Understanding_Collections.html
https://github.com/root-project/root/tree/v6-32-06/core/cont/doc/Understanding_Collections.html:2522,Availability,avail,available,2522,"C++ compilers used with the ROOT system fully; support templates. In the mean time, knowing the; role TObject plays in collections can be helpful. In general you don't need to worry about TObject. Many ROOT; classes have TObject as an ancestor. In fact, collections themselves; are descendants of TObject. This makes it possible for collections to; contain other collections (subcollections) in a tree structure. Such trees; are used in the ROOT system to implement components of the graphics system; (graphics pads containing pads), geometries (detectors in detectors), etc. The basic protocol TObject defines for collection elements is shown below:. IsEqual(); Compare(); IsSortable(); Hash(). How to use and override these member functions is shown in the; example program. Types of Collections. The ROOT system implements the following type of collections:; arrays, lists, sorted lists, B-trees, hashtables and maps.; The figure below shows the inheritance hierarchy for the primary; collection classes. Ordered Collections (Sequences). Sequences are collections that are externally ordered because they; maintain internal elements according to the order in which they; were added. The following sequence collections are available:. TList; THashList; TOrdCollection; TObjArray; TClonesArray. Both a TObjArray as well as a TOrdCollection can be sorted; using their Sort() member function (assuming the stored items are; sortable). Sorted Collections. Sorted collections are ordered by an internal (automatic) sorting mechanism.; The following sorted collections are available:. TSortedList; TBtree. Unordered Collections. Unordered collections don't maintain the order in which the elements were added.; I.e. when you iterate over an unordered collection, you are not likely to; retrieve elements in the same order they were added to the collection.; The following unordered collections are available:. THashTable; TMap. Using Collections. Rene Brun,; Fons Rademakers. Last update 24/11/95 by FR. ",MatchSource.DOCS,core/cont/doc/Understanding_Collections.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/doc/Understanding_Collections.html
https://github.com/root-project/root/tree/v6-32-06/core/cont/doc/Understanding_Collections.html:2847,Availability,avail,available,2847,"C++ compilers used with the ROOT system fully; support templates. In the mean time, knowing the; role TObject plays in collections can be helpful. In general you don't need to worry about TObject. Many ROOT; classes have TObject as an ancestor. In fact, collections themselves; are descendants of TObject. This makes it possible for collections to; contain other collections (subcollections) in a tree structure. Such trees; are used in the ROOT system to implement components of the graphics system; (graphics pads containing pads), geometries (detectors in detectors), etc. The basic protocol TObject defines for collection elements is shown below:. IsEqual(); Compare(); IsSortable(); Hash(). How to use and override these member functions is shown in the; example program. Types of Collections. The ROOT system implements the following type of collections:; arrays, lists, sorted lists, B-trees, hashtables and maps.; The figure below shows the inheritance hierarchy for the primary; collection classes. Ordered Collections (Sequences). Sequences are collections that are externally ordered because they; maintain internal elements according to the order in which they; were added. The following sequence collections are available:. TList; THashList; TOrdCollection; TObjArray; TClonesArray. Both a TObjArray as well as a TOrdCollection can be sorted; using their Sort() member function (assuming the stored items are; sortable). Sorted Collections. Sorted collections are ordered by an internal (automatic) sorting mechanism.; The following sorted collections are available:. TSortedList; TBtree. Unordered Collections. Unordered collections don't maintain the order in which the elements were added.; I.e. when you iterate over an unordered collection, you are not likely to; retrieve elements in the same order they were added to the collection.; The following unordered collections are available:. THashTable; TMap. Using Collections. Rene Brun,; Fons Rademakers. Last update 24/11/95 by FR. ",MatchSource.DOCS,core/cont/doc/Understanding_Collections.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/doc/Understanding_Collections.html
https://github.com/root-project/root/tree/v6-32-06/core/cont/doc/Understanding_Collections.html:643,Deployability,release,release,643,". Understanding Collections. Understanding Collections. A collection is a group of related objects. You will find it easier to; manage a large number of items as a collection. For example, collections of; points and lines might be managed by a graphics pad. A vertex will have a; collection of tracks. A detector geometry contains collections of shapes,; materials, rotation matrices and sub-detectors.; Collections act as flexible alternatives to traditional data structures; of computer science such as arrays, lists, and trees. Collections can be thought of as polymorphic containers that can contain; different types of elements. For this release of the ROOT system, elements; to be placed in collections must be instances of classes.; These may be classes defined by you or provided by ROOT. Collection elements; must be instances of classes descending from ; TObject. The dependence of collections on TObject may disappear; in the future when all C++ compilers used with the ROOT system fully; support templates. In the mean time, knowing the; role TObject plays in collections can be helpful. In general you don't need to worry about TObject. Many ROOT; classes have TObject as an ancestor. In fact, collections themselves; are descendants of TObject. This makes it possible for collections to; contain other collections (subcollections) in a tree structure. Such trees; are used in the ROOT system to implement components of the graphics system; (graphics pads containing pads), geometries (detectors in detectors), etc. The basic protocol TObject defines for collection elements is shown below:. IsEqual(); Compare(); IsSortable(); Hash(). How to use and override these member functions is shown in the; example program. Types of Collections. The ROOT system implements the following type of collections:; arrays, lists, sorted lists, B-trees, hashtables and maps.; The figure below shows the inheritance hierarchy for the primary; collection classes. Ordered Collections (Sequences). Sequenc",MatchSource.DOCS,core/cont/doc/Understanding_Collections.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/doc/Understanding_Collections.html
https://github.com/root-project/root/tree/v6-32-06/core/cont/doc/Understanding_Collections.html:2930,Deployability,update,update,2930,"C++ compilers used with the ROOT system fully; support templates. In the mean time, knowing the; role TObject plays in collections can be helpful. In general you don't need to worry about TObject. Many ROOT; classes have TObject as an ancestor. In fact, collections themselves; are descendants of TObject. This makes it possible for collections to; contain other collections (subcollections) in a tree structure. Such trees; are used in the ROOT system to implement components of the graphics system; (graphics pads containing pads), geometries (detectors in detectors), etc. The basic protocol TObject defines for collection elements is shown below:. IsEqual(); Compare(); IsSortable(); Hash(). How to use and override these member functions is shown in the; example program. Types of Collections. The ROOT system implements the following type of collections:; arrays, lists, sorted lists, B-trees, hashtables and maps.; The figure below shows the inheritance hierarchy for the primary; collection classes. Ordered Collections (Sequences). Sequences are collections that are externally ordered because they; maintain internal elements according to the order in which they; were added. The following sequence collections are available:. TList; THashList; TOrdCollection; TObjArray; TClonesArray. Both a TObjArray as well as a TOrdCollection can be sorted; using their Sort() member function (assuming the stored items are; sortable). Sorted Collections. Sorted collections are ordered by an internal (automatic) sorting mechanism.; The following sorted collections are available:. TSortedList; TBtree. Unordered Collections. Unordered collections don't maintain the order in which the elements were added.; I.e. when you iterate over an unordered collection, you are not likely to; retrieve elements in the same order they were added to the collection.; The following unordered collections are available:. THashTable; TMap. Using Collections. Rene Brun,; Fons Rademakers. Last update 24/11/95 by FR. ",MatchSource.DOCS,core/cont/doc/Understanding_Collections.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/doc/Understanding_Collections.html
https://github.com/root-project/root/tree/v6-32-06/core/cont/doc/Understanding_Collections.html:878,Integrability,depend,dependence,878,". Understanding Collections. Understanding Collections. A collection is a group of related objects. You will find it easier to; manage a large number of items as a collection. For example, collections of; points and lines might be managed by a graphics pad. A vertex will have a; collection of tracks. A detector geometry contains collections of shapes,; materials, rotation matrices and sub-detectors.; Collections act as flexible alternatives to traditional data structures; of computer science such as arrays, lists, and trees. Collections can be thought of as polymorphic containers that can contain; different types of elements. For this release of the ROOT system, elements; to be placed in collections must be instances of classes.; These may be classes defined by you or provided by ROOT. Collection elements; must be instances of classes descending from ; TObject. The dependence of collections on TObject may disappear; in the future when all C++ compilers used with the ROOT system fully; support templates. In the mean time, knowing the; role TObject plays in collections can be helpful. In general you don't need to worry about TObject. Many ROOT; classes have TObject as an ancestor. In fact, collections themselves; are descendants of TObject. This makes it possible for collections to; contain other collections (subcollections) in a tree structure. Such trees; are used in the ROOT system to implement components of the graphics system; (graphics pads containing pads), geometries (detectors in detectors), etc. The basic protocol TObject defines for collection elements is shown below:. IsEqual(); Compare(); IsSortable(); Hash(). How to use and override these member functions is shown in the; example program. Types of Collections. The ROOT system implements the following type of collections:; arrays, lists, sorted lists, B-trees, hashtables and maps.; The figure below shows the inheritance hierarchy for the primary; collection classes. Ordered Collections (Sequences). Sequenc",MatchSource.DOCS,core/cont/doc/Understanding_Collections.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/doc/Understanding_Collections.html
https://github.com/root-project/root/tree/v6-32-06/core/cont/doc/Understanding_Collections.html:1539,Integrability,protocol,protocol,1539,"lymorphic containers that can contain; different types of elements. For this release of the ROOT system, elements; to be placed in collections must be instances of classes.; These may be classes defined by you or provided by ROOT. Collection elements; must be instances of classes descending from ; TObject. The dependence of collections on TObject may disappear; in the future when all C++ compilers used with the ROOT system fully; support templates. In the mean time, knowing the; role TObject plays in collections can be helpful. In general you don't need to worry about TObject. Many ROOT; classes have TObject as an ancestor. In fact, collections themselves; are descendants of TObject. This makes it possible for collections to; contain other collections (subcollections) in a tree structure. Such trees; are used in the ROOT system to implement components of the graphics system; (graphics pads containing pads), geometries (detectors in detectors), etc. The basic protocol TObject defines for collection elements is shown below:. IsEqual(); Compare(); IsSortable(); Hash(). How to use and override these member functions is shown in the; example program. Types of Collections. The ROOT system implements the following type of collections:; arrays, lists, sorted lists, B-trees, hashtables and maps.; The figure below shows the inheritance hierarchy for the primary; collection classes. Ordered Collections (Sequences). Sequences are collections that are externally ordered because they; maintain internal elements according to the order in which they; were added. The following sequence collections are available:. TList; THashList; TOrdCollection; TObjArray; TClonesArray. Both a TObjArray as well as a TOrdCollection can be sorted; using their Sort() member function (assuming the stored items are; sortable). Sorted Collections. Sorted collections are ordered by an internal (automatic) sorting mechanism.; The following sorted collections are available:. TSortedList; TBtree. Unordered C",MatchSource.DOCS,core/cont/doc/Understanding_Collections.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/doc/Understanding_Collections.html
https://github.com/root-project/root/tree/v6-32-06/core/cont/doc/Understanding_Collections.html:423,Modifiability,flexible,flexible,423,". Understanding Collections. Understanding Collections. A collection is a group of related objects. You will find it easier to; manage a large number of items as a collection. For example, collections of; points and lines might be managed by a graphics pad. A vertex will have a; collection of tracks. A detector geometry contains collections of shapes,; materials, rotation matrices and sub-detectors.; Collections act as flexible alternatives to traditional data structures; of computer science such as arrays, lists, and trees. Collections can be thought of as polymorphic containers that can contain; different types of elements. For this release of the ROOT system, elements; to be placed in collections must be instances of classes.; These may be classes defined by you or provided by ROOT. Collection elements; must be instances of classes descending from ; TObject. The dependence of collections on TObject may disappear; in the future when all C++ compilers used with the ROOT system fully; support templates. In the mean time, knowing the; role TObject plays in collections can be helpful. In general you don't need to worry about TObject. Many ROOT; classes have TObject as an ancestor. In fact, collections themselves; are descendants of TObject. This makes it possible for collections to; contain other collections (subcollections) in a tree structure. Such trees; are used in the ROOT system to implement components of the graphics system; (graphics pads containing pads), geometries (detectors in detectors), etc. The basic protocol TObject defines for collection elements is shown below:. IsEqual(); Compare(); IsSortable(); Hash(). How to use and override these member functions is shown in the; example program. Types of Collections. The ROOT system implements the following type of collections:; arrays, lists, sorted lists, B-trees, hashtables and maps.; The figure below shows the inheritance hierarchy for the primary; collection classes. Ordered Collections (Sequences). Sequenc",MatchSource.DOCS,core/cont/doc/Understanding_Collections.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/doc/Understanding_Collections.html
https://github.com/root-project/root/tree/v6-32-06/core/cont/doc/Understanding_Collections.html:564,Modifiability,polymorphi,polymorphic,564,". Understanding Collections. Understanding Collections. A collection is a group of related objects. You will find it easier to; manage a large number of items as a collection. For example, collections of; points and lines might be managed by a graphics pad. A vertex will have a; collection of tracks. A detector geometry contains collections of shapes,; materials, rotation matrices and sub-detectors.; Collections act as flexible alternatives to traditional data structures; of computer science such as arrays, lists, and trees. Collections can be thought of as polymorphic containers that can contain; different types of elements. For this release of the ROOT system, elements; to be placed in collections must be instances of classes.; These may be classes defined by you or provided by ROOT. Collection elements; must be instances of classes descending from ; TObject. The dependence of collections on TObject may disappear; in the future when all C++ compilers used with the ROOT system fully; support templates. In the mean time, knowing the; role TObject plays in collections can be helpful. In general you don't need to worry about TObject. Many ROOT; classes have TObject as an ancestor. In fact, collections themselves; are descendants of TObject. This makes it possible for collections to; contain other collections (subcollections) in a tree structure. Such trees; are used in the ROOT system to implement components of the graphics system; (graphics pads containing pads), geometries (detectors in detectors), etc. The basic protocol TObject defines for collection elements is shown below:. IsEqual(); Compare(); IsSortable(); Hash(). How to use and override these member functions is shown in the; example program. Types of Collections. The ROOT system implements the following type of collections:; arrays, lists, sorted lists, B-trees, hashtables and maps.; The figure below shows the inheritance hierarchy for the primary; collection classes. Ordered Collections (Sequences). Sequenc",MatchSource.DOCS,core/cont/doc/Understanding_Collections.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/doc/Understanding_Collections.html
https://github.com/root-project/root/tree/v6-32-06/core/cont/doc/Understanding_Collections.html:1902,Modifiability,inherit,inheritance,1902,"ay disappear; in the future when all C++ compilers used with the ROOT system fully; support templates. In the mean time, knowing the; role TObject plays in collections can be helpful. In general you don't need to worry about TObject. Many ROOT; classes have TObject as an ancestor. In fact, collections themselves; are descendants of TObject. This makes it possible for collections to; contain other collections (subcollections) in a tree structure. Such trees; are used in the ROOT system to implement components of the graphics system; (graphics pads containing pads), geometries (detectors in detectors), etc. The basic protocol TObject defines for collection elements is shown below:. IsEqual(); Compare(); IsSortable(); Hash(). How to use and override these member functions is shown in the; example program. Types of Collections. The ROOT system implements the following type of collections:; arrays, lists, sorted lists, B-trees, hashtables and maps.; The figure below shows the inheritance hierarchy for the primary; collection classes. Ordered Collections (Sequences). Sequences are collections that are externally ordered because they; maintain internal elements according to the order in which they; were added. The following sequence collections are available:. TList; THashList; TOrdCollection; TObjArray; TClonesArray. Both a TObjArray as well as a TOrdCollection can be sorted; using their Sort() member function (assuming the stored items are; sortable). Sorted Collections. Sorted collections are ordered by an internal (automatic) sorting mechanism.; The following sorted collections are available:. TSortedList; TBtree. Unordered Collections. Unordered collections don't maintain the order in which the elements were added.; I.e. when you iterate over an unordered collection, you are not likely to; retrieve elements in the same order they were added to the collection.; The following unordered collections are available:. THashTable; TMap. Using Collections. Rene Brun,; Fons Rade",MatchSource.DOCS,core/cont/doc/Understanding_Collections.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/doc/Understanding_Collections.html
https://github.com/root-project/root/tree/v6-32-06/core/cont/doc/Understanding_Collections.html:304,Safety,detect,detector,304,". Understanding Collections. Understanding Collections. A collection is a group of related objects. You will find it easier to; manage a large number of items as a collection. For example, collections of; points and lines might be managed by a graphics pad. A vertex will have a; collection of tracks. A detector geometry contains collections of shapes,; materials, rotation matrices and sub-detectors.; Collections act as flexible alternatives to traditional data structures; of computer science such as arrays, lists, and trees. Collections can be thought of as polymorphic containers that can contain; different types of elements. For this release of the ROOT system, elements; to be placed in collections must be instances of classes.; These may be classes defined by you or provided by ROOT. Collection elements; must be instances of classes descending from ; TObject. The dependence of collections on TObject may disappear; in the future when all C++ compilers used with the ROOT system fully; support templates. In the mean time, knowing the; role TObject plays in collections can be helpful. In general you don't need to worry about TObject. Many ROOT; classes have TObject as an ancestor. In fact, collections themselves; are descendants of TObject. This makes it possible for collections to; contain other collections (subcollections) in a tree structure. Such trees; are used in the ROOT system to implement components of the graphics system; (graphics pads containing pads), geometries (detectors in detectors), etc. The basic protocol TObject defines for collection elements is shown below:. IsEqual(); Compare(); IsSortable(); Hash(). How to use and override these member functions is shown in the; example program. Types of Collections. The ROOT system implements the following type of collections:; arrays, lists, sorted lists, B-trees, hashtables and maps.; The figure below shows the inheritance hierarchy for the primary; collection classes. Ordered Collections (Sequences). Sequenc",MatchSource.DOCS,core/cont/doc/Understanding_Collections.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/doc/Understanding_Collections.html
https://github.com/root-project/root/tree/v6-32-06/core/cont/doc/Understanding_Collections.html:392,Safety,detect,detectors,392,". Understanding Collections. Understanding Collections. A collection is a group of related objects. You will find it easier to; manage a large number of items as a collection. For example, collections of; points and lines might be managed by a graphics pad. A vertex will have a; collection of tracks. A detector geometry contains collections of shapes,; materials, rotation matrices and sub-detectors.; Collections act as flexible alternatives to traditional data structures; of computer science such as arrays, lists, and trees. Collections can be thought of as polymorphic containers that can contain; different types of elements. For this release of the ROOT system, elements; to be placed in collections must be instances of classes.; These may be classes defined by you or provided by ROOT. Collection elements; must be instances of classes descending from ; TObject. The dependence of collections on TObject may disappear; in the future when all C++ compilers used with the ROOT system fully; support templates. In the mean time, knowing the; role TObject plays in collections can be helpful. In general you don't need to worry about TObject. Many ROOT; classes have TObject as an ancestor. In fact, collections themselves; are descendants of TObject. This makes it possible for collections to; contain other collections (subcollections) in a tree structure. Such trees; are used in the ROOT system to implement components of the graphics system; (graphics pads containing pads), geometries (detectors in detectors), etc. The basic protocol TObject defines for collection elements is shown below:. IsEqual(); Compare(); IsSortable(); Hash(). How to use and override these member functions is shown in the; example program. Types of Collections. The ROOT system implements the following type of collections:; arrays, lists, sorted lists, B-trees, hashtables and maps.; The figure below shows the inheritance hierarchy for the primary; collection classes. Ordered Collections (Sequences). Sequenc",MatchSource.DOCS,core/cont/doc/Understanding_Collections.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/doc/Understanding_Collections.html
https://github.com/root-project/root/tree/v6-32-06/core/cont/doc/Understanding_Collections.html:1499,Safety,detect,detectors,1499,"o traditional data structures; of computer science such as arrays, lists, and trees. Collections can be thought of as polymorphic containers that can contain; different types of elements. For this release of the ROOT system, elements; to be placed in collections must be instances of classes.; These may be classes defined by you or provided by ROOT. Collection elements; must be instances of classes descending from ; TObject. The dependence of collections on TObject may disappear; in the future when all C++ compilers used with the ROOT system fully; support templates. In the mean time, knowing the; role TObject plays in collections can be helpful. In general you don't need to worry about TObject. Many ROOT; classes have TObject as an ancestor. In fact, collections themselves; are descendants of TObject. This makes it possible for collections to; contain other collections (subcollections) in a tree structure. Such trees; are used in the ROOT system to implement components of the graphics system; (graphics pads containing pads), geometries (detectors in detectors), etc. The basic protocol TObject defines for collection elements is shown below:. IsEqual(); Compare(); IsSortable(); Hash(). How to use and override these member functions is shown in the; example program. Types of Collections. The ROOT system implements the following type of collections:; arrays, lists, sorted lists, B-trees, hashtables and maps.; The figure below shows the inheritance hierarchy for the primary; collection classes. Ordered Collections (Sequences). Sequences are collections that are externally ordered because they; maintain internal elements according to the order in which they; were added. The following sequence collections are available:. TList; THashList; TOrdCollection; TObjArray; TClonesArray. Both a TObjArray as well as a TOrdCollection can be sorted; using their Sort() member function (assuming the stored items are; sortable). Sorted Collections. Sorted collections are ordered by an int",MatchSource.DOCS,core/cont/doc/Understanding_Collections.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/doc/Understanding_Collections.html
https://github.com/root-project/root/tree/v6-32-06/core/cont/doc/Understanding_Collections.html:1512,Safety,detect,detectors,1512,"o traditional data structures; of computer science such as arrays, lists, and trees. Collections can be thought of as polymorphic containers that can contain; different types of elements. For this release of the ROOT system, elements; to be placed in collections must be instances of classes.; These may be classes defined by you or provided by ROOT. Collection elements; must be instances of classes descending from ; TObject. The dependence of collections on TObject may disappear; in the future when all C++ compilers used with the ROOT system fully; support templates. In the mean time, knowing the; role TObject plays in collections can be helpful. In general you don't need to worry about TObject. Many ROOT; classes have TObject as an ancestor. In fact, collections themselves; are descendants of TObject. This makes it possible for collections to; contain other collections (subcollections) in a tree structure. Such trees; are used in the ROOT system to implement components of the graphics system; (graphics pads containing pads), geometries (detectors in detectors), etc. The basic protocol TObject defines for collection elements is shown below:. IsEqual(); Compare(); IsSortable(); Hash(). How to use and override these member functions is shown in the; example program. Types of Collections. The ROOT system implements the following type of collections:; arrays, lists, sorted lists, B-trees, hashtables and maps.; The figure below shows the inheritance hierarchy for the primary; collection classes. Ordered Collections (Sequences). Sequences are collections that are externally ordered because they; maintain internal elements according to the order in which they; were added. The following sequence collections are available:. TList; THashList; TOrdCollection; TObjArray; TClonesArray. Both a TObjArray as well as a TOrdCollection can be sorted; using their Sort() member function (assuming the stored items are; sortable). Sorted Collections. Sorted collections are ordered by an int",MatchSource.DOCS,core/cont/doc/Understanding_Collections.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/doc/Understanding_Collections.html
https://github.com/root-project/root/tree/v6-32-06/core/cont/doc/Understanding_Collections.html:1641,Security,Hash,Hash,1641,"ements. For this release of the ROOT system, elements; to be placed in collections must be instances of classes.; These may be classes defined by you or provided by ROOT. Collection elements; must be instances of classes descending from ; TObject. The dependence of collections on TObject may disappear; in the future when all C++ compilers used with the ROOT system fully; support templates. In the mean time, knowing the; role TObject plays in collections can be helpful. In general you don't need to worry about TObject. Many ROOT; classes have TObject as an ancestor. In fact, collections themselves; are descendants of TObject. This makes it possible for collections to; contain other collections (subcollections) in a tree structure. Such trees; are used in the ROOT system to implement components of the graphics system; (graphics pads containing pads), geometries (detectors in detectors), etc. The basic protocol TObject defines for collection elements is shown below:. IsEqual(); Compare(); IsSortable(); Hash(). How to use and override these member functions is shown in the; example program. Types of Collections. The ROOT system implements the following type of collections:; arrays, lists, sorted lists, B-trees, hashtables and maps.; The figure below shows the inheritance hierarchy for the primary; collection classes. Ordered Collections (Sequences). Sequences are collections that are externally ordered because they; maintain internal elements according to the order in which they; were added. The following sequence collections are available:. TList; THashList; TOrdCollection; TObjArray; TClonesArray. Both a TObjArray as well as a TOrdCollection can be sorted; using their Sort() member function (assuming the stored items are; sortable). Sorted Collections. Sorted collections are ordered by an internal (automatic) sorting mechanism.; The following sorted collections are available:. TSortedList; TBtree. Unordered Collections. Unordered collections don't maintain the order i",MatchSource.DOCS,core/cont/doc/Understanding_Collections.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/doc/Understanding_Collections.html
https://github.com/root-project/root/tree/v6-32-06/core/cont/doc/Understanding_Collections.html:1853,Security,hash,hashtables,1853,"ents; must be instances of classes descending from ; TObject. The dependence of collections on TObject may disappear; in the future when all C++ compilers used with the ROOT system fully; support templates. In the mean time, knowing the; role TObject plays in collections can be helpful. In general you don't need to worry about TObject. Many ROOT; classes have TObject as an ancestor. In fact, collections themselves; are descendants of TObject. This makes it possible for collections to; contain other collections (subcollections) in a tree structure. Such trees; are used in the ROOT system to implement components of the graphics system; (graphics pads containing pads), geometries (detectors in detectors), etc. The basic protocol TObject defines for collection elements is shown below:. IsEqual(); Compare(); IsSortable(); Hash(). How to use and override these member functions is shown in the; example program. Types of Collections. The ROOT system implements the following type of collections:; arrays, lists, sorted lists, B-trees, hashtables and maps.; The figure below shows the inheritance hierarchy for the primary; collection classes. Ordered Collections (Sequences). Sequences are collections that are externally ordered because they; maintain internal elements according to the order in which they; were added. The following sequence collections are available:. TList; THashList; TOrdCollection; TObjArray; TClonesArray. Both a TObjArray as well as a TOrdCollection can be sorted; using their Sort() member function (assuming the stored items are; sortable). Sorted Collections. Sorted collections are ordered by an internal (automatic) sorting mechanism.; The following sorted collections are available:. TSortedList; TBtree. Unordered Collections. Unordered collections don't maintain the order in which the elements were added.; I.e. when you iterate over an unordered collection, you are not likely to; retrieve elements in the same order they were added to the collection.; The f",MatchSource.DOCS,core/cont/doc/Understanding_Collections.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/doc/Understanding_Collections.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v520/index.html:612,Deployability,release,release,612,". Core. The ROOT source directory has been drastically reorganized and simplified.; Each source directory containing the code for a single library or plugin,; were all in the same top level directory, without logical grouping.; This made it difficult to see which libraries were related and belonged; together. In the new structure we've added a set of meta directories; that are used to group the sources of related libraries, and that also; reflects the ROOT team work package structure.; Note, the name and number of libraries has not been changed.; This new structure also facilitates the maintaining of the release notes; and other documentation items per meta package. On Linux, MacOS X and Windows, there is no need anymore to define the; environment variable ROOTSYS. Internally ROOTSYS is set depending on the; location of the ROOT libraries. ROOTSYS was never needed when ROOT was; configured using --prefix. On MacOS X when configure'ing with --enable-rpath (and not specifying; --prefix) the installation does not need (DY)LD_LIBRARY_PATH to be set; anymore. The installation is completely relocatable. The (DY)LD_LIBRARY_PATH; is determined relative to the location of the root executable. On Windows .root files are now associated with the most recently executed; ROOT installation, i.e. run ROOT once and .root files open with ROOT. Class TMessageHandler derives now from TQObject and does emit signals.; This allows for easier usage of this class. In this release xrootd and libAfterImage are managed in Subversion; via so called ""vendor branches"". This is completely transparent; except for people who do directly use svn. You will get the message:. $ svn up; svn: Failed to add directory 'xrootd/src/xrootd': object of the same name already exists; $ rm -rf xrootd/src/xrootd; $ svn up; svn: Failed to add directory 'asimage/src/libAfterImage': object of the same name already exists; $ rm -rf asimage/src/libAfterImage; $ svn up. Port to gcc 4.3.1. This version of gcc is much stric",MatchSource.DOCS,core/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v520/index.html:1004,Deployability,install,installation,1004,". Core. The ROOT source directory has been drastically reorganized and simplified.; Each source directory containing the code for a single library or plugin,; were all in the same top level directory, without logical grouping.; This made it difficult to see which libraries were related and belonged; together. In the new structure we've added a set of meta directories; that are used to group the sources of related libraries, and that also; reflects the ROOT team work package structure.; Note, the name and number of libraries has not been changed.; This new structure also facilitates the maintaining of the release notes; and other documentation items per meta package. On Linux, MacOS X and Windows, there is no need anymore to define the; environment variable ROOTSYS. Internally ROOTSYS is set depending on the; location of the ROOT libraries. ROOTSYS was never needed when ROOT was; configured using --prefix. On MacOS X when configure'ing with --enable-rpath (and not specifying; --prefix) the installation does not need (DY)LD_LIBRARY_PATH to be set; anymore. The installation is completely relocatable. The (DY)LD_LIBRARY_PATH; is determined relative to the location of the root executable. On Windows .root files are now associated with the most recently executed; ROOT installation, i.e. run ROOT once and .root files open with ROOT. Class TMessageHandler derives now from TQObject and does emit signals.; This allows for easier usage of this class. In this release xrootd and libAfterImage are managed in Subversion; via so called ""vendor branches"". This is completely transparent; except for people who do directly use svn. You will get the message:. $ svn up; svn: Failed to add directory 'xrootd/src/xrootd': object of the same name already exists; $ rm -rf xrootd/src/xrootd; $ svn up; svn: Failed to add directory 'asimage/src/libAfterImage': object of the same name already exists; $ rm -rf asimage/src/libAfterImage; $ svn up. Port to gcc 4.3.1. This version of gcc is much stric",MatchSource.DOCS,core/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v520/index.html:1075,Deployability,install,installation,1075,"rce directory containing the code for a single library or plugin,; were all in the same top level directory, without logical grouping.; This made it difficult to see which libraries were related and belonged; together. In the new structure we've added a set of meta directories; that are used to group the sources of related libraries, and that also; reflects the ROOT team work package structure.; Note, the name and number of libraries has not been changed.; This new structure also facilitates the maintaining of the release notes; and other documentation items per meta package. On Linux, MacOS X and Windows, there is no need anymore to define the; environment variable ROOTSYS. Internally ROOTSYS is set depending on the; location of the ROOT libraries. ROOTSYS was never needed when ROOT was; configured using --prefix. On MacOS X when configure'ing with --enable-rpath (and not specifying; --prefix) the installation does not need (DY)LD_LIBRARY_PATH to be set; anymore. The installation is completely relocatable. The (DY)LD_LIBRARY_PATH; is determined relative to the location of the root executable. On Windows .root files are now associated with the most recently executed; ROOT installation, i.e. run ROOT once and .root files open with ROOT. Class TMessageHandler derives now from TQObject and does emit signals.; This allows for easier usage of this class. In this release xrootd and libAfterImage are managed in Subversion; via so called ""vendor branches"". This is completely transparent; except for people who do directly use svn. You will get the message:. $ svn up; svn: Failed to add directory 'xrootd/src/xrootd': object of the same name already exists; $ rm -rf xrootd/src/xrootd; $ svn up; svn: Failed to add directory 'asimage/src/libAfterImage': object of the same name already exists; $ rm -rf asimage/src/libAfterImage; $ svn up. Port to gcc 4.3.1. This version of gcc is much stricker with respect to; implicit header files so in many source files <stdlib.h> and <string.h",MatchSource.DOCS,core/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v520/index.html:1283,Deployability,install,installation,1283," which libraries were related and belonged; together. In the new structure we've added a set of meta directories; that are used to group the sources of related libraries, and that also; reflects the ROOT team work package structure.; Note, the name and number of libraries has not been changed.; This new structure also facilitates the maintaining of the release notes; and other documentation items per meta package. On Linux, MacOS X and Windows, there is no need anymore to define the; environment variable ROOTSYS. Internally ROOTSYS is set depending on the; location of the ROOT libraries. ROOTSYS was never needed when ROOT was; configured using --prefix. On MacOS X when configure'ing with --enable-rpath (and not specifying; --prefix) the installation does not need (DY)LD_LIBRARY_PATH to be set; anymore. The installation is completely relocatable. The (DY)LD_LIBRARY_PATH; is determined relative to the location of the root executable. On Windows .root files are now associated with the most recently executed; ROOT installation, i.e. run ROOT once and .root files open with ROOT. Class TMessageHandler derives now from TQObject and does emit signals.; This allows for easier usage of this class. In this release xrootd and libAfterImage are managed in Subversion; via so called ""vendor branches"". This is completely transparent; except for people who do directly use svn. You will get the message:. $ svn up; svn: Failed to add directory 'xrootd/src/xrootd': object of the same name already exists; $ rm -rf xrootd/src/xrootd; $ svn up; svn: Failed to add directory 'asimage/src/libAfterImage': object of the same name already exists; $ rm -rf asimage/src/libAfterImage; $ svn up. Port to gcc 4.3.1. This version of gcc is much stricker with respect to; implicit header files so in many source files <stdlib.h> and <string.h>; had to be added. TPRegexp. Modularized Match() and Substitute() functions so that the low-level work; is done by MatchInternal() and SubstituteInternal(). Added f",MatchSource.DOCS,core/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v520/index.html:1472,Deployability,release,release,1472,"ber of libraries has not been changed.; This new structure also facilitates the maintaining of the release notes; and other documentation items per meta package. On Linux, MacOS X and Windows, there is no need anymore to define the; environment variable ROOTSYS. Internally ROOTSYS is set depending on the; location of the ROOT libraries. ROOTSYS was never needed when ROOT was; configured using --prefix. On MacOS X when configure'ing with --enable-rpath (and not specifying; --prefix) the installation does not need (DY)LD_LIBRARY_PATH to be set; anymore. The installation is completely relocatable. The (DY)LD_LIBRARY_PATH; is determined relative to the location of the root executable. On Windows .root files are now associated with the most recently executed; ROOT installation, i.e. run ROOT once and .root files open with ROOT. Class TMessageHandler derives now from TQObject and does emit signals.; This allows for easier usage of this class. In this release xrootd and libAfterImage are managed in Subversion; via so called ""vendor branches"". This is completely transparent; except for people who do directly use svn. You will get the message:. $ svn up; svn: Failed to add directory 'xrootd/src/xrootd': object of the same name already exists; $ rm -rf xrootd/src/xrootd; $ svn up; svn: Failed to add directory 'asimage/src/libAfterImage': object of the same name already exists; $ rm -rf asimage/src/libAfterImage; $ svn up. Port to gcc 4.3.1. This version of gcc is much stricker with respect to; implicit header files so in many source files <stdlib.h> and <string.h>; had to be added. TPRegexp. Modularized Match() and Substitute() functions so that the low-level work; is done by MatchInternal() and SubstituteInternal(). Added function TString GetModifiers() that translates from bit-flag; options back to perl-style option characters. For all functions that do actual matching replaced the default value; of 'Int_t nMatchMax' argument from 30 to 10. PCRE internals require; the index ",MatchSource.DOCS,core/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v520/index.html:2756,Deployability,update,updated,2756,"d': object of the same name already exists; $ rm -rf xrootd/src/xrootd; $ svn up; svn: Failed to add directory 'asimage/src/libAfterImage': object of the same name already exists; $ rm -rf asimage/src/libAfterImage; $ svn up. Port to gcc 4.3.1. This version of gcc is much stricker with respect to; implicit header files so in many source files <stdlib.h> and <string.h>; had to be added. TPRegexp. Modularized Match() and Substitute() functions so that the low-level work; is done by MatchInternal() and SubstituteInternal(). Added function TString GetModifiers() that translates from bit-flag; options back to perl-style option characters. For all functions that do actual matching replaced the default value; of 'Int_t nMatchMax' argument from 30 to 10. PCRE internals require; the index buffer to be 3-times the number of allowed matches. This; multiplication is now performed in individual functions and nMatchMax; is really the number of allowed matches. Two function calls in; TString passing this number explicitly have been updated. TPMERegexp. New sub-class of TPRegexp with API closer to PERL.; Supports main Perl operations using regular expressions (Match,; Substitute and Split). To retrieve the results one can simply use; operator[] returning a TString. New tutorial regexp_pme.C. Meta. Add a new TClass interface to be able to trigger the ""auto addition of object; to a TDirectory object"". If a class has a member function:; DirectoryAutoAdd(TDirectory*); it will now be accessible (when the dictionary is generated via rootcint; for now) via TClass::GetDirectoryAutoAdd which return a wrapper with the; signature:; void (*)(void *this_obj,TDirectory *where_to_add). Extend #pragma create TClass; to namespaces.; Enable autoloading of the cintdlls.; rlibmap now handles #pragma create TClass; statements. Cont. Support for std algorithms and iterators for ROOT collection classes by Anar.; The background is the following. While working on the PROOF code I found; that enumerating TLi",MatchSource.DOCS,core/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v520/index.html:4507,Deployability,update,updated,4507,"the results one can simply use; operator[] returning a TString. New tutorial regexp_pme.C. Meta. Add a new TClass interface to be able to trigger the ""auto addition of object; to a TDirectory object"". If a class has a member function:; DirectoryAutoAdd(TDirectory*); it will now be accessible (when the dictionary is generated via rootcint; for now) via TClass::GetDirectoryAutoAdd which return a wrapper with the; signature:; void (*)(void *this_obj,TDirectory *where_to_add). Extend #pragma create TClass; to namespaces.; Enable autoloading of the cintdlls.; rlibmap now handles #pragma create TClass; statements. Cont. Support for std algorithms and iterators for ROOT collection classes by Anar.; The background is the following. While working on the PROOF code I found; that enumerating TList is an inconvenient and a long operation, I had to; write the same code all over the place and make duplications. I tried; to use STD algorithms with it, namely std::for_each, and failed.; I therefore decided to enable std::for_each algorithm for ROOT; Containers/Iterators by making as few as possible changes, without rewriting; iterators at all. Now with only two simple lines of code one is able to; iterate through a container:. TIter iter(&list);; for_each(iter.Begin(), TIter::End(), SEnumFunctor());. or. for_each(iter.Begin(), inter_end, SEnumFunctor());. where iter_end could be an iterator to a middle of the container. After I had changed Iterators so that they could be used with std::for_each,; I decided to go further and did some more changes. As a result,. I have updated CINT implementation of some algorithms (they look now; more or less better in terms of the standard),. All collections can be now used with std::for_each, std::find_if,; std::count_if (probably with some more algorithms. I've listed here; only what has been *checked* by me). A test program has been added: $ROOTSYS/test/stressIterators.cxx. A tutorial macro has been added: $ROOTSYS/tutorials/cont/TListAndSTL.C. ",MatchSource.DOCS,core/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v520/index.html:802,Integrability,depend,depending,802,". Core. The ROOT source directory has been drastically reorganized and simplified.; Each source directory containing the code for a single library or plugin,; were all in the same top level directory, without logical grouping.; This made it difficult to see which libraries were related and belonged; together. In the new structure we've added a set of meta directories; that are used to group the sources of related libraries, and that also; reflects the ROOT team work package structure.; Note, the name and number of libraries has not been changed.; This new structure also facilitates the maintaining of the release notes; and other documentation items per meta package. On Linux, MacOS X and Windows, there is no need anymore to define the; environment variable ROOTSYS. Internally ROOTSYS is set depending on the; location of the ROOT libraries. ROOTSYS was never needed when ROOT was; configured using --prefix. On MacOS X when configure'ing with --enable-rpath (and not specifying; --prefix) the installation does not need (DY)LD_LIBRARY_PATH to be set; anymore. The installation is completely relocatable. The (DY)LD_LIBRARY_PATH; is determined relative to the location of the root executable. On Windows .root files are now associated with the most recently executed; ROOT installation, i.e. run ROOT once and .root files open with ROOT. Class TMessageHandler derives now from TQObject and does emit signals.; This allows for easier usage of this class. In this release xrootd and libAfterImage are managed in Subversion; via so called ""vendor branches"". This is completely transparent; except for people who do directly use svn. You will get the message:. $ svn up; svn: Failed to add directory 'xrootd/src/xrootd': object of the same name already exists; $ rm -rf xrootd/src/xrootd; $ svn up; svn: Failed to add directory 'asimage/src/libAfterImage': object of the same name already exists; $ rm -rf asimage/src/libAfterImage; $ svn up. Port to gcc 4.3.1. This version of gcc is much stric",MatchSource.DOCS,core/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v520/index.html:1657,Integrability,message,message,1657,"tems per meta package. On Linux, MacOS X and Windows, there is no need anymore to define the; environment variable ROOTSYS. Internally ROOTSYS is set depending on the; location of the ROOT libraries. ROOTSYS was never needed when ROOT was; configured using --prefix. On MacOS X when configure'ing with --enable-rpath (and not specifying; --prefix) the installation does not need (DY)LD_LIBRARY_PATH to be set; anymore. The installation is completely relocatable. The (DY)LD_LIBRARY_PATH; is determined relative to the location of the root executable. On Windows .root files are now associated with the most recently executed; ROOT installation, i.e. run ROOT once and .root files open with ROOT. Class TMessageHandler derives now from TQObject and does emit signals.; This allows for easier usage of this class. In this release xrootd and libAfterImage are managed in Subversion; via so called ""vendor branches"". This is completely transparent; except for people who do directly use svn. You will get the message:. $ svn up; svn: Failed to add directory 'xrootd/src/xrootd': object of the same name already exists; $ rm -rf xrootd/src/xrootd; $ svn up; svn: Failed to add directory 'asimage/src/libAfterImage': object of the same name already exists; $ rm -rf asimage/src/libAfterImage; $ svn up. Port to gcc 4.3.1. This version of gcc is much stricker with respect to; implicit header files so in many source files <stdlib.h> and <string.h>; had to be added. TPRegexp. Modularized Match() and Substitute() functions so that the low-level work; is done by MatchInternal() and SubstituteInternal(). Added function TString GetModifiers() that translates from bit-flag; options back to perl-style option characters. For all functions that do actual matching replaced the default value; of 'Int_t nMatchMax' argument from 30 to 10. PCRE internals require; the index buffer to be 3-times the number of allowed matches. This; multiplication is now performed in individual functions and nMatchMax; is really ",MatchSource.DOCS,core/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v520/index.html:3043,Integrability,interface,interface,3043,"> and <string.h>; had to be added. TPRegexp. Modularized Match() and Substitute() functions so that the low-level work; is done by MatchInternal() and SubstituteInternal(). Added function TString GetModifiers() that translates from bit-flag; options back to perl-style option characters. For all functions that do actual matching replaced the default value; of 'Int_t nMatchMax' argument from 30 to 10. PCRE internals require; the index buffer to be 3-times the number of allowed matches. This; multiplication is now performed in individual functions and nMatchMax; is really the number of allowed matches. Two function calls in; TString passing this number explicitly have been updated. TPMERegexp. New sub-class of TPRegexp with API closer to PERL.; Supports main Perl operations using regular expressions (Match,; Substitute and Split). To retrieve the results one can simply use; operator[] returning a TString. New tutorial regexp_pme.C. Meta. Add a new TClass interface to be able to trigger the ""auto addition of object; to a TDirectory object"". If a class has a member function:; DirectoryAutoAdd(TDirectory*); it will now be accessible (when the dictionary is generated via rootcint; for now) via TClass::GetDirectoryAutoAdd which return a wrapper with the; signature:; void (*)(void *this_obj,TDirectory *where_to_add). Extend #pragma create TClass; to namespaces.; Enable autoloading of the cintdlls.; rlibmap now handles #pragma create TClass; statements. Cont. Support for std algorithms and iterators for ROOT collection classes by Anar.; The background is the following. While working on the PROOF code I found; that enumerating TList is an inconvenient and a long operation, I had to; write the same code all over the place and make duplications. I tried; to use STD algorithms with it, namely std::for_each, and failed.; I therefore decided to enable std::for_each algorithm for ROOT; Containers/Iterators by making as few as possible changes, without rewriting; iterators at all. No",MatchSource.DOCS,core/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v520/index.html:3326,Integrability,wrap,wrapper,3326,"tring GetModifiers() that translates from bit-flag; options back to perl-style option characters. For all functions that do actual matching replaced the default value; of 'Int_t nMatchMax' argument from 30 to 10. PCRE internals require; the index buffer to be 3-times the number of allowed matches. This; multiplication is now performed in individual functions and nMatchMax; is really the number of allowed matches. Two function calls in; TString passing this number explicitly have been updated. TPMERegexp. New sub-class of TPRegexp with API closer to PERL.; Supports main Perl operations using regular expressions (Match,; Substitute and Split). To retrieve the results one can simply use; operator[] returning a TString. New tutorial regexp_pme.C. Meta. Add a new TClass interface to be able to trigger the ""auto addition of object; to a TDirectory object"". If a class has a member function:; DirectoryAutoAdd(TDirectory*); it will now be accessible (when the dictionary is generated via rootcint; for now) via TClass::GetDirectoryAutoAdd which return a wrapper with the; signature:; void (*)(void *this_obj,TDirectory *where_to_add). Extend #pragma create TClass; to namespaces.; Enable autoloading of the cintdlls.; rlibmap now handles #pragma create TClass; statements. Cont. Support for std algorithms and iterators for ROOT collection classes by Anar.; The background is the following. While working on the PROOF code I found; that enumerating TList is an inconvenient and a long operation, I had to; write the same code all over the place and make duplications. I tried; to use STD algorithms with it, namely std::for_each, and failed.; I therefore decided to enable std::for_each algorithm for ROOT; Containers/Iterators by making as few as possible changes, without rewriting; iterators at all. Now with only two simple lines of code one is able to; iterate through a container:. TIter iter(&list);; for_each(iter.Begin(), TIter::End(), SEnumFunctor());. or. for_each(iter.Begin(), inter_",MatchSource.DOCS,core/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v520/index.html:150,Modifiability,plugin,plugin,150,". Core. The ROOT source directory has been drastically reorganized and simplified.; Each source directory containing the code for a single library or plugin,; were all in the same top level directory, without logical grouping.; This made it difficult to see which libraries were related and belonged; together. In the new structure we've added a set of meta directories; that are used to group the sources of related libraries, and that also; reflects the ROOT team work package structure.; Note, the name and number of libraries has not been changed.; This new structure also facilitates the maintaining of the release notes; and other documentation items per meta package. On Linux, MacOS X and Windows, there is no need anymore to define the; environment variable ROOTSYS. Internally ROOTSYS is set depending on the; location of the ROOT libraries. ROOTSYS was never needed when ROOT was; configured using --prefix. On MacOS X when configure'ing with --enable-rpath (and not specifying; --prefix) the installation does not need (DY)LD_LIBRARY_PATH to be set; anymore. The installation is completely relocatable. The (DY)LD_LIBRARY_PATH; is determined relative to the location of the root executable. On Windows .root files are now associated with the most recently executed; ROOT installation, i.e. run ROOT once and .root files open with ROOT. Class TMessageHandler derives now from TQObject and does emit signals.; This allows for easier usage of this class. In this release xrootd and libAfterImage are managed in Subversion; via so called ""vendor branches"". This is completely transparent; except for people who do directly use svn. You will get the message:. $ svn up; svn: Failed to add directory 'xrootd/src/xrootd': object of the same name already exists; $ rm -rf xrootd/src/xrootd; $ svn up; svn: Failed to add directory 'asimage/src/libAfterImage': object of the same name already exists; $ rm -rf asimage/src/libAfterImage; $ svn up. Port to gcc 4.3.1. This version of gcc is much stric",MatchSource.DOCS,core/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v520/index.html:758,Modifiability,variab,variable,758,". Core. The ROOT source directory has been drastically reorganized and simplified.; Each source directory containing the code for a single library or plugin,; were all in the same top level directory, without logical grouping.; This made it difficult to see which libraries were related and belonged; together. In the new structure we've added a set of meta directories; that are used to group the sources of related libraries, and that also; reflects the ROOT team work package structure.; Note, the name and number of libraries has not been changed.; This new structure also facilitates the maintaining of the release notes; and other documentation items per meta package. On Linux, MacOS X and Windows, there is no need anymore to define the; environment variable ROOTSYS. Internally ROOTSYS is set depending on the; location of the ROOT libraries. ROOTSYS was never needed when ROOT was; configured using --prefix. On MacOS X when configure'ing with --enable-rpath (and not specifying; --prefix) the installation does not need (DY)LD_LIBRARY_PATH to be set; anymore. The installation is completely relocatable. The (DY)LD_LIBRARY_PATH; is determined relative to the location of the root executable. On Windows .root files are now associated with the most recently executed; ROOT installation, i.e. run ROOT once and .root files open with ROOT. Class TMessageHandler derives now from TQObject and does emit signals.; This allows for easier usage of this class. In this release xrootd and libAfterImage are managed in Subversion; via so called ""vendor branches"". This is completely transparent; except for people who do directly use svn. You will get the message:. $ svn up; svn: Failed to add directory 'xrootd/src/xrootd': object of the same name already exists; $ rm -rf xrootd/src/xrootd; $ svn up; svn: Failed to add directory 'asimage/src/libAfterImage': object of the same name already exists; $ rm -rf asimage/src/libAfterImage; $ svn up. Port to gcc 4.3.1. This version of gcc is much stric",MatchSource.DOCS,core/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v520/index.html:892,Modifiability,config,configured,892,". Core. The ROOT source directory has been drastically reorganized and simplified.; Each source directory containing the code for a single library or plugin,; were all in the same top level directory, without logical grouping.; This made it difficult to see which libraries were related and belonged; together. In the new structure we've added a set of meta directories; that are used to group the sources of related libraries, and that also; reflects the ROOT team work package structure.; Note, the name and number of libraries has not been changed.; This new structure also facilitates the maintaining of the release notes; and other documentation items per meta package. On Linux, MacOS X and Windows, there is no need anymore to define the; environment variable ROOTSYS. Internally ROOTSYS is set depending on the; location of the ROOT libraries. ROOTSYS was never needed when ROOT was; configured using --prefix. On MacOS X when configure'ing with --enable-rpath (and not specifying; --prefix) the installation does not need (DY)LD_LIBRARY_PATH to be set; anymore. The installation is completely relocatable. The (DY)LD_LIBRARY_PATH; is determined relative to the location of the root executable. On Windows .root files are now associated with the most recently executed; ROOT installation, i.e. run ROOT once and .root files open with ROOT. Class TMessageHandler derives now from TQObject and does emit signals.; This allows for easier usage of this class. In this release xrootd and libAfterImage are managed in Subversion; via so called ""vendor branches"". This is completely transparent; except for people who do directly use svn. You will get the message:. $ svn up; svn: Failed to add directory 'xrootd/src/xrootd': object of the same name already exists; $ rm -rf xrootd/src/xrootd; $ svn up; svn: Failed to add directory 'asimage/src/libAfterImage': object of the same name already exists; $ rm -rf asimage/src/libAfterImage; $ svn up. Port to gcc 4.3.1. This version of gcc is much stric",MatchSource.DOCS,core/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v520/index.html:935,Modifiability,config,configure,935,". Core. The ROOT source directory has been drastically reorganized and simplified.; Each source directory containing the code for a single library or plugin,; were all in the same top level directory, without logical grouping.; This made it difficult to see which libraries were related and belonged; together. In the new structure we've added a set of meta directories; that are used to group the sources of related libraries, and that also; reflects the ROOT team work package structure.; Note, the name and number of libraries has not been changed.; This new structure also facilitates the maintaining of the release notes; and other documentation items per meta package. On Linux, MacOS X and Windows, there is no need anymore to define the; environment variable ROOTSYS. Internally ROOTSYS is set depending on the; location of the ROOT libraries. ROOTSYS was never needed when ROOT was; configured using --prefix. On MacOS X when configure'ing with --enable-rpath (and not specifying; --prefix) the installation does not need (DY)LD_LIBRARY_PATH to be set; anymore. The installation is completely relocatable. The (DY)LD_LIBRARY_PATH; is determined relative to the location of the root executable. On Windows .root files are now associated with the most recently executed; ROOT installation, i.e. run ROOT once and .root files open with ROOT. Class TMessageHandler derives now from TQObject and does emit signals.; This allows for easier usage of this class. In this release xrootd and libAfterImage are managed in Subversion; via so called ""vendor branches"". This is completely transparent; except for people who do directly use svn. You will get the message:. $ svn up; svn: Failed to add directory 'xrootd/src/xrootd': object of the same name already exists; $ rm -rf xrootd/src/xrootd; $ svn up; svn: Failed to add directory 'asimage/src/libAfterImage': object of the same name already exists; $ rm -rf asimage/src/libAfterImage; $ svn up. Port to gcc 4.3.1. This version of gcc is much stric",MatchSource.DOCS,core/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v520/index.html:3407,Modifiability,Extend,Extend,3407,"value; of 'Int_t nMatchMax' argument from 30 to 10. PCRE internals require; the index buffer to be 3-times the number of allowed matches. This; multiplication is now performed in individual functions and nMatchMax; is really the number of allowed matches. Two function calls in; TString passing this number explicitly have been updated. TPMERegexp. New sub-class of TPRegexp with API closer to PERL.; Supports main Perl operations using regular expressions (Match,; Substitute and Split). To retrieve the results one can simply use; operator[] returning a TString. New tutorial regexp_pme.C. Meta. Add a new TClass interface to be able to trigger the ""auto addition of object; to a TDirectory object"". If a class has a member function:; DirectoryAutoAdd(TDirectory*); it will now be accessible (when the dictionary is generated via rootcint; for now) via TClass::GetDirectoryAutoAdd which return a wrapper with the; signature:; void (*)(void *this_obj,TDirectory *where_to_add). Extend #pragma create TClass; to namespaces.; Enable autoloading of the cintdlls.; rlibmap now handles #pragma create TClass; statements. Cont. Support for std algorithms and iterators for ROOT collection classes by Anar.; The background is the following. While working on the PROOF code I found; that enumerating TList is an inconvenient and a long operation, I had to; write the same code all over the place and make duplications. I tried; to use STD algorithms with it, namely std::for_each, and failed.; I therefore decided to enable std::for_each algorithm for ROOT; Containers/Iterators by making as few as possible changes, without rewriting; iterators at all. Now with only two simple lines of code one is able to; iterate through a container:. TIter iter(&list);; for_each(iter.Begin(), TIter::End(), SEnumFunctor());. or. for_each(iter.Begin(), inter_end, SEnumFunctor());. where iter_end could be an iterator to a middle of the container. After I had changed Iterators so that they could be used with std::for_e",MatchSource.DOCS,core/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v520/index.html:2594,Performance,perform,performed,2594,"rectly use svn. You will get the message:. $ svn up; svn: Failed to add directory 'xrootd/src/xrootd': object of the same name already exists; $ rm -rf xrootd/src/xrootd; $ svn up; svn: Failed to add directory 'asimage/src/libAfterImage': object of the same name already exists; $ rm -rf asimage/src/libAfterImage; $ svn up. Port to gcc 4.3.1. This version of gcc is much stricker with respect to; implicit header files so in many source files <stdlib.h> and <string.h>; had to be added. TPRegexp. Modularized Match() and Substitute() functions so that the low-level work; is done by MatchInternal() and SubstituteInternal(). Added function TString GetModifiers() that translates from bit-flag; options back to perl-style option characters. For all functions that do actual matching replaced the default value; of 'Int_t nMatchMax' argument from 30 to 10. PCRE internals require; the index buffer to be 3-times the number of allowed matches. This; multiplication is now performed in individual functions and nMatchMax; is really the number of allowed matches. Two function calls in; TString passing this number explicitly have been updated. TPMERegexp. New sub-class of TPRegexp with API closer to PERL.; Supports main Perl operations using regular expressions (Match,; Substitute and Split). To retrieve the results one can simply use; operator[] returning a TString. New tutorial regexp_pme.C. Meta. Add a new TClass interface to be able to trigger the ""auto addition of object; to a TDirectory object"". If a class has a member function:; DirectoryAutoAdd(TDirectory*); it will now be accessible (when the dictionary is generated via rootcint; for now) via TClass::GetDirectoryAutoAdd which return a wrapper with the; signature:; void (*)(void *this_obj,TDirectory *where_to_add). Extend #pragma create TClass; to namespaces.; Enable autoloading of the cintdlls.; rlibmap now handles #pragma create TClass; statements. Cont. Support for std algorithms and iterators for ROOT collection classes by A",MatchSource.DOCS,core/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v520/index.html:3211,Security,access,accessible,3211,"tring GetModifiers() that translates from bit-flag; options back to perl-style option characters. For all functions that do actual matching replaced the default value; of 'Int_t nMatchMax' argument from 30 to 10. PCRE internals require; the index buffer to be 3-times the number of allowed matches. This; multiplication is now performed in individual functions and nMatchMax; is really the number of allowed matches. Two function calls in; TString passing this number explicitly have been updated. TPMERegexp. New sub-class of TPRegexp with API closer to PERL.; Supports main Perl operations using regular expressions (Match,; Substitute and Split). To retrieve the results one can simply use; operator[] returning a TString. New tutorial regexp_pme.C. Meta. Add a new TClass interface to be able to trigger the ""auto addition of object; to a TDirectory object"". If a class has a member function:; DirectoryAutoAdd(TDirectory*); it will now be accessible (when the dictionary is generated via rootcint; for now) via TClass::GetDirectoryAutoAdd which return a wrapper with the; signature:; void (*)(void *this_obj,TDirectory *where_to_add). Extend #pragma create TClass; to namespaces.; Enable autoloading of the cintdlls.; rlibmap now handles #pragma create TClass; statements. Cont. Support for std algorithms and iterators for ROOT collection classes by Anar.; The background is the following. While working on the PROOF code I found; that enumerating TList is an inconvenient and a long operation, I had to; write the same code all over the place and make duplications. I tried; to use STD algorithms with it, namely std::for_each, and failed.; I therefore decided to enable std::for_each algorithm for ROOT; Containers/Iterators by making as few as possible changes, without rewriting; iterators at all. Now with only two simple lines of code one is able to; iterate through a container:. TIter iter(&list);; for_each(iter.Begin(), TIter::End(), SEnumFunctor());. or. for_each(iter.Begin(), inter_",MatchSource.DOCS,core/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v520/index.html:209,Testability,log,logical,209,". Core. The ROOT source directory has been drastically reorganized and simplified.; Each source directory containing the code for a single library or plugin,; were all in the same top level directory, without logical grouping.; This made it difficult to see which libraries were related and belonged; together. In the new structure we've added a set of meta directories; that are used to group the sources of related libraries, and that also; reflects the ROOT team work package structure.; Note, the name and number of libraries has not been changed.; This new structure also facilitates the maintaining of the release notes; and other documentation items per meta package. On Linux, MacOS X and Windows, there is no need anymore to define the; environment variable ROOTSYS. Internally ROOTSYS is set depending on the; location of the ROOT libraries. ROOTSYS was never needed when ROOT was; configured using --prefix. On MacOS X when configure'ing with --enable-rpath (and not specifying; --prefix) the installation does not need (DY)LD_LIBRARY_PATH to be set; anymore. The installation is completely relocatable. The (DY)LD_LIBRARY_PATH; is determined relative to the location of the root executable. On Windows .root files are now associated with the most recently executed; ROOT installation, i.e. run ROOT once and .root files open with ROOT. Class TMessageHandler derives now from TQObject and does emit signals.; This allows for easier usage of this class. In this release xrootd and libAfterImage are managed in Subversion; via so called ""vendor branches"". This is completely transparent; except for people who do directly use svn. You will get the message:. $ svn up; svn: Failed to add directory 'xrootd/src/xrootd': object of the same name already exists; $ rm -rf xrootd/src/xrootd; $ svn up; svn: Failed to add directory 'asimage/src/libAfterImage': object of the same name already exists; $ rm -rf asimage/src/libAfterImage; $ svn up. Port to gcc 4.3.1. This version of gcc is much stric",MatchSource.DOCS,core/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v520/index.html:4793,Testability,test,test,4793,"the results one can simply use; operator[] returning a TString. New tutorial regexp_pme.C. Meta. Add a new TClass interface to be able to trigger the ""auto addition of object; to a TDirectory object"". If a class has a member function:; DirectoryAutoAdd(TDirectory*); it will now be accessible (when the dictionary is generated via rootcint; for now) via TClass::GetDirectoryAutoAdd which return a wrapper with the; signature:; void (*)(void *this_obj,TDirectory *where_to_add). Extend #pragma create TClass; to namespaces.; Enable autoloading of the cintdlls.; rlibmap now handles #pragma create TClass; statements. Cont. Support for std algorithms and iterators for ROOT collection classes by Anar.; The background is the following. While working on the PROOF code I found; that enumerating TList is an inconvenient and a long operation, I had to; write the same code all over the place and make duplications. I tried; to use STD algorithms with it, namely std::for_each, and failed.; I therefore decided to enable std::for_each algorithm for ROOT; Containers/Iterators by making as few as possible changes, without rewriting; iterators at all. Now with only two simple lines of code one is able to; iterate through a container:. TIter iter(&list);; for_each(iter.Begin(), TIter::End(), SEnumFunctor());. or. for_each(iter.Begin(), inter_end, SEnumFunctor());. where iter_end could be an iterator to a middle of the container. After I had changed Iterators so that they could be used with std::for_each,; I decided to go further and did some more changes. As a result,. I have updated CINT implementation of some algorithms (they look now; more or less better in terms of the standard),. All collections can be now used with std::for_each, std::find_if,; std::count_if (probably with some more algorithms. I've listed here; only what has been *checked* by me). A test program has been added: $ROOTSYS/test/stressIterators.cxx. A tutorial macro has been added: $ROOTSYS/tutorials/cont/TListAndSTL.C. ",MatchSource.DOCS,core/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v520/index.html:4831,Testability,test,test,4831,"the results one can simply use; operator[] returning a TString. New tutorial regexp_pme.C. Meta. Add a new TClass interface to be able to trigger the ""auto addition of object; to a TDirectory object"". If a class has a member function:; DirectoryAutoAdd(TDirectory*); it will now be accessible (when the dictionary is generated via rootcint; for now) via TClass::GetDirectoryAutoAdd which return a wrapper with the; signature:; void (*)(void *this_obj,TDirectory *where_to_add). Extend #pragma create TClass; to namespaces.; Enable autoloading of the cintdlls.; rlibmap now handles #pragma create TClass; statements. Cont. Support for std algorithms and iterators for ROOT collection classes by Anar.; The background is the following. While working on the PROOF code I found; that enumerating TList is an inconvenient and a long operation, I had to; write the same code all over the place and make duplications. I tried; to use STD algorithms with it, namely std::for_each, and failed.; I therefore decided to enable std::for_each algorithm for ROOT; Containers/Iterators by making as few as possible changes, without rewriting; iterators at all. Now with only two simple lines of code one is able to; iterate through a container:. TIter iter(&list);; for_each(iter.Begin(), TIter::End(), SEnumFunctor());. or. for_each(iter.Begin(), inter_end, SEnumFunctor());. where iter_end could be an iterator to a middle of the container. After I had changed Iterators so that they could be used with std::for_each,; I decided to go further and did some more changes. As a result,. I have updated CINT implementation of some algorithms (they look now; more or less better in terms of the standard),. All collections can be now used with std::for_each, std::find_if,; std::count_if (probably with some more algorithms. I've listed here; only what has been *checked* by me). A test program has been added: $ROOTSYS/test/stressIterators.cxx. A tutorial macro has been added: $ROOTSYS/tutorials/cont/TListAndSTL.C. ",MatchSource.DOCS,core/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v520/index.html:71,Usability,simpl,simplified,71,". Core. The ROOT source directory has been drastically reorganized and simplified.; Each source directory containing the code for a single library or plugin,; were all in the same top level directory, without logical grouping.; This made it difficult to see which libraries were related and belonged; together. In the new structure we've added a set of meta directories; that are used to group the sources of related libraries, and that also; reflects the ROOT team work package structure.; Note, the name and number of libraries has not been changed.; This new structure also facilitates the maintaining of the release notes; and other documentation items per meta package. On Linux, MacOS X and Windows, there is no need anymore to define the; environment variable ROOTSYS. Internally ROOTSYS is set depending on the; location of the ROOT libraries. ROOTSYS was never needed when ROOT was; configured using --prefix. On MacOS X when configure'ing with --enable-rpath (and not specifying; --prefix) the installation does not need (DY)LD_LIBRARY_PATH to be set; anymore. The installation is completely relocatable. The (DY)LD_LIBRARY_PATH; is determined relative to the location of the root executable. On Windows .root files are now associated with the most recently executed; ROOT installation, i.e. run ROOT once and .root files open with ROOT. Class TMessageHandler derives now from TQObject and does emit signals.; This allows for easier usage of this class. In this release xrootd and libAfterImage are managed in Subversion; via so called ""vendor branches"". This is completely transparent; except for people who do directly use svn. You will get the message:. $ svn up; svn: Failed to add directory 'xrootd/src/xrootd': object of the same name already exists; $ rm -rf xrootd/src/xrootd; $ svn up; svn: Failed to add directory 'asimage/src/libAfterImage': object of the same name already exists; $ rm -rf asimage/src/libAfterImage; $ svn up. Port to gcc 4.3.1. This version of gcc is much stric",MatchSource.DOCS,core/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v520/index.html:2949,Usability,simpl,simply,2949,"to gcc 4.3.1. This version of gcc is much stricker with respect to; implicit header files so in many source files <stdlib.h> and <string.h>; had to be added. TPRegexp. Modularized Match() and Substitute() functions so that the low-level work; is done by MatchInternal() and SubstituteInternal(). Added function TString GetModifiers() that translates from bit-flag; options back to perl-style option characters. For all functions that do actual matching replaced the default value; of 'Int_t nMatchMax' argument from 30 to 10. PCRE internals require; the index buffer to be 3-times the number of allowed matches. This; multiplication is now performed in individual functions and nMatchMax; is really the number of allowed matches. Two function calls in; TString passing this number explicitly have been updated. TPMERegexp. New sub-class of TPRegexp with API closer to PERL.; Supports main Perl operations using regular expressions (Match,; Substitute and Split). To retrieve the results one can simply use; operator[] returning a TString. New tutorial regexp_pme.C. Meta. Add a new TClass interface to be able to trigger the ""auto addition of object; to a TDirectory object"". If a class has a member function:; DirectoryAutoAdd(TDirectory*); it will now be accessible (when the dictionary is generated via rootcint; for now) via TClass::GetDirectoryAutoAdd which return a wrapper with the; signature:; void (*)(void *this_obj,TDirectory *where_to_add). Extend #pragma create TClass; to namespaces.; Enable autoloading of the cintdlls.; rlibmap now handles #pragma create TClass; statements. Cont. Support for std algorithms and iterators for ROOT collection classes by Anar.; The background is the following. While working on the PROOF code I found; that enumerating TList is an inconvenient and a long operation, I had to; write the same code all over the place and make duplications. I tried; to use STD algorithms with it, namely std::for_each, and failed.; I therefore decided to enable std::for_",MatchSource.DOCS,core/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v520/index.html:4093,Usability,simpl,simple,4093,"the results one can simply use; operator[] returning a TString. New tutorial regexp_pme.C. Meta. Add a new TClass interface to be able to trigger the ""auto addition of object; to a TDirectory object"". If a class has a member function:; DirectoryAutoAdd(TDirectory*); it will now be accessible (when the dictionary is generated via rootcint; for now) via TClass::GetDirectoryAutoAdd which return a wrapper with the; signature:; void (*)(void *this_obj,TDirectory *where_to_add). Extend #pragma create TClass; to namespaces.; Enable autoloading of the cintdlls.; rlibmap now handles #pragma create TClass; statements. Cont. Support for std algorithms and iterators for ROOT collection classes by Anar.; The background is the following. While working on the PROOF code I found; that enumerating TList is an inconvenient and a long operation, I had to; write the same code all over the place and make duplications. I tried; to use STD algorithms with it, namely std::for_each, and failed.; I therefore decided to enable std::for_each algorithm for ROOT; Containers/Iterators by making as few as possible changes, without rewriting; iterators at all. Now with only two simple lines of code one is able to; iterate through a container:. TIter iter(&list);; for_each(iter.Begin(), TIter::End(), SEnumFunctor());. or. for_each(iter.Begin(), inter_end, SEnumFunctor());. where iter_end could be an iterator to a middle of the container. After I had changed Iterators so that they could be used with std::for_each,; I decided to go further and did some more changes. As a result,. I have updated CINT implementation of some algorithms (they look now; more or less better in terms of the standard),. All collections can be now used with std::for_each, std::find_if,; std::count_if (probably with some more algorithms. I've listed here; only what has been *checked* by me). A test program has been added: $ROOTSYS/test/stressIterators.cxx. A tutorial macro has been added: $ROOTSYS/tutorials/cont/TListAndSTL.C. ",MatchSource.DOCS,core/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v522/index.html:1006,Deployability,update,updated,1006,"re; Collections. Improve the output of the call to Print for ROOT Collections. In TCollection replace Print() methods:; virtual void Print(Option_t *wildcard="""") const;; virtual void Print(Option_t *wildcard, Option_t *option) const;; with; virtual void Print(Option_t *option="""") const;; virtual void Print(Option_t *option, Int_t recurse) const;; virtual void Print(Option_t *option, const char* wildcard,; Int_t recurse=1) const;; virtual void Print(Option_t *option, TPRegexp& regexp,; Int_t recurse=1) const;. Introduce three new protected methods used to print out collection details.; These are called from the Print() methods and make overriding of what; is printed for a collection / entries easier.; virtual void PrintCollectionHeader(Option_t* option) const;; virtual const char* GetCollectionEntryName(TObject* entry) const;; virtual void PrintCollectionEntry(TObject* entry, Option_t* option,; Int_t recurse) const;. Improve performance of reading TExMap object (50 times faster) using an updated,; slightly larger (16%) on file format for the TExMap object. ACLiC; Fix problem finding rootcint in the --prefix configuration.; Change the naming convention for the temporary files created by ACLiC, instead of randomly named ACLiC now uses:scriptname_scriptextension_ACLiC_function.extension; When ACLiC need to revert to the temp directory for storing the library, it now create the directory; structure under a directory named after the userid. Allow white space in the name of the directory where a script to be compiled by ACLiC resides.; Add optional 5th argument to CompileMacro to allow set the file bit; mode of the directory created.; Avoid looking for Microsoft's link.exe when we already have it (and hence avoid complaining about cygpath when cygwin is not even installed. Meta. Insure that the TClass list of methods is refreshed when new functions are added to the dictionary. TStyle. In TStyle::Reset, the Frame; Fill Color default value did not match the TFrame; Fill Colo",MatchSource.DOCS,core/doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v522/index.html:1128,Deployability,configurat,configuration,1128,"int() methods:; virtual void Print(Option_t *wildcard="""") const;; virtual void Print(Option_t *wildcard, Option_t *option) const;; with; virtual void Print(Option_t *option="""") const;; virtual void Print(Option_t *option, Int_t recurse) const;; virtual void Print(Option_t *option, const char* wildcard,; Int_t recurse=1) const;; virtual void Print(Option_t *option, TPRegexp& regexp,; Int_t recurse=1) const;. Introduce three new protected methods used to print out collection details.; These are called from the Print() methods and make overriding of what; is printed for a collection / entries easier.; virtual void PrintCollectionHeader(Option_t* option) const;; virtual const char* GetCollectionEntryName(TObject* entry) const;; virtual void PrintCollectionEntry(TObject* entry, Option_t* option,; Int_t recurse) const;. Improve performance of reading TExMap object (50 times faster) using an updated,; slightly larger (16%) on file format for the TExMap object. ACLiC; Fix problem finding rootcint in the --prefix configuration.; Change the naming convention for the temporary files created by ACLiC, instead of randomly named ACLiC now uses:scriptname_scriptextension_ACLiC_function.extension; When ACLiC need to revert to the temp directory for storing the library, it now create the directory; structure under a directory named after the userid. Allow white space in the name of the directory where a script to be compiled by ACLiC resides.; Add optional 5th argument to CompileMacro to allow set the file bit; mode of the directory created.; Avoid looking for Microsoft's link.exe when we already have it (and hence avoid complaining about cygpath when cygwin is not even installed. Meta. Insure that the TClass list of methods is refreshed when new functions are added to the dictionary. TStyle. In TStyle::Reset, the Frame; Fill Color default value did not match the TFrame; Fill Color default value. TSystem. DirName now properly handle; repeated '/'; this allow mkdir(""a/b//c"",true); to ",MatchSource.DOCS,core/doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v522/index.html:1790,Deployability,install,installed,1790,"rtual void Print(Option_t *wildcard, Option_t *option) const;; with; virtual void Print(Option_t *option="""") const;; virtual void Print(Option_t *option, Int_t recurse) const;; virtual void Print(Option_t *option, const char* wildcard,; Int_t recurse=1) const;; virtual void Print(Option_t *option, TPRegexp& regexp,; Int_t recurse=1) const;. Introduce three new protected methods used to print out collection details.; These are called from the Print() methods and make overriding of what; is printed for a collection / entries easier.; virtual void PrintCollectionHeader(Option_t* option) const;; virtual const char* GetCollectionEntryName(TObject* entry) const;; virtual void PrintCollectionEntry(TObject* entry, Option_t* option,; Int_t recurse) const;. Improve performance of reading TExMap object (50 times faster) using an updated,; slightly larger (16%) on file format for the TExMap object. ACLiC; Fix problem finding rootcint in the --prefix configuration.; Change the naming convention for the temporary files created by ACLiC, instead of randomly named ACLiC now uses:scriptname_scriptextension_ACLiC_function.extension; When ACLiC need to revert to the temp directory for storing the library, it now create the directory; structure under a directory named after the userid. Allow white space in the name of the directory where a script to be compiled by ACLiC resides.; Add optional 5th argument to CompileMacro to allow set the file bit; mode of the directory created.; Avoid looking for Microsoft's link.exe when we already have it (and hence avoid complaining about cygpath when cygwin is not even installed. Meta. Insure that the TClass list of methods is refreshed when new functions are added to the dictionary. TStyle. In TStyle::Reset, the Frame; Fill Color default value did not match the TFrame; Fill Color default value. TSystem. DirName now properly handle; repeated '/'; this allow mkdir(""a/b//c"",true); to succeed.; Extended the support for UNIX sockets on a generic path. ",MatchSource.DOCS,core/doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v522/index.html:2091,Deployability,a/b,a/b,2091,"rtual void Print(Option_t *wildcard, Option_t *option) const;; with; virtual void Print(Option_t *option="""") const;; virtual void Print(Option_t *option, Int_t recurse) const;; virtual void Print(Option_t *option, const char* wildcard,; Int_t recurse=1) const;; virtual void Print(Option_t *option, TPRegexp& regexp,; Int_t recurse=1) const;. Introduce three new protected methods used to print out collection details.; These are called from the Print() methods and make overriding of what; is printed for a collection / entries easier.; virtual void PrintCollectionHeader(Option_t* option) const;; virtual const char* GetCollectionEntryName(TObject* entry) const;; virtual void PrintCollectionEntry(TObject* entry, Option_t* option,; Int_t recurse) const;. Improve performance of reading TExMap object (50 times faster) using an updated,; slightly larger (16%) on file format for the TExMap object. ACLiC; Fix problem finding rootcint in the --prefix configuration.; Change the naming convention for the temporary files created by ACLiC, instead of randomly named ACLiC now uses:scriptname_scriptextension_ACLiC_function.extension; When ACLiC need to revert to the temp directory for storing the library, it now create the directory; structure under a directory named after the userid. Allow white space in the name of the directory where a script to be compiled by ACLiC resides.; Add optional 5th argument to CompileMacro to allow set the file bit; mode of the directory created.; Avoid looking for Microsoft's link.exe when we already have it (and hence avoid complaining about cygpath when cygwin is not even installed. Meta. Insure that the TClass list of methods is refreshed when new functions are added to the dictionary. TStyle. In TStyle::Reset, the Frame; Fill Color default value did not match the TFrame; Fill Color default value. TSystem. DirName now properly handle; repeated '/'; this allow mkdir(""a/b//c"",true); to succeed.; Extended the support for UNIX sockets on a generic path. ",MatchSource.DOCS,core/doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v522/index.html:1128,Modifiability,config,configuration,1128,"int() methods:; virtual void Print(Option_t *wildcard="""") const;; virtual void Print(Option_t *wildcard, Option_t *option) const;; with; virtual void Print(Option_t *option="""") const;; virtual void Print(Option_t *option, Int_t recurse) const;; virtual void Print(Option_t *option, const char* wildcard,; Int_t recurse=1) const;; virtual void Print(Option_t *option, TPRegexp& regexp,; Int_t recurse=1) const;. Introduce three new protected methods used to print out collection details.; These are called from the Print() methods and make overriding of what; is printed for a collection / entries easier.; virtual void PrintCollectionHeader(Option_t* option) const;; virtual const char* GetCollectionEntryName(TObject* entry) const;; virtual void PrintCollectionEntry(TObject* entry, Option_t* option,; Int_t recurse) const;. Improve performance of reading TExMap object (50 times faster) using an updated,; slightly larger (16%) on file format for the TExMap object. ACLiC; Fix problem finding rootcint in the --prefix configuration.; Change the naming convention for the temporary files created by ACLiC, instead of randomly named ACLiC now uses:scriptname_scriptextension_ACLiC_function.extension; When ACLiC need to revert to the temp directory for storing the library, it now create the directory; structure under a directory named after the userid. Allow white space in the name of the directory where a script to be compiled by ACLiC resides.; Add optional 5th argument to CompileMacro to allow set the file bit; mode of the directory created.; Avoid looking for Microsoft's link.exe when we already have it (and hence avoid complaining about cygpath when cygwin is not even installed. Meta. Insure that the TClass list of methods is refreshed when new functions are added to the dictionary. TStyle. In TStyle::Reset, the Frame; Fill Color default value did not match the TFrame; Fill Color default value. TSystem. DirName now properly handle; repeated '/'; this allow mkdir(""a/b//c"",true); to ",MatchSource.DOCS,core/doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v522/index.html:2119,Modifiability,Extend,Extended,2119,"rtual void Print(Option_t *wildcard, Option_t *option) const;; with; virtual void Print(Option_t *option="""") const;; virtual void Print(Option_t *option, Int_t recurse) const;; virtual void Print(Option_t *option, const char* wildcard,; Int_t recurse=1) const;; virtual void Print(Option_t *option, TPRegexp& regexp,; Int_t recurse=1) const;. Introduce three new protected methods used to print out collection details.; These are called from the Print() methods and make overriding of what; is printed for a collection / entries easier.; virtual void PrintCollectionHeader(Option_t* option) const;; virtual const char* GetCollectionEntryName(TObject* entry) const;; virtual void PrintCollectionEntry(TObject* entry, Option_t* option,; Int_t recurse) const;. Improve performance of reading TExMap object (50 times faster) using an updated,; slightly larger (16%) on file format for the TExMap object. ACLiC; Fix problem finding rootcint in the --prefix configuration.; Change the naming convention for the temporary files created by ACLiC, instead of randomly named ACLiC now uses:scriptname_scriptextension_ACLiC_function.extension; When ACLiC need to revert to the temp directory for storing the library, it now create the directory; structure under a directory named after the userid. Allow white space in the name of the directory where a script to be compiled by ACLiC resides.; Add optional 5th argument to CompileMacro to allow set the file bit; mode of the directory created.; Avoid looking for Microsoft's link.exe when we already have it (and hence avoid complaining about cygpath when cygwin is not even installed. Meta. Insure that the TClass list of methods is refreshed when new functions are added to the dictionary. TStyle. In TStyle::Reset, the Frame; Fill Color default value did not match the TFrame; Fill Color default value. TSystem. DirName now properly handle; repeated '/'; this allow mkdir(""a/b//c"",true); to succeed.; Extended the support for UNIX sockets on a generic path. ",MatchSource.DOCS,core/doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v522/index.html:942,Performance,perform,performance,942,"re; Collections. Improve the output of the call to Print for ROOT Collections. In TCollection replace Print() methods:; virtual void Print(Option_t *wildcard="""") const;; virtual void Print(Option_t *wildcard, Option_t *option) const;; with; virtual void Print(Option_t *option="""") const;; virtual void Print(Option_t *option, Int_t recurse) const;; virtual void Print(Option_t *option, const char* wildcard,; Int_t recurse=1) const;; virtual void Print(Option_t *option, TPRegexp& regexp,; Int_t recurse=1) const;. Introduce three new protected methods used to print out collection details.; These are called from the Print() methods and make overriding of what; is printed for a collection / entries easier.; virtual void PrintCollectionHeader(Option_t* option) const;; virtual const char* GetCollectionEntryName(TObject* entry) const;; virtual void PrintCollectionEntry(TObject* entry, Option_t* option,; Int_t recurse) const;. Improve performance of reading TExMap object (50 times faster) using an updated,; slightly larger (16%) on file format for the TExMap object. ACLiC; Fix problem finding rootcint in the --prefix configuration.; Change the naming convention for the temporary files created by ACLiC, instead of randomly named ACLiC now uses:scriptname_scriptextension_ACLiC_function.extension; When ACLiC need to revert to the temp directory for storing the library, it now create the directory; structure under a directory named after the userid. Allow white space in the name of the directory where a script to be compiled by ACLiC resides.; Add optional 5th argument to CompileMacro to allow set the file bit; mode of the directory created.; Avoid looking for Microsoft's link.exe when we already have it (and hence avoid complaining about cygpath when cygwin is not even installed. Meta. Insure that the TClass list of methods is refreshed when new functions are added to the dictionary. TStyle. In TStyle::Reset, the Frame; Fill Color default value did not match the TFrame; Fill Colo",MatchSource.DOCS,core/doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v522/index.html:1660,Safety,Avoid,Avoid,1660,"rtual void Print(Option_t *wildcard, Option_t *option) const;; with; virtual void Print(Option_t *option="""") const;; virtual void Print(Option_t *option, Int_t recurse) const;; virtual void Print(Option_t *option, const char* wildcard,; Int_t recurse=1) const;; virtual void Print(Option_t *option, TPRegexp& regexp,; Int_t recurse=1) const;. Introduce three new protected methods used to print out collection details.; These are called from the Print() methods and make overriding of what; is printed for a collection / entries easier.; virtual void PrintCollectionHeader(Option_t* option) const;; virtual const char* GetCollectionEntryName(TObject* entry) const;; virtual void PrintCollectionEntry(TObject* entry, Option_t* option,; Int_t recurse) const;. Improve performance of reading TExMap object (50 times faster) using an updated,; slightly larger (16%) on file format for the TExMap object. ACLiC; Fix problem finding rootcint in the --prefix configuration.; Change the naming convention for the temporary files created by ACLiC, instead of randomly named ACLiC now uses:scriptname_scriptextension_ACLiC_function.extension; When ACLiC need to revert to the temp directory for storing the library, it now create the directory; structure under a directory named after the userid. Allow white space in the name of the directory where a script to be compiled by ACLiC resides.; Add optional 5th argument to CompileMacro to allow set the file bit; mode of the directory created.; Avoid looking for Microsoft's link.exe when we already have it (and hence avoid complaining about cygpath when cygwin is not even installed. Meta. Insure that the TClass list of methods is refreshed when new functions are added to the dictionary. TStyle. In TStyle::Reset, the Frame; Fill Color default value did not match the TFrame; Fill Color default value. TSystem. DirName now properly handle; repeated '/'; this allow mkdir(""a/b//c"",true); to succeed.; Extended the support for UNIX sockets on a generic path. ",MatchSource.DOCS,core/doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v522/index.html:1734,Safety,avoid,avoid,1734,"rtual void Print(Option_t *wildcard, Option_t *option) const;; with; virtual void Print(Option_t *option="""") const;; virtual void Print(Option_t *option, Int_t recurse) const;; virtual void Print(Option_t *option, const char* wildcard,; Int_t recurse=1) const;; virtual void Print(Option_t *option, TPRegexp& regexp,; Int_t recurse=1) const;. Introduce three new protected methods used to print out collection details.; These are called from the Print() methods and make overriding of what; is printed for a collection / entries easier.; virtual void PrintCollectionHeader(Option_t* option) const;; virtual const char* GetCollectionEntryName(TObject* entry) const;; virtual void PrintCollectionEntry(TObject* entry, Option_t* option,; Int_t recurse) const;. Improve performance of reading TExMap object (50 times faster) using an updated,; slightly larger (16%) on file format for the TExMap object. ACLiC; Fix problem finding rootcint in the --prefix configuration.; Change the naming convention for the temporary files created by ACLiC, instead of randomly named ACLiC now uses:scriptname_scriptextension_ACLiC_function.extension; When ACLiC need to revert to the temp directory for storing the library, it now create the directory; structure under a directory named after the userid. Allow white space in the name of the directory where a script to be compiled by ACLiC resides.; Add optional 5th argument to CompileMacro to allow set the file bit; mode of the directory created.; Avoid looking for Microsoft's link.exe when we already have it (and hence avoid complaining about cygpath when cygwin is not even installed. Meta. Insure that the TClass list of methods is refreshed when new functions are added to the dictionary. TStyle. In TStyle::Reset, the Frame; Fill Color default value did not match the TFrame; Fill Color default value. TSystem. DirName now properly handle; repeated '/'; this allow mkdir(""a/b//c"",true); to succeed.; Extended the support for UNIX sockets on a generic path. ",MatchSource.DOCS,core/doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v524/index.html:605,Energy Efficiency,allocate,allocated,605,". Core. New class TBase64 providing Base64 encoding and decoding. Base64 encoded; messages are typically used in authentication protocols and to pack binary; data in HTTP or mail messages. New method in TSystem:. TString TSystem::GetFromPipe(const char *command). which executes ""command"" in the shell and returns the output in the TString.; Multi-line output is separated by \n's. Add proper support for Microsoft Visual C++ 9.0; Add support for 'unix' sockets on Windows.; New method TString::Clear() to reset the string but not to resize it to the default; (small) size. Useful when the string was pre-allocated to a large size and; has to be re-used.; Insure that ROOT's autoloader is always enabled whenever loading rootmap files.; Add function void TAttAxis::SetNdivisions(Int_t n1, Int_t n2, Int_t n3, Bool_t optim); ; Enable autoloading of typedef.; The statically linked roota executable and libRoot.a are currently; only supported on Linux platforms. We hope to extend this to MacOS X; soon. Meta. Add new macro ClassDefNV (ClassDef Non Virtual) which does not define any virtual function. ClassDef does define IsA, Streamer and ShowMember as virtual. This should be used only in classes that are never inherited from!; Improve performance of TClass::GetMethod (and friends). ACLiC. Implement TClassEdit::InsertStd() which puts ""std::"" in front of all STL classes.; The generated library now always checks with which version of ROOT the library was build and rebuilt the library if the running version of ROOT is different.; Add support for '+' character embedded in the script's name or directory name.; The dependency tracking file (script_C.d) is now always created when the library is built.; The dependency tracking file now records with which version of ROOT the library was built and the library is now rebuilt if it is loaded in a different version of ROOT. ",MatchSource.DOCS,core/doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v524/index.html:82,Integrability,message,messages,82,". Core. New class TBase64 providing Base64 encoding and decoding. Base64 encoded; messages are typically used in authentication protocols and to pack binary; data in HTTP or mail messages. New method in TSystem:. TString TSystem::GetFromPipe(const char *command). which executes ""command"" in the shell and returns the output in the TString.; Multi-line output is separated by \n's. Add proper support for Microsoft Visual C++ 9.0; Add support for 'unix' sockets on Windows.; New method TString::Clear() to reset the string but not to resize it to the default; (small) size. Useful when the string was pre-allocated to a large size and; has to be re-used.; Insure that ROOT's autoloader is always enabled whenever loading rootmap files.; Add function void TAttAxis::SetNdivisions(Int_t n1, Int_t n2, Int_t n3, Bool_t optim); ; Enable autoloading of typedef.; The statically linked roota executable and libRoot.a are currently; only supported on Linux platforms. We hope to extend this to MacOS X; soon. Meta. Add new macro ClassDefNV (ClassDef Non Virtual) which does not define any virtual function. ClassDef does define IsA, Streamer and ShowMember as virtual. This should be used only in classes that are never inherited from!; Improve performance of TClass::GetMethod (and friends). ACLiC. Implement TClassEdit::InsertStd() which puts ""std::"" in front of all STL classes.; The generated library now always checks with which version of ROOT the library was build and rebuilt the library if the running version of ROOT is different.; Add support for '+' character embedded in the script's name or directory name.; The dependency tracking file (script_C.d) is now always created when the library is built.; The dependency tracking file now records with which version of ROOT the library was built and the library is now rebuilt if it is loaded in a different version of ROOT. ",MatchSource.DOCS,core/doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v524/index.html:128,Integrability,protocol,protocols,128,". Core. New class TBase64 providing Base64 encoding and decoding. Base64 encoded; messages are typically used in authentication protocols and to pack binary; data in HTTP or mail messages. New method in TSystem:. TString TSystem::GetFromPipe(const char *command). which executes ""command"" in the shell and returns the output in the TString.; Multi-line output is separated by \n's. Add proper support for Microsoft Visual C++ 9.0; Add support for 'unix' sockets on Windows.; New method TString::Clear() to reset the string but not to resize it to the default; (small) size. Useful when the string was pre-allocated to a large size and; has to be re-used.; Insure that ROOT's autoloader is always enabled whenever loading rootmap files.; Add function void TAttAxis::SetNdivisions(Int_t n1, Int_t n2, Int_t n3, Bool_t optim); ; Enable autoloading of typedef.; The statically linked roota executable and libRoot.a are currently; only supported on Linux platforms. We hope to extend this to MacOS X; soon. Meta. Add new macro ClassDefNV (ClassDef Non Virtual) which does not define any virtual function. ClassDef does define IsA, Streamer and ShowMember as virtual. This should be used only in classes that are never inherited from!; Improve performance of TClass::GetMethod (and friends). ACLiC. Implement TClassEdit::InsertStd() which puts ""std::"" in front of all STL classes.; The generated library now always checks with which version of ROOT the library was build and rebuilt the library if the running version of ROOT is different.; Add support for '+' character embedded in the script's name or directory name.; The dependency tracking file (script_C.d) is now always created when the library is built.; The dependency tracking file now records with which version of ROOT the library was built and the library is now rebuilt if it is loaded in a different version of ROOT. ",MatchSource.DOCS,core/doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v524/index.html:179,Integrability,message,messages,179,". Core. New class TBase64 providing Base64 encoding and decoding. Base64 encoded; messages are typically used in authentication protocols and to pack binary; data in HTTP or mail messages. New method in TSystem:. TString TSystem::GetFromPipe(const char *command). which executes ""command"" in the shell and returns the output in the TString.; Multi-line output is separated by \n's. Add proper support for Microsoft Visual C++ 9.0; Add support for 'unix' sockets on Windows.; New method TString::Clear() to reset the string but not to resize it to the default; (small) size. Useful when the string was pre-allocated to a large size and; has to be re-used.; Insure that ROOT's autoloader is always enabled whenever loading rootmap files.; Add function void TAttAxis::SetNdivisions(Int_t n1, Int_t n2, Int_t n3, Bool_t optim); ; Enable autoloading of typedef.; The statically linked roota executable and libRoot.a are currently; only supported on Linux platforms. We hope to extend this to MacOS X; soon. Meta. Add new macro ClassDefNV (ClassDef Non Virtual) which does not define any virtual function. ClassDef does define IsA, Streamer and ShowMember as virtual. This should be used only in classes that are never inherited from!; Improve performance of TClass::GetMethod (and friends). ACLiC. Implement TClassEdit::InsertStd() which puts ""std::"" in front of all STL classes.; The generated library now always checks with which version of ROOT the library was build and rebuilt the library if the running version of ROOT is different.; Add support for '+' character embedded in the script's name or directory name.; The dependency tracking file (script_C.d) is now always created when the library is built.; The dependency tracking file now records with which version of ROOT the library was built and the library is now rebuilt if it is loaded in a different version of ROOT. ",MatchSource.DOCS,core/doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v524/index.html:1619,Integrability,depend,dependency,1619,". Core. New class TBase64 providing Base64 encoding and decoding. Base64 encoded; messages are typically used in authentication protocols and to pack binary; data in HTTP or mail messages. New method in TSystem:. TString TSystem::GetFromPipe(const char *command). which executes ""command"" in the shell and returns the output in the TString.; Multi-line output is separated by \n's. Add proper support for Microsoft Visual C++ 9.0; Add support for 'unix' sockets on Windows.; New method TString::Clear() to reset the string but not to resize it to the default; (small) size. Useful when the string was pre-allocated to a large size and; has to be re-used.; Insure that ROOT's autoloader is always enabled whenever loading rootmap files.; Add function void TAttAxis::SetNdivisions(Int_t n1, Int_t n2, Int_t n3, Bool_t optim); ; Enable autoloading of typedef.; The statically linked roota executable and libRoot.a are currently; only supported on Linux platforms. We hope to extend this to MacOS X; soon. Meta. Add new macro ClassDefNV (ClassDef Non Virtual) which does not define any virtual function. ClassDef does define IsA, Streamer and ShowMember as virtual. This should be used only in classes that are never inherited from!; Improve performance of TClass::GetMethod (and friends). ACLiC. Implement TClassEdit::InsertStd() which puts ""std::"" in front of all STL classes.; The generated library now always checks with which version of ROOT the library was build and rebuilt the library if the running version of ROOT is different.; Add support for '+' character embedded in the script's name or directory name.; The dependency tracking file (script_C.d) is now always created when the library is built.; The dependency tracking file now records with which version of ROOT the library was built and the library is now rebuilt if it is loaded in a different version of ROOT. ",MatchSource.DOCS,core/doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v524/index.html:1711,Integrability,depend,dependency,1711,". Core. New class TBase64 providing Base64 encoding and decoding. Base64 encoded; messages are typically used in authentication protocols and to pack binary; data in HTTP or mail messages. New method in TSystem:. TString TSystem::GetFromPipe(const char *command). which executes ""command"" in the shell and returns the output in the TString.; Multi-line output is separated by \n's. Add proper support for Microsoft Visual C++ 9.0; Add support for 'unix' sockets on Windows.; New method TString::Clear() to reset the string but not to resize it to the default; (small) size. Useful when the string was pre-allocated to a large size and; has to be re-used.; Insure that ROOT's autoloader is always enabled whenever loading rootmap files.; Add function void TAttAxis::SetNdivisions(Int_t n1, Int_t n2, Int_t n3, Bool_t optim); ; Enable autoloading of typedef.; The statically linked roota executable and libRoot.a are currently; only supported on Linux platforms. We hope to extend this to MacOS X; soon. Meta. Add new macro ClassDefNV (ClassDef Non Virtual) which does not define any virtual function. ClassDef does define IsA, Streamer and ShowMember as virtual. This should be used only in classes that are never inherited from!; Improve performance of TClass::GetMethod (and friends). ACLiC. Implement TClassEdit::InsertStd() which puts ""std::"" in front of all STL classes.; The generated library now always checks with which version of ROOT the library was build and rebuilt the library if the running version of ROOT is different.; Add support for '+' character embedded in the script's name or directory name.; The dependency tracking file (script_C.d) is now always created when the library is built.; The dependency tracking file now records with which version of ROOT the library was built and the library is now rebuilt if it is loaded in a different version of ROOT. ",MatchSource.DOCS,core/doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v524/index.html:972,Modifiability,extend,extend,972,". Core. New class TBase64 providing Base64 encoding and decoding. Base64 encoded; messages are typically used in authentication protocols and to pack binary; data in HTTP or mail messages. New method in TSystem:. TString TSystem::GetFromPipe(const char *command). which executes ""command"" in the shell and returns the output in the TString.; Multi-line output is separated by \n's. Add proper support for Microsoft Visual C++ 9.0; Add support for 'unix' sockets on Windows.; New method TString::Clear() to reset the string but not to resize it to the default; (small) size. Useful when the string was pre-allocated to a large size and; has to be re-used.; Insure that ROOT's autoloader is always enabled whenever loading rootmap files.; Add function void TAttAxis::SetNdivisions(Int_t n1, Int_t n2, Int_t n3, Bool_t optim); ; Enable autoloading of typedef.; The statically linked roota executable and libRoot.a are currently; only supported on Linux platforms. We hope to extend this to MacOS X; soon. Meta. Add new macro ClassDefNV (ClassDef Non Virtual) which does not define any virtual function. ClassDef does define IsA, Streamer and ShowMember as virtual. This should be used only in classes that are never inherited from!; Improve performance of TClass::GetMethod (and friends). ACLiC. Implement TClassEdit::InsertStd() which puts ""std::"" in front of all STL classes.; The generated library now always checks with which version of ROOT the library was build and rebuilt the library if the running version of ROOT is different.; Add support for '+' character embedded in the script's name or directory name.; The dependency tracking file (script_C.d) is now always created when the library is built.; The dependency tracking file now records with which version of ROOT the library was built and the library is now rebuilt if it is loaded in a different version of ROOT. ",MatchSource.DOCS,core/doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v524/index.html:1213,Modifiability,inherit,inherited,1213,". Core. New class TBase64 providing Base64 encoding and decoding. Base64 encoded; messages are typically used in authentication protocols and to pack binary; data in HTTP or mail messages. New method in TSystem:. TString TSystem::GetFromPipe(const char *command). which executes ""command"" in the shell and returns the output in the TString.; Multi-line output is separated by \n's. Add proper support for Microsoft Visual C++ 9.0; Add support for 'unix' sockets on Windows.; New method TString::Clear() to reset the string but not to resize it to the default; (small) size. Useful when the string was pre-allocated to a large size and; has to be re-used.; Insure that ROOT's autoloader is always enabled whenever loading rootmap files.; Add function void TAttAxis::SetNdivisions(Int_t n1, Int_t n2, Int_t n3, Bool_t optim); ; Enable autoloading of typedef.; The statically linked roota executable and libRoot.a are currently; only supported on Linux platforms. We hope to extend this to MacOS X; soon. Meta. Add new macro ClassDefNV (ClassDef Non Virtual) which does not define any virtual function. ClassDef does define IsA, Streamer and ShowMember as virtual. This should be used only in classes that are never inherited from!; Improve performance of TClass::GetMethod (and friends). ACLiC. Implement TClassEdit::InsertStd() which puts ""std::"" in front of all STL classes.; The generated library now always checks with which version of ROOT the library was build and rebuilt the library if the running version of ROOT is different.; Add support for '+' character embedded in the script's name or directory name.; The dependency tracking file (script_C.d) is now always created when the library is built.; The dependency tracking file now records with which version of ROOT the library was built and the library is now rebuilt if it is loaded in a different version of ROOT. ",MatchSource.DOCS,core/doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v524/index.html:713,Performance,load,loading,713,". Core. New class TBase64 providing Base64 encoding and decoding. Base64 encoded; messages are typically used in authentication protocols and to pack binary; data in HTTP or mail messages. New method in TSystem:. TString TSystem::GetFromPipe(const char *command). which executes ""command"" in the shell and returns the output in the TString.; Multi-line output is separated by \n's. Add proper support for Microsoft Visual C++ 9.0; Add support for 'unix' sockets on Windows.; New method TString::Clear() to reset the string but not to resize it to the default; (small) size. Useful when the string was pre-allocated to a large size and; has to be re-used.; Insure that ROOT's autoloader is always enabled whenever loading rootmap files.; Add function void TAttAxis::SetNdivisions(Int_t n1, Int_t n2, Int_t n3, Bool_t optim); ; Enable autoloading of typedef.; The statically linked roota executable and libRoot.a are currently; only supported on Linux platforms. We hope to extend this to MacOS X; soon. Meta. Add new macro ClassDefNV (ClassDef Non Virtual) which does not define any virtual function. ClassDef does define IsA, Streamer and ShowMember as virtual. This should be used only in classes that are never inherited from!; Improve performance of TClass::GetMethod (and friends). ACLiC. Implement TClassEdit::InsertStd() which puts ""std::"" in front of all STL classes.; The generated library now always checks with which version of ROOT the library was build and rebuilt the library if the running version of ROOT is different.; Add support for '+' character embedded in the script's name or directory name.; The dependency tracking file (script_C.d) is now always created when the library is built.; The dependency tracking file now records with which version of ROOT the library was built and the library is now rebuilt if it is loaded in a different version of ROOT. ",MatchSource.DOCS,core/doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v524/index.html:1238,Performance,perform,performance,1238,". Core. New class TBase64 providing Base64 encoding and decoding. Base64 encoded; messages are typically used in authentication protocols and to pack binary; data in HTTP or mail messages. New method in TSystem:. TString TSystem::GetFromPipe(const char *command). which executes ""command"" in the shell and returns the output in the TString.; Multi-line output is separated by \n's. Add proper support for Microsoft Visual C++ 9.0; Add support for 'unix' sockets on Windows.; New method TString::Clear() to reset the string but not to resize it to the default; (small) size. Useful when the string was pre-allocated to a large size and; has to be re-used.; Insure that ROOT's autoloader is always enabled whenever loading rootmap files.; Add function void TAttAxis::SetNdivisions(Int_t n1, Int_t n2, Int_t n3, Bool_t optim); ; Enable autoloading of typedef.; The statically linked roota executable and libRoot.a are currently; only supported on Linux platforms. We hope to extend this to MacOS X; soon. Meta. Add new macro ClassDefNV (ClassDef Non Virtual) which does not define any virtual function. ClassDef does define IsA, Streamer and ShowMember as virtual. This should be used only in classes that are never inherited from!; Improve performance of TClass::GetMethod (and friends). ACLiC. Implement TClassEdit::InsertStd() which puts ""std::"" in front of all STL classes.; The generated library now always checks with which version of ROOT the library was build and rebuilt the library if the running version of ROOT is different.; Add support for '+' character embedded in the script's name or directory name.; The dependency tracking file (script_C.d) is now always created when the library is built.; The dependency tracking file now records with which version of ROOT the library was built and the library is now rebuilt if it is loaded in a different version of ROOT. ",MatchSource.DOCS,core/doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v524/index.html:1837,Performance,load,loaded,1837,". Core. New class TBase64 providing Base64 encoding and decoding. Base64 encoded; messages are typically used in authentication protocols and to pack binary; data in HTTP or mail messages. New method in TSystem:. TString TSystem::GetFromPipe(const char *command). which executes ""command"" in the shell and returns the output in the TString.; Multi-line output is separated by \n's. Add proper support for Microsoft Visual C++ 9.0; Add support for 'unix' sockets on Windows.; New method TString::Clear() to reset the string but not to resize it to the default; (small) size. Useful when the string was pre-allocated to a large size and; has to be re-used.; Insure that ROOT's autoloader is always enabled whenever loading rootmap files.; Add function void TAttAxis::SetNdivisions(Int_t n1, Int_t n2, Int_t n3, Bool_t optim); ; Enable autoloading of typedef.; The statically linked roota executable and libRoot.a are currently; only supported on Linux platforms. We hope to extend this to MacOS X; soon. Meta. Add new macro ClassDefNV (ClassDef Non Virtual) which does not define any virtual function. ClassDef does define IsA, Streamer and ShowMember as virtual. This should be used only in classes that are never inherited from!; Improve performance of TClass::GetMethod (and friends). ACLiC. Implement TClassEdit::InsertStd() which puts ""std::"" in front of all STL classes.; The generated library now always checks with which version of ROOT the library was build and rebuilt the library if the running version of ROOT is different.; Add support for '+' character embedded in the script's name or directory name.; The dependency tracking file (script_C.d) is now always created when the library is built.; The dependency tracking file now records with which version of ROOT the library was built and the library is now rebuilt if it is loaded in a different version of ROOT. ",MatchSource.DOCS,core/doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v524/index.html:113,Security,authenticat,authentication,113,". Core. New class TBase64 providing Base64 encoding and decoding. Base64 encoded; messages are typically used in authentication protocols and to pack binary; data in HTTP or mail messages. New method in TSystem:. TString TSystem::GetFromPipe(const char *command). which executes ""command"" in the shell and returns the output in the TString.; Multi-line output is separated by \n's. Add proper support for Microsoft Visual C++ 9.0; Add support for 'unix' sockets on Windows.; New method TString::Clear() to reset the string but not to resize it to the default; (small) size. Useful when the string was pre-allocated to a large size and; has to be re-used.; Insure that ROOT's autoloader is always enabled whenever loading rootmap files.; Add function void TAttAxis::SetNdivisions(Int_t n1, Int_t n2, Int_t n3, Bool_t optim); ; Enable autoloading of typedef.; The statically linked roota executable and libRoot.a are currently; only supported on Linux platforms. We hope to extend this to MacOS X; soon. Meta. Add new macro ClassDefNV (ClassDef Non Virtual) which does not define any virtual function. ClassDef does define IsA, Streamer and ShowMember as virtual. This should be used only in classes that are never inherited from!; Improve performance of TClass::GetMethod (and friends). ACLiC. Implement TClassEdit::InsertStd() which puts ""std::"" in front of all STL classes.; The generated library now always checks with which version of ROOT the library was build and rebuilt the library if the running version of ROOT is different.; Add support for '+' character embedded in the script's name or directory name.; The dependency tracking file (script_C.d) is now always created when the library is built.; The dependency tracking file now records with which version of ROOT the library was built and the library is now rebuilt if it is loaded in a different version of ROOT. ",MatchSource.DOCS,core/doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v524/index.html:495,Usability,Clear,Clear,495,". Core. New class TBase64 providing Base64 encoding and decoding. Base64 encoded; messages are typically used in authentication protocols and to pack binary; data in HTTP or mail messages. New method in TSystem:. TString TSystem::GetFromPipe(const char *command). which executes ""command"" in the shell and returns the output in the TString.; Multi-line output is separated by \n's. Add proper support for Microsoft Visual C++ 9.0; Add support for 'unix' sockets on Windows.; New method TString::Clear() to reset the string but not to resize it to the default; (small) size. Useful when the string was pre-allocated to a large size and; has to be re-used.; Insure that ROOT's autoloader is always enabled whenever loading rootmap files.; Add function void TAttAxis::SetNdivisions(Int_t n1, Int_t n2, Int_t n3, Bool_t optim); ; Enable autoloading of typedef.; The statically linked roota executable and libRoot.a are currently; only supported on Linux platforms. We hope to extend this to MacOS X; soon. Meta. Add new macro ClassDefNV (ClassDef Non Virtual) which does not define any virtual function. ClassDef does define IsA, Streamer and ShowMember as virtual. This should be used only in classes that are never inherited from!; Improve performance of TClass::GetMethod (and friends). ACLiC. Implement TClassEdit::InsertStd() which puts ""std::"" in front of all STL classes.; The generated library now always checks with which version of ROOT the library was build and rebuilt the library if the running version of ROOT is different.; Add support for '+' character embedded in the script's name or directory name.; The dependency tracking file (script_C.d) is now always created when the library is built.; The dependency tracking file now records with which version of ROOT the library was built and the library is now rebuilt if it is loaded in a different version of ROOT. ",MatchSource.DOCS,core/doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v526/index.html:712,Availability,Repair,Repair,712,". Core. The following architectures have been obsoleted: linuxkcc, alphakcc,; linuxia64sgi, linuxdeb2ppc, solariskcc, sgikcc and linuxpgcc.; All of ROOT (not just Core) has been checked by a very nice static code analyzer coverity, see: http://www.coverity.com/.; Many of the reports have been fixed. We expect that this further increases the stability of ROOT.; Add support for 'Dump' and 'Browse' of 'emulated' object.; TBits equality operator nows return true if the 2 operands have different; length and all the bits in the longer TBits that are passed the length; of the shorter TBits are zero (i.e. the default value of each; bits is zero).; Properly handle scripts with line longer than 1024 characters.; Repair the handling of ACLiC options on the command line (for example a.C+g).; In TClass::BuildEmulatedRealData properly handle the case of TNamed member that are not base class.; On the command line:; ; Fix the tab-completion of filenames in the sub-directories.; Prevent the unadvertent replacement of an arrow with a dot when the left side is actually a pointer. More user friendly stacktrace in case of a crash, with hints where; the problem might be. On Linux and MacOS X these stacktraces are generated; by the script $ROOTSYS/etc/gdb-backtrace.sh. Using the Root.StackTraceMessage; resource one can customize the message printed by the script. The entire; script can be replaced using the Root.StacktraceScript resource.; Numerous minor bug fixes... New module editline ; The new module editline enhances the prompt, giving type and syntax feedback using e.g. colors.; Class names are highlighted blue when typed, indicating that it is known to ROOT.; Matching parenthesis pairs are highlighted green when typed, or when the cursor is moved to a bracket. This works for () {} and [] brackets.; Any mismatched brackets (those without a matching partner) will be highlighted red when typed or when the cursor is moved to the bracket.; Tab completion output is colored magenta to diffe",MatchSource.DOCS,core/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v526/index.html:2680,Availability,avail,available,2680,"d syntax feedback using e.g. colors.; Class names are highlighted blue when typed, indicating that it is known to ROOT.; Matching parenthesis pairs are highlighted green when typed, or when the cursor is moved to a bracket. This works for () {} and [] brackets.; Any mismatched brackets (those without a matching partner) will be highlighted red when typed or when the cursor is moved to the bracket.; Tab completion output is colored magenta to differentiate between tab completion output and user input.; All of the colors are configurable in the .rootrc file.; They can be specified as #rgb or #rrggbb or color names:; black, red, green, yellow, blue, magenta, cyan or white.; They can be followed by an optional bold (alias light) or underlined.; Rint.ReverseColor allows to quickly toggle between the default ""light on dark"" (yes) instead of ""dark on light"" (no), depending on the terminal background.; An example configuration would be:. Rint.TypeColor: blue; Rint.BracketColor: bold green; Rint.BadBracketColor: underlined red; Rint.TabColor: magenta; Rint.PromptColor: black; Rint.ReverseColor: no. The enhanced prompt is available on all platforms with [n]curses, including Linux, Solaris and MacOS; the bold and underline options are available also for black and white terminals. You can export (or setenv) TERM=xterm-256color for nicer colors.; With editline comes also an improved terminal input handler.; It supports e.g. ^O (Ctrl-o) to replay the history: suppose you have entered. ...; root [3] i = func(); root [4] i += 12; root [5] printf(""i is %d\n"", i). You now want to re-run these three lines.; As always, you press the up cursor three times to see. root [6] i = func(). and now press ^O (Ctrl-o) to run the line, and prepare the next line:. root [6] i = func()^O; root [7] i += 12^O; root [8] printf(""i is %d\n"", i)^O; root [9] . allowing you to re-run that part of the history without having to press the up-arrow again and again.; Currently, editline is disabled on Windows.; ",MatchSource.DOCS,core/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v526/index.html:2794,Availability,avail,available,2794,"d syntax feedback using e.g. colors.; Class names are highlighted blue when typed, indicating that it is known to ROOT.; Matching parenthesis pairs are highlighted green when typed, or when the cursor is moved to a bracket. This works for () {} and [] brackets.; Any mismatched brackets (those without a matching partner) will be highlighted red when typed or when the cursor is moved to the bracket.; Tab completion output is colored magenta to differentiate between tab completion output and user input.; All of the colors are configurable in the .rootrc file.; They can be specified as #rgb or #rrggbb or color names:; black, red, green, yellow, blue, magenta, cyan or white.; They can be followed by an optional bold (alias light) or underlined.; Rint.ReverseColor allows to quickly toggle between the default ""light on dark"" (yes) instead of ""dark on light"" (no), depending on the terminal background.; An example configuration would be:. Rint.TypeColor: blue; Rint.BracketColor: bold green; Rint.BadBracketColor: underlined red; Rint.TabColor: magenta; Rint.PromptColor: black; Rint.ReverseColor: no. The enhanced prompt is available on all platforms with [n]curses, including Linux, Solaris and MacOS; the bold and underline options are available also for black and white terminals. You can export (or setenv) TERM=xterm-256color for nicer colors.; With editline comes also an improved terminal input handler.; It supports e.g. ^O (Ctrl-o) to replay the history: suppose you have entered. ...; root [3] i = func(); root [4] i += 12; root [5] printf(""i is %d\n"", i). You now want to re-run these three lines.; As always, you press the up cursor three times to see. root [6] i = func(). and now press ^O (Ctrl-o) to run the line, and prepare the next line:. root [6] i = func()^O; root [7] i += 12^O; root [8] printf(""i is %d\n"", i)^O; root [9] . allowing you to re-run that part of the history without having to press the up-arrow again and again.; Currently, editline is disabled on Windows.; ",MatchSource.DOCS,core/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v526/index.html:2337,Deployability,toggle,toggle,2337," can be replaced using the Root.StacktraceScript resource.; Numerous minor bug fixes... New module editline ; The new module editline enhances the prompt, giving type and syntax feedback using e.g. colors.; Class names are highlighted blue when typed, indicating that it is known to ROOT.; Matching parenthesis pairs are highlighted green when typed, or when the cursor is moved to a bracket. This works for () {} and [] brackets.; Any mismatched brackets (those without a matching partner) will be highlighted red when typed or when the cursor is moved to the bracket.; Tab completion output is colored magenta to differentiate between tab completion output and user input.; All of the colors are configurable in the .rootrc file.; They can be specified as #rgb or #rrggbb or color names:; black, red, green, yellow, blue, magenta, cyan or white.; They can be followed by an optional bold (alias light) or underlined.; Rint.ReverseColor allows to quickly toggle between the default ""light on dark"" (yes) instead of ""dark on light"" (no), depending on the terminal background.; An example configuration would be:. Rint.TypeColor: blue; Rint.BracketColor: bold green; Rint.BadBracketColor: underlined red; Rint.TabColor: magenta; Rint.PromptColor: black; Rint.ReverseColor: no. The enhanced prompt is available on all platforms with [n]curses, including Linux, Solaris and MacOS; the bold and underline options are available also for black and white terminals. You can export (or setenv) TERM=xterm-256color for nicer colors.; With editline comes also an improved terminal input handler.; It supports e.g. ^O (Ctrl-o) to replay the history: suppose you have entered. ...; root [3] i = func(); root [4] i += 12; root [5] printf(""i is %d\n"", i). You now want to re-run these three lines.; As always, you press the up cursor three times to see. root [6] i = func(). and now press ^O (Ctrl-o) to run the line, and prepare the next line:. root [6] i = func()^O; root [7] i += 12^O; root [8] printf(""i is %d\",MatchSource.DOCS,core/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v526/index.html:2469,Deployability,configurat,configuration,2469,"odule editline ; The new module editline enhances the prompt, giving type and syntax feedback using e.g. colors.; Class names are highlighted blue when typed, indicating that it is known to ROOT.; Matching parenthesis pairs are highlighted green when typed, or when the cursor is moved to a bracket. This works for () {} and [] brackets.; Any mismatched brackets (those without a matching partner) will be highlighted red when typed or when the cursor is moved to the bracket.; Tab completion output is colored magenta to differentiate between tab completion output and user input.; All of the colors are configurable in the .rootrc file.; They can be specified as #rgb or #rrggbb or color names:; black, red, green, yellow, blue, magenta, cyan or white.; They can be followed by an optional bold (alias light) or underlined.; Rint.ReverseColor allows to quickly toggle between the default ""light on dark"" (yes) instead of ""dark on light"" (no), depending on the terminal background.; An example configuration would be:. Rint.TypeColor: blue; Rint.BracketColor: bold green; Rint.BadBracketColor: underlined red; Rint.TabColor: magenta; Rint.PromptColor: black; Rint.ReverseColor: no. The enhanced prompt is available on all platforms with [n]curses, including Linux, Solaris and MacOS; the bold and underline options are available also for black and white terminals. You can export (or setenv) TERM=xterm-256color for nicer colors.; With editline comes also an improved terminal input handler.; It supports e.g. ^O (Ctrl-o) to replay the history: suppose you have entered. ...; root [3] i = func(); root [4] i += 12; root [5] printf(""i is %d\n"", i). You now want to re-run these three lines.; As always, you press the up cursor three times to see. root [6] i = func(). and now press ^O (Ctrl-o) to run the line, and prepare the next line:. root [6] i = func()^O; root [7] i += 12^O; root [8] printf(""i is %d\n"", i)^O; root [9] . allowing you to re-run that part of the history without having to press t",MatchSource.DOCS,core/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v526/index.html:1714,Energy Efficiency,green,green,1714,"e handling of ACLiC options on the command line (for example a.C+g).; In TClass::BuildEmulatedRealData properly handle the case of TNamed member that are not base class.; On the command line:; ; Fix the tab-completion of filenames in the sub-directories.; Prevent the unadvertent replacement of an arrow with a dot when the left side is actually a pointer. More user friendly stacktrace in case of a crash, with hints where; the problem might be. On Linux and MacOS X these stacktraces are generated; by the script $ROOTSYS/etc/gdb-backtrace.sh. Using the Root.StackTraceMessage; resource one can customize the message printed by the script. The entire; script can be replaced using the Root.StacktraceScript resource.; Numerous minor bug fixes... New module editline ; The new module editline enhances the prompt, giving type and syntax feedback using e.g. colors.; Class names are highlighted blue when typed, indicating that it is known to ROOT.; Matching parenthesis pairs are highlighted green when typed, or when the cursor is moved to a bracket. This works for () {} and [] brackets.; Any mismatched brackets (those without a matching partner) will be highlighted red when typed or when the cursor is moved to the bracket.; Tab completion output is colored magenta to differentiate between tab completion output and user input.; All of the colors are configurable in the .rootrc file.; They can be specified as #rgb or #rrggbb or color names:; black, red, green, yellow, blue, magenta, cyan or white.; They can be followed by an optional bold (alias light) or underlined.; Rint.ReverseColor allows to quickly toggle between the default ""light on dark"" (yes) instead of ""dark on light"" (no), depending on the terminal background.; An example configuration would be:. Rint.TypeColor: blue; Rint.BracketColor: bold green; Rint.BadBracketColor: underlined red; Rint.TabColor: magenta; Rint.PromptColor: black; Rint.ReverseColor: no. The enhanced prompt is available on all platforms with [n]curses",MatchSource.DOCS,core/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v526/index.html:2184,Energy Efficiency,green,green,2184," Linux and MacOS X these stacktraces are generated; by the script $ROOTSYS/etc/gdb-backtrace.sh. Using the Root.StackTraceMessage; resource one can customize the message printed by the script. The entire; script can be replaced using the Root.StacktraceScript resource.; Numerous minor bug fixes... New module editline ; The new module editline enhances the prompt, giving type and syntax feedback using e.g. colors.; Class names are highlighted blue when typed, indicating that it is known to ROOT.; Matching parenthesis pairs are highlighted green when typed, or when the cursor is moved to a bracket. This works for () {} and [] brackets.; Any mismatched brackets (those without a matching partner) will be highlighted red when typed or when the cursor is moved to the bracket.; Tab completion output is colored magenta to differentiate between tab completion output and user input.; All of the colors are configurable in the .rootrc file.; They can be specified as #rgb or #rrggbb or color names:; black, red, green, yellow, blue, magenta, cyan or white.; They can be followed by an optional bold (alias light) or underlined.; Rint.ReverseColor allows to quickly toggle between the default ""light on dark"" (yes) instead of ""dark on light"" (no), depending on the terminal background.; An example configuration would be:. Rint.TypeColor: blue; Rint.BracketColor: bold green; Rint.BadBracketColor: underlined red; Rint.TabColor: magenta; Rint.PromptColor: black; Rint.ReverseColor: no. The enhanced prompt is available on all platforms with [n]curses, including Linux, Solaris and MacOS; the bold and underline options are available also for black and white terminals. You can export (or setenv) TERM=xterm-256color for nicer colors.; With editline comes also an improved terminal input handler.; It supports e.g. ^O (Ctrl-o) to replay the history: suppose you have entered. ...; root [3] i = func(); root [4] i += 12; root [5] printf(""i is %d\n"", i). You now want to re-run these three lines.; As a",MatchSource.DOCS,core/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v526/index.html:2540,Energy Efficiency,green,green,2540,"giving type and syntax feedback using e.g. colors.; Class names are highlighted blue when typed, indicating that it is known to ROOT.; Matching parenthesis pairs are highlighted green when typed, or when the cursor is moved to a bracket. This works for () {} and [] brackets.; Any mismatched brackets (those without a matching partner) will be highlighted red when typed or when the cursor is moved to the bracket.; Tab completion output is colored magenta to differentiate between tab completion output and user input.; All of the colors are configurable in the .rootrc file.; They can be specified as #rgb or #rrggbb or color names:; black, red, green, yellow, blue, magenta, cyan or white.; They can be followed by an optional bold (alias light) or underlined.; Rint.ReverseColor allows to quickly toggle between the default ""light on dark"" (yes) instead of ""dark on light"" (no), depending on the terminal background.; An example configuration would be:. Rint.TypeColor: blue; Rint.BracketColor: bold green; Rint.BadBracketColor: underlined red; Rint.TabColor: magenta; Rint.PromptColor: black; Rint.ReverseColor: no. The enhanced prompt is available on all platforms with [n]curses, including Linux, Solaris and MacOS; the bold and underline options are available also for black and white terminals. You can export (or setenv) TERM=xterm-256color for nicer colors.; With editline comes also an improved terminal input handler.; It supports e.g. ^O (Ctrl-o) to replay the history: suppose you have entered. ...; root [3] i = func(); root [4] i += 12; root [5] printf(""i is %d\n"", i). You now want to re-run these three lines.; As always, you press the up cursor three times to see. root [6] i = func(). and now press ^O (Ctrl-o) to run the line, and prepare the next line:. root [6] i = func()^O; root [7] i += 12^O; root [8] printf(""i is %d\n"", i)^O; root [9] . allowing you to re-run that part of the history without having to press the up-arrow again and again.; Currently, editline is disabled ",MatchSource.DOCS,core/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v526/index.html:1332,Integrability,message,message,1332,"urther increases the stability of ROOT.; Add support for 'Dump' and 'Browse' of 'emulated' object.; TBits equality operator nows return true if the 2 operands have different; length and all the bits in the longer TBits that are passed the length; of the shorter TBits are zero (i.e. the default value of each; bits is zero).; Properly handle scripts with line longer than 1024 characters.; Repair the handling of ACLiC options on the command line (for example a.C+g).; In TClass::BuildEmulatedRealData properly handle the case of TNamed member that are not base class.; On the command line:; ; Fix the tab-completion of filenames in the sub-directories.; Prevent the unadvertent replacement of an arrow with a dot when the left side is actually a pointer. More user friendly stacktrace in case of a crash, with hints where; the problem might be. On Linux and MacOS X these stacktraces are generated; by the script $ROOTSYS/etc/gdb-backtrace.sh. Using the Root.StackTraceMessage; resource one can customize the message printed by the script. The entire; script can be replaced using the Root.StacktraceScript resource.; Numerous minor bug fixes... New module editline ; The new module editline enhances the prompt, giving type and syntax feedback using e.g. colors.; Class names are highlighted blue when typed, indicating that it is known to ROOT.; Matching parenthesis pairs are highlighted green when typed, or when the cursor is moved to a bracket. This works for () {} and [] brackets.; Any mismatched brackets (those without a matching partner) will be highlighted red when typed or when the cursor is moved to the bracket.; Tab completion output is colored magenta to differentiate between tab completion output and user input.; All of the colors are configurable in the .rootrc file.; They can be specified as #rgb or #rrggbb or color names:; black, red, green, yellow, blue, magenta, cyan or white.; They can be followed by an optional bold (alias light) or underlined.; Rint.ReverseColor all",MatchSource.DOCS,core/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v526/index.html:2419,Integrability,depend,depending,2419," can be replaced using the Root.StacktraceScript resource.; Numerous minor bug fixes... New module editline ; The new module editline enhances the prompt, giving type and syntax feedback using e.g. colors.; Class names are highlighted blue when typed, indicating that it is known to ROOT.; Matching parenthesis pairs are highlighted green when typed, or when the cursor is moved to a bracket. This works for () {} and [] brackets.; Any mismatched brackets (those without a matching partner) will be highlighted red when typed or when the cursor is moved to the bracket.; Tab completion output is colored magenta to differentiate between tab completion output and user input.; All of the colors are configurable in the .rootrc file.; They can be specified as #rgb or #rrggbb or color names:; black, red, green, yellow, blue, magenta, cyan or white.; They can be followed by an optional bold (alias light) or underlined.; Rint.ReverseColor allows to quickly toggle between the default ""light on dark"" (yes) instead of ""dark on light"" (no), depending on the terminal background.; An example configuration would be:. Rint.TypeColor: blue; Rint.BracketColor: bold green; Rint.BadBracketColor: underlined red; Rint.TabColor: magenta; Rint.PromptColor: black; Rint.ReverseColor: no. The enhanced prompt is available on all platforms with [n]curses, including Linux, Solaris and MacOS; the bold and underline options are available also for black and white terminals. You can export (or setenv) TERM=xterm-256color for nicer colors.; With editline comes also an improved terminal input handler.; It supports e.g. ^O (Ctrl-o) to replay the history: suppose you have entered. ...; root [3] i = func(); root [4] i += 12; root [5] printf(""i is %d\n"", i). You now want to re-run these three lines.; As always, you press the up cursor three times to see. root [6] i = func(). and now press ^O (Ctrl-o) to run the line, and prepare the next line:. root [6] i = func()^O; root [7] i += 12^O; root [8] printf(""i is %d\",MatchSource.DOCS,core/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v526/index.html:1515,Modifiability,enhance,enhances,1515,"n the longer TBits that are passed the length; of the shorter TBits are zero (i.e. the default value of each; bits is zero).; Properly handle scripts with line longer than 1024 characters.; Repair the handling of ACLiC options on the command line (for example a.C+g).; In TClass::BuildEmulatedRealData properly handle the case of TNamed member that are not base class.; On the command line:; ; Fix the tab-completion of filenames in the sub-directories.; Prevent the unadvertent replacement of an arrow with a dot when the left side is actually a pointer. More user friendly stacktrace in case of a crash, with hints where; the problem might be. On Linux and MacOS X these stacktraces are generated; by the script $ROOTSYS/etc/gdb-backtrace.sh. Using the Root.StackTraceMessage; resource one can customize the message printed by the script. The entire; script can be replaced using the Root.StacktraceScript resource.; Numerous minor bug fixes... New module editline ; The new module editline enhances the prompt, giving type and syntax feedback using e.g. colors.; Class names are highlighted blue when typed, indicating that it is known to ROOT.; Matching parenthesis pairs are highlighted green when typed, or when the cursor is moved to a bracket. This works for () {} and [] brackets.; Any mismatched brackets (those without a matching partner) will be highlighted red when typed or when the cursor is moved to the bracket.; Tab completion output is colored magenta to differentiate between tab completion output and user input.; All of the colors are configurable in the .rootrc file.; They can be specified as #rgb or #rrggbb or color names:; black, red, green, yellow, blue, magenta, cyan or white.; They can be followed by an optional bold (alias light) or underlined.; Rint.ReverseColor allows to quickly toggle between the default ""light on dark"" (yes) instead of ""dark on light"" (no), depending on the terminal background.; An example configuration would be:. Rint.TypeColor: blue; Rint.B",MatchSource.DOCS,core/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v526/index.html:2079,Modifiability,config,configurable,2079," More user friendly stacktrace in case of a crash, with hints where; the problem might be. On Linux and MacOS X these stacktraces are generated; by the script $ROOTSYS/etc/gdb-backtrace.sh. Using the Root.StackTraceMessage; resource one can customize the message printed by the script. The entire; script can be replaced using the Root.StacktraceScript resource.; Numerous minor bug fixes... New module editline ; The new module editline enhances the prompt, giving type and syntax feedback using e.g. colors.; Class names are highlighted blue when typed, indicating that it is known to ROOT.; Matching parenthesis pairs are highlighted green when typed, or when the cursor is moved to a bracket. This works for () {} and [] brackets.; Any mismatched brackets (those without a matching partner) will be highlighted red when typed or when the cursor is moved to the bracket.; Tab completion output is colored magenta to differentiate between tab completion output and user input.; All of the colors are configurable in the .rootrc file.; They can be specified as #rgb or #rrggbb or color names:; black, red, green, yellow, blue, magenta, cyan or white.; They can be followed by an optional bold (alias light) or underlined.; Rint.ReverseColor allows to quickly toggle between the default ""light on dark"" (yes) instead of ""dark on light"" (no), depending on the terminal background.; An example configuration would be:. Rint.TypeColor: blue; Rint.BracketColor: bold green; Rint.BadBracketColor: underlined red; Rint.TabColor: magenta; Rint.PromptColor: black; Rint.ReverseColor: no. The enhanced prompt is available on all platforms with [n]curses, including Linux, Solaris and MacOS; the bold and underline options are available also for black and white terminals. You can export (or setenv) TERM=xterm-256color for nicer colors.; With editline comes also an improved terminal input handler.; It supports e.g. ^O (Ctrl-o) to replay the history: suppose you have entered. ...; root [3] i = func(); root [",MatchSource.DOCS,core/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v526/index.html:2469,Modifiability,config,configuration,2469,"odule editline ; The new module editline enhances the prompt, giving type and syntax feedback using e.g. colors.; Class names are highlighted blue when typed, indicating that it is known to ROOT.; Matching parenthesis pairs are highlighted green when typed, or when the cursor is moved to a bracket. This works for () {} and [] brackets.; Any mismatched brackets (those without a matching partner) will be highlighted red when typed or when the cursor is moved to the bracket.; Tab completion output is colored magenta to differentiate between tab completion output and user input.; All of the colors are configurable in the .rootrc file.; They can be specified as #rgb or #rrggbb or color names:; black, red, green, yellow, blue, magenta, cyan or white.; They can be followed by an optional bold (alias light) or underlined.; Rint.ReverseColor allows to quickly toggle between the default ""light on dark"" (yes) instead of ""dark on light"" (no), depending on the terminal background.; An example configuration would be:. Rint.TypeColor: blue; Rint.BracketColor: bold green; Rint.BadBracketColor: underlined red; Rint.TabColor: magenta; Rint.PromptColor: black; Rint.ReverseColor: no. The enhanced prompt is available on all platforms with [n]curses, including Linux, Solaris and MacOS; the bold and underline options are available also for black and white terminals. You can export (or setenv) TERM=xterm-256color for nicer colors.; With editline comes also an improved terminal input handler.; It supports e.g. ^O (Ctrl-o) to replay the history: suppose you have entered. ...; root [3] i = func(); root [4] i += 12; root [5] printf(""i is %d\n"", i). You now want to re-run these three lines.; As always, you press the up cursor three times to see. root [6] i = func(). and now press ^O (Ctrl-o) to run the line, and prepare the next line:. root [6] i = func()^O; root [7] i += 12^O; root [8] printf(""i is %d\n"", i)^O; root [9] . allowing you to re-run that part of the history without having to press t",MatchSource.DOCS,core/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v526/index.html:2661,Modifiability,enhance,enhanced,2661,"d syntax feedback using e.g. colors.; Class names are highlighted blue when typed, indicating that it is known to ROOT.; Matching parenthesis pairs are highlighted green when typed, or when the cursor is moved to a bracket. This works for () {} and [] brackets.; Any mismatched brackets (those without a matching partner) will be highlighted red when typed or when the cursor is moved to the bracket.; Tab completion output is colored magenta to differentiate between tab completion output and user input.; All of the colors are configurable in the .rootrc file.; They can be specified as #rgb or #rrggbb or color names:; black, red, green, yellow, blue, magenta, cyan or white.; They can be followed by an optional bold (alias light) or underlined.; Rint.ReverseColor allows to quickly toggle between the default ""light on dark"" (yes) instead of ""dark on light"" (no), depending on the terminal background.; An example configuration would be:. Rint.TypeColor: blue; Rint.BracketColor: bold green; Rint.BadBracketColor: underlined red; Rint.TabColor: magenta; Rint.PromptColor: black; Rint.ReverseColor: no. The enhanced prompt is available on all platforms with [n]curses, including Linux, Solaris and MacOS; the bold and underline options are available also for black and white terminals. You can export (or setenv) TERM=xterm-256color for nicer colors.; With editline comes also an improved terminal input handler.; It supports e.g. ^O (Ctrl-o) to replay the history: suppose you have entered. ...; root [3] i = func(); root [4] i += 12; root [5] printf(""i is %d\n"", i). You now want to re-run these three lines.; As always, you press the up cursor three times to see. root [6] i = func(). and now press ^O (Ctrl-o) to run the line, and prepare the next line:. root [6] i = func()^O; root [7] i += 12^O; root [8] printf(""i is %d\n"", i)^O; root [9] . allowing you to re-run that part of the history without having to press the up-arrow again and again.; Currently, editline is disabled on Windows.; ",MatchSource.DOCS,core/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v526/index.html:1559,Usability,feedback,feedback,1559,"n the longer TBits that are passed the length; of the shorter TBits are zero (i.e. the default value of each; bits is zero).; Properly handle scripts with line longer than 1024 characters.; Repair the handling of ACLiC options on the command line (for example a.C+g).; In TClass::BuildEmulatedRealData properly handle the case of TNamed member that are not base class.; On the command line:; ; Fix the tab-completion of filenames in the sub-directories.; Prevent the unadvertent replacement of an arrow with a dot when the left side is actually a pointer. More user friendly stacktrace in case of a crash, with hints where; the problem might be. On Linux and MacOS X these stacktraces are generated; by the script $ROOTSYS/etc/gdb-backtrace.sh. Using the Root.StackTraceMessage; resource one can customize the message printed by the script. The entire; script can be replaced using the Root.StacktraceScript resource.; Numerous minor bug fixes... New module editline ; The new module editline enhances the prompt, giving type and syntax feedback using e.g. colors.; Class names are highlighted blue when typed, indicating that it is known to ROOT.; Matching parenthesis pairs are highlighted green when typed, or when the cursor is moved to a bracket. This works for () {} and [] brackets.; Any mismatched brackets (those without a matching partner) will be highlighted red when typed or when the cursor is moved to the bracket.; Tab completion output is colored magenta to differentiate between tab completion output and user input.; All of the colors are configurable in the .rootrc file.; They can be specified as #rgb or #rrggbb or color names:; black, red, green, yellow, blue, magenta, cyan or white.; They can be followed by an optional bold (alias light) or underlined.; Rint.ReverseColor allows to quickly toggle between the default ""light on dark"" (yes) instead of ""dark on light"" (no), depending on the terminal background.; An example configuration would be:. Rint.TypeColor: blue; Rint.B",MatchSource.DOCS,core/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v528/index.html:917,Availability,avail,available,917,". Core; Build system and Platform support. The build system has been extended to support out-of-source builds.; This means you can build different sets of binaries from one source tree, like:. mkdir root-debug; cd root-debug; ../root/configure --build=debug. The build system now supports cross compilation, where typically you need tools; like rootcint, rootmap, etc, to be compiled on the build platform to be able; to generate dictionaries for the target platform. ROOT has been ported to iOS. This port required the above mentioned; changes in the build system. To build ROOT for the iPhone/iPad sumilator do:. ./configure iossim; make. To build a native iOS armv7 version do:. ./configure ios; make. Both builds create a libRoot.a that can be used to create ROOT based iOS apps; (iOS does not allow apps to load non-system dynamic libraries at run time).; Some sample Xcode projects using ROOT will soon be made available. Base. Change TTime data member from Long_t to Long64_t. On 32-bit systems the; Long_t is 32-bits and too small to keep the time in milliseconds since the ROOT EPOCH (1-1-1995). Added new operators:. operator long long(); operator unsigned long long(). The existing operators long and unsigned long on 32-bit machines return; an error in case the stored time is larger then 32-bit and truncation; occurs (like was always the case till now, but silently). New method ExitOnException() which allows to set the behaviour of; TApplication in case of an exception (sigsegv, sigbus, sigill, sigfpe).; The default is to trap the signal and continue with the event loop,; using this method one can specify to exit with the signal number to the; shell, or to abort() which in addition generates a core dump. New command line argument -x which forces ROOT to exit on an exception.; Add TSystem::AddDynamicPath. Build. New option '-t' for rmkdepend to allow the caller to fully specify the name to be used as a target; This supersedes the name calculated from the input file name and t",MatchSource.DOCS,core/doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v528/index.html:1256,Availability,error,error,1256,"supports cross compilation, where typically you need tools; like rootcint, rootmap, etc, to be compiled on the build platform to be able; to generate dictionaries for the target platform. ROOT has been ported to iOS. This port required the above mentioned; changes in the build system. To build ROOT for the iPhone/iPad sumilator do:. ./configure iossim; make. To build a native iOS armv7 version do:. ./configure ios; make. Both builds create a libRoot.a that can be used to create ROOT based iOS apps; (iOS does not allow apps to load non-system dynamic libraries at run time).; Some sample Xcode projects using ROOT will soon be made available. Base. Change TTime data member from Long_t to Long64_t. On 32-bit systems the; Long_t is 32-bits and too small to keep the time in milliseconds since the ROOT EPOCH (1-1-1995). Added new operators:. operator long long(); operator unsigned long long(). The existing operators long and unsigned long on 32-bit machines return; an error in case the stored time is larger then 32-bit and truncation; occurs (like was always the case till now, but silently). New method ExitOnException() which allows to set the behaviour of; TApplication in case of an exception (sigsegv, sigbus, sigill, sigfpe).; The default is to trap the signal and continue with the event loop,; using this method one can specify to exit with the signal number to the; shell, or to abort() which in addition generates a core dump. New command line argument -x which forces ROOT to exit on an exception.; Add TSystem::AddDynamicPath. Build. New option '-t' for rmkdepend to allow the caller to fully specify the name to be used as a target; This supersedes the name calculated from the input file name and the -p and -o option. ACLiC. Allow ACLiC to use a flat directory structure when a build directory is specified.; To use a flat structure do:. gSystem->SetBuildDir(whereIwant, kTRUE); // the default for the 2nd parameter is kFALSE. Or use '-' in the option of CompileMacro. gSystem",MatchSource.DOCS,core/doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v528/index.html:69,Modifiability,extend,extended,69,". Core; Build system and Platform support. The build system has been extended to support out-of-source builds.; This means you can build different sets of binaries from one source tree, like:. mkdir root-debug; cd root-debug; ../root/configure --build=debug. The build system now supports cross compilation, where typically you need tools; like rootcint, rootmap, etc, to be compiled on the build platform to be able; to generate dictionaries for the target platform. ROOT has been ported to iOS. This port required the above mentioned; changes in the build system. To build ROOT for the iPhone/iPad sumilator do:. ./configure iossim; make. To build a native iOS armv7 version do:. ./configure ios; make. Both builds create a libRoot.a that can be used to create ROOT based iOS apps; (iOS does not allow apps to load non-system dynamic libraries at run time).; Some sample Xcode projects using ROOT will soon be made available. Base. Change TTime data member from Long_t to Long64_t. On 32-bit systems the; Long_t is 32-bits and too small to keep the time in milliseconds since the ROOT EPOCH (1-1-1995). Added new operators:. operator long long(); operator unsigned long long(). The existing operators long and unsigned long on 32-bit machines return; an error in case the stored time is larger then 32-bit and truncation; occurs (like was always the case till now, but silently). New method ExitOnException() which allows to set the behaviour of; TApplication in case of an exception (sigsegv, sigbus, sigill, sigfpe).; The default is to trap the signal and continue with the event loop,; using this method one can specify to exit with the signal number to the; shell, or to abort() which in addition generates a core dump. New command line argument -x which forces ROOT to exit on an exception.; Add TSystem::AddDynamicPath. Build. New option '-t' for rmkdepend to allow the caller to fully specify the name to be used as a target; This supersedes the name calculated from the input file name and t",MatchSource.DOCS,core/doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v528/index.html:234,Modifiability,config,configure,234,". Core; Build system and Platform support. The build system has been extended to support out-of-source builds.; This means you can build different sets of binaries from one source tree, like:. mkdir root-debug; cd root-debug; ../root/configure --build=debug. The build system now supports cross compilation, where typically you need tools; like rootcint, rootmap, etc, to be compiled on the build platform to be able; to generate dictionaries for the target platform. ROOT has been ported to iOS. This port required the above mentioned; changes in the build system. To build ROOT for the iPhone/iPad sumilator do:. ./configure iossim; make. To build a native iOS armv7 version do:. ./configure ios; make. Both builds create a libRoot.a that can be used to create ROOT based iOS apps; (iOS does not allow apps to load non-system dynamic libraries at run time).; Some sample Xcode projects using ROOT will soon be made available. Base. Change TTime data member from Long_t to Long64_t. On 32-bit systems the; Long_t is 32-bits and too small to keep the time in milliseconds since the ROOT EPOCH (1-1-1995). Added new operators:. operator long long(); operator unsigned long long(). The existing operators long and unsigned long on 32-bit machines return; an error in case the stored time is larger then 32-bit and truncation; occurs (like was always the case till now, but silently). New method ExitOnException() which allows to set the behaviour of; TApplication in case of an exception (sigsegv, sigbus, sigill, sigfpe).; The default is to trap the signal and continue with the event loop,; using this method one can specify to exit with the signal number to the; shell, or to abort() which in addition generates a core dump. New command line argument -x which forces ROOT to exit on an exception.; Add TSystem::AddDynamicPath. Build. New option '-t' for rmkdepend to allow the caller to fully specify the name to be used as a target; This supersedes the name calculated from the input file name and t",MatchSource.DOCS,core/doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v528/index.html:617,Modifiability,config,configure,617,". Core; Build system and Platform support. The build system has been extended to support out-of-source builds.; This means you can build different sets of binaries from one source tree, like:. mkdir root-debug; cd root-debug; ../root/configure --build=debug. The build system now supports cross compilation, where typically you need tools; like rootcint, rootmap, etc, to be compiled on the build platform to be able; to generate dictionaries for the target platform. ROOT has been ported to iOS. This port required the above mentioned; changes in the build system. To build ROOT for the iPhone/iPad sumilator do:. ./configure iossim; make. To build a native iOS armv7 version do:. ./configure ios; make. Both builds create a libRoot.a that can be used to create ROOT based iOS apps; (iOS does not allow apps to load non-system dynamic libraries at run time).; Some sample Xcode projects using ROOT will soon be made available. Base. Change TTime data member from Long_t to Long64_t. On 32-bit systems the; Long_t is 32-bits and too small to keep the time in milliseconds since the ROOT EPOCH (1-1-1995). Added new operators:. operator long long(); operator unsigned long long(). The existing operators long and unsigned long on 32-bit machines return; an error in case the stored time is larger then 32-bit and truncation; occurs (like was always the case till now, but silently). New method ExitOnException() which allows to set the behaviour of; TApplication in case of an exception (sigsegv, sigbus, sigill, sigfpe).; The default is to trap the signal and continue with the event loop,; using this method one can specify to exit with the signal number to the; shell, or to abort() which in addition generates a core dump. New command line argument -x which forces ROOT to exit on an exception.; Add TSystem::AddDynamicPath. Build. New option '-t' for rmkdepend to allow the caller to fully specify the name to be used as a target; This supersedes the name calculated from the input file name and t",MatchSource.DOCS,core/doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v528/index.html:684,Modifiability,config,configure,684,". Core; Build system and Platform support. The build system has been extended to support out-of-source builds.; This means you can build different sets of binaries from one source tree, like:. mkdir root-debug; cd root-debug; ../root/configure --build=debug. The build system now supports cross compilation, where typically you need tools; like rootcint, rootmap, etc, to be compiled on the build platform to be able; to generate dictionaries for the target platform. ROOT has been ported to iOS. This port required the above mentioned; changes in the build system. To build ROOT for the iPhone/iPad sumilator do:. ./configure iossim; make. To build a native iOS armv7 version do:. ./configure ios; make. Both builds create a libRoot.a that can be used to create ROOT based iOS apps; (iOS does not allow apps to load non-system dynamic libraries at run time).; Some sample Xcode projects using ROOT will soon be made available. Base. Change TTime data member from Long_t to Long64_t. On 32-bit systems the; Long_t is 32-bits and too small to keep the time in milliseconds since the ROOT EPOCH (1-1-1995). Added new operators:. operator long long(); operator unsigned long long(). The existing operators long and unsigned long on 32-bit machines return; an error in case the stored time is larger then 32-bit and truncation; occurs (like was always the case till now, but silently). New method ExitOnException() which allows to set the behaviour of; TApplication in case of an exception (sigsegv, sigbus, sigill, sigfpe).; The default is to trap the signal and continue with the event loop,; using this method one can specify to exit with the signal number to the; shell, or to abort() which in addition generates a core dump. New command line argument -x which forces ROOT to exit on an exception.; Add TSystem::AddDynamicPath. Build. New option '-t' for rmkdepend to allow the caller to fully specify the name to be used as a target; This supersedes the name calculated from the input file name and t",MatchSource.DOCS,core/doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v528/index.html:2332,Modifiability,polymorphi,polymorphism,2332,"method ExitOnException() which allows to set the behaviour of; TApplication in case of an exception (sigsegv, sigbus, sigill, sigfpe).; The default is to trap the signal and continue with the event loop,; using this method one can specify to exit with the signal number to the; shell, or to abort() which in addition generates a core dump. New command line argument -x which forces ROOT to exit on an exception.; Add TSystem::AddDynamicPath. Build. New option '-t' for rmkdepend to allow the caller to fully specify the name to be used as a target; This supersedes the name calculated from the input file name and the -p and -o option. ACLiC. Allow ACLiC to use a flat directory structure when a build directory is specified.; To use a flat structure do:. gSystem->SetBuildDir(whereIwant, kTRUE); // the default for the 2nd parameter is kFALSE. Or use '-' in the option of CompileMacro. gSystem->CompileMacro(myscript,""k-"",...);. Meta. Implement polymorphism for Emulated object (still not supporting polymorphism; of Emulated Object inheriting from compiled class).; This avoids memory leaks when the user data model relies on polymorphism; and does not the shared library defining the classes theand avoid splicing if the data is copied. TStreamerInfo::New inserts the address of the creating TStreamerInfo into; the object. This address is inserted in each emulated that does not inherit; from an emulated class and is positioned after all the base classes (which; are compiled classes). A derived class will set this value inside each; of its emulated base class.; TStreamerInfo::Destruct and the new method TStreamerInfo::GetActualClass; use this information to detect the TStreamerInfo actually used to create; the object and hence run the proper emulated destructor. Add a new function GenerateDictionary to TInterpreter which allows for the quick and easy creation of a dictionary; given one (or more) class name(s) and the name(s) of its header files. gInterpreter->GenerateDictionary(""vector",MatchSource.DOCS,core/doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v528/index.html:2387,Modifiability,polymorphi,polymorphism,2387,"method ExitOnException() which allows to set the behaviour of; TApplication in case of an exception (sigsegv, sigbus, sigill, sigfpe).; The default is to trap the signal and continue with the event loop,; using this method one can specify to exit with the signal number to the; shell, or to abort() which in addition generates a core dump. New command line argument -x which forces ROOT to exit on an exception.; Add TSystem::AddDynamicPath. Build. New option '-t' for rmkdepend to allow the caller to fully specify the name to be used as a target; This supersedes the name calculated from the input file name and the -p and -o option. ACLiC. Allow ACLiC to use a flat directory structure when a build directory is specified.; To use a flat structure do:. gSystem->SetBuildDir(whereIwant, kTRUE); // the default for the 2nd parameter is kFALSE. Or use '-' in the option of CompileMacro. gSystem->CompileMacro(myscript,""k-"",...);. Meta. Implement polymorphism for Emulated object (still not supporting polymorphism; of Emulated Object inheriting from compiled class).; This avoids memory leaks when the user data model relies on polymorphism; and does not the shared library defining the classes theand avoid splicing if the data is copied. TStreamerInfo::New inserts the address of the creating TStreamerInfo into; the object. This address is inserted in each emulated that does not inherit; from an emulated class and is positioned after all the base classes (which; are compiled classes). A derived class will set this value inside each; of its emulated base class.; TStreamerInfo::Destruct and the new method TStreamerInfo::GetActualClass; use this information to detect the TStreamerInfo actually used to create; the object and hence run the proper emulated destructor. Add a new function GenerateDictionary to TInterpreter which allows for the quick and easy creation of a dictionary; given one (or more) class name(s) and the name(s) of its header files. gInterpreter->GenerateDictionary(""vector",MatchSource.DOCS,core/doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v528/index.html:2420,Modifiability,inherit,inheriting,2420,"method ExitOnException() which allows to set the behaviour of; TApplication in case of an exception (sigsegv, sigbus, sigill, sigfpe).; The default is to trap the signal and continue with the event loop,; using this method one can specify to exit with the signal number to the; shell, or to abort() which in addition generates a core dump. New command line argument -x which forces ROOT to exit on an exception.; Add TSystem::AddDynamicPath. Build. New option '-t' for rmkdepend to allow the caller to fully specify the name to be used as a target; This supersedes the name calculated from the input file name and the -p and -o option. ACLiC. Allow ACLiC to use a flat directory structure when a build directory is specified.; To use a flat structure do:. gSystem->SetBuildDir(whereIwant, kTRUE); // the default for the 2nd parameter is kFALSE. Or use '-' in the option of CompileMacro. gSystem->CompileMacro(myscript,""k-"",...);. Meta. Implement polymorphism for Emulated object (still not supporting polymorphism; of Emulated Object inheriting from compiled class).; This avoids memory leaks when the user data model relies on polymorphism; and does not the shared library defining the classes theand avoid splicing if the data is copied. TStreamerInfo::New inserts the address of the creating TStreamerInfo into; the object. This address is inserted in each emulated that does not inherit; from an emulated class and is positioned after all the base classes (which; are compiled classes). A derived class will set this value inside each; of its emulated base class.; TStreamerInfo::Destruct and the new method TStreamerInfo::GetActualClass; use this information to detect the TStreamerInfo actually used to create; the object and hence run the proper emulated destructor. Add a new function GenerateDictionary to TInterpreter which allows for the quick and easy creation of a dictionary; given one (or more) class name(s) and the name(s) of its header files. gInterpreter->GenerateDictionary(""vector",MatchSource.DOCS,core/doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v528/index.html:2514,Modifiability,polymorphi,polymorphism,2514,"o trap the signal and continue with the event loop,; using this method one can specify to exit with the signal number to the; shell, or to abort() which in addition generates a core dump. New command line argument -x which forces ROOT to exit on an exception.; Add TSystem::AddDynamicPath. Build. New option '-t' for rmkdepend to allow the caller to fully specify the name to be used as a target; This supersedes the name calculated from the input file name and the -p and -o option. ACLiC. Allow ACLiC to use a flat directory structure when a build directory is specified.; To use a flat structure do:. gSystem->SetBuildDir(whereIwant, kTRUE); // the default for the 2nd parameter is kFALSE. Or use '-' in the option of CompileMacro. gSystem->CompileMacro(myscript,""k-"",...);. Meta. Implement polymorphism for Emulated object (still not supporting polymorphism; of Emulated Object inheriting from compiled class).; This avoids memory leaks when the user data model relies on polymorphism; and does not the shared library defining the classes theand avoid splicing if the data is copied. TStreamerInfo::New inserts the address of the creating TStreamerInfo into; the object. This address is inserted in each emulated that does not inherit; from an emulated class and is positioned after all the base classes (which; are compiled classes). A derived class will set this value inside each; of its emulated base class.; TStreamerInfo::Destruct and the new method TStreamerInfo::GetActualClass; use this information to detect the TStreamerInfo actually used to create; the object and hence run the proper emulated destructor. Add a new function GenerateDictionary to TInterpreter which allows for the quick and easy creation of a dictionary; given one (or more) class name(s) and the name(s) of its header files. gInterpreter->GenerateDictionary(""vector<vector<float> >;list<vector<float> >"",""list;vector"");; gInterpreter->GenerateDictionary(""myclass"",""myclass.h;myhelper.h"");; This replaces the recommend",MatchSource.DOCS,core/doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v528/index.html:2769,Modifiability,inherit,inherit,2769,"on.; Add TSystem::AddDynamicPath. Build. New option '-t' for rmkdepend to allow the caller to fully specify the name to be used as a target; This supersedes the name calculated from the input file name and the -p and -o option. ACLiC. Allow ACLiC to use a flat directory structure when a build directory is specified.; To use a flat structure do:. gSystem->SetBuildDir(whereIwant, kTRUE); // the default for the 2nd parameter is kFALSE. Or use '-' in the option of CompileMacro. gSystem->CompileMacro(myscript,""k-"",...);. Meta. Implement polymorphism for Emulated object (still not supporting polymorphism; of Emulated Object inheriting from compiled class).; This avoids memory leaks when the user data model relies on polymorphism; and does not the shared library defining the classes theand avoid splicing if the data is copied. TStreamerInfo::New inserts the address of the creating TStreamerInfo into; the object. This address is inserted in each emulated that does not inherit; from an emulated class and is positioned after all the base classes (which; are compiled classes). A derived class will set this value inside each; of its emulated base class.; TStreamerInfo::Destruct and the new method TStreamerInfo::GetActualClass; use this information to detect the TStreamerInfo actually used to create; the object and hence run the proper emulated destructor. Add a new function GenerateDictionary to TInterpreter which allows for the quick and easy creation of a dictionary; given one (or more) class name(s) and the name(s) of its header files. gInterpreter->GenerateDictionary(""vector<vector<float> >;list<vector<float> >"",""list;vector"");; gInterpreter->GenerateDictionary(""myclass"",""myclass.h;myhelper.h"");; This replaces the recommendation of creating a small 'loader.C' script to create the dictionaries. Implement a ShowMembers function for interpreted classes, by querying the interpreter for the data member; information.; In order to fix possible buffer overflow of parent string buff",MatchSource.DOCS,core/doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v528/index.html:812,Performance,load,load,812,". Core; Build system and Platform support. The build system has been extended to support out-of-source builds.; This means you can build different sets of binaries from one source tree, like:. mkdir root-debug; cd root-debug; ../root/configure --build=debug. The build system now supports cross compilation, where typically you need tools; like rootcint, rootmap, etc, to be compiled on the build platform to be able; to generate dictionaries for the target platform. ROOT has been ported to iOS. This port required the above mentioned; changes in the build system. To build ROOT for the iPhone/iPad sumilator do:. ./configure iossim; make. To build a native iOS armv7 version do:. ./configure ios; make. Both builds create a libRoot.a that can be used to create ROOT based iOS apps; (iOS does not allow apps to load non-system dynamic libraries at run time).; Some sample Xcode projects using ROOT will soon be made available. Base. Change TTime data member from Long_t to Long64_t. On 32-bit systems the; Long_t is 32-bits and too small to keep the time in milliseconds since the ROOT EPOCH (1-1-1995). Added new operators:. operator long long(); operator unsigned long long(). The existing operators long and unsigned long on 32-bit machines return; an error in case the stored time is larger then 32-bit and truncation; occurs (like was always the case till now, but silently). New method ExitOnException() which allows to set the behaviour of; TApplication in case of an exception (sigsegv, sigbus, sigill, sigfpe).; The default is to trap the signal and continue with the event loop,; using this method one can specify to exit with the signal number to the; shell, or to abort() which in addition generates a core dump. New command line argument -x which forces ROOT to exit on an exception.; Add TSystem::AddDynamicPath. Build. New option '-t' for rmkdepend to allow the caller to fully specify the name to be used as a target; This supersedes the name calculated from the input file name and t",MatchSource.DOCS,core/doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v528/index.html:3566,Performance,load,loader,3566,"t the shared library defining the classes theand avoid splicing if the data is copied. TStreamerInfo::New inserts the address of the creating TStreamerInfo into; the object. This address is inserted in each emulated that does not inherit; from an emulated class and is positioned after all the base classes (which; are compiled classes). A derived class will set this value inside each; of its emulated base class.; TStreamerInfo::Destruct and the new method TStreamerInfo::GetActualClass; use this information to detect the TStreamerInfo actually used to create; the object and hence run the proper emulated destructor. Add a new function GenerateDictionary to TInterpreter which allows for the quick and easy creation of a dictionary; given one (or more) class name(s) and the name(s) of its header files. gInterpreter->GenerateDictionary(""vector<vector<float> >;list<vector<float> >"",""list;vector"");; gInterpreter->GenerateDictionary(""myclass"",""myclass.h;myhelper.h"");; This replaces the recommendation of creating a small 'loader.C' script to create the dictionaries. Implement a ShowMembers function for interpreted classes, by querying the interpreter for the data member; information.; In order to fix possible buffer overflow of parent string buffer in TMemberInspector,; the signature of ShowMember() was changed to no longer require (nor request) the; caller to provide a buffer (of length unknown to the callee.); Improve the uniqueness of globally visible symbols to allow for the mixing of; dictionaries with very similar layout. Cont. New functions for TClonesArray:. AbsorbObjects(TClonesArray* otherTCA):; Allows one to directly move the object pointers from otherTCA to the calling; TCA without cloning (copying). The calling TCA takes over ownership of all of; the moved objects. otherTCA is left empty upon return. MultiSort(Int_t nTCs, TClonesArray** tcs):; Sorts multiple TClonesArrays simultaneously using the calling TCA's objects; as the sorting key. New function for TSeqColle",MatchSource.DOCS,core/doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v528/index.html:1677,Safety,abort,abort,1677,"gure iossim; make. To build a native iOS armv7 version do:. ./configure ios; make. Both builds create a libRoot.a that can be used to create ROOT based iOS apps; (iOS does not allow apps to load non-system dynamic libraries at run time).; Some sample Xcode projects using ROOT will soon be made available. Base. Change TTime data member from Long_t to Long64_t. On 32-bit systems the; Long_t is 32-bits and too small to keep the time in milliseconds since the ROOT EPOCH (1-1-1995). Added new operators:. operator long long(); operator unsigned long long(). The existing operators long and unsigned long on 32-bit machines return; an error in case the stored time is larger then 32-bit and truncation; occurs (like was always the case till now, but silently). New method ExitOnException() which allows to set the behaviour of; TApplication in case of an exception (sigsegv, sigbus, sigill, sigfpe).; The default is to trap the signal and continue with the event loop,; using this method one can specify to exit with the signal number to the; shell, or to abort() which in addition generates a core dump. New command line argument -x which forces ROOT to exit on an exception.; Add TSystem::AddDynamicPath. Build. New option '-t' for rmkdepend to allow the caller to fully specify the name to be used as a target; This supersedes the name calculated from the input file name and the -p and -o option. ACLiC. Allow ACLiC to use a flat directory structure when a build directory is specified.; To use a flat structure do:. gSystem->SetBuildDir(whereIwant, kTRUE); // the default for the 2nd parameter is kFALSE. Or use '-' in the option of CompileMacro. gSystem->CompileMacro(myscript,""k-"",...);. Meta. Implement polymorphism for Emulated object (still not supporting polymorphism; of Emulated Object inheriting from compiled class).; This avoids memory leaks when the user data model relies on polymorphism; and does not the shared library defining the classes theand avoid splicing if the data is copie",MatchSource.DOCS,core/doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v528/index.html:2459,Safety,avoid,avoids,2459,"o trap the signal and continue with the event loop,; using this method one can specify to exit with the signal number to the; shell, or to abort() which in addition generates a core dump. New command line argument -x which forces ROOT to exit on an exception.; Add TSystem::AddDynamicPath. Build. New option '-t' for rmkdepend to allow the caller to fully specify the name to be used as a target; This supersedes the name calculated from the input file name and the -p and -o option. ACLiC. Allow ACLiC to use a flat directory structure when a build directory is specified.; To use a flat structure do:. gSystem->SetBuildDir(whereIwant, kTRUE); // the default for the 2nd parameter is kFALSE. Or use '-' in the option of CompileMacro. gSystem->CompileMacro(myscript,""k-"",...);. Meta. Implement polymorphism for Emulated object (still not supporting polymorphism; of Emulated Object inheriting from compiled class).; This avoids memory leaks when the user data model relies on polymorphism; and does not the shared library defining the classes theand avoid splicing if the data is copied. TStreamerInfo::New inserts the address of the creating TStreamerInfo into; the object. This address is inserted in each emulated that does not inherit; from an emulated class and is positioned after all the base classes (which; are compiled classes). A derived class will set this value inside each; of its emulated base class.; TStreamerInfo::Destruct and the new method TStreamerInfo::GetActualClass; use this information to detect the TStreamerInfo actually used to create; the object and hence run the proper emulated destructor. Add a new function GenerateDictionary to TInterpreter which allows for the quick and easy creation of a dictionary; given one (or more) class name(s) and the name(s) of its header files. gInterpreter->GenerateDictionary(""vector<vector<float> >;list<vector<float> >"",""list;vector"");; gInterpreter->GenerateDictionary(""myclass"",""myclass.h;myhelper.h"");; This replaces the recommend",MatchSource.DOCS,core/doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v528/index.html:2588,Safety,avoid,avoid,2588,"o trap the signal and continue with the event loop,; using this method one can specify to exit with the signal number to the; shell, or to abort() which in addition generates a core dump. New command line argument -x which forces ROOT to exit on an exception.; Add TSystem::AddDynamicPath. Build. New option '-t' for rmkdepend to allow the caller to fully specify the name to be used as a target; This supersedes the name calculated from the input file name and the -p and -o option. ACLiC. Allow ACLiC to use a flat directory structure when a build directory is specified.; To use a flat structure do:. gSystem->SetBuildDir(whereIwant, kTRUE); // the default for the 2nd parameter is kFALSE. Or use '-' in the option of CompileMacro. gSystem->CompileMacro(myscript,""k-"",...);. Meta. Implement polymorphism for Emulated object (still not supporting polymorphism; of Emulated Object inheriting from compiled class).; This avoids memory leaks when the user data model relies on polymorphism; and does not the shared library defining the classes theand avoid splicing if the data is copied. TStreamerInfo::New inserts the address of the creating TStreamerInfo into; the object. This address is inserted in each emulated that does not inherit; from an emulated class and is positioned after all the base classes (which; are compiled classes). A derived class will set this value inside each; of its emulated base class.; TStreamerInfo::Destruct and the new method TStreamerInfo::GetActualClass; use this information to detect the TStreamerInfo actually used to create; the object and hence run the proper emulated destructor. Add a new function GenerateDictionary to TInterpreter which allows for the quick and easy creation of a dictionary; given one (or more) class name(s) and the name(s) of its header files. gInterpreter->GenerateDictionary(""vector<vector<float> >;list<vector<float> >"",""list;vector"");; gInterpreter->GenerateDictionary(""myclass"",""myclass.h;myhelper.h"");; This replaces the recommend",MatchSource.DOCS,core/doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v528/index.html:3053,Safety,detect,detect,3053,"irectory structure when a build directory is specified.; To use a flat structure do:. gSystem->SetBuildDir(whereIwant, kTRUE); // the default for the 2nd parameter is kFALSE. Or use '-' in the option of CompileMacro. gSystem->CompileMacro(myscript,""k-"",...);. Meta. Implement polymorphism for Emulated object (still not supporting polymorphism; of Emulated Object inheriting from compiled class).; This avoids memory leaks when the user data model relies on polymorphism; and does not the shared library defining the classes theand avoid splicing if the data is copied. TStreamerInfo::New inserts the address of the creating TStreamerInfo into; the object. This address is inserted in each emulated that does not inherit; from an emulated class and is positioned after all the base classes (which; are compiled classes). A derived class will set this value inside each; of its emulated base class.; TStreamerInfo::Destruct and the new method TStreamerInfo::GetActualClass; use this information to detect the TStreamerInfo actually used to create; the object and hence run the proper emulated destructor. Add a new function GenerateDictionary to TInterpreter which allows for the quick and easy creation of a dictionary; given one (or more) class name(s) and the name(s) of its header files. gInterpreter->GenerateDictionary(""vector<vector<float> >;list<vector<float> >"",""list;vector"");; gInterpreter->GenerateDictionary(""myclass"",""myclass.h;myhelper.h"");; This replaces the recommendation of creating a small 'loader.C' script to create the dictionaries. Implement a ShowMembers function for interpreted classes, by querying the interpreter for the data member; information.; In order to fix possible buffer overflow of parent string buffer in TMemberInspector,; the signature of ShowMember() was changed to no longer require (nor request) the; caller to provide a buffer (of length unknown to the callee.); Improve the uniqueness of globally visible symbols to allow for the mixing of; dictionaries ",MatchSource.DOCS,core/doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v528/index.html:4908,Usability,Clear,Clear,4908,"reation of a dictionary; given one (or more) class name(s) and the name(s) of its header files. gInterpreter->GenerateDictionary(""vector<vector<float> >;list<vector<float> >"",""list;vector"");; gInterpreter->GenerateDictionary(""myclass"",""myclass.h;myhelper.h"");; This replaces the recommendation of creating a small 'loader.C' script to create the dictionaries. Implement a ShowMembers function for interpreted classes, by querying the interpreter for the data member; information.; In order to fix possible buffer overflow of parent string buffer in TMemberInspector,; the signature of ShowMember() was changed to no longer require (nor request) the; caller to provide a buffer (of length unknown to the callee.); Improve the uniqueness of globally visible symbols to allow for the mixing of; dictionaries with very similar layout. Cont. New functions for TClonesArray:. AbsorbObjects(TClonesArray* otherTCA):; Allows one to directly move the object pointers from otherTCA to the calling; TCA without cloning (copying). The calling TCA takes over ownership of all of; the moved objects. otherTCA is left empty upon return. MultiSort(Int_t nTCs, TClonesArray** tcs):; Sorts multiple TClonesArrays simultaneously using the calling TCA's objects; as the sorting key. New function for TSeqCollection:. QSort(Object **a, Int_t nBs, TObject ***b):; Sort array a of TObject pointers using a quicksort algorithm. Arrays b will; be sorted just like a (a determines the sort; nBs is the number of TObject**; arrays in b). Uses ObjCompare() to compare objects. This function is used by; the new function TClonesArray::MultiSort(). Add a new option ""+"" in TClonesArray::Clear. When the option starts with ""C+"",; eg ""C+xyz"" the objects in the array are in turn cleared with the option ""xyz"".; Since the Collection objects do have a name and the Clone method does allow; for the name to change, TCollection::Clone was added to implement the name change properly. Thread. New static function TThread::IsInitialized. ",MatchSource.DOCS,core/doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v528/index.html:4998,Usability,clear,cleared,4998,"reation of a dictionary; given one (or more) class name(s) and the name(s) of its header files. gInterpreter->GenerateDictionary(""vector<vector<float> >;list<vector<float> >"",""list;vector"");; gInterpreter->GenerateDictionary(""myclass"",""myclass.h;myhelper.h"");; This replaces the recommendation of creating a small 'loader.C' script to create the dictionaries. Implement a ShowMembers function for interpreted classes, by querying the interpreter for the data member; information.; In order to fix possible buffer overflow of parent string buffer in TMemberInspector,; the signature of ShowMember() was changed to no longer require (nor request) the; caller to provide a buffer (of length unknown to the callee.); Improve the uniqueness of globally visible symbols to allow for the mixing of; dictionaries with very similar layout. Cont. New functions for TClonesArray:. AbsorbObjects(TClonesArray* otherTCA):; Allows one to directly move the object pointers from otherTCA to the calling; TCA without cloning (copying). The calling TCA takes over ownership of all of; the moved objects. otherTCA is left empty upon return. MultiSort(Int_t nTCs, TClonesArray** tcs):; Sorts multiple TClonesArrays simultaneously using the calling TCA's objects; as the sorting key. New function for TSeqCollection:. QSort(Object **a, Int_t nBs, TObject ***b):; Sort array a of TObject pointers using a quicksort algorithm. Arrays b will; be sorted just like a (a determines the sort; nBs is the number of TObject**; arrays in b). Uses ObjCompare() to compare objects. This function is used by; the new function TClonesArray::MultiSort(). Add a new option ""+"" in TClonesArray::Clear. When the option starts with ""C+"",; eg ""C+xyz"" the objects in the array are in turn cleared with the option ""xyz"".; Since the Collection objects do have a name and the Clone method does allow; for the name to change, TCollection::Clone was added to implement the name change properly. Thread. New static function TThread::IsInitialized. ",MatchSource.DOCS,core/doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html:1523,Availability,error,error,1523,"ly shortly before termination to ; insure closing of files and sockets before the unload of any library.; New collection 'ClosedObjects' holding pointers to TFile or TSocket that; have been closed but not deleted it. In the case of TSocket, they are added only; if they are closed by the CloseFiles.; Add a Close member function to TProofMgr since it is added to the list of socket.; Migrate the closing of files from various to a single place (T*System::Exit).; Fill in the implementation of TROOT::FindObjectAnyFile.; Mark TROOT as TObject::kInvalidObject as soon as its destructor starts,; in order to be able to veto some action later on (like autoloading). TSystem. Better handle the cases where the information in the rootmap file is (almost) empty. ; Avoid infinite loop if one of the dependent library is missing. Meta. Add new fast accessors to Merge routines (See the I/O package for more details.; Improve error message in case a schema evolution rule can not be loaded when the library is loaded; (from the generic 'it conflicts with one of the other rules' to 'the target member ... is unknown'.; Add the ability to explicitly forbid (or allow) the splitting of a class; (TClass::SetSplit ) so that user can inforce the use of a custom streamer in all possible split cases.; Improve the performance of TProcessUUID::AddUUID by reintroducing the THashList.; This significanly improve the performance of reading file with very large number of ; directories (A file with 100,000 directories was traversed in more than 8 minutes; and is now traversed in 15s) without noticeable affecting small files. TFolder. Several enhancement and clarification to TFolder::FindFullPathName. TStyle. Add the fill color attribute (SetLegendFillColor() and the font; attribute (SetLegendFont(). A new TStyle called ""Modern"" has been implemented. It can be set with:. gROOT->SetStyle(""Modern"");; ; It has very little decoration. It was made looking at the default styles; usually used by the experiments.; ; ",MatchSource.DOCS,core/doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html:3521,Deployability,install,installed,3521,"(""Modern"");; ; It has very little decoration. It was made looking at the default styles; usually used by the experiments.; ; A new parameter Canvas.Style in etc/system.rootrc allows; to define the default style. If it is not specified, the Modern; style is used. To use the old default style one can set it to Classic or add. gROOT->SetStyle(""Classic"");; ; to your scripts. We seek feedback on improving the Modern style.; Please leave comments in the forum.; ; The following table shows the two plots hpx->Draw() and hpxpy->Draw(""colz""); in the ""Classic"" and ""Modern"" styles.; . Classic Style; Modern Style. An other example:; ; Classic style:. Modern style:. ACLiC. ACLiC now passes the macro __ACLIC__ to both the rootcint and compiler phases. TWinNTSystem. Fix 64-bit compatibility issues (__asm keyword is not allowed).; Try (as much as possible) to avoid the disturbing ""There is no disk in the drive. Please insert a disk into drive \Device\..."" popup message box when calling AccessPathName() on removable disk drives with no media installed. This should fix the problem reported on the forum.; Prevent short timers (e.g. 10ms) to keep looping in the DispatchOneEvent() infinite loop.; Better stdout/stderr redirection (it was impossible to restore stdout using freopen on Windows 7, leaving the console as a zombie...); Make sure the stdout/stderr redirection works also in the case there is no console (i.e. in stand-alone applications).; Make sure the file descriptors are valid before using them.; The shortcuts are now working on Windows. Building with CMake. ROOT can now be build using the CMake build system (version 2.8). ; The initial supported platforms are Linux(gcc), Windows (vc9), MacOSX(gcc). The installed libraries and executables should be compatible to the standard build of ROOT.  CMake generates native makefiles and workspaces (i.e. Xcode, Eclipse, Visual Studio) that can be used in the; compiler environment of your choice. The main difference with respect; the Module",MatchSource.DOCS,core/doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html:4202,Deployability,install,installed,4202,"ix 64-bit compatibility issues (__asm keyword is not allowed).; Try (as much as possible) to avoid the disturbing ""There is no disk in the drive. Please insert a disk into drive \Device\..."" popup message box when calling AccessPathName() on removable disk drives with no media installed. This should fix the problem reported on the forum.; Prevent short timers (e.g. 10ms) to keep looping in the DispatchOneEvent() infinite loop.; Better stdout/stderr redirection (it was impossible to restore stdout using freopen on Windows 7, leaving the console as a zombie...); Make sure the stdout/stderr redirection works also in the case there is no console (i.e. in stand-alone applications).; Make sure the file descriptors are valid before using them.; The shortcuts are now working on Windows. Building with CMake. ROOT can now be build using the CMake build system (version 2.8). ; The initial supported platforms are Linux(gcc), Windows (vc9), MacOSX(gcc). The installed libraries and executables should be compatible to the standard build of ROOT.  CMake generates native makefiles and workspaces (i.e. Xcode, Eclipse, Visual Studio) that can be used in the; compiler environment of your choice. The main difference with respect; the Module.mk build is that the build is done out of the source tree,; which allows several build configurations in parallel (debug,; non-debug, optional components, etc.).  The main advantage; with respect the standard build system is that for the Windows platform; it does not require the installaton of CygWin.; Here are the basic instructions: . mkdir <builddir>   # create a empty directory in which CMake will put temporary and binary files; cd <builddir>; cmake [options] <rootsources> # by default it will generate a Makefile (or NMake file on Windows); make [options] # you can use any standard make options (e.g. -jN); make install # installation to the source tree by default, use CMAKE_INSTALL_PREFIX to change it. The CMake options and parameters can be view",MatchSource.DOCS,core/doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html:4570,Deployability,configurat,configurations,4570,"ported on the forum.; Prevent short timers (e.g. 10ms) to keep looping in the DispatchOneEvent() infinite loop.; Better stdout/stderr redirection (it was impossible to restore stdout using freopen on Windows 7, leaving the console as a zombie...); Make sure the stdout/stderr redirection works also in the case there is no console (i.e. in stand-alone applications).; Make sure the file descriptors are valid before using them.; The shortcuts are now working on Windows. Building with CMake. ROOT can now be build using the CMake build system (version 2.8). ; The initial supported platforms are Linux(gcc), Windows (vc9), MacOSX(gcc). The installed libraries and executables should be compatible to the standard build of ROOT.  CMake generates native makefiles and workspaces (i.e. Xcode, Eclipse, Visual Studio) that can be used in the; compiler environment of your choice. The main difference with respect; the Module.mk build is that the build is done out of the source tree,; which allows several build configurations in parallel (debug,; non-debug, optional components, etc.).  The main advantage; with respect the standard build system is that for the Windows platform; it does not require the installaton of CygWin.; Here are the basic instructions: . mkdir <builddir>   # create a empty directory in which CMake will put temporary and binary files; cd <builddir>; cmake [options] <rootsources> # by default it will generate a Makefile (or NMake file on Windows); make [options] # you can use any standard make options (e.g. -jN); make install # installation to the source tree by default, use CMAKE_INSTALL_PREFIX to change it. The CMake options and parameters can be viewed using the ccmake utility (cmake-gui for Windows). Here is a quick summary of them:. -DCMAKE_INSTALL_PREFIX=<installdir> # installation prefix; -Dxxxx=ON -Dyyyy=OFF # Optional ROOT components (e.g. tmva, mathcode, gdml, etc.); -DGIF_INCLUDE_DIR=/usr/include # Specify locations for external libraries and packages; -DG",MatchSource.DOCS,core/doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html:4763,Deployability,install,installaton,4763,"s impossible to restore stdout using freopen on Windows 7, leaving the console as a zombie...); Make sure the stdout/stderr redirection works also in the case there is no console (i.e. in stand-alone applications).; Make sure the file descriptors are valid before using them.; The shortcuts are now working on Windows. Building with CMake. ROOT can now be build using the CMake build system (version 2.8). ; The initial supported platforms are Linux(gcc), Windows (vc9), MacOSX(gcc). The installed libraries and executables should be compatible to the standard build of ROOT.  CMake generates native makefiles and workspaces (i.e. Xcode, Eclipse, Visual Studio) that can be used in the; compiler environment of your choice. The main difference with respect; the Module.mk build is that the build is done out of the source tree,; which allows several build configurations in parallel (debug,; non-debug, optional components, etc.).  The main advantage; with respect the standard build system is that for the Windows platform; it does not require the installaton of CygWin.; Here are the basic instructions: . mkdir <builddir>   # create a empty directory in which CMake will put temporary and binary files; cd <builddir>; cmake [options] <rootsources> # by default it will generate a Makefile (or NMake file on Windows); make [options] # you can use any standard make options (e.g. -jN); make install # installation to the source tree by default, use CMAKE_INSTALL_PREFIX to change it. The CMake options and parameters can be viewed using the ccmake utility (cmake-gui for Windows). Here is a quick summary of them:. -DCMAKE_INSTALL_PREFIX=<installdir> # installation prefix; -Dxxxx=ON -Dyyyy=OFF # Optional ROOT components (e.g. tmva, mathcode, gdml, etc.); -DGIF_INCLUDE_DIR=/usr/include # Specify locations for external libraries and packages; -DGIF_LIBRARY=/usr/lib64/libgif.so ; -G <generator name> # E.g. ""XCode"", ""Eclipse CDT4 - Unix Makefiles"", ""Visual Studio 9 2008",MatchSource.DOCS,core/doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html:5106,Deployability,install,install,5106,"atforms are Linux(gcc), Windows (vc9), MacOSX(gcc). The installed libraries and executables should be compatible to the standard build of ROOT.  CMake generates native makefiles and workspaces (i.e. Xcode, Eclipse, Visual Studio) that can be used in the; compiler environment of your choice. The main difference with respect; the Module.mk build is that the build is done out of the source tree,; which allows several build configurations in parallel (debug,; non-debug, optional components, etc.).  The main advantage; with respect the standard build system is that for the Windows platform; it does not require the installaton of CygWin.; Here are the basic instructions: . mkdir <builddir>   # create a empty directory in which CMake will put temporary and binary files; cd <builddir>; cmake [options] <rootsources> # by default it will generate a Makefile (or NMake file on Windows); make [options] # you can use any standard make options (e.g. -jN); make install # installation to the source tree by default, use CMAKE_INSTALL_PREFIX to change it. The CMake options and parameters can be viewed using the ccmake utility (cmake-gui for Windows). Here is a quick summary of them:. -DCMAKE_INSTALL_PREFIX=<installdir> # installation prefix; -Dxxxx=ON -Dyyyy=OFF # Optional ROOT components (e.g. tmva, mathcode, gdml, etc.); -DGIF_INCLUDE_DIR=/usr/include # Specify locations for external libraries and packages; -DGIF_LIBRARY=/usr/lib64/libgif.so ; -G <generator name> # E.g. ""XCode"", ""Eclipse CDT4 - Unix Makefiles"", ""Visual Studio 9 2008",MatchSource.DOCS,core/doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html:5116,Deployability,install,installation,5116,"atforms are Linux(gcc), Windows (vc9), MacOSX(gcc). The installed libraries and executables should be compatible to the standard build of ROOT.  CMake generates native makefiles and workspaces (i.e. Xcode, Eclipse, Visual Studio) that can be used in the; compiler environment of your choice. The main difference with respect; the Module.mk build is that the build is done out of the source tree,; which allows several build configurations in parallel (debug,; non-debug, optional components, etc.).  The main advantage; with respect the standard build system is that for the Windows platform; it does not require the installaton of CygWin.; Here are the basic instructions: . mkdir <builddir>   # create a empty directory in which CMake will put temporary and binary files; cd <builddir>; cmake [options] <rootsources> # by default it will generate a Makefile (or NMake file on Windows); make [options] # you can use any standard make options (e.g. -jN); make install # installation to the source tree by default, use CMAKE_INSTALL_PREFIX to change it. The CMake options and parameters can be viewed using the ccmake utility (cmake-gui for Windows). Here is a quick summary of them:. -DCMAKE_INSTALL_PREFIX=<installdir> # installation prefix; -Dxxxx=ON -Dyyyy=OFF # Optional ROOT components (e.g. tmva, mathcode, gdml, etc.); -DGIF_INCLUDE_DIR=/usr/include # Specify locations for external libraries and packages; -DGIF_LIBRARY=/usr/lib64/libgif.so ; -G <generator name> # E.g. ""XCode"", ""Eclipse CDT4 - Unix Makefiles"", ""Visual Studio 9 2008",MatchSource.DOCS,core/doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html:5354,Deployability,install,installdir,5354," be used in the; compiler environment of your choice. The main difference with respect; the Module.mk build is that the build is done out of the source tree,; which allows several build configurations in parallel (debug,; non-debug, optional components, etc.).  The main advantage; with respect the standard build system is that for the Windows platform; it does not require the installaton of CygWin.; Here are the basic instructions: . mkdir <builddir>   # create a empty directory in which CMake will put temporary and binary files; cd <builddir>; cmake [options] <rootsources> # by default it will generate a Makefile (or NMake file on Windows); make [options] # you can use any standard make options (e.g. -jN); make install # installation to the source tree by default, use CMAKE_INSTALL_PREFIX to change it. The CMake options and parameters can be viewed using the ccmake utility (cmake-gui for Windows). Here is a quick summary of them:. -DCMAKE_INSTALL_PREFIX=<installdir> # installation prefix; -Dxxxx=ON -Dyyyy=OFF # Optional ROOT components (e.g. tmva, mathcode, gdml, etc.); -DGIF_INCLUDE_DIR=/usr/include # Specify locations for external libraries and packages; -DGIF_LIBRARY=/usr/lib64/libgif.so ; -G <generator name> # E.g. ""XCode"", ""Eclipse CDT4 - Unix Makefiles"", ""Visual Studio 9 2008",MatchSource.DOCS,core/doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html:5368,Deployability,install,installation,5368," be used in the; compiler environment of your choice. The main difference with respect; the Module.mk build is that the build is done out of the source tree,; which allows several build configurations in parallel (debug,; non-debug, optional components, etc.).  The main advantage; with respect the standard build system is that for the Windows platform; it does not require the installaton of CygWin.; Here are the basic instructions: . mkdir <builddir>   # create a empty directory in which CMake will put temporary and binary files; cd <builddir>; cmake [options] <rootsources> # by default it will generate a Makefile (or NMake file on Windows); make [options] # you can use any standard make options (e.g. -jN); make install # installation to the source tree by default, use CMAKE_INSTALL_PREFIX to change it. The CMake options and parameters can be viewed using the ccmake utility (cmake-gui for Windows). Here is a quick summary of them:. -DCMAKE_INSTALL_PREFIX=<installdir> # installation prefix; -Dxxxx=ON -Dyyyy=OFF # Optional ROOT components (e.g. tmva, mathcode, gdml, etc.); -DGIF_INCLUDE_DIR=/usr/include # Specify locations for external libraries and packages; -DGIF_LIBRARY=/usr/lib64/libgif.so ; -G <generator name> # E.g. ""XCode"", ""Eclipse CDT4 - Unix Makefiles"", ""Visual Studio 9 2008",MatchSource.DOCS,core/doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html:5737,Deployability,Release,Release,5737,"ug,; non-debug, optional components, etc.).  The main advantage; with respect the standard build system is that for the Windows platform; it does not require the installaton of CygWin.; Here are the basic instructions: . mkdir <builddir>   # create a empty directory in which CMake will put temporary and binary files; cd <builddir>; cmake [options] <rootsources> # by default it will generate a Makefile (or NMake file on Windows); make [options] # you can use any standard make options (e.g. -jN); make install # installation to the source tree by default, use CMAKE_INSTALL_PREFIX to change it. The CMake options and parameters can be viewed using the ccmake utility (cmake-gui for Windows). Here is a quick summary of them:. -DCMAKE_INSTALL_PREFIX=<installdir> # installation prefix; -Dxxxx=ON -Dyyyy=OFF # Optional ROOT components (e.g. tmva, mathcode, gdml, etc.); -DGIF_INCLUDE_DIR=/usr/include # Specify locations for external libraries and packages; -DGIF_LIBRARY=/usr/lib64/libgif.so ; -G <generator name> # E.g. ""XCode"", ""Eclipse CDT4 - Unix Makefiles"", ""Visual Studio 9 2008",MatchSource.DOCS,core/doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html:571,Integrability,rout,routine,571,". Core; TString. Reimplementation of the internals of TString to not use reference counting and; copy on write, but to use a more modern and thread safe Short String; Optimization (SSO) technique. Using SSO short strings (<15 on 64-bit and; <11 on 32-bit) are contained in the TString internal data structure; without the need for mallocing the required space. TObject. In TObject::ls, add support for the option 'noaddr' which ; prevents the printing of the address of the object. This; is useful in particular in roottest. Use this in hadd; and TFileMerger. TROOT. New routine CloseFiles used automatically shortly before termination to ; insure closing of files and sockets before the unload of any library.; New collection 'ClosedObjects' holding pointers to TFile or TSocket that; have been closed but not deleted it. In the case of TSocket, they are added only; if they are closed by the CloseFiles.; Add a Close member function to TProofMgr since it is added to the list of socket.; Migrate the closing of files from various to a single place (T*System::Exit).; Fill in the implementation of TROOT::FindObjectAnyFile.; Mark TROOT as TObject::kInvalidObject as soon as its destructor starts,; in order to be able to veto some action later on (like autoloading). TSystem. Better handle the cases where the information in the rootmap file is (almost) empty. ; Avoid infinite loop if one of the dependent library is missing. Meta. Add new fast accessors to Merge routines (See the I/O package for more details.; Improve error message in case a schema evolution rule can not be loaded when the library is loaded; (from the generic 'it conflicts with one of the other rules' to 'the target member ... is unknown'.; Add the ability to explicitly forbid (or allow) the splitting of a class; (TClass::SetSplit ) so that user can inforce the use of a custom streamer in all possible split cases.; Improve the performance of TProcessUUID::AddUUID by reintroducing the THashList.; This significanly improve",MatchSource.DOCS,core/doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html:1398,Integrability,depend,dependent,1398,"ort for the option 'noaddr' which ; prevents the printing of the address of the object. This; is useful in particular in roottest. Use this in hadd; and TFileMerger. TROOT. New routine CloseFiles used automatically shortly before termination to ; insure closing of files and sockets before the unload of any library.; New collection 'ClosedObjects' holding pointers to TFile or TSocket that; have been closed but not deleted it. In the case of TSocket, they are added only; if they are closed by the CloseFiles.; Add a Close member function to TProofMgr since it is added to the list of socket.; Migrate the closing of files from various to a single place (T*System::Exit).; Fill in the implementation of TROOT::FindObjectAnyFile.; Mark TROOT as TObject::kInvalidObject as soon as its destructor starts,; in order to be able to veto some action later on (like autoloading). TSystem. Better handle the cases where the information in the rootmap file is (almost) empty. ; Avoid infinite loop if one of the dependent library is missing. Meta. Add new fast accessors to Merge routines (See the I/O package for more details.; Improve error message in case a schema evolution rule can not be loaded when the library is loaded; (from the generic 'it conflicts with one of the other rules' to 'the target member ... is unknown'.; Add the ability to explicitly forbid (or allow) the splitting of a class; (TClass::SetSplit ) so that user can inforce the use of a custom streamer in all possible split cases.; Improve the performance of TProcessUUID::AddUUID by reintroducing the THashList.; This significanly improve the performance of reading file with very large number of ; directories (A file with 100,000 directories was traversed in more than 8 minutes; and is now traversed in 15s) without noticeable affecting small files. TFolder. Several enhancement and clarification to TFolder::FindFullPathName. TStyle. Add the fill color attribute (SetLegendFillColor() and the font; attribute (SetLegendFont(). ",MatchSource.DOCS,core/doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html:1466,Integrability,rout,routines,1466," object. This; is useful in particular in roottest. Use this in hadd; and TFileMerger. TROOT. New routine CloseFiles used automatically shortly before termination to ; insure closing of files and sockets before the unload of any library.; New collection 'ClosedObjects' holding pointers to TFile or TSocket that; have been closed but not deleted it. In the case of TSocket, they are added only; if they are closed by the CloseFiles.; Add a Close member function to TProofMgr since it is added to the list of socket.; Migrate the closing of files from various to a single place (T*System::Exit).; Fill in the implementation of TROOT::FindObjectAnyFile.; Mark TROOT as TObject::kInvalidObject as soon as its destructor starts,; in order to be able to veto some action later on (like autoloading). TSystem. Better handle the cases where the information in the rootmap file is (almost) empty. ; Avoid infinite loop if one of the dependent library is missing. Meta. Add new fast accessors to Merge routines (See the I/O package for more details.; Improve error message in case a schema evolution rule can not be loaded when the library is loaded; (from the generic 'it conflicts with one of the other rules' to 'the target member ... is unknown'.; Add the ability to explicitly forbid (or allow) the splitting of a class; (TClass::SetSplit ) so that user can inforce the use of a custom streamer in all possible split cases.; Improve the performance of TProcessUUID::AddUUID by reintroducing the THashList.; This significanly improve the performance of reading file with very large number of ; directories (A file with 100,000 directories was traversed in more than 8 minutes; and is now traversed in 15s) without noticeable affecting small files. TFolder. Several enhancement and clarification to TFolder::FindFullPathName. TStyle. Add the fill color attribute (SetLegendFillColor() and the font; attribute (SetLegendFont(). A new TStyle called ""Modern"" has been implemented. It can be set with:. gROOT->",MatchSource.DOCS,core/doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html:1529,Integrability,message,message,1529,"ly shortly before termination to ; insure closing of files and sockets before the unload of any library.; New collection 'ClosedObjects' holding pointers to TFile or TSocket that; have been closed but not deleted it. In the case of TSocket, they are added only; if they are closed by the CloseFiles.; Add a Close member function to TProofMgr since it is added to the list of socket.; Migrate the closing of files from various to a single place (T*System::Exit).; Fill in the implementation of TROOT::FindObjectAnyFile.; Mark TROOT as TObject::kInvalidObject as soon as its destructor starts,; in order to be able to veto some action later on (like autoloading). TSystem. Better handle the cases where the information in the rootmap file is (almost) empty. ; Avoid infinite loop if one of the dependent library is missing. Meta. Add new fast accessors to Merge routines (See the I/O package for more details.; Improve error message in case a schema evolution rule can not be loaded when the library is loaded; (from the generic 'it conflicts with one of the other rules' to 'the target member ... is unknown'.; Add the ability to explicitly forbid (or allow) the splitting of a class; (TClass::SetSplit ) so that user can inforce the use of a custom streamer in all possible split cases.; Improve the performance of TProcessUUID::AddUUID by reintroducing the THashList.; This significanly improve the performance of reading file with very large number of ; directories (A file with 100,000 directories was traversed in more than 8 minutes; and is now traversed in 15s) without noticeable affecting small files. TFolder. Several enhancement and clarification to TFolder::FindFullPathName. TStyle. Add the fill color attribute (SetLegendFillColor() and the font; attribute (SetLegendFont(). A new TStyle called ""Modern"" has been implemented. It can be set with:. gROOT->SetStyle(""Modern"");; ; It has very little decoration. It was made looking at the default styles; usually used by the experiments.; ; ",MatchSource.DOCS,core/doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html:3440,Integrability,message,message,3440,"(""Modern"");; ; It has very little decoration. It was made looking at the default styles; usually used by the experiments.; ; A new parameter Canvas.Style in etc/system.rootrc allows; to define the default style. If it is not specified, the Modern; style is used. To use the old default style one can set it to Classic or add. gROOT->SetStyle(""Classic"");; ; to your scripts. We seek feedback on improving the Modern style.; Please leave comments in the forum.; ; The following table shows the two plots hpx->Draw() and hpxpy->Draw(""colz""); in the ""Classic"" and ""Modern"" styles.; . Classic Style; Modern Style. An other example:; ; Classic style:. Modern style:. ACLiC. ACLiC now passes the macro __ACLIC__ to both the rootcint and compiler phases. TWinNTSystem. Fix 64-bit compatibility issues (__asm keyword is not allowed).; Try (as much as possible) to avoid the disturbing ""There is no disk in the drive. Please insert a disk into drive \Device\..."" popup message box when calling AccessPathName() on removable disk drives with no media installed. This should fix the problem reported on the forum.; Prevent short timers (e.g. 10ms) to keep looping in the DispatchOneEvent() infinite loop.; Better stdout/stderr redirection (it was impossible to restore stdout using freopen on Windows 7, leaving the console as a zombie...); Make sure the stdout/stderr redirection works also in the case there is no console (i.e. in stand-alone applications).; Make sure the file descriptors are valid before using them.; The shortcuts are now working on Windows. Building with CMake. ROOT can now be build using the CMake build system (version 2.8). ; The initial supported platforms are Linux(gcc), Windows (vc9), MacOSX(gcc). The installed libraries and executables should be compatible to the standard build of ROOT.  CMake generates native makefiles and workspaces (i.e. Xcode, Eclipse, Visual Studio) that can be used in the; compiler environment of your choice. The main difference with respect; the Module",MatchSource.DOCS,core/doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html:2233,Modifiability,enhance,enhancement,2233,"loading). TSystem. Better handle the cases where the information in the rootmap file is (almost) empty. ; Avoid infinite loop if one of the dependent library is missing. Meta. Add new fast accessors to Merge routines (See the I/O package for more details.; Improve error message in case a schema evolution rule can not be loaded when the library is loaded; (from the generic 'it conflicts with one of the other rules' to 'the target member ... is unknown'.; Add the ability to explicitly forbid (or allow) the splitting of a class; (TClass::SetSplit ) so that user can inforce the use of a custom streamer in all possible split cases.; Improve the performance of TProcessUUID::AddUUID by reintroducing the THashList.; This significanly improve the performance of reading file with very large number of ; directories (A file with 100,000 directories was traversed in more than 8 minutes; and is now traversed in 15s) without noticeable affecting small files. TFolder. Several enhancement and clarification to TFolder::FindFullPathName. TStyle. Add the fill color attribute (SetLegendFillColor() and the font; attribute (SetLegendFont(). A new TStyle called ""Modern"" has been implemented. It can be set with:. gROOT->SetStyle(""Modern"");; ; It has very little decoration. It was made looking at the default styles; usually used by the experiments.; ; A new parameter Canvas.Style in etc/system.rootrc allows; to define the default style. If it is not specified, the Modern; style is used. To use the old default style one can set it to Classic or add. gROOT->SetStyle(""Classic"");; ; to your scripts. We seek feedback on improving the Modern style.; Please leave comments in the forum.; ; The following table shows the two plots hpx->Draw() and hpxpy->Draw(""colz""); in the ""Classic"" and ""Modern"" styles.; . Classic Style; Modern Style. An other example:; ; Classic style:. Modern style:. ACLiC. ACLiC now passes the macro __ACLIC__ to both the rootcint and compiler phases. TWinNTSystem. Fix 64-bit compa",MatchSource.DOCS,core/doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html:4570,Modifiability,config,configurations,4570,"ported on the forum.; Prevent short timers (e.g. 10ms) to keep looping in the DispatchOneEvent() infinite loop.; Better stdout/stderr redirection (it was impossible to restore stdout using freopen on Windows 7, leaving the console as a zombie...); Make sure the stdout/stderr redirection works also in the case there is no console (i.e. in stand-alone applications).; Make sure the file descriptors are valid before using them.; The shortcuts are now working on Windows. Building with CMake. ROOT can now be build using the CMake build system (version 2.8). ; The initial supported platforms are Linux(gcc), Windows (vc9), MacOSX(gcc). The installed libraries and executables should be compatible to the standard build of ROOT.  CMake generates native makefiles and workspaces (i.e. Xcode, Eclipse, Visual Studio) that can be used in the; compiler environment of your choice. The main difference with respect; the Module.mk build is that the build is done out of the source tree,; which allows several build configurations in parallel (debug,; non-debug, optional components, etc.).  The main advantage; with respect the standard build system is that for the Windows platform; it does not require the installaton of CygWin.; Here are the basic instructions: . mkdir <builddir>   # create a empty directory in which CMake will put temporary and binary files; cd <builddir>; cmake [options] <rootsources> # by default it will generate a Makefile (or NMake file on Windows); make [options] # you can use any standard make options (e.g. -jN); make install # installation to the source tree by default, use CMAKE_INSTALL_PREFIX to change it. The CMake options and parameters can be viewed using the ccmake utility (cmake-gui for Windows). Here is a quick summary of them:. -DCMAKE_INSTALL_PREFIX=<installdir> # installation prefix; -Dxxxx=ON -Dyyyy=OFF # Optional ROOT components (e.g. tmva, mathcode, gdml, etc.); -DGIF_INCLUDE_DIR=/usr/include # Specify locations for external libraries and packages; -DG",MatchSource.DOCS,core/doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html:167,Performance,Optimiz,Optimization,167,". Core; TString. Reimplementation of the internals of TString to not use reference counting and; copy on write, but to use a more modern and thread safe Short String; Optimization (SSO) technique. Using SSO short strings (<15 on 64-bit and; <11 on 32-bit) are contained in the TString internal data structure; without the need for mallocing the required space. TObject. In TObject::ls, add support for the option 'noaddr' which ; prevents the printing of the address of the object. This; is useful in particular in roottest. Use this in hadd; and TFileMerger. TROOT. New routine CloseFiles used automatically shortly before termination to ; insure closing of files and sockets before the unload of any library.; New collection 'ClosedObjects' holding pointers to TFile or TSocket that; have been closed but not deleted it. In the case of TSocket, they are added only; if they are closed by the CloseFiles.; Add a Close member function to TProofMgr since it is added to the list of socket.; Migrate the closing of files from various to a single place (T*System::Exit).; Fill in the implementation of TROOT::FindObjectAnyFile.; Mark TROOT as TObject::kInvalidObject as soon as its destructor starts,; in order to be able to veto some action later on (like autoloading). TSystem. Better handle the cases where the information in the rootmap file is (almost) empty. ; Avoid infinite loop if one of the dependent library is missing. Meta. Add new fast accessors to Merge routines (See the I/O package for more details.; Improve error message in case a schema evolution rule can not be loaded when the library is loaded; (from the generic 'it conflicts with one of the other rules' to 'the target member ... is unknown'.; Add the ability to explicitly forbid (or allow) the splitting of a class; (TClass::SetSplit ) so that user can inforce the use of a custom streamer in all possible split cases.; Improve the performance of TProcessUUID::AddUUID by reintroducing the THashList.; This significanly improve",MatchSource.DOCS,core/doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html:1580,Performance,load,loaded,1580,"ly shortly before termination to ; insure closing of files and sockets before the unload of any library.; New collection 'ClosedObjects' holding pointers to TFile or TSocket that; have been closed but not deleted it. In the case of TSocket, they are added only; if they are closed by the CloseFiles.; Add a Close member function to TProofMgr since it is added to the list of socket.; Migrate the closing of files from various to a single place (T*System::Exit).; Fill in the implementation of TROOT::FindObjectAnyFile.; Mark TROOT as TObject::kInvalidObject as soon as its destructor starts,; in order to be able to veto some action later on (like autoloading). TSystem. Better handle the cases where the information in the rootmap file is (almost) empty. ; Avoid infinite loop if one of the dependent library is missing. Meta. Add new fast accessors to Merge routines (See the I/O package for more details.; Improve error message in case a schema evolution rule can not be loaded when the library is loaded; (from the generic 'it conflicts with one of the other rules' to 'the target member ... is unknown'.; Add the ability to explicitly forbid (or allow) the splitting of a class; (TClass::SetSplit ) so that user can inforce the use of a custom streamer in all possible split cases.; Improve the performance of TProcessUUID::AddUUID by reintroducing the THashList.; This significanly improve the performance of reading file with very large number of ; directories (A file with 100,000 directories was traversed in more than 8 minutes; and is now traversed in 15s) without noticeable affecting small files. TFolder. Several enhancement and clarification to TFolder::FindFullPathName. TStyle. Add the fill color attribute (SetLegendFillColor() and the font; attribute (SetLegendFont(). A new TStyle called ""Modern"" has been implemented. It can be set with:. gROOT->SetStyle(""Modern"");; ; It has very little decoration. It was made looking at the default styles; usually used by the experiments.; ; ",MatchSource.DOCS,core/doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html:1607,Performance,load,loaded,1607,"ly shortly before termination to ; insure closing of files and sockets before the unload of any library.; New collection 'ClosedObjects' holding pointers to TFile or TSocket that; have been closed but not deleted it. In the case of TSocket, they are added only; if they are closed by the CloseFiles.; Add a Close member function to TProofMgr since it is added to the list of socket.; Migrate the closing of files from various to a single place (T*System::Exit).; Fill in the implementation of TROOT::FindObjectAnyFile.; Mark TROOT as TObject::kInvalidObject as soon as its destructor starts,; in order to be able to veto some action later on (like autoloading). TSystem. Better handle the cases where the information in the rootmap file is (almost) empty. ; Avoid infinite loop if one of the dependent library is missing. Meta. Add new fast accessors to Merge routines (See the I/O package for more details.; Improve error message in case a schema evolution rule can not be loaded when the library is loaded; (from the generic 'it conflicts with one of the other rules' to 'the target member ... is unknown'.; Add the ability to explicitly forbid (or allow) the splitting of a class; (TClass::SetSplit ) so that user can inforce the use of a custom streamer in all possible split cases.; Improve the performance of TProcessUUID::AddUUID by reintroducing the THashList.; This significanly improve the performance of reading file with very large number of ; directories (A file with 100,000 directories was traversed in more than 8 minutes; and is now traversed in 15s) without noticeable affecting small files. TFolder. Several enhancement and clarification to TFolder::FindFullPathName. TStyle. Add the fill color attribute (SetLegendFillColor() and the font; attribute (SetLegendFont(). A new TStyle called ""Modern"" has been implemented. It can be set with:. gROOT->SetStyle(""Modern"");; ; It has very little decoration. It was made looking at the default styles; usually used by the experiments.; ; ",MatchSource.DOCS,core/doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html:1906,Performance,perform,performance,1906,"n to TProofMgr since it is added to the list of socket.; Migrate the closing of files from various to a single place (T*System::Exit).; Fill in the implementation of TROOT::FindObjectAnyFile.; Mark TROOT as TObject::kInvalidObject as soon as its destructor starts,; in order to be able to veto some action later on (like autoloading). TSystem. Better handle the cases where the information in the rootmap file is (almost) empty. ; Avoid infinite loop if one of the dependent library is missing. Meta. Add new fast accessors to Merge routines (See the I/O package for more details.; Improve error message in case a schema evolution rule can not be loaded when the library is loaded; (from the generic 'it conflicts with one of the other rules' to 'the target member ... is unknown'.; Add the ability to explicitly forbid (or allow) the splitting of a class; (TClass::SetSplit ) so that user can inforce the use of a custom streamer in all possible split cases.; Improve the performance of TProcessUUID::AddUUID by reintroducing the THashList.; This significanly improve the performance of reading file with very large number of ; directories (A file with 100,000 directories was traversed in more than 8 minutes; and is now traversed in 15s) without noticeable affecting small files. TFolder. Several enhancement and clarification to TFolder::FindFullPathName. TStyle. Add the fill color attribute (SetLegendFillColor() and the font; attribute (SetLegendFont(). A new TStyle called ""Modern"" has been implemented. It can be set with:. gROOT->SetStyle(""Modern"");; ; It has very little decoration. It was made looking at the default styles; usually used by the experiments.; ; A new parameter Canvas.Style in etc/system.rootrc allows; to define the default style. If it is not specified, the Modern; style is used. To use the old default style one can set it to Classic or add. gROOT->SetStyle(""Classic"");; ; to your scripts. We seek feedback on improving the Modern style.; Please leave comments in the ",MatchSource.DOCS,core/doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html:2006,Performance,perform,performance,2006,"n of TROOT::FindObjectAnyFile.; Mark TROOT as TObject::kInvalidObject as soon as its destructor starts,; in order to be able to veto some action later on (like autoloading). TSystem. Better handle the cases where the information in the rootmap file is (almost) empty. ; Avoid infinite loop if one of the dependent library is missing. Meta. Add new fast accessors to Merge routines (See the I/O package for more details.; Improve error message in case a schema evolution rule can not be loaded when the library is loaded; (from the generic 'it conflicts with one of the other rules' to 'the target member ... is unknown'.; Add the ability to explicitly forbid (or allow) the splitting of a class; (TClass::SetSplit ) so that user can inforce the use of a custom streamer in all possible split cases.; Improve the performance of TProcessUUID::AddUUID by reintroducing the THashList.; This significanly improve the performance of reading file with very large number of ; directories (A file with 100,000 directories was traversed in more than 8 minutes; and is now traversed in 15s) without noticeable affecting small files. TFolder. Several enhancement and clarification to TFolder::FindFullPathName. TStyle. Add the fill color attribute (SetLegendFillColor() and the font; attribute (SetLegendFont(). A new TStyle called ""Modern"" has been implemented. It can be set with:. gROOT->SetStyle(""Modern"");; ; It has very little decoration. It was made looking at the default styles; usually used by the experiments.; ; A new parameter Canvas.Style in etc/system.rootrc allows; to define the default style. If it is not specified, the Modern; style is used. To use the old default style one can set it to Classic or add. gROOT->SetStyle(""Classic"");; ; to your scripts. We seek feedback on improving the Modern style.; Please leave comments in the forum.; ; The following table shows the two plots hpx->Draw() and hpxpy->Draw(""colz""); in the ""Classic"" and ""Modern"" styles.; . Classic Style; Modern Style. An ot",MatchSource.DOCS,core/doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html:148,Safety,safe,safe,148,". Core; TString. Reimplementation of the internals of TString to not use reference counting and; copy on write, but to use a more modern and thread safe Short String; Optimization (SSO) technique. Using SSO short strings (<15 on 64-bit and; <11 on 32-bit) are contained in the TString internal data structure; without the need for mallocing the required space. TObject. In TObject::ls, add support for the option 'noaddr' which ; prevents the printing of the address of the object. This; is useful in particular in roottest. Use this in hadd; and TFileMerger. TROOT. New routine CloseFiles used automatically shortly before termination to ; insure closing of files and sockets before the unload of any library.; New collection 'ClosedObjects' holding pointers to TFile or TSocket that; have been closed but not deleted it. In the case of TSocket, they are added only; if they are closed by the CloseFiles.; Add a Close member function to TProofMgr since it is added to the list of socket.; Migrate the closing of files from various to a single place (T*System::Exit).; Fill in the implementation of TROOT::FindObjectAnyFile.; Mark TROOT as TObject::kInvalidObject as soon as its destructor starts,; in order to be able to veto some action later on (like autoloading). TSystem. Better handle the cases where the information in the rootmap file is (almost) empty. ; Avoid infinite loop if one of the dependent library is missing. Meta. Add new fast accessors to Merge routines (See the I/O package for more details.; Improve error message in case a schema evolution rule can not be loaded when the library is loaded; (from the generic 'it conflicts with one of the other rules' to 'the target member ... is unknown'.; Add the ability to explicitly forbid (or allow) the splitting of a class; (TClass::SetSplit ) so that user can inforce the use of a custom streamer in all possible split cases.; Improve the performance of TProcessUUID::AddUUID by reintroducing the THashList.; This significanly improve",MatchSource.DOCS,core/doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html:1364,Safety,Avoid,Avoid,1364,"ort for the option 'noaddr' which ; prevents the printing of the address of the object. This; is useful in particular in roottest. Use this in hadd; and TFileMerger. TROOT. New routine CloseFiles used automatically shortly before termination to ; insure closing of files and sockets before the unload of any library.; New collection 'ClosedObjects' holding pointers to TFile or TSocket that; have been closed but not deleted it. In the case of TSocket, they are added only; if they are closed by the CloseFiles.; Add a Close member function to TProofMgr since it is added to the list of socket.; Migrate the closing of files from various to a single place (T*System::Exit).; Fill in the implementation of TROOT::FindObjectAnyFile.; Mark TROOT as TObject::kInvalidObject as soon as its destructor starts,; in order to be able to veto some action later on (like autoloading). TSystem. Better handle the cases where the information in the rootmap file is (almost) empty. ; Avoid infinite loop if one of the dependent library is missing. Meta. Add new fast accessors to Merge routines (See the I/O package for more details.; Improve error message in case a schema evolution rule can not be loaded when the library is loaded; (from the generic 'it conflicts with one of the other rules' to 'the target member ... is unknown'.; Add the ability to explicitly forbid (or allow) the splitting of a class; (TClass::SetSplit ) so that user can inforce the use of a custom streamer in all possible split cases.; Improve the performance of TProcessUUID::AddUUID by reintroducing the THashList.; This significanly improve the performance of reading file with very large number of ; directories (A file with 100,000 directories was traversed in more than 8 minutes; and is now traversed in 15s) without noticeable affecting small files. TFolder. Several enhancement and clarification to TFolder::FindFullPathName. TStyle. Add the fill color attribute (SetLegendFillColor() and the font; attribute (SetLegendFont(). ",MatchSource.DOCS,core/doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html:3336,Safety,avoid,avoid,3336,"lor() and the font; attribute (SetLegendFont(). A new TStyle called ""Modern"" has been implemented. It can be set with:. gROOT->SetStyle(""Modern"");; ; It has very little decoration. It was made looking at the default styles; usually used by the experiments.; ; A new parameter Canvas.Style in etc/system.rootrc allows; to define the default style. If it is not specified, the Modern; style is used. To use the old default style one can set it to Classic or add. gROOT->SetStyle(""Classic"");; ; to your scripts. We seek feedback on improving the Modern style.; Please leave comments in the forum.; ; The following table shows the two plots hpx->Draw() and hpxpy->Draw(""colz""); in the ""Classic"" and ""Modern"" styles.; . Classic Style; Modern Style. An other example:; ; Classic style:. Modern style:. ACLiC. ACLiC now passes the macro __ACLIC__ to both the rootcint and compiler phases. TWinNTSystem. Fix 64-bit compatibility issues (__asm keyword is not allowed).; Try (as much as possible) to avoid the disturbing ""There is no disk in the drive. Please insert a disk into drive \Device\..."" popup message box when calling AccessPathName() on removable disk drives with no media installed. This should fix the problem reported on the forum.; Prevent short timers (e.g. 10ms) to keep looping in the DispatchOneEvent() infinite loop.; Better stdout/stderr redirection (it was impossible to restore stdout using freopen on Windows 7, leaving the console as a zombie...); Make sure the stdout/stderr redirection works also in the case there is no console (i.e. in stand-alone applications).; Make sure the file descriptors are valid before using them.; The shortcuts are now working on Windows. Building with CMake. ROOT can now be build using the CMake build system (version 2.8). ; The initial supported platforms are Linux(gcc), Windows (vc9), MacOSX(gcc). The installed libraries and executables should be compatible to the standard build of ROOT.  CMake generates native makefiles and workspaces (i.e. Xc",MatchSource.DOCS,core/doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html:1447,Security,access,accessors,1447," object. This; is useful in particular in roottest. Use this in hadd; and TFileMerger. TROOT. New routine CloseFiles used automatically shortly before termination to ; insure closing of files and sockets before the unload of any library.; New collection 'ClosedObjects' holding pointers to TFile or TSocket that; have been closed but not deleted it. In the case of TSocket, they are added only; if they are closed by the CloseFiles.; Add a Close member function to TProofMgr since it is added to the list of socket.; Migrate the closing of files from various to a single place (T*System::Exit).; Fill in the implementation of TROOT::FindObjectAnyFile.; Mark TROOT as TObject::kInvalidObject as soon as its destructor starts,; in order to be able to veto some action later on (like autoloading). TSystem. Better handle the cases where the information in the rootmap file is (almost) empty. ; Avoid infinite loop if one of the dependent library is missing. Meta. Add new fast accessors to Merge routines (See the I/O package for more details.; Improve error message in case a schema evolution rule can not be loaded when the library is loaded; (from the generic 'it conflicts with one of the other rules' to 'the target member ... is unknown'.; Add the ability to explicitly forbid (or allow) the splitting of a class; (TClass::SetSplit ) so that user can inforce the use of a custom streamer in all possible split cases.; Improve the performance of TProcessUUID::AddUUID by reintroducing the THashList.; This significanly improve the performance of reading file with very large number of ; directories (A file with 100,000 directories was traversed in more than 8 minutes; and is now traversed in 15s) without noticeable affecting small files. TFolder. Several enhancement and clarification to TFolder::FindFullPathName. TStyle. Add the fill color attribute (SetLegendFillColor() and the font; attribute (SetLegendFont(). A new TStyle called ""Modern"" has been implemented. It can be set with:. gROOT->",MatchSource.DOCS,core/doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html:3465,Security,Access,AccessPathName,3465,"(""Modern"");; ; It has very little decoration. It was made looking at the default styles; usually used by the experiments.; ; A new parameter Canvas.Style in etc/system.rootrc allows; to define the default style. If it is not specified, the Modern; style is used. To use the old default style one can set it to Classic or add. gROOT->SetStyle(""Classic"");; ; to your scripts. We seek feedback on improving the Modern style.; Please leave comments in the forum.; ; The following table shows the two plots hpx->Draw() and hpxpy->Draw(""colz""); in the ""Classic"" and ""Modern"" styles.; . Classic Style; Modern Style. An other example:; ; Classic style:. Modern style:. ACLiC. ACLiC now passes the macro __ACLIC__ to both the rootcint and compiler phases. TWinNTSystem. Fix 64-bit compatibility issues (__asm keyword is not allowed).; Try (as much as possible) to avoid the disturbing ""There is no disk in the drive. Please insert a disk into drive \Device\..."" popup message box when calling AccessPathName() on removable disk drives with no media installed. This should fix the problem reported on the forum.; Prevent short timers (e.g. 10ms) to keep looping in the DispatchOneEvent() infinite loop.; Better stdout/stderr redirection (it was impossible to restore stdout using freopen on Windows 7, leaving the console as a zombie...); Make sure the stdout/stderr redirection works also in the case there is no console (i.e. in stand-alone applications).; Make sure the file descriptors are valid before using them.; The shortcuts are now working on Windows. Building with CMake. ROOT can now be build using the CMake build system (version 2.8). ; The initial supported platforms are Linux(gcc), Windows (vc9), MacOSX(gcc). The installed libraries and executables should be compatible to the standard build of ROOT.  CMake generates native makefiles and workspaces (i.e. Xcode, Eclipse, Visual Studio) that can be used in the; compiler environment of your choice. The main difference with respect; the Module",MatchSource.DOCS,core/doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html:2863,Usability,feedback,feedback,2863,"e split cases.; Improve the performance of TProcessUUID::AddUUID by reintroducing the THashList.; This significanly improve the performance of reading file with very large number of ; directories (A file with 100,000 directories was traversed in more than 8 minutes; and is now traversed in 15s) without noticeable affecting small files. TFolder. Several enhancement and clarification to TFolder::FindFullPathName. TStyle. Add the fill color attribute (SetLegendFillColor() and the font; attribute (SetLegendFont(). A new TStyle called ""Modern"" has been implemented. It can be set with:. gROOT->SetStyle(""Modern"");; ; It has very little decoration. It was made looking at the default styles; usually used by the experiments.; ; A new parameter Canvas.Style in etc/system.rootrc allows; to define the default style. If it is not specified, the Modern; style is used. To use the old default style one can set it to Classic or add. gROOT->SetStyle(""Classic"");; ; to your scripts. We seek feedback on improving the Modern style.; Please leave comments in the forum.; ; The following table shows the two plots hpx->Draw() and hpxpy->Draw(""colz""); in the ""Classic"" and ""Modern"" styles.; . Classic Style; Modern Style. An other example:; ; Classic style:. Modern style:. ACLiC. ACLiC now passes the macro __ACLIC__ to both the rootcint and compiler phases. TWinNTSystem. Fix 64-bit compatibility issues (__asm keyword is not allowed).; Try (as much as possible) to avoid the disturbing ""There is no disk in the drive. Please insert a disk into drive \Device\..."" popup message box when calling AccessPathName() on removable disk drives with no media installed. This should fix the problem reported on the forum.; Prevent short timers (e.g. 10ms) to keep looping in the DispatchOneEvent() infinite loop.; Better stdout/stderr redirection (it was impossible to restore stdout using freopen on Windows 7, leaving the console as a zombie...); Make sure the stdout/stderr redirection works also in the case there",MatchSource.DOCS,core/doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html:504,Availability,error,error,504,". Build System; MacOS X. On MacOS X move to a more secure way of building. We will now always use; the --enable-explicitlink ./configure option which will cause a shared lib; or executable to be linked with all its dependent libraries. The OSX linker; is quite good and processing this extended set of libraries for each link; does cost only 3s extra time for all 100+ shared libs (13s instead of 10s).; Not much for the extra security. In addition we went back to the default; linker option ""-undefined error"", so you will get an error if symbols; are unresolved. Shared libs are also linked with the option; ""-Wl,-dead_strip_dylibs"" which tells the linker to remove any shared lib; which is not used to resolve any symbols (this should; solve the long standing issue of ACliC linking all previously created; shared libs even when not needed). Linux. Make --enable-explictlink the default on linux too (was already the case for:; macosx, freebsd, openbsd, aix and win32). This adds some extra time to; the link stage, which can be recuperated by using the newer, much faster,; gold linker. In addition we added the linker option ""-Wl,--no-undefined"",; so you will get an error if symbols are unresolved.; Explicit linking is required by newer distributions, like Ubuntu 11.10,; that require all dependent shared libs to be specified when linking. They; also have default options set to dead strip shared libs that don't resolve; any symbols (equivalent to the MacOS X build changes described above). Core Libraries; TClonesArray. Introduce TClonesArray::ConstructedAt which; always returns an already constructed object. If the slot is being used for the; first time, it calls the default constructor otherwise it returns the object as; is (unless a string is passed as the 2nd argument to the function in which case,; it also calls Clear(second_argument) on the object).; This allows to replace code like:. for (int i = 0; i < ev->Ntracks; i++) {; new(a[i]) TTrack(x,y,z,...);; ...; ...; }; ...; a.D",MatchSource.DOCS,core/doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html:531,Availability,error,error,531,". Build System; MacOS X. On MacOS X move to a more secure way of building. We will now always use; the --enable-explicitlink ./configure option which will cause a shared lib; or executable to be linked with all its dependent libraries. The OSX linker; is quite good and processing this extended set of libraries for each link; does cost only 3s extra time for all 100+ shared libs (13s instead of 10s).; Not much for the extra security. In addition we went back to the default; linker option ""-undefined error"", so you will get an error if symbols; are unresolved. Shared libs are also linked with the option; ""-Wl,-dead_strip_dylibs"" which tells the linker to remove any shared lib; which is not used to resolve any symbols (this should; solve the long standing issue of ACliC linking all previously created; shared libs even when not needed). Linux. Make --enable-explictlink the default on linux too (was already the case for:; macosx, freebsd, openbsd, aix and win32). This adds some extra time to; the link stage, which can be recuperated by using the newer, much faster,; gold linker. In addition we added the linker option ""-Wl,--no-undefined"",; so you will get an error if symbols are unresolved.; Explicit linking is required by newer distributions, like Ubuntu 11.10,; that require all dependent shared libs to be specified when linking. They; also have default options set to dead strip shared libs that don't resolve; any symbols (equivalent to the MacOS X build changes described above). Core Libraries; TClonesArray. Introduce TClonesArray::ConstructedAt which; always returns an already constructed object. If the slot is being used for the; first time, it calls the default constructor otherwise it returns the object as; is (unless a string is passed as the 2nd argument to the function in which case,; it also calls Clear(second_argument) on the object).; This allows to replace code like:. for (int i = 0; i < ev->Ntracks; i++) {; new(a[i]) TTrack(x,y,z,...);; ...; ...; }; ...; a.D",MatchSource.DOCS,core/doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html:1172,Availability,error,error,1172,"ch will cause a shared lib; or executable to be linked with all its dependent libraries. The OSX linker; is quite good and processing this extended set of libraries for each link; does cost only 3s extra time for all 100+ shared libs (13s instead of 10s).; Not much for the extra security. In addition we went back to the default; linker option ""-undefined error"", so you will get an error if symbols; are unresolved. Shared libs are also linked with the option; ""-Wl,-dead_strip_dylibs"" which tells the linker to remove any shared lib; which is not used to resolve any symbols (this should; solve the long standing issue of ACliC linking all previously created; shared libs even when not needed). Linux. Make --enable-explictlink the default on linux too (was already the case for:; macosx, freebsd, openbsd, aix and win32). This adds some extra time to; the link stage, which can be recuperated by using the newer, much faster,; gold linker. In addition we added the linker option ""-Wl,--no-undefined"",; so you will get an error if symbols are unresolved.; Explicit linking is required by newer distributions, like Ubuntu 11.10,; that require all dependent shared libs to be specified when linking. They; also have default options set to dead strip shared libs that don't resolve; any symbols (equivalent to the MacOS X build changes described above). Core Libraries; TClonesArray. Introduce TClonesArray::ConstructedAt which; always returns an already constructed object. If the slot is being used for the; first time, it calls the default constructor otherwise it returns the object as; is (unless a string is passed as the 2nd argument to the function in which case,; it also calls Clear(second_argument) on the object).; This allows to replace code like:. for (int i = 0; i < ev->Ntracks; i++) {; new(a[i]) TTrack(x,y,z,...);; ...; ...; }; ...; a.Delete(); // or a.Clear(""C""). with the simpler and more efficient:. for (int i = 0; i < ev->Ntracks; i++) {; TTrack *track = (TTrack*)a.Constructed",MatchSource.DOCS,core/doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html:2278,Deployability,update,update,2278," They; also have default options set to dead strip shared libs that don't resolve; any symbols (equivalent to the MacOS X build changes described above). Core Libraries; TClonesArray. Introduce TClonesArray::ConstructedAt which; always returns an already constructed object. If the slot is being used for the; first time, it calls the default constructor otherwise it returns the object as; is (unless a string is passed as the 2nd argument to the function in which case,; it also calls Clear(second_argument) on the object).; This allows to replace code like:. for (int i = 0; i < ev->Ntracks; i++) {; new(a[i]) TTrack(x,y,z,...);; ...; ...; }; ...; a.Delete(); // or a.Clear(""C""). with the simpler and more efficient:. for (int i = 0; i < ev->Ntracks; i++) {; TTrack *track = (TTrack*)a.ConstructedAt(i);; track->Set(x,y,z,....);; ...; ...; }; ...; a.Clear();. even in case where the TTrack class allocates memory. TClonesArray: update ExpandCreateFast to also reset the non-used slots; so that calling Clear (which does too much) is no longer necessary; when using ExpandCreateFast. New Thread Pool class. A first version of TThreadPool class has been introduced.; This class implements a Thread Pool pattern.; So far it supports only one type of queue - FIFO. Thread library. Reduces risk of internal dead lock by using a private internal lock to protect the internals of TThread, rather than using TThread::Lock. New header TThreadSlots.h to centralize and formalize the use of the TThread local memory slots amongst the ROOT packages. Global Variables. The global values gPad, gVirtualX, gInterpreter, gDirectory and gFile; are now all accessed via a static function of their respective class. The; access is made transparent via a CPP macro.; The access is now also made transparent from the CINT and python prompt.; gPad, gVirtualX and gInterpreter are now accessible even when their value; is zero and they now properly support tab completion.; See the important note in the I/O section on gD",MatchSource.DOCS,core/doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html:2056,Energy Efficiency,efficient,efficient,2056,"sing the newer, much faster,; gold linker. In addition we added the linker option ""-Wl,--no-undefined"",; so you will get an error if symbols are unresolved.; Explicit linking is required by newer distributions, like Ubuntu 11.10,; that require all dependent shared libs to be specified when linking. They; also have default options set to dead strip shared libs that don't resolve; any symbols (equivalent to the MacOS X build changes described above). Core Libraries; TClonesArray. Introduce TClonesArray::ConstructedAt which; always returns an already constructed object. If the slot is being used for the; first time, it calls the default constructor otherwise it returns the object as; is (unless a string is passed as the 2nd argument to the function in which case,; it also calls Clear(second_argument) on the object).; This allows to replace code like:. for (int i = 0; i < ev->Ntracks; i++) {; new(a[i]) TTrack(x,y,z,...);; ...; ...; }; ...; a.Delete(); // or a.Clear(""C""). with the simpler and more efficient:. for (int i = 0; i < ev->Ntracks; i++) {; TTrack *track = (TTrack*)a.ConstructedAt(i);; track->Set(x,y,z,....);; ...; ...; }; ...; a.Clear();. even in case where the TTrack class allocates memory. TClonesArray: update ExpandCreateFast to also reset the non-used slots; so that calling Clear (which does too much) is no longer necessary; when using ExpandCreateFast. New Thread Pool class. A first version of TThreadPool class has been introduced.; This class implements a Thread Pool pattern.; So far it supports only one type of queue - FIFO. Thread library. Reduces risk of internal dead lock by using a private internal lock to protect the internals of TThread, rather than using TThread::Lock. New header TThreadSlots.h to centralize and formalize the use of the TThread local memory slots amongst the ROOT packages. Global Variables. The global values gPad, gVirtualX, gInterpreter, gDirectory and gFile; are now all accessed via a static function of their respective class. T",MatchSource.DOCS,core/doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html:2246,Energy Efficiency,allocate,allocates,2246,"y newer distributions, like Ubuntu 11.10,; that require all dependent shared libs to be specified when linking. They; also have default options set to dead strip shared libs that don't resolve; any symbols (equivalent to the MacOS X build changes described above). Core Libraries; TClonesArray. Introduce TClonesArray::ConstructedAt which; always returns an already constructed object. If the slot is being used for the; first time, it calls the default constructor otherwise it returns the object as; is (unless a string is passed as the 2nd argument to the function in which case,; it also calls Clear(second_argument) on the object).; This allows to replace code like:. for (int i = 0; i < ev->Ntracks; i++) {; new(a[i]) TTrack(x,y,z,...);; ...; ...; }; ...; a.Delete(); // or a.Clear(""C""). with the simpler and more efficient:. for (int i = 0; i < ev->Ntracks; i++) {; TTrack *track = (TTrack*)a.ConstructedAt(i);; track->Set(x,y,z,....);; ...; ...; }; ...; a.Clear();. even in case where the TTrack class allocates memory. TClonesArray: update ExpandCreateFast to also reset the non-used slots; so that calling Clear (which does too much) is no longer necessary; when using ExpandCreateFast. New Thread Pool class. A first version of TThreadPool class has been introduced.; This class implements a Thread Pool pattern.; So far it supports only one type of queue - FIFO. Thread library. Reduces risk of internal dead lock by using a private internal lock to protect the internals of TThread, rather than using TThread::Lock. New header TThreadSlots.h to centralize and formalize the use of the TThread local memory slots amongst the ROOT packages. Global Variables. The global values gPad, gVirtualX, gInterpreter, gDirectory and gFile; are now all accessed via a static function of their respective class. The; access is made transparent via a CPP macro.; The access is now also made transparent from the CINT and python prompt.; gPad, gVirtualX and gInterpreter are now accessible even when the",MatchSource.DOCS,core/doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html:2627,Energy Efficiency,Reduce,Reduces,2627,"ructor otherwise it returns the object as; is (unless a string is passed as the 2nd argument to the function in which case,; it also calls Clear(second_argument) on the object).; This allows to replace code like:. for (int i = 0; i < ev->Ntracks; i++) {; new(a[i]) TTrack(x,y,z,...);; ...; ...; }; ...; a.Delete(); // or a.Clear(""C""). with the simpler and more efficient:. for (int i = 0; i < ev->Ntracks; i++) {; TTrack *track = (TTrack*)a.ConstructedAt(i);; track->Set(x,y,z,....);; ...; ...; }; ...; a.Clear();. even in case where the TTrack class allocates memory. TClonesArray: update ExpandCreateFast to also reset the non-used slots; so that calling Clear (which does too much) is no longer necessary; when using ExpandCreateFast. New Thread Pool class. A first version of TThreadPool class has been introduced.; This class implements a Thread Pool pattern.; So far it supports only one type of queue - FIFO. Thread library. Reduces risk of internal dead lock by using a private internal lock to protect the internals of TThread, rather than using TThread::Lock. New header TThreadSlots.h to centralize and formalize the use of the TThread local memory slots amongst the ROOT packages. Global Variables. The global values gPad, gVirtualX, gInterpreter, gDirectory and gFile; are now all accessed via a static function of their respective class. The; access is made transparent via a CPP macro.; The access is now also made transparent from the CINT and python prompt.; gPad, gVirtualX and gInterpreter are now accessible even when their value; is zero and they now properly support tab completion.; See the important note in the I/O section on gDirectory and gFile which; are now thread local. Meta. The new interface TDictionary::GetDictionary(const char*) offers a; single entry point to query the type based on its name, conveniently combining; TDataType and TClass queries. It does name normalization (removing std etc). Add the ability to explicitly forbid (or allow) the splitting of a c",MatchSource.DOCS,core/doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html:215,Integrability,depend,dependent,215,". Build System; MacOS X. On MacOS X move to a more secure way of building. We will now always use; the --enable-explicitlink ./configure option which will cause a shared lib; or executable to be linked with all its dependent libraries. The OSX linker; is quite good and processing this extended set of libraries for each link; does cost only 3s extra time for all 100+ shared libs (13s instead of 10s).; Not much for the extra security. In addition we went back to the default; linker option ""-undefined error"", so you will get an error if symbols; are unresolved. Shared libs are also linked with the option; ""-Wl,-dead_strip_dylibs"" which tells the linker to remove any shared lib; which is not used to resolve any symbols (this should; solve the long standing issue of ACliC linking all previously created; shared libs even when not needed). Linux. Make --enable-explictlink the default on linux too (was already the case for:; macosx, freebsd, openbsd, aix and win32). This adds some extra time to; the link stage, which can be recuperated by using the newer, much faster,; gold linker. In addition we added the linker option ""-Wl,--no-undefined"",; so you will get an error if symbols are unresolved.; Explicit linking is required by newer distributions, like Ubuntu 11.10,; that require all dependent shared libs to be specified when linking. They; also have default options set to dead strip shared libs that don't resolve; any symbols (equivalent to the MacOS X build changes described above). Core Libraries; TClonesArray. Introduce TClonesArray::ConstructedAt which; always returns an already constructed object. If the slot is being used for the; first time, it calls the default constructor otherwise it returns the object as; is (unless a string is passed as the 2nd argument to the function in which case,; it also calls Clear(second_argument) on the object).; This allows to replace code like:. for (int i = 0; i < ev->Ntracks; i++) {; new(a[i]) TTrack(x,y,z,...);; ...; ...; }; ...; a.D",MatchSource.DOCS,core/doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html:1296,Integrability,depend,dependent,1296,"s for each link; does cost only 3s extra time for all 100+ shared libs (13s instead of 10s).; Not much for the extra security. In addition we went back to the default; linker option ""-undefined error"", so you will get an error if symbols; are unresolved. Shared libs are also linked with the option; ""-Wl,-dead_strip_dylibs"" which tells the linker to remove any shared lib; which is not used to resolve any symbols (this should; solve the long standing issue of ACliC linking all previously created; shared libs even when not needed). Linux. Make --enable-explictlink the default on linux too (was already the case for:; macosx, freebsd, openbsd, aix and win32). This adds some extra time to; the link stage, which can be recuperated by using the newer, much faster,; gold linker. In addition we added the linker option ""-Wl,--no-undefined"",; so you will get an error if symbols are unresolved.; Explicit linking is required by newer distributions, like Ubuntu 11.10,; that require all dependent shared libs to be specified when linking. They; also have default options set to dead strip shared libs that don't resolve; any symbols (equivalent to the MacOS X build changes described above). Core Libraries; TClonesArray. Introduce TClonesArray::ConstructedAt which; always returns an already constructed object. If the slot is being used for the; first time, it calls the default constructor otherwise it returns the object as; is (unless a string is passed as the 2nd argument to the function in which case,; it also calls Clear(second_argument) on the object).; This allows to replace code like:. for (int i = 0; i < ev->Ntracks; i++) {; new(a[i]) TTrack(x,y,z,...);; ...; ...; }; ...; a.Delete(); // or a.Clear(""C""). with the simpler and more efficient:. for (int i = 0; i < ev->Ntracks; i++) {; TTrack *track = (TTrack*)a.ConstructedAt(i);; track->Set(x,y,z,....);; ...; ...; }; ...; a.Clear();. even in case where the TTrack class allocates memory. TClonesArray: update ExpandCreateFast to also r",MatchSource.DOCS,core/doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html:3410,Integrability,interface,interface,3410,"h) is no longer necessary; when using ExpandCreateFast. New Thread Pool class. A first version of TThreadPool class has been introduced.; This class implements a Thread Pool pattern.; So far it supports only one type of queue - FIFO. Thread library. Reduces risk of internal dead lock by using a private internal lock to protect the internals of TThread, rather than using TThread::Lock. New header TThreadSlots.h to centralize and formalize the use of the TThread local memory slots amongst the ROOT packages. Global Variables. The global values gPad, gVirtualX, gInterpreter, gDirectory and gFile; are now all accessed via a static function of their respective class. The; access is made transparent via a CPP macro.; The access is now also made transparent from the CINT and python prompt.; gPad, gVirtualX and gInterpreter are now accessible even when their value; is zero and they now properly support tab completion.; See the important note in the I/O section on gDirectory and gFile which; are now thread local. Meta. The new interface TDictionary::GetDictionary(const char*) offers a; single entry point to query the type based on its name, conveniently combining; TDataType and TClass queries. It does name normalization (removing std etc). Add the ability to explicitly forbid (or allow) the splitting of a class; (TClass::SetSplit) so that user can inforce the use of a custom streamer in all possible split cases. Resolve several issues with the creation of StreamerInfo for abstract classes. When looking for the value corresponding to an enum type, skip global that are not enums. (This improves the speed of TFile::Open by 60%). TStyle. The Modern style has now a transparent background for the histogram title. Misc. In the root executable, auto-detect command line arguments that are local root files even if their name does not end with "".root"". If home directory is not correctly set in pw file or user is not known, use the HOME shell variable to find the desired home directory. ",MatchSource.DOCS,core/doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html:127,Modifiability,config,configure,127,". Build System; MacOS X. On MacOS X move to a more secure way of building. We will now always use; the --enable-explicitlink ./configure option which will cause a shared lib; or executable to be linked with all its dependent libraries. The OSX linker; is quite good and processing this extended set of libraries for each link; does cost only 3s extra time for all 100+ shared libs (13s instead of 10s).; Not much for the extra security. In addition we went back to the default; linker option ""-undefined error"", so you will get an error if symbols; are unresolved. Shared libs are also linked with the option; ""-Wl,-dead_strip_dylibs"" which tells the linker to remove any shared lib; which is not used to resolve any symbols (this should; solve the long standing issue of ACliC linking all previously created; shared libs even when not needed). Linux. Make --enable-explictlink the default on linux too (was already the case for:; macosx, freebsd, openbsd, aix and win32). This adds some extra time to; the link stage, which can be recuperated by using the newer, much faster,; gold linker. In addition we added the linker option ""-Wl,--no-undefined"",; so you will get an error if symbols are unresolved.; Explicit linking is required by newer distributions, like Ubuntu 11.10,; that require all dependent shared libs to be specified when linking. They; also have default options set to dead strip shared libs that don't resolve; any symbols (equivalent to the MacOS X build changes described above). Core Libraries; TClonesArray. Introduce TClonesArray::ConstructedAt which; always returns an already constructed object. If the slot is being used for the; first time, it calls the default constructor otherwise it returns the object as; is (unless a string is passed as the 2nd argument to the function in which case,; it also calls Clear(second_argument) on the object).; This allows to replace code like:. for (int i = 0; i < ev->Ntracks; i++) {; new(a[i]) TTrack(x,y,z,...);; ...; ...; }; ...; a.D",MatchSource.DOCS,core/doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html:286,Modifiability,extend,extended,286,". Build System; MacOS X. On MacOS X move to a more secure way of building. We will now always use; the --enable-explicitlink ./configure option which will cause a shared lib; or executable to be linked with all its dependent libraries. The OSX linker; is quite good and processing this extended set of libraries for each link; does cost only 3s extra time for all 100+ shared libs (13s instead of 10s).; Not much for the extra security. In addition we went back to the default; linker option ""-undefined error"", so you will get an error if symbols; are unresolved. Shared libs are also linked with the option; ""-Wl,-dead_strip_dylibs"" which tells the linker to remove any shared lib; which is not used to resolve any symbols (this should; solve the long standing issue of ACliC linking all previously created; shared libs even when not needed). Linux. Make --enable-explictlink the default on linux too (was already the case for:; macosx, freebsd, openbsd, aix and win32). This adds some extra time to; the link stage, which can be recuperated by using the newer, much faster,; gold linker. In addition we added the linker option ""-Wl,--no-undefined"",; so you will get an error if symbols are unresolved.; Explicit linking is required by newer distributions, like Ubuntu 11.10,; that require all dependent shared libs to be specified when linking. They; also have default options set to dead strip shared libs that don't resolve; any symbols (equivalent to the MacOS X build changes described above). Core Libraries; TClonesArray. Introduce TClonesArray::ConstructedAt which; always returns an already constructed object. If the slot is being used for the; first time, it calls the default constructor otherwise it returns the object as; is (unless a string is passed as the 2nd argument to the function in which case,; it also calls Clear(second_argument) on the object).; This allows to replace code like:. for (int i = 0; i < ev->Ntracks; i++) {; new(a[i]) TTrack(x,y,z,...);; ...; ...; }; ...; a.D",MatchSource.DOCS,core/doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html:2895,Modifiability,Variab,Variables,2895," code like:. for (int i = 0; i < ev->Ntracks; i++) {; new(a[i]) TTrack(x,y,z,...);; ...; ...; }; ...; a.Delete(); // or a.Clear(""C""). with the simpler and more efficient:. for (int i = 0; i < ev->Ntracks; i++) {; TTrack *track = (TTrack*)a.ConstructedAt(i);; track->Set(x,y,z,....);; ...; ...; }; ...; a.Clear();. even in case where the TTrack class allocates memory. TClonesArray: update ExpandCreateFast to also reset the non-used slots; so that calling Clear (which does too much) is no longer necessary; when using ExpandCreateFast. New Thread Pool class. A first version of TThreadPool class has been introduced.; This class implements a Thread Pool pattern.; So far it supports only one type of queue - FIFO. Thread library. Reduces risk of internal dead lock by using a private internal lock to protect the internals of TThread, rather than using TThread::Lock. New header TThreadSlots.h to centralize and formalize the use of the TThread local memory slots amongst the ROOT packages. Global Variables. The global values gPad, gVirtualX, gInterpreter, gDirectory and gFile; are now all accessed via a static function of their respective class. The; access is made transparent via a CPP macro.; The access is now also made transparent from the CINT and python prompt.; gPad, gVirtualX and gInterpreter are now accessible even when their value; is zero and they now properly support tab completion.; See the important note in the I/O section on gDirectory and gFile which; are now thread local. Meta. The new interface TDictionary::GetDictionary(const char*) offers a; single entry point to query the type based on its name, conveniently combining; TDataType and TClass queries. It does name normalization (removing std etc). Add the ability to explicitly forbid (or allow) the splitting of a class; (TClass::SetSplit) so that user can inforce the use of a custom streamer in all possible split cases. Resolve several issues with the creation of StreamerInfo for abstract classes. When looking f",MatchSource.DOCS,core/doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html:4332,Modifiability,variab,variable,4332,"h) is no longer necessary; when using ExpandCreateFast. New Thread Pool class. A first version of TThreadPool class has been introduced.; This class implements a Thread Pool pattern.; So far it supports only one type of queue - FIFO. Thread library. Reduces risk of internal dead lock by using a private internal lock to protect the internals of TThread, rather than using TThread::Lock. New header TThreadSlots.h to centralize and formalize the use of the TThread local memory slots amongst the ROOT packages. Global Variables. The global values gPad, gVirtualX, gInterpreter, gDirectory and gFile; are now all accessed via a static function of their respective class. The; access is made transparent via a CPP macro.; The access is now also made transparent from the CINT and python prompt.; gPad, gVirtualX and gInterpreter are now accessible even when their value; is zero and they now properly support tab completion.; See the important note in the I/O section on gDirectory and gFile which; are now thread local. Meta. The new interface TDictionary::GetDictionary(const char*) offers a; single entry point to query the type based on its name, conveniently combining; TDataType and TClass queries. It does name normalization (removing std etc). Add the ability to explicitly forbid (or allow) the splitting of a class; (TClass::SetSplit) so that user can inforce the use of a custom streamer in all possible split cases. Resolve several issues with the creation of StreamerInfo for abstract classes. When looking for the value corresponding to an enum type, skip global that are not enums. (This improves the speed of TFile::Open by 60%). TStyle. The Modern style has now a transparent background for the histogram title. Misc. In the root executable, auto-detect command line arguments that are local root files even if their name does not end with "".root"". If home directory is not correctly set in pw file or user is not known, use the HOME shell variable to find the desired home directory. ",MatchSource.DOCS,core/doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html:2597,Performance,queue,queue,2597,"eturns an already constructed object. If the slot is being used for the; first time, it calls the default constructor otherwise it returns the object as; is (unless a string is passed as the 2nd argument to the function in which case,; it also calls Clear(second_argument) on the object).; This allows to replace code like:. for (int i = 0; i < ev->Ntracks; i++) {; new(a[i]) TTrack(x,y,z,...);; ...; ...; }; ...; a.Delete(); // or a.Clear(""C""). with the simpler and more efficient:. for (int i = 0; i < ev->Ntracks; i++) {; TTrack *track = (TTrack*)a.ConstructedAt(i);; track->Set(x,y,z,....);; ...; ...; }; ...; a.Clear();. even in case where the TTrack class allocates memory. TClonesArray: update ExpandCreateFast to also reset the non-used slots; so that calling Clear (which does too much) is no longer necessary; when using ExpandCreateFast. New Thread Pool class. A first version of TThreadPool class has been introduced.; This class implements a Thread Pool pattern.; So far it supports only one type of queue - FIFO. Thread library. Reduces risk of internal dead lock by using a private internal lock to protect the internals of TThread, rather than using TThread::Lock. New header TThreadSlots.h to centralize and formalize the use of the TThread local memory slots amongst the ROOT packages. Global Variables. The global values gPad, gVirtualX, gInterpreter, gDirectory and gFile; are now all accessed via a static function of their respective class. The; access is made transparent via a CPP macro.; The access is now also made transparent from the CINT and python prompt.; gPad, gVirtualX and gInterpreter are now accessible even when their value; is zero and they now properly support tab completion.; See the important note in the I/O section on gDirectory and gFile which; are now thread local. Meta. The new interface TDictionary::GetDictionary(const char*) offers a; single entry point to query the type based on its name, conveniently combining; TDataType and TClass queries. It do",MatchSource.DOCS,core/doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html:2635,Safety,risk,risk,2635,"ructor otherwise it returns the object as; is (unless a string is passed as the 2nd argument to the function in which case,; it also calls Clear(second_argument) on the object).; This allows to replace code like:. for (int i = 0; i < ev->Ntracks; i++) {; new(a[i]) TTrack(x,y,z,...);; ...; ...; }; ...; a.Delete(); // or a.Clear(""C""). with the simpler and more efficient:. for (int i = 0; i < ev->Ntracks; i++) {; TTrack *track = (TTrack*)a.ConstructedAt(i);; track->Set(x,y,z,....);; ...; ...; }; ...; a.Clear();. even in case where the TTrack class allocates memory. TClonesArray: update ExpandCreateFast to also reset the non-used slots; so that calling Clear (which does too much) is no longer necessary; when using ExpandCreateFast. New Thread Pool class. A first version of TThreadPool class has been introduced.; This class implements a Thread Pool pattern.; So far it supports only one type of queue - FIFO. Thread library. Reduces risk of internal dead lock by using a private internal lock to protect the internals of TThread, rather than using TThread::Lock. New header TThreadSlots.h to centralize and formalize the use of the TThread local memory slots amongst the ROOT packages. Global Variables. The global values gPad, gVirtualX, gInterpreter, gDirectory and gFile; are now all accessed via a static function of their respective class. The; access is made transparent via a CPP macro.; The access is now also made transparent from the CINT and python prompt.; gPad, gVirtualX and gInterpreter are now accessible even when their value; is zero and they now properly support tab completion.; See the important note in the I/O section on gDirectory and gFile which; are now thread local. Meta. The new interface TDictionary::GetDictionary(const char*) offers a; single entry point to query the type based on its name, conveniently combining; TDataType and TClass queries. It does name normalization (removing std etc). Add the ability to explicitly forbid (or allow) the splitting of a c",MatchSource.DOCS,core/doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html:4139,Safety,detect,detect,4139,"h) is no longer necessary; when using ExpandCreateFast. New Thread Pool class. A first version of TThreadPool class has been introduced.; This class implements a Thread Pool pattern.; So far it supports only one type of queue - FIFO. Thread library. Reduces risk of internal dead lock by using a private internal lock to protect the internals of TThread, rather than using TThread::Lock. New header TThreadSlots.h to centralize and formalize the use of the TThread local memory slots amongst the ROOT packages. Global Variables. The global values gPad, gVirtualX, gInterpreter, gDirectory and gFile; are now all accessed via a static function of their respective class. The; access is made transparent via a CPP macro.; The access is now also made transparent from the CINT and python prompt.; gPad, gVirtualX and gInterpreter are now accessible even when their value; is zero and they now properly support tab completion.; See the important note in the I/O section on gDirectory and gFile which; are now thread local. Meta. The new interface TDictionary::GetDictionary(const char*) offers a; single entry point to query the type based on its name, conveniently combining; TDataType and TClass queries. It does name normalization (removing std etc). Add the ability to explicitly forbid (or allow) the splitting of a class; (TClass::SetSplit) so that user can inforce the use of a custom streamer in all possible split cases. Resolve several issues with the creation of StreamerInfo for abstract classes. When looking for the value corresponding to an enum type, skip global that are not enums. (This improves the speed of TFile::Open by 60%). TStyle. The Modern style has now a transparent background for the histogram title. Misc. In the root executable, auto-detect command line arguments that are local root files even if their name does not end with "".root"". If home directory is not correctly set in pw file or user is not known, use the HOME shell variable to find the desired home directory. ",MatchSource.DOCS,core/doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html:51,Security,secur,secure,51,". Build System; MacOS X. On MacOS X move to a more secure way of building. We will now always use; the --enable-explicitlink ./configure option which will cause a shared lib; or executable to be linked with all its dependent libraries. The OSX linker; is quite good and processing this extended set of libraries for each link; does cost only 3s extra time for all 100+ shared libs (13s instead of 10s).; Not much for the extra security. In addition we went back to the default; linker option ""-undefined error"", so you will get an error if symbols; are unresolved. Shared libs are also linked with the option; ""-Wl,-dead_strip_dylibs"" which tells the linker to remove any shared lib; which is not used to resolve any symbols (this should; solve the long standing issue of ACliC linking all previously created; shared libs even when not needed). Linux. Make --enable-explictlink the default on linux too (was already the case for:; macosx, freebsd, openbsd, aix and win32). This adds some extra time to; the link stage, which can be recuperated by using the newer, much faster,; gold linker. In addition we added the linker option ""-Wl,--no-undefined"",; so you will get an error if symbols are unresolved.; Explicit linking is required by newer distributions, like Ubuntu 11.10,; that require all dependent shared libs to be specified when linking. They; also have default options set to dead strip shared libs that don't resolve; any symbols (equivalent to the MacOS X build changes described above). Core Libraries; TClonesArray. Introduce TClonesArray::ConstructedAt which; always returns an already constructed object. If the slot is being used for the; first time, it calls the default constructor otherwise it returns the object as; is (unless a string is passed as the 2nd argument to the function in which case,; it also calls Clear(second_argument) on the object).; This allows to replace code like:. for (int i = 0; i < ev->Ntracks; i++) {; new(a[i]) TTrack(x,y,z,...);; ...; ...; }; ...; a.D",MatchSource.DOCS,core/doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html:427,Security,secur,security,427,". Build System; MacOS X. On MacOS X move to a more secure way of building. We will now always use; the --enable-explicitlink ./configure option which will cause a shared lib; or executable to be linked with all its dependent libraries. The OSX linker; is quite good and processing this extended set of libraries for each link; does cost only 3s extra time for all 100+ shared libs (13s instead of 10s).; Not much for the extra security. In addition we went back to the default; linker option ""-undefined error"", so you will get an error if symbols; are unresolved. Shared libs are also linked with the option; ""-Wl,-dead_strip_dylibs"" which tells the linker to remove any shared lib; which is not used to resolve any symbols (this should; solve the long standing issue of ACliC linking all previously created; shared libs even when not needed). Linux. Make --enable-explictlink the default on linux too (was already the case for:; macosx, freebsd, openbsd, aix and win32). This adds some extra time to; the link stage, which can be recuperated by using the newer, much faster,; gold linker. In addition we added the linker option ""-Wl,--no-undefined"",; so you will get an error if symbols are unresolved.; Explicit linking is required by newer distributions, like Ubuntu 11.10,; that require all dependent shared libs to be specified when linking. They; also have default options set to dead strip shared libs that don't resolve; any symbols (equivalent to the MacOS X build changes described above). Core Libraries; TClonesArray. Introduce TClonesArray::ConstructedAt which; always returns an already constructed object. If the slot is being used for the; first time, it calls the default constructor otherwise it returns the object as; is (unless a string is passed as the 2nd argument to the function in which case,; it also calls Clear(second_argument) on the object).; This allows to replace code like:. for (int i = 0; i < ev->Ntracks; i++) {; new(a[i]) TTrack(x,y,z,...);; ...; ...; }; ...; a.D",MatchSource.DOCS,core/doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html:2989,Security,access,accessed,2989,".);; ...; ...; }; ...; a.Delete(); // or a.Clear(""C""). with the simpler and more efficient:. for (int i = 0; i < ev->Ntracks; i++) {; TTrack *track = (TTrack*)a.ConstructedAt(i);; track->Set(x,y,z,....);; ...; ...; }; ...; a.Clear();. even in case where the TTrack class allocates memory. TClonesArray: update ExpandCreateFast to also reset the non-used slots; so that calling Clear (which does too much) is no longer necessary; when using ExpandCreateFast. New Thread Pool class. A first version of TThreadPool class has been introduced.; This class implements a Thread Pool pattern.; So far it supports only one type of queue - FIFO. Thread library. Reduces risk of internal dead lock by using a private internal lock to protect the internals of TThread, rather than using TThread::Lock. New header TThreadSlots.h to centralize and formalize the use of the TThread local memory slots amongst the ROOT packages. Global Variables. The global values gPad, gVirtualX, gInterpreter, gDirectory and gFile; are now all accessed via a static function of their respective class. The; access is made transparent via a CPP macro.; The access is now also made transparent from the CINT and python prompt.; gPad, gVirtualX and gInterpreter are now accessible even when their value; is zero and they now properly support tab completion.; See the important note in the I/O section on gDirectory and gFile which; are now thread local. Meta. The new interface TDictionary::GetDictionary(const char*) offers a; single entry point to query the type based on its name, conveniently combining; TDataType and TClass queries. It does name normalization (removing std etc). Add the ability to explicitly forbid (or allow) the splitting of a class; (TClass::SetSplit) so that user can inforce the use of a custom streamer in all possible split cases. Resolve several issues with the creation of StreamerInfo for abstract classes. When looking for the value corresponding to an enum type, skip global that are not enums. (Thi",MatchSource.DOCS,core/doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html:3052,Security,access,access,3052,"r (int i = 0; i < ev->Ntracks; i++) {; TTrack *track = (TTrack*)a.ConstructedAt(i);; track->Set(x,y,z,....);; ...; ...; }; ...; a.Clear();. even in case where the TTrack class allocates memory. TClonesArray: update ExpandCreateFast to also reset the non-used slots; so that calling Clear (which does too much) is no longer necessary; when using ExpandCreateFast. New Thread Pool class. A first version of TThreadPool class has been introduced.; This class implements a Thread Pool pattern.; So far it supports only one type of queue - FIFO. Thread library. Reduces risk of internal dead lock by using a private internal lock to protect the internals of TThread, rather than using TThread::Lock. New header TThreadSlots.h to centralize and formalize the use of the TThread local memory slots amongst the ROOT packages. Global Variables. The global values gPad, gVirtualX, gInterpreter, gDirectory and gFile; are now all accessed via a static function of their respective class. The; access is made transparent via a CPP macro.; The access is now also made transparent from the CINT and python prompt.; gPad, gVirtualX and gInterpreter are now accessible even when their value; is zero and they now properly support tab completion.; See the important note in the I/O section on gDirectory and gFile which; are now thread local. Meta. The new interface TDictionary::GetDictionary(const char*) offers a; single entry point to query the type based on its name, conveniently combining; TDataType and TClass queries. It does name normalization (removing std etc). Add the ability to explicitly forbid (or allow) the splitting of a class; (TClass::SetSplit) so that user can inforce the use of a custom streamer in all possible split cases. Resolve several issues with the creation of StreamerInfo for abstract classes. When looking for the value corresponding to an enum type, skip global that are not enums. (This improves the speed of TFile::Open by 60%). TStyle. The Modern style has now a transparent bac",MatchSource.DOCS,core/doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html:3101,Security,access,access,3101,"*)a.ConstructedAt(i);; track->Set(x,y,z,....);; ...; ...; }; ...; a.Clear();. even in case where the TTrack class allocates memory. TClonesArray: update ExpandCreateFast to also reset the non-used slots; so that calling Clear (which does too much) is no longer necessary; when using ExpandCreateFast. New Thread Pool class. A first version of TThreadPool class has been introduced.; This class implements a Thread Pool pattern.; So far it supports only one type of queue - FIFO. Thread library. Reduces risk of internal dead lock by using a private internal lock to protect the internals of TThread, rather than using TThread::Lock. New header TThreadSlots.h to centralize and formalize the use of the TThread local memory slots amongst the ROOT packages. Global Variables. The global values gPad, gVirtualX, gInterpreter, gDirectory and gFile; are now all accessed via a static function of their respective class. The; access is made transparent via a CPP macro.; The access is now also made transparent from the CINT and python prompt.; gPad, gVirtualX and gInterpreter are now accessible even when their value; is zero and they now properly support tab completion.; See the important note in the I/O section on gDirectory and gFile which; are now thread local. Meta. The new interface TDictionary::GetDictionary(const char*) offers a; single entry point to query the type based on its name, conveniently combining; TDataType and TClass queries. It does name normalization (removing std etc). Add the ability to explicitly forbid (or allow) the splitting of a class; (TClass::SetSplit) so that user can inforce the use of a custom streamer in all possible split cases. Resolve several issues with the creation of StreamerInfo for abstract classes. When looking for the value corresponding to an enum type, skip global that are not enums. (This improves the speed of TFile::Open by 60%). TStyle. The Modern style has now a transparent background for the histogram title. Misc. In the root executable",MatchSource.DOCS,core/doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html:3212,Security,access,accessible,3212,"Track class allocates memory. TClonesArray: update ExpandCreateFast to also reset the non-used slots; so that calling Clear (which does too much) is no longer necessary; when using ExpandCreateFast. New Thread Pool class. A first version of TThreadPool class has been introduced.; This class implements a Thread Pool pattern.; So far it supports only one type of queue - FIFO. Thread library. Reduces risk of internal dead lock by using a private internal lock to protect the internals of TThread, rather than using TThread::Lock. New header TThreadSlots.h to centralize and formalize the use of the TThread local memory slots amongst the ROOT packages. Global Variables. The global values gPad, gVirtualX, gInterpreter, gDirectory and gFile; are now all accessed via a static function of their respective class. The; access is made transparent via a CPP macro.; The access is now also made transparent from the CINT and python prompt.; gPad, gVirtualX and gInterpreter are now accessible even when their value; is zero and they now properly support tab completion.; See the important note in the I/O section on gDirectory and gFile which; are now thread local. Meta. The new interface TDictionary::GetDictionary(const char*) offers a; single entry point to query the type based on its name, conveniently combining; TDataType and TClass queries. It does name normalization (removing std etc). Add the ability to explicitly forbid (or allow) the splitting of a class; (TClass::SetSplit) so that user can inforce the use of a custom streamer in all possible split cases. Resolve several issues with the creation of StreamerInfo for abstract classes. When looking for the value corresponding to an enum type, skip global that are not enums. (This improves the speed of TFile::Open by 60%). TStyle. The Modern style has now a transparent background for the histogram title. Misc. In the root executable, auto-detect command line arguments that are local root files even if their name does not end with "".",MatchSource.DOCS,core/doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html:1834,Usability,Clear,Clear,1834,"he long standing issue of ACliC linking all previously created; shared libs even when not needed). Linux. Make --enable-explictlink the default on linux too (was already the case for:; macosx, freebsd, openbsd, aix and win32). This adds some extra time to; the link stage, which can be recuperated by using the newer, much faster,; gold linker. In addition we added the linker option ""-Wl,--no-undefined"",; so you will get an error if symbols are unresolved.; Explicit linking is required by newer distributions, like Ubuntu 11.10,; that require all dependent shared libs to be specified when linking. They; also have default options set to dead strip shared libs that don't resolve; any symbols (equivalent to the MacOS X build changes described above). Core Libraries; TClonesArray. Introduce TClonesArray::ConstructedAt which; always returns an already constructed object. If the slot is being used for the; first time, it calls the default constructor otherwise it returns the object as; is (unless a string is passed as the 2nd argument to the function in which case,; it also calls Clear(second_argument) on the object).; This allows to replace code like:. for (int i = 0; i < ev->Ntracks; i++) {; new(a[i]) TTrack(x,y,z,...);; ...; ...; }; ...; a.Delete(); // or a.Clear(""C""). with the simpler and more efficient:. for (int i = 0; i < ev->Ntracks; i++) {; TTrack *track = (TTrack*)a.ConstructedAt(i);; track->Set(x,y,z,....);; ...; ...; }; ...; a.Clear();. even in case where the TTrack class allocates memory. TClonesArray: update ExpandCreateFast to also reset the non-used slots; so that calling Clear (which does too much) is no longer necessary; when using ExpandCreateFast. New Thread Pool class. A first version of TThreadPool class has been introduced.; This class implements a Thread Pool pattern.; So far it supports only one type of queue - FIFO. Thread library. Reduces risk of internal dead lock by using a private internal lock to protect the internals of TThread, rather than usi",MatchSource.DOCS,core/doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html:2018,Usability,Clear,Clear,2018,"h can be recuperated by using the newer, much faster,; gold linker. In addition we added the linker option ""-Wl,--no-undefined"",; so you will get an error if symbols are unresolved.; Explicit linking is required by newer distributions, like Ubuntu 11.10,; that require all dependent shared libs to be specified when linking. They; also have default options set to dead strip shared libs that don't resolve; any symbols (equivalent to the MacOS X build changes described above). Core Libraries; TClonesArray. Introduce TClonesArray::ConstructedAt which; always returns an already constructed object. If the slot is being used for the; first time, it calls the default constructor otherwise it returns the object as; is (unless a string is passed as the 2nd argument to the function in which case,; it also calls Clear(second_argument) on the object).; This allows to replace code like:. for (int i = 0; i < ev->Ntracks; i++) {; new(a[i]) TTrack(x,y,z,...);; ...; ...; }; ...; a.Delete(); // or a.Clear(""C""). with the simpler and more efficient:. for (int i = 0; i < ev->Ntracks; i++) {; TTrack *track = (TTrack*)a.ConstructedAt(i);; track->Set(x,y,z,....);; ...; ...; }; ...; a.Clear();. even in case where the TTrack class allocates memory. TClonesArray: update ExpandCreateFast to also reset the non-used slots; so that calling Clear (which does too much) is no longer necessary; when using ExpandCreateFast. New Thread Pool class. A first version of TThreadPool class has been introduced.; This class implements a Thread Pool pattern.; So far it supports only one type of queue - FIFO. Thread library. Reduces risk of internal dead lock by using a private internal lock to protect the internals of TThread, rather than using TThread::Lock. New header TThreadSlots.h to centralize and formalize the use of the TThread local memory slots amongst the ROOT packages. Global Variables. The global values gPad, gVirtualX, gInterpreter, gDirectory and gFile; are now all accessed via a static function of t",MatchSource.DOCS,core/doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html:2039,Usability,simpl,simpler,2039,"sing the newer, much faster,; gold linker. In addition we added the linker option ""-Wl,--no-undefined"",; so you will get an error if symbols are unresolved.; Explicit linking is required by newer distributions, like Ubuntu 11.10,; that require all dependent shared libs to be specified when linking. They; also have default options set to dead strip shared libs that don't resolve; any symbols (equivalent to the MacOS X build changes described above). Core Libraries; TClonesArray. Introduce TClonesArray::ConstructedAt which; always returns an already constructed object. If the slot is being used for the; first time, it calls the default constructor otherwise it returns the object as; is (unless a string is passed as the 2nd argument to the function in which case,; it also calls Clear(second_argument) on the object).; This allows to replace code like:. for (int i = 0; i < ev->Ntracks; i++) {; new(a[i]) TTrack(x,y,z,...);; ...; ...; }; ...; a.Delete(); // or a.Clear(""C""). with the simpler and more efficient:. for (int i = 0; i < ev->Ntracks; i++) {; TTrack *track = (TTrack*)a.ConstructedAt(i);; track->Set(x,y,z,....);; ...; ...; }; ...; a.Clear();. even in case where the TTrack class allocates memory. TClonesArray: update ExpandCreateFast to also reset the non-used slots; so that calling Clear (which does too much) is no longer necessary; when using ExpandCreateFast. New Thread Pool class. A first version of TThreadPool class has been introduced.; This class implements a Thread Pool pattern.; So far it supports only one type of queue - FIFO. Thread library. Reduces risk of internal dead lock by using a private internal lock to protect the internals of TThread, rather than using TThread::Lock. New header TThreadSlots.h to centralize and formalize the use of the TThread local memory slots amongst the ROOT packages. Global Variables. The global values gPad, gVirtualX, gInterpreter, gDirectory and gFile; are now all accessed via a static function of their respective class. T",MatchSource.DOCS,core/doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html:2200,Usability,Clear,Clear,2200,"; Explicit linking is required by newer distributions, like Ubuntu 11.10,; that require all dependent shared libs to be specified when linking. They; also have default options set to dead strip shared libs that don't resolve; any symbols (equivalent to the MacOS X build changes described above). Core Libraries; TClonesArray. Introduce TClonesArray::ConstructedAt which; always returns an already constructed object. If the slot is being used for the; first time, it calls the default constructor otherwise it returns the object as; is (unless a string is passed as the 2nd argument to the function in which case,; it also calls Clear(second_argument) on the object).; This allows to replace code like:. for (int i = 0; i < ev->Ntracks; i++) {; new(a[i]) TTrack(x,y,z,...);; ...; ...; }; ...; a.Delete(); // or a.Clear(""C""). with the simpler and more efficient:. for (int i = 0; i < ev->Ntracks; i++) {; TTrack *track = (TTrack*)a.ConstructedAt(i);; track->Set(x,y,z,....);; ...; ...; }; ...; a.Clear();. even in case where the TTrack class allocates memory. TClonesArray: update ExpandCreateFast to also reset the non-used slots; so that calling Clear (which does too much) is no longer necessary; when using ExpandCreateFast. New Thread Pool class. A first version of TThreadPool class has been introduced.; This class implements a Thread Pool pattern.; So far it supports only one type of queue - FIFO. Thread library. Reduces risk of internal dead lock by using a private internal lock to protect the internals of TThread, rather than using TThread::Lock. New header TThreadSlots.h to centralize and formalize the use of the TThread local memory slots amongst the ROOT packages. Global Variables. The global values gPad, gVirtualX, gInterpreter, gDirectory and gFile; are now all accessed via a static function of their respective class. The; access is made transparent via a CPP macro.; The access is now also made transparent from the CINT and python prompt.; gPad, gVirtualX and gInterpreter a",MatchSource.DOCS,core/doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html:2352,Usability,Clear,Clear,2352," They; also have default options set to dead strip shared libs that don't resolve; any symbols (equivalent to the MacOS X build changes described above). Core Libraries; TClonesArray. Introduce TClonesArray::ConstructedAt which; always returns an already constructed object. If the slot is being used for the; first time, it calls the default constructor otherwise it returns the object as; is (unless a string is passed as the 2nd argument to the function in which case,; it also calls Clear(second_argument) on the object).; This allows to replace code like:. for (int i = 0; i < ev->Ntracks; i++) {; new(a[i]) TTrack(x,y,z,...);; ...; ...; }; ...; a.Delete(); // or a.Clear(""C""). with the simpler and more efficient:. for (int i = 0; i < ev->Ntracks; i++) {; TTrack *track = (TTrack*)a.ConstructedAt(i);; track->Set(x,y,z,....);; ...; ...; }; ...; a.Clear();. even in case where the TTrack class allocates memory. TClonesArray: update ExpandCreateFast to also reset the non-used slots; so that calling Clear (which does too much) is no longer necessary; when using ExpandCreateFast. New Thread Pool class. A first version of TThreadPool class has been introduced.; This class implements a Thread Pool pattern.; So far it supports only one type of queue - FIFO. Thread library. Reduces risk of internal dead lock by using a private internal lock to protect the internals of TThread, rather than using TThread::Lock. New header TThreadSlots.h to centralize and formalize the use of the TThread local memory slots amongst the ROOT packages. Global Variables. The global values gPad, gVirtualX, gInterpreter, gDirectory and gFile; are now all accessed via a static function of their respective class. The; access is made transparent via a CPP macro.; The access is now also made transparent from the CINT and python prompt.; gPad, gVirtualX and gInterpreter are now accessible even when their value; is zero and they now properly support tab completion.; See the important note in the I/O section on gD",MatchSource.DOCS,core/doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v534/index.html:23,Availability,Error,Error,23,". Core Libraries; ROOT Error Handlers; There is a new rootrc variable which allows to control the; installation of the ROOT error handlers. By default the handlers; are activated:. Root.ErrorHandlers: 1. but setting the value to 0 result in no error handlers being installed; and the originals remaining in place. This can be useful if ROOT is used in; conjunction with other frameworks that already installed their own handlers. TString; TString::Hash() and thus also TMath::Hash() now use MurmurHash3_x64_128; from http://code.google.com/p/smhasher/ which is public domain.; To accelerate the hash in the case of pointers even further, pointers (and same-sized texts) are hashed using a simple bitwise xor.; This dramatically increases the hash performance for long texts, and still by a factor 5 for pointers.; The pointer case is most visible for certain I/O operations (TExMap).; TColor; Add the method SetAlpha() to set the alpha value (transparency; level) for an existing color. TStyle. The default font set by gStyle->SetLegendFont() was ignored. ",MatchSource.DOCS,core/doc/v534/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v534/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v534/index.html:124,Availability,error,error,124,". Core Libraries; ROOT Error Handlers; There is a new rootrc variable which allows to control the; installation of the ROOT error handlers. By default the handlers; are activated:. Root.ErrorHandlers: 1. but setting the value to 0 result in no error handlers being installed; and the originals remaining in place. This can be useful if ROOT is used in; conjunction with other frameworks that already installed their own handlers. TString; TString::Hash() and thus also TMath::Hash() now use MurmurHash3_x64_128; from http://code.google.com/p/smhasher/ which is public domain.; To accelerate the hash in the case of pointers even further, pointers (and same-sized texts) are hashed using a simple bitwise xor.; This dramatically increases the hash performance for long texts, and still by a factor 5 for pointers.; The pointer case is most visible for certain I/O operations (TExMap).; TColor; Add the method SetAlpha() to set the alpha value (transparency; level) for an existing color. TStyle. The default font set by gStyle->SetLegendFont() was ignored. ",MatchSource.DOCS,core/doc/v534/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v534/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v534/index.html:186,Availability,Error,ErrorHandlers,186,". Core Libraries; ROOT Error Handlers; There is a new rootrc variable which allows to control the; installation of the ROOT error handlers. By default the handlers; are activated:. Root.ErrorHandlers: 1. but setting the value to 0 result in no error handlers being installed; and the originals remaining in place. This can be useful if ROOT is used in; conjunction with other frameworks that already installed their own handlers. TString; TString::Hash() and thus also TMath::Hash() now use MurmurHash3_x64_128; from http://code.google.com/p/smhasher/ which is public domain.; To accelerate the hash in the case of pointers even further, pointers (and same-sized texts) are hashed using a simple bitwise xor.; This dramatically increases the hash performance for long texts, and still by a factor 5 for pointers.; The pointer case is most visible for certain I/O operations (TExMap).; TColor; Add the method SetAlpha() to set the alpha value (transparency; level) for an existing color. TStyle. The default font set by gStyle->SetLegendFont() was ignored. ",MatchSource.DOCS,core/doc/v534/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v534/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v534/index.html:244,Availability,error,error,244,". Core Libraries; ROOT Error Handlers; There is a new rootrc variable which allows to control the; installation of the ROOT error handlers. By default the handlers; are activated:. Root.ErrorHandlers: 1. but setting the value to 0 result in no error handlers being installed; and the originals remaining in place. This can be useful if ROOT is used in; conjunction with other frameworks that already installed their own handlers. TString; TString::Hash() and thus also TMath::Hash() now use MurmurHash3_x64_128; from http://code.google.com/p/smhasher/ which is public domain.; To accelerate the hash in the case of pointers even further, pointers (and same-sized texts) are hashed using a simple bitwise xor.; This dramatically increases the hash performance for long texts, and still by a factor 5 for pointers.; The pointer case is most visible for certain I/O operations (TExMap).; TColor; Add the method SetAlpha() to set the alpha value (transparency; level) for an existing color. TStyle. The default font set by gStyle->SetLegendFont() was ignored. ",MatchSource.DOCS,core/doc/v534/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v534/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v534/index.html:99,Deployability,install,installation,99,". Core Libraries; ROOT Error Handlers; There is a new rootrc variable which allows to control the; installation of the ROOT error handlers. By default the handlers; are activated:. Root.ErrorHandlers: 1. but setting the value to 0 result in no error handlers being installed; and the originals remaining in place. This can be useful if ROOT is used in; conjunction with other frameworks that already installed their own handlers. TString; TString::Hash() and thus also TMath::Hash() now use MurmurHash3_x64_128; from http://code.google.com/p/smhasher/ which is public domain.; To accelerate the hash in the case of pointers even further, pointers (and same-sized texts) are hashed using a simple bitwise xor.; This dramatically increases the hash performance for long texts, and still by a factor 5 for pointers.; The pointer case is most visible for certain I/O operations (TExMap).; TColor; Add the method SetAlpha() to set the alpha value (transparency; level) for an existing color. TStyle. The default font set by gStyle->SetLegendFont() was ignored. ",MatchSource.DOCS,core/doc/v534/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v534/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v534/index.html:265,Deployability,install,installed,265,". Core Libraries; ROOT Error Handlers; There is a new rootrc variable which allows to control the; installation of the ROOT error handlers. By default the handlers; are activated:. Root.ErrorHandlers: 1. but setting the value to 0 result in no error handlers being installed; and the originals remaining in place. This can be useful if ROOT is used in; conjunction with other frameworks that already installed their own handlers. TString; TString::Hash() and thus also TMath::Hash() now use MurmurHash3_x64_128; from http://code.google.com/p/smhasher/ which is public domain.; To accelerate the hash in the case of pointers even further, pointers (and same-sized texts) are hashed using a simple bitwise xor.; This dramatically increases the hash performance for long texts, and still by a factor 5 for pointers.; The pointer case is most visible for certain I/O operations (TExMap).; TColor; Add the method SetAlpha() to set the alpha value (transparency; level) for an existing color. TStyle. The default font set by gStyle->SetLegendFont() was ignored. ",MatchSource.DOCS,core/doc/v534/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v534/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v534/index.html:400,Deployability,install,installed,400,". Core Libraries; ROOT Error Handlers; There is a new rootrc variable which allows to control the; installation of the ROOT error handlers. By default the handlers; are activated:. Root.ErrorHandlers: 1. but setting the value to 0 result in no error handlers being installed; and the originals remaining in place. This can be useful if ROOT is used in; conjunction with other frameworks that already installed their own handlers. TString; TString::Hash() and thus also TMath::Hash() now use MurmurHash3_x64_128; from http://code.google.com/p/smhasher/ which is public domain.; To accelerate the hash in the case of pointers even further, pointers (and same-sized texts) are hashed using a simple bitwise xor.; This dramatically increases the hash performance for long texts, and still by a factor 5 for pointers.; The pointer case is most visible for certain I/O operations (TExMap).; TColor; Add the method SetAlpha() to set the alpha value (transparency; level) for an existing color. TStyle. The default font set by gStyle->SetLegendFont() was ignored. ",MatchSource.DOCS,core/doc/v534/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v534/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v534/index.html:61,Modifiability,variab,variable,61,". Core Libraries; ROOT Error Handlers; There is a new rootrc variable which allows to control the; installation of the ROOT error handlers. By default the handlers; are activated:. Root.ErrorHandlers: 1. but setting the value to 0 result in no error handlers being installed; and the originals remaining in place. This can be useful if ROOT is used in; conjunction with other frameworks that already installed their own handlers. TString; TString::Hash() and thus also TMath::Hash() now use MurmurHash3_x64_128; from http://code.google.com/p/smhasher/ which is public domain.; To accelerate the hash in the case of pointers even further, pointers (and same-sized texts) are hashed using a simple bitwise xor.; This dramatically increases the hash performance for long texts, and still by a factor 5 for pointers.; The pointer case is most visible for certain I/O operations (TExMap).; TColor; Add the method SetAlpha() to set the alpha value (transparency; level) for an existing color. TStyle. The default font set by gStyle->SetLegendFont() was ignored. ",MatchSource.DOCS,core/doc/v534/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v534/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v534/index.html:747,Performance,perform,performance,747,". Core Libraries; ROOT Error Handlers; There is a new rootrc variable which allows to control the; installation of the ROOT error handlers. By default the handlers; are activated:. Root.ErrorHandlers: 1. but setting the value to 0 result in no error handlers being installed; and the originals remaining in place. This can be useful if ROOT is used in; conjunction with other frameworks that already installed their own handlers. TString; TString::Hash() and thus also TMath::Hash() now use MurmurHash3_x64_128; from http://code.google.com/p/smhasher/ which is public domain.; To accelerate the hash in the case of pointers even further, pointers (and same-sized texts) are hashed using a simple bitwise xor.; This dramatically increases the hash performance for long texts, and still by a factor 5 for pointers.; The pointer case is most visible for certain I/O operations (TExMap).; TColor; Add the method SetAlpha() to set the alpha value (transparency; level) for an existing color. TStyle. The default font set by gStyle->SetLegendFont() was ignored. ",MatchSource.DOCS,core/doc/v534/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v534/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v534/index.html:448,Security,Hash,Hash,448,". Core Libraries; ROOT Error Handlers; There is a new rootrc variable which allows to control the; installation of the ROOT error handlers. By default the handlers; are activated:. Root.ErrorHandlers: 1. but setting the value to 0 result in no error handlers being installed; and the originals remaining in place. This can be useful if ROOT is used in; conjunction with other frameworks that already installed their own handlers. TString; TString::Hash() and thus also TMath::Hash() now use MurmurHash3_x64_128; from http://code.google.com/p/smhasher/ which is public domain.; To accelerate the hash in the case of pointers even further, pointers (and same-sized texts) are hashed using a simple bitwise xor.; This dramatically increases the hash performance for long texts, and still by a factor 5 for pointers.; The pointer case is most visible for certain I/O operations (TExMap).; TColor; Add the method SetAlpha() to set the alpha value (transparency; level) for an existing color. TStyle. The default font set by gStyle->SetLegendFont() was ignored. ",MatchSource.DOCS,core/doc/v534/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v534/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v534/index.html:476,Security,Hash,Hash,476,". Core Libraries; ROOT Error Handlers; There is a new rootrc variable which allows to control the; installation of the ROOT error handlers. By default the handlers; are activated:. Root.ErrorHandlers: 1. but setting the value to 0 result in no error handlers being installed; and the originals remaining in place. This can be useful if ROOT is used in; conjunction with other frameworks that already installed their own handlers. TString; TString::Hash() and thus also TMath::Hash() now use MurmurHash3_x64_128; from http://code.google.com/p/smhasher/ which is public domain.; To accelerate the hash in the case of pointers even further, pointers (and same-sized texts) are hashed using a simple bitwise xor.; This dramatically increases the hash performance for long texts, and still by a factor 5 for pointers.; The pointer case is most visible for certain I/O operations (TExMap).; TColor; Add the method SetAlpha() to set the alpha value (transparency; level) for an existing color. TStyle. The default font set by gStyle->SetLegendFont() was ignored. ",MatchSource.DOCS,core/doc/v534/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v534/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v534/index.html:595,Security,hash,hash,595,". Core Libraries; ROOT Error Handlers; There is a new rootrc variable which allows to control the; installation of the ROOT error handlers. By default the handlers; are activated:. Root.ErrorHandlers: 1. but setting the value to 0 result in no error handlers being installed; and the originals remaining in place. This can be useful if ROOT is used in; conjunction with other frameworks that already installed their own handlers. TString; TString::Hash() and thus also TMath::Hash() now use MurmurHash3_x64_128; from http://code.google.com/p/smhasher/ which is public domain.; To accelerate the hash in the case of pointers even further, pointers (and same-sized texts) are hashed using a simple bitwise xor.; This dramatically increases the hash performance for long texts, and still by a factor 5 for pointers.; The pointer case is most visible for certain I/O operations (TExMap).; TColor; Add the method SetAlpha() to set the alpha value (transparency; level) for an existing color. TStyle. The default font set by gStyle->SetLegendFont() was ignored. ",MatchSource.DOCS,core/doc/v534/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v534/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v534/index.html:674,Security,hash,hashed,674,". Core Libraries; ROOT Error Handlers; There is a new rootrc variable which allows to control the; installation of the ROOT error handlers. By default the handlers; are activated:. Root.ErrorHandlers: 1. but setting the value to 0 result in no error handlers being installed; and the originals remaining in place. This can be useful if ROOT is used in; conjunction with other frameworks that already installed their own handlers. TString; TString::Hash() and thus also TMath::Hash() now use MurmurHash3_x64_128; from http://code.google.com/p/smhasher/ which is public domain.; To accelerate the hash in the case of pointers even further, pointers (and same-sized texts) are hashed using a simple bitwise xor.; This dramatically increases the hash performance for long texts, and still by a factor 5 for pointers.; The pointer case is most visible for certain I/O operations (TExMap).; TColor; Add the method SetAlpha() to set the alpha value (transparency; level) for an existing color. TStyle. The default font set by gStyle->SetLegendFont() was ignored. ",MatchSource.DOCS,core/doc/v534/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v534/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v534/index.html:742,Security,hash,hash,742,". Core Libraries; ROOT Error Handlers; There is a new rootrc variable which allows to control the; installation of the ROOT error handlers. By default the handlers; are activated:. Root.ErrorHandlers: 1. but setting the value to 0 result in no error handlers being installed; and the originals remaining in place. This can be useful if ROOT is used in; conjunction with other frameworks that already installed their own handlers. TString; TString::Hash() and thus also TMath::Hash() now use MurmurHash3_x64_128; from http://code.google.com/p/smhasher/ which is public domain.; To accelerate the hash in the case of pointers even further, pointers (and same-sized texts) are hashed using a simple bitwise xor.; This dramatically increases the hash performance for long texts, and still by a factor 5 for pointers.; The pointer case is most visible for certain I/O operations (TExMap).; TColor; Add the method SetAlpha() to set the alpha value (transparency; level) for an existing color. TStyle. The default font set by gStyle->SetLegendFont() was ignored. ",MatchSource.DOCS,core/doc/v534/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v534/index.html
https://github.com/root-project/root/tree/v6-32-06/core/doc/v534/index.html:689,Usability,simpl,simple,689,". Core Libraries; ROOT Error Handlers; There is a new rootrc variable which allows to control the; installation of the ROOT error handlers. By default the handlers; are activated:. Root.ErrorHandlers: 1. but setting the value to 0 result in no error handlers being installed; and the originals remaining in place. This can be useful if ROOT is used in; conjunction with other frameworks that already installed their own handlers. TString; TString::Hash() and thus also TMath::Hash() now use MurmurHash3_x64_128; from http://code.google.com/p/smhasher/ which is public domain.; To accelerate the hash in the case of pointers even further, pointers (and same-sized texts) are hashed using a simple bitwise xor.; This dramatically increases the hash performance for long texts, and still by a factor 5 for pointers.; The pointer case is most visible for certain I/O operations (TExMap).; TColor; Add the method SetAlpha() to set the alpha value (transparency; level) for an existing color. TStyle. The default font set by gStyle->SetLegendFont() was ignored. ",MatchSource.DOCS,core/doc/v534/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/doc/v534/index.html
https://github.com/root-project/root/tree/v6-32-06/core/textinput/doc/index.html:232,Integrability,depend,dependency,232,"The TextInput library is used by ROOT (TRint, specifically) to read input on the prompt. It does e.g. syntax highlighting and history management, understands all supported terminals and all of that as a stand-alone package, without dependency on the (old, big, non-Windows) [n]curses library.; ",MatchSource.DOCS,core/textinput/doc/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/doc/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v520/index.html:1364,Availability,avail,available,1364,"ersion 5.16 and version 5.18 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. http://root.cern.ch/root/Version520.html; Versions for AFS have also been updated. See the list of supported; platforms:; http://root.cern.ch/Welcome.html. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Ilka Antcheva,; Jean-Fran�ois Bastien, ; Bertrand Bellenot,; Rene Brun,; Philippe Canal,; Olivier Couet,; Valeri Fine,; Leo Franco, ; Gerri Ganis,; Andrei Gheata,; Mihaela Gheata,; David Gonzalez Maline, ; Andreas Hoecker, ; Jan Iwaszkiewicz, ; Lukasz Janyst, ; Anna Kreshuk, ; Wim Lavrijsen,; Sergei Linev,; Anar Manafov, ; Diego Marcos-Segura, ; Lorenzo Moneta,; Axel Naumann,; Mathieu de Naurois, ; Eddy Offermann, ; Valeriy Onuchin,; Timur Pocheptsov,; Fons Rademakers,; Paul Russo, ; Alja Tadel, ; Matevz Tadel, ; Wouter Verkerke, ; Guido Volpi, ; Hady Zalek . ",MatchSource.DOCS,doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v520/index.html:23,Deployability,Release,Release,23,". ROOT Version 5.20/00 Release Notes. ROOT Version 5.20/00 Release Notes. ROOT version 5.20/00 has been released June 25, 2008.; In case you are upgrading from version 5.14, please read the releases notes; of version 5.16 and version 5.18 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. http://root.cern.ch/root/Version520.html; Versions for AFS have also been updated. See the list of supported; platforms:; http://root.cern.ch/Welcome.html. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Ilka Antcheva,; Jean-Fran�ois Bastien, ; Bertrand Bellenot,; Rene Brun,; Philippe Canal,; Olivier Couet,; Valeri Fine,; Leo Franco, ; Gerri Ganis,; Andrei Gheata,; Mihaela Gheata,; David Gonzalez Maline, ; Andreas Hoecker, ; Jan Iwaszkiewicz, ; Lukasz Janyst, ; Anna Kreshuk, ; Wim Lavrijsen,; Sergei Linev,; Anar Manafov, ; Diego Marcos-Segura, ; Lorenzo M",MatchSource.DOCS,doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v520/index.html:59,Deployability,Release,Release,59,". ROOT Version 5.20/00 Release Notes. ROOT Version 5.20/00 Release Notes. ROOT version 5.20/00 has been released June 25, 2008.; In case you are upgrading from version 5.14, please read the releases notes; of version 5.16 and version 5.18 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. http://root.cern.ch/root/Version520.html; Versions for AFS have also been updated. See the list of supported; platforms:; http://root.cern.ch/Welcome.html. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Ilka Antcheva,; Jean-Fran�ois Bastien, ; Bertrand Bellenot,; Rene Brun,; Philippe Canal,; Olivier Couet,; Valeri Fine,; Leo Franco, ; Gerri Ganis,; Andrei Gheata,; Mihaela Gheata,; David Gonzalez Maline, ; Andreas Hoecker, ; Jan Iwaszkiewicz, ; Lukasz Janyst, ; Anna Kreshuk, ; Wim Lavrijsen,; Sergei Linev,; Anar Manafov, ; Diego Marcos-Segura, ; Lorenzo M",MatchSource.DOCS,doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v520/index.html:104,Deployability,release,released,104,". ROOT Version 5.20/00 Release Notes. ROOT Version 5.20/00 Release Notes. ROOT version 5.20/00 has been released June 25, 2008.; In case you are upgrading from version 5.14, please read the releases notes; of version 5.16 and version 5.18 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. http://root.cern.ch/root/Version520.html; Versions for AFS have also been updated. See the list of supported; platforms:; http://root.cern.ch/Welcome.html. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Ilka Antcheva,; Jean-Fran�ois Bastien, ; Bertrand Bellenot,; Rene Brun,; Philippe Canal,; Olivier Couet,; Valeri Fine,; Leo Franco, ; Gerri Ganis,; Andrei Gheata,; Mihaela Gheata,; David Gonzalez Maline, ; Andreas Hoecker, ; Jan Iwaszkiewicz, ; Lukasz Janyst, ; Anna Kreshuk, ; Wim Lavrijsen,; Sergei Linev,; Anar Manafov, ; Diego Marcos-Segura, ; Lorenzo M",MatchSource.DOCS,doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v520/index.html:190,Deployability,release,releases,190,". ROOT Version 5.20/00 Release Notes. ROOT Version 5.20/00 Release Notes. ROOT version 5.20/00 has been released June 25, 2008.; In case you are upgrading from version 5.14, please read the releases notes; of version 5.16 and version 5.18 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. http://root.cern.ch/root/Version520.html; Versions for AFS have also been updated. See the list of supported; platforms:; http://root.cern.ch/Welcome.html. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Ilka Antcheva,; Jean-Fran�ois Bastien, ; Bertrand Bellenot,; Rene Brun,; Philippe Canal,; Olivier Couet,; Valeri Fine,; Leo Franco, ; Gerri Ganis,; Andrei Gheata,; Mihaela Gheata,; David Gonzalez Maline, ; Andreas Hoecker, ; Jan Iwaszkiewicz, ; Lukasz Janyst, ; Anna Kreshuk, ; Wim Lavrijsen,; Sergei Linev,; Anar Manafov, ; Diego Marcos-Segura, ; Lorenzo M",MatchSource.DOCS,doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v520/index.html:1453,Deployability,update,updated,1453,"ersion 5.16 and version 5.18 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. http://root.cern.ch/root/Version520.html; Versions for AFS have also been updated. See the list of supported; platforms:; http://root.cern.ch/Welcome.html. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Ilka Antcheva,; Jean-Fran�ois Bastien, ; Bertrand Bellenot,; Rene Brun,; Philippe Canal,; Olivier Couet,; Valeri Fine,; Leo Franco, ; Gerri Ganis,; Andrei Gheata,; Mihaela Gheata,; David Gonzalez Maline, ; Andreas Hoecker, ; Jan Iwaszkiewicz, ; Lukasz Janyst, ; Anna Kreshuk, ; Wim Lavrijsen,; Sergei Linev,; Anar Manafov, ; Diego Marcos-Segura, ; Lorenzo Moneta,; Axel Naumann,; Mathieu de Naurois, ; Eddy Offermann, ; Valeriy Onuchin,; Timur Pocheptsov,; Fons Rademakers,; Paul Russo, ; Alja Tadel, ; Matevz Tadel, ; Wouter Verkerke, ; Guido Volpi, ; Hady Zalek . ",MatchSource.DOCS,doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v520/index.html:539,Integrability,interface,interface,539,". ROOT Version 5.20/00 Release Notes. ROOT Version 5.20/00 Release Notes. ROOT version 5.20/00 has been released June 25, 2008.; In case you are upgrading from version 5.14, please read the releases notes; of version 5.16 and version 5.18 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. http://root.cern.ch/root/Version520.html; Versions for AFS have also been updated. See the list of supported; platforms:; http://root.cern.ch/Welcome.html. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Ilka Antcheva,; Jean-Fran�ois Bastien, ; Bertrand Bellenot,; Rene Brun,; Philippe Canal,; Olivier Couet,; Valeri Fine,; Leo Franco, ; Gerri Ganis,; Andrei Gheata,; Mihaela Gheata,; David Gonzalez Maline, ; Andreas Hoecker, ; Jan Iwaszkiewicz, ; Lukasz Janyst, ; Anna Kreshuk, ; Wim Lavrijsen,; Sergei Linev,; Anar Manafov, ; Diego Marcos-Segura, ; Lorenzo M",MatchSource.DOCS,doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v520/index.html:598,Integrability,interface,interface,598,". ROOT Version 5.20/00 Release Notes. ROOT Version 5.20/00 Release Notes. ROOT version 5.20/00 has been released June 25, 2008.; In case you are upgrading from version 5.14, please read the releases notes; of version 5.16 and version 5.18 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. http://root.cern.ch/root/Version520.html; Versions for AFS have also been updated. See the list of supported; platforms:; http://root.cern.ch/Welcome.html. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Ilka Antcheva,; Jean-Fran�ois Bastien, ; Bertrand Bellenot,; Rene Brun,; Philippe Canal,; Olivier Couet,; Valeri Fine,; Leo Franco, ; Gerri Ganis,; Andrei Gheata,; Mihaela Gheata,; David Gonzalez Maline, ; Andreas Hoecker, ; Jan Iwaszkiewicz, ; Lukasz Janyst, ; Anna Kreshuk, ; Wim Lavrijsen,; Sergei Linev,; Anar Manafov, ; Diego Marcos-Segura, ; Lorenzo M",MatchSource.DOCS,doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v520/index.html:624,Integrability,Interface,Interface,624,". ROOT Version 5.20/00 Release Notes. ROOT Version 5.20/00 Release Notes. ROOT version 5.20/00 has been released June 25, 2008.; In case you are upgrading from version 5.14, please read the releases notes; of version 5.16 and version 5.18 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. http://root.cern.ch/root/Version520.html; Versions for AFS have also been updated. See the list of supported; platforms:; http://root.cern.ch/Welcome.html. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Ilka Antcheva,; Jean-Fran�ois Bastien, ; Bertrand Bellenot,; Rene Brun,; Philippe Canal,; Olivier Couet,; Valeri Fine,; Leo Franco, ; Gerri Ganis,; Andrei Gheata,; Mihaela Gheata,; David Gonzalez Maline, ; Andreas Hoecker, ; Jan Iwaszkiewicz, ; Lukasz Janyst, ; Anna Kreshuk, ; Wim Lavrijsen,; Sergei Linev,; Anar Manafov, ; Diego Marcos-Segura, ; Lorenzo M",MatchSource.DOCS,doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v520/index.html:1045,Integrability,interface,interfaces,1045,". ROOT Version 5.20/00 Release Notes. ROOT Version 5.20/00 Release Notes. ROOT version 5.20/00 has been released June 25, 2008.; In case you are upgrading from version 5.14, please read the releases notes; of version 5.16 and version 5.18 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. http://root.cern.ch/root/Version520.html; Versions for AFS have also been updated. See the list of supported; platforms:; http://root.cern.ch/Welcome.html. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Ilka Antcheva,; Jean-Fran�ois Bastien, ; Bertrand Bellenot,; Rene Brun,; Philippe Canal,; Olivier Couet,; Valeri Fine,; Leo Franco, ; Gerri Ganis,; Andrei Gheata,; Mihaela Gheata,; David Gonzalez Maline, ; Andreas Hoecker, ; Jan Iwaszkiewicz, ; Lukasz Janyst, ; Anna Kreshuk, ; Wim Lavrijsen,; Sergei Linev,; Anar Manafov, ; Diego Marcos-Segura, ; Lorenzo M",MatchSource.DOCS,doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v520/index.html:1098,Integrability,protocol,protocols,1098,"version 5.16 and version 5.18 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. http://root.cern.ch/root/Version520.html; Versions for AFS have also been updated. See the list of supported; platforms:; http://root.cern.ch/Welcome.html. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Ilka Antcheva,; Jean-Fran�ois Bastien, ; Bertrand Bellenot,; Rene Brun,; Philippe Canal,; Olivier Couet,; Valeri Fine,; Leo Franco, ; Gerri Ganis,; Andrei Gheata,; Mihaela Gheata,; David Gonzalez Maline, ; Andreas Hoecker, ; Jan Iwaszkiewicz, ; Lukasz Janyst, ; Anna Kreshuk, ; Wim Lavrijsen,; Sergei Linev,; Anar Manafov, ; Diego Marcos-Segura, ; Lorenzo Moneta,; Axel Naumann,; Mathieu de Naurois, ; Eddy Offermann, ; Valeriy Onuchin,; Timur Pocheptsov,; Fons Rademakers,; Paul Russo, ; Alja Tadel, ; Matevz Tadel, ; Wouter Verkerke, ; Guido Volpi, ; Hady Zalek . ",MatchSource.DOCS,doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v520/index.html:1127,Integrability,interface,interfaces,1127,"version 5.16 and version 5.18 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. http://root.cern.ch/root/Version520.html; Versions for AFS have also been updated. See the list of supported; platforms:; http://root.cern.ch/Welcome.html. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Ilka Antcheva,; Jean-Fran�ois Bastien, ; Bertrand Bellenot,; Rene Brun,; Philippe Canal,; Olivier Couet,; Valeri Fine,; Leo Franco, ; Gerri Ganis,; Andrei Gheata,; Mihaela Gheata,; David Gonzalez Maline, ; Andreas Hoecker, ; Jan Iwaszkiewicz, ; Lukasz Janyst, ; Anna Kreshuk, ; Wim Lavrijsen,; Sergei Linev,; Anar Manafov, ; Diego Marcos-Segura, ; Lorenzo Moneta,; Axel Naumann,; Mathieu de Naurois, ; Eddy Offermann, ; Valeriy Onuchin,; Timur Pocheptsov,; Fons Rademakers,; Paul Russo, ; Alja Tadel, ; Matevz Tadel, ; Wouter Verkerke, ; Guido Volpi, ; Hady Zalek . ",MatchSource.DOCS,doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v520/index.html:1214,Integrability,interface,interfaces,1214,"version 5.16 and version 5.18 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. http://root.cern.ch/root/Version520.html; Versions for AFS have also been updated. See the list of supported; platforms:; http://root.cern.ch/Welcome.html. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Ilka Antcheva,; Jean-Fran�ois Bastien, ; Bertrand Bellenot,; Rene Brun,; Philippe Canal,; Olivier Couet,; Valeri Fine,; Leo Franco, ; Gerri Ganis,; Andrei Gheata,; Mihaela Gheata,; David Gonzalez Maline, ; Andreas Hoecker, ; Jan Iwaszkiewicz, ; Lukasz Janyst, ; Anna Kreshuk, ; Wim Lavrijsen,; Sergei Linev,; Anar Manafov, ; Diego Marcos-Segura, ; Lorenzo Moneta,; Axel Naumann,; Mathieu de Naurois, ; Eddy Offermann, ; Valeriy Onuchin,; Timur Pocheptsov,; Fons Rademakers,; Paul Russo, ; Alja Tadel, ; Matevz Tadel, ; Wouter Verkerke, ; Guido Volpi, ; Hady Zalek . ",MatchSource.DOCS,doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v520/index.html:1112,Security,authenticat,authentication,1112,"version 5.16 and version 5.18 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. http://root.cern.ch/root/Version520.html; Versions for AFS have also been updated. See the list of supported; platforms:; http://root.cern.ch/Welcome.html. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Ilka Antcheva,; Jean-Fran�ois Bastien, ; Bertrand Bellenot,; Rene Brun,; Philippe Canal,; Olivier Couet,; Valeri Fine,; Leo Franco, ; Gerri Ganis,; Andrei Gheata,; Mihaela Gheata,; David Gonzalez Maline, ; Andreas Hoecker, ; Jan Iwaszkiewicz, ; Lukasz Janyst, ; Anna Kreshuk, ; Wim Lavrijsen,; Sergei Linev,; Anar Manafov, ; Diego Marcos-Segura, ; Lorenzo Moneta,; Axel Naumann,; Mathieu de Naurois, ; Eddy Offermann, ; Valeriy Onuchin,; Timur Pocheptsov,; Fons Rademakers,; Paul Russo, ; Alja Tadel, ; Matevz Tadel, ; Wouter Verkerke, ; Guido Volpi, ; Hady Zalek . ",MatchSource.DOCS,doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v520/index.html:2182,Usability,Guid,Guido,2182,"ersion 5.16 and version 5.18 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. http://root.cern.ch/root/Version520.html; Versions for AFS have also been updated. See the list of supported; platforms:; http://root.cern.ch/Welcome.html. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Ilka Antcheva,; Jean-Fran�ois Bastien, ; Bertrand Bellenot,; Rene Brun,; Philippe Canal,; Olivier Couet,; Valeri Fine,; Leo Franco, ; Gerri Ganis,; Andrei Gheata,; Mihaela Gheata,; David Gonzalez Maline, ; Andreas Hoecker, ; Jan Iwaszkiewicz, ; Lukasz Janyst, ; Anna Kreshuk, ; Wim Lavrijsen,; Sergei Linev,; Anar Manafov, ; Diego Marcos-Segura, ; Lorenzo Moneta,; Axel Naumann,; Mathieu de Naurois, ; Eddy Offermann, ; Valeriy Onuchin,; Timur Pocheptsov,; Fons Rademakers,; Paul Russo, ; Alja Tadel, ; Matevz Tadel, ; Wouter Verkerke, ; Guido Volpi, ; Hady Zalek . ",MatchSource.DOCS,doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v522/index.html:1379,Availability,avail,available,1379,".20 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. http://root.cern.ch/root/Version521.html; Versions for AFS have also been updated. See the list of supported; platforms:; http://root.cern.ch/Welcome.html. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Ilka Antcheva,; Jean-Fran�ois Bastien, ; Bertrand Bellenot,; Rene Brun,; Philippe Canal,; Olivier Couet,; Kyle Cranmer,; Valeri Fine,; Leo Franco, ; Gerri Ganis,; Andrei Gheata,; Mihaela Gheata,; David Gonzalez Maline, ; Andreas Hoecker, ; Jan Iwaszkiewicz, ; Lukasz Janyst, ; Anna Kreshuk, ; Wim Lavrijsen,; Josef Leydold,; Sergei Linev,; Anar Manafov, ; Diego Marcos-Segura, ; Lorenzo Moneta,; Axel Naumann,; Eddy Offermann, ; Timur Pocheptsov,; Fons Rademakers,; Paul Russo, ; Gregory Schott,; Stefan Schmitt,; Alja Tadel, ; Matevz Tadel, ; Wouter Verkerke, ; Hady Zalek ; Igor Smirnov . ",MatchSource.DOCS,doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v522/index.html:23,Deployability,Release,Release,23,". ROOT Version 5.22/00 Release Notes. ROOT Version 5.22/00 Release Notes. ROOT version 5.22/00 has been released on December 18, 2008.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18 and version 5.20 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. http://root.cern.ch/root/Version521.html; Versions for AFS have also been updated. See the list of supported; platforms:; http://root.cern.ch/Welcome.html. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Ilka Antcheva,; Jean-Fran�ois Bastien, ; Bertrand Bellenot,; Rene Brun,; Philippe Canal,; Olivier Couet,; Kyle Cranmer,; Valeri Fine,; Leo Franco, ; Gerri Ganis,; Andrei Gheata,; Mihaela Gheata,; David Gonzalez Maline, ; Andreas Hoecker, ; Jan Iwaszkiewicz, ; Lukasz Janyst, ; Anna Kreshuk, ; Wim Lavrijsen,; Josef Leydold,; Sergei Linev,; An",MatchSource.DOCS,doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v522/index.html:59,Deployability,Release,Release,59,". ROOT Version 5.22/00 Release Notes. ROOT Version 5.22/00 Release Notes. ROOT version 5.22/00 has been released on December 18, 2008.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18 and version 5.20 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. http://root.cern.ch/root/Version521.html; Versions for AFS have also been updated. See the list of supported; platforms:; http://root.cern.ch/Welcome.html. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Ilka Antcheva,; Jean-Fran�ois Bastien, ; Bertrand Bellenot,; Rene Brun,; Philippe Canal,; Olivier Couet,; Kyle Cranmer,; Valeri Fine,; Leo Franco, ; Gerri Ganis,; Andrei Gheata,; Mihaela Gheata,; David Gonzalez Maline, ; Andreas Hoecker, ; Jan Iwaszkiewicz, ; Lukasz Janyst, ; Anna Kreshuk, ; Wim Lavrijsen,; Josef Leydold,; Sergei Linev,; An",MatchSource.DOCS,doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v522/index.html:104,Deployability,release,released,104,". ROOT Version 5.22/00 Release Notes. ROOT Version 5.22/00 Release Notes. ROOT version 5.22/00 has been released on December 18, 2008.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18 and version 5.20 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. http://root.cern.ch/root/Version521.html; Versions for AFS have also been updated. See the list of supported; platforms:; http://root.cern.ch/Welcome.html. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Ilka Antcheva,; Jean-Fran�ois Bastien, ; Bertrand Bellenot,; Rene Brun,; Philippe Canal,; Olivier Couet,; Kyle Cranmer,; Valeri Fine,; Leo Franco, ; Gerri Ganis,; Andrei Gheata,; Mihaela Gheata,; David Gonzalez Maline, ; Andreas Hoecker, ; Jan Iwaszkiewicz, ; Lukasz Janyst, ; Anna Kreshuk, ; Wim Lavrijsen,; Josef Leydold,; Sergei Linev,; An",MatchSource.DOCS,doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v522/index.html:199,Deployability,release,releases,199,". ROOT Version 5.22/00 Release Notes. ROOT Version 5.22/00 Release Notes. ROOT version 5.22/00 has been released on December 18, 2008.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18 and version 5.20 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. http://root.cern.ch/root/Version521.html; Versions for AFS have also been updated. See the list of supported; platforms:; http://root.cern.ch/Welcome.html. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Ilka Antcheva,; Jean-Fran�ois Bastien, ; Bertrand Bellenot,; Rene Brun,; Philippe Canal,; Olivier Couet,; Kyle Cranmer,; Valeri Fine,; Leo Franco, ; Gerri Ganis,; Andrei Gheata,; Mihaela Gheata,; David Gonzalez Maline, ; Andreas Hoecker, ; Jan Iwaszkiewicz, ; Lukasz Janyst, ; Anna Kreshuk, ; Wim Lavrijsen,; Josef Leydold,; Sergei Linev,; An",MatchSource.DOCS,doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v522/index.html:1468,Deployability,update,updated,1468,".20 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. http://root.cern.ch/root/Version521.html; Versions for AFS have also been updated. See the list of supported; platforms:; http://root.cern.ch/Welcome.html. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Ilka Antcheva,; Jean-Fran�ois Bastien, ; Bertrand Bellenot,; Rene Brun,; Philippe Canal,; Olivier Couet,; Kyle Cranmer,; Valeri Fine,; Leo Franco, ; Gerri Ganis,; Andrei Gheata,; Mihaela Gheata,; David Gonzalez Maline, ; Andreas Hoecker, ; Jan Iwaszkiewicz, ; Lukasz Janyst, ; Anna Kreshuk, ; Wim Lavrijsen,; Josef Leydold,; Sergei Linev,; Anar Manafov, ; Diego Marcos-Segura, ; Lorenzo Moneta,; Axel Naumann,; Eddy Offermann, ; Timur Pocheptsov,; Fons Rademakers,; Paul Russo, ; Gregory Schott,; Stefan Schmitt,; Alja Tadel, ; Matevz Tadel, ; Wouter Verkerke, ; Hady Zalek ; Igor Smirnov . ",MatchSource.DOCS,doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v522/index.html:554,Integrability,interface,interface,554,". ROOT Version 5.22/00 Release Notes. ROOT Version 5.22/00 Release Notes. ROOT version 5.22/00 has been released on December 18, 2008.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18 and version 5.20 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. http://root.cern.ch/root/Version521.html; Versions for AFS have also been updated. See the list of supported; platforms:; http://root.cern.ch/Welcome.html. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Ilka Antcheva,; Jean-Fran�ois Bastien, ; Bertrand Bellenot,; Rene Brun,; Philippe Canal,; Olivier Couet,; Kyle Cranmer,; Valeri Fine,; Leo Franco, ; Gerri Ganis,; Andrei Gheata,; Mihaela Gheata,; David Gonzalez Maline, ; Andreas Hoecker, ; Jan Iwaszkiewicz, ; Lukasz Janyst, ; Anna Kreshuk, ; Wim Lavrijsen,; Josef Leydold,; Sergei Linev,; An",MatchSource.DOCS,doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v522/index.html:613,Integrability,interface,interface,613,". ROOT Version 5.22/00 Release Notes. ROOT Version 5.22/00 Release Notes. ROOT version 5.22/00 has been released on December 18, 2008.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18 and version 5.20 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. http://root.cern.ch/root/Version521.html; Versions for AFS have also been updated. See the list of supported; platforms:; http://root.cern.ch/Welcome.html. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Ilka Antcheva,; Jean-Fran�ois Bastien, ; Bertrand Bellenot,; Rene Brun,; Philippe Canal,; Olivier Couet,; Kyle Cranmer,; Valeri Fine,; Leo Franco, ; Gerri Ganis,; Andrei Gheata,; Mihaela Gheata,; David Gonzalez Maline, ; Andreas Hoecker, ; Jan Iwaszkiewicz, ; Lukasz Janyst, ; Anna Kreshuk, ; Wim Lavrijsen,; Josef Leydold,; Sergei Linev,; An",MatchSource.DOCS,doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v522/index.html:639,Integrability,Interface,Interface,639,". ROOT Version 5.22/00 Release Notes. ROOT Version 5.22/00 Release Notes. ROOT version 5.22/00 has been released on December 18, 2008.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18 and version 5.20 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. http://root.cern.ch/root/Version521.html; Versions for AFS have also been updated. See the list of supported; platforms:; http://root.cern.ch/Welcome.html. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Ilka Antcheva,; Jean-Fran�ois Bastien, ; Bertrand Bellenot,; Rene Brun,; Philippe Canal,; Olivier Couet,; Kyle Cranmer,; Valeri Fine,; Leo Franco, ; Gerri Ganis,; Andrei Gheata,; Mihaela Gheata,; David Gonzalez Maline, ; Andreas Hoecker, ; Jan Iwaszkiewicz, ; Lukasz Janyst, ; Anna Kreshuk, ; Wim Lavrijsen,; Josef Leydold,; Sergei Linev,; An",MatchSource.DOCS,doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v522/index.html:1060,Integrability,interface,interfaces,1060,". ROOT Version 5.22/00 Release Notes. ROOT Version 5.22/00 Release Notes. ROOT version 5.22/00 has been released on December 18, 2008.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18 and version 5.20 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. http://root.cern.ch/root/Version521.html; Versions for AFS have also been updated. See the list of supported; platforms:; http://root.cern.ch/Welcome.html. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Ilka Antcheva,; Jean-Fran�ois Bastien, ; Bertrand Bellenot,; Rene Brun,; Philippe Canal,; Olivier Couet,; Kyle Cranmer,; Valeri Fine,; Leo Franco, ; Gerri Ganis,; Andrei Gheata,; Mihaela Gheata,; David Gonzalez Maline, ; Andreas Hoecker, ; Jan Iwaszkiewicz, ; Lukasz Janyst, ; Anna Kreshuk, ; Wim Lavrijsen,; Josef Leydold,; Sergei Linev,; An",MatchSource.DOCS,doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v522/index.html:1113,Integrability,protocol,protocols,1113,"n 5.16, 5.18 and version 5.20 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. http://root.cern.ch/root/Version521.html; Versions for AFS have also been updated. See the list of supported; platforms:; http://root.cern.ch/Welcome.html. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Ilka Antcheva,; Jean-Fran�ois Bastien, ; Bertrand Bellenot,; Rene Brun,; Philippe Canal,; Olivier Couet,; Kyle Cranmer,; Valeri Fine,; Leo Franco, ; Gerri Ganis,; Andrei Gheata,; Mihaela Gheata,; David Gonzalez Maline, ; Andreas Hoecker, ; Jan Iwaszkiewicz, ; Lukasz Janyst, ; Anna Kreshuk, ; Wim Lavrijsen,; Josef Leydold,; Sergei Linev,; Anar Manafov, ; Diego Marcos-Segura, ; Lorenzo Moneta,; Axel Naumann,; Eddy Offermann, ; Timur Pocheptsov,; Fons Rademakers,; Paul Russo, ; Gregory Schott,; Stefan Schmitt,; Alja Tadel, ; Matevz Tadel, ; Wouter Verkerke, ; Had",MatchSource.DOCS,doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v522/index.html:1142,Integrability,interface,interfaces,1142,"n 5.16, 5.18 and version 5.20 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. http://root.cern.ch/root/Version521.html; Versions for AFS have also been updated. See the list of supported; platforms:; http://root.cern.ch/Welcome.html. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Ilka Antcheva,; Jean-Fran�ois Bastien, ; Bertrand Bellenot,; Rene Brun,; Philippe Canal,; Olivier Couet,; Kyle Cranmer,; Valeri Fine,; Leo Franco, ; Gerri Ganis,; Andrei Gheata,; Mihaela Gheata,; David Gonzalez Maline, ; Andreas Hoecker, ; Jan Iwaszkiewicz, ; Lukasz Janyst, ; Anna Kreshuk, ; Wim Lavrijsen,; Josef Leydold,; Sergei Linev,; Anar Manafov, ; Diego Marcos-Segura, ; Lorenzo Moneta,; Axel Naumann,; Eddy Offermann, ; Timur Pocheptsov,; Fons Rademakers,; Paul Russo, ; Gregory Schott,; Stefan Schmitt,; Alja Tadel, ; Matevz Tadel, ; Wouter Verkerke, ; Had",MatchSource.DOCS,doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v522/index.html:1229,Integrability,interface,interfaces,1229,"n 5.16, 5.18 and version 5.20 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. http://root.cern.ch/root/Version521.html; Versions for AFS have also been updated. See the list of supported; platforms:; http://root.cern.ch/Welcome.html. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Ilka Antcheva,; Jean-Fran�ois Bastien, ; Bertrand Bellenot,; Rene Brun,; Philippe Canal,; Olivier Couet,; Kyle Cranmer,; Valeri Fine,; Leo Franco, ; Gerri Ganis,; Andrei Gheata,; Mihaela Gheata,; David Gonzalez Maline, ; Andreas Hoecker, ; Jan Iwaszkiewicz, ; Lukasz Janyst, ; Anna Kreshuk, ; Wim Lavrijsen,; Josef Leydold,; Sergei Linev,; Anar Manafov, ; Diego Marcos-Segura, ; Lorenzo Moneta,; Axel Naumann,; Eddy Offermann, ; Timur Pocheptsov,; Fons Rademakers,; Paul Russo, ; Gregory Schott,; Stefan Schmitt,; Alja Tadel, ; Matevz Tadel, ; Wouter Verkerke, ; Had",MatchSource.DOCS,doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v522/index.html:1127,Security,authenticat,authentication,1127,"n 5.16, 5.18 and version 5.20 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. http://root.cern.ch/root/Version521.html; Versions for AFS have also been updated. See the list of supported; platforms:; http://root.cern.ch/Welcome.html. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Ilka Antcheva,; Jean-Fran�ois Bastien, ; Bertrand Bellenot,; Rene Brun,; Philippe Canal,; Olivier Couet,; Kyle Cranmer,; Valeri Fine,; Leo Franco, ; Gerri Ganis,; Andrei Gheata,; Mihaela Gheata,; David Gonzalez Maline, ; Andreas Hoecker, ; Jan Iwaszkiewicz, ; Lukasz Janyst, ; Anna Kreshuk, ; Wim Lavrijsen,; Josef Leydold,; Sergei Linev,; Anar Manafov, ; Diego Marcos-Segura, ; Lorenzo Moneta,; Axel Naumann,; Eddy Offermann, ; Timur Pocheptsov,; Fons Rademakers,; Paul Russo, ; Gregory Schott,; Stefan Schmitt,; Alja Tadel, ; Matevz Tadel, ; Wouter Verkerke, ; Had",MatchSource.DOCS,doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v524/index.html:1380,Availability,avail,available,1380,"on, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. http://root.cern.ch/root/Version521.html; Versions for AFS have also been updated. See the list of supported; platforms:; http://root.cern.ch/Welcome.html. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Kevin Belasco, N/A, Princeton University for MCMC, ; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Or Cohen, CERN & Weizmann, TMVA; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU/Atlas, RooStats; Dominik Dannheim, MPI-Munich/Atlas, TMVA ; Valeri Fine, BNL/STAR,; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Mihaela Gheata, CERN/Alice,; David Gonzalez Maline, CERN/SFT, ; Roberto Gracia Del Ba�o, Universidad de Valencia, recorder, ; Andreas Hoecker, CERN/Atlas, TMVA ; Jan Iwaszkiewicz, CERN, ; Lukasz Janyst, CERN/IT, ; Anna Kreshuk, GSI, ; Wim Lavrijsen, LBNL, PyRoot; Alfio Lazzaro, Milano/AtlasMinuit; George Lewis, New York University/Atlas for SPlot, ; Josef Leydold",MatchSource.DOCS,doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v524/index.html:23,Deployability,Release,Release,23,". ROOT Version 5.24/00 Release Notes. ROOT Version 5.24/00 Release Notes. ROOT version 5.24/00 will be released end of June 2009.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18, 5.20 and version 5.22 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. http://root.cern.ch/root/Version521.html; Versions for AFS have also been updated. See the list of supported; platforms:; http://root.cern.ch/Welcome.html. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Kevin Belasco, N/A, Princeton University for MCMC, ; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Or Cohen, CERN & Weizmann, TMVA; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU/Atlas, RooStats; Dominik Dannheim, MPI-Munich/Atlas, TMVA ; Valeri Fine, BNL/STAR,; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; ",MatchSource.DOCS,doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v524/index.html:59,Deployability,Release,Release,59,". ROOT Version 5.24/00 Release Notes. ROOT Version 5.24/00 Release Notes. ROOT version 5.24/00 will be released end of June 2009.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18, 5.20 and version 5.22 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. http://root.cern.ch/root/Version521.html; Versions for AFS have also been updated. See the list of supported; platforms:; http://root.cern.ch/Welcome.html. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Kevin Belasco, N/A, Princeton University for MCMC, ; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Or Cohen, CERN & Weizmann, TMVA; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU/Atlas, RooStats; Dominik Dannheim, MPI-Munich/Atlas, TMVA ; Valeri Fine, BNL/STAR,; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; ",MatchSource.DOCS,doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v524/index.html:103,Deployability,release,released,103,". ROOT Version 5.24/00 Release Notes. ROOT Version 5.24/00 Release Notes. ROOT version 5.24/00 will be released end of June 2009.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18, 5.20 and version 5.22 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. http://root.cern.ch/root/Version521.html; Versions for AFS have also been updated. See the list of supported; platforms:; http://root.cern.ch/Welcome.html. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Kevin Belasco, N/A, Princeton University for MCMC, ; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Or Cohen, CERN & Weizmann, TMVA; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU/Atlas, RooStats; Dominik Dannheim, MPI-Munich/Atlas, TMVA ; Valeri Fine, BNL/STAR,; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; ",MatchSource.DOCS,doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v524/index.html:194,Deployability,release,releases,194,". ROOT Version 5.24/00 Release Notes. ROOT Version 5.24/00 Release Notes. ROOT version 5.24/00 will be released end of June 2009.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18, 5.20 and version 5.22 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. http://root.cern.ch/root/Version521.html; Versions for AFS have also been updated. See the list of supported; platforms:; http://root.cern.ch/Welcome.html. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Kevin Belasco, N/A, Princeton University for MCMC, ; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Or Cohen, CERN & Weizmann, TMVA; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU/Atlas, RooStats; Dominik Dannheim, MPI-Munich/Atlas, TMVA ; Valeri Fine, BNL/STAR,; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; ",MatchSource.DOCS,doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v524/index.html:1469,Deployability,update,updated,1469,"uilding, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. http://root.cern.ch/root/Version521.html; Versions for AFS have also been updated. See the list of supported; platforms:; http://root.cern.ch/Welcome.html. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Kevin Belasco, N/A, Princeton University for MCMC, ; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Or Cohen, CERN & Weizmann, TMVA; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU/Atlas, RooStats; Dominik Dannheim, MPI-Munich/Atlas, TMVA ; Valeri Fine, BNL/STAR,; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Mihaela Gheata, CERN/Alice,; David Gonzalez Maline, CERN/SFT, ; Roberto Gracia Del Ba�o, Universidad de Valencia, recorder, ; Andreas Hoecker, CERN/Atlas, TMVA ; Jan Iwaszkiewicz, CERN, ; Lukasz Janyst, CERN/IT, ; Anna Kreshuk, GSI, ; Wim Lavrijsen, LBNL, PyRoot; Alfio Lazzaro, Milano/AtlasMinuit; George Lewis, New York University/Atlas for SPlot, ; Josef Leydold, TU Vienna, Unuran; Sergei Linev, GSI,; Johan Lundberg, CERN/Atlas, class TRolke; Anar ",MatchSource.DOCS,doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v524/index.html:555,Integrability,interface,interface,555,". ROOT Version 5.24/00 Release Notes. ROOT Version 5.24/00 Release Notes. ROOT version 5.24/00 will be released end of June 2009.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18, 5.20 and version 5.22 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. http://root.cern.ch/root/Version521.html; Versions for AFS have also been updated. See the list of supported; platforms:; http://root.cern.ch/Welcome.html. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Kevin Belasco, N/A, Princeton University for MCMC, ; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Or Cohen, CERN & Weizmann, TMVA; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU/Atlas, RooStats; Dominik Dannheim, MPI-Munich/Atlas, TMVA ; Valeri Fine, BNL/STAR,; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; ",MatchSource.DOCS,doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v524/index.html:614,Integrability,interface,interface,614,". ROOT Version 5.24/00 Release Notes. ROOT Version 5.24/00 Release Notes. ROOT version 5.24/00 will be released end of June 2009.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18, 5.20 and version 5.22 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. http://root.cern.ch/root/Version521.html; Versions for AFS have also been updated. See the list of supported; platforms:; http://root.cern.ch/Welcome.html. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Kevin Belasco, N/A, Princeton University for MCMC, ; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Or Cohen, CERN & Weizmann, TMVA; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU/Atlas, RooStats; Dominik Dannheim, MPI-Munich/Atlas, TMVA ; Valeri Fine, BNL/STAR,; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; ",MatchSource.DOCS,doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v524/index.html:640,Integrability,Interface,Interface,640,". ROOT Version 5.24/00 Release Notes. ROOT Version 5.24/00 Release Notes. ROOT version 5.24/00 will be released end of June 2009.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18, 5.20 and version 5.22 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. http://root.cern.ch/root/Version521.html; Versions for AFS have also been updated. See the list of supported; platforms:; http://root.cern.ch/Welcome.html. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Kevin Belasco, N/A, Princeton University for MCMC, ; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Or Cohen, CERN & Weizmann, TMVA; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU/Atlas, RooStats; Dominik Dannheim, MPI-Munich/Atlas, TMVA ; Valeri Fine, BNL/STAR,; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; ",MatchSource.DOCS,doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v524/index.html:1061,Integrability,interface,interfaces,1061,". ROOT Version 5.24/00 Release Notes. ROOT Version 5.24/00 Release Notes. ROOT version 5.24/00 will be released end of June 2009.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18, 5.20 and version 5.22 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. http://root.cern.ch/root/Version521.html; Versions for AFS have also been updated. See the list of supported; platforms:; http://root.cern.ch/Welcome.html. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Kevin Belasco, N/A, Princeton University for MCMC, ; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Or Cohen, CERN & Weizmann, TMVA; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU/Atlas, RooStats; Dominik Dannheim, MPI-Munich/Atlas, TMVA ; Valeri Fine, BNL/STAR,; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; ",MatchSource.DOCS,doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v524/index.html:1114,Integrability,protocol,protocols,1114,", 5.18, 5.20 and version 5.22 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. http://root.cern.ch/root/Version521.html; Versions for AFS have also been updated. See the list of supported; platforms:; http://root.cern.ch/Welcome.html. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Kevin Belasco, N/A, Princeton University for MCMC, ; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Or Cohen, CERN & Weizmann, TMVA; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU/Atlas, RooStats; Dominik Dannheim, MPI-Munich/Atlas, TMVA ; Valeri Fine, BNL/STAR,; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Mihaela Gheata, CERN/Alice,; David Gonzalez Maline, CERN/SFT, ; Roberto Gracia Del Ba�o, Universidad de Valencia, recorder, ; Andreas Hoecker, CERN/Atlas, TMVA ; Jan Iwaszkiewicz, CERN, ; Lukasz Janyst, CERN/IT, ; Anna Kreshu",MatchSource.DOCS,doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v524/index.html:1143,Integrability,interface,interfaces,1143,", 5.18, 5.20 and version 5.22 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. http://root.cern.ch/root/Version521.html; Versions for AFS have also been updated. See the list of supported; platforms:; http://root.cern.ch/Welcome.html. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Kevin Belasco, N/A, Princeton University for MCMC, ; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Or Cohen, CERN & Weizmann, TMVA; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU/Atlas, RooStats; Dominik Dannheim, MPI-Munich/Atlas, TMVA ; Valeri Fine, BNL/STAR,; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Mihaela Gheata, CERN/Alice,; David Gonzalez Maline, CERN/SFT, ; Roberto Gracia Del Ba�o, Universidad de Valencia, recorder, ; Andreas Hoecker, CERN/Atlas, TMVA ; Jan Iwaszkiewicz, CERN, ; Lukasz Janyst, CERN/IT, ; Anna Kreshu",MatchSource.DOCS,doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v524/index.html:1230,Integrability,interface,interfaces,1230,", 5.18, 5.20 and version 5.22 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. http://root.cern.ch/root/Version521.html; Versions for AFS have also been updated. See the list of supported; platforms:; http://root.cern.ch/Welcome.html. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Kevin Belasco, N/A, Princeton University for MCMC, ; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Or Cohen, CERN & Weizmann, TMVA; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU/Atlas, RooStats; Dominik Dannheim, MPI-Munich/Atlas, TMVA ; Valeri Fine, BNL/STAR,; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Mihaela Gheata, CERN/Alice,; David Gonzalez Maline, CERN/SFT, ; Roberto Gracia Del Ba�o, Universidad de Valencia, recorder, ; Andreas Hoecker, CERN/Atlas, TMVA ; Jan Iwaszkiewicz, CERN, ; Lukasz Janyst, CERN/IT, ; Anna Kreshu",MatchSource.DOCS,doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v524/index.html:1128,Security,authenticat,authentication,1128,", 5.18, 5.20 and version 5.22 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. http://root.cern.ch/root/Version521.html; Versions for AFS have also been updated. See the list of supported; platforms:; http://root.cern.ch/Welcome.html. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Kevin Belasco, N/A, Princeton University for MCMC, ; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Or Cohen, CERN & Weizmann, TMVA; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU/Atlas, RooStats; Dominik Dannheim, MPI-Munich/Atlas, TMVA ; Valeri Fine, BNL/STAR,; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Mihaela Gheata, CERN/Alice,; David Gonzalez Maline, CERN/SFT, ; Roberto Gracia Del Ba�o, Universidad de Valencia, recorder, ; Andreas Hoecker, CERN/Atlas, TMVA ; Jan Iwaszkiewicz, CERN, ; Lukasz Janyst, CERN/IT, ; Anna Kreshu",MatchSource.DOCS,doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v526/index.html:67,Availability,Down,Download,67,". ROOT Version 5.26/00 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.26/00 Release Notes. ROOT version 5.26/00 will be released on December 15 2009.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18, 5.20, 5.22 and version 5.24 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52600/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Brian Bockelman, UNL,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU/Atlas, RooStats; Valeri Fine, BNL/STAR,; Lucie Flekova, CERN/SFT summer student,; Fabrizio Furano, CERN/IT, ; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Ali",MatchSource.DOCS,doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v526/index.html:110,Availability,Down,Download,110,". ROOT Version 5.26/00 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.26/00 Release Notes. ROOT version 5.26/00 will be released on December 15 2009.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18, 5.20, 5.22 and version 5.24 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52600/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Brian Bockelman, UNL,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU/Atlas, RooStats; Valeri Fine, BNL/STAR,; Lucie Flekova, CERN/SFT summer student,; Fabrizio Furano, CERN/IT, ; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Ali",MatchSource.DOCS,doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v526/index.html:1535,Availability,avail,available,1535,"he basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52600/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Brian Bockelman, UNL,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU/Atlas, RooStats; Valeri Fine, BNL/STAR,; Lucie Flekova, CERN/SFT summer student,; Fabrizio Furano, CERN/IT, ; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Mary-Louise Gill, CERN/SFT summer student,; David Gonzalez Maline, CERN/SFT, ; Andreas Hoecker, CERN/Atlas, TMVA ; Louis Höfler, ; Jan Iwaszkiewicz, CERN, ; Daniele Kruse, CERN, GDML; Wim Lavrijsen, LBNL, PyRoot; Alfio Lazzaro, Milano/AtlasMinuit; Sergei Linev, GSI,; Anar Manafov, GSI, ; Lorenzo Moneta, CERN/SFT,; Axel Naumann, CERN/SFT,; Eddy Offermann, Renaissance, ; Danilo Piparo, Karlsruhe/CMS, RooStats,; Timur Pocheptsov, JINR/Dubna,; Fons Rademakers, CERN/SFT,; Philip Rodrigues, Oxford, Doc,; Paul Russo,",MatchSource.DOCS,doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v526/index.html:23,Deployability,Release,Release,23,". ROOT Version 5.26/00 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.26/00 Release Notes. ROOT version 5.26/00 will be released on December 15 2009.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18, 5.20, 5.22 and version 5.24 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52600/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Brian Bockelman, UNL,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU/Atlas, RooStats; Valeri Fine, BNL/STAR,; Lucie Flekova, CERN/SFT summer student,; Fabrizio Furano, CERN/IT, ; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Ali",MatchSource.DOCS,doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v526/index.html:122,Deployability,Release,Release,122,". ROOT Version 5.26/00 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.26/00 Release Notes. ROOT version 5.26/00 will be released on December 15 2009.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18, 5.20, 5.22 and version 5.24 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52600/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Brian Bockelman, UNL,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU/Atlas, RooStats; Valeri Fine, BNL/STAR,; Lucie Flekova, CERN/SFT summer student,; Fabrizio Furano, CERN/IT, ; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Ali",MatchSource.DOCS,doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v526/index.html:158,Deployability,Release,Release,158,". ROOT Version 5.26/00 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.26/00 Release Notes. ROOT version 5.26/00 will be released on December 15 2009.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18, 5.20, 5.22 and version 5.24 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52600/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Brian Bockelman, UNL,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU/Atlas, RooStats; Valeri Fine, BNL/STAR,; Lucie Flekova, CERN/SFT summer student,; Fabrizio Furano, CERN/IT, ; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Ali",MatchSource.DOCS,doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v526/index.html:202,Deployability,release,released,202,". ROOT Version 5.26/00 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.26/00 Release Notes. ROOT version 5.26/00 will be released on December 15 2009.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18, 5.20, 5.22 and version 5.24 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52600/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Brian Bockelman, UNL,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU/Atlas, RooStats; Valeri Fine, BNL/STAR,; Lucie Flekova, CERN/SFT summer student,; Fabrizio Furano, CERN/IT, ; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Ali",MatchSource.DOCS,doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v526/index.html:296,Deployability,release,releases,296,". ROOT Version 5.26/00 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.26/00 Release Notes. ROOT version 5.26/00 will be released on December 15 2009.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18, 5.20, 5.22 and version 5.24 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52600/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Brian Bockelman, UNL,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU/Atlas, RooStats; Valeri Fine, BNL/STAR,; Lucie Flekova, CERN/SFT summer student,; Fabrizio Furano, CERN/IT, ; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Ali",MatchSource.DOCS,doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v526/index.html:1568,Deployability,release,releases,1568,"enting and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52600/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Brian Bockelman, UNL,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU/Atlas, RooStats; Valeri Fine, BNL/STAR,; Lucie Flekova, CERN/SFT summer student,; Fabrizio Furano, CERN/IT, ; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Mary-Louise Gill, CERN/SFT summer student,; David Gonzalez Maline, CERN/SFT, ; Andreas Hoecker, CERN/Atlas, TMVA ; Louis Höfler, ; Jan Iwaszkiewicz, CERN, ; Daniele Kruse, CERN, GDML; Wim Lavrijsen, LBNL, PyRoot; Alfio Lazzaro, Milano/AtlasMinuit; Sergei Linev, GSI,; Anar Manafov, GSI, ; Lorenzo Moneta, CERN/SFT,; Axel Naumann, CERN/SFT,; Eddy Offermann, Renaissance, ; Danilo Piparo, Karlsruhe/CMS, RooStats,; Timur Pocheptsov, JINR/Dubna,; Fons Rademakers, CERN/SFT,; Philip Rodrigues, Oxford, Doc,; Paul Russo, FNAL, ; Gregory Schott, Karlsruhe/CMS, RooStats, ; Tomas",MatchSource.DOCS,doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v526/index.html:1577,Deployability,release,release-,1577,"enting and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52600/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Brian Bockelman, UNL,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU/Atlas, RooStats; Valeri Fine, BNL/STAR,; Lucie Flekova, CERN/SFT summer student,; Fabrizio Furano, CERN/IT, ; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Mary-Louise Gill, CERN/SFT summer student,; David Gonzalez Maline, CERN/SFT, ; Andreas Hoecker, CERN/Atlas, TMVA ; Louis Höfler, ; Jan Iwaszkiewicz, CERN, ; Daniele Kruse, CERN, GDML; Wim Lavrijsen, LBNL, PyRoot; Alfio Lazzaro, Milano/AtlasMinuit; Sergei Linev, GSI,; Anar Manafov, GSI, ; Lorenzo Moneta, CERN/SFT,; Axel Naumann, CERN/SFT,; Eddy Offermann, Renaissance, ; Danilo Piparo, Karlsruhe/CMS, RooStats,; Timur Pocheptsov, JINR/Dubna,; Fons Rademakers, CERN/SFT,; Philip Rodrigues, Oxford, Doc,; Paul Russo, FNAL, ; Gregory Schott, Karlsruhe/CMS, RooStats, ; Tomas",MatchSource.DOCS,doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v526/index.html:663,Integrability,interface,interface,663,". ROOT Version 5.26/00 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.26/00 Release Notes. ROOT version 5.26/00 will be released on December 15 2009.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18, 5.20, 5.22 and version 5.24 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52600/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Brian Bockelman, UNL,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU/Atlas, RooStats; Valeri Fine, BNL/STAR,; Lucie Flekova, CERN/SFT summer student,; Fabrizio Furano, CERN/IT, ; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Ali",MatchSource.DOCS,doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v526/index.html:722,Integrability,interface,interface,722,". ROOT Version 5.26/00 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.26/00 Release Notes. ROOT version 5.26/00 will be released on December 15 2009.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18, 5.20, 5.22 and version 5.24 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52600/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Brian Bockelman, UNL,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU/Atlas, RooStats; Valeri Fine, BNL/STAR,; Lucie Flekova, CERN/SFT summer student,; Fabrizio Furano, CERN/IT, ; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Ali",MatchSource.DOCS,doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v526/index.html:748,Integrability,Interface,Interface,748,". ROOT Version 5.26/00 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.26/00 Release Notes. ROOT version 5.26/00 will be released on December 15 2009.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18, 5.20, 5.22 and version 5.24 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52600/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Brian Bockelman, UNL,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU/Atlas, RooStats; Valeri Fine, BNL/STAR,; Lucie Flekova, CERN/SFT summer student,; Fabrizio Furano, CERN/IT, ; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Ali",MatchSource.DOCS,doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v526/index.html:1169,Integrability,interface,interfaces,1169,". ROOT Version 5.26/00 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.26/00 Release Notes. ROOT version 5.26/00 will be released on December 15 2009.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18, 5.20, 5.22 and version 5.24 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52600/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Brian Bockelman, UNL,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU/Atlas, RooStats; Valeri Fine, BNL/STAR,; Lucie Flekova, CERN/SFT summer student,; Fabrizio Furano, CERN/IT, ; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Ali",MatchSource.DOCS,doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v526/index.html:1222,Integrability,protocol,protocols,1222," 5.24 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52600/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Brian Bockelman, UNL,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU/Atlas, RooStats; Valeri Fine, BNL/STAR,; Lucie Flekova, CERN/SFT summer student,; Fabrizio Furano, CERN/IT, ; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Mary-Louise Gill, CERN/SFT summer student,; David Gonzalez Maline, CERN/SFT, ; Andreas Hoecker, CERN/Atlas, TMVA ; Louis Höfler, ; Jan Iwaszkiewicz, CERN, ; Daniele Kruse, CERN, GDML; Wim Lavrijsen, LBNL, PyRoot; Alfio Lazzaro, Milano/AtlasMinuit; Sergei Linev, GSI,; Anar Manafov, GSI, ; Lorenzo Moneta, CERN/SFT,; Axel Naumann, CERN/SFT,; Eddy Offer",MatchSource.DOCS,doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v526/index.html:1251,Integrability,interface,interfaces,1251," 5.24 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52600/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Brian Bockelman, UNL,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU/Atlas, RooStats; Valeri Fine, BNL/STAR,; Lucie Flekova, CERN/SFT summer student,; Fabrizio Furano, CERN/IT, ; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Mary-Louise Gill, CERN/SFT summer student,; David Gonzalez Maline, CERN/SFT, ; Andreas Hoecker, CERN/Atlas, TMVA ; Louis Höfler, ; Jan Iwaszkiewicz, CERN, ; Daniele Kruse, CERN, GDML; Wim Lavrijsen, LBNL, PyRoot; Alfio Lazzaro, Milano/AtlasMinuit; Sergei Linev, GSI,; Anar Manafov, GSI, ; Lorenzo Moneta, CERN/SFT,; Axel Naumann, CERN/SFT,; Eddy Offer",MatchSource.DOCS,doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v526/index.html:1385,Integrability,interface,interfaces,1385," 5.24 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52600/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Brian Bockelman, UNL,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU/Atlas, RooStats; Valeri Fine, BNL/STAR,; Lucie Flekova, CERN/SFT summer student,; Fabrizio Furano, CERN/IT, ; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Mary-Louise Gill, CERN/SFT summer student,; David Gonzalez Maline, CERN/SFT, ; Andreas Hoecker, CERN/Atlas, TMVA ; Louis Höfler, ; Jan Iwaszkiewicz, CERN, ; Daniele Kruse, CERN, GDML; Wim Lavrijsen, LBNL, PyRoot; Alfio Lazzaro, Milano/AtlasMinuit; Sergei Linev, GSI,; Anar Manafov, GSI, ; Lorenzo Moneta, CERN/SFT,; Axel Naumann, CERN/SFT,; Eddy Offer",MatchSource.DOCS,doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v526/index.html:1236,Security,authenticat,authentication,1236," 5.24 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52600/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Brian Bockelman, UNL,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU/Atlas, RooStats; Valeri Fine, BNL/STAR,; Lucie Flekova, CERN/SFT summer student,; Fabrizio Furano, CERN/IT, ; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Mary-Louise Gill, CERN/SFT summer student,; David Gonzalez Maline, CERN/SFT, ; Andreas Hoecker, CERN/Atlas, TMVA ; Louis Höfler, ; Jan Iwaszkiewicz, CERN, ; Daniele Kruse, CERN, GDML; Wim Lavrijsen, LBNL, PyRoot; Alfio Lazzaro, Milano/AtlasMinuit; Sergei Linev, GSI,; Anar Manafov, GSI, ; Lorenzo Moneta, CERN/SFT,; Axel Naumann, CERN/SFT,; Eddy Offer",MatchSource.DOCS,doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v526/index.html:87,Usability,Guid,Guide,87,". ROOT Version 5.26/00 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.26/00 Release Notes. ROOT version 5.26/00 will be released on December 15 2009.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18, 5.20, 5.22 and version 5.24 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52600/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Brian Bockelman, UNL,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU/Atlas, RooStats; Valeri Fine, BNL/STAR,; Lucie Flekova, CERN/SFT summer student,; Fabrizio Furano, CERN/IT, ; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Ali",MatchSource.DOCS,doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v528/index.html:67,Availability,Down,Download,67,". ROOT Version 5.28/00 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.28/00 Release Notes. ROOT version 5.28/00 has been released on December 15 2010.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18, 5.20, 5.22, 5.24 and version 5.26 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52800/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Alberto Annovi, INFN, TH1, ; Kevin Belasco, Princeton University, RooStats,; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Jason Detwiler, LBL, TClonesArray, ; Valeri Fine, BNL/",MatchSource.DOCS,doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v528/index.html:110,Availability,Down,Download,110,". ROOT Version 5.28/00 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.28/00 Release Notes. ROOT version 5.28/00 has been released on December 15 2010.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18, 5.20, 5.22, 5.24 and version 5.26 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52800/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Alberto Annovi, INFN, TH1, ; Kevin Belasco, Princeton University, RooStats,; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Jason Detwiler, LBL, TClonesArray, ; Valeri Fine, BNL/",MatchSource.DOCS,doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v528/index.html:1572,Availability,avail,available,1572,"eometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52800/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Alberto Annovi, INFN, TH1, ; Kevin Belasco, Princeton University, RooStats,; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Jason Detwiler, LBL, TClonesArray, ; Valeri Fine, BNL/STAR,; Fabrizio Furano, CERN/IT, ; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Oleksandr Grebenyuk, GSI, TLatex, TPostScript, ; Christian Gumpert, CERN and University Dresden, TEfficiency ; Bill Heintzelman, UPENN, TTree, ; Andreas Hoecker, CERN/Atlas, TMVA, ; Pierre Juillot, IN2P3, PostScript, ; Folkert Koetsveld, Nijmegen, RooFit, ; Alex Koutsman, Nikhef, RooFit, ; Sven Kreiss, NYU, RooStats, ; Wim Lavrijsen, LBNL, PyRoot,; Sergei Linev, GSI,; Benno List, Desy, MathCore and MathMore, ; Anar Manafov, GSI, ; Mike Marino, TUM, pyroot/tutorials;",MatchSource.DOCS,doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v528/index.html:23,Deployability,Release,Release,23,". ROOT Version 5.28/00 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.28/00 Release Notes. ROOT version 5.28/00 has been released on December 15 2010.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18, 5.20, 5.22, 5.24 and version 5.26 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52800/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Alberto Annovi, INFN, TH1, ; Kevin Belasco, Princeton University, RooStats,; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Jason Detwiler, LBL, TClonesArray, ; Valeri Fine, BNL/",MatchSource.DOCS,doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v528/index.html:122,Deployability,Release,Release,122,". ROOT Version 5.28/00 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.28/00 Release Notes. ROOT version 5.28/00 has been released on December 15 2010.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18, 5.20, 5.22, 5.24 and version 5.26 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52800/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Alberto Annovi, INFN, TH1, ; Kevin Belasco, Princeton University, RooStats,; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Jason Detwiler, LBL, TClonesArray, ; Valeri Fine, BNL/",MatchSource.DOCS,doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v528/index.html:158,Deployability,Release,Release,158,". ROOT Version 5.28/00 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.28/00 Release Notes. ROOT version 5.28/00 has been released on December 15 2010.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18, 5.20, 5.22, 5.24 and version 5.26 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52800/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Alberto Annovi, INFN, TH1, ; Kevin Belasco, Princeton University, RooStats,; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Jason Detwiler, LBL, TClonesArray, ; Valeri Fine, BNL/",MatchSource.DOCS,doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v528/index.html:203,Deployability,release,released,203,". ROOT Version 5.28/00 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.28/00 Release Notes. ROOT version 5.28/00 has been released on December 15 2010.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18, 5.20, 5.22, 5.24 and version 5.26 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52800/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Alberto Annovi, INFN, TH1, ; Kevin Belasco, Princeton University, RooStats,; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Jason Detwiler, LBL, TClonesArray, ; Valeri Fine, BNL/",MatchSource.DOCS,doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v528/index.html:297,Deployability,release,releases,297,". ROOT Version 5.28/00 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.28/00 Release Notes. ROOT version 5.28/00 has been released on December 15 2010.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18, 5.20, 5.22, 5.24 and version 5.26 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52800/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Alberto Annovi, INFN, TH1, ; Kevin Belasco, Princeton University, RooStats,; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Jason Detwiler, LBL, TClonesArray, ; Valeri Fine, BNL/",MatchSource.DOCS,doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v528/index.html:1605,Deployability,release,releases,1605," objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52800/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Alberto Annovi, INFN, TH1, ; Kevin Belasco, Princeton University, RooStats,; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Jason Detwiler, LBL, TClonesArray, ; Valeri Fine, BNL/STAR,; Fabrizio Furano, CERN/IT, ; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Oleksandr Grebenyuk, GSI, TLatex, TPostScript, ; Christian Gumpert, CERN and University Dresden, TEfficiency ; Bill Heintzelman, UPENN, TTree, ; Andreas Hoecker, CERN/Atlas, TMVA, ; Pierre Juillot, IN2P3, PostScript, ; Folkert Koetsveld, Nijmegen, RooFit, ; Alex Koutsman, Nikhef, RooFit, ; Sven Kreiss, NYU, RooStats, ; Wim Lavrijsen, LBNL, PyRoot,; Sergei Linev, GSI,; Benno List, Desy, MathCore and MathMore, ; Anar Manafov, GSI, ; Mike Marino, TUM, pyroot/tutorials; Ramon Medrano Llamas, University of Oviedo, PROOF ; Biag",MatchSource.DOCS,doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v528/index.html:1614,Deployability,release,release-,1614," objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52800/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Alberto Annovi, INFN, TH1, ; Kevin Belasco, Princeton University, RooStats,; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Jason Detwiler, LBL, TClonesArray, ; Valeri Fine, BNL/STAR,; Fabrizio Furano, CERN/IT, ; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Oleksandr Grebenyuk, GSI, TLatex, TPostScript, ; Christian Gumpert, CERN and University Dresden, TEfficiency ; Bill Heintzelman, UPENN, TTree, ; Andreas Hoecker, CERN/Atlas, TMVA, ; Pierre Juillot, IN2P3, PostScript, ; Folkert Koetsveld, Nijmegen, RooFit, ; Alex Koutsman, Nikhef, RooFit, ; Sven Kreiss, NYU, RooStats, ; Wim Lavrijsen, LBNL, PyRoot,; Sergei Linev, GSI,; Benno List, Desy, MathCore and MathMore, ; Anar Manafov, GSI, ; Mike Marino, TUM, pyroot/tutorials; Ramon Medrano Llamas, University of Oviedo, PROOF ; Biag",MatchSource.DOCS,doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v528/index.html:670,Integrability,interface,interface,670,". ROOT Version 5.28/00 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.28/00 Release Notes. ROOT version 5.28/00 has been released on December 15 2010.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18, 5.20, 5.22, 5.24 and version 5.26 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52800/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Alberto Annovi, INFN, TH1, ; Kevin Belasco, Princeton University, RooStats,; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Jason Detwiler, LBL, TClonesArray, ; Valeri Fine, BNL/",MatchSource.DOCS,doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v528/index.html:729,Integrability,interface,interface,729,". ROOT Version 5.28/00 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.28/00 Release Notes. ROOT version 5.28/00 has been released on December 15 2010.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18, 5.20, 5.22, 5.24 and version 5.26 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52800/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Alberto Annovi, INFN, TH1, ; Kevin Belasco, Princeton University, RooStats,; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Jason Detwiler, LBL, TClonesArray, ; Valeri Fine, BNL/",MatchSource.DOCS,doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v528/index.html:755,Integrability,Interface,Interface,755,". ROOT Version 5.28/00 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.28/00 Release Notes. ROOT version 5.28/00 has been released on December 15 2010.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18, 5.20, 5.22, 5.24 and version 5.26 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52800/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Alberto Annovi, INFN, TH1, ; Kevin Belasco, Princeton University, RooStats,; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Jason Detwiler, LBL, TClonesArray, ; Valeri Fine, BNL/",MatchSource.DOCS,doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v528/index.html:1176,Integrability,interface,interfaces,1176,". ROOT Version 5.28/00 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.28/00 Release Notes. ROOT version 5.28/00 has been released on December 15 2010.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18, 5.20, 5.22, 5.24 and version 5.26 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52800/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Alberto Annovi, INFN, TH1, ; Kevin Belasco, Princeton University, RooStats,; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Jason Detwiler, LBL, TClonesArray, ; Valeri Fine, BNL/",MatchSource.DOCS,doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v528/index.html:1229,Integrability,protocol,protocols,1229,"on to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52800/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Alberto Annovi, INFN, TH1, ; Kevin Belasco, Princeton University, RooStats,; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Jason Detwiler, LBL, TClonesArray, ; Valeri Fine, BNL/STAR,; Fabrizio Furano, CERN/IT, ; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Oleksandr Grebenyuk, GSI, TLatex, TPostScript, ; Christian Gumpert, CERN and University Dresden, TEfficiency ; Bill Heintzelman, UPENN, TTree, ; Andreas Hoecker, CERN/Atlas, TMVA, ; Pierre Juillot, IN2P3, PostScript, ; Folkert Koetsveld, Nijmegen, RooFit, ; Alex Koutsman, Nikhef, RooFit, ; ",MatchSource.DOCS,doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v528/index.html:1258,Integrability,interface,interfaces,1258,"on to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52800/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Alberto Annovi, INFN, TH1, ; Kevin Belasco, Princeton University, RooStats,; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Jason Detwiler, LBL, TClonesArray, ; Valeri Fine, BNL/STAR,; Fabrizio Furano, CERN/IT, ; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Oleksandr Grebenyuk, GSI, TLatex, TPostScript, ; Christian Gumpert, CERN and University Dresden, TEfficiency ; Bill Heintzelman, UPENN, TTree, ; Andreas Hoecker, CERN/Atlas, TMVA, ; Pierre Juillot, IN2P3, PostScript, ; Folkert Koetsveld, Nijmegen, RooFit, ; Alex Koutsman, Nikhef, RooFit, ; ",MatchSource.DOCS,doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v528/index.html:1392,Integrability,interface,interfaces,1392,"on to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52800/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Alberto Annovi, INFN, TH1, ; Kevin Belasco, Princeton University, RooStats,; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Jason Detwiler, LBL, TClonesArray, ; Valeri Fine, BNL/STAR,; Fabrizio Furano, CERN/IT, ; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Oleksandr Grebenyuk, GSI, TLatex, TPostScript, ; Christian Gumpert, CERN and University Dresden, TEfficiency ; Bill Heintzelman, UPENN, TTree, ; Andreas Hoecker, CERN/Atlas, TMVA, ; Pierre Juillot, IN2P3, PostScript, ; Folkert Koetsveld, Nijmegen, RooFit, ; Alex Koutsman, Nikhef, RooFit, ; ",MatchSource.DOCS,doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v528/index.html:1243,Security,authenticat,authentication,1243,"on to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52800/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Alberto Annovi, INFN, TH1, ; Kevin Belasco, Princeton University, RooStats,; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Jason Detwiler, LBL, TClonesArray, ; Valeri Fine, BNL/STAR,; Fabrizio Furano, CERN/IT, ; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Oleksandr Grebenyuk, GSI, TLatex, TPostScript, ; Christian Gumpert, CERN and University Dresden, TEfficiency ; Bill Heintzelman, UPENN, TTree, ; Andreas Hoecker, CERN/Atlas, TMVA, ; Pierre Juillot, IN2P3, PostScript, ; Folkert Koetsveld, Nijmegen, RooFit, ; Alex Koutsman, Nikhef, RooFit, ; ",MatchSource.DOCS,doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v528/index.html:87,Usability,Guid,Guide,87,". ROOT Version 5.28/00 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.28/00 Release Notes. ROOT version 5.28/00 has been released on December 15 2010.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18, 5.20, 5.22, 5.24 and version 5.26 in addition to these notes. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52800/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Alberto Annovi, INFN, TH1, ; Kevin Belasco, Princeton University, RooStats,; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Jason Detwiler, LBL, TClonesArray, ; Valeri Fine, BNL/",MatchSource.DOCS,doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v530/index.html:67,Availability,Down,Download,67,". ROOT Version 5.30/00 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.30/00 Release Notes. ROOT version 5.28/00 has been released on December 15 2010.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18, 5.20, 5.22, 5.24, 5,26 and version 5.28 in addition to these notes. The release of version 5.30 is scheduled for June 27, 2011. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52800/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Dario Berzano, INFN and University of Torino, ALICE, Proof,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Gerr",MatchSource.DOCS,doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v530/index.html:110,Availability,Down,Download,110,". ROOT Version 5.30/00 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.30/00 Release Notes. ROOT version 5.28/00 has been released on December 15 2010.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18, 5.20, 5.22, 5.24, 5,26 and version 5.28 in addition to these notes. The release of version 5.30 is scheduled for June 27, 2011. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52800/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Dario Berzano, INFN and University of Torino, ALICE, Proof,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Gerr",MatchSource.DOCS,doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v530/index.html:1638,Availability,avail,available,1638,", 2011. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52800/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Dario Berzano, INFN and University of Torino, ALICE, Proof,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Wim Lavrijsen, LBNL, PyRoot,; Sergei Linev, GSI,; Lorenzo Moneta, CERN/SFT,; Axel Naumann, CERN/SFT,; Eddy Offermann, Renaissance, ; Bartolomeu Rabacal, CERN/ADL, Math, ; Fons Rademakers, CERN/SFT,; Paul Russo, FNAL, ; Joerg Stelzer, DESY/Atlas, TMVA, ; Alja Tadel, UCSD/CMS, Eve, ; Matevz Tadel, UCSD/CMS, Eve, ; Eckhard von Toerne, University Bonn, ATLAS, TMVA, ; Wouter Verkerke, NIKHEF/Atlas, RooFit, . ",MatchSource.DOCS,doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v530/index.html:23,Deployability,Release,Release,23,". ROOT Version 5.30/00 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.30/00 Release Notes. ROOT version 5.28/00 has been released on December 15 2010.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18, 5.20, 5.22, 5.24, 5,26 and version 5.28 in addition to these notes. The release of version 5.30 is scheduled for June 27, 2011. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52800/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Dario Berzano, INFN and University of Torino, ALICE, Proof,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Gerr",MatchSource.DOCS,doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v530/index.html:122,Deployability,Release,Release,122,". ROOT Version 5.30/00 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.30/00 Release Notes. ROOT version 5.28/00 has been released on December 15 2010.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18, 5.20, 5.22, 5.24, 5,26 and version 5.28 in addition to these notes. The release of version 5.30 is scheduled for June 27, 2011. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52800/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Dario Berzano, INFN and University of Torino, ALICE, Proof,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Gerr",MatchSource.DOCS,doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v530/index.html:158,Deployability,Release,Release,158,". ROOT Version 5.30/00 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.30/00 Release Notes. ROOT version 5.28/00 has been released on December 15 2010.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18, 5.20, 5.22, 5.24, 5,26 and version 5.28 in addition to these notes. The release of version 5.30 is scheduled for June 27, 2011. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52800/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Dario Berzano, INFN and University of Torino, ALICE, Proof,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Gerr",MatchSource.DOCS,doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v530/index.html:203,Deployability,release,released,203,". ROOT Version 5.30/00 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.30/00 Release Notes. ROOT version 5.28/00 has been released on December 15 2010.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18, 5.20, 5.22, 5.24, 5,26 and version 5.28 in addition to these notes. The release of version 5.30 is scheduled for June 27, 2011. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52800/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Dario Berzano, INFN and University of Torino, ALICE, Proof,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Gerr",MatchSource.DOCS,doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v530/index.html:297,Deployability,release,releases,297,". ROOT Version 5.30/00 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.30/00 Release Notes. ROOT version 5.28/00 has been released on December 15 2010.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18, 5.20, 5.22, 5.24, 5,26 and version 5.28 in addition to these notes. The release of version 5.30 is scheduled for June 27, 2011. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52800/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Dario Berzano, INFN and University of Torino, ALICE, Proof,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Gerr",MatchSource.DOCS,doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v530/index.html:408,Deployability,release,release,408,". ROOT Version 5.30/00 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.30/00 Release Notes. ROOT version 5.28/00 has been released on December 15 2010.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18, 5.20, 5.22, 5.24, 5,26 and version 5.28 in addition to these notes. The release of version 5.30 is scheduled for June 27, 2011. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52800/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Dario Berzano, INFN and University of Torino, ALICE, Proof,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Gerr",MatchSource.DOCS,doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v530/index.html:1671,Deployability,release,releases,1671,", 2011. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52800/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Dario Berzano, INFN and University of Torino, ALICE, Proof,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Wim Lavrijsen, LBNL, PyRoot,; Sergei Linev, GSI,; Lorenzo Moneta, CERN/SFT,; Axel Naumann, CERN/SFT,; Eddy Offermann, Renaissance, ; Bartolomeu Rabacal, CERN/ADL, Math, ; Fons Rademakers, CERN/SFT,; Paul Russo, FNAL, ; Joerg Stelzer, DESY/Atlas, TMVA, ; Alja Tadel, UCSD/CMS, Eve, ; Matevz Tadel, UCSD/CMS, Eve, ; Eckhard von Toerne, University Bonn, ATLAS, TMVA, ; Wouter Verkerke, NIKHEF/Atlas, RooFit, . ",MatchSource.DOCS,doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v530/index.html:1680,Deployability,release,release-,1680,", 2011. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52800/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Dario Berzano, INFN and University of Torino, ALICE, Proof,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Wim Lavrijsen, LBNL, PyRoot,; Sergei Linev, GSI,; Lorenzo Moneta, CERN/SFT,; Axel Naumann, CERN/SFT,; Eddy Offermann, Renaissance, ; Bartolomeu Rabacal, CERN/ADL, Math, ; Fons Rademakers, CERN/SFT,; Paul Russo, FNAL, ; Joerg Stelzer, DESY/Atlas, TMVA, ; Alja Tadel, UCSD/CMS, Eve, ; Matevz Tadel, UCSD/CMS, Eve, ; Eckhard von Toerne, University Bonn, ATLAS, TMVA, ; Wouter Verkerke, NIKHEF/Atlas, RooFit, . ",MatchSource.DOCS,doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v530/index.html:435,Energy Efficiency,schedul,scheduled,435,". ROOT Version 5.30/00 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.30/00 Release Notes. ROOT version 5.28/00 has been released on December 15 2010.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18, 5.20, 5.22, 5.24, 5,26 and version 5.28 in addition to these notes. The release of version 5.30 is scheduled for June 27, 2011. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52800/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Dario Berzano, INFN and University of Torino, ALICE, Proof,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Gerr",MatchSource.DOCS,doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v530/index.html:736,Integrability,interface,interface,736,". ROOT Version 5.30/00 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.30/00 Release Notes. ROOT version 5.28/00 has been released on December 15 2010.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18, 5.20, 5.22, 5.24, 5,26 and version 5.28 in addition to these notes. The release of version 5.30 is scheduled for June 27, 2011. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52800/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Dario Berzano, INFN and University of Torino, ALICE, Proof,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Gerr",MatchSource.DOCS,doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v530/index.html:795,Integrability,interface,interface,795,". ROOT Version 5.30/00 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.30/00 Release Notes. ROOT version 5.28/00 has been released on December 15 2010.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18, 5.20, 5.22, 5.24, 5,26 and version 5.28 in addition to these notes. The release of version 5.30 is scheduled for June 27, 2011. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52800/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Dario Berzano, INFN and University of Torino, ALICE, Proof,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Gerr",MatchSource.DOCS,doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v530/index.html:821,Integrability,Interface,Interface,821,". ROOT Version 5.30/00 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.30/00 Release Notes. ROOT version 5.28/00 has been released on December 15 2010.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18, 5.20, 5.22, 5.24, 5,26 and version 5.28 in addition to these notes. The release of version 5.30 is scheduled for June 27, 2011. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52800/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Dario Berzano, INFN and University of Torino, ALICE, Proof,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Gerr",MatchSource.DOCS,doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v530/index.html:1242,Integrability,interface,interfaces,1242,". ROOT Version 5.30/00 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.30/00 Release Notes. ROOT version 5.28/00 has been released on December 15 2010.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18, 5.20, 5.22, 5.24, 5,26 and version 5.28 in addition to these notes. The release of version 5.30 is scheduled for June 27, 2011. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52800/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Dario Berzano, INFN and University of Torino, ALICE, Proof,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Gerr",MatchSource.DOCS,doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v530/index.html:1295,Integrability,protocol,protocols,1295,"for June 27, 2011. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52800/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Dario Berzano, INFN and University of Torino, ALICE, Proof,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Wim Lavrijsen, LBNL, PyRoot,; Sergei Linev, GSI,; Lorenzo Moneta, CERN/SFT,; Axel Naumann, CERN/SFT,; Eddy Offermann, Renaissance, ; Bartolomeu Rabacal, CERN/ADL, Math, ; Fons Rademakers, CERN/SFT,; Paul Russo, FNAL, ; Joerg Stelzer, DESY/Atlas, TMVA, ; Alja Tadel, UCSD/CMS, Eve, ; Matevz Tadel, UCSD/CMS, Eve, ; Eckhard von Toerne, University Bonn, ATLAS, TMVA, ; Wouter Verkerke, NIKHEF/Atlas,",MatchSource.DOCS,doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v530/index.html:1324,Integrability,interface,interfaces,1324,"for June 27, 2011. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52800/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Dario Berzano, INFN and University of Torino, ALICE, Proof,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Wim Lavrijsen, LBNL, PyRoot,; Sergei Linev, GSI,; Lorenzo Moneta, CERN/SFT,; Axel Naumann, CERN/SFT,; Eddy Offermann, Renaissance, ; Bartolomeu Rabacal, CERN/ADL, Math, ; Fons Rademakers, CERN/SFT,; Paul Russo, FNAL, ; Joerg Stelzer, DESY/Atlas, TMVA, ; Alja Tadel, UCSD/CMS, Eve, ; Matevz Tadel, UCSD/CMS, Eve, ; Eckhard von Toerne, University Bonn, ATLAS, TMVA, ; Wouter Verkerke, NIKHEF/Atlas,",MatchSource.DOCS,doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v530/index.html:1458,Integrability,interface,interfaces,1458,"for June 27, 2011. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52800/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Dario Berzano, INFN and University of Torino, ALICE, Proof,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Wim Lavrijsen, LBNL, PyRoot,; Sergei Linev, GSI,; Lorenzo Moneta, CERN/SFT,; Axel Naumann, CERN/SFT,; Eddy Offermann, Renaissance, ; Bartolomeu Rabacal, CERN/ADL, Math, ; Fons Rademakers, CERN/SFT,; Paul Russo, FNAL, ; Joerg Stelzer, DESY/Atlas, TMVA, ; Alja Tadel, UCSD/CMS, Eve, ; Matevz Tadel, UCSD/CMS, Eve, ; Eckhard von Toerne, University Bonn, ATLAS, TMVA, ; Wouter Verkerke, NIKHEF/Atlas,",MatchSource.DOCS,doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v530/index.html:1309,Security,authenticat,authentication,1309,"for June 27, 2011. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52800/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Dario Berzano, INFN and University of Torino, ALICE, Proof,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Wim Lavrijsen, LBNL, PyRoot,; Sergei Linev, GSI,; Lorenzo Moneta, CERN/SFT,; Axel Naumann, CERN/SFT,; Eddy Offermann, Renaissance, ; Bartolomeu Rabacal, CERN/ADL, Math, ; Fons Rademakers, CERN/SFT,; Paul Russo, FNAL, ; Joerg Stelzer, DESY/Atlas, TMVA, ; Alja Tadel, UCSD/CMS, Eve, ; Matevz Tadel, UCSD/CMS, Eve, ; Eckhard von Toerne, University Bonn, ATLAS, TMVA, ; Wouter Verkerke, NIKHEF/Atlas,",MatchSource.DOCS,doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v530/index.html:87,Usability,Guid,Guide,87,". ROOT Version 5.30/00 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.30/00 Release Notes. ROOT version 5.28/00 has been released on December 15 2010.; In case you are upgrading from an old version, please read the releases notes; of version 5.16, 5.18, 5.20, 5.22, 5.24, 5,26 and version 5.28 in addition to these notes. The release of version 5.30 is scheduled for June 27, 2011. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. Binaries for all supported platforms are available at:. https://root.cern/releases/release-52800/. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Dario Berzano, INFN and University of Torino, ALICE, Proof,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Gerr",MatchSource.DOCS,doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v532/index.html:67,Availability,Down,Download,67,". ROOT Version 5.32/00 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.32/00 Release Notes. ROOT version 5.32/00 has been released on Nov 29, 2011.; In case you are upgrading from an old version, please read the releases notes; of version 5.26, 5,28 and version 5.30 in addition to these notes. The release of version 5.34 is scheduled for May 29, 2012. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU/ATLAS, RooStats,; Sven Kreiss, NYU/ATLAS, RooStats,; Gena Kukartsev, CERN and FNAL/CMS, ; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Christian Gumpert, CERN and University Dresden/ATLAS, Math,; Wi",MatchSource.DOCS,doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v532/index.html:110,Availability,Down,Download,110,". ROOT Version 5.32/00 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.32/00 Release Notes. ROOT version 5.32/00 has been released on Nov 29, 2011.; In case you are upgrading from an old version, please read the releases notes; of version 5.26, 5,28 and version 5.30 in addition to these notes. The release of version 5.34 is scheduled for May 29, 2012. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU/ATLAS, RooStats,; Sven Kreiss, NYU/ATLAS, RooStats,; Gena Kukartsev, CERN and FNAL/CMS, ; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Christian Gumpert, CERN and University Dresden/ATLAS, Math,; Wi",MatchSource.DOCS,doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v532/index.html:23,Deployability,Release,Release,23,". ROOT Version 5.32/00 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.32/00 Release Notes. ROOT version 5.32/00 has been released on Nov 29, 2011.; In case you are upgrading from an old version, please read the releases notes; of version 5.26, 5,28 and version 5.30 in addition to these notes. The release of version 5.34 is scheduled for May 29, 2012. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU/ATLAS, RooStats,; Sven Kreiss, NYU/ATLAS, RooStats,; Gena Kukartsev, CERN and FNAL/CMS, ; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Christian Gumpert, CERN and University Dresden/ATLAS, Math,; Wi",MatchSource.DOCS,doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v532/index.html:122,Deployability,Release,Release,122,". ROOT Version 5.32/00 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.32/00 Release Notes. ROOT version 5.32/00 has been released on Nov 29, 2011.; In case you are upgrading from an old version, please read the releases notes; of version 5.26, 5,28 and version 5.30 in addition to these notes. The release of version 5.34 is scheduled for May 29, 2012. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU/ATLAS, RooStats,; Sven Kreiss, NYU/ATLAS, RooStats,; Gena Kukartsev, CERN and FNAL/CMS, ; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Christian Gumpert, CERN and University Dresden/ATLAS, Math,; Wi",MatchSource.DOCS,doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v532/index.html:158,Deployability,Release,Release,158,". ROOT Version 5.32/00 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.32/00 Release Notes. ROOT version 5.32/00 has been released on Nov 29, 2011.; In case you are upgrading from an old version, please read the releases notes; of version 5.26, 5,28 and version 5.30 in addition to these notes. The release of version 5.34 is scheduled for May 29, 2012. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU/ATLAS, RooStats,; Sven Kreiss, NYU/ATLAS, RooStats,; Gena Kukartsev, CERN and FNAL/CMS, ; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Christian Gumpert, CERN and University Dresden/ATLAS, Math,; Wi",MatchSource.DOCS,doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v532/index.html:203,Deployability,release,released,203,". ROOT Version 5.32/00 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.32/00 Release Notes. ROOT version 5.32/00 has been released on Nov 29, 2011.; In case you are upgrading from an old version, please read the releases notes; of version 5.26, 5,28 and version 5.30 in addition to these notes. The release of version 5.34 is scheduled for May 29, 2012. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU/ATLAS, RooStats,; Sven Kreiss, NYU/ATLAS, RooStats,; Gena Kukartsev, CERN and FNAL/CMS, ; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Christian Gumpert, CERN and University Dresden/ATLAS, Math,; Wi",MatchSource.DOCS,doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v532/index.html:293,Deployability,release,releases,293,". ROOT Version 5.32/00 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.32/00 Release Notes. ROOT version 5.32/00 has been released on Nov 29, 2011.; In case you are upgrading from an old version, please read the releases notes; of version 5.26, 5,28 and version 5.30 in addition to these notes. The release of version 5.34 is scheduled for May 29, 2012. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU/ATLAS, RooStats,; Sven Kreiss, NYU/ATLAS, RooStats,; Gena Kukartsev, CERN and FNAL/CMS, ; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Christian Gumpert, CERN and University Dresden/ATLAS, Math,; Wi",MatchSource.DOCS,doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v532/index.html:380,Deployability,release,release,380,". ROOT Version 5.32/00 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.32/00 Release Notes. ROOT version 5.32/00 has been released on Nov 29, 2011.; In case you are upgrading from an old version, please read the releases notes; of version 5.26, 5,28 and version 5.30 in addition to these notes. The release of version 5.34 is scheduled for May 29, 2012. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU/ATLAS, RooStats,; Sven Kreiss, NYU/ATLAS, RooStats,; Gena Kukartsev, CERN and FNAL/CMS, ; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Christian Gumpert, CERN and University Dresden/ATLAS, Math,; Wi",MatchSource.DOCS,doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v532/index.html:407,Energy Efficiency,schedul,scheduled,407,". ROOT Version 5.32/00 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.32/00 Release Notes. ROOT version 5.32/00 has been released on Nov 29, 2011.; In case you are upgrading from an old version, please read the releases notes; of version 5.26, 5,28 and version 5.30 in addition to these notes. The release of version 5.34 is scheduled for May 29, 2012. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU/ATLAS, RooStats,; Sven Kreiss, NYU/ATLAS, RooStats,; Gena Kukartsev, CERN and FNAL/CMS, ; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Christian Gumpert, CERN and University Dresden/ATLAS, Math,; Wi",MatchSource.DOCS,doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v532/index.html:707,Integrability,interface,interface,707,". ROOT Version 5.32/00 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.32/00 Release Notes. ROOT version 5.32/00 has been released on Nov 29, 2011.; In case you are upgrading from an old version, please read the releases notes; of version 5.26, 5,28 and version 5.30 in addition to these notes. The release of version 5.34 is scheduled for May 29, 2012. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU/ATLAS, RooStats,; Sven Kreiss, NYU/ATLAS, RooStats,; Gena Kukartsev, CERN and FNAL/CMS, ; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Christian Gumpert, CERN and University Dresden/ATLAS, Math,; Wi",MatchSource.DOCS,doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v532/index.html:766,Integrability,interface,interface,766,". ROOT Version 5.32/00 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.32/00 Release Notes. ROOT version 5.32/00 has been released on Nov 29, 2011.; In case you are upgrading from an old version, please read the releases notes; of version 5.26, 5,28 and version 5.30 in addition to these notes. The release of version 5.34 is scheduled for May 29, 2012. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU/ATLAS, RooStats,; Sven Kreiss, NYU/ATLAS, RooStats,; Gena Kukartsev, CERN and FNAL/CMS, ; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Christian Gumpert, CERN and University Dresden/ATLAS, Math,; Wi",MatchSource.DOCS,doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v532/index.html:792,Integrability,Interface,Interface,792,". ROOT Version 5.32/00 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.32/00 Release Notes. ROOT version 5.32/00 has been released on Nov 29, 2011.; In case you are upgrading from an old version, please read the releases notes; of version 5.26, 5,28 and version 5.30 in addition to these notes. The release of version 5.34 is scheduled for May 29, 2012. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU/ATLAS, RooStats,; Sven Kreiss, NYU/ATLAS, RooStats,; Gena Kukartsev, CERN and FNAL/CMS, ; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Christian Gumpert, CERN and University Dresden/ATLAS, Math,; Wi",MatchSource.DOCS,doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v532/index.html:1213,Integrability,interface,interfaces,1213,". ROOT Version 5.32/00 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.32/00 Release Notes. ROOT version 5.32/00 has been released on Nov 29, 2011.; In case you are upgrading from an old version, please read the releases notes; of version 5.26, 5,28 and version 5.30 in addition to these notes. The release of version 5.34 is scheduled for May 29, 2012. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU/ATLAS, RooStats,; Sven Kreiss, NYU/ATLAS, RooStats,; Gena Kukartsev, CERN and FNAL/CMS, ; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Christian Gumpert, CERN and University Dresden/ATLAS, Math,; Wi",MatchSource.DOCS,doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v532/index.html:1266,Integrability,protocol,protocols,1266,"uled for May 29, 2012. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU/ATLAS, RooStats,; Sven Kreiss, NYU/ATLAS, RooStats,; Gena Kukartsev, CERN and FNAL/CMS, ; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Christian Gumpert, CERN and University Dresden/ATLAS, Math,; Wim Lavrijsen, LBNL, PyRoot,; Sergei Linev, GSI,; Lorenzo Moneta, CERN/SFT,; Axel Naumann, CERN/SFT,; Eddy Offermann, Renaissance, ; Giovanni Petrucciani, UCSD/CMS, RooStats, ; Fons Rademakers, CERN/SFT,; Paul Russo, FNAL, ; Joerg Stelzer, DESY/Atlas, TMVA, ; Alja Tadel, UCSD/CMS, Eve, ; Matevz Tadel, UCSD/CMS, Eve, ; Eckhard von Toerne, University Bonn, ATLAS, TMVA, ; Wouter Verkerke, NIKHEF/Atlas, RooFit, ; ",MatchSource.DOCS,doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v532/index.html:1295,Integrability,interface,interfaces,1295,"uled for May 29, 2012. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU/ATLAS, RooStats,; Sven Kreiss, NYU/ATLAS, RooStats,; Gena Kukartsev, CERN and FNAL/CMS, ; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Christian Gumpert, CERN and University Dresden/ATLAS, Math,; Wim Lavrijsen, LBNL, PyRoot,; Sergei Linev, GSI,; Lorenzo Moneta, CERN/SFT,; Axel Naumann, CERN/SFT,; Eddy Offermann, Renaissance, ; Giovanni Petrucciani, UCSD/CMS, RooStats, ; Fons Rademakers, CERN/SFT,; Paul Russo, FNAL, ; Joerg Stelzer, DESY/Atlas, TMVA, ; Alja Tadel, UCSD/CMS, Eve, ; Matevz Tadel, UCSD/CMS, Eve, ; Eckhard von Toerne, University Bonn, ATLAS, TMVA, ; Wouter Verkerke, NIKHEF/Atlas, RooFit, ; ",MatchSource.DOCS,doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v532/index.html:1429,Integrability,interface,interfaces,1429,"uled for May 29, 2012. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU/ATLAS, RooStats,; Sven Kreiss, NYU/ATLAS, RooStats,; Gena Kukartsev, CERN and FNAL/CMS, ; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Christian Gumpert, CERN and University Dresden/ATLAS, Math,; Wim Lavrijsen, LBNL, PyRoot,; Sergei Linev, GSI,; Lorenzo Moneta, CERN/SFT,; Axel Naumann, CERN/SFT,; Eddy Offermann, Renaissance, ; Giovanni Petrucciani, UCSD/CMS, RooStats, ; Fons Rademakers, CERN/SFT,; Paul Russo, FNAL, ; Joerg Stelzer, DESY/Atlas, TMVA, ; Alja Tadel, UCSD/CMS, Eve, ; Matevz Tadel, UCSD/CMS, Eve, ; Eckhard von Toerne, University Bonn, ATLAS, TMVA, ; Wouter Verkerke, NIKHEF/Atlas, RooFit, ; ",MatchSource.DOCS,doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v532/index.html:1280,Security,authenticat,authentication,1280,"uled for May 29, 2012. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU/ATLAS, RooStats,; Sven Kreiss, NYU/ATLAS, RooStats,; Gena Kukartsev, CERN and FNAL/CMS, ; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Christian Gumpert, CERN and University Dresden/ATLAS, Math,; Wim Lavrijsen, LBNL, PyRoot,; Sergei Linev, GSI,; Lorenzo Moneta, CERN/SFT,; Axel Naumann, CERN/SFT,; Eddy Offermann, Renaissance, ; Giovanni Petrucciani, UCSD/CMS, RooStats, ; Fons Rademakers, CERN/SFT,; Paul Russo, FNAL, ; Joerg Stelzer, DESY/Atlas, TMVA, ; Alja Tadel, UCSD/CMS, Eve, ; Matevz Tadel, UCSD/CMS, Eve, ; Eckhard von Toerne, University Bonn, ATLAS, TMVA, ; Wouter Verkerke, NIKHEF/Atlas, RooFit, ; ",MatchSource.DOCS,doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v532/index.html:87,Usability,Guid,Guide,87,". ROOT Version 5.32/00 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.32/00 Release Notes. ROOT version 5.32/00 has been released on Nov 29, 2011.; In case you are upgrading from an old version, please read the releases notes; of version 5.26, 5,28 and version 5.30 in addition to these notes. The release of version 5.34 is scheduled for May 29, 2012. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU/ATLAS, RooStats,; Sven Kreiss, NYU/ATLAS, RooStats,; Gena Kukartsev, CERN and FNAL/CMS, ; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Christian Gumpert, CERN and University Dresden/ATLAS, Math,; Wi",MatchSource.DOCS,doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v534/index.html:67,Availability,Down,Download,67,". ROOT Version 5.33/01 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.33/01 Release Notes. ROOT version 5.32/00 has been released on November 29, 2011.; In case you are upgrading from an old version, please read the releases notes; of version 5.26, 5,28 and version 5.30 in addition to these notes. The release of version 5.34 is scheduled for May 30, 2012. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Wim Lavrijsen, LBNL, PyRoot,; Lorenzo Moneta, CERN/SFT,; Axel Naumann, CERN/SFT,; Fons Rademakers, CERN/SFT,; Paul Russo, FNAL, ; Joerg ",MatchSource.DOCS,doc/v534/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v534/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v534/index.html:110,Availability,Down,Download,110,". ROOT Version 5.33/01 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.33/01 Release Notes. ROOT version 5.32/00 has been released on November 29, 2011.; In case you are upgrading from an old version, please read the releases notes; of version 5.26, 5,28 and version 5.30 in addition to these notes. The release of version 5.34 is scheduled for May 30, 2012. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Wim Lavrijsen, LBNL, PyRoot,; Lorenzo Moneta, CERN/SFT,; Axel Naumann, CERN/SFT,; Fons Rademakers, CERN/SFT,; Paul Russo, FNAL, ; Joerg ",MatchSource.DOCS,doc/v534/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v534/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v534/index.html:23,Deployability,Release,Release,23,". ROOT Version 5.33/01 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.33/01 Release Notes. ROOT version 5.32/00 has been released on November 29, 2011.; In case you are upgrading from an old version, please read the releases notes; of version 5.26, 5,28 and version 5.30 in addition to these notes. The release of version 5.34 is scheduled for May 30, 2012. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Wim Lavrijsen, LBNL, PyRoot,; Lorenzo Moneta, CERN/SFT,; Axel Naumann, CERN/SFT,; Fons Rademakers, CERN/SFT,; Paul Russo, FNAL, ; Joerg ",MatchSource.DOCS,doc/v534/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v534/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v534/index.html:122,Deployability,Release,Release,122,". ROOT Version 5.33/01 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.33/01 Release Notes. ROOT version 5.32/00 has been released on November 29, 2011.; In case you are upgrading from an old version, please read the releases notes; of version 5.26, 5,28 and version 5.30 in addition to these notes. The release of version 5.34 is scheduled for May 30, 2012. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Wim Lavrijsen, LBNL, PyRoot,; Lorenzo Moneta, CERN/SFT,; Axel Naumann, CERN/SFT,; Fons Rademakers, CERN/SFT,; Paul Russo, FNAL, ; Joerg ",MatchSource.DOCS,doc/v534/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v534/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v534/index.html:158,Deployability,Release,Release,158,". ROOT Version 5.33/01 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.33/01 Release Notes. ROOT version 5.32/00 has been released on November 29, 2011.; In case you are upgrading from an old version, please read the releases notes; of version 5.26, 5,28 and version 5.30 in addition to these notes. The release of version 5.34 is scheduled for May 30, 2012. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Wim Lavrijsen, LBNL, PyRoot,; Lorenzo Moneta, CERN/SFT,; Axel Naumann, CERN/SFT,; Fons Rademakers, CERN/SFT,; Paul Russo, FNAL, ; Joerg ",MatchSource.DOCS,doc/v534/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v534/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v534/index.html:203,Deployability,release,released,203,". ROOT Version 5.33/01 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.33/01 Release Notes. ROOT version 5.32/00 has been released on November 29, 2011.; In case you are upgrading from an old version, please read the releases notes; of version 5.26, 5,28 and version 5.30 in addition to these notes. The release of version 5.34 is scheduled for May 30, 2012. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Wim Lavrijsen, LBNL, PyRoot,; Lorenzo Moneta, CERN/SFT,; Axel Naumann, CERN/SFT,; Fons Rademakers, CERN/SFT,; Paul Russo, FNAL, ; Joerg ",MatchSource.DOCS,doc/v534/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v534/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v534/index.html:298,Deployability,release,releases,298,". ROOT Version 5.33/01 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.33/01 Release Notes. ROOT version 5.32/00 has been released on November 29, 2011.; In case you are upgrading from an old version, please read the releases notes; of version 5.26, 5,28 and version 5.30 in addition to these notes. The release of version 5.34 is scheduled for May 30, 2012. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Wim Lavrijsen, LBNL, PyRoot,; Lorenzo Moneta, CERN/SFT,; Axel Naumann, CERN/SFT,; Fons Rademakers, CERN/SFT,; Paul Russo, FNAL, ; Joerg ",MatchSource.DOCS,doc/v534/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v534/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v534/index.html:385,Deployability,release,release,385,". ROOT Version 5.33/01 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.33/01 Release Notes. ROOT version 5.32/00 has been released on November 29, 2011.; In case you are upgrading from an old version, please read the releases notes; of version 5.26, 5,28 and version 5.30 in addition to these notes. The release of version 5.34 is scheduled for May 30, 2012. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Wim Lavrijsen, LBNL, PyRoot,; Lorenzo Moneta, CERN/SFT,; Axel Naumann, CERN/SFT,; Fons Rademakers, CERN/SFT,; Paul Russo, FNAL, ; Joerg ",MatchSource.DOCS,doc/v534/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v534/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v534/index.html:412,Energy Efficiency,schedul,scheduled,412,". ROOT Version 5.33/01 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.33/01 Release Notes. ROOT version 5.32/00 has been released on November 29, 2011.; In case you are upgrading from an old version, please read the releases notes; of version 5.26, 5,28 and version 5.30 in addition to these notes. The release of version 5.34 is scheduled for May 30, 2012. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Wim Lavrijsen, LBNL, PyRoot,; Lorenzo Moneta, CERN/SFT,; Axel Naumann, CERN/SFT,; Fons Rademakers, CERN/SFT,; Paul Russo, FNAL, ; Joerg ",MatchSource.DOCS,doc/v534/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v534/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v534/index.html:712,Integrability,interface,interface,712,". ROOT Version 5.33/01 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.33/01 Release Notes. ROOT version 5.32/00 has been released on November 29, 2011.; In case you are upgrading from an old version, please read the releases notes; of version 5.26, 5,28 and version 5.30 in addition to these notes. The release of version 5.34 is scheduled for May 30, 2012. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Wim Lavrijsen, LBNL, PyRoot,; Lorenzo Moneta, CERN/SFT,; Axel Naumann, CERN/SFT,; Fons Rademakers, CERN/SFT,; Paul Russo, FNAL, ; Joerg ",MatchSource.DOCS,doc/v534/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v534/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v534/index.html:771,Integrability,interface,interface,771,". ROOT Version 5.33/01 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.33/01 Release Notes. ROOT version 5.32/00 has been released on November 29, 2011.; In case you are upgrading from an old version, please read the releases notes; of version 5.26, 5,28 and version 5.30 in addition to these notes. The release of version 5.34 is scheduled for May 30, 2012. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Wim Lavrijsen, LBNL, PyRoot,; Lorenzo Moneta, CERN/SFT,; Axel Naumann, CERN/SFT,; Fons Rademakers, CERN/SFT,; Paul Russo, FNAL, ; Joerg ",MatchSource.DOCS,doc/v534/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v534/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v534/index.html:797,Integrability,Interface,Interface,797,". ROOT Version 5.33/01 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.33/01 Release Notes. ROOT version 5.32/00 has been released on November 29, 2011.; In case you are upgrading from an old version, please read the releases notes; of version 5.26, 5,28 and version 5.30 in addition to these notes. The release of version 5.34 is scheduled for May 30, 2012. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Wim Lavrijsen, LBNL, PyRoot,; Lorenzo Moneta, CERN/SFT,; Axel Naumann, CERN/SFT,; Fons Rademakers, CERN/SFT,; Paul Russo, FNAL, ; Joerg ",MatchSource.DOCS,doc/v534/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v534/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v534/index.html:1218,Integrability,interface,interfaces,1218,". ROOT Version 5.33/01 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.33/01 Release Notes. ROOT version 5.32/00 has been released on November 29, 2011.; In case you are upgrading from an old version, please read the releases notes; of version 5.26, 5,28 and version 5.30 in addition to these notes. The release of version 5.34 is scheduled for May 30, 2012. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Wim Lavrijsen, LBNL, PyRoot,; Lorenzo Moneta, CERN/SFT,; Axel Naumann, CERN/SFT,; Fons Rademakers, CERN/SFT,; Paul Russo, FNAL, ; Joerg ",MatchSource.DOCS,doc/v534/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v534/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v534/index.html:1271,Integrability,protocol,protocols,1271,"on 5.32/00 has been released on November 29, 2011.; In case you are upgrading from an old version, please read the releases notes; of version 5.26, 5,28 and version 5.30 in addition to these notes. The release of version 5.34 is scheduled for May 30, 2012. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Wim Lavrijsen, LBNL, PyRoot,; Lorenzo Moneta, CERN/SFT,; Axel Naumann, CERN/SFT,; Fons Rademakers, CERN/SFT,; Paul Russo, FNAL, ; Joerg Stelzer, DESY/Atlas, TMVA, ; Alja Tadel, UCSD/CMS, Eve, ; Matevz Tadel, UCSD/CMS, Eve, ; Eckhard von Toerne, University Bonn, ATLAS, TMVA, ; Wouter Verkerke, NIKHEF/Atlas, RooFit, ; ",MatchSource.DOCS,doc/v534/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v534/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v534/index.html:1300,Integrability,interface,interfaces,1300,"on 5.32/00 has been released on November 29, 2011.; In case you are upgrading from an old version, please read the releases notes; of version 5.26, 5,28 and version 5.30 in addition to these notes. The release of version 5.34 is scheduled for May 30, 2012. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Wim Lavrijsen, LBNL, PyRoot,; Lorenzo Moneta, CERN/SFT,; Axel Naumann, CERN/SFT,; Fons Rademakers, CERN/SFT,; Paul Russo, FNAL, ; Joerg Stelzer, DESY/Atlas, TMVA, ; Alja Tadel, UCSD/CMS, Eve, ; Matevz Tadel, UCSD/CMS, Eve, ; Eckhard von Toerne, University Bonn, ATLAS, TMVA, ; Wouter Verkerke, NIKHEF/Atlas, RooFit, ; ",MatchSource.DOCS,doc/v534/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v534/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v534/index.html:1434,Integrability,interface,interfaces,1434,"on 5.32/00 has been released on November 29, 2011.; In case you are upgrading from an old version, please read the releases notes; of version 5.26, 5,28 and version 5.30 in addition to these notes. The release of version 5.34 is scheduled for May 30, 2012. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Wim Lavrijsen, LBNL, PyRoot,; Lorenzo Moneta, CERN/SFT,; Axel Naumann, CERN/SFT,; Fons Rademakers, CERN/SFT,; Paul Russo, FNAL, ; Joerg Stelzer, DESY/Atlas, TMVA, ; Alja Tadel, UCSD/CMS, Eve, ; Matevz Tadel, UCSD/CMS, Eve, ; Eckhard von Toerne, University Bonn, ATLAS, TMVA, ; Wouter Verkerke, NIKHEF/Atlas, RooFit, ; ",MatchSource.DOCS,doc/v534/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v534/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v534/index.html:1285,Security,authenticat,authentication,1285,"on 5.32/00 has been released on November 29, 2011.; In case you are upgrading from an old version, please read the releases notes; of version 5.26, 5,28 and version 5.30 in addition to these notes. The release of version 5.34 is scheduled for May 30, 2012. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Wim Lavrijsen, LBNL, PyRoot,; Lorenzo Moneta, CERN/SFT,; Axel Naumann, CERN/SFT,; Fons Rademakers, CERN/SFT,; Paul Russo, FNAL, ; Joerg Stelzer, DESY/Atlas, TMVA, ; Alja Tadel, UCSD/CMS, Eve, ; Matevz Tadel, UCSD/CMS, Eve, ; Eckhard von Toerne, University Bonn, ATLAS, TMVA, ; Wouter Verkerke, NIKHEF/Atlas, RooFit, ; ",MatchSource.DOCS,doc/v534/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v534/index.html
https://github.com/root-project/root/tree/v6-32-06/doc/v534/index.html:87,Usability,Guid,Guide,87,". ROOT Version 5.33/01 Release Notes. Quick Links:; ROOT Homepage; Download; Reference Guide. Search. ROOT. » Download; » Release Notes. ROOT Version 5.33/01 Release Notes. ROOT version 5.32/00 has been released on November 29, 2011.; In case you are upgrading from an old version, please read the releases notes; of version 5.26, 5,28 and version 5.30 in addition to these notes. The release of version 5.34 is scheduled for May 30, 2012. Bindings - packages related to the interplay with other programming languages (Python, Ruby); Cint - the C++ interpreter; Core - the basic ROOT functionality; Geometry - building, representing and drawing geometrical objects; 2D Graphics - ROOT's two dimensional graphics interface; 3D Graphics - ROOT's three dimensional graphics interface; Graphical User Interface - from basic GUI elements to ROOT's own, complete dialogs; Histograming - counting values, spectra, and drawing them; HTML - the documentation generator; Input/Ouput - storing and reading data; Mathemathics - everything one can use to calculate: minimizers, matrixes, FFT, and much more; Miscellaneous - things that didn't make it into the other groups: table ; Monte Carlo - monte carlo and physics simulation interfaces; Networking - network-related parts, e.g. protocols and authentication interfaces; PROOF - parallel ROOT facility; RooFit - a fitting library; RooStats - a collection of statistical tools ; SQL - database interfaces; TMVA - multivariate analysis tools; Trees - ROOT's unique container class and related utilities; Tutorials - ROOT's Tutorials. For more information, see:. http://root.cern.ch; The following people have contributed to this new version:; Bertrand Bellenot, CERN/SFT,; Rene Brun, CERN/SFT,; Philippe Canal, FNAL,; Olivier Couet, CERN/SFT,; Kyle Cranmer, NYU, RooStats,; Gerri Ganis, CERN/SFT,; Andrei Gheata, CERN/Alice,; Wim Lavrijsen, LBNL, PyRoot,; Lorenzo Moneta, CERN/SFT,; Axel Naumann, CERN/SFT,; Fons Rademakers, CERN/SFT,; Paul Russo, FNAL, ; Joerg ",MatchSource.DOCS,doc/v534/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/doc/v534/index.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:1014,Availability,Avail,Available,1014,"; Reference version: TMVA-v-unknown. TMVA-version @ ROOT. Reference for configuration options defined in the option string of each MVA method booking, and for the definition of data sets used for training and testing (Factory). Table fields:. Option:; The option identifier in the option string (given, e.g., in ""factory->BookMethod(...)"" call). Array:; Can the option be set individually for each input variable via the ""[i]"" tag, where ""i"" is the ith variable?. Default value:; Value used if option is not explicitly set in the configuration option string. Predefined values:; Options can be categories of predefined values among which the user must choose. Description:; Info about the option. Colour codes:. Greenish rows:; Options shared by all MVA methods (through common base class). Bluish rows:; Specific MVA options. Yellowish rows:; Configuration options for minimiser (fitter) classes. Redish rows:; Options for other configurable classes. Available MVA methods (1st row), minimisation tools (2nd row), and other configurables (3rd row):. [MVA::HMatrix] [MVA::Fisher] [MVA::PDERS] [MVA::FDA] [MVA::LD] [MVA::SVM] [MVA::CFMlpANN] [MVA::KNN] [MVA::BDT] [MVA::Boost] [MVA::RuleFit] [MVA::Likelihood] [MVA::MLP] [MVA::Cuts] [MVA::PDEFoam] [MVA::TMlpANN]. [Fitter_SA] [Fitter_MC] [Fitter_Minuit] [Fitter_GA]. [DataSetFactory] [PDF] [Factory]. Configuration options for MVA method :. Configuration options reference for MVA method: HMatrix. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:1726,Availability,Error,Error,1726,"r must choose. Description:; Info about the option. Colour codes:. Greenish rows:; Options shared by all MVA methods (through common base class). Bluish rows:; Specific MVA options. Yellowish rows:; Configuration options for minimiser (fitter) classes. Redish rows:; Options for other configurable classes. Available MVA methods (1st row), minimisation tools (2nd row), and other configurables (3rd row):. [MVA::HMatrix] [MVA::Fisher] [MVA::PDERS] [MVA::FDA] [MVA::LD] [MVA::SVM] [MVA::CFMlpANN] [MVA::KNN] [MVA::BDT] [MVA::Boost] [MVA::RuleFit] [MVA::Likelihood] [MVA::MLP] [MVA::Cuts] [MVA::PDEFoam] [MVA::TMlpANN]. [Fitter_SA] [Fitter_MC] [Fitter_Minuit] [Fitter_GA]. [DataSetFactory] [PDF] [Factory]. Configuration options for MVA method :. Configuration options reference for MVA method: HMatrix. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Configuration options for MVA method :. Configuration options reference for MVA method: Fisher. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Ver",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:2691,Availability,Error,Error,2691,"el No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Configuration options for MVA method :. Configuration options reference for MVA method: Fisher. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Method No Fisher Fisher, Mahalanobis Discrimination method. Configuration options for MVA method :. Configuration options reference for MVA method: PDERS. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Defau",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:3715,Availability,Error,Error,3715,", Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Method No Fisher Fisher, Mahalanobis Discrimination method. Configuration options for MVA method :. Configuration options reference for MVA method: PDERS. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). VolumeRangeMode No Adaptive Unscaled, MinMax, RMS, Adaptive, kNN Method to determine volume size. KernelEstimator No Box Box, Sphere, Teepee, Gauss, Sinc3, Sinc5, Sinc7, Sinc9, Sinc11, Lanczos2, Lanczos3, Lanczos5, Lanczos8, Trim Kernel estimation function. DeltaFrac No 3 − nEventsMin/Max for minmax and rms volume range. NEvent",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:5369,Availability,Error,Error,5369,"nce evaluation). VolumeRangeMode No Adaptive Unscaled, MinMax, RMS, Adaptive, kNN Method to determine volume size. KernelEstimator No Box Box, Sphere, Teepee, Gauss, Sinc3, Sinc5, Sinc7, Sinc9, Sinc11, Lanczos2, Lanczos3, Lanczos5, Lanczos8, Trim Kernel estimation function. DeltaFrac No 3 − nEventsMin/Max for minmax and rms volume range. NEventsMin No 100 − nEventsMin for adaptive volume range. NEventsMax No 200 − nEventsMax for adaptive volume range. MaxVIterations No 150 − MaxVIterations for adaptive volume range. InitialScale No 0.99 − InitialScale for adaptive volume range. GaussSigma No 0.1 − Width (wrt volume size) of Gaussian kernel estimator. NormTree No False − Normalize binary search tree. Configuration options for MVA method :. Configuration options reference for MVA method: FDA. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Formula No (0) − The discrimination formula. ParRanges No () − Parameter ranges. FitMethod No MINUIT MC, GA, SA, MINUIT Optimisation Method. Converger No None None, MINUIT FitMethod uses Converger to improve result. Configuration options for MVA method :. Configuration options reference for MVA method: LD. Option Array Default ",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:6546,Availability,Error,Error,6546,"r: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Formula No (0) − The discrimination formula. ParRanges No () − Parameter ranges. FitMethod No MINUIT MC, GA, SA, MINUIT Optimisation Method. Converger No None None, MINUIT FitMethod uses Converger to improve result. Configuration options for MVA method :. Configuration options reference for MVA method: LD. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Configuration options for MVA method :. Configuration options reference for MVA method: SVM. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbos",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:7508,Availability,Error,Error,7508,"Level No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Configuration options for MVA method :. Configuration options reference for MVA method: SVM. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Gamma No 1 − RBF kernel parameter: Gamma (size of the Kernel). C No 1 − Cost parameter. Tol No 0.01 − Tolerance parameter. MaxIter No 1000 − Maximum number of training loops. Configuration options for MVA method :. Configuration options reference for MVA method: CFMlpANN. Option Array Default value Predefined values Description",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:8262,Availability,Toler,Tolerance,8262," for MVA method: SVM. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Gamma No 1 − RBF kernel parameter: Gamma (size of the Kernel). C No 1 − Cost parameter. Tol No 0.01 − Tolerance parameter. MaxIter No 1000 − Maximum number of training loops. Configuration options for MVA method :. Configuration options reference for MVA method: CFMlpANN. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testi",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:8650,Availability,Error,Error,8650,"ckground,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Gamma No 1 − RBF kernel parameter: Gamma (size of the Kernel). C No 1 − Cost parameter. Tol No 0.01 − Tolerance parameter. MaxIter No 1000 − Maximum number of training loops. Configuration options for MVA method :. Configuration options reference for MVA method: CFMlpANN. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NCycles No 3000 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden layer architecture. Configuration options for MVA method :. Configuration options reference for MVA method: KNN. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below -",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:9725,Availability,Error,Error,9725,"t of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NCycles No 3000 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden layer architecture. Configuration options for MVA method :. Configuration options reference for MVA method: KNN. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). nkNN No 20 − Number of k-nearest neighbors. BalanceDepth No 6 − Binary tree balance depth. ScaleFrac No 0.8 − Fraction of events used to compute variable width. SigmaFact No 1 − Scale factor for sigma in Gaussian kernel. Kernel No Gaus − Use polynomial (=Poln) or Gaussian (=Gaus) kernel. Trim No False − Use equal number of sign",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:11217,Availability,Error,Error,11217,"(signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). nkNN No 20 − Number of k-nearest neighbors. BalanceDepth No 6 − Binary tree balance depth. ScaleFrac No 0.8 − Fraction of events used to compute variable width. SigmaFact No 1 − Scale factor for sigma in Gaussian kernel. Kernel No Gaus − Use polynomial (=Poln) or Gaussian (=Gaus) kernel. Trim No False − Use equal number of signal and background events. UseKernel No False − Use polynomial kernel weight. UseWeight No True − Use weight to count kNN events. UseLDA No False − Use local linear discriminant - experimental feature. Configuration options for MVA method :. Configuration options reference for MVA method: BDT. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NTrees No 800 − Number of trees in the forest. MaxDepth No 3 − Max depth of the decision tree allowed. MinNodeSize No 5% − Minimum percentage of training events required in a leaf node (default: Classification: 5%, Regression: 0.2%). nCuts No 20 − Number of grid points in variable range used in finding optimal cut in node split",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:15908,Availability,Error,Error,15908,") and NoPruning: Pruning: Method used for pruning (removal) of statistically insignificant branches . PruneStrength No 0 − Pruning strength. PruningValFraction No 0.5 − Fraction of events to use for optimizing automatic pruning. nEventsMin No 0 − deprecated: Use MinNodeSize (in % of training events) instead. GradBaggingFraction No 0.6 − deprecated: Use *BaggedSampleFraction* instead: Defines the fraction of events to be used in each iteration, e.g. when UseBaggedGrad=kTRUE. . UseNTrainEvents No 0 − deprecated: Use *BaggedSampleFraction* instead: Number of randomly picked training events used in randomised (and bagged) trees. NNodesMax No 0 − deprecated: Use MaxDepth instead to limit the tree size. Configuration options for MVA method :. Configuration options reference for MVA method: Boost. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Boost_Num No 100 − Number of times the classifier is boosted. Boost_MonitorMethod No True − Write monitoring histograms for each boosted classifier. Boost_DetailedMonitoring No False − Produce histograms for detailed boost-wise monitoring. Boost_Type No AdaBoost AdaBoost, Bagging, HighEdgeGauss, HighEdgeCoPara Boosting type for",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:17914,Availability,Error,Error,17914,"lassifiers. Boost_BaggedSampleFraction No 0.6 − Relative size of bagged event sample to original size of the data sample (used whenever bagging is used). Boost_MethodWeightType No ByError ByError, Average, ByROC, ByOverlap, LastMethod How to set the final weight of the boosted classifiers. Boost_RecalculateMVACut No True − Recalculate the classifier MVA Signallike cut at every boost iteration. Boost_AdaBoostBeta No 1 − The ADA boost parameter that sets the effect of every boost step on the events' weights. Boost_Transform No step step, linear, log, gauss Type of transform applied to every boosted method linear, log, step. Boost_RandomSeed No 0 − Seed for random number generator used for bagging. Configuration options for MVA method :. Configuration options reference for MVA method: RuleFit. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). GDTau No -1 − Gradient-directed (GD) path: default fit cut-off. GDTauPrec No 0.01 − GD path: precision of tau. GDStep No 0.01 − GD path: step size. GDNSteps No 10000 − GD path: number of steps. GDErrScale No 1.1 − Stop scan when error > scale*errmin. LinQuantile No 0.025 − Quantile of linear terms (removes outliers). GDPathEveF",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:18795,Availability,error,error,18795,"f VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). GDTau No -1 − Gradient-directed (GD) path: default fit cut-off. GDTauPrec No 0.01 − GD path: precision of tau. GDStep No 0.01 − GD path: step size. GDNSteps No 10000 − GD path: number of steps. GDErrScale No 1.1 − Stop scan when error > scale*errmin. LinQuantile No 0.025 − Quantile of linear terms (removes outliers). GDPathEveFrac No 0.5 − Fraction of events used for the path search. GDValidEveFrac No 0.5 − Fraction of events used for the validation. fEventsMin No 0.1 − Minimum fraction of events in a splittable node. fEventsMax No 0.9 − Maximum fraction of events in a splittable node. nTrees No 20 − Number of trees in forest. ForestType No AdaBoost AdaBoost, Random Method to use for forest generation (AdaBoost or RandomForest). RuleMinDist No 0.001 − Minimum distance between rules. MinImp No 0.01 − Minimum rule importance accepted. Model No ModRuleLinear ModRule, ModRuleLinear, ModLinear Model to be used. RuleFitModule No RFTMVA RFTMVA, RFFriedman Which RuleFit module to use. RFWorkDir No ./rulefit − Friedman's RuleFit module (RFF): working dir. RFNrules No 2000 − RFF: Mximum number of rules. RFNendnodes No 4 − RFF: Average number of end nodes. Configuration options for MVA method :. Configuration options refe",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:20047,Availability,Error,Error,20047,"Min No 0.1 − Minimum fraction of events in a splittable node. fEventsMax No 0.9 − Maximum fraction of events in a splittable node. nTrees No 20 − Number of trees in forest. ForestType No AdaBoost AdaBoost, Random Method to use for forest generation (AdaBoost or RandomForest). RuleMinDist No 0.001 − Minimum distance between rules. MinImp No 0.01 − Minimum rule importance accepted. Model No ModRuleLinear ModRule, ModRuleLinear, ModLinear Model to be used. RuleFitModule No RFTMVA RFTMVA, RFFriedman Which RuleFit module to use. RFWorkDir No ./rulefit − Friedman's RuleFit module (RFF): working dir. RFNrules No 2000 − RFF: Mximum number of rules. RFNendnodes No 4 − RFF: Average number of end nodes. Configuration options for MVA method :. Configuration options reference for MVA method: Likelihood. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). TransformOutput No False − Transform likelihood output by inverse sigmoid function. Configuration options for MVA method :. Configuration options reference for MVA method: MLP. Option Array Default value Predefined values Description. NCycles No 500 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden la",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:21604,Availability,Error,Error,21604,"ents with negative weights are ignored in the training (but are included for testing and performance evaluation). TransformOutput No False − Transform likelihood output by inverse sigmoid function. Configuration options for MVA method :. Configuration options reference for MVA method: MLP. Option Array Default value Predefined values Description. NCycles No 500 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden layer architecture. NeuronType No sigmoid − Neuron activation function type. RandomSeed No 1 − Random seed for initial synapse weights (0 means unique seed for each run; default value '1'). EstimatorType No MSE MSE, CE, linear, sigmoid, tanh, radial MSE (Mean Square Estimator) for Gaussian Likelihood or CE(Cross-Entropy) for Bernoulli Likelihood. NeuronInputType No sum sum, sqsum, abssum Neuron input function type. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). TrainingMethod No BP BP, GA, BFGS Train with Back-Propagation (BP), BFGS Algorithm (BFGS), or Genetic Algorithm (GA - slower and worse). LearningRate No 0.02 − ANN learning rate parameter. DecayRate No 0.01 − Decay rate for learning parameter. TestRate No 10 − Test for overtraining performed at each #th epochs. EpochMonitoring ",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:24502,Availability,Error,Error,24502,"events. ConvergenceImprove No 1e-30 − Minimum improvement which counts as improvement (<0 means automatic convergence check is turned off). ConvergenceTests No -1 − Number of steps (without improvement) required for convergence (<0 means automatic convergence check is turned off). UseRegulator No False − Use regulator to avoid over-training. UpdateLimit No 10000 − Maximum times of regulator update. CalculateErrors No False − Calculates inverse Hessian matrix at the end of the training to be able to calculate the uncertainties of an MVA value. WeightRange No 1 − Take the events for the estimator calculations from small deviations from the desired value to large deviations only over the weight range. Configuration options for MVA method :. Configuration options reference for MVA method: Cuts. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). FitMethod No GA GA, SA, MC, MCEvents, MINUIT, EventScan Minimisation Method (GA, SA, and MC are the primary methods to be used; the others have been introduced for testing purposes and are depreciated). EffMethod No EffSel EffSel, EffPDF Selection Method. CutRangeMin Yes -1 − Minimum of allowed cut range (set per variable). Cut",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:25944,Availability,Error,Error,25944,"dfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). FitMethod No GA GA, SA, MC, MCEvents, MINUIT, EventScan Minimisation Method (GA, SA, and MC are the primary methods to be used; the others have been introduced for testing purposes and are depreciated). EffMethod No EffSel EffSel, EffPDF Selection Method. CutRangeMin Yes -1 − Minimum of allowed cut range (set per variable). CutRangeMax Yes -1 − Maximum of allowed cut range (set per variable). VarProp Yes NotEnforced NotEnforced, FMax, FMin, FSmart Categorisation of cuts. Configuration options for MVA method :. Configuration options reference for MVA method: PDEFoam. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). SigBgSeparate No False − Separate foams for signal and background. TailCut No 0.001 − Fraction of outlier events that are excluded from the foam in each dimension. VolFrac No 0.0666667 − Size of sampling box, used for density calculation during foam build-up (maximum value: 1.0 is equivalent to volume of entire foam). nActiveCe",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:28068,Availability,Error,Error,28068,"ll. nBin No 5 − Number of bins in edge histograms. Compress No True − Compress foam output file. MultiTargetRegression No False − Do regression with multiple targets. Nmin No 100 − Number of events in cell required to split cell. MaxDepth No 0 − Maximum depth of cell tree (0=unlimited). FillFoamWithOrigWeights No False − Fill foam with original or boost weights. UseYesNoCell No False − Return -1 or 1 for bkg or signal like events. DTLogic No None None, GiniIndex, MisClassificationError, CrossEntropy, GiniIndexWithLaplace, SdivSqrtSplusB Use decision tree algorithm to split cells. Kernel No None None, Gauss, LinNeighbors Kernel type used. TargetSelection No Mean Mean, Mpv Target selection method. Configuration options for MVA method :. Configuration options reference for MVA method: TMlpANN. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NCycles No 200 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden layer architecture (N stands for number of variables; any integers may also be used). ValidationFraction No 0.5 − Fraction of events in training tree used for cross validation. LearningMethod No Stochastic Stochastic, Batch, SteepestDesc",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:30553,Availability,Error,ErrorLevel,30553,"75 − Step made in each generation temperature adaptive. UseDefaultScale No False − Use default temperature scale for temperature minimisation algorithm. UseDefaultTemp No False − Use default initial temperature. KernelTemp No IncAdaptive IncAdaptive, DecAdaptive, Sqrt, Log, Sin, Homo, Geo Temperature minimisation algorithm. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Monte Carlo sampling (MC). Option Array Default value Predefined values Description. SampleSize No 100000 − Number of Monte Carlo events in toy sample. Sigma No -1 − If > 0: new points are generated according to Gauss around best value and with Sigma in units of interval length. Seed No 100 − Seed for the random generator (0 takes random seeds). Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: TMinuit (MT). Option Array Default value Predefined values Description. ErrorLevel No 1 − TMinuit: error level: 0.5=logL fit, 1=chi-squared fit. PrintLevel No -1 − TMinuit: output level: -1=least, 0, +1=all garbage. FitStrategy No 2 − TMinuit: fit strategy: 2=best. PrintWarnings No False − TMinuit: suppress warnings. UseImprove No True − TMinuit: use IMPROVE. UseMinos No True − TMinuit: use MINOS. SetBatch No False − TMinuit: use batch mode. MaxCalls No 1000 − TMinuit: approximate maximum number of function calls. Tolerance No 0.1 − TMinuit: tolerance to the function value at the minimum. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Genetic Algorithm (GA). Option Array Default value Predefined values Description. PopSize No 300 − Population size for GA. Steps No 40 − Number of steps for convergence. Cycles No 3 − Independent cycles of GA fitting. SC_steps No 10 − Spread control, steps. SC_rate No 5 − Spread control, rate: factor is changed depending on the rate. SC_factor No 0.95 − Spread control, factor. ",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:30580,Availability,error,error,30580,"75 − Step made in each generation temperature adaptive. UseDefaultScale No False − Use default temperature scale for temperature minimisation algorithm. UseDefaultTemp No False − Use default initial temperature. KernelTemp No IncAdaptive IncAdaptive, DecAdaptive, Sqrt, Log, Sin, Homo, Geo Temperature minimisation algorithm. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Monte Carlo sampling (MC). Option Array Default value Predefined values Description. SampleSize No 100000 − Number of Monte Carlo events in toy sample. Sigma No -1 − If > 0: new points are generated according to Gauss around best value and with Sigma in units of interval length. Seed No 100 − Seed for the random generator (0 takes random seeds). Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: TMinuit (MT). Option Array Default value Predefined values Description. ErrorLevel No 1 − TMinuit: error level: 0.5=logL fit, 1=chi-squared fit. PrintLevel No -1 − TMinuit: output level: -1=least, 0, +1=all garbage. FitStrategy No 2 − TMinuit: fit strategy: 2=best. PrintWarnings No False − TMinuit: suppress warnings. UseImprove No True − TMinuit: use IMPROVE. UseMinos No True − TMinuit: use MINOS. SetBatch No False − TMinuit: use batch mode. MaxCalls No 1000 − TMinuit: approximate maximum number of function calls. Tolerance No 0.1 − TMinuit: tolerance to the function value at the minimum. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Genetic Algorithm (GA). Option Array Default value Predefined values Description. PopSize No 300 − Population size for GA. Steps No 40 − Number of steps for convergence. Cycles No 3 − Independent cycles of GA fitting. SC_steps No 10 − Spread control, steps. SC_rate No 5 − Spread control, rate: factor is changed depending on the rate. SC_factor No 0.95 − Spread control, factor. ",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:31001,Availability,Toler,Tolerance,31001,"method: Monte Carlo sampling (MC). Option Array Default value Predefined values Description. SampleSize No 100000 − Number of Monte Carlo events in toy sample. Sigma No -1 − If > 0: new points are generated according to Gauss around best value and with Sigma in units of interval length. Seed No 100 − Seed for the random generator (0 takes random seeds). Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: TMinuit (MT). Option Array Default value Predefined values Description. ErrorLevel No 1 − TMinuit: error level: 0.5=logL fit, 1=chi-squared fit. PrintLevel No -1 − TMinuit: output level: -1=least, 0, +1=all garbage. FitStrategy No 2 − TMinuit: fit strategy: 2=best. PrintWarnings No False − TMinuit: suppress warnings. UseImprove No True − TMinuit: use IMPROVE. UseMinos No True − TMinuit: use MINOS. SetBatch No False − TMinuit: use batch mode. MaxCalls No 1000 − TMinuit: approximate maximum number of function calls. Tolerance No 0.1 − TMinuit: tolerance to the function value at the minimum. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Genetic Algorithm (GA). Option Array Default value Predefined values Description. PopSize No 300 − Population size for GA. Steps No 40 − Number of steps for convergence. Cycles No 3 − Independent cycles of GA fitting. SC_steps No 10 − Spread control, steps. SC_rate No 5 − Spread control, rate: factor is changed depending on the rate. SC_factor No 0.95 − Spread control, factor. ConvCrit No 0.001 − Convergence criteria. SaveBestGen No 1 − Saves the best n results from each generation. They are included in the last cycle. SaveBestCycle No 10 − Saves the best n results from each cycle. They are included in the last cycle. The value should be set to at least 1.0. Trim No False − Trim the population to PopSize after assessing the fitness of each individual. Seed No 100 − Set seed of random generator (0 gives ",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:31029,Availability,toler,tolerance,31029,"ion Array Default value Predefined values Description. SampleSize No 100000 − Number of Monte Carlo events in toy sample. Sigma No -1 − If > 0: new points are generated according to Gauss around best value and with Sigma in units of interval length. Seed No 100 − Seed for the random generator (0 takes random seeds). Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: TMinuit (MT). Option Array Default value Predefined values Description. ErrorLevel No 1 − TMinuit: error level: 0.5=logL fit, 1=chi-squared fit. PrintLevel No -1 − TMinuit: output level: -1=least, 0, +1=all garbage. FitStrategy No 2 − TMinuit: fit strategy: 2=best. PrintWarnings No False − TMinuit: suppress warnings. UseImprove No True − TMinuit: use IMPROVE. UseMinos No True − TMinuit: use MINOS. SetBatch No False − TMinuit: use batch mode. MaxCalls No 1000 − TMinuit: approximate maximum number of function calls. Tolerance No 0.1 − TMinuit: tolerance to the function value at the minimum. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Genetic Algorithm (GA). Option Array Default value Predefined values Description. PopSize No 300 − Population size for GA. Steps No 40 − Number of steps for convergence. Cycles No 3 − Independent cycles of GA fitting. SC_steps No 10 − Spread control, steps. SC_rate No 5 − Spread control, rate: factor is changed depending on the rate. SC_factor No 0.95 − Spread control, factor. ConvCrit No 0.001 − Convergence criteria. SaveBestGen No 1 − Saves the best n results from each generation. They are included in the last cycle. SaveBestCycle No 10 − Saves the best n results from each cycle. They are included in the last cycle. The value should be set to at least 1.0. Trim No False − Trim the population to PopSize after assessing the fitness of each individual. Seed No 100 − Set seed of random generator (0 gives random seeds). Configuration options g",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:31,Deployability,Configurat,Configuration,31,". TMVA Options Reference. TMVA Configuration Options Reference; Reference version: TMVA-v-unknown. TMVA-version @ ROOT. Reference for configuration options defined in the option string of each MVA method booking, and for the definition of data sets used for training and testing (Factory). Table fields:. Option:; The option identifier in the option string (given, e.g., in ""factory->BookMethod(...)"" call). Array:; Can the option be set individually for each input variable via the ""[i]"" tag, where ""i"" is the ith variable?. Default value:; Value used if option is not explicitly set in the configuration option string. Predefined values:; Options can be categories of predefined values among which the user must choose. Description:; Info about the option. Colour codes:. Greenish rows:; Options shared by all MVA methods (through common base class). Bluish rows:; Specific MVA options. Yellowish rows:; Configuration options for minimiser (fitter) classes. Redish rows:; Options for other configurable classes. Available MVA methods (1st row), minimisation tools (2nd row), and other configurables (3rd row):. [MVA::HMatrix] [MVA::Fisher] [MVA::PDERS] [MVA::FDA] [MVA::LD] [MVA::SVM] [MVA::CFMlpANN] [MVA::KNN] [MVA::BDT] [MVA::Boost] [MVA::RuleFit] [MVA::Likelihood] [MVA::MLP] [MVA::Cuts] [MVA::PDEFoam] [MVA::TMlpANN]. [Fitter_SA] [Fitter_MC] [Fitter_Minuit] [Fitter_GA]. [DataSetFactory] [PDF] [Factory]. Configuration options for MVA method :. Configuration options reference for MVA method: HMatrix. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:134,Deployability,configurat,configuration,134,". TMVA Options Reference. TMVA Configuration Options Reference; Reference version: TMVA-v-unknown. TMVA-version @ ROOT. Reference for configuration options defined in the option string of each MVA method booking, and for the definition of data sets used for training and testing (Factory). Table fields:. Option:; The option identifier in the option string (given, e.g., in ""factory->BookMethod(...)"" call). Array:; Can the option be set individually for each input variable via the ""[i]"" tag, where ""i"" is the ith variable?. Default value:; Value used if option is not explicitly set in the configuration option string. Predefined values:; Options can be categories of predefined values among which the user must choose. Description:; Info about the option. Colour codes:. Greenish rows:; Options shared by all MVA methods (through common base class). Bluish rows:; Specific MVA options. Yellowish rows:; Configuration options for minimiser (fitter) classes. Redish rows:; Options for other configurable classes. Available MVA methods (1st row), minimisation tools (2nd row), and other configurables (3rd row):. [MVA::HMatrix] [MVA::Fisher] [MVA::PDERS] [MVA::FDA] [MVA::LD] [MVA::SVM] [MVA::CFMlpANN] [MVA::KNN] [MVA::BDT] [MVA::Boost] [MVA::RuleFit] [MVA::Likelihood] [MVA::MLP] [MVA::Cuts] [MVA::PDEFoam] [MVA::TMlpANN]. [Fitter_SA] [Fitter_MC] [Fitter_Minuit] [Fitter_GA]. [DataSetFactory] [PDF] [Factory]. Configuration options for MVA method :. Configuration options reference for MVA method: HMatrix. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:592,Deployability,configurat,configuration,592,". TMVA Options Reference. TMVA Configuration Options Reference; Reference version: TMVA-v-unknown. TMVA-version @ ROOT. Reference for configuration options defined in the option string of each MVA method booking, and for the definition of data sets used for training and testing (Factory). Table fields:. Option:; The option identifier in the option string (given, e.g., in ""factory->BookMethod(...)"" call). Array:; Can the option be set individually for each input variable via the ""[i]"" tag, where ""i"" is the ith variable?. Default value:; Value used if option is not explicitly set in the configuration option string. Predefined values:; Options can be categories of predefined values among which the user must choose. Description:; Info about the option. Colour codes:. Greenish rows:; Options shared by all MVA methods (through common base class). Bluish rows:; Specific MVA options. Yellowish rows:; Configuration options for minimiser (fitter) classes. Redish rows:; Options for other configurable classes. Available MVA methods (1st row), minimisation tools (2nd row), and other configurables (3rd row):. [MVA::HMatrix] [MVA::Fisher] [MVA::PDERS] [MVA::FDA] [MVA::LD] [MVA::SVM] [MVA::CFMlpANN] [MVA::KNN] [MVA::BDT] [MVA::Boost] [MVA::RuleFit] [MVA::Likelihood] [MVA::MLP] [MVA::Cuts] [MVA::PDEFoam] [MVA::TMlpANN]. [Fitter_SA] [Fitter_MC] [Fitter_Minuit] [Fitter_GA]. [DataSetFactory] [PDF] [Factory]. Configuration options for MVA method :. Configuration options reference for MVA method: HMatrix. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:906,Deployability,Configurat,Configuration,906,". TMVA Options Reference. TMVA Configuration Options Reference; Reference version: TMVA-v-unknown. TMVA-version @ ROOT. Reference for configuration options defined in the option string of each MVA method booking, and for the definition of data sets used for training and testing (Factory). Table fields:. Option:; The option identifier in the option string (given, e.g., in ""factory->BookMethod(...)"" call). Array:; Can the option be set individually for each input variable via the ""[i]"" tag, where ""i"" is the ith variable?. Default value:; Value used if option is not explicitly set in the configuration option string. Predefined values:; Options can be categories of predefined values among which the user must choose. Description:; Info about the option. Colour codes:. Greenish rows:; Options shared by all MVA methods (through common base class). Bluish rows:; Specific MVA options. Yellowish rows:; Configuration options for minimiser (fitter) classes. Redish rows:; Options for other configurable classes. Available MVA methods (1st row), minimisation tools (2nd row), and other configurables (3rd row):. [MVA::HMatrix] [MVA::Fisher] [MVA::PDERS] [MVA::FDA] [MVA::LD] [MVA::SVM] [MVA::CFMlpANN] [MVA::KNN] [MVA::BDT] [MVA::Boost] [MVA::RuleFit] [MVA::Likelihood] [MVA::MLP] [MVA::Cuts] [MVA::PDEFoam] [MVA::TMlpANN]. [Fitter_SA] [Fitter_MC] [Fitter_Minuit] [Fitter_GA]. [DataSetFactory] [PDF] [Factory]. Configuration options for MVA method :. Configuration options reference for MVA method: HMatrix. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:1412,Deployability,Configurat,Configuration,1412,"be set individually for each input variable via the ""[i]"" tag, where ""i"" is the ith variable?. Default value:; Value used if option is not explicitly set in the configuration option string. Predefined values:; Options can be categories of predefined values among which the user must choose. Description:; Info about the option. Colour codes:. Greenish rows:; Options shared by all MVA methods (through common base class). Bluish rows:; Specific MVA options. Yellowish rows:; Configuration options for minimiser (fitter) classes. Redish rows:; Options for other configurable classes. Available MVA methods (1st row), minimisation tools (2nd row), and other configurables (3rd row):. [MVA::HMatrix] [MVA::Fisher] [MVA::PDERS] [MVA::FDA] [MVA::LD] [MVA::SVM] [MVA::CFMlpANN] [MVA::KNN] [MVA::BDT] [MVA::Boost] [MVA::RuleFit] [MVA::Likelihood] [MVA::MLP] [MVA::Cuts] [MVA::PDEFoam] [MVA::TMlpANN]. [Fitter_SA] [Fitter_MC] [Fitter_Minuit] [Fitter_GA]. [DataSetFactory] [PDF] [Factory]. Configuration options for MVA method :. Configuration options reference for MVA method: HMatrix. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Configuration options for MVA method :. Configuration",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:1452,Deployability,Configurat,Configuration,1452,"the ""[i]"" tag, where ""i"" is the ith variable?. Default value:; Value used if option is not explicitly set in the configuration option string. Predefined values:; Options can be categories of predefined values among which the user must choose. Description:; Info about the option. Colour codes:. Greenish rows:; Options shared by all MVA methods (through common base class). Bluish rows:; Specific MVA options. Yellowish rows:; Configuration options for minimiser (fitter) classes. Redish rows:; Options for other configurable classes. Available MVA methods (1st row), minimisation tools (2nd row), and other configurables (3rd row):. [MVA::HMatrix] [MVA::Fisher] [MVA::PDERS] [MVA::FDA] [MVA::LD] [MVA::SVM] [MVA::CFMlpANN] [MVA::KNN] [MVA::BDT] [MVA::Boost] [MVA::RuleFit] [MVA::Likelihood] [MVA::MLP] [MVA::Cuts] [MVA::PDEFoam] [MVA::TMlpANN]. [Fitter_SA] [Fitter_MC] [Fitter_Minuit] [Fitter_GA]. [DataSetFactory] [PDF] [Factory]. Configuration options for MVA method :. Configuration options reference for MVA method: HMatrix. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Configuration options for MVA method :. Configuration options reference for MVA method: Fisher. Option",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:2378,Deployability,Configurat,Configuration,2378,"DF] [Factory]. Configuration options for MVA method :. Configuration options reference for MVA method: HMatrix. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Configuration options for MVA method :. Configuration options reference for MVA method: Fisher. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Method No Fisher Fisher, Mahalanobis Discrimination me",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:2418,Deployability,Configurat,Configuration,2418,"hod :. Configuration options reference for MVA method: HMatrix. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Configuration options for MVA method :. Configuration options reference for MVA method: Fisher. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Method No Fisher Fisher, Mahalanobis Discrimination method. Configuration options for MVA method :. Co",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:3403,Deployability,Configurat,Configuration,3403,"iguration options reference for MVA method: Fisher. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Method No Fisher Fisher, Mahalanobis Discrimination method. Configuration options for MVA method :. Configuration options reference for MVA method: PDERS. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). VolumeRangeMode No Adaptive Unscaled, MinMax, RMS, Adap",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:3443,Deployability,Configurat,Configuration,3443,"her. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Method No Fisher Fisher, Mahalanobis Discrimination method. Configuration options for MVA method :. Configuration options reference for MVA method: PDERS. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). VolumeRangeMode No Adaptive Unscaled, MinMax, RMS, Adaptive, kNN Method to determine volume size. Kerne",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:5059,Deployability,Configurat,Configuration,5059," H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). VolumeRangeMode No Adaptive Unscaled, MinMax, RMS, Adaptive, kNN Method to determine volume size. KernelEstimator No Box Box, Sphere, Teepee, Gauss, Sinc3, Sinc5, Sinc7, Sinc9, Sinc11, Lanczos2, Lanczos3, Lanczos5, Lanczos8, Trim Kernel estimation function. DeltaFrac No 3 − nEventsMin/Max for minmax and rms volume range. NEventsMin No 100 − nEventsMin for adaptive volume range. NEventsMax No 200 − nEventsMax for adaptive volume range. MaxVIterations No 150 − MaxVIterations for adaptive volume range. InitialScale No 0.99 − InitialScale for adaptive volume range. GaussSigma No 0.1 − Width (wrt volume size) of Gaussian kernel estimator. NormTree No False − Normalize binary search tree. Configuration options for MVA method :. Configuration options reference for MVA method: FDA. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Formula No (0) − The discrimination formula. ParRanges No",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:5099,Deployability,Configurat,Configuration,5099,"ge. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). VolumeRangeMode No Adaptive Unscaled, MinMax, RMS, Adaptive, kNN Method to determine volume size. KernelEstimator No Box Box, Sphere, Teepee, Gauss, Sinc3, Sinc5, Sinc7, Sinc9, Sinc11, Lanczos2, Lanczos3, Lanczos5, Lanczos8, Trim Kernel estimation function. DeltaFrac No 3 − nEventsMin/Max for minmax and rms volume range. NEventsMin No 100 − nEventsMin for adaptive volume range. NEventsMax No 200 − nEventsMax for adaptive volume range. MaxVIterations No 150 − MaxVIterations for adaptive volume range. InitialScale No 0.99 − InitialScale for adaptive volume range. GaussSigma No 0.1 − Width (wrt volume size) of Gaussian kernel estimator. NormTree No False − Normalize binary search tree. Configuration options for MVA method :. Configuration options reference for MVA method: FDA. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Formula No (0) − The discrimination formula. ParRanges No () − Parameter ranges. FitMethod No MINUIT MC,",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:6237,Deployability,Configurat,Configuration,6237,"bosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Formula No (0) − The discrimination formula. ParRanges No () − Parameter ranges. FitMethod No MINUIT MC, GA, SA, MINUIT Optimisation Method. Converger No None None, MINUIT FitMethod uses Converger to improve result. Configuration options for MVA method :. Configuration options reference for MVA method: LD. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Configuration options for MVA method :. Configuration opti",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:6277,Deployability,Configurat,Configuration,6277," VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Formula No (0) − The discrimination formula. ParRanges No () − Parameter ranges. FitMethod No MINUIT MC, GA, SA, MINUIT Optimisation Method. Converger No None None, MINUIT FitMethod uses Converger to improve result. Configuration options for MVA method :. Configuration options reference for MVA method: LD. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Configuration options for MVA method :. Configuration options reference for MVA method: SVM. Option Arra",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:7198,Deployability,Configurat,Configuration,7198," to improve result. Configuration options for MVA method :. Configuration options reference for MVA method: LD. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Configuration options for MVA method :. Configuration options reference for MVA method: SVM. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Gamma No 1 − RBF kernel parameter: Gamma (size of the Ker",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:7238,Deployability,Configurat,Configuration,7238,"MVA method :. Configuration options reference for MVA method: LD. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Configuration options for MVA method :. Configuration options reference for MVA method: SVM. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Gamma No 1 − RBF kernel parameter: Gamma (size of the Kernel). C No 1 − Cost parameter. Tol No 0.01 − To",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:8335,Deployability,Configurat,Configuration,8335,"False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Gamma No 1 − RBF kernel parameter: Gamma (size of the Kernel). C No 1 − Cost parameter. Tol No 0.01 − Tolerance parameter. MaxIter No 1000 − Maximum number of training loops. Configuration options for MVA method :. Configuration options reference for MVA method: CFMlpANN. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NCycles No 3000 − Number of training cycles. HiddenL",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:8375,Deployability,Configurat,Configuration,8375,"vel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Gamma No 1 − RBF kernel parameter: Gamma (size of the Kernel). C No 1 − Cost parameter. Tol No 0.01 − Tolerance parameter. MaxIter No 1000 − Maximum number of training loops. Configuration options for MVA method :. Configuration options reference for MVA method: CFMlpANN. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NCycles No 3000 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden layer ar",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:9415,Deployability,Configurat,Configuration,9415,"ption Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NCycles No 3000 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden layer architecture. Configuration options for MVA method :. Configuration options reference for MVA method: KNN. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). nkNN No 20 − Number of k-nearest neighbors. BalanceDepth ",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:9455,Deployability,Configurat,Configuration,9455,"scription. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NCycles No 3000 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden layer architecture. Configuration options for MVA method :. Configuration options reference for MVA method: KNN. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). nkNN No 20 − Number of k-nearest neighbors. BalanceDepth No 6 − Binary tree balance depth. ScaleFrac No ",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:10907,Deployability,Configurat,Configuration,10907,"ianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). nkNN No 20 − Number of k-nearest neighbors. BalanceDepth No 6 − Binary tree balance depth. ScaleFrac No 0.8 − Fraction of events used to compute variable width. SigmaFact No 1 − Scale factor for sigma in Gaussian kernel. Kernel No Gaus − Use polynomial (=Poln) or Gaussian (=Gaus) kernel. Trim No False − Use equal number of signal and background events. UseKernel No False − Use polynomial kernel weight. UseWeight No True − Use weight to count kNN events. UseLDA No False − Use local linear discriminant - experimental feature. Configuration options for MVA method :. Configuration options reference for MVA method: BDT. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NTrees No 800 − Number of trees in the forest. MaxDepth N",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:10947,Deployability,Configurat,Configuration,10947,"class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). nkNN No 20 − Number of k-nearest neighbors. BalanceDepth No 6 − Binary tree balance depth. ScaleFrac No 0.8 − Fraction of events used to compute variable width. SigmaFact No 1 − Scale factor for sigma in Gaussian kernel. Kernel No Gaus − Use polynomial (=Poln) or Gaussian (=Gaus) kernel. Trim No False − Use equal number of signal and background events. UseKernel No False − Use polynomial kernel weight. UseWeight No True − Use weight to count kNN events. UseLDA No False − Use local linear discriminant - experimental feature. Configuration options for MVA method :. Configuration options reference for MVA method: BDT. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NTrees No 800 − Number of trees in the forest. MaxDepth No 3 − Max depth of the decision tree allowed. M",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:15596,Deployability,Configurat,Configuration,15596,"o the original size after boosting. SigToBkgFraction No 1 − Sig to Bkg ratio used in Training (similar to NodePurityLimit, which cannot be used in real adaboost. PruneMethod No NoPruning NoPruning, ExpectedError, CostComplexity Note: for BDTs use small trees (e.g.MaxDepth=3) and NoPruning: Pruning: Method used for pruning (removal) of statistically insignificant branches . PruneStrength No 0 − Pruning strength. PruningValFraction No 0.5 − Fraction of events to use for optimizing automatic pruning. nEventsMin No 0 − deprecated: Use MinNodeSize (in % of training events) instead. GradBaggingFraction No 0.6 − deprecated: Use *BaggedSampleFraction* instead: Defines the fraction of events to be used in each iteration, e.g. when UseBaggedGrad=kTRUE. . UseNTrainEvents No 0 − deprecated: Use *BaggedSampleFraction* instead: Number of randomly picked training events used in randomised (and bagged) trees. NNodesMax No 0 − deprecated: Use MaxDepth instead to limit the tree size. Configuration options for MVA method :. Configuration options reference for MVA method: Boost. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Boost_Num No 100 − Number of times the classifier is bo",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:15636,Deployability,Configurat,Configuration,15636,"ction No 1 − Sig to Bkg ratio used in Training (similar to NodePurityLimit, which cannot be used in real adaboost. PruneMethod No NoPruning NoPruning, ExpectedError, CostComplexity Note: for BDTs use small trees (e.g.MaxDepth=3) and NoPruning: Pruning: Method used for pruning (removal) of statistically insignificant branches . PruneStrength No 0 − Pruning strength. PruningValFraction No 0.5 − Fraction of events to use for optimizing automatic pruning. nEventsMin No 0 − deprecated: Use MinNodeSize (in % of training events) instead. GradBaggingFraction No 0.6 − deprecated: Use *BaggedSampleFraction* instead: Defines the fraction of events to be used in each iteration, e.g. when UseBaggedGrad=kTRUE. . UseNTrainEvents No 0 − deprecated: Use *BaggedSampleFraction* instead: Number of randomly picked training events used in randomised (and bagged) trees. NNodesMax No 0 − deprecated: Use MaxDepth instead to limit the tree size. Configuration options for MVA method :. Configuration options reference for MVA method: Boost. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Boost_Num No 100 − Number of times the classifier is boosted. Boost_MonitorMethod No True − Write monit",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:17600,Deployability,Configurat,Configuration,17600,"d. Boost_MonitorMethod No True − Write monitoring histograms for each boosted classifier. Boost_DetailedMonitoring No False − Produce histograms for detailed boost-wise monitoring. Boost_Type No AdaBoost AdaBoost, Bagging, HighEdgeGauss, HighEdgeCoPara Boosting type for the classifiers. Boost_BaggedSampleFraction No 0.6 − Relative size of bagged event sample to original size of the data sample (used whenever bagging is used). Boost_MethodWeightType No ByError ByError, Average, ByROC, ByOverlap, LastMethod How to set the final weight of the boosted classifiers. Boost_RecalculateMVACut No True − Recalculate the classifier MVA Signallike cut at every boost iteration. Boost_AdaBoostBeta No 1 − The ADA boost parameter that sets the effect of every boost step on the events' weights. Boost_Transform No step step, linear, log, gauss Type of transform applied to every boosted method linear, log, step. Boost_RandomSeed No 0 − Seed for random number generator used for bagging. Configuration options for MVA method :. Configuration options reference for MVA method: RuleFit. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). GDTau No -1 − Gradient-directed (GD) path: default fi",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:17640,Deployability,Configurat,Configuration,17640,"g histograms for each boosted classifier. Boost_DetailedMonitoring No False − Produce histograms for detailed boost-wise monitoring. Boost_Type No AdaBoost AdaBoost, Bagging, HighEdgeGauss, HighEdgeCoPara Boosting type for the classifiers. Boost_BaggedSampleFraction No 0.6 − Relative size of bagged event sample to original size of the data sample (used whenever bagging is used). Boost_MethodWeightType No ByError ByError, Average, ByROC, ByOverlap, LastMethod How to set the final weight of the boosted classifiers. Boost_RecalculateMVACut No True − Recalculate the classifier MVA Signallike cut at every boost iteration. Boost_AdaBoostBeta No 1 − The ADA boost parameter that sets the effect of every boost step on the events' weights. Boost_Transform No step step, linear, log, gauss Type of transform applied to every boosted method linear, log, step. Boost_RandomSeed No 0 − Seed for random number generator used for bagging. Configuration options for MVA method :. Configuration options reference for MVA method: RuleFit. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). GDTau No -1 − Gradient-directed (GD) path: default fit cut-off. GDTauPrec No 0.01 − GD path: precision",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:19730,Deployability,Configurat,Configuration,19730," of steps. GDErrScale No 1.1 − Stop scan when error > scale*errmin. LinQuantile No 0.025 − Quantile of linear terms (removes outliers). GDPathEveFrac No 0.5 − Fraction of events used for the path search. GDValidEveFrac No 0.5 − Fraction of events used for the validation. fEventsMin No 0.1 − Minimum fraction of events in a splittable node. fEventsMax No 0.9 − Maximum fraction of events in a splittable node. nTrees No 20 − Number of trees in forest. ForestType No AdaBoost AdaBoost, Random Method to use for forest generation (AdaBoost or RandomForest). RuleMinDist No 0.001 − Minimum distance between rules. MinImp No 0.01 − Minimum rule importance accepted. Model No ModRuleLinear ModRule, ModRuleLinear, ModLinear Model to be used. RuleFitModule No RFTMVA RFTMVA, RFFriedman Which RuleFit module to use. RFWorkDir No ./rulefit − Friedman's RuleFit module (RFF): working dir. RFNrules No 2000 − RFF: Mximum number of rules. RFNendnodes No 4 − RFF: Average number of end nodes. Configuration options for MVA method :. Configuration options reference for MVA method: Likelihood. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). TransformOutput No False − Transform likelihood ou",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:19770,Deployability,Configurat,Configuration,19770,"r > scale*errmin. LinQuantile No 0.025 − Quantile of linear terms (removes outliers). GDPathEveFrac No 0.5 − Fraction of events used for the path search. GDValidEveFrac No 0.5 − Fraction of events used for the validation. fEventsMin No 0.1 − Minimum fraction of events in a splittable node. fEventsMax No 0.9 − Maximum fraction of events in a splittable node. nTrees No 20 − Number of trees in forest. ForestType No AdaBoost AdaBoost, Random Method to use for forest generation (AdaBoost or RandomForest). RuleMinDist No 0.001 − Minimum distance between rules. MinImp No 0.01 − Minimum rule importance accepted. Model No ModRuleLinear ModRule, ModRuleLinear, ModLinear Model to be used. RuleFitModule No RFTMVA RFTMVA, RFFriedman Which RuleFit module to use. RFWorkDir No ./rulefit − Friedman's RuleFit module (RFF): working dir. RFNrules No 2000 − RFF: Mximum number of rules. RFNendnodes No 4 − RFF: Average number of end nodes. Configuration options for MVA method :. Configuration options reference for MVA method: Likelihood. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). TransformOutput No False − Transform likelihood output by inverse sigmoid function. Configuration op",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:20783,Deployability,Configurat,Configuration,20783,"for MVA method: Likelihood. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). TransformOutput No False − Transform likelihood output by inverse sigmoid function. Configuration options for MVA method :. Configuration options reference for MVA method: MLP. Option Array Default value Predefined values Description. NCycles No 500 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden layer architecture. NeuronType No sigmoid − Neuron activation function type. RandomSeed No 1 − Random seed for initial synapse weights (0 means unique seed for each run; default value '1'). EstimatorType No MSE MSE, CE, linear, sigmoid, tanh, radial MSE (Mean Square Estimator) for Gaussian Likelihood or CE(Cross-Entropy) for Bernoulli Likelihood. NeuronInputType No sum sum, sqsum, abssum Neuron input function type. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Ga",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:20823,Deployability,Configurat,Configuration,20823,"lt value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). TransformOutput No False − Transform likelihood output by inverse sigmoid function. Configuration options for MVA method :. Configuration options reference for MVA method: MLP. Option Array Default value Predefined values Description. NCycles No 500 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden layer architecture. NeuronType No sigmoid − Neuron activation function type. RandomSeed No 1 − Random seed for initial synapse weights (0 means unique seed for each run; default value '1'). EstimatorType No MSE MSE, CE, linear, sigmoid, tanh, radial MSE (Mean Square Estimator) for Gaussian Likelihood or CE(Cross-Entropy) for Bernoulli Likelihood. NeuronInputType No sum sum, sqsum, abssum Neuron input function type. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the give",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:23827,Deployability,Update,UpdateLimit,23827,"fterwards, all events are taken for training. SamplingImportance No 1 − The sampling weights of events in epochs which successful (worse estimator than before) are multiplied with SamplingImportance, else they are divided. SamplingTraining No True − The training sample is sampled. SamplingTesting No False − The testing sample is sampled. ResetStep No 50 − How often BFGS should reset history. Tau No 3 − LineSearch size step. BPMode No sequential sequential, batch Back-propagation learning mode: sequential or batch. BatchSize No -1 − Batch size: number of events/batch, only set if in Batch Mode, -1 for BatchSize=number_of_events. ConvergenceImprove No 1e-30 − Minimum improvement which counts as improvement (<0 means automatic convergence check is turned off). ConvergenceTests No -1 − Number of steps (without improvement) required for convergence (<0 means automatic convergence check is turned off). UseRegulator No False − Use regulator to avoid over-training. UpdateLimit No 10000 − Maximum times of regulator update. CalculateErrors No False − Calculates inverse Hessian matrix at the end of the training to be able to calculate the uncertainties of an MVA value. WeightRange No 1 − Take the events for the estimator calculations from small deviations from the desired value to large deviations only over the weight range. Configuration options for MVA method :. Configuration options reference for MVA method: Cuts. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:23877,Deployability,update,update,23877,"fterwards, all events are taken for training. SamplingImportance No 1 − The sampling weights of events in epochs which successful (worse estimator than before) are multiplied with SamplingImportance, else they are divided. SamplingTraining No True − The training sample is sampled. SamplingTesting No False − The testing sample is sampled. ResetStep No 50 − How often BFGS should reset history. Tau No 3 − LineSearch size step. BPMode No sequential sequential, batch Back-propagation learning mode: sequential or batch. BatchSize No -1 − Batch size: number of events/batch, only set if in Batch Mode, -1 for BatchSize=number_of_events. ConvergenceImprove No 1e-30 − Minimum improvement which counts as improvement (<0 means automatic convergence check is turned off). ConvergenceTests No -1 − Number of steps (without improvement) required for convergence (<0 means automatic convergence check is turned off). UseRegulator No False − Use regulator to avoid over-training. UpdateLimit No 10000 − Maximum times of regulator update. CalculateErrors No False − Calculates inverse Hessian matrix at the end of the training to be able to calculate the uncertainties of an MVA value. WeightRange No 1 − Take the events for the estimator calculations from small deviations from the desired value to large deviations only over the weight range. Configuration options for MVA method :. Configuration options reference for MVA method: Cuts. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:24191,Deployability,Configurat,Configuration,24191," − How often BFGS should reset history. Tau No 3 − LineSearch size step. BPMode No sequential sequential, batch Back-propagation learning mode: sequential or batch. BatchSize No -1 − Batch size: number of events/batch, only set if in Batch Mode, -1 for BatchSize=number_of_events. ConvergenceImprove No 1e-30 − Minimum improvement which counts as improvement (<0 means automatic convergence check is turned off). ConvergenceTests No -1 − Number of steps (without improvement) required for convergence (<0 means automatic convergence check is turned off). UseRegulator No False − Use regulator to avoid over-training. UpdateLimit No 10000 − Maximum times of regulator update. CalculateErrors No False − Calculates inverse Hessian matrix at the end of the training to be able to calculate the uncertainties of an MVA value. WeightRange No 1 − Take the events for the estimator calculations from small deviations from the desired value to large deviations only over the weight range. Configuration options for MVA method :. Configuration options reference for MVA method: Cuts. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). FitMethod No GA GA, SA, MC, MCEvents, MINUIT, EventScan ",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:24231,Deployability,Configurat,Configuration,24231,"3 − LineSearch size step. BPMode No sequential sequential, batch Back-propagation learning mode: sequential or batch. BatchSize No -1 − Batch size: number of events/batch, only set if in Batch Mode, -1 for BatchSize=number_of_events. ConvergenceImprove No 1e-30 − Minimum improvement which counts as improvement (<0 means automatic convergence check is turned off). ConvergenceTests No -1 − Number of steps (without improvement) required for convergence (<0 means automatic convergence check is turned off). UseRegulator No False − Use regulator to avoid over-training. UpdateLimit No 10000 − Maximum times of regulator update. CalculateErrors No False − Calculates inverse Hessian matrix at the end of the training to be able to calculate the uncertainties of an MVA value. WeightRange No 1 − Take the events for the estimator calculations from small deviations from the desired value to large deviations only over the weight range. Configuration options for MVA method :. Configuration options reference for MVA method: Cuts. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). FitMethod No GA GA, SA, MC, MCEvents, MINUIT, EventScan Minimisation Method (GA, SA, and MC are the pri",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:25630,Deployability,Configurat,Configuration,25630,"lClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). FitMethod No GA GA, SA, MC, MCEvents, MINUIT, EventScan Minimisation Method (GA, SA, and MC are the primary methods to be used; the others have been introduced for testing purposes and are depreciated). EffMethod No EffSel EffSel, EffPDF Selection Method. CutRangeMin Yes -1 − Minimum of allowed cut range (set per variable). CutRangeMax Yes -1 − Maximum of allowed cut range (set per variable). VarProp Yes NotEnforced NotEnforced, FMax, FMin, FSmart Categorisation of cuts. Configuration options for MVA method :. Configuration options reference for MVA method: PDEFoam. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). SigBgSeparate No False − Separate foams for signal an",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:25670,Deployability,Configurat,Configuration,25670," Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). FitMethod No GA GA, SA, MC, MCEvents, MINUIT, EventScan Minimisation Method (GA, SA, and MC are the primary methods to be used; the others have been introduced for testing purposes and are depreciated). EffMethod No EffSel EffSel, EffPDF Selection Method. CutRangeMin Yes -1 − Minimum of allowed cut range (set per variable). CutRangeMax Yes -1 − Maximum of allowed cut range (set per variable). VarProp Yes NotEnforced NotEnforced, FMax, FMin, FSmart Categorisation of cuts. Configuration options for MVA method :. Configuration options reference for MVA method: PDEFoam. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). SigBgSeparate No False − Separate foams for signal and background. TailCut No 0.001 − Fraction of outl",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:27754,Deployability,Configurat,Configuration,27754,"0666667 − Size of sampling box, used for density calculation during foam build-up (maximum value: 1.0 is equivalent to volume of entire foam). nActiveCells No 500 − Maximum number of active cells to be created by the foam. nSampl No 2000 − Number of generated MC events per cell. nBin No 5 − Number of bins in edge histograms. Compress No True − Compress foam output file. MultiTargetRegression No False − Do regression with multiple targets. Nmin No 100 − Number of events in cell required to split cell. MaxDepth No 0 − Maximum depth of cell tree (0=unlimited). FillFoamWithOrigWeights No False − Fill foam with original or boost weights. UseYesNoCell No False − Return -1 or 1 for bkg or signal like events. DTLogic No None None, GiniIndex, MisClassificationError, CrossEntropy, GiniIndexWithLaplace, SdivSqrtSplusB Use decision tree algorithm to split cells. Kernel No None None, Gauss, LinNeighbors Kernel type used. TargetSelection No Mean Mean, Mpv Target selection method. Configuration options for MVA method :. Configuration options reference for MVA method: TMlpANN. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NCycles No 200 − Number of training cycles. HiddenLay",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:27794,Deployability,Configurat,Configuration,27794," calculation during foam build-up (maximum value: 1.0 is equivalent to volume of entire foam). nActiveCells No 500 − Maximum number of active cells to be created by the foam. nSampl No 2000 − Number of generated MC events per cell. nBin No 5 − Number of bins in edge histograms. Compress No True − Compress foam output file. MultiTargetRegression No False − Do regression with multiple targets. Nmin No 100 − Number of events in cell required to split cell. MaxDepth No 0 − Maximum depth of cell tree (0=unlimited). FillFoamWithOrigWeights No False − Fill foam with original or boost weights. UseYesNoCell No False − Return -1 or 1 for bkg or signal like events. DTLogic No None None, GiniIndex, MisClassificationError, CrossEntropy, GiniIndexWithLaplace, SdivSqrtSplusB Use decision tree algorithm to split cells. Kernel No None None, Gauss, LinNeighbors Kernel type used. TargetSelection No Mean Mean, Mpv Target selection method. Configuration options for MVA method :. Configuration options reference for MVA method: TMlpANN. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NCycles No 200 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden layer arch",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:29106,Deployability,Configurat,Configuration,29106," transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NCycles No 200 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden layer architecture (N stands for number of variables; any integers may also be used). ValidationFraction No 0.5 − Fraction of events in training tree used for cross validation. LearningMethod No Stochastic Stochastic, Batch, SteepestDescent, RibierePolak, FletcherReeves, BFGS Learning method. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Simulated Annealing (SA). Option Array Default value Predefined values Description. MaxCalls No 100000 − Maximum number of minimisation calls. InitialTemp No 1e+06 − Initial temperature. MinTemp No 1e-06 − Mimimum temperature. Eps No 1e-10 − Epsilon. TempScale No 1 − Temperature scale. AdaptiveSpeed No 1 − Adaptive speed. TempAdaptiveStep No 0.009875 − Step made in each generation temperature adaptive. UseDefaultScale No False − Use default temperature scale for temperature minimisation algorithm. UseDefaultTemp No False − Use default initial temperature. KernelTemp No IncAdaptive IncAdaptive, DecAdaptive, Sqrt, Log, Sin, Homo, Geo Temperature minimisation algorithm. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Monte Carlo sampling (MC). Option Array Default value Predefined values Description. SampleSize No 100000 − Number of Mont",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:29171,Deployability,Configurat,Configuration,29171,"G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NCycles No 200 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden layer architecture (N stands for number of variables; any integers may also be used). ValidationFraction No 0.5 − Fraction of events in training tree used for cross validation. LearningMethod No Stochastic Stochastic, Batch, SteepestDescent, RibierePolak, FletcherReeves, BFGS Learning method. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Simulated Annealing (SA). Option Array Default value Predefined values Description. MaxCalls No 100000 − Maximum number of minimisation calls. InitialTemp No 1e+06 − Initial temperature. MinTemp No 1e-06 − Mimimum temperature. Eps No 1e-10 − Epsilon. TempScale No 1 − Temperature scale. AdaptiveSpeed No 1 − Adaptive speed. TempAdaptiveStep No 0.009875 − Step made in each generation temperature adaptive. UseDefaultScale No False − Use default temperature scale for temperature minimisation algorithm. UseDefaultTemp No False − Use default initial temperature. KernelTemp No IncAdaptive IncAdaptive, DecAdaptive, Sqrt, Log, Sin, Homo, Geo Temperature minimisation algorithm. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Monte Carlo sampling (MC). Option Array Default value Predefined values Description. SampleSize No 100000 − Number of Monte Carlo events in toy sample. Sigma No -1 − If > 0: new points are gene",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:29899,Deployability,Configurat,Configuration,29899,"tion of events in training tree used for cross validation. LearningMethod No Stochastic Stochastic, Batch, SteepestDescent, RibierePolak, FletcherReeves, BFGS Learning method. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Simulated Annealing (SA). Option Array Default value Predefined values Description. MaxCalls No 100000 − Maximum number of minimisation calls. InitialTemp No 1e+06 − Initial temperature. MinTemp No 1e-06 − Mimimum temperature. Eps No 1e-10 − Epsilon. TempScale No 1 − Temperature scale. AdaptiveSpeed No 1 − Adaptive speed. TempAdaptiveStep No 0.009875 − Step made in each generation temperature adaptive. UseDefaultScale No False − Use default temperature scale for temperature minimisation algorithm. UseDefaultTemp No False − Use default initial temperature. KernelTemp No IncAdaptive IncAdaptive, DecAdaptive, Sqrt, Log, Sin, Homo, Geo Temperature minimisation algorithm. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Monte Carlo sampling (MC). Option Array Default value Predefined values Description. SampleSize No 100000 − Number of Monte Carlo events in toy sample. Sigma No -1 − If > 0: new points are generated according to Gauss around best value and with Sigma in units of interval length. Seed No 100 − Seed for the random generator (0 takes random seeds). Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: TMinuit (MT). Option Array Default value Predefined values Description. ErrorLevel No 1 − TMinuit: error level: 0.5=logL fit, 1=chi-squared fit. PrintLevel No -1 − TMinuit: output level: -1=least, 0, +1=all garbage. FitStrategy No 2 − TMinuit: fit strategy: 2=best. PrintWarnings No False − TMinuit: suppress warnings. UseImprove No True − TMinuit: use IMPROVE. UseMinos No True − TMinuit: use MINOS. SetBatch No False − TMinuit: use batch mode. MaxC",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:29964,Deployability,Configurat,Configuration,29964,"d No Stochastic Stochastic, Batch, SteepestDescent, RibierePolak, FletcherReeves, BFGS Learning method. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Simulated Annealing (SA). Option Array Default value Predefined values Description. MaxCalls No 100000 − Maximum number of minimisation calls. InitialTemp No 1e+06 − Initial temperature. MinTemp No 1e-06 − Mimimum temperature. Eps No 1e-10 − Epsilon. TempScale No 1 − Temperature scale. AdaptiveSpeed No 1 − Adaptive speed. TempAdaptiveStep No 0.009875 − Step made in each generation temperature adaptive. UseDefaultScale No False − Use default temperature scale for temperature minimisation algorithm. UseDefaultTemp No False − Use default initial temperature. KernelTemp No IncAdaptive IncAdaptive, DecAdaptive, Sqrt, Log, Sin, Homo, Geo Temperature minimisation algorithm. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Monte Carlo sampling (MC). Option Array Default value Predefined values Description. SampleSize No 100000 − Number of Monte Carlo events in toy sample. Sigma No -1 − If > 0: new points are generated according to Gauss around best value and with Sigma in units of interval length. Seed No 100 − Seed for the random generator (0 takes random seeds). Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: TMinuit (MT). Option Array Default value Predefined values Description. ErrorLevel No 1 − TMinuit: error level: 0.5=logL fit, 1=chi-squared fit. PrintLevel No -1 − TMinuit: output level: -1=least, 0, +1=all garbage. FitStrategy No 2 − TMinuit: fit strategy: 2=best. PrintWarnings No False − TMinuit: suppress warnings. UseImprove No True − TMinuit: use IMPROVE. UseMinos No True − TMinuit: use MINOS. SetBatch No False − TMinuit: use batch mode. MaxCalls No 1000 − TMinuit: approximate maximum number of function calls. To",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:30364,Deployability,Configurat,Configuration,30364,"l temperature. MinTemp No 1e-06 − Mimimum temperature. Eps No 1e-10 − Epsilon. TempScale No 1 − Temperature scale. AdaptiveSpeed No 1 − Adaptive speed. TempAdaptiveStep No 0.009875 − Step made in each generation temperature adaptive. UseDefaultScale No False − Use default temperature scale for temperature minimisation algorithm. UseDefaultTemp No False − Use default initial temperature. KernelTemp No IncAdaptive IncAdaptive, DecAdaptive, Sqrt, Log, Sin, Homo, Geo Temperature minimisation algorithm. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Monte Carlo sampling (MC). Option Array Default value Predefined values Description. SampleSize No 100000 − Number of Monte Carlo events in toy sample. Sigma No -1 − If > 0: new points are generated according to Gauss around best value and with Sigma in units of interval length. Seed No 100 − Seed for the random generator (0 takes random seeds). Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: TMinuit (MT). Option Array Default value Predefined values Description. ErrorLevel No 1 − TMinuit: error level: 0.5=logL fit, 1=chi-squared fit. PrintLevel No -1 − TMinuit: output level: -1=least, 0, +1=all garbage. FitStrategy No 2 − TMinuit: fit strategy: 2=best. PrintWarnings No False − TMinuit: suppress warnings. UseImprove No True − TMinuit: use IMPROVE. UseMinos No True − TMinuit: use MINOS. SetBatch No False − TMinuit: use batch mode. MaxCalls No 1000 − TMinuit: approximate maximum number of function calls. Tolerance No 0.1 − TMinuit: tolerance to the function value at the minimum. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Genetic Algorithm (GA). Option Array Default value Predefined values Description. PopSize No 300 − Population size for GA. Steps No 40 − Number of steps for convergence. Cycles No 3 − Independent cycles",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:30429,Deployability,Configurat,Configuration,30429,"0 − Epsilon. TempScale No 1 − Temperature scale. AdaptiveSpeed No 1 − Adaptive speed. TempAdaptiveStep No 0.009875 − Step made in each generation temperature adaptive. UseDefaultScale No False − Use default temperature scale for temperature minimisation algorithm. UseDefaultTemp No False − Use default initial temperature. KernelTemp No IncAdaptive IncAdaptive, DecAdaptive, Sqrt, Log, Sin, Homo, Geo Temperature minimisation algorithm. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Monte Carlo sampling (MC). Option Array Default value Predefined values Description. SampleSize No 100000 − Number of Monte Carlo events in toy sample. Sigma No -1 − If > 0: new points are generated according to Gauss around best value and with Sigma in units of interval length. Seed No 100 − Seed for the random generator (0 takes random seeds). Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: TMinuit (MT). Option Array Default value Predefined values Description. ErrorLevel No 1 − TMinuit: error level: 0.5=logL fit, 1=chi-squared fit. PrintLevel No -1 − TMinuit: output level: -1=least, 0, +1=all garbage. FitStrategy No 2 − TMinuit: fit strategy: 2=best. PrintWarnings No False − TMinuit: suppress warnings. UseImprove No True − TMinuit: use IMPROVE. UseMinos No True − TMinuit: use MINOS. SetBatch No False − TMinuit: use batch mode. MaxCalls No 1000 − TMinuit: approximate maximum number of function calls. Tolerance No 0.1 − TMinuit: tolerance to the function value at the minimum. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Genetic Algorithm (GA). Option Array Default value Predefined values Description. PopSize No 300 − Population size for GA. Steps No 40 − Number of steps for convergence. Cycles No 3 − Independent cycles of GA fitting. SC_steps No 10 − Spread control, steps. SC_rate N",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:31077,Deployability,Configurat,Configuration,31077,"ize No 100000 − Number of Monte Carlo events in toy sample. Sigma No -1 − If > 0: new points are generated according to Gauss around best value and with Sigma in units of interval length. Seed No 100 − Seed for the random generator (0 takes random seeds). Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: TMinuit (MT). Option Array Default value Predefined values Description. ErrorLevel No 1 − TMinuit: error level: 0.5=logL fit, 1=chi-squared fit. PrintLevel No -1 − TMinuit: output level: -1=least, 0, +1=all garbage. FitStrategy No 2 − TMinuit: fit strategy: 2=best. PrintWarnings No False − TMinuit: suppress warnings. UseImprove No True − TMinuit: use IMPROVE. UseMinos No True − TMinuit: use MINOS. SetBatch No False − TMinuit: use batch mode. MaxCalls No 1000 − TMinuit: approximate maximum number of function calls. Tolerance No 0.1 − TMinuit: tolerance to the function value at the minimum. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Genetic Algorithm (GA). Option Array Default value Predefined values Description. PopSize No 300 − Population size for GA. Steps No 40 − Number of steps for convergence. Cycles No 3 − Independent cycles of GA fitting. SC_steps No 10 − Spread control, steps. SC_rate No 5 − Spread control, rate: factor is changed depending on the rate. SC_factor No 0.95 − Spread control, factor. ConvCrit No 0.001 − Convergence criteria. SaveBestGen No 1 − Saves the best n results from each generation. They are included in the last cycle. SaveBestCycle No 10 − Saves the best n results from each cycle. They are included in the last cycle. The value should be set to at least 1.0. Trim No False − Trim the population to PopSize after assessing the fitness of each individual. Seed No 100 − Set seed of random generator (0 gives random seeds). Configuration options given in the ""PrepareForTrainingAndTesting"" call; these options ",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:31142,Deployability,Configurat,Configuration,31142," − If > 0: new points are generated according to Gauss around best value and with Sigma in units of interval length. Seed No 100 − Seed for the random generator (0 takes random seeds). Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: TMinuit (MT). Option Array Default value Predefined values Description. ErrorLevel No 1 − TMinuit: error level: 0.5=logL fit, 1=chi-squared fit. PrintLevel No -1 − TMinuit: output level: -1=least, 0, +1=all garbage. FitStrategy No 2 − TMinuit: fit strategy: 2=best. PrintWarnings No False − TMinuit: suppress warnings. UseImprove No True − TMinuit: use IMPROVE. UseMinos No True − TMinuit: use MINOS. SetBatch No False − TMinuit: use batch mode. MaxCalls No 1000 − TMinuit: approximate maximum number of function calls. Tolerance No 0.1 − TMinuit: tolerance to the function value at the minimum. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Genetic Algorithm (GA). Option Array Default value Predefined values Description. PopSize No 300 − Population size for GA. Steps No 40 − Number of steps for convergence. Cycles No 3 − Independent cycles of GA fitting. SC_steps No 10 − Spread control, steps. SC_rate No 5 − Spread control, rate: factor is changed depending on the rate. SC_factor No 0.95 − Spread control, factor. ConvCrit No 0.001 − Convergence criteria. SaveBestGen No 1 − Saves the best n results from each generation. They are included in the last cycle. SaveBestCycle No 10 − Saves the best n results from each cycle. They are included in the last cycle. The value should be set to at least 1.0. Trim No False − Trim the population to PopSize after assessing the fitness of each individual. Seed No 100 − Set seed of random generator (0 gives random seeds). Configuration options given in the ""PrepareForTrainingAndTesting"" call; these options define the creation of the data sets used for training and expert vali",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:32023,Deployability,Configurat,Configuration,32023,"and tuning of specific fitter :. Configuration options reference for fitting method: Genetic Algorithm (GA). Option Array Default value Predefined values Description. PopSize No 300 − Population size for GA. Steps No 40 − Number of steps for convergence. Cycles No 3 − Independent cycles of GA fitting. SC_steps No 10 − Spread control, steps. SC_rate No 5 − Spread control, rate: factor is changed depending on the rate. SC_factor No 0.95 − Spread control, factor. ConvCrit No 0.001 − Convergence criteria. SaveBestGen No 1 − Saves the best n results from each generation. They are included in the last cycle. SaveBestCycle No 10 − Saves the best n results from each cycle. They are included in the last cycle. The value should be set to at least 1.0. Trim No False − Trim the population to PopSize after assessing the fitness of each individual. Seed No 100 − Set seed of random generator (0 gives random seeds). Configuration options given in the ""PrepareForTrainingAndTesting"" call; these options define the creation of the data sets used for training and expert validation by TMVA :. Configuration options reference for class: DataSetFactory. Option Array Default value Predefined values Description. SplitMode No Random Random, Alternate, Block Method of picking training and testing events (default: random). MixMode No SameAsSplitMode SameAsSplitMode, Random, Alternate, Block Method of mixing events of differnt classes into one dataset (default: SameAsSplitMode). SplitSeed No 100 − Seed for random event shuffling. NormMode No EqualNumEvents None, NumEvents, EqualNumEvents Overall renormalisation of event-by-event weights used in the training (NumEvents: average weight of 1 per event, independently for signal and background; EqualNumEvents: average weight of 1 per event for signal, and sum of weights for background equal to sum of weights for signal). nTrain_Signal No 0 − Number of training events of class Signal (default: 0 = all). nTest_Signal No 0 − Number of test events of clas",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:32197,Deployability,Configurat,Configuration,32197,"Array Default value Predefined values Description. PopSize No 300 − Population size for GA. Steps No 40 − Number of steps for convergence. Cycles No 3 − Independent cycles of GA fitting. SC_steps No 10 − Spread control, steps. SC_rate No 5 − Spread control, rate: factor is changed depending on the rate. SC_factor No 0.95 − Spread control, factor. ConvCrit No 0.001 − Convergence criteria. SaveBestGen No 1 − Saves the best n results from each generation. They are included in the last cycle. SaveBestCycle No 10 − Saves the best n results from each cycle. They are included in the last cycle. The value should be set to at least 1.0. Trim No False − Trim the population to PopSize after assessing the fitness of each individual. Seed No 100 − Set seed of random generator (0 gives random seeds). Configuration options given in the ""PrepareForTrainingAndTesting"" call; these options define the creation of the data sets used for training and expert validation by TMVA :. Configuration options reference for class: DataSetFactory. Option Array Default value Predefined values Description. SplitMode No Random Random, Alternate, Block Method of picking training and testing events (default: random). MixMode No SameAsSplitMode SameAsSplitMode, Random, Alternate, Block Method of mixing events of differnt classes into one dataset (default: SameAsSplitMode). SplitSeed No 100 − Seed for random event shuffling. NormMode No EqualNumEvents None, NumEvents, EqualNumEvents Overall renormalisation of event-by-event weights used in the training (NumEvents: average weight of 1 per event, independently for signal and background; EqualNumEvents: average weight of 1 per event for signal, and sum of weights for background equal to sum of weights for signal). nTrain_Signal No 0 − Number of training events of class Signal (default: 0 = all). nTest_Signal No 0 − Number of test events of class Signal (default: 0 = all). nTrain_Background No 0 − Number of training events of class Background (default: 0 = all",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:33432,Deployability,Configurat,Configuration,33432,"ameAsSplitMode, Random, Alternate, Block Method of mixing events of differnt classes into one dataset (default: SameAsSplitMode). SplitSeed No 100 − Seed for random event shuffling. NormMode No EqualNumEvents None, NumEvents, EqualNumEvents Overall renormalisation of event-by-event weights used in the training (NumEvents: average weight of 1 per event, independently for signal and background; EqualNumEvents: average weight of 1 per event for signal, and sum of weights for background equal to sum of weights for signal). nTrain_Signal No 0 − Number of training events of class Signal (default: 0 = all). nTest_Signal No 0 − Number of test events of class Signal (default: 0 = all). nTrain_Background No 0 − Number of training events of class Background (default: 0 = all). nTest_Background No 0 − Number of test events of class Background (default: 0 = all). V No False − Verbosity (default: true). VerboseLevel No Info Debug, Verbose, Info VerboseLevel (Debug/Verbose/Info). Configuration options for the PDF class :. Configuration options reference for class: PDF. Option Array Default value Predefined values Description. NSmooth No 0 − Number of smoothing iterations for the input histograms. MinNSmooth No -1 − Min number of smoothing iterations, for bins with most data. MaxNSmooth No -1 − Max number of smoothing iterations, for bins with least data. NAvEvtPerBin No 50 − Average number of events per PDF bin. Nbins No 0 − Defined number of bins for the histogram from which the PDF is created. CheckHist No False − Whether or not to check the source histogram of the PDF. PDFInterpol No Spline2 Spline0, Spline1, Spline2, Spline3, Spline5, KDE Interpolation method for reference histograms (e.g. Spline2 or KDE). KDEtype No Gauss Gauss KDE kernel type (1=Gauss). KDEiter No Nonadaptive Nonadaptive, Adaptive Number of iterations (1=non-adaptive, 2=adaptive). KDEFineFactor No 1 − Fine tuning factor for Adaptive KDE: Factor to multyply the width of the kernel. KDEborder No None None, Reno",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:33475,Deployability,Configurat,Configuration,33475,"d of mixing events of differnt classes into one dataset (default: SameAsSplitMode). SplitSeed No 100 − Seed for random event shuffling. NormMode No EqualNumEvents None, NumEvents, EqualNumEvents Overall renormalisation of event-by-event weights used in the training (NumEvents: average weight of 1 per event, independently for signal and background; EqualNumEvents: average weight of 1 per event for signal, and sum of weights for background equal to sum of weights for signal). nTrain_Signal No 0 − Number of training events of class Signal (default: 0 = all). nTest_Signal No 0 − Number of test events of class Signal (default: 0 = all). nTrain_Background No 0 − Number of training events of class Background (default: 0 = all). nTest_Background No 0 − Number of test events of class Background (default: 0 = all). V No False − Verbosity (default: true). VerboseLevel No Info Debug, Verbose, Info VerboseLevel (Debug/Verbose/Info). Configuration options for the PDF class :. Configuration options reference for class: PDF. Option Array Default value Predefined values Description. NSmooth No 0 − Number of smoothing iterations for the input histograms. MinNSmooth No -1 − Min number of smoothing iterations, for bins with most data. MaxNSmooth No -1 − Max number of smoothing iterations, for bins with least data. NAvEvtPerBin No 50 − Average number of events per PDF bin. Nbins No 0 − Defined number of bins for the histogram from which the PDF is created. CheckHist No False − Whether or not to check the source histogram of the PDF. PDFInterpol No Spline2 Spline0, Spline1, Spline2, Spline3, Spline5, KDE Interpolation method for reference histograms (e.g. Spline2 or KDE). KDEtype No Gauss Gauss KDE kernel type (1=Gauss). KDEiter No Nonadaptive Nonadaptive, Adaptive Number of iterations (1=non-adaptive, 2=adaptive). KDEFineFactor No 1 − Fine tuning factor for Adaptive KDE: Factor to multyply the width of the kernel. KDEborder No None None, Renorm, Mirror Border effects treatment (1=no tre",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:34554,Deployability,Configurat,Configuration,34554,"r class: PDF. Option Array Default value Predefined values Description. NSmooth No 0 − Number of smoothing iterations for the input histograms. MinNSmooth No -1 − Min number of smoothing iterations, for bins with most data. MaxNSmooth No -1 − Max number of smoothing iterations, for bins with least data. NAvEvtPerBin No 50 − Average number of events per PDF bin. Nbins No 0 − Defined number of bins for the histogram from which the PDF is created. CheckHist No False − Whether or not to check the source histogram of the PDF. PDFInterpol No Spline2 Spline0, Spline1, Spline2, Spline3, Spline5, KDE Interpolation method for reference histograms (e.g. Spline2 or KDE). KDEtype No Gauss Gauss KDE kernel type (1=Gauss). KDEiter No Nonadaptive Nonadaptive, Adaptive Number of iterations (1=non-adaptive, 2=adaptive). KDEFineFactor No 1 − Fine tuning factor for Adaptive KDE: Factor to multyply the width of the kernel. KDEborder No None None, Renorm, Mirror Border effects treatment (1=no treatment , 2=kernel renormalization, 3=sample mirroring). Configuration options for Factory running :. Configuration options reference for class: Factory. Option Array Default value Predefined values Description. V No False − Verbose flag. Color No True − Flag for coloured screen output (default: True, if in batch mode: False). Transformations No − List of transformations to test; formatting example: Transformations=I;D;P;U;G,D, for identity, decorrelation, PCA, Uniform and Gaussianisation followed by decorrelation transformations. Silent No False − Batch mode: boolean silent flag inhibiting any output from TMVA after the creation of the factory class object (default: False). DrawProgressBar No True − Draw progress bar to display training, testing and evaluation schedule (default: True). AnalysisType No Auto Classification, Regression, Multiclass, Auto Set the analysis type (Classification, Regression, Multiclass, Auto) (default: Auto). Page created on Mon Jul 29 00:06:19 2013 (© TMVA, 2006−2009). ",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:34599,Deployability,Configurat,Configuration,34599,"r class: PDF. Option Array Default value Predefined values Description. NSmooth No 0 − Number of smoothing iterations for the input histograms. MinNSmooth No -1 − Min number of smoothing iterations, for bins with most data. MaxNSmooth No -1 − Max number of smoothing iterations, for bins with least data. NAvEvtPerBin No 50 − Average number of events per PDF bin. Nbins No 0 − Defined number of bins for the histogram from which the PDF is created. CheckHist No False − Whether or not to check the source histogram of the PDF. PDFInterpol No Spline2 Spline0, Spline1, Spline2, Spline3, Spline5, KDE Interpolation method for reference histograms (e.g. Spline2 or KDE). KDEtype No Gauss Gauss KDE kernel type (1=Gauss). KDEiter No Nonadaptive Nonadaptive, Adaptive Number of iterations (1=non-adaptive, 2=adaptive). KDEFineFactor No 1 − Fine tuning factor for Adaptive KDE: Factor to multyply the width of the kernel. KDEborder No None None, Renorm, Mirror Border effects treatment (1=no treatment , 2=kernel renormalization, 3=sample mirroring). Configuration options for Factory running :. Configuration options reference for class: Factory. Option Array Default value Predefined values Description. V No False − Verbose flag. Color No True − Flag for coloured screen output (default: True, if in batch mode: False). Transformations No − List of transformations to test; formatting example: Transformations=I;D;P;U;G,D, for identity, decorrelation, PCA, Uniform and Gaussianisation followed by decorrelation transformations. Silent No False − Batch mode: boolean silent flag inhibiting any output from TMVA after the creation of the factory class object (default: False). DrawProgressBar No True − Draw progress bar to display training, testing and evaluation schedule (default: True). AnalysisType No Auto Classification, Regression, Multiclass, Auto Set the analysis type (Classification, Regression, Multiclass, Auto) (default: Auto). Page created on Mon Jul 29 00:06:19 2013 (© TMVA, 2006−2009). ",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:774,Energy Efficiency,Green,Greenish,774,". TMVA Options Reference. TMVA Configuration Options Reference; Reference version: TMVA-v-unknown. TMVA-version @ ROOT. Reference for configuration options defined in the option string of each MVA method booking, and for the definition of data sets used for training and testing (Factory). Table fields:. Option:; The option identifier in the option string (given, e.g., in ""factory->BookMethod(...)"" call). Array:; Can the option be set individually for each input variable via the ""[i]"" tag, where ""i"" is the ith variable?. Default value:; Value used if option is not explicitly set in the configuration option string. Predefined values:; Options can be categories of predefined values among which the user must choose. Description:; Info about the option. Colour codes:. Greenish rows:; Options shared by all MVA methods (through common base class). Bluish rows:; Specific MVA options. Yellowish rows:; Configuration options for minimiser (fitter) classes. Redish rows:; Options for other configurable classes. Available MVA methods (1st row), minimisation tools (2nd row), and other configurables (3rd row):. [MVA::HMatrix] [MVA::Fisher] [MVA::PDERS] [MVA::FDA] [MVA::LD] [MVA::SVM] [MVA::CFMlpANN] [MVA::KNN] [MVA::BDT] [MVA::Boost] [MVA::RuleFit] [MVA::Likelihood] [MVA::MLP] [MVA::Cuts] [MVA::PDEFoam] [MVA::TMlpANN]. [Fitter_SA] [Fitter_MC] [Fitter_Minuit] [Fitter_GA]. [DataSetFactory] [PDF] [Factory]. Configuration options for MVA method :. Configuration options reference for MVA method: HMatrix. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:4386,Energy Efficiency,Adapt,Adaptive,4386,"n options for MVA method :. Configuration options reference for MVA method: PDERS. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). VolumeRangeMode No Adaptive Unscaled, MinMax, RMS, Adaptive, kNN Method to determine volume size. KernelEstimator No Box Box, Sphere, Teepee, Gauss, Sinc3, Sinc5, Sinc7, Sinc9, Sinc11, Lanczos2, Lanczos3, Lanczos5, Lanczos8, Trim Kernel estimation function. DeltaFrac No 3 − nEventsMin/Max for minmax and rms volume range. NEventsMin No 100 − nEventsMin for adaptive volume range. NEventsMax No 200 − nEventsMax for adaptive volume range. MaxVIterations No 150 − MaxVIterations for adaptive volume range. InitialScale No 0.99 − InitialScale for adaptive volume range. GaussSigma No 0.1 − Width (wrt volume size) of Gaussian kernel estimator. NormTree No False − Normalize binary search tree. Configuration options for MVA method :. Configuration options reference for MVA method: FDA. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No ",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:4418,Energy Efficiency,Adapt,Adaptive,4418,"n options for MVA method :. Configuration options reference for MVA method: PDERS. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). VolumeRangeMode No Adaptive Unscaled, MinMax, RMS, Adaptive, kNN Method to determine volume size. KernelEstimator No Box Box, Sphere, Teepee, Gauss, Sinc3, Sinc5, Sinc7, Sinc9, Sinc11, Lanczos2, Lanczos3, Lanczos5, Lanczos8, Trim Kernel estimation function. DeltaFrac No 3 − nEventsMin/Max for minmax and rms volume range. NEventsMin No 100 − nEventsMin for adaptive volume range. NEventsMax No 200 − nEventsMax for adaptive volume range. MaxVIterations No 150 − MaxVIterations for adaptive volume range. InitialScale No 0.99 − InitialScale for adaptive volume range. GaussSigma No 0.1 − Width (wrt volume size) of Gaussian kernel estimator. NormTree No False − Normalize binary search tree. Configuration options for MVA method :. Configuration options reference for MVA method: FDA. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No ",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:4725,Energy Efficiency,adapt,adaptive,4725,"or, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). VolumeRangeMode No Adaptive Unscaled, MinMax, RMS, Adaptive, kNN Method to determine volume size. KernelEstimator No Box Box, Sphere, Teepee, Gauss, Sinc3, Sinc5, Sinc7, Sinc9, Sinc11, Lanczos2, Lanczos3, Lanczos5, Lanczos8, Trim Kernel estimation function. DeltaFrac No 3 − nEventsMin/Max for minmax and rms volume range. NEventsMin No 100 − nEventsMin for adaptive volume range. NEventsMax No 200 − nEventsMax for adaptive volume range. MaxVIterations No 150 − MaxVIterations for adaptive volume range. InitialScale No 0.99 − InitialScale for adaptive volume range. GaussSigma No 0.1 − Width (wrt volume size) of Gaussian kernel estimator. NormTree No False − Normalize binary search tree. Configuration options for MVA method :. Configuration options reference for MVA method: FDA. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:4783,Energy Efficiency,adapt,adaptive,4783,"variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). VolumeRangeMode No Adaptive Unscaled, MinMax, RMS, Adaptive, kNN Method to determine volume size. KernelEstimator No Box Box, Sphere, Teepee, Gauss, Sinc3, Sinc5, Sinc7, Sinc9, Sinc11, Lanczos2, Lanczos3, Lanczos5, Lanczos8, Trim Kernel estimation function. DeltaFrac No 3 − nEventsMin/Max for minmax and rms volume range. NEventsMin No 100 − nEventsMin for adaptive volume range. NEventsMax No 200 − nEventsMax for adaptive volume range. MaxVIterations No 150 − MaxVIterations for adaptive volume range. InitialScale No 0.99 − InitialScale for adaptive volume range. GaussSigma No 0.1 − Width (wrt volume size) of Gaussian kernel estimator. NormTree No False − Normalize binary search tree. Configuration options for MVA method :. Configuration options reference for MVA method: FDA. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help mes",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:4849,Energy Efficiency,adapt,adaptive,4849,"ckground,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). VolumeRangeMode No Adaptive Unscaled, MinMax, RMS, Adaptive, kNN Method to determine volume size. KernelEstimator No Box Box, Sphere, Teepee, Gauss, Sinc3, Sinc5, Sinc7, Sinc9, Sinc11, Lanczos2, Lanczos3, Lanczos5, Lanczos8, Trim Kernel estimation function. DeltaFrac No 3 − nEventsMin/Max for minmax and rms volume range. NEventsMin No 100 − nEventsMin for adaptive volume range. NEventsMax No 200 − nEventsMax for adaptive volume range. MaxVIterations No 150 − MaxVIterations for adaptive volume range. InitialScale No 0.99 − InitialScale for adaptive volume range. GaussSigma No 0.1 − Width (wrt volume size) of Gaussian kernel estimator. NormTree No False − Normalize binary search tree. Configuration options for MVA method :. Configuration options reference for MVA method: FDA. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outp",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:4912,Energy Efficiency,adapt,adaptive,4912,"aussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). VolumeRangeMode No Adaptive Unscaled, MinMax, RMS, Adaptive, kNN Method to determine volume size. KernelEstimator No Box Box, Sphere, Teepee, Gauss, Sinc3, Sinc5, Sinc7, Sinc9, Sinc11, Lanczos2, Lanczos3, Lanczos5, Lanczos8, Trim Kernel estimation function. DeltaFrac No 3 − nEventsMin/Max for minmax and rms volume range. NEventsMin No 100 − nEventsMin for adaptive volume range. NEventsMax No 200 − nEventsMax for adaptive volume range. MaxVIterations No 150 − MaxVIterations for adaptive volume range. InitialScale No 0.99 − InitialScale for adaptive volume range. GaussSigma No 0.1 − Width (wrt volume size) of Gaussian kernel estimator. NormTree No False − Normalize binary search tree. Configuration options for MVA method :. Configuration options reference for MVA method: FDA. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events ",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:14499,Energy Efficiency,efficient,efficient,14499,"s with negative weights in the BDT training (particular the boosting) : IgnoreInTraining; Boost With inverse boostweight; Pair events with negative and positive weights in traning sample and *annihilate* them (experimental!). NodePurityLimit No 0.5 − In boosting/pruning, nodes with purity > NodePurityLimit are signal; background otherwise. SeparationType No GiniIndex CrossEntropy, GiniIndex, GiniIndexWithLaplace, MisClassificationError, SDivSqrtSPlusB, RegressionVariance Separation criterion for node splitting. DoBoostMonitor No False − Create control plot with ROC integral vs tree number. UseFisherCuts No False − Use multivariate splits using the Fisher criterion. MinLinCorrForFisher No 0.8 − The minimum linear correlation between two variables demanded for use in Fisher criterion in node splitting. UseExclusiveVars No False − Variables already used in fisher criterion are not anymore analysed individually for node splitting. DoPreselection No False − and and apply automatic pre-selection for 100% efficient signal (bkg) cuts prior to training. RenormByClass No False − Individually re-normalize each event class to the original size after boosting. SigToBkgFraction No 1 − Sig to Bkg ratio used in Training (similar to NodePurityLimit, which cannot be used in real adaboost. PruneMethod No NoPruning NoPruning, ExpectedError, CostComplexity Note: for BDTs use small trees (e.g.MaxDepth=3) and NoPruning: Pruning: Method used for pruning (removal) of statistically insignificant branches . PruneStrength No 0 − Pruning strength. PruningValFraction No 0.5 − Fraction of events to use for optimizing automatic pruning. nEventsMin No 0 − deprecated: Use MinNodeSize (in % of training events) instead. GradBaggingFraction No 0.6 − deprecated: Use *BaggedSampleFraction* instead: Defines the fraction of events to be used in each iteration, e.g. when UseBaggedGrad=kTRUE. . UseNTrainEvents No 0 − deprecated: Use *BaggedSampleFraction* instead: Number of randomly picked training events us",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:16658,Energy Efficiency,monitor,monitoring,16658,"nce for MVA method: Boost. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Boost_Num No 100 − Number of times the classifier is boosted. Boost_MonitorMethod No True − Write monitoring histograms for each boosted classifier. Boost_DetailedMonitoring No False − Produce histograms for detailed boost-wise monitoring. Boost_Type No AdaBoost AdaBoost, Bagging, HighEdgeGauss, HighEdgeCoPara Boosting type for the classifiers. Boost_BaggedSampleFraction No 0.6 − Relative size of bagged event sample to original size of the data sample (used whenever bagging is used). Boost_MethodWeightType No ByError ByError, Average, ByROC, ByOverlap, LastMethod How to set the final weight of the boosted classifiers. Boost_RecalculateMVACut No True − Recalculate the classifier MVA Signallike cut at every boost iteration. Boost_AdaBoostBeta No 1 − The ADA boost parameter that sets the effect of every boost step on the events' weights. Boost_Transform No step step, linear, log, gauss Type of transform applied to every boosted method linear, log, step. Boost_RandomSeed No 0 − Seed for random number generator used for bagging. Configuration options for MVA method :. Configuration options ref",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:16788,Energy Efficiency,monitor,monitoring,16788," False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Boost_Num No 100 − Number of times the classifier is boosted. Boost_MonitorMethod No True − Write monitoring histograms for each boosted classifier. Boost_DetailedMonitoring No False − Produce histograms for detailed boost-wise monitoring. Boost_Type No AdaBoost AdaBoost, Bagging, HighEdgeGauss, HighEdgeCoPara Boosting type for the classifiers. Boost_BaggedSampleFraction No 0.6 − Relative size of bagged event sample to original size of the data sample (used whenever bagging is used). Boost_MethodWeightType No ByError ByError, Average, ByROC, ByOverlap, LastMethod How to set the final weight of the boosted classifiers. Boost_RecalculateMVACut No True − Recalculate the classifier MVA Signallike cut at every boost iteration. Boost_AdaBoostBeta No 1 − The ADA boost parameter that sets the effect of every boost step on the events' weights. Boost_Transform No step step, linear, log, gauss Type of transform applied to every boosted method linear, log, step. Boost_RandomSeed No 0 − Seed for random number generator used for bagging. Configuration options for MVA method :. Configuration options reference for MVA method: RuleFit. Option Array Default value Predefined values Description.",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:22615,Energy Efficiency,monitor,monitoring,22615,"l. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). TrainingMethod No BP BP, GA, BFGS Train with Back-Propagation (BP), BFGS Algorithm (BFGS), or Genetic Algorithm (GA - slower and worse). LearningRate No 0.02 − ANN learning rate parameter. DecayRate No 0.01 − Decay rate for learning parameter. TestRate No 10 − Test for overtraining performed at each #th epochs. EpochMonitoring No False − Provide epoch-wise monitoring plots according to TestRate (caution: causes big ROOT output file!). Sampling No 1 − Only 'Sampling' (randomly selected) events are trained each epoch. SamplingEpoch No 1 − Sampling is used for the first 'SamplingEpoch' epochs, afterwards, all events are taken for training. SamplingImportance No 1 − The sampling weights of events in epochs which successful (worse estimator than before) are multiplied with SamplingImportance, else they are divided. SamplingTraining No True − The training sample is sampled. SamplingTesting No False − The testing sample is sampled. ResetStep No 50 − How often BFGS should reset history. Tau No 3 − LineSearch size step. BPMode No sequential sequential, batch Back-propagation learning mode: sequential or batch. BatchSize No -1 − Batch size: number of events/batch, only set if in Batch Mode, -1 for BatchSize=number_of_events. ConvergenceImprove No 1e-30 − Minimum improvement which counts as improvement (<0 means automatic convergence check is turned off). Converge",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:29510,Energy Efficiency,Adapt,AdaptiveSpeed,29510,"ifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NCycles No 200 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden layer architecture (N stands for number of variables; any integers may also be used). ValidationFraction No 0.5 − Fraction of events in training tree used for cross validation. LearningMethod No Stochastic Stochastic, Batch, SteepestDescent, RibierePolak, FletcherReeves, BFGS Learning method. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Simulated Annealing (SA). Option Array Default value Predefined values Description. MaxCalls No 100000 − Maximum number of minimisation calls. InitialTemp No 1e+06 − Initial temperature. MinTemp No 1e-06 − Mimimum temperature. Eps No 1e-10 − Epsilon. TempScale No 1 − Temperature scale. AdaptiveSpeed No 1 − Adaptive speed. TempAdaptiveStep No 0.009875 − Step made in each generation temperature adaptive. UseDefaultScale No False − Use default temperature scale for temperature minimisation algorithm. UseDefaultTemp No False − Use default initial temperature. KernelTemp No IncAdaptive IncAdaptive, DecAdaptive, Sqrt, Log, Sin, Homo, Geo Temperature minimisation algorithm. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Monte Carlo sampling (MC). Option Array Default value Predefined values Description. SampleSize No 100000 − Number of Monte Carlo events in toy sample. Sigma No -1 − If > 0: new points are generated according to Gauss around best value and with Sigma in units of interval length. Seed No 100 − Seed for the random generator (0 takes random seeds). Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: TMinuit (MT). Option Array Default value Predef",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:29531,Energy Efficiency,Adapt,Adaptive,29531,"ifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NCycles No 200 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden layer architecture (N stands for number of variables; any integers may also be used). ValidationFraction No 0.5 − Fraction of events in training tree used for cross validation. LearningMethod No Stochastic Stochastic, Batch, SteepestDescent, RibierePolak, FletcherReeves, BFGS Learning method. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Simulated Annealing (SA). Option Array Default value Predefined values Description. MaxCalls No 100000 − Maximum number of minimisation calls. InitialTemp No 1e+06 − Initial temperature. MinTemp No 1e-06 − Mimimum temperature. Eps No 1e-10 − Epsilon. TempScale No 1 − Temperature scale. AdaptiveSpeed No 1 − Adaptive speed. TempAdaptiveStep No 0.009875 − Step made in each generation temperature adaptive. UseDefaultScale No False − Use default temperature scale for temperature minimisation algorithm. UseDefaultTemp No False − Use default initial temperature. KernelTemp No IncAdaptive IncAdaptive, DecAdaptive, Sqrt, Log, Sin, Homo, Geo Temperature minimisation algorithm. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Monte Carlo sampling (MC). Option Array Default value Predefined values Description. SampleSize No 100000 − Number of Monte Carlo events in toy sample. Sigma No -1 − If > 0: new points are generated according to Gauss around best value and with Sigma in units of interval length. Seed No 100 − Seed for the random generator (0 takes random seeds). Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: TMinuit (MT). Option Array Default value Predef",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:29619,Energy Efficiency,adapt,adaptive,29619,"lse − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NCycles No 200 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden layer architecture (N stands for number of variables; any integers may also be used). ValidationFraction No 0.5 − Fraction of events in training tree used for cross validation. LearningMethod No Stochastic Stochastic, Batch, SteepestDescent, RibierePolak, FletcherReeves, BFGS Learning method. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Simulated Annealing (SA). Option Array Default value Predefined values Description. MaxCalls No 100000 − Maximum number of minimisation calls. InitialTemp No 1e+06 − Initial temperature. MinTemp No 1e-06 − Mimimum temperature. Eps No 1e-10 − Epsilon. TempScale No 1 − Temperature scale. AdaptiveSpeed No 1 − Adaptive speed. TempAdaptiveStep No 0.009875 − Step made in each generation temperature adaptive. UseDefaultScale No False − Use default temperature scale for temperature minimisation algorithm. UseDefaultTemp No False − Use default initial temperature. KernelTemp No IncAdaptive IncAdaptive, DecAdaptive, Sqrt, Log, Sin, Homo, Geo Temperature minimisation algorithm. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Monte Carlo sampling (MC). Option Array Default value Predefined values Description. SampleSize No 100000 − Number of Monte Carlo events in toy sample. Sigma No -1 − If > 0: new points are generated according to Gauss around best value and with Sigma in units of interval length. Seed No 100 − Seed for the random generator (0 takes random seeds). Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: TMinuit (MT). Option Array Default value Predefined values Description. ErrorLevel No 1 − TMinuit: error level: 0.5=lo",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:34263,Energy Efficiency,Adapt,Adaptive,34263," of class Background (default: 0 = all). V No False − Verbosity (default: true). VerboseLevel No Info Debug, Verbose, Info VerboseLevel (Debug/Verbose/Info). Configuration options for the PDF class :. Configuration options reference for class: PDF. Option Array Default value Predefined values Description. NSmooth No 0 − Number of smoothing iterations for the input histograms. MinNSmooth No -1 − Min number of smoothing iterations, for bins with most data. MaxNSmooth No -1 − Max number of smoothing iterations, for bins with least data. NAvEvtPerBin No 50 − Average number of events per PDF bin. Nbins No 0 − Defined number of bins for the histogram from which the PDF is created. CheckHist No False − Whether or not to check the source histogram of the PDF. PDFInterpol No Spline2 Spline0, Spline1, Spline2, Spline3, Spline5, KDE Interpolation method for reference histograms (e.g. Spline2 or KDE). KDEtype No Gauss Gauss KDE kernel type (1=Gauss). KDEiter No Nonadaptive Nonadaptive, Adaptive Number of iterations (1=non-adaptive, 2=adaptive). KDEFineFactor No 1 − Fine tuning factor for Adaptive KDE: Factor to multyply the width of the kernel. KDEborder No None None, Renorm, Mirror Border effects treatment (1=no treatment , 2=kernel renormalization, 3=sample mirroring). Configuration options for Factory running :. Configuration options reference for class: Factory. Option Array Default value Predefined values Description. V No False − Verbose flag. Color No True − Flag for coloured screen output (default: True, if in batch mode: False). Transformations No − List of transformations to test; formatting example: Transformations=I;D;P;U;G,D, for identity, decorrelation, PCA, Uniform and Gaussianisation followed by decorrelation transformations. Silent No False − Batch mode: boolean silent flag inhibiting any output from TMVA after the creation of the factory class object (default: False). DrawProgressBar No True − Draw progress bar to display training, testing and evaluation sched",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:34300,Energy Efficiency,adapt,adaptive,34300," of class Background (default: 0 = all). V No False − Verbosity (default: true). VerboseLevel No Info Debug, Verbose, Info VerboseLevel (Debug/Verbose/Info). Configuration options for the PDF class :. Configuration options reference for class: PDF. Option Array Default value Predefined values Description. NSmooth No 0 − Number of smoothing iterations for the input histograms. MinNSmooth No -1 − Min number of smoothing iterations, for bins with most data. MaxNSmooth No -1 − Max number of smoothing iterations, for bins with least data. NAvEvtPerBin No 50 − Average number of events per PDF bin. Nbins No 0 − Defined number of bins for the histogram from which the PDF is created. CheckHist No False − Whether or not to check the source histogram of the PDF. PDFInterpol No Spline2 Spline0, Spline1, Spline2, Spline3, Spline5, KDE Interpolation method for reference histograms (e.g. Spline2 or KDE). KDEtype No Gauss Gauss KDE kernel type (1=Gauss). KDEiter No Nonadaptive Nonadaptive, Adaptive Number of iterations (1=non-adaptive, 2=adaptive). KDEFineFactor No 1 − Fine tuning factor for Adaptive KDE: Factor to multyply the width of the kernel. KDEborder No None None, Renorm, Mirror Border effects treatment (1=no treatment , 2=kernel renormalization, 3=sample mirroring). Configuration options for Factory running :. Configuration options reference for class: Factory. Option Array Default value Predefined values Description. V No False − Verbose flag. Color No True − Flag for coloured screen output (default: True, if in batch mode: False). Transformations No − List of transformations to test; formatting example: Transformations=I;D;P;U;G,D, for identity, decorrelation, PCA, Uniform and Gaussianisation followed by decorrelation transformations. Silent No False − Batch mode: boolean silent flag inhibiting any output from TMVA after the creation of the factory class object (default: False). DrawProgressBar No True − Draw progress bar to display training, testing and evaluation sched",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:34312,Energy Efficiency,adapt,adaptive,34312," of class Background (default: 0 = all). V No False − Verbosity (default: true). VerboseLevel No Info Debug, Verbose, Info VerboseLevel (Debug/Verbose/Info). Configuration options for the PDF class :. Configuration options reference for class: PDF. Option Array Default value Predefined values Description. NSmooth No 0 − Number of smoothing iterations for the input histograms. MinNSmooth No -1 − Min number of smoothing iterations, for bins with most data. MaxNSmooth No -1 − Max number of smoothing iterations, for bins with least data. NAvEvtPerBin No 50 − Average number of events per PDF bin. Nbins No 0 − Defined number of bins for the histogram from which the PDF is created. CheckHist No False − Whether or not to check the source histogram of the PDF. PDFInterpol No Spline2 Spline0, Spline1, Spline2, Spline3, Spline5, KDE Interpolation method for reference histograms (e.g. Spline2 or KDE). KDEtype No Gauss Gauss KDE kernel type (1=Gauss). KDEiter No Nonadaptive Nonadaptive, Adaptive Number of iterations (1=non-adaptive, 2=adaptive). KDEFineFactor No 1 − Fine tuning factor for Adaptive KDE: Factor to multyply the width of the kernel. KDEborder No None None, Renorm, Mirror Border effects treatment (1=no treatment , 2=kernel renormalization, 3=sample mirroring). Configuration options for Factory running :. Configuration options reference for class: Factory. Option Array Default value Predefined values Description. V No False − Verbose flag. Color No True − Flag for coloured screen output (default: True, if in batch mode: False). Transformations No − List of transformations to test; formatting example: Transformations=I;D;P;U;G,D, for identity, decorrelation, PCA, Uniform and Gaussianisation followed by decorrelation transformations. Silent No False − Batch mode: boolean silent flag inhibiting any output from TMVA after the creation of the factory class object (default: False). DrawProgressBar No True − Draw progress bar to display training, testing and evaluation sched",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:34367,Energy Efficiency,Adapt,Adaptive,34367,"fo Debug, Verbose, Info VerboseLevel (Debug/Verbose/Info). Configuration options for the PDF class :. Configuration options reference for class: PDF. Option Array Default value Predefined values Description. NSmooth No 0 − Number of smoothing iterations for the input histograms. MinNSmooth No -1 − Min number of smoothing iterations, for bins with most data. MaxNSmooth No -1 − Max number of smoothing iterations, for bins with least data. NAvEvtPerBin No 50 − Average number of events per PDF bin. Nbins No 0 − Defined number of bins for the histogram from which the PDF is created. CheckHist No False − Whether or not to check the source histogram of the PDF. PDFInterpol No Spline2 Spline0, Spline1, Spline2, Spline3, Spline5, KDE Interpolation method for reference histograms (e.g. Spline2 or KDE). KDEtype No Gauss Gauss KDE kernel type (1=Gauss). KDEiter No Nonadaptive Nonadaptive, Adaptive Number of iterations (1=non-adaptive, 2=adaptive). KDEFineFactor No 1 − Fine tuning factor for Adaptive KDE: Factor to multyply the width of the kernel. KDEborder No None None, Renorm, Mirror Border effects treatment (1=no treatment , 2=kernel renormalization, 3=sample mirroring). Configuration options for Factory running :. Configuration options reference for class: Factory. Option Array Default value Predefined values Description. V No False − Verbose flag. Color No True − Flag for coloured screen output (default: True, if in batch mode: False). Transformations No − List of transformations to test; formatting example: Transformations=I;D;P;U;G,D, for identity, decorrelation, PCA, Uniform and Gaussianisation followed by decorrelation transformations. Silent No False − Batch mode: boolean silent flag inhibiting any output from TMVA after the creation of the factory class object (default: False). DrawProgressBar No True − Draw progress bar to display training, testing and evaluation schedule (default: True). AnalysisType No Auto Classification, Regression, Multiclass, Auto Set the anal",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:35269,Energy Efficiency,schedul,schedule,35269,"r class: PDF. Option Array Default value Predefined values Description. NSmooth No 0 − Number of smoothing iterations for the input histograms. MinNSmooth No -1 − Min number of smoothing iterations, for bins with most data. MaxNSmooth No -1 − Max number of smoothing iterations, for bins with least data. NAvEvtPerBin No 50 − Average number of events per PDF bin. Nbins No 0 − Defined number of bins for the histogram from which the PDF is created. CheckHist No False − Whether or not to check the source histogram of the PDF. PDFInterpol No Spline2 Spline0, Spline1, Spline2, Spline3, Spline5, KDE Interpolation method for reference histograms (e.g. Spline2 or KDE). KDEtype No Gauss Gauss KDE kernel type (1=Gauss). KDEiter No Nonadaptive Nonadaptive, Adaptive Number of iterations (1=non-adaptive, 2=adaptive). KDEFineFactor No 1 − Fine tuning factor for Adaptive KDE: Factor to multyply the width of the kernel. KDEborder No None None, Renorm, Mirror Border effects treatment (1=no treatment , 2=kernel renormalization, 3=sample mirroring). Configuration options for Factory running :. Configuration options reference for class: Factory. Option Array Default value Predefined values Description. V No False − Verbose flag. Color No True − Flag for coloured screen output (default: True, if in batch mode: False). Transformations No − List of transformations to test; formatting example: Transformations=I;D;P;U;G,D, for identity, decorrelation, PCA, Uniform and Gaussianisation followed by decorrelation transformations. Silent No False − Batch mode: boolean silent flag inhibiting any output from TMVA after the creation of the factory class object (default: False). DrawProgressBar No True − Draw progress bar to display training, testing and evaluation schedule (default: True). AnalysisType No Auto Classification, Regression, Multiclass, Auto Set the analysis type (Classification, Regression, Multiclass, Auto) (default: Auto). Page created on Mon Jul 29 00:06:19 2013 (© TMVA, 2006−2009). ",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:2130,Integrability,message,message,2130,"[MVA::HMatrix] [MVA::Fisher] [MVA::PDERS] [MVA::FDA] [MVA::LD] [MVA::SVM] [MVA::CFMlpANN] [MVA::KNN] [MVA::BDT] [MVA::Boost] [MVA::RuleFit] [MVA::Likelihood] [MVA::MLP] [MVA::Cuts] [MVA::PDEFoam] [MVA::TMlpANN]. [Fitter_SA] [Fitter_MC] [Fitter_Minuit] [Fitter_GA]. [DataSetFactory] [PDF] [Factory]. Configuration options for MVA method :. Configuration options reference for MVA method: HMatrix. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Configuration options for MVA method :. Configuration options reference for MVA method: Fisher. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAP",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:3095,Integrability,message,message,3095,"s assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Configuration options for MVA method :. Configuration options reference for MVA method: Fisher. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Method No Fisher Fisher, Mahalanobis Discrimination method. Configuration options for MVA method :. Configuration options reference for MVA method: PDERS. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). ",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:4119,Integrability,message,message,4119,". CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Method No Fisher Fisher, Mahalanobis Discrimination method. Configuration options for MVA method :. Configuration options reference for MVA method: PDERS. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). VolumeRangeMode No Adaptive Unscaled, MinMax, RMS, Adaptive, kNN Method to determine volume size. KernelEstimator No Box Box, Sphere, Teepee, Gauss, Sinc3, Sinc5, Sinc7, Sinc9, Sinc11, Lanczos2, Lanczos3, Lanczos5, Lanczos8, Trim Kernel estimation function. DeltaFrac No 3 − nEventsMin/Max for minmax and rms volume range. NEventsMin No 100 − nEventsMin for adaptive volume range. NEventsMax No 200 − nEventsMax for adaptive volume range. MaxVIterations No 150 − MaxVIterations for adaptive volume range. InitialScale No 0.99 − InitialScale for adaptive volume range. GaussSigma No 0.1 − Width (wrt volume size) of Gaussian kernel estimator. NormTree No False − Normalize binary search tree. Configuration options for MVA method :. Conf",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:5773,Integrability,message,message,5773,"ax No 200 − nEventsMax for adaptive volume range. MaxVIterations No 150 − MaxVIterations for adaptive volume range. InitialScale No 0.99 − InitialScale for adaptive volume range. GaussSigma No 0.1 − Width (wrt volume size) of Gaussian kernel estimator. NormTree No False − Normalize binary search tree. Configuration options for MVA method :. Configuration options reference for MVA method: FDA. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Formula No (0) − The discrimination formula. ParRanges No () − Parameter ranges. FitMethod No MINUIT MC, GA, SA, MINUIT Optimisation Method. Converger No None None, MINUIT FitMethod uses Converger to improve result. Configuration options for MVA method :. Configuration options reference for MVA method: LD. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:6950,Integrability,message,message,6950," are ignored in the training (but are included for testing and performance evaluation). Formula No (0) − The discrimination formula. ParRanges No () − Parameter ranges. FitMethod No MINUIT MC, GA, SA, MINUIT Optimisation Method. Converger No None None, MINUIT FitMethod uses Converger to improve result. Configuration options for MVA method :. Configuration options reference for MVA method: LD. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Configuration options for MVA method :. Configuration options reference for MVA method: SVM. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:7912,Integrability,message,message,7912,"' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Configuration options for MVA method :. Configuration options reference for MVA method: SVM. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Gamma No 1 − RBF kernel parameter: Gamma (size of the Kernel). C No 1 − Cost parameter. Tol No 0.01 − Tolerance parameter. MaxIter No 1000 − Maximum number of training loops. Configuration options for MVA method :. Configuration options reference for MVA method: CFMlpANN. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:9054,Integrability,message,message,9054,"alse − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Gamma No 1 − RBF kernel parameter: Gamma (size of the Kernel). C No 1 − Cost parameter. Tol No 0.01 − Tolerance parameter. MaxIter No 1000 − Maximum number of training loops. Configuration options for MVA method :. Configuration options reference for MVA method: CFMlpANN. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NCycles No 3000 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden layer architecture. Configuration options for MVA method :. Configuration options reference for MVA method: KNN. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, i",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:10129,Integrability,message,message,10129,"er outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NCycles No 3000 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden layer architecture. Configuration options for MVA method :. Configuration options reference for MVA method: KNN. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). nkNN No 20 − Number of k-nearest neighbors. BalanceDepth No 6 − Binary tree balance depth. ScaleFrac No 0.8 − Fraction of events used to compute variable width. SigmaFact No 1 − Scale factor for sigma in Gaussian kernel. Kernel No Gaus − Use polynomial (=Poln) or Gaussian (=Gaus) kernel. Trim No False − Use equal number of signal and background events. UseKernel No False − Use polynomial kernel weight. UseWeight No True − Use weight to count kNN events. UseLDA No False − Use local linear discriminant - experimental feature. Configuration options for MVA method :. Configuration options reference for MVA method: BDT. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLev",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:11621,Integrability,message,message,11621," No Gaus − Use polynomial (=Poln) or Gaussian (=Gaus) kernel. Trim No False − Use equal number of signal and background events. UseKernel No False − Use polynomial kernel weight. UseWeight No True − Use weight to count kNN events. UseLDA No False − Use local linear discriminant - experimental feature. Configuration options for MVA method :. Configuration options reference for MVA method: BDT. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NTrees No 800 − Number of trees in the forest. MaxDepth No 3 − Max depth of the decision tree allowed. MinNodeSize No 5% − Minimum percentage of training events required in a leaf node (default: Classification: 5%, Regression: 0.2%). nCuts No 20 − Number of grid points in variable range used in finding optimal cut in node splitting. BoostType No AdaBoost AdaBoost, RealAdaBoost, Bagging, AdaBoostR2, Grad Boosting type for the trees in the forest . AdaBoostR2Loss No Quadratic Linear, Quadratic, Exponential Type of Loss function in AdaBoostR2. UseBaggedGrad No False − Use only a random subsample of all events for growing the trees in each iteration. (Only valid for GradBoost). Shrinkage No 1 − Learning rate for GradBoost algorith",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:16312,Integrability,message,message,16312,"n of events to be used in each iteration, e.g. when UseBaggedGrad=kTRUE. . UseNTrainEvents No 0 − deprecated: Use *BaggedSampleFraction* instead: Number of randomly picked training events used in randomised (and bagged) trees. NNodesMax No 0 − deprecated: Use MaxDepth instead to limit the tree size. Configuration options for MVA method :. Configuration options reference for MVA method: Boost. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Boost_Num No 100 − Number of times the classifier is boosted. Boost_MonitorMethod No True − Write monitoring histograms for each boosted classifier. Boost_DetailedMonitoring No False − Produce histograms for detailed boost-wise monitoring. Boost_Type No AdaBoost AdaBoost, Bagging, HighEdgeGauss, HighEdgeCoPara Boosting type for the classifiers. Boost_BaggedSampleFraction No 0.6 − Relative size of bagged event sample to original size of the data sample (used whenever bagging is used). Boost_MethodWeightType No ByError ByError, Average, ByROC, ByOverlap, LastMethod How to set the final weight of the boosted classifiers. Boost_RecalculateMVACut No True − Recalculate the classifier MVA Signallike cut at every boost iteration. Boos",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:18318,Integrability,message,message,18318,"BoostBeta No 1 − The ADA boost parameter that sets the effect of every boost step on the events' weights. Boost_Transform No step step, linear, log, gauss Type of transform applied to every boosted method linear, log, step. Boost_RandomSeed No 0 − Seed for random number generator used for bagging. Configuration options for MVA method :. Configuration options reference for MVA method: RuleFit. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). GDTau No -1 − Gradient-directed (GD) path: default fit cut-off. GDTauPrec No 0.01 − GD path: precision of tau. GDStep No 0.01 − GD path: step size. GDNSteps No 10000 − GD path: number of steps. GDErrScale No 1.1 − Stop scan when error > scale*errmin. LinQuantile No 0.025 − Quantile of linear terms (removes outliers). GDPathEveFrac No 0.5 − Fraction of events used for the path search. GDValidEveFrac No 0.5 − Fraction of events used for the validation. fEventsMin No 0.1 − Minimum fraction of events in a splittable node. fEventsMax No 0.9 − Maximum fraction of events in a splittable node. nTrees No 20 − Number of trees in forest. ForestType No AdaBoost AdaBoost, Random Method to use for forest generation (AdaBoost or RandomForest",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:20451,Integrability,message,message,20451,"ModRule, ModRuleLinear, ModLinear Model to be used. RuleFitModule No RFTMVA RFTMVA, RFFriedman Which RuleFit module to use. RFWorkDir No ./rulefit − Friedman's RuleFit module (RFF): working dir. RFNrules No 2000 − RFF: Mximum number of rules. RFNendnodes No 4 − RFF: Average number of end nodes. Configuration options for MVA method :. Configuration options reference for MVA method: Likelihood. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). TransformOutput No False − Transform likelihood output by inverse sigmoid function. Configuration options for MVA method :. Configuration options reference for MVA method: MLP. Option Array Default value Predefined values Description. NCycles No 500 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden layer architecture. NeuronType No sigmoid − Neuron activation function type. RandomSeed No 1 − Random seed for initial synapse weights (0 means unique seed for each run; default value '1'). EstimatorType No MSE MSE, CE, linear, sigmoid, tanh, radial MSE (Mean Square Estimator) for Gaussian Likelihood or CE(Cross-Entropy) for Bernoulli Likelihood. NeuronInputType No sum sum, sqsum, abssum Neuron input funct",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:22008,Integrability,message,message,22008,"No N,N-1 − Specification of hidden layer architecture. NeuronType No sigmoid − Neuron activation function type. RandomSeed No 1 − Random seed for initial synapse weights (0 means unique seed for each run; default value '1'). EstimatorType No MSE MSE, CE, linear, sigmoid, tanh, radial MSE (Mean Square Estimator) for Gaussian Likelihood or CE(Cross-Entropy) for Bernoulli Likelihood. NeuronInputType No sum sum, sqsum, abssum Neuron input function type. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). TrainingMethod No BP BP, GA, BFGS Train with Back-Propagation (BP), BFGS Algorithm (BFGS), or Genetic Algorithm (GA - slower and worse). LearningRate No 0.02 − ANN learning rate parameter. DecayRate No 0.01 − Decay rate for learning parameter. TestRate No 10 − Test for overtraining performed at each #th epochs. EpochMonitoring No False − Provide epoch-wise monitoring plots according to TestRate (caution: causes big ROOT output file!). Sampling No 1 − Only 'Sampling' (randomly selected) events are trained each epoch. SamplingEpoch No 1 − Sampling is used for the first 'SamplingEpoch' epochs, afterwards, all events are taken for training. SamplingImportance No 1 − The sampling weights of events in epochs which successful (worse ",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:24906,Integrability,message,message,24906,"ulateErrors No False − Calculates inverse Hessian matrix at the end of the training to be able to calculate the uncertainties of an MVA value. WeightRange No 1 − Take the events for the estimator calculations from small deviations from the desired value to large deviations only over the weight range. Configuration options for MVA method :. Configuration options reference for MVA method: Cuts. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). FitMethod No GA GA, SA, MC, MCEvents, MINUIT, EventScan Minimisation Method (GA, SA, and MC are the primary methods to be used; the others have been introduced for testing purposes and are depreciated). EffMethod No EffSel EffSel, EffPDF Selection Method. CutRangeMin Yes -1 − Minimum of allowed cut range (set per variable). CutRangeMax Yes -1 − Maximum of allowed cut range (set per variable). VarProp Yes NotEnforced NotEnforced, FMax, FMin, FSmart Categorisation of cuts. Configuration options for MVA method :. Configuration options reference for MVA method: PDEFoam. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLev",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:26348,Integrability,message,message,26348,"ses and are depreciated). EffMethod No EffSel EffSel, EffPDF Selection Method. CutRangeMin Yes -1 − Minimum of allowed cut range (set per variable). CutRangeMax Yes -1 − Maximum of allowed cut range (set per variable). VarProp Yes NotEnforced NotEnforced, FMax, FMin, FSmart Categorisation of cuts. Configuration options for MVA method :. Configuration options reference for MVA method: PDEFoam. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). SigBgSeparate No False − Separate foams for signal and background. TailCut No 0.001 − Fraction of outlier events that are excluded from the foam in each dimension. VolFrac No 0.0666667 − Size of sampling box, used for density calculation during foam build-up (maximum value: 1.0 is equivalent to volume of entire foam). nActiveCells No 500 − Maximum number of active cells to be created by the foam. nSampl No 2000 − Number of generated MC events per cell. nBin No 5 − Number of bins in edge histograms. Compress No True − Compress foam output file. MultiTargetRegression No False − Do regression with multiple targets. Nmin No 100 − Number of events in cell required to split cell. MaxDepth No 0 − Maximum depth of cell tree (0=unlimit",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:28472,Integrability,message,message,28472,"r bkg or signal like events. DTLogic No None None, GiniIndex, MisClassificationError, CrossEntropy, GiniIndexWithLaplace, SdivSqrtSplusB Use decision tree algorithm to split cells. Kernel No None None, Gauss, LinNeighbors Kernel type used. TargetSelection No Mean Mean, Mpv Target selection method. Configuration options for MVA method :. Configuration options reference for MVA method: TMlpANN. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NCycles No 200 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden layer architecture (N stands for number of variables; any integers may also be used). ValidationFraction No 0.5 − Fraction of events in training tree used for cross validation. LearningMethod No Stochastic Stochastic, Batch, SteepestDescent, RibierePolak, FletcherReeves, BFGS Learning method. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Simulated Annealing (SA). Option Array Default value Predefined values Description. MaxCalls No 100000 − Maximum number of minimisation calls. InitialTemp No 1e+06 − Initial temperature. MinTemp No 1e-06 − Mimimum temperature. Eps No",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:31507,Integrability,depend,depending,31507,"MT). Option Array Default value Predefined values Description. ErrorLevel No 1 − TMinuit: error level: 0.5=logL fit, 1=chi-squared fit. PrintLevel No -1 − TMinuit: output level: -1=least, 0, +1=all garbage. FitStrategy No 2 − TMinuit: fit strategy: 2=best. PrintWarnings No False − TMinuit: suppress warnings. UseImprove No True − TMinuit: use IMPROVE. UseMinos No True − TMinuit: use MINOS. SetBatch No False − TMinuit: use batch mode. MaxCalls No 1000 − TMinuit: approximate maximum number of function calls. Tolerance No 0.1 − TMinuit: tolerance to the function value at the minimum. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Genetic Algorithm (GA). Option Array Default value Predefined values Description. PopSize No 300 − Population size for GA. Steps No 40 − Number of steps for convergence. Cycles No 3 − Independent cycles of GA fitting. SC_steps No 10 − Spread control, steps. SC_rate No 5 − Spread control, rate: factor is changed depending on the rate. SC_factor No 0.95 − Spread control, factor. ConvCrit No 0.001 − Convergence criteria. SaveBestGen No 1 − Saves the best n results from each generation. They are included in the last cycle. SaveBestCycle No 10 − Saves the best n results from each cycle. They are included in the last cycle. The value should be set to at least 1.0. Trim No False − Trim the population to PopSize after assessing the fitness of each individual. Seed No 100 − Set seed of random generator (0 gives random seeds). Configuration options given in the ""PrepareForTrainingAndTesting"" call; these options define the creation of the data sets used for training and expert validation by TMVA :. Configuration options reference for class: DataSetFactory. Option Array Default value Predefined values Description. SplitMode No Random Random, Alternate, Block Method of picking training and testing events (default: random). MixMode No SameAsSplitMode SameAsSplitMode, Random, Alternate, Blo",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:31,Modifiability,Config,Configuration,31,". TMVA Options Reference. TMVA Configuration Options Reference; Reference version: TMVA-v-unknown. TMVA-version @ ROOT. Reference for configuration options defined in the option string of each MVA method booking, and for the definition of data sets used for training and testing (Factory). Table fields:. Option:; The option identifier in the option string (given, e.g., in ""factory->BookMethod(...)"" call). Array:; Can the option be set individually for each input variable via the ""[i]"" tag, where ""i"" is the ith variable?. Default value:; Value used if option is not explicitly set in the configuration option string. Predefined values:; Options can be categories of predefined values among which the user must choose. Description:; Info about the option. Colour codes:. Greenish rows:; Options shared by all MVA methods (through common base class). Bluish rows:; Specific MVA options. Yellowish rows:; Configuration options for minimiser (fitter) classes. Redish rows:; Options for other configurable classes. Available MVA methods (1st row), minimisation tools (2nd row), and other configurables (3rd row):. [MVA::HMatrix] [MVA::Fisher] [MVA::PDERS] [MVA::FDA] [MVA::LD] [MVA::SVM] [MVA::CFMlpANN] [MVA::KNN] [MVA::BDT] [MVA::Boost] [MVA::RuleFit] [MVA::Likelihood] [MVA::MLP] [MVA::Cuts] [MVA::PDEFoam] [MVA::TMlpANN]. [Fitter_SA] [Fitter_MC] [Fitter_Minuit] [Fitter_GA]. [DataSetFactory] [PDF] [Factory]. Configuration options for MVA method :. Configuration options reference for MVA method: HMatrix. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:134,Modifiability,config,configuration,134,". TMVA Options Reference. TMVA Configuration Options Reference; Reference version: TMVA-v-unknown. TMVA-version @ ROOT. Reference for configuration options defined in the option string of each MVA method booking, and for the definition of data sets used for training and testing (Factory). Table fields:. Option:; The option identifier in the option string (given, e.g., in ""factory->BookMethod(...)"" call). Array:; Can the option be set individually for each input variable via the ""[i]"" tag, where ""i"" is the ith variable?. Default value:; Value used if option is not explicitly set in the configuration option string. Predefined values:; Options can be categories of predefined values among which the user must choose. Description:; Info about the option. Colour codes:. Greenish rows:; Options shared by all MVA methods (through common base class). Bluish rows:; Specific MVA options. Yellowish rows:; Configuration options for minimiser (fitter) classes. Redish rows:; Options for other configurable classes. Available MVA methods (1st row), minimisation tools (2nd row), and other configurables (3rd row):. [MVA::HMatrix] [MVA::Fisher] [MVA::PDERS] [MVA::FDA] [MVA::LD] [MVA::SVM] [MVA::CFMlpANN] [MVA::KNN] [MVA::BDT] [MVA::Boost] [MVA::RuleFit] [MVA::Likelihood] [MVA::MLP] [MVA::Cuts] [MVA::PDEFoam] [MVA::TMlpANN]. [Fitter_SA] [Fitter_MC] [Fitter_Minuit] [Fitter_GA]. [DataSetFactory] [PDF] [Factory]. Configuration options for MVA method :. Configuration options reference for MVA method: HMatrix. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:466,Modifiability,variab,variable,466,". TMVA Options Reference. TMVA Configuration Options Reference; Reference version: TMVA-v-unknown. TMVA-version @ ROOT. Reference for configuration options defined in the option string of each MVA method booking, and for the definition of data sets used for training and testing (Factory). Table fields:. Option:; The option identifier in the option string (given, e.g., in ""factory->BookMethod(...)"" call). Array:; Can the option be set individually for each input variable via the ""[i]"" tag, where ""i"" is the ith variable?. Default value:; Value used if option is not explicitly set in the configuration option string. Predefined values:; Options can be categories of predefined values among which the user must choose. Description:; Info about the option. Colour codes:. Greenish rows:; Options shared by all MVA methods (through common base class). Bluish rows:; Specific MVA options. Yellowish rows:; Configuration options for minimiser (fitter) classes. Redish rows:; Options for other configurable classes. Available MVA methods (1st row), minimisation tools (2nd row), and other configurables (3rd row):. [MVA::HMatrix] [MVA::Fisher] [MVA::PDERS] [MVA::FDA] [MVA::LD] [MVA::SVM] [MVA::CFMlpANN] [MVA::KNN] [MVA::BDT] [MVA::Boost] [MVA::RuleFit] [MVA::Likelihood] [MVA::MLP] [MVA::Cuts] [MVA::PDEFoam] [MVA::TMlpANN]. [Fitter_SA] [Fitter_MC] [Fitter_Minuit] [Fitter_GA]. [DataSetFactory] [PDF] [Factory]. Configuration options for MVA method :. Configuration options reference for MVA method: HMatrix. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:515,Modifiability,variab,variable,515,". TMVA Options Reference. TMVA Configuration Options Reference; Reference version: TMVA-v-unknown. TMVA-version @ ROOT. Reference for configuration options defined in the option string of each MVA method booking, and for the definition of data sets used for training and testing (Factory). Table fields:. Option:; The option identifier in the option string (given, e.g., in ""factory->BookMethod(...)"" call). Array:; Can the option be set individually for each input variable via the ""[i]"" tag, where ""i"" is the ith variable?. Default value:; Value used if option is not explicitly set in the configuration option string. Predefined values:; Options can be categories of predefined values among which the user must choose. Description:; Info about the option. Colour codes:. Greenish rows:; Options shared by all MVA methods (through common base class). Bluish rows:; Specific MVA options. Yellowish rows:; Configuration options for minimiser (fitter) classes. Redish rows:; Options for other configurable classes. Available MVA methods (1st row), minimisation tools (2nd row), and other configurables (3rd row):. [MVA::HMatrix] [MVA::Fisher] [MVA::PDERS] [MVA::FDA] [MVA::LD] [MVA::SVM] [MVA::CFMlpANN] [MVA::KNN] [MVA::BDT] [MVA::Boost] [MVA::RuleFit] [MVA::Likelihood] [MVA::MLP] [MVA::Cuts] [MVA::PDEFoam] [MVA::TMlpANN]. [Fitter_SA] [Fitter_MC] [Fitter_Minuit] [Fitter_GA]. [DataSetFactory] [PDF] [Factory]. Configuration options for MVA method :. Configuration options reference for MVA method: HMatrix. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:592,Modifiability,config,configuration,592,". TMVA Options Reference. TMVA Configuration Options Reference; Reference version: TMVA-v-unknown. TMVA-version @ ROOT. Reference for configuration options defined in the option string of each MVA method booking, and for the definition of data sets used for training and testing (Factory). Table fields:. Option:; The option identifier in the option string (given, e.g., in ""factory->BookMethod(...)"" call). Array:; Can the option be set individually for each input variable via the ""[i]"" tag, where ""i"" is the ith variable?. Default value:; Value used if option is not explicitly set in the configuration option string. Predefined values:; Options can be categories of predefined values among which the user must choose. Description:; Info about the option. Colour codes:. Greenish rows:; Options shared by all MVA methods (through common base class). Bluish rows:; Specific MVA options. Yellowish rows:; Configuration options for minimiser (fitter) classes. Redish rows:; Options for other configurable classes. Available MVA methods (1st row), minimisation tools (2nd row), and other configurables (3rd row):. [MVA::HMatrix] [MVA::Fisher] [MVA::PDERS] [MVA::FDA] [MVA::LD] [MVA::SVM] [MVA::CFMlpANN] [MVA::KNN] [MVA::BDT] [MVA::Boost] [MVA::RuleFit] [MVA::Likelihood] [MVA::MLP] [MVA::Cuts] [MVA::PDEFoam] [MVA::TMlpANN]. [Fitter_SA] [Fitter_MC] [Fitter_Minuit] [Fitter_GA]. [DataSetFactory] [PDF] [Factory]. Configuration options for MVA method :. Configuration options reference for MVA method: HMatrix. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:906,Modifiability,Config,Configuration,906,". TMVA Options Reference. TMVA Configuration Options Reference; Reference version: TMVA-v-unknown. TMVA-version @ ROOT. Reference for configuration options defined in the option string of each MVA method booking, and for the definition of data sets used for training and testing (Factory). Table fields:. Option:; The option identifier in the option string (given, e.g., in ""factory->BookMethod(...)"" call). Array:; Can the option be set individually for each input variable via the ""[i]"" tag, where ""i"" is the ith variable?. Default value:; Value used if option is not explicitly set in the configuration option string. Predefined values:; Options can be categories of predefined values among which the user must choose. Description:; Info about the option. Colour codes:. Greenish rows:; Options shared by all MVA methods (through common base class). Bluish rows:; Specific MVA options. Yellowish rows:; Configuration options for minimiser (fitter) classes. Redish rows:; Options for other configurable classes. Available MVA methods (1st row), minimisation tools (2nd row), and other configurables (3rd row):. [MVA::HMatrix] [MVA::Fisher] [MVA::PDERS] [MVA::FDA] [MVA::LD] [MVA::SVM] [MVA::CFMlpANN] [MVA::KNN] [MVA::BDT] [MVA::Boost] [MVA::RuleFit] [MVA::Likelihood] [MVA::MLP] [MVA::Cuts] [MVA::PDEFoam] [MVA::TMlpANN]. [Fitter_SA] [Fitter_MC] [Fitter_Minuit] [Fitter_GA]. [DataSetFactory] [PDF] [Factory]. Configuration options for MVA method :. Configuration options reference for MVA method: HMatrix. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:992,Modifiability,config,configurable,992,". TMVA Options Reference. TMVA Configuration Options Reference; Reference version: TMVA-v-unknown. TMVA-version @ ROOT. Reference for configuration options defined in the option string of each MVA method booking, and for the definition of data sets used for training and testing (Factory). Table fields:. Option:; The option identifier in the option string (given, e.g., in ""factory->BookMethod(...)"" call). Array:; Can the option be set individually for each input variable via the ""[i]"" tag, where ""i"" is the ith variable?. Default value:; Value used if option is not explicitly set in the configuration option string. Predefined values:; Options can be categories of predefined values among which the user must choose. Description:; Info about the option. Colour codes:. Greenish rows:; Options shared by all MVA methods (through common base class). Bluish rows:; Specific MVA options. Yellowish rows:; Configuration options for minimiser (fitter) classes. Redish rows:; Options for other configurable classes. Available MVA methods (1st row), minimisation tools (2nd row), and other configurables (3rd row):. [MVA::HMatrix] [MVA::Fisher] [MVA::PDERS] [MVA::FDA] [MVA::LD] [MVA::SVM] [MVA::CFMlpANN] [MVA::KNN] [MVA::BDT] [MVA::Boost] [MVA::RuleFit] [MVA::Likelihood] [MVA::MLP] [MVA::Cuts] [MVA::PDEFoam] [MVA::TMlpANN]. [Fitter_SA] [Fitter_MC] [Fitter_Minuit] [Fitter_GA]. [DataSetFactory] [PDF] [Factory]. Configuration options for MVA method :. Configuration options reference for MVA method: HMatrix. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:1087,Modifiability,config,configurables,1087,"; Reference version: TMVA-v-unknown. TMVA-version @ ROOT. Reference for configuration options defined in the option string of each MVA method booking, and for the definition of data sets used for training and testing (Factory). Table fields:. Option:; The option identifier in the option string (given, e.g., in ""factory->BookMethod(...)"" call). Array:; Can the option be set individually for each input variable via the ""[i]"" tag, where ""i"" is the ith variable?. Default value:; Value used if option is not explicitly set in the configuration option string. Predefined values:; Options can be categories of predefined values among which the user must choose. Description:; Info about the option. Colour codes:. Greenish rows:; Options shared by all MVA methods (through common base class). Bluish rows:; Specific MVA options. Yellowish rows:; Configuration options for minimiser (fitter) classes. Redish rows:; Options for other configurable classes. Available MVA methods (1st row), minimisation tools (2nd row), and other configurables (3rd row):. [MVA::HMatrix] [MVA::Fisher] [MVA::PDERS] [MVA::FDA] [MVA::LD] [MVA::SVM] [MVA::CFMlpANN] [MVA::KNN] [MVA::BDT] [MVA::Boost] [MVA::RuleFit] [MVA::Likelihood] [MVA::MLP] [MVA::Cuts] [MVA::PDEFoam] [MVA::TMlpANN]. [Fitter_SA] [Fitter_MC] [Fitter_Minuit] [Fitter_GA]. [DataSetFactory] [PDF] [Factory]. Configuration options for MVA method :. Configuration options reference for MVA method: HMatrix. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:1412,Modifiability,Config,Configuration,1412,"be set individually for each input variable via the ""[i]"" tag, where ""i"" is the ith variable?. Default value:; Value used if option is not explicitly set in the configuration option string. Predefined values:; Options can be categories of predefined values among which the user must choose. Description:; Info about the option. Colour codes:. Greenish rows:; Options shared by all MVA methods (through common base class). Bluish rows:; Specific MVA options. Yellowish rows:; Configuration options for minimiser (fitter) classes. Redish rows:; Options for other configurable classes. Available MVA methods (1st row), minimisation tools (2nd row), and other configurables (3rd row):. [MVA::HMatrix] [MVA::Fisher] [MVA::PDERS] [MVA::FDA] [MVA::LD] [MVA::SVM] [MVA::CFMlpANN] [MVA::KNN] [MVA::BDT] [MVA::Boost] [MVA::RuleFit] [MVA::Likelihood] [MVA::MLP] [MVA::Cuts] [MVA::PDEFoam] [MVA::TMlpANN]. [Fitter_SA] [Fitter_MC] [Fitter_Minuit] [Fitter_GA]. [DataSetFactory] [PDF] [Factory]. Configuration options for MVA method :. Configuration options reference for MVA method: HMatrix. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Configuration options for MVA method :. Configuration",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:1452,Modifiability,Config,Configuration,1452,"the ""[i]"" tag, where ""i"" is the ith variable?. Default value:; Value used if option is not explicitly set in the configuration option string. Predefined values:; Options can be categories of predefined values among which the user must choose. Description:; Info about the option. Colour codes:. Greenish rows:; Options shared by all MVA methods (through common base class). Bluish rows:; Specific MVA options. Yellowish rows:; Configuration options for minimiser (fitter) classes. Redish rows:; Options for other configurable classes. Available MVA methods (1st row), minimisation tools (2nd row), and other configurables (3rd row):. [MVA::HMatrix] [MVA::Fisher] [MVA::PDERS] [MVA::FDA] [MVA::LD] [MVA::SVM] [MVA::CFMlpANN] [MVA::KNN] [MVA::BDT] [MVA::Boost] [MVA::RuleFit] [MVA::Likelihood] [MVA::MLP] [MVA::Cuts] [MVA::PDEFoam] [MVA::TMlpANN]. [Fitter_SA] [Fitter_MC] [Fitter_Minuit] [Fitter_GA]. [DataSetFactory] [PDF] [Factory]. Configuration options for MVA method :. Configuration options reference for MVA method: HMatrix. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Configuration options for MVA method :. Configuration options reference for MVA method: Fisher. Option",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:1787,Modifiability,variab,variable,1787,"shared by all MVA methods (through common base class). Bluish rows:; Specific MVA options. Yellowish rows:; Configuration options for minimiser (fitter) classes. Redish rows:; Options for other configurable classes. Available MVA methods (1st row), minimisation tools (2nd row), and other configurables (3rd row):. [MVA::HMatrix] [MVA::Fisher] [MVA::PDERS] [MVA::FDA] [MVA::LD] [MVA::SVM] [MVA::CFMlpANN] [MVA::KNN] [MVA::BDT] [MVA::Boost] [MVA::RuleFit] [MVA::Likelihood] [MVA::MLP] [MVA::Cuts] [MVA::PDEFoam] [MVA::TMlpANN]. [Fitter_SA] [Fitter_MC] [Fitter_Minuit] [Fitter_GA]. [DataSetFactory] [PDF] [Factory]. Configuration options for MVA method :. Configuration options reference for MVA method: HMatrix. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Configuration options for MVA method :. Configuration options reference for MVA method: Fisher. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before trai",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:2378,Modifiability,Config,Configuration,2378,"DF] [Factory]. Configuration options for MVA method :. Configuration options reference for MVA method: HMatrix. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Configuration options for MVA method :. Configuration options reference for MVA method: Fisher. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Method No Fisher Fisher, Mahalanobis Discrimination me",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:2418,Modifiability,Config,Configuration,2418,"hod :. Configuration options reference for MVA method: HMatrix. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Configuration options for MVA method :. Configuration options reference for MVA method: Fisher. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Method No Fisher Fisher, Mahalanobis Discrimination method. Configuration options for MVA method :. Co",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:2752,Modifiability,variab,variable,2752,"sform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Configuration options for MVA method :. Configuration options reference for MVA method: Fisher. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Method No Fisher Fisher, Mahalanobis Discrimination method. Configuration options for MVA method :. Configuration options reference for MVA method: PDERS. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No No",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:3403,Modifiability,Config,Configuration,3403,"iguration options reference for MVA method: Fisher. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Method No Fisher Fisher, Mahalanobis Discrimination method. Configuration options for MVA method :. Configuration options reference for MVA method: PDERS. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). VolumeRangeMode No Adaptive Unscaled, MinMax, RMS, Adap",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:3443,Modifiability,Config,Configuration,3443,"her. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Method No Fisher Fisher, Mahalanobis Discrimination method. Configuration options for MVA method :. Configuration options reference for MVA method: PDERS. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). VolumeRangeMode No Adaptive Unscaled, MinMax, RMS, Adaptive, kNN Method to determine volume size. Kerne",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:3776,Modifiability,variab,variable,3776,"before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Method No Fisher Fisher, Mahalanobis Discrimination method. Configuration options for MVA method :. Configuration options reference for MVA method: PDERS. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). VolumeRangeMode No Adaptive Unscaled, MinMax, RMS, Adaptive, kNN Method to determine volume size. KernelEstimator No Box Box, Sphere, Teepee, Gauss, Sinc3, Sinc5, Sinc7, Sinc9, Sinc11, Lanczos2, Lanczos3, Lanczos5, Lanczos8, Trim Kernel estimation function. DeltaFrac No 3 − nEventsMin/Max for minmax and rms volume range. NEventsMin No 100 − nEventsMin for adaptive volume range. NEventsMax No 200 − nEventsMax for adap",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:4386,Modifiability,Adapt,Adaptive,4386,"n options for MVA method :. Configuration options reference for MVA method: PDERS. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). VolumeRangeMode No Adaptive Unscaled, MinMax, RMS, Adaptive, kNN Method to determine volume size. KernelEstimator No Box Box, Sphere, Teepee, Gauss, Sinc3, Sinc5, Sinc7, Sinc9, Sinc11, Lanczos2, Lanczos3, Lanczos5, Lanczos8, Trim Kernel estimation function. DeltaFrac No 3 − nEventsMin/Max for minmax and rms volume range. NEventsMin No 100 − nEventsMin for adaptive volume range. NEventsMax No 200 − nEventsMax for adaptive volume range. MaxVIterations No 150 − MaxVIterations for adaptive volume range. InitialScale No 0.99 − InitialScale for adaptive volume range. GaussSigma No 0.1 − Width (wrt volume size) of Gaussian kernel estimator. NormTree No False − Normalize binary search tree. Configuration options for MVA method :. Configuration options reference for MVA method: FDA. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No ",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:4418,Modifiability,Adapt,Adaptive,4418,"n options for MVA method :. Configuration options reference for MVA method: PDERS. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). VolumeRangeMode No Adaptive Unscaled, MinMax, RMS, Adaptive, kNN Method to determine volume size. KernelEstimator No Box Box, Sphere, Teepee, Gauss, Sinc3, Sinc5, Sinc7, Sinc9, Sinc11, Lanczos2, Lanczos3, Lanczos5, Lanczos8, Trim Kernel estimation function. DeltaFrac No 3 − nEventsMin/Max for minmax and rms volume range. NEventsMin No 100 − nEventsMin for adaptive volume range. NEventsMax No 200 − nEventsMax for adaptive volume range. MaxVIterations No 150 − MaxVIterations for adaptive volume range. InitialScale No 0.99 − InitialScale for adaptive volume range. GaussSigma No 0.1 − Width (wrt volume size) of Gaussian kernel estimator. NormTree No False − Normalize binary search tree. Configuration options for MVA method :. Configuration options reference for MVA method: FDA. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No ",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:4725,Modifiability,adapt,adaptive,4725,"or, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). VolumeRangeMode No Adaptive Unscaled, MinMax, RMS, Adaptive, kNN Method to determine volume size. KernelEstimator No Box Box, Sphere, Teepee, Gauss, Sinc3, Sinc5, Sinc7, Sinc9, Sinc11, Lanczos2, Lanczos3, Lanczos5, Lanczos8, Trim Kernel estimation function. DeltaFrac No 3 − nEventsMin/Max for minmax and rms volume range. NEventsMin No 100 − nEventsMin for adaptive volume range. NEventsMax No 200 − nEventsMax for adaptive volume range. MaxVIterations No 150 − MaxVIterations for adaptive volume range. InitialScale No 0.99 − InitialScale for adaptive volume range. GaussSigma No 0.1 − Width (wrt volume size) of Gaussian kernel estimator. NormTree No False − Normalize binary search tree. Configuration options for MVA method :. Configuration options reference for MVA method: FDA. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:4783,Modifiability,adapt,adaptive,4783,"variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). VolumeRangeMode No Adaptive Unscaled, MinMax, RMS, Adaptive, kNN Method to determine volume size. KernelEstimator No Box Box, Sphere, Teepee, Gauss, Sinc3, Sinc5, Sinc7, Sinc9, Sinc11, Lanczos2, Lanczos3, Lanczos5, Lanczos8, Trim Kernel estimation function. DeltaFrac No 3 − nEventsMin/Max for minmax and rms volume range. NEventsMin No 100 − nEventsMin for adaptive volume range. NEventsMax No 200 − nEventsMax for adaptive volume range. MaxVIterations No 150 − MaxVIterations for adaptive volume range. InitialScale No 0.99 − InitialScale for adaptive volume range. GaussSigma No 0.1 − Width (wrt volume size) of Gaussian kernel estimator. NormTree No False − Normalize binary search tree. Configuration options for MVA method :. Configuration options reference for MVA method: FDA. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help mes",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:4849,Modifiability,adapt,adaptive,4849,"ckground,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). VolumeRangeMode No Adaptive Unscaled, MinMax, RMS, Adaptive, kNN Method to determine volume size. KernelEstimator No Box Box, Sphere, Teepee, Gauss, Sinc3, Sinc5, Sinc7, Sinc9, Sinc11, Lanczos2, Lanczos3, Lanczos5, Lanczos8, Trim Kernel estimation function. DeltaFrac No 3 − nEventsMin/Max for minmax and rms volume range. NEventsMin No 100 − nEventsMin for adaptive volume range. NEventsMax No 200 − nEventsMax for adaptive volume range. MaxVIterations No 150 − MaxVIterations for adaptive volume range. InitialScale No 0.99 − InitialScale for adaptive volume range. GaussSigma No 0.1 − Width (wrt volume size) of Gaussian kernel estimator. NormTree No False − Normalize binary search tree. Configuration options for MVA method :. Configuration options reference for MVA method: FDA. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outp",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:4912,Modifiability,adapt,adaptive,4912,"aussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). VolumeRangeMode No Adaptive Unscaled, MinMax, RMS, Adaptive, kNN Method to determine volume size. KernelEstimator No Box Box, Sphere, Teepee, Gauss, Sinc3, Sinc5, Sinc7, Sinc9, Sinc11, Lanczos2, Lanczos3, Lanczos5, Lanczos8, Trim Kernel estimation function. DeltaFrac No 3 − nEventsMin/Max for minmax and rms volume range. NEventsMin No 100 − nEventsMin for adaptive volume range. NEventsMax No 200 − nEventsMax for adaptive volume range. MaxVIterations No 150 − MaxVIterations for adaptive volume range. InitialScale No 0.99 − InitialScale for adaptive volume range. GaussSigma No 0.1 − Width (wrt volume size) of Gaussian kernel estimator. NormTree No False − Normalize binary search tree. Configuration options for MVA method :. Configuration options reference for MVA method: FDA. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events ",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:5059,Modifiability,Config,Configuration,5059," H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). VolumeRangeMode No Adaptive Unscaled, MinMax, RMS, Adaptive, kNN Method to determine volume size. KernelEstimator No Box Box, Sphere, Teepee, Gauss, Sinc3, Sinc5, Sinc7, Sinc9, Sinc11, Lanczos2, Lanczos3, Lanczos5, Lanczos8, Trim Kernel estimation function. DeltaFrac No 3 − nEventsMin/Max for minmax and rms volume range. NEventsMin No 100 − nEventsMin for adaptive volume range. NEventsMax No 200 − nEventsMax for adaptive volume range. MaxVIterations No 150 − MaxVIterations for adaptive volume range. InitialScale No 0.99 − InitialScale for adaptive volume range. GaussSigma No 0.1 − Width (wrt volume size) of Gaussian kernel estimator. NormTree No False − Normalize binary search tree. Configuration options for MVA method :. Configuration options reference for MVA method: FDA. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Formula No (0) − The discrimination formula. ParRanges No",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:5099,Modifiability,Config,Configuration,5099,"ge. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). VolumeRangeMode No Adaptive Unscaled, MinMax, RMS, Adaptive, kNN Method to determine volume size. KernelEstimator No Box Box, Sphere, Teepee, Gauss, Sinc3, Sinc5, Sinc7, Sinc9, Sinc11, Lanczos2, Lanczos3, Lanczos5, Lanczos8, Trim Kernel estimation function. DeltaFrac No 3 − nEventsMin/Max for minmax and rms volume range. NEventsMin No 100 − nEventsMin for adaptive volume range. NEventsMax No 200 − nEventsMax for adaptive volume range. MaxVIterations No 150 − MaxVIterations for adaptive volume range. InitialScale No 0.99 − InitialScale for adaptive volume range. GaussSigma No 0.1 − Width (wrt volume size) of Gaussian kernel estimator. NormTree No False − Normalize binary search tree. Configuration options for MVA method :. Configuration options reference for MVA method: FDA. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Formula No (0) − The discrimination formula. ParRanges No () − Parameter ranges. FitMethod No MINUIT MC,",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:5430,Modifiability,variab,variable,5430," determine volume size. KernelEstimator No Box Box, Sphere, Teepee, Gauss, Sinc3, Sinc5, Sinc7, Sinc9, Sinc11, Lanczos2, Lanczos3, Lanczos5, Lanczos8, Trim Kernel estimation function. DeltaFrac No 3 − nEventsMin/Max for minmax and rms volume range. NEventsMin No 100 − nEventsMin for adaptive volume range. NEventsMax No 200 − nEventsMax for adaptive volume range. MaxVIterations No 150 − MaxVIterations for adaptive volume range. InitialScale No 0.99 − InitialScale for adaptive volume range. GaussSigma No 0.1 − Width (wrt volume size) of Gaussian kernel estimator. NormTree No False − Normalize binary search tree. Configuration options for MVA method :. Configuration options reference for MVA method: FDA. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Formula No (0) − The discrimination formula. ParRanges No () − Parameter ranges. FitMethod No MINUIT MC, GA, SA, MINUIT Optimisation Method. Converger No None None, MINUIT FitMethod uses Converger to improve result. Configuration options for MVA method :. Configuration options reference for MVA method: LD. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLe",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:6237,Modifiability,Config,Configuration,6237,"bosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Formula No (0) − The discrimination formula. ParRanges No () − Parameter ranges. FitMethod No MINUIT MC, GA, SA, MINUIT Optimisation Method. Converger No None None, MINUIT FitMethod uses Converger to improve result. Configuration options for MVA method :. Configuration options reference for MVA method: LD. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Configuration options for MVA method :. Configuration opti",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:6277,Modifiability,Config,Configuration,6277," VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Formula No (0) − The discrimination formula. ParRanges No () − Parameter ranges. FitMethod No MINUIT MC, GA, SA, MINUIT Optimisation Method. Converger No None None, MINUIT FitMethod uses Converger to improve result. Configuration options for MVA method :. Configuration options reference for MVA method: LD. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Configuration options for MVA method :. Configuration options reference for MVA method: SVM. Option Arra",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:6607,Modifiability,variab,variable,6607,"ass of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Formula No (0) − The discrimination formula. ParRanges No () − Parameter ranges. FitMethod No MINUIT MC, GA, SA, MINUIT Optimisation Method. Converger No None None, MINUIT FitMethod uses Converger to improve result. Configuration options for MVA method :. Configuration options reference for MVA method: LD. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Configuration options for MVA method :. Configuration options reference for MVA method: SVM. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before trainin",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:7198,Modifiability,Config,Configuration,7198," to improve result. Configuration options for MVA method :. Configuration options reference for MVA method: LD. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Configuration options for MVA method :. Configuration options reference for MVA method: SVM. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Gamma No 1 − RBF kernel parameter: Gamma (size of the Ker",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:7238,Modifiability,Config,Configuration,7238,"MVA method :. Configuration options reference for MVA method: LD. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Configuration options for MVA method :. Configuration options reference for MVA method: SVM. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Gamma No 1 − RBF kernel parameter: Gamma (size of the Kernel). C No 1 − Cost parameter. Tol No 0.01 − To",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:7569,Modifiability,variab,variable,7569,"ransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Configuration options for MVA method :. Configuration options reference for MVA method: SVM. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Gamma No 1 − RBF kernel parameter: Gamma (size of the Kernel). C No 1 − Cost parameter. Tol No 0.01 − Tolerance parameter. MaxIter No 1000 − Maximum number of training loops. Configuration options for MVA method :. Configuration options reference for MVA method: CFMlpANN. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter on",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:8335,Modifiability,Config,Configuration,8335,"False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Gamma No 1 − RBF kernel parameter: Gamma (size of the Kernel). C No 1 − Cost parameter. Tol No 0.01 − Tolerance parameter. MaxIter No 1000 − Maximum number of training loops. Configuration options for MVA method :. Configuration options reference for MVA method: CFMlpANN. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NCycles No 3000 − Number of training cycles. HiddenL",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:8375,Modifiability,Config,Configuration,8375,"vel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Gamma No 1 − RBF kernel parameter: Gamma (size of the Kernel). C No 1 − Cost parameter. Tol No 0.01 − Tolerance parameter. MaxIter No 1000 − Maximum number of training loops. Configuration options for MVA method :. Configuration options reference for MVA method: CFMlpANN. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NCycles No 3000 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden layer ar",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:8711,Modifiability,variab,variable,8711,"ormalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Gamma No 1 − RBF kernel parameter: Gamma (size of the Kernel). C No 1 − Cost parameter. Tol No 0.01 − Tolerance parameter. MaxIter No 1000 − Maximum number of training loops. Configuration options for MVA method :. Configuration options reference for MVA method: CFMlpANN. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NCycles No 3000 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden layer architecture. Configuration options for MVA method :. Configuration options reference for MVA method: KNN. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warnin",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:9415,Modifiability,Config,Configuration,9415,"ption Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NCycles No 3000 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden layer architecture. Configuration options for MVA method :. Configuration options reference for MVA method: KNN. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). nkNN No 20 − Number of k-nearest neighbors. BalanceDepth ",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:9455,Modifiability,Config,Configuration,9455,"scription. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NCycles No 3000 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden layer architecture. Configuration options for MVA method :. Configuration options reference for MVA method: KNN. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). nkNN No 20 − Number of k-nearest neighbors. BalanceDepth No 6 − Binary tree balance depth. ScaleFrac No ",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:9786,Modifiability,variab,variable,9786,"lClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NCycles No 3000 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden layer architecture. Configuration options for MVA method :. Configuration options reference for MVA method: KNN. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). nkNN No 20 − Number of k-nearest neighbors. BalanceDepth No 6 − Binary tree balance depth. ScaleFrac No 0.8 − Fraction of events used to compute variable width. SigmaFact No 1 − Scale factor for sigma in Gaussian kernel. Kernel No Gaus − Use polynomial (=Poln) or Gaussian (=Gaus) kernel. Trim No False − Use equal number of signal and background events. UseKernel No False − Use polynomial kernel weight. UseWeight No T",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:10522,Modifiability,variab,variable,10522,"tion Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). nkNN No 20 − Number of k-nearest neighbors. BalanceDepth No 6 − Binary tree balance depth. ScaleFrac No 0.8 − Fraction of events used to compute variable width. SigmaFact No 1 − Scale factor for sigma in Gaussian kernel. Kernel No Gaus − Use polynomial (=Poln) or Gaussian (=Gaus) kernel. Trim No False − Use equal number of signal and background events. UseKernel No False − Use polynomial kernel weight. UseWeight No True − Use weight to count kNN events. UseLDA No False − Use local linear discriminant - experimental feature. Configuration options for MVA method :. Configuration options reference for MVA method: BDT. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all even",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:10907,Modifiability,Config,Configuration,10907,"ianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). nkNN No 20 − Number of k-nearest neighbors. BalanceDepth No 6 − Binary tree balance depth. ScaleFrac No 0.8 − Fraction of events used to compute variable width. SigmaFact No 1 − Scale factor for sigma in Gaussian kernel. Kernel No Gaus − Use polynomial (=Poln) or Gaussian (=Gaus) kernel. Trim No False − Use equal number of signal and background events. UseKernel No False − Use polynomial kernel weight. UseWeight No True − Use weight to count kNN events. UseLDA No False − Use local linear discriminant - experimental feature. Configuration options for MVA method :. Configuration options reference for MVA method: BDT. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NTrees No 800 − Number of trees in the forest. MaxDepth N",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:10947,Modifiability,Config,Configuration,10947,"class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). nkNN No 20 − Number of k-nearest neighbors. BalanceDepth No 6 − Binary tree balance depth. ScaleFrac No 0.8 − Fraction of events used to compute variable width. SigmaFact No 1 − Scale factor for sigma in Gaussian kernel. Kernel No Gaus − Use polynomial (=Poln) or Gaussian (=Gaus) kernel. Trim No False − Use equal number of signal and background events. UseKernel No False − Use polynomial kernel weight. UseWeight No True − Use weight to count kNN events. UseLDA No False − Use local linear discriminant - experimental feature. Configuration options for MVA method :. Configuration options reference for MVA method: BDT. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NTrees No 800 − Number of trees in the forest. MaxDepth No 3 − Max depth of the decision tree allowed. M",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:11278,Modifiability,variab,variable,11278," are ignored in the training (but are included for testing and performance evaluation). nkNN No 20 − Number of k-nearest neighbors. BalanceDepth No 6 − Binary tree balance depth. ScaleFrac No 0.8 − Fraction of events used to compute variable width. SigmaFact No 1 − Scale factor for sigma in Gaussian kernel. Kernel No Gaus − Use polynomial (=Poln) or Gaussian (=Gaus) kernel. Trim No False − Use equal number of signal and background events. UseKernel No False − Use polynomial kernel weight. UseWeight No True − Use weight to count kNN events. UseLDA No False − Use local linear discriminant - experimental feature. Configuration options for MVA method :. Configuration options reference for MVA method: BDT. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NTrees No 800 − Number of trees in the forest. MaxDepth No 3 − Max depth of the decision tree allowed. MinNodeSize No 5% − Minimum percentage of training events required in a leaf node (default: Classification: 5%, Regression: 0.2%). nCuts No 20 − Number of grid points in variable range used in finding optimal cut in node splitting. BoostType No AdaBoost AdaBoost, RealAdaBoost, Bagging, AdaBoostR2, Grad Boosting type",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:12142,Modifiability,variab,variable,12142,"erbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NTrees No 800 − Number of trees in the forest. MaxDepth No 3 − Max depth of the decision tree allowed. MinNodeSize No 5% − Minimum percentage of training events required in a leaf node (default: Classification: 5%, Regression: 0.2%). nCuts No 20 − Number of grid points in variable range used in finding optimal cut in node splitting. BoostType No AdaBoost AdaBoost, RealAdaBoost, Bagging, AdaBoostR2, Grad Boosting type for the trees in the forest . AdaBoostR2Loss No Quadratic Linear, Quadratic, Exponential Type of Loss function in AdaBoostR2. UseBaggedGrad No False − Use only a random subsample of all events for growing the trees in each iteration. (Only valid for GradBoost). Shrinkage No 1 − Learning rate for GradBoost algorithm. AdaBoostBeta No 0.5 − Learning rate for AdaBoost algorithm. UseRandomisedTrees No False − Determine at each node splitting the cut variable only as the best out of a random subset of variables (like in RandomForests). UseNvars No 2 − Size of the subset of variables used with RandomisedTree option. UsePoissonNvars No True − Interpret UseNvars not as fixed number but as mean of a Possion distribution in each split with RandomisedTree option. BaggedSampleFraction No 0.6 − Relative size of bagged event sample to original size of the data sampl",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:12739,Modifiability,variab,variable,12739,"alse − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NTrees No 800 − Number of trees in the forest. MaxDepth No 3 − Max depth of the decision tree allowed. MinNodeSize No 5% − Minimum percentage of training events required in a leaf node (default: Classification: 5%, Regression: 0.2%). nCuts No 20 − Number of grid points in variable range used in finding optimal cut in node splitting. BoostType No AdaBoost AdaBoost, RealAdaBoost, Bagging, AdaBoostR2, Grad Boosting type for the trees in the forest . AdaBoostR2Loss No Quadratic Linear, Quadratic, Exponential Type of Loss function in AdaBoostR2. UseBaggedGrad No False − Use only a random subsample of all events for growing the trees in each iteration. (Only valid for GradBoost). Shrinkage No 1 − Learning rate for GradBoost algorithm. AdaBoostBeta No 0.5 − Learning rate for AdaBoost algorithm. UseRandomisedTrees No False − Determine at each node splitting the cut variable only as the best out of a random subset of variables (like in RandomForests). UseNvars No 2 − Size of the subset of variables used with RandomisedTree option. UsePoissonNvars No True − Interpret UseNvars not as fixed number but as mean of a Possion distribution in each split with RandomisedTree option. BaggedSampleFraction No 0.6 − Relative size of bagged event sample to original size of the data sample (used whenever bagging is used (i.e. UseBaggedGrad, Bagging,). UseYesNoLeaf No True − Use Sig or Bkg categories, or the purity=S/(S+B) as classification of the leaf node -> Real-AdaBoost. NegWeightTreatment No InverseBoostNegWeights InverseBoostNegWeights, IgnoreNegWeightsInTraining, PairNegWeightsGlobal, Pray How to treat events with negative weights in the BDT training (particular the boosting) : IgnoreInTraining; Boost With inverse boostweight; Pair events with negative and positive weights in traning sample and *annihilate* them (experimental!). NodePurityLimit No 0.5 − In boostin",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:12791,Modifiability,variab,variables,12791,"alse − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NTrees No 800 − Number of trees in the forest. MaxDepth No 3 − Max depth of the decision tree allowed. MinNodeSize No 5% − Minimum percentage of training events required in a leaf node (default: Classification: 5%, Regression: 0.2%). nCuts No 20 − Number of grid points in variable range used in finding optimal cut in node splitting. BoostType No AdaBoost AdaBoost, RealAdaBoost, Bagging, AdaBoostR2, Grad Boosting type for the trees in the forest . AdaBoostR2Loss No Quadratic Linear, Quadratic, Exponential Type of Loss function in AdaBoostR2. UseBaggedGrad No False − Use only a random subsample of all events for growing the trees in each iteration. (Only valid for GradBoost). Shrinkage No 1 − Learning rate for GradBoost algorithm. AdaBoostBeta No 0.5 − Learning rate for AdaBoost algorithm. UseRandomisedTrees No False − Determine at each node splitting the cut variable only as the best out of a random subset of variables (like in RandomForests). UseNvars No 2 − Size of the subset of variables used with RandomisedTree option. UsePoissonNvars No True − Interpret UseNvars not as fixed number but as mean of a Possion distribution in each split with RandomisedTree option. BaggedSampleFraction No 0.6 − Relative size of bagged event sample to original size of the data sample (used whenever bagging is used (i.e. UseBaggedGrad, Bagging,). UseYesNoLeaf No True − Use Sig or Bkg categories, or the purity=S/(S+B) as classification of the leaf node -> Real-AdaBoost. NegWeightTreatment No InverseBoostNegWeights InverseBoostNegWeights, IgnoreNegWeightsInTraining, PairNegWeightsGlobal, Pray How to treat events with negative weights in the BDT training (particular the boosting) : IgnoreInTraining; Boost With inverse boostweight; Pair events with negative and positive weights in traning sample and *annihilate* them (experimental!). NodePurityLimit No 0.5 − In boostin",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:12864,Modifiability,variab,variables,12864,"n). NTrees No 800 − Number of trees in the forest. MaxDepth No 3 − Max depth of the decision tree allowed. MinNodeSize No 5% − Minimum percentage of training events required in a leaf node (default: Classification: 5%, Regression: 0.2%). nCuts No 20 − Number of grid points in variable range used in finding optimal cut in node splitting. BoostType No AdaBoost AdaBoost, RealAdaBoost, Bagging, AdaBoostR2, Grad Boosting type for the trees in the forest . AdaBoostR2Loss No Quadratic Linear, Quadratic, Exponential Type of Loss function in AdaBoostR2. UseBaggedGrad No False − Use only a random subsample of all events for growing the trees in each iteration. (Only valid for GradBoost). Shrinkage No 1 − Learning rate for GradBoost algorithm. AdaBoostBeta No 0.5 − Learning rate for AdaBoost algorithm. UseRandomisedTrees No False − Determine at each node splitting the cut variable only as the best out of a random subset of variables (like in RandomForests). UseNvars No 2 − Size of the subset of variables used with RandomisedTree option. UsePoissonNvars No True − Interpret UseNvars not as fixed number but as mean of a Possion distribution in each split with RandomisedTree option. BaggedSampleFraction No 0.6 − Relative size of bagged event sample to original size of the data sample (used whenever bagging is used (i.e. UseBaggedGrad, Bagging,). UseYesNoLeaf No True − Use Sig or Bkg categories, or the purity=S/(S+B) as classification of the leaf node -> Real-AdaBoost. NegWeightTreatment No InverseBoostNegWeights InverseBoostNegWeights, IgnoreNegWeightsInTraining, PairNegWeightsGlobal, Pray How to treat events with negative weights in the BDT training (particular the boosting) : IgnoreInTraining; Boost With inverse boostweight; Pair events with negative and positive weights in traning sample and *annihilate* them (experimental!). NodePurityLimit No 0.5 − In boosting/pruning, nodes with purity > NodePurityLimit are signal; background otherwise. SeparationType No GiniIndex CrossEntrop",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:14231,Modifiability,variab,variables,14231," Use Sig or Bkg categories, or the purity=S/(S+B) as classification of the leaf node -> Real-AdaBoost. NegWeightTreatment No InverseBoostNegWeights InverseBoostNegWeights, IgnoreNegWeightsInTraining, PairNegWeightsGlobal, Pray How to treat events with negative weights in the BDT training (particular the boosting) : IgnoreInTraining; Boost With inverse boostweight; Pair events with negative and positive weights in traning sample and *annihilate* them (experimental!). NodePurityLimit No 0.5 − In boosting/pruning, nodes with purity > NodePurityLimit are signal; background otherwise. SeparationType No GiniIndex CrossEntropy, GiniIndex, GiniIndexWithLaplace, MisClassificationError, SDivSqrtSPlusB, RegressionVariance Separation criterion for node splitting. DoBoostMonitor No False − Create control plot with ROC integral vs tree number. UseFisherCuts No False − Use multivariate splits using the Fisher criterion. MinLinCorrForFisher No 0.8 − The minimum linear correlation between two variables demanded for use in Fisher criterion in node splitting. UseExclusiveVars No False − Variables already used in fisher criterion are not anymore analysed individually for node splitting. DoPreselection No False − and and apply automatic pre-selection for 100% efficient signal (bkg) cuts prior to training. RenormByClass No False − Individually re-normalize each event class to the original size after boosting. SigToBkgFraction No 1 − Sig to Bkg ratio used in Training (similar to NodePurityLimit, which cannot be used in real adaboost. PruneMethod No NoPruning NoPruning, ExpectedError, CostComplexity Note: for BDTs use small trees (e.g.MaxDepth=3) and NoPruning: Pruning: Method used for pruning (removal) of statistically insignificant branches . PruneStrength No 0 − Pruning strength. PruningValFraction No 0.5 − Fraction of events to use for optimizing automatic pruning. nEventsMin No 0 − deprecated: Use MinNodeSize (in % of training events) instead. GradBaggingFraction No 0.6 − deprecated: ",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:14325,Modifiability,Variab,Variables,14325,"t No InverseBoostNegWeights InverseBoostNegWeights, IgnoreNegWeightsInTraining, PairNegWeightsGlobal, Pray How to treat events with negative weights in the BDT training (particular the boosting) : IgnoreInTraining; Boost With inverse boostweight; Pair events with negative and positive weights in traning sample and *annihilate* them (experimental!). NodePurityLimit No 0.5 − In boosting/pruning, nodes with purity > NodePurityLimit are signal; background otherwise. SeparationType No GiniIndex CrossEntropy, GiniIndex, GiniIndexWithLaplace, MisClassificationError, SDivSqrtSPlusB, RegressionVariance Separation criterion for node splitting. DoBoostMonitor No False − Create control plot with ROC integral vs tree number. UseFisherCuts No False − Use multivariate splits using the Fisher criterion. MinLinCorrForFisher No 0.8 − The minimum linear correlation between two variables demanded for use in Fisher criterion in node splitting. UseExclusiveVars No False − Variables already used in fisher criterion are not anymore analysed individually for node splitting. DoPreselection No False − and and apply automatic pre-selection for 100% efficient signal (bkg) cuts prior to training. RenormByClass No False − Individually re-normalize each event class to the original size after boosting. SigToBkgFraction No 1 − Sig to Bkg ratio used in Training (similar to NodePurityLimit, which cannot be used in real adaboost. PruneMethod No NoPruning NoPruning, ExpectedError, CostComplexity Note: for BDTs use small trees (e.g.MaxDepth=3) and NoPruning: Pruning: Method used for pruning (removal) of statistically insignificant branches . PruneStrength No 0 − Pruning strength. PruningValFraction No 0.5 − Fraction of events to use for optimizing automatic pruning. nEventsMin No 0 − deprecated: Use MinNodeSize (in % of training events) instead. GradBaggingFraction No 0.6 − deprecated: Use *BaggedSampleFraction* instead: Defines the fraction of events to be used in each iteration, e.g. when UseBaggedGrad=",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:15596,Modifiability,Config,Configuration,15596,"o the original size after boosting. SigToBkgFraction No 1 − Sig to Bkg ratio used in Training (similar to NodePurityLimit, which cannot be used in real adaboost. PruneMethod No NoPruning NoPruning, ExpectedError, CostComplexity Note: for BDTs use small trees (e.g.MaxDepth=3) and NoPruning: Pruning: Method used for pruning (removal) of statistically insignificant branches . PruneStrength No 0 − Pruning strength. PruningValFraction No 0.5 − Fraction of events to use for optimizing automatic pruning. nEventsMin No 0 − deprecated: Use MinNodeSize (in % of training events) instead. GradBaggingFraction No 0.6 − deprecated: Use *BaggedSampleFraction* instead: Defines the fraction of events to be used in each iteration, e.g. when UseBaggedGrad=kTRUE. . UseNTrainEvents No 0 − deprecated: Use *BaggedSampleFraction* instead: Number of randomly picked training events used in randomised (and bagged) trees. NNodesMax No 0 − deprecated: Use MaxDepth instead to limit the tree size. Configuration options for MVA method :. Configuration options reference for MVA method: Boost. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Boost_Num No 100 − Number of times the classifier is bo",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:15636,Modifiability,Config,Configuration,15636,"ction No 1 − Sig to Bkg ratio used in Training (similar to NodePurityLimit, which cannot be used in real adaboost. PruneMethod No NoPruning NoPruning, ExpectedError, CostComplexity Note: for BDTs use small trees (e.g.MaxDepth=3) and NoPruning: Pruning: Method used for pruning (removal) of statistically insignificant branches . PruneStrength No 0 − Pruning strength. PruningValFraction No 0.5 − Fraction of events to use for optimizing automatic pruning. nEventsMin No 0 − deprecated: Use MinNodeSize (in % of training events) instead. GradBaggingFraction No 0.6 − deprecated: Use *BaggedSampleFraction* instead: Defines the fraction of events to be used in each iteration, e.g. when UseBaggedGrad=kTRUE. . UseNTrainEvents No 0 − deprecated: Use *BaggedSampleFraction* instead: Number of randomly picked training events used in randomised (and bagged) trees. NNodesMax No 0 − deprecated: Use MaxDepth instead to limit the tree size. Configuration options for MVA method :. Configuration options reference for MVA method: Boost. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Boost_Num No 100 − Number of times the classifier is boosted. Boost_MonitorMethod No True − Write monit",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:15969,Modifiability,variab,variable,15969,"branches . PruneStrength No 0 − Pruning strength. PruningValFraction No 0.5 − Fraction of events to use for optimizing automatic pruning. nEventsMin No 0 − deprecated: Use MinNodeSize (in % of training events) instead. GradBaggingFraction No 0.6 − deprecated: Use *BaggedSampleFraction* instead: Defines the fraction of events to be used in each iteration, e.g. when UseBaggedGrad=kTRUE. . UseNTrainEvents No 0 − deprecated: Use *BaggedSampleFraction* instead: Number of randomly picked training events used in randomised (and bagged) trees. NNodesMax No 0 − deprecated: Use MaxDepth instead to limit the tree size. Configuration options for MVA method :. Configuration options reference for MVA method: Boost. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Boost_Num No 100 − Number of times the classifier is boosted. Boost_MonitorMethod No True − Write monitoring histograms for each boosted classifier. Boost_DetailedMonitoring No False − Produce histograms for detailed boost-wise monitoring. Boost_Type No AdaBoost AdaBoost, Bagging, HighEdgeGauss, HighEdgeCoPara Boosting type for the classifiers. Boost_BaggedSampleFraction No 0.6 − Relative size of bagged event sample ",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:17600,Modifiability,Config,Configuration,17600,"d. Boost_MonitorMethod No True − Write monitoring histograms for each boosted classifier. Boost_DetailedMonitoring No False − Produce histograms for detailed boost-wise monitoring. Boost_Type No AdaBoost AdaBoost, Bagging, HighEdgeGauss, HighEdgeCoPara Boosting type for the classifiers. Boost_BaggedSampleFraction No 0.6 − Relative size of bagged event sample to original size of the data sample (used whenever bagging is used). Boost_MethodWeightType No ByError ByError, Average, ByROC, ByOverlap, LastMethod How to set the final weight of the boosted classifiers. Boost_RecalculateMVACut No True − Recalculate the classifier MVA Signallike cut at every boost iteration. Boost_AdaBoostBeta No 1 − The ADA boost parameter that sets the effect of every boost step on the events' weights. Boost_Transform No step step, linear, log, gauss Type of transform applied to every boosted method linear, log, step. Boost_RandomSeed No 0 − Seed for random number generator used for bagging. Configuration options for MVA method :. Configuration options reference for MVA method: RuleFit. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). GDTau No -1 − Gradient-directed (GD) path: default fi",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:17640,Modifiability,Config,Configuration,17640,"g histograms for each boosted classifier. Boost_DetailedMonitoring No False − Produce histograms for detailed boost-wise monitoring. Boost_Type No AdaBoost AdaBoost, Bagging, HighEdgeGauss, HighEdgeCoPara Boosting type for the classifiers. Boost_BaggedSampleFraction No 0.6 − Relative size of bagged event sample to original size of the data sample (used whenever bagging is used). Boost_MethodWeightType No ByError ByError, Average, ByROC, ByOverlap, LastMethod How to set the final weight of the boosted classifiers. Boost_RecalculateMVACut No True − Recalculate the classifier MVA Signallike cut at every boost iteration. Boost_AdaBoostBeta No 1 − The ADA boost parameter that sets the effect of every boost step on the events' weights. Boost_Transform No step step, linear, log, gauss Type of transform applied to every boosted method linear, log, step. Boost_RandomSeed No 0 − Seed for random number generator used for bagging. Configuration options for MVA method :. Configuration options reference for MVA method: RuleFit. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). GDTau No -1 − Gradient-directed (GD) path: default fit cut-off. GDTauPrec No 0.01 − GD path: precision",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:17975,Modifiability,variab,variable,17975,"ginal size of the data sample (used whenever bagging is used). Boost_MethodWeightType No ByError ByError, Average, ByROC, ByOverlap, LastMethod How to set the final weight of the boosted classifiers. Boost_RecalculateMVACut No True − Recalculate the classifier MVA Signallike cut at every boost iteration. Boost_AdaBoostBeta No 1 − The ADA boost parameter that sets the effect of every boost step on the events' weights. Boost_Transform No step step, linear, log, gauss Type of transform applied to every boosted method linear, log, step. Boost_RandomSeed No 0 − Seed for random number generator used for bagging. Configuration options for MVA method :. Configuration options reference for MVA method: RuleFit. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). GDTau No -1 − Gradient-directed (GD) path: default fit cut-off. GDTauPrec No 0.01 − GD path: precision of tau. GDStep No 0.01 − GD path: step size. GDNSteps No 10000 − GD path: number of steps. GDErrScale No 1.1 − Stop scan when error > scale*errmin. LinQuantile No 0.025 − Quantile of linear terms (removes outliers). GDPathEveFrac No 0.5 − Fraction of events used for the path search. GDValidEveFrac No 0.5 − Fraction ",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:19730,Modifiability,Config,Configuration,19730," of steps. GDErrScale No 1.1 − Stop scan when error > scale*errmin. LinQuantile No 0.025 − Quantile of linear terms (removes outliers). GDPathEveFrac No 0.5 − Fraction of events used for the path search. GDValidEveFrac No 0.5 − Fraction of events used for the validation. fEventsMin No 0.1 − Minimum fraction of events in a splittable node. fEventsMax No 0.9 − Maximum fraction of events in a splittable node. nTrees No 20 − Number of trees in forest. ForestType No AdaBoost AdaBoost, Random Method to use for forest generation (AdaBoost or RandomForest). RuleMinDist No 0.001 − Minimum distance between rules. MinImp No 0.01 − Minimum rule importance accepted. Model No ModRuleLinear ModRule, ModRuleLinear, ModLinear Model to be used. RuleFitModule No RFTMVA RFTMVA, RFFriedman Which RuleFit module to use. RFWorkDir No ./rulefit − Friedman's RuleFit module (RFF): working dir. RFNrules No 2000 − RFF: Mximum number of rules. RFNendnodes No 4 − RFF: Average number of end nodes. Configuration options for MVA method :. Configuration options reference for MVA method: Likelihood. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). TransformOutput No False − Transform likelihood ou",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:19770,Modifiability,Config,Configuration,19770,"r > scale*errmin. LinQuantile No 0.025 − Quantile of linear terms (removes outliers). GDPathEveFrac No 0.5 − Fraction of events used for the path search. GDValidEveFrac No 0.5 − Fraction of events used for the validation. fEventsMin No 0.1 − Minimum fraction of events in a splittable node. fEventsMax No 0.9 − Maximum fraction of events in a splittable node. nTrees No 20 − Number of trees in forest. ForestType No AdaBoost AdaBoost, Random Method to use for forest generation (AdaBoost or RandomForest). RuleMinDist No 0.001 − Minimum distance between rules. MinImp No 0.01 − Minimum rule importance accepted. Model No ModRuleLinear ModRule, ModRuleLinear, ModLinear Model to be used. RuleFitModule No RFTMVA RFTMVA, RFFriedman Which RuleFit module to use. RFWorkDir No ./rulefit − Friedman's RuleFit module (RFF): working dir. RFNrules No 2000 − RFF: Mximum number of rules. RFNendnodes No 4 − RFF: Average number of end nodes. Configuration options for MVA method :. Configuration options reference for MVA method: Likelihood. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). TransformOutput No False − Transform likelihood output by inverse sigmoid function. Configuration op",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:20108,Modifiability,variab,variable,20108,"raction of events in a splittable node. nTrees No 20 − Number of trees in forest. ForestType No AdaBoost AdaBoost, Random Method to use for forest generation (AdaBoost or RandomForest). RuleMinDist No 0.001 − Minimum distance between rules. MinImp No 0.01 − Minimum rule importance accepted. Model No ModRuleLinear ModRule, ModRuleLinear, ModLinear Model to be used. RuleFitModule No RFTMVA RFTMVA, RFFriedman Which RuleFit module to use. RFWorkDir No ./rulefit − Friedman's RuleFit module (RFF): working dir. RFNrules No 2000 − RFF: Mximum number of rules. RFNendnodes No 4 − RFF: Average number of end nodes. Configuration options for MVA method :. Configuration options reference for MVA method: Likelihood. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). TransformOutput No False − Transform likelihood output by inverse sigmoid function. Configuration options for MVA method :. Configuration options reference for MVA method: MLP. Option Array Default value Predefined values Description. NCycles No 500 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden layer architecture. NeuronType No sigmoid − Neuron activation function type. RandomSeed No 1 ",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:20783,Modifiability,Config,Configuration,20783,"for MVA method: Likelihood. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). TransformOutput No False − Transform likelihood output by inverse sigmoid function. Configuration options for MVA method :. Configuration options reference for MVA method: MLP. Option Array Default value Predefined values Description. NCycles No 500 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden layer architecture. NeuronType No sigmoid − Neuron activation function type. RandomSeed No 1 − Random seed for initial synapse weights (0 means unique seed for each run; default value '1'). EstimatorType No MSE MSE, CE, linear, sigmoid, tanh, radial MSE (Mean Square Estimator) for Gaussian Likelihood or CE(Cross-Entropy) for Bernoulli Likelihood. NeuronInputType No sum sum, sqsum, abssum Neuron input function type. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Ga",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:20823,Modifiability,Config,Configuration,20823,"lt value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). TransformOutput No False − Transform likelihood output by inverse sigmoid function. Configuration options for MVA method :. Configuration options reference for MVA method: MLP. Option Array Default value Predefined values Description. NCycles No 500 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden layer architecture. NeuronType No sigmoid − Neuron activation function type. RandomSeed No 1 − Random seed for initial synapse weights (0 means unique seed for each run; default value '1'). EstimatorType No MSE MSE, CE, linear, sigmoid, tanh, radial MSE (Mean Square Estimator) for Gaussian Likelihood or CE(Cross-Entropy) for Bernoulli Likelihood. NeuronInputType No sum sum, sqsum, abssum Neuron input function type. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the give",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:21665,Modifiability,variab,variable,21665,"rformance evaluation). TransformOutput No False − Transform likelihood output by inverse sigmoid function. Configuration options for MVA method :. Configuration options reference for MVA method: MLP. Option Array Default value Predefined values Description. NCycles No 500 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden layer architecture. NeuronType No sigmoid − Neuron activation function type. RandomSeed No 1 − Random seed for initial synapse weights (0 means unique seed for each run; default value '1'). EstimatorType No MSE MSE, CE, linear, sigmoid, tanh, radial MSE (Mean Square Estimator) for Gaussian Likelihood or CE(Cross-Entropy) for Bernoulli Likelihood. NeuronInputType No sum sum, sqsum, abssum Neuron input function type. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). TrainingMethod No BP BP, GA, BFGS Train with Back-Propagation (BP), BFGS Algorithm (BFGS), or Genetic Algorithm (GA - slower and worse). LearningRate No 0.02 − ANN learning rate parameter. DecayRate No 0.01 − Decay rate for learning parameter. TestRate No 10 − Test for overtraining performed at each #th epochs. EpochMonitoring No False − Provide epoch-wise monitoring plots according to TestRate (caution: causes big R",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:24191,Modifiability,Config,Configuration,24191," − How often BFGS should reset history. Tau No 3 − LineSearch size step. BPMode No sequential sequential, batch Back-propagation learning mode: sequential or batch. BatchSize No -1 − Batch size: number of events/batch, only set if in Batch Mode, -1 for BatchSize=number_of_events. ConvergenceImprove No 1e-30 − Minimum improvement which counts as improvement (<0 means automatic convergence check is turned off). ConvergenceTests No -1 − Number of steps (without improvement) required for convergence (<0 means automatic convergence check is turned off). UseRegulator No False − Use regulator to avoid over-training. UpdateLimit No 10000 − Maximum times of regulator update. CalculateErrors No False − Calculates inverse Hessian matrix at the end of the training to be able to calculate the uncertainties of an MVA value. WeightRange No 1 − Take the events for the estimator calculations from small deviations from the desired value to large deviations only over the weight range. Configuration options for MVA method :. Configuration options reference for MVA method: Cuts. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). FitMethod No GA GA, SA, MC, MCEvents, MINUIT, EventScan ",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:24231,Modifiability,Config,Configuration,24231,"3 − LineSearch size step. BPMode No sequential sequential, batch Back-propagation learning mode: sequential or batch. BatchSize No -1 − Batch size: number of events/batch, only set if in Batch Mode, -1 for BatchSize=number_of_events. ConvergenceImprove No 1e-30 − Minimum improvement which counts as improvement (<0 means automatic convergence check is turned off). ConvergenceTests No -1 − Number of steps (without improvement) required for convergence (<0 means automatic convergence check is turned off). UseRegulator No False − Use regulator to avoid over-training. UpdateLimit No 10000 − Maximum times of regulator update. CalculateErrors No False − Calculates inverse Hessian matrix at the end of the training to be able to calculate the uncertainties of an MVA value. WeightRange No 1 − Take the events for the estimator calculations from small deviations from the desired value to large deviations only over the weight range. Configuration options for MVA method :. Configuration options reference for MVA method: Cuts. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). FitMethod No GA GA, SA, MC, MCEvents, MINUIT, EventScan Minimisation Method (GA, SA, and MC are the pri",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:24563,Modifiability,variab,variable,24563,"eans automatic convergence check is turned off). ConvergenceTests No -1 − Number of steps (without improvement) required for convergence (<0 means automatic convergence check is turned off). UseRegulator No False − Use regulator to avoid over-training. UpdateLimit No 10000 − Maximum times of regulator update. CalculateErrors No False − Calculates inverse Hessian matrix at the end of the training to be able to calculate the uncertainties of an MVA value. WeightRange No 1 − Take the events for the estimator calculations from small deviations from the desired value to large deviations only over the weight range. Configuration options for MVA method :. Configuration options reference for MVA method: Cuts. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). FitMethod No GA GA, SA, MC, MCEvents, MINUIT, EventScan Minimisation Method (GA, SA, and MC are the primary methods to be used; the others have been introduced for testing purposes and are depreciated). EffMethod No EffSel EffSel, EffPDF Selection Method. CutRangeMin Yes -1 − Minimum of allowed cut range (set per variable). CutRangeMax Yes -1 − Maximum of allowed cut range (set per variable). VarProp Yes NotEnforced ",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:25469,Modifiability,variab,variable,25469,"yLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). FitMethod No GA GA, SA, MC, MCEvents, MINUIT, EventScan Minimisation Method (GA, SA, and MC are the primary methods to be used; the others have been introduced for testing purposes and are depreciated). EffMethod No EffSel EffSel, EffPDF Selection Method. CutRangeMin Yes -1 − Minimum of allowed cut range (set per variable). CutRangeMax Yes -1 − Maximum of allowed cut range (set per variable). VarProp Yes NotEnforced NotEnforced, FMax, FMin, FSmart Categorisation of cuts. Configuration options for MVA method :. Configuration options reference for MVA method: PDEFoam. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). Ig",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:25539,Modifiability,variab,variable,25539," Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). FitMethod No GA GA, SA, MC, MCEvents, MINUIT, EventScan Minimisation Method (GA, SA, and MC are the primary methods to be used; the others have been introduced for testing purposes and are depreciated). EffMethod No EffSel EffSel, EffPDF Selection Method. CutRangeMin Yes -1 − Minimum of allowed cut range (set per variable). CutRangeMax Yes -1 − Maximum of allowed cut range (set per variable). VarProp Yes NotEnforced NotEnforced, FMax, FMin, FSmart Categorisation of cuts. Configuration options for MVA method :. Configuration options reference for MVA method: PDEFoam. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are i",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:25630,Modifiability,Config,Configuration,25630,"lClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). FitMethod No GA GA, SA, MC, MCEvents, MINUIT, EventScan Minimisation Method (GA, SA, and MC are the primary methods to be used; the others have been introduced for testing purposes and are depreciated). EffMethod No EffSel EffSel, EffPDF Selection Method. CutRangeMin Yes -1 − Minimum of allowed cut range (set per variable). CutRangeMax Yes -1 − Maximum of allowed cut range (set per variable). VarProp Yes NotEnforced NotEnforced, FMax, FMin, FSmart Categorisation of cuts. Configuration options for MVA method :. Configuration options reference for MVA method: PDEFoam. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). SigBgSeparate No False − Separate foams for signal an",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:25670,Modifiability,Config,Configuration,25670," Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). FitMethod No GA GA, SA, MC, MCEvents, MINUIT, EventScan Minimisation Method (GA, SA, and MC are the primary methods to be used; the others have been introduced for testing purposes and are depreciated). EffMethod No EffSel EffSel, EffPDF Selection Method. CutRangeMin Yes -1 − Minimum of allowed cut range (set per variable). CutRangeMax Yes -1 − Maximum of allowed cut range (set per variable). VarProp Yes NotEnforced NotEnforced, FMax, FMin, FSmart Categorisation of cuts. Configuration options for MVA method :. Configuration options reference for MVA method: PDEFoam. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). SigBgSeparate No False − Separate foams for signal and background. TailCut No 0.001 − Fraction of outl",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:26005,Modifiability,variab,variable,26005,"InTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). FitMethod No GA GA, SA, MC, MCEvents, MINUIT, EventScan Minimisation Method (GA, SA, and MC are the primary methods to be used; the others have been introduced for testing purposes and are depreciated). EffMethod No EffSel EffSel, EffPDF Selection Method. CutRangeMin Yes -1 − Minimum of allowed cut range (set per variable). CutRangeMax Yes -1 − Maximum of allowed cut range (set per variable). VarProp Yes NotEnforced NotEnforced, FMax, FMin, FSmart Categorisation of cuts. Configuration options for MVA method :. Configuration options reference for MVA method: PDEFoam. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). SigBgSeparate No False − Separate foams for signal and background. TailCut No 0.001 − Fraction of outlier events that are excluded from the foam in each dimension. VolFrac No 0.0666667 − Size of sampling box, used for density calculation during foam build-up (maximum value: 1.0 is equivalent to volume of entire foam). nActiveCells No 500 − Maximum number of active cells to be created by the foam. nSampl No 2000 − Num",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:27754,Modifiability,Config,Configuration,27754,"0666667 − Size of sampling box, used for density calculation during foam build-up (maximum value: 1.0 is equivalent to volume of entire foam). nActiveCells No 500 − Maximum number of active cells to be created by the foam. nSampl No 2000 − Number of generated MC events per cell. nBin No 5 − Number of bins in edge histograms. Compress No True − Compress foam output file. MultiTargetRegression No False − Do regression with multiple targets. Nmin No 100 − Number of events in cell required to split cell. MaxDepth No 0 − Maximum depth of cell tree (0=unlimited). FillFoamWithOrigWeights No False − Fill foam with original or boost weights. UseYesNoCell No False − Return -1 or 1 for bkg or signal like events. DTLogic No None None, GiniIndex, MisClassificationError, CrossEntropy, GiniIndexWithLaplace, SdivSqrtSplusB Use decision tree algorithm to split cells. Kernel No None None, Gauss, LinNeighbors Kernel type used. TargetSelection No Mean Mean, Mpv Target selection method. Configuration options for MVA method :. Configuration options reference for MVA method: TMlpANN. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NCycles No 200 − Number of training cycles. HiddenLay",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:27794,Modifiability,Config,Configuration,27794," calculation during foam build-up (maximum value: 1.0 is equivalent to volume of entire foam). nActiveCells No 500 − Maximum number of active cells to be created by the foam. nSampl No 2000 − Number of generated MC events per cell. nBin No 5 − Number of bins in edge histograms. Compress No True − Compress foam output file. MultiTargetRegression No False − Do regression with multiple targets. Nmin No 100 − Number of events in cell required to split cell. MaxDepth No 0 − Maximum depth of cell tree (0=unlimited). FillFoamWithOrigWeights No False − Fill foam with original or boost weights. UseYesNoCell No False − Return -1 or 1 for bkg or signal like events. DTLogic No None None, GiniIndex, MisClassificationError, CrossEntropy, GiniIndexWithLaplace, SdivSqrtSplusB Use decision tree algorithm to split cells. Kernel No None None, Gauss, LinNeighbors Kernel type used. TargetSelection No Mean Mean, Mpv Target selection method. Configuration options for MVA method :. Configuration options reference for MVA method: TMlpANN. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NCycles No 200 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden layer arch",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:28129,Modifiability,variab,variable,28129,"file. MultiTargetRegression No False − Do regression with multiple targets. Nmin No 100 − Number of events in cell required to split cell. MaxDepth No 0 − Maximum depth of cell tree (0=unlimited). FillFoamWithOrigWeights No False − Fill foam with original or boost weights. UseYesNoCell No False − Return -1 or 1 for bkg or signal like events. DTLogic No None None, GiniIndex, MisClassificationError, CrossEntropy, GiniIndexWithLaplace, SdivSqrtSplusB Use decision tree algorithm to split cells. Kernel No None None, Gauss, LinNeighbors Kernel type used. TargetSelection No Mean Mean, Mpv Target selection method. Configuration options for MVA method :. Configuration options reference for MVA method: TMlpANN. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NCycles No 200 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden layer architecture (N stands for number of variables; any integers may also be used). ValidationFraction No 0.5 − Fraction of events in training tree used for cross validation. LearningMethod No Stochastic Stochastic, Batch, SteepestDescent, RibierePolak, FletcherReeves, BFGS Learning method. Configuration options for setup an",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:28855,Modifiability,variab,variables,28855,"MVA method: TMlpANN. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NCycles No 200 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden layer architecture (N stands for number of variables; any integers may also be used). ValidationFraction No 0.5 − Fraction of events in training tree used for cross validation. LearningMethod No Stochastic Stochastic, Batch, SteepestDescent, RibierePolak, FletcherReeves, BFGS Learning method. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Simulated Annealing (SA). Option Array Default value Predefined values Description. MaxCalls No 100000 − Maximum number of minimisation calls. InitialTemp No 1e+06 − Initial temperature. MinTemp No 1e-06 − Mimimum temperature. Eps No 1e-10 − Epsilon. TempScale No 1 − Temperature scale. AdaptiveSpeed No 1 − Adaptive speed. TempAdaptiveStep No 0.009875 − Step made in each generation temperature adaptive. UseDefaultScale No False − Use default temperature scale for temperature minimisation algorithm. UseDefaultTemp No False − Use default initial temperature. KernelTemp No IncAdaptive IncAdaptive, DecAda",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:29106,Modifiability,Config,Configuration,29106," transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NCycles No 200 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden layer architecture (N stands for number of variables; any integers may also be used). ValidationFraction No 0.5 − Fraction of events in training tree used for cross validation. LearningMethod No Stochastic Stochastic, Batch, SteepestDescent, RibierePolak, FletcherReeves, BFGS Learning method. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Simulated Annealing (SA). Option Array Default value Predefined values Description. MaxCalls No 100000 − Maximum number of minimisation calls. InitialTemp No 1e+06 − Initial temperature. MinTemp No 1e-06 − Mimimum temperature. Eps No 1e-10 − Epsilon. TempScale No 1 − Temperature scale. AdaptiveSpeed No 1 − Adaptive speed. TempAdaptiveStep No 0.009875 − Step made in each generation temperature adaptive. UseDefaultScale No False − Use default temperature scale for temperature minimisation algorithm. UseDefaultTemp No False − Use default initial temperature. KernelTemp No IncAdaptive IncAdaptive, DecAdaptive, Sqrt, Log, Sin, Homo, Geo Temperature minimisation algorithm. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Monte Carlo sampling (MC). Option Array Default value Predefined values Description. SampleSize No 100000 − Number of Mont",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:29171,Modifiability,Config,Configuration,29171,"G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NCycles No 200 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden layer architecture (N stands for number of variables; any integers may also be used). ValidationFraction No 0.5 − Fraction of events in training tree used for cross validation. LearningMethod No Stochastic Stochastic, Batch, SteepestDescent, RibierePolak, FletcherReeves, BFGS Learning method. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Simulated Annealing (SA). Option Array Default value Predefined values Description. MaxCalls No 100000 − Maximum number of minimisation calls. InitialTemp No 1e+06 − Initial temperature. MinTemp No 1e-06 − Mimimum temperature. Eps No 1e-10 − Epsilon. TempScale No 1 − Temperature scale. AdaptiveSpeed No 1 − Adaptive speed. TempAdaptiveStep No 0.009875 − Step made in each generation temperature adaptive. UseDefaultScale No False − Use default temperature scale for temperature minimisation algorithm. UseDefaultTemp No False − Use default initial temperature. KernelTemp No IncAdaptive IncAdaptive, DecAdaptive, Sqrt, Log, Sin, Homo, Geo Temperature minimisation algorithm. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Monte Carlo sampling (MC). Option Array Default value Predefined values Description. SampleSize No 100000 − Number of Monte Carlo events in toy sample. Sigma No -1 − If > 0: new points are gene",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:29510,Modifiability,Adapt,AdaptiveSpeed,29510,"ifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NCycles No 200 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden layer architecture (N stands for number of variables; any integers may also be used). ValidationFraction No 0.5 − Fraction of events in training tree used for cross validation. LearningMethod No Stochastic Stochastic, Batch, SteepestDescent, RibierePolak, FletcherReeves, BFGS Learning method. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Simulated Annealing (SA). Option Array Default value Predefined values Description. MaxCalls No 100000 − Maximum number of minimisation calls. InitialTemp No 1e+06 − Initial temperature. MinTemp No 1e-06 − Mimimum temperature. Eps No 1e-10 − Epsilon. TempScale No 1 − Temperature scale. AdaptiveSpeed No 1 − Adaptive speed. TempAdaptiveStep No 0.009875 − Step made in each generation temperature adaptive. UseDefaultScale No False − Use default temperature scale for temperature minimisation algorithm. UseDefaultTemp No False − Use default initial temperature. KernelTemp No IncAdaptive IncAdaptive, DecAdaptive, Sqrt, Log, Sin, Homo, Geo Temperature minimisation algorithm. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Monte Carlo sampling (MC). Option Array Default value Predefined values Description. SampleSize No 100000 − Number of Monte Carlo events in toy sample. Sigma No -1 − If > 0: new points are generated according to Gauss around best value and with Sigma in units of interval length. Seed No 100 − Seed for the random generator (0 takes random seeds). Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: TMinuit (MT). Option Array Default value Predef",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:29531,Modifiability,Adapt,Adaptive,29531,"ifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NCycles No 200 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden layer architecture (N stands for number of variables; any integers may also be used). ValidationFraction No 0.5 − Fraction of events in training tree used for cross validation. LearningMethod No Stochastic Stochastic, Batch, SteepestDescent, RibierePolak, FletcherReeves, BFGS Learning method. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Simulated Annealing (SA). Option Array Default value Predefined values Description. MaxCalls No 100000 − Maximum number of minimisation calls. InitialTemp No 1e+06 − Initial temperature. MinTemp No 1e-06 − Mimimum temperature. Eps No 1e-10 − Epsilon. TempScale No 1 − Temperature scale. AdaptiveSpeed No 1 − Adaptive speed. TempAdaptiveStep No 0.009875 − Step made in each generation temperature adaptive. UseDefaultScale No False − Use default temperature scale for temperature minimisation algorithm. UseDefaultTemp No False − Use default initial temperature. KernelTemp No IncAdaptive IncAdaptive, DecAdaptive, Sqrt, Log, Sin, Homo, Geo Temperature minimisation algorithm. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Monte Carlo sampling (MC). Option Array Default value Predefined values Description. SampleSize No 100000 − Number of Monte Carlo events in toy sample. Sigma No -1 − If > 0: new points are generated according to Gauss around best value and with Sigma in units of interval length. Seed No 100 − Seed for the random generator (0 takes random seeds). Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: TMinuit (MT). Option Array Default value Predef",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:29619,Modifiability,adapt,adaptive,29619,"lse − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NCycles No 200 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden layer architecture (N stands for number of variables; any integers may also be used). ValidationFraction No 0.5 − Fraction of events in training tree used for cross validation. LearningMethod No Stochastic Stochastic, Batch, SteepestDescent, RibierePolak, FletcherReeves, BFGS Learning method. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Simulated Annealing (SA). Option Array Default value Predefined values Description. MaxCalls No 100000 − Maximum number of minimisation calls. InitialTemp No 1e+06 − Initial temperature. MinTemp No 1e-06 − Mimimum temperature. Eps No 1e-10 − Epsilon. TempScale No 1 − Temperature scale. AdaptiveSpeed No 1 − Adaptive speed. TempAdaptiveStep No 0.009875 − Step made in each generation temperature adaptive. UseDefaultScale No False − Use default temperature scale for temperature minimisation algorithm. UseDefaultTemp No False − Use default initial temperature. KernelTemp No IncAdaptive IncAdaptive, DecAdaptive, Sqrt, Log, Sin, Homo, Geo Temperature minimisation algorithm. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Monte Carlo sampling (MC). Option Array Default value Predefined values Description. SampleSize No 100000 − Number of Monte Carlo events in toy sample. Sigma No -1 − If > 0: new points are generated according to Gauss around best value and with Sigma in units of interval length. Seed No 100 − Seed for the random generator (0 takes random seeds). Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: TMinuit (MT). Option Array Default value Predefined values Description. ErrorLevel No 1 − TMinuit: error level: 0.5=lo",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:29899,Modifiability,Config,Configuration,29899,"tion of events in training tree used for cross validation. LearningMethod No Stochastic Stochastic, Batch, SteepestDescent, RibierePolak, FletcherReeves, BFGS Learning method. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Simulated Annealing (SA). Option Array Default value Predefined values Description. MaxCalls No 100000 − Maximum number of minimisation calls. InitialTemp No 1e+06 − Initial temperature. MinTemp No 1e-06 − Mimimum temperature. Eps No 1e-10 − Epsilon. TempScale No 1 − Temperature scale. AdaptiveSpeed No 1 − Adaptive speed. TempAdaptiveStep No 0.009875 − Step made in each generation temperature adaptive. UseDefaultScale No False − Use default temperature scale for temperature minimisation algorithm. UseDefaultTemp No False − Use default initial temperature. KernelTemp No IncAdaptive IncAdaptive, DecAdaptive, Sqrt, Log, Sin, Homo, Geo Temperature minimisation algorithm. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Monte Carlo sampling (MC). Option Array Default value Predefined values Description. SampleSize No 100000 − Number of Monte Carlo events in toy sample. Sigma No -1 − If > 0: new points are generated according to Gauss around best value and with Sigma in units of interval length. Seed No 100 − Seed for the random generator (0 takes random seeds). Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: TMinuit (MT). Option Array Default value Predefined values Description. ErrorLevel No 1 − TMinuit: error level: 0.5=logL fit, 1=chi-squared fit. PrintLevel No -1 − TMinuit: output level: -1=least, 0, +1=all garbage. FitStrategy No 2 − TMinuit: fit strategy: 2=best. PrintWarnings No False − TMinuit: suppress warnings. UseImprove No True − TMinuit: use IMPROVE. UseMinos No True − TMinuit: use MINOS. SetBatch No False − TMinuit: use batch mode. MaxC",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:29964,Modifiability,Config,Configuration,29964,"d No Stochastic Stochastic, Batch, SteepestDescent, RibierePolak, FletcherReeves, BFGS Learning method. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Simulated Annealing (SA). Option Array Default value Predefined values Description. MaxCalls No 100000 − Maximum number of minimisation calls. InitialTemp No 1e+06 − Initial temperature. MinTemp No 1e-06 − Mimimum temperature. Eps No 1e-10 − Epsilon. TempScale No 1 − Temperature scale. AdaptiveSpeed No 1 − Adaptive speed. TempAdaptiveStep No 0.009875 − Step made in each generation temperature adaptive. UseDefaultScale No False − Use default temperature scale for temperature minimisation algorithm. UseDefaultTemp No False − Use default initial temperature. KernelTemp No IncAdaptive IncAdaptive, DecAdaptive, Sqrt, Log, Sin, Homo, Geo Temperature minimisation algorithm. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Monte Carlo sampling (MC). Option Array Default value Predefined values Description. SampleSize No 100000 − Number of Monte Carlo events in toy sample. Sigma No -1 − If > 0: new points are generated according to Gauss around best value and with Sigma in units of interval length. Seed No 100 − Seed for the random generator (0 takes random seeds). Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: TMinuit (MT). Option Array Default value Predefined values Description. ErrorLevel No 1 − TMinuit: error level: 0.5=logL fit, 1=chi-squared fit. PrintLevel No -1 − TMinuit: output level: -1=least, 0, +1=all garbage. FitStrategy No 2 − TMinuit: fit strategy: 2=best. PrintWarnings No False − TMinuit: suppress warnings. UseImprove No True − TMinuit: use IMPROVE. UseMinos No True − TMinuit: use MINOS. SetBatch No False − TMinuit: use batch mode. MaxCalls No 1000 − TMinuit: approximate maximum number of function calls. To",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:30364,Modifiability,Config,Configuration,30364,"l temperature. MinTemp No 1e-06 − Mimimum temperature. Eps No 1e-10 − Epsilon. TempScale No 1 − Temperature scale. AdaptiveSpeed No 1 − Adaptive speed. TempAdaptiveStep No 0.009875 − Step made in each generation temperature adaptive. UseDefaultScale No False − Use default temperature scale for temperature minimisation algorithm. UseDefaultTemp No False − Use default initial temperature. KernelTemp No IncAdaptive IncAdaptive, DecAdaptive, Sqrt, Log, Sin, Homo, Geo Temperature minimisation algorithm. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Monte Carlo sampling (MC). Option Array Default value Predefined values Description. SampleSize No 100000 − Number of Monte Carlo events in toy sample. Sigma No -1 − If > 0: new points are generated according to Gauss around best value and with Sigma in units of interval length. Seed No 100 − Seed for the random generator (0 takes random seeds). Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: TMinuit (MT). Option Array Default value Predefined values Description. ErrorLevel No 1 − TMinuit: error level: 0.5=logL fit, 1=chi-squared fit. PrintLevel No -1 − TMinuit: output level: -1=least, 0, +1=all garbage. FitStrategy No 2 − TMinuit: fit strategy: 2=best. PrintWarnings No False − TMinuit: suppress warnings. UseImprove No True − TMinuit: use IMPROVE. UseMinos No True − TMinuit: use MINOS. SetBatch No False − TMinuit: use batch mode. MaxCalls No 1000 − TMinuit: approximate maximum number of function calls. Tolerance No 0.1 − TMinuit: tolerance to the function value at the minimum. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Genetic Algorithm (GA). Option Array Default value Predefined values Description. PopSize No 300 − Population size for GA. Steps No 40 − Number of steps for convergence. Cycles No 3 − Independent cycles",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:30429,Modifiability,Config,Configuration,30429,"0 − Epsilon. TempScale No 1 − Temperature scale. AdaptiveSpeed No 1 − Adaptive speed. TempAdaptiveStep No 0.009875 − Step made in each generation temperature adaptive. UseDefaultScale No False − Use default temperature scale for temperature minimisation algorithm. UseDefaultTemp No False − Use default initial temperature. KernelTemp No IncAdaptive IncAdaptive, DecAdaptive, Sqrt, Log, Sin, Homo, Geo Temperature minimisation algorithm. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Monte Carlo sampling (MC). Option Array Default value Predefined values Description. SampleSize No 100000 − Number of Monte Carlo events in toy sample. Sigma No -1 − If > 0: new points are generated according to Gauss around best value and with Sigma in units of interval length. Seed No 100 − Seed for the random generator (0 takes random seeds). Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: TMinuit (MT). Option Array Default value Predefined values Description. ErrorLevel No 1 − TMinuit: error level: 0.5=logL fit, 1=chi-squared fit. PrintLevel No -1 − TMinuit: output level: -1=least, 0, +1=all garbage. FitStrategy No 2 − TMinuit: fit strategy: 2=best. PrintWarnings No False − TMinuit: suppress warnings. UseImprove No True − TMinuit: use IMPROVE. UseMinos No True − TMinuit: use MINOS. SetBatch No False − TMinuit: use batch mode. MaxCalls No 1000 − TMinuit: approximate maximum number of function calls. Tolerance No 0.1 − TMinuit: tolerance to the function value at the minimum. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Genetic Algorithm (GA). Option Array Default value Predefined values Description. PopSize No 300 − Population size for GA. Steps No 40 − Number of steps for convergence. Cycles No 3 − Independent cycles of GA fitting. SC_steps No 10 − Spread control, steps. SC_rate N",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:31077,Modifiability,Config,Configuration,31077,"ize No 100000 − Number of Monte Carlo events in toy sample. Sigma No -1 − If > 0: new points are generated according to Gauss around best value and with Sigma in units of interval length. Seed No 100 − Seed for the random generator (0 takes random seeds). Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: TMinuit (MT). Option Array Default value Predefined values Description. ErrorLevel No 1 − TMinuit: error level: 0.5=logL fit, 1=chi-squared fit. PrintLevel No -1 − TMinuit: output level: -1=least, 0, +1=all garbage. FitStrategy No 2 − TMinuit: fit strategy: 2=best. PrintWarnings No False − TMinuit: suppress warnings. UseImprove No True − TMinuit: use IMPROVE. UseMinos No True − TMinuit: use MINOS. SetBatch No False − TMinuit: use batch mode. MaxCalls No 1000 − TMinuit: approximate maximum number of function calls. Tolerance No 0.1 − TMinuit: tolerance to the function value at the minimum. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Genetic Algorithm (GA). Option Array Default value Predefined values Description. PopSize No 300 − Population size for GA. Steps No 40 − Number of steps for convergence. Cycles No 3 − Independent cycles of GA fitting. SC_steps No 10 − Spread control, steps. SC_rate No 5 − Spread control, rate: factor is changed depending on the rate. SC_factor No 0.95 − Spread control, factor. ConvCrit No 0.001 − Convergence criteria. SaveBestGen No 1 − Saves the best n results from each generation. They are included in the last cycle. SaveBestCycle No 10 − Saves the best n results from each cycle. They are included in the last cycle. The value should be set to at least 1.0. Trim No False − Trim the population to PopSize after assessing the fitness of each individual. Seed No 100 − Set seed of random generator (0 gives random seeds). Configuration options given in the ""PrepareForTrainingAndTesting"" call; these options ",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:31142,Modifiability,Config,Configuration,31142," − If > 0: new points are generated according to Gauss around best value and with Sigma in units of interval length. Seed No 100 − Seed for the random generator (0 takes random seeds). Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: TMinuit (MT). Option Array Default value Predefined values Description. ErrorLevel No 1 − TMinuit: error level: 0.5=logL fit, 1=chi-squared fit. PrintLevel No -1 − TMinuit: output level: -1=least, 0, +1=all garbage. FitStrategy No 2 − TMinuit: fit strategy: 2=best. PrintWarnings No False − TMinuit: suppress warnings. UseImprove No True − TMinuit: use IMPROVE. UseMinos No True − TMinuit: use MINOS. SetBatch No False − TMinuit: use batch mode. MaxCalls No 1000 − TMinuit: approximate maximum number of function calls. Tolerance No 0.1 − TMinuit: tolerance to the function value at the minimum. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Genetic Algorithm (GA). Option Array Default value Predefined values Description. PopSize No 300 − Population size for GA. Steps No 40 − Number of steps for convergence. Cycles No 3 − Independent cycles of GA fitting. SC_steps No 10 − Spread control, steps. SC_rate No 5 − Spread control, rate: factor is changed depending on the rate. SC_factor No 0.95 − Spread control, factor. ConvCrit No 0.001 − Convergence criteria. SaveBestGen No 1 − Saves the best n results from each generation. They are included in the last cycle. SaveBestCycle No 10 − Saves the best n results from each cycle. They are included in the last cycle. The value should be set to at least 1.0. Trim No False − Trim the population to PopSize after assessing the fitness of each individual. Seed No 100 − Set seed of random generator (0 gives random seeds). Configuration options given in the ""PrepareForTrainingAndTesting"" call; these options define the creation of the data sets used for training and expert vali",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:32023,Modifiability,Config,Configuration,32023,"and tuning of specific fitter :. Configuration options reference for fitting method: Genetic Algorithm (GA). Option Array Default value Predefined values Description. PopSize No 300 − Population size for GA. Steps No 40 − Number of steps for convergence. Cycles No 3 − Independent cycles of GA fitting. SC_steps No 10 − Spread control, steps. SC_rate No 5 − Spread control, rate: factor is changed depending on the rate. SC_factor No 0.95 − Spread control, factor. ConvCrit No 0.001 − Convergence criteria. SaveBestGen No 1 − Saves the best n results from each generation. They are included in the last cycle. SaveBestCycle No 10 − Saves the best n results from each cycle. They are included in the last cycle. The value should be set to at least 1.0. Trim No False − Trim the population to PopSize after assessing the fitness of each individual. Seed No 100 − Set seed of random generator (0 gives random seeds). Configuration options given in the ""PrepareForTrainingAndTesting"" call; these options define the creation of the data sets used for training and expert validation by TMVA :. Configuration options reference for class: DataSetFactory. Option Array Default value Predefined values Description. SplitMode No Random Random, Alternate, Block Method of picking training and testing events (default: random). MixMode No SameAsSplitMode SameAsSplitMode, Random, Alternate, Block Method of mixing events of differnt classes into one dataset (default: SameAsSplitMode). SplitSeed No 100 − Seed for random event shuffling. NormMode No EqualNumEvents None, NumEvents, EqualNumEvents Overall renormalisation of event-by-event weights used in the training (NumEvents: average weight of 1 per event, independently for signal and background; EqualNumEvents: average weight of 1 per event for signal, and sum of weights for background equal to sum of weights for signal). nTrain_Signal No 0 − Number of training events of class Signal (default: 0 = all). nTest_Signal No 0 − Number of test events of clas",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:32197,Modifiability,Config,Configuration,32197,"Array Default value Predefined values Description. PopSize No 300 − Population size for GA. Steps No 40 − Number of steps for convergence. Cycles No 3 − Independent cycles of GA fitting. SC_steps No 10 − Spread control, steps. SC_rate No 5 − Spread control, rate: factor is changed depending on the rate. SC_factor No 0.95 − Spread control, factor. ConvCrit No 0.001 − Convergence criteria. SaveBestGen No 1 − Saves the best n results from each generation. They are included in the last cycle. SaveBestCycle No 10 − Saves the best n results from each cycle. They are included in the last cycle. The value should be set to at least 1.0. Trim No False − Trim the population to PopSize after assessing the fitness of each individual. Seed No 100 − Set seed of random generator (0 gives random seeds). Configuration options given in the ""PrepareForTrainingAndTesting"" call; these options define the creation of the data sets used for training and expert validation by TMVA :. Configuration options reference for class: DataSetFactory. Option Array Default value Predefined values Description. SplitMode No Random Random, Alternate, Block Method of picking training and testing events (default: random). MixMode No SameAsSplitMode SameAsSplitMode, Random, Alternate, Block Method of mixing events of differnt classes into one dataset (default: SameAsSplitMode). SplitSeed No 100 − Seed for random event shuffling. NormMode No EqualNumEvents None, NumEvents, EqualNumEvents Overall renormalisation of event-by-event weights used in the training (NumEvents: average weight of 1 per event, independently for signal and background; EqualNumEvents: average weight of 1 per event for signal, and sum of weights for background equal to sum of weights for signal). nTrain_Signal No 0 − Number of training events of class Signal (default: 0 = all). nTest_Signal No 0 − Number of test events of class Signal (default: 0 = all). nTrain_Background No 0 − Number of training events of class Background (default: 0 = all",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:33432,Modifiability,Config,Configuration,33432,"ameAsSplitMode, Random, Alternate, Block Method of mixing events of differnt classes into one dataset (default: SameAsSplitMode). SplitSeed No 100 − Seed for random event shuffling. NormMode No EqualNumEvents None, NumEvents, EqualNumEvents Overall renormalisation of event-by-event weights used in the training (NumEvents: average weight of 1 per event, independently for signal and background; EqualNumEvents: average weight of 1 per event for signal, and sum of weights for background equal to sum of weights for signal). nTrain_Signal No 0 − Number of training events of class Signal (default: 0 = all). nTest_Signal No 0 − Number of test events of class Signal (default: 0 = all). nTrain_Background No 0 − Number of training events of class Background (default: 0 = all). nTest_Background No 0 − Number of test events of class Background (default: 0 = all). V No False − Verbosity (default: true). VerboseLevel No Info Debug, Verbose, Info VerboseLevel (Debug/Verbose/Info). Configuration options for the PDF class :. Configuration options reference for class: PDF. Option Array Default value Predefined values Description. NSmooth No 0 − Number of smoothing iterations for the input histograms. MinNSmooth No -1 − Min number of smoothing iterations, for bins with most data. MaxNSmooth No -1 − Max number of smoothing iterations, for bins with least data. NAvEvtPerBin No 50 − Average number of events per PDF bin. Nbins No 0 − Defined number of bins for the histogram from which the PDF is created. CheckHist No False − Whether or not to check the source histogram of the PDF. PDFInterpol No Spline2 Spline0, Spline1, Spline2, Spline3, Spline5, KDE Interpolation method for reference histograms (e.g. Spline2 or KDE). KDEtype No Gauss Gauss KDE kernel type (1=Gauss). KDEiter No Nonadaptive Nonadaptive, Adaptive Number of iterations (1=non-adaptive, 2=adaptive). KDEFineFactor No 1 − Fine tuning factor for Adaptive KDE: Factor to multyply the width of the kernel. KDEborder No None None, Reno",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:33475,Modifiability,Config,Configuration,33475,"d of mixing events of differnt classes into one dataset (default: SameAsSplitMode). SplitSeed No 100 − Seed for random event shuffling. NormMode No EqualNumEvents None, NumEvents, EqualNumEvents Overall renormalisation of event-by-event weights used in the training (NumEvents: average weight of 1 per event, independently for signal and background; EqualNumEvents: average weight of 1 per event for signal, and sum of weights for background equal to sum of weights for signal). nTrain_Signal No 0 − Number of training events of class Signal (default: 0 = all). nTest_Signal No 0 − Number of test events of class Signal (default: 0 = all). nTrain_Background No 0 − Number of training events of class Background (default: 0 = all). nTest_Background No 0 − Number of test events of class Background (default: 0 = all). V No False − Verbosity (default: true). VerboseLevel No Info Debug, Verbose, Info VerboseLevel (Debug/Verbose/Info). Configuration options for the PDF class :. Configuration options reference for class: PDF. Option Array Default value Predefined values Description. NSmooth No 0 − Number of smoothing iterations for the input histograms. MinNSmooth No -1 − Min number of smoothing iterations, for bins with most data. MaxNSmooth No -1 − Max number of smoothing iterations, for bins with least data. NAvEvtPerBin No 50 − Average number of events per PDF bin. Nbins No 0 − Defined number of bins for the histogram from which the PDF is created. CheckHist No False − Whether or not to check the source histogram of the PDF. PDFInterpol No Spline2 Spline0, Spline1, Spline2, Spline3, Spline5, KDE Interpolation method for reference histograms (e.g. Spline2 or KDE). KDEtype No Gauss Gauss KDE kernel type (1=Gauss). KDEiter No Nonadaptive Nonadaptive, Adaptive Number of iterations (1=non-adaptive, 2=adaptive). KDEFineFactor No 1 − Fine tuning factor for Adaptive KDE: Factor to multyply the width of the kernel. KDEborder No None None, Renorm, Mirror Border effects treatment (1=no tre",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:34263,Modifiability,Adapt,Adaptive,34263," of class Background (default: 0 = all). V No False − Verbosity (default: true). VerboseLevel No Info Debug, Verbose, Info VerboseLevel (Debug/Verbose/Info). Configuration options for the PDF class :. Configuration options reference for class: PDF. Option Array Default value Predefined values Description. NSmooth No 0 − Number of smoothing iterations for the input histograms. MinNSmooth No -1 − Min number of smoothing iterations, for bins with most data. MaxNSmooth No -1 − Max number of smoothing iterations, for bins with least data. NAvEvtPerBin No 50 − Average number of events per PDF bin. Nbins No 0 − Defined number of bins for the histogram from which the PDF is created. CheckHist No False − Whether or not to check the source histogram of the PDF. PDFInterpol No Spline2 Spline0, Spline1, Spline2, Spline3, Spline5, KDE Interpolation method for reference histograms (e.g. Spline2 or KDE). KDEtype No Gauss Gauss KDE kernel type (1=Gauss). KDEiter No Nonadaptive Nonadaptive, Adaptive Number of iterations (1=non-adaptive, 2=adaptive). KDEFineFactor No 1 − Fine tuning factor for Adaptive KDE: Factor to multyply the width of the kernel. KDEborder No None None, Renorm, Mirror Border effects treatment (1=no treatment , 2=kernel renormalization, 3=sample mirroring). Configuration options for Factory running :. Configuration options reference for class: Factory. Option Array Default value Predefined values Description. V No False − Verbose flag. Color No True − Flag for coloured screen output (default: True, if in batch mode: False). Transformations No − List of transformations to test; formatting example: Transformations=I;D;P;U;G,D, for identity, decorrelation, PCA, Uniform and Gaussianisation followed by decorrelation transformations. Silent No False − Batch mode: boolean silent flag inhibiting any output from TMVA after the creation of the factory class object (default: False). DrawProgressBar No True − Draw progress bar to display training, testing and evaluation sched",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:34300,Modifiability,adapt,adaptive,34300," of class Background (default: 0 = all). V No False − Verbosity (default: true). VerboseLevel No Info Debug, Verbose, Info VerboseLevel (Debug/Verbose/Info). Configuration options for the PDF class :. Configuration options reference for class: PDF. Option Array Default value Predefined values Description. NSmooth No 0 − Number of smoothing iterations for the input histograms. MinNSmooth No -1 − Min number of smoothing iterations, for bins with most data. MaxNSmooth No -1 − Max number of smoothing iterations, for bins with least data. NAvEvtPerBin No 50 − Average number of events per PDF bin. Nbins No 0 − Defined number of bins for the histogram from which the PDF is created. CheckHist No False − Whether or not to check the source histogram of the PDF. PDFInterpol No Spline2 Spline0, Spline1, Spline2, Spline3, Spline5, KDE Interpolation method for reference histograms (e.g. Spline2 or KDE). KDEtype No Gauss Gauss KDE kernel type (1=Gauss). KDEiter No Nonadaptive Nonadaptive, Adaptive Number of iterations (1=non-adaptive, 2=adaptive). KDEFineFactor No 1 − Fine tuning factor for Adaptive KDE: Factor to multyply the width of the kernel. KDEborder No None None, Renorm, Mirror Border effects treatment (1=no treatment , 2=kernel renormalization, 3=sample mirroring). Configuration options for Factory running :. Configuration options reference for class: Factory. Option Array Default value Predefined values Description. V No False − Verbose flag. Color No True − Flag for coloured screen output (default: True, if in batch mode: False). Transformations No − List of transformations to test; formatting example: Transformations=I;D;P;U;G,D, for identity, decorrelation, PCA, Uniform and Gaussianisation followed by decorrelation transformations. Silent No False − Batch mode: boolean silent flag inhibiting any output from TMVA after the creation of the factory class object (default: False). DrawProgressBar No True − Draw progress bar to display training, testing and evaluation sched",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:34312,Modifiability,adapt,adaptive,34312," of class Background (default: 0 = all). V No False − Verbosity (default: true). VerboseLevel No Info Debug, Verbose, Info VerboseLevel (Debug/Verbose/Info). Configuration options for the PDF class :. Configuration options reference for class: PDF. Option Array Default value Predefined values Description. NSmooth No 0 − Number of smoothing iterations for the input histograms. MinNSmooth No -1 − Min number of smoothing iterations, for bins with most data. MaxNSmooth No -1 − Max number of smoothing iterations, for bins with least data. NAvEvtPerBin No 50 − Average number of events per PDF bin. Nbins No 0 − Defined number of bins for the histogram from which the PDF is created. CheckHist No False − Whether or not to check the source histogram of the PDF. PDFInterpol No Spline2 Spline0, Spline1, Spline2, Spline3, Spline5, KDE Interpolation method for reference histograms (e.g. Spline2 or KDE). KDEtype No Gauss Gauss KDE kernel type (1=Gauss). KDEiter No Nonadaptive Nonadaptive, Adaptive Number of iterations (1=non-adaptive, 2=adaptive). KDEFineFactor No 1 − Fine tuning factor for Adaptive KDE: Factor to multyply the width of the kernel. KDEborder No None None, Renorm, Mirror Border effects treatment (1=no treatment , 2=kernel renormalization, 3=sample mirroring). Configuration options for Factory running :. Configuration options reference for class: Factory. Option Array Default value Predefined values Description. V No False − Verbose flag. Color No True − Flag for coloured screen output (default: True, if in batch mode: False). Transformations No − List of transformations to test; formatting example: Transformations=I;D;P;U;G,D, for identity, decorrelation, PCA, Uniform and Gaussianisation followed by decorrelation transformations. Silent No False − Batch mode: boolean silent flag inhibiting any output from TMVA after the creation of the factory class object (default: False). DrawProgressBar No True − Draw progress bar to display training, testing and evaluation sched",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:34367,Modifiability,Adapt,Adaptive,34367,"fo Debug, Verbose, Info VerboseLevel (Debug/Verbose/Info). Configuration options for the PDF class :. Configuration options reference for class: PDF. Option Array Default value Predefined values Description. NSmooth No 0 − Number of smoothing iterations for the input histograms. MinNSmooth No -1 − Min number of smoothing iterations, for bins with most data. MaxNSmooth No -1 − Max number of smoothing iterations, for bins with least data. NAvEvtPerBin No 50 − Average number of events per PDF bin. Nbins No 0 − Defined number of bins for the histogram from which the PDF is created. CheckHist No False − Whether or not to check the source histogram of the PDF. PDFInterpol No Spline2 Spline0, Spline1, Spline2, Spline3, Spline5, KDE Interpolation method for reference histograms (e.g. Spline2 or KDE). KDEtype No Gauss Gauss KDE kernel type (1=Gauss). KDEiter No Nonadaptive Nonadaptive, Adaptive Number of iterations (1=non-adaptive, 2=adaptive). KDEFineFactor No 1 − Fine tuning factor for Adaptive KDE: Factor to multyply the width of the kernel. KDEborder No None None, Renorm, Mirror Border effects treatment (1=no treatment , 2=kernel renormalization, 3=sample mirroring). Configuration options for Factory running :. Configuration options reference for class: Factory. Option Array Default value Predefined values Description. V No False − Verbose flag. Color No True − Flag for coloured screen output (default: True, if in batch mode: False). Transformations No − List of transformations to test; formatting example: Transformations=I;D;P;U;G,D, for identity, decorrelation, PCA, Uniform and Gaussianisation followed by decorrelation transformations. Silent No False − Batch mode: boolean silent flag inhibiting any output from TMVA after the creation of the factory class object (default: False). DrawProgressBar No True − Draw progress bar to display training, testing and evaluation schedule (default: True). AnalysisType No Auto Classification, Regression, Multiclass, Auto Set the anal",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:34554,Modifiability,Config,Configuration,34554,"r class: PDF. Option Array Default value Predefined values Description. NSmooth No 0 − Number of smoothing iterations for the input histograms. MinNSmooth No -1 − Min number of smoothing iterations, for bins with most data. MaxNSmooth No -1 − Max number of smoothing iterations, for bins with least data. NAvEvtPerBin No 50 − Average number of events per PDF bin. Nbins No 0 − Defined number of bins for the histogram from which the PDF is created. CheckHist No False − Whether or not to check the source histogram of the PDF. PDFInterpol No Spline2 Spline0, Spline1, Spline2, Spline3, Spline5, KDE Interpolation method for reference histograms (e.g. Spline2 or KDE). KDEtype No Gauss Gauss KDE kernel type (1=Gauss). KDEiter No Nonadaptive Nonadaptive, Adaptive Number of iterations (1=non-adaptive, 2=adaptive). KDEFineFactor No 1 − Fine tuning factor for Adaptive KDE: Factor to multyply the width of the kernel. KDEborder No None None, Renorm, Mirror Border effects treatment (1=no treatment , 2=kernel renormalization, 3=sample mirroring). Configuration options for Factory running :. Configuration options reference for class: Factory. Option Array Default value Predefined values Description. V No False − Verbose flag. Color No True − Flag for coloured screen output (default: True, if in batch mode: False). Transformations No − List of transformations to test; formatting example: Transformations=I;D;P;U;G,D, for identity, decorrelation, PCA, Uniform and Gaussianisation followed by decorrelation transformations. Silent No False − Batch mode: boolean silent flag inhibiting any output from TMVA after the creation of the factory class object (default: False). DrawProgressBar No True − Draw progress bar to display training, testing and evaluation schedule (default: True). AnalysisType No Auto Classification, Regression, Multiclass, Auto Set the analysis type (Classification, Regression, Multiclass, Auto) (default: Auto). Page created on Mon Jul 29 00:06:19 2013 (© TMVA, 2006−2009). ",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:34599,Modifiability,Config,Configuration,34599,"r class: PDF. Option Array Default value Predefined values Description. NSmooth No 0 − Number of smoothing iterations for the input histograms. MinNSmooth No -1 − Min number of smoothing iterations, for bins with most data. MaxNSmooth No -1 − Max number of smoothing iterations, for bins with least data. NAvEvtPerBin No 50 − Average number of events per PDF bin. Nbins No 0 − Defined number of bins for the histogram from which the PDF is created. CheckHist No False − Whether or not to check the source histogram of the PDF. PDFInterpol No Spline2 Spline0, Spline1, Spline2, Spline3, Spline5, KDE Interpolation method for reference histograms (e.g. Spline2 or KDE). KDEtype No Gauss Gauss KDE kernel type (1=Gauss). KDEiter No Nonadaptive Nonadaptive, Adaptive Number of iterations (1=non-adaptive, 2=adaptive). KDEFineFactor No 1 − Fine tuning factor for Adaptive KDE: Factor to multyply the width of the kernel. KDEborder No None None, Renorm, Mirror Border effects treatment (1=no treatment , 2=kernel renormalization, 3=sample mirroring). Configuration options for Factory running :. Configuration options reference for class: Factory. Option Array Default value Predefined values Description. V No False − Verbose flag. Color No True − Flag for coloured screen output (default: True, if in batch mode: False). Transformations No − List of transformations to test; formatting example: Transformations=I;D;P;U;G,D, for identity, decorrelation, PCA, Uniform and Gaussianisation followed by decorrelation transformations. Silent No False − Batch mode: boolean silent flag inhibiting any output from TMVA after the creation of the factory class object (default: False). DrawProgressBar No True − Draw progress bar to display training, testing and evaluation schedule (default: True). AnalysisType No Auto Classification, Regression, Multiclass, Auto Set the analysis type (Classification, Regression, Multiclass, Auto) (default: Auto). Page created on Mon Jul 29 00:06:19 2013 (© TMVA, 2006−2009). ",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:1812,Performance,perform,performed,1812,"shared by all MVA methods (through common base class). Bluish rows:; Specific MVA options. Yellowish rows:; Configuration options for minimiser (fitter) classes. Redish rows:; Options for other configurable classes. Available MVA methods (1st row), minimisation tools (2nd row), and other configurables (3rd row):. [MVA::HMatrix] [MVA::Fisher] [MVA::PDERS] [MVA::FDA] [MVA::LD] [MVA::SVM] [MVA::CFMlpANN] [MVA::KNN] [MVA::BDT] [MVA::Boost] [MVA::RuleFit] [MVA::Likelihood] [MVA::MLP] [MVA::Cuts] [MVA::PDEFoam] [MVA::TMlpANN]. [Fitter_SA] [Fitter_MC] [Fitter_Minuit] [Fitter_GA]. [DataSetFactory] [PDF] [Factory]. Configuration options for MVA method :. Configuration options reference for MVA method: HMatrix. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Configuration options for MVA method :. Configuration options reference for MVA method: Fisher. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before trai",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:2353,Performance,perform,performance,2353,"PDEFoam] [MVA::TMlpANN]. [Fitter_SA] [Fitter_MC] [Fitter_Minuit] [Fitter_GA]. [DataSetFactory] [PDF] [Factory]. Configuration options for MVA method :. Configuration options reference for MVA method: HMatrix. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Configuration options for MVA method :. Configuration options reference for MVA method: Fisher. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are include",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:2777,Performance,perform,performed,2777,"sform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Configuration options for MVA method :. Configuration options reference for MVA method: Fisher. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Method No Fisher Fisher, Mahalanobis Discrimination method. Configuration options for MVA method :. Configuration options reference for MVA method: PDERS. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No No",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:3318,Performance,perform,performance,3318,"nts with negative weights are ignored in the training (but are included for testing and performance evaluation). Configuration options for MVA method :. Configuration options reference for MVA method: Fisher. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Method No Fisher Fisher, Mahalanobis Discrimination method. Configuration options for MVA method :. Configuration options reference for MVA method: PDERS. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with ne",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:3801,Performance,perform,performed,3801,"before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Method No Fisher Fisher, Mahalanobis Discrimination method. Configuration options for MVA method :. Configuration options reference for MVA method: PDERS. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). VolumeRangeMode No Adaptive Unscaled, MinMax, RMS, Adaptive, kNN Method to determine volume size. KernelEstimator No Box Box, Sphere, Teepee, Gauss, Sinc3, Sinc5, Sinc7, Sinc9, Sinc11, Lanczos2, Lanczos3, Lanczos5, Lanczos8, Trim Kernel estimation function. DeltaFrac No 3 − nEventsMin/Max for minmax and rms volume range. NEventsMin No 100 − nEventsMin for adaptive volume range. NEventsMax No 200 − nEventsMax for adap",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:4342,Performance,perform,performance,4342,"are included for testing and performance evaluation). Method No Fisher Fisher, Mahalanobis Discrimination method. Configuration options for MVA method :. Configuration options reference for MVA method: PDERS. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). VolumeRangeMode No Adaptive Unscaled, MinMax, RMS, Adaptive, kNN Method to determine volume size. KernelEstimator No Box Box, Sphere, Teepee, Gauss, Sinc3, Sinc5, Sinc7, Sinc9, Sinc11, Lanczos2, Lanczos3, Lanczos5, Lanczos8, Trim Kernel estimation function. DeltaFrac No 3 − nEventsMin/Max for minmax and rms volume range. NEventsMin No 100 − nEventsMin for adaptive volume range. NEventsMax No 200 − nEventsMax for adaptive volume range. MaxVIterations No 150 − MaxVIterations for adaptive volume range. InitialScale No 0.99 − InitialScale for adaptive volume range. GaussSigma No 0.1 − Width (wrt volume size) of Gaussian kernel estimator. NormTree No False − Normalize binary search tree. Configuration options for MVA method :. Configuration options reference for MVA method: FDA. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:5455,Performance,perform,performed,5455," determine volume size. KernelEstimator No Box Box, Sphere, Teepee, Gauss, Sinc3, Sinc5, Sinc7, Sinc9, Sinc11, Lanczos2, Lanczos3, Lanczos5, Lanczos8, Trim Kernel estimation function. DeltaFrac No 3 − nEventsMin/Max for minmax and rms volume range. NEventsMin No 100 − nEventsMin for adaptive volume range. NEventsMax No 200 − nEventsMax for adaptive volume range. MaxVIterations No 150 − MaxVIterations for adaptive volume range. InitialScale No 0.99 − InitialScale for adaptive volume range. GaussSigma No 0.1 − Width (wrt volume size) of Gaussian kernel estimator. NormTree No False − Normalize binary search tree. Configuration options for MVA method :. Configuration options reference for MVA method: FDA. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Formula No (0) − The discrimination formula. ParRanges No () − Parameter ranges. FitMethod No MINUIT MC, GA, SA, MINUIT Optimisation Method. Converger No None None, MINUIT FitMethod uses Converger to improve result. Configuration options for MVA method :. Configuration options reference for MVA method: LD. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLe",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:5996,Performance,perform,performance,5996,"ma No 0.1 − Width (wrt volume size) of Gaussian kernel estimator. NormTree No False − Normalize binary search tree. Configuration options for MVA method :. Configuration options reference for MVA method: FDA. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Formula No (0) − The discrimination formula. ParRanges No () − Parameter ranges. FitMethod No MINUIT MC, GA, SA, MINUIT Optimisation Method. Converger No None None, MINUIT FitMethod uses Converger to improve result. Configuration options for MVA method :. Configuration options reference for MVA method: LD. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specifi",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:6632,Performance,perform,performed,6632,"ass of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Formula No (0) − The discrimination formula. ParRanges No () − Parameter ranges. FitMethod No MINUIT MC, GA, SA, MINUIT Optimisation Method. Converger No None None, MINUIT FitMethod uses Converger to improve result. Configuration options for MVA method :. Configuration options reference for MVA method: LD. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Configuration options for MVA method :. Configuration options reference for MVA method: SVM. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before trainin",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:7173,Performance,perform,performance,7173,"T MC, GA, SA, MINUIT Optimisation Method. Converger No None None, MINUIT FitMethod uses Converger to improve result. Configuration options for MVA method :. Configuration options reference for MVA method: LD. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Configuration options for MVA method :. Configuration options reference for MVA method: SVM. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included f",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:7594,Performance,perform,performed,7594,"ransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Configuration options for MVA method :. Configuration options reference for MVA method: SVM. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Gamma No 1 − RBF kernel parameter: Gamma (size of the Kernel). C No 1 − Cost parameter. Tol No 0.01 − Tolerance parameter. MaxIter No 1000 − Maximum number of training loops. Configuration options for MVA method :. Configuration options reference for MVA method: CFMlpANN. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter on",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:8135,Performance,perform,performance,8135,"Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Configuration options for MVA method :. Configuration options reference for MVA method: SVM. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Gamma No 1 − RBF kernel parameter: Gamma (size of the Kernel). C No 1 − Cost parameter. Tol No 0.01 − Tolerance parameter. MaxIter No 1000 − Maximum number of training loops. Configuration options for MVA method :. Configuration options reference for MVA method: CFMlpANN. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No Fa",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:8736,Performance,perform,performed,8736,"ormalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Gamma No 1 − RBF kernel parameter: Gamma (size of the Kernel). C No 1 − Cost parameter. Tol No 0.01 − Tolerance parameter. MaxIter No 1000 − Maximum number of training loops. Configuration options for MVA method :. Configuration options reference for MVA method: CFMlpANN. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NCycles No 3000 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden layer architecture. Configuration options for MVA method :. Configuration options reference for MVA method: KNN. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warnin",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:9277,Performance,perform,performance,9277," No 1 − Cost parameter. Tol No 0.01 − Tolerance parameter. MaxIter No 1000 − Maximum number of training loops. Configuration options for MVA method :. Configuration options reference for MVA method: CFMlpANN. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NCycles No 3000 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden layer architecture. Configuration options for MVA method :. Configuration options reference for MVA method: KNN. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). I",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:9811,Performance,perform,performed,9811,"lClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NCycles No 3000 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden layer architecture. Configuration options for MVA method :. Configuration options reference for MVA method: KNN. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). nkNN No 20 − Number of k-nearest neighbors. BalanceDepth No 6 − Binary tree balance depth. ScaleFrac No 0.8 − Fraction of events used to compute variable width. SigmaFact No 1 − Scale factor for sigma in Gaussian kernel. Kernel No Gaus − Use polynomial (=Poln) or Gaussian (=Gaus) kernel. Trim No False − Use equal number of signal and background events. UseKernel No False − Use polynomial kernel weight. UseWeight No T",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:10352,Performance,perform,performance,10352,"). NCycles No 3000 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden layer architecture. Configuration options for MVA method :. Configuration options reference for MVA method: KNN. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). nkNN No 20 − Number of k-nearest neighbors. BalanceDepth No 6 − Binary tree balance depth. ScaleFrac No 0.8 − Fraction of events used to compute variable width. SigmaFact No 1 − Scale factor for sigma in Gaussian kernel. Kernel No Gaus − Use polynomial (=Poln) or Gaussian (=Gaus) kernel. Trim No False − Use equal number of signal and background events. UseKernel No False − Use polynomial kernel weight. UseWeight No True − Use weight to count kNN events. UseLDA No False − Use local linear discriminant - experimental feature. Configuration options for MVA method :. Configuration options reference for MVA method: BDT. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformati",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:11303,Performance,perform,performed,11303," are ignored in the training (but are included for testing and performance evaluation). nkNN No 20 − Number of k-nearest neighbors. BalanceDepth No 6 − Binary tree balance depth. ScaleFrac No 0.8 − Fraction of events used to compute variable width. SigmaFact No 1 − Scale factor for sigma in Gaussian kernel. Kernel No Gaus − Use polynomial (=Poln) or Gaussian (=Gaus) kernel. Trim No False − Use equal number of signal and background events. UseKernel No False − Use polynomial kernel weight. UseWeight No True − Use weight to count kNN events. UseLDA No False − Use local linear discriminant - experimental feature. Configuration options for MVA method :. Configuration options reference for MVA method: BDT. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NTrees No 800 − Number of trees in the forest. MaxDepth No 3 − Max depth of the decision tree allowed. MinNodeSize No 5% − Minimum percentage of training events required in a leaf node (default: Classification: 5%, Regression: 0.2%). nCuts No 20 − Number of grid points in variable range used in finding optimal cut in node splitting. BoostType No AdaBoost AdaBoost, RealAdaBoost, Bagging, AdaBoostR2, Grad Boosting type",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:11844,Performance,perform,performance,11844,"t No True − Use weight to count kNN events. UseLDA No False − Use local linear discriminant - experimental feature. Configuration options for MVA method :. Configuration options reference for MVA method: BDT. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NTrees No 800 − Number of trees in the forest. MaxDepth No 3 − Max depth of the decision tree allowed. MinNodeSize No 5% − Minimum percentage of training events required in a leaf node (default: Classification: 5%, Regression: 0.2%). nCuts No 20 − Number of grid points in variable range used in finding optimal cut in node splitting. BoostType No AdaBoost AdaBoost, RealAdaBoost, Bagging, AdaBoostR2, Grad Boosting type for the trees in the forest . AdaBoostR2Loss No Quadratic Linear, Quadratic, Exponential Type of Loss function in AdaBoostR2. UseBaggedGrad No False − Use only a random subsample of all events for growing the trees in each iteration. (Only valid for GradBoost). Shrinkage No 1 − Learning rate for GradBoost algorithm. AdaBoostBeta No 0.5 − Learning rate for AdaBoost algorithm. UseRandomisedTrees No False − Determine at each node splitting the cut variable only as the best out of a random subset of ",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:15088,Performance,optimiz,optimizing,15088,"FisherCuts No False − Use multivariate splits using the Fisher criterion. MinLinCorrForFisher No 0.8 − The minimum linear correlation between two variables demanded for use in Fisher criterion in node splitting. UseExclusiveVars No False − Variables already used in fisher criterion are not anymore analysed individually for node splitting. DoPreselection No False − and and apply automatic pre-selection for 100% efficient signal (bkg) cuts prior to training. RenormByClass No False − Individually re-normalize each event class to the original size after boosting. SigToBkgFraction No 1 − Sig to Bkg ratio used in Training (similar to NodePurityLimit, which cannot be used in real adaboost. PruneMethod No NoPruning NoPruning, ExpectedError, CostComplexity Note: for BDTs use small trees (e.g.MaxDepth=3) and NoPruning: Pruning: Method used for pruning (removal) of statistically insignificant branches . PruneStrength No 0 − Pruning strength. PruningValFraction No 0.5 − Fraction of events to use for optimizing automatic pruning. nEventsMin No 0 − deprecated: Use MinNodeSize (in % of training events) instead. GradBaggingFraction No 0.6 − deprecated: Use *BaggedSampleFraction* instead: Defines the fraction of events to be used in each iteration, e.g. when UseBaggedGrad=kTRUE. . UseNTrainEvents No 0 − deprecated: Use *BaggedSampleFraction* instead: Number of randomly picked training events used in randomised (and bagged) trees. NNodesMax No 0 − deprecated: Use MaxDepth instead to limit the tree size. Configuration options for MVA method :. Configuration options reference for MVA method: Boost. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PC",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:15994,Performance,perform,performed,15994,"branches . PruneStrength No 0 − Pruning strength. PruningValFraction No 0.5 − Fraction of events to use for optimizing automatic pruning. nEventsMin No 0 − deprecated: Use MinNodeSize (in % of training events) instead. GradBaggingFraction No 0.6 − deprecated: Use *BaggedSampleFraction* instead: Defines the fraction of events to be used in each iteration, e.g. when UseBaggedGrad=kTRUE. . UseNTrainEvents No 0 − deprecated: Use *BaggedSampleFraction* instead: Number of randomly picked training events used in randomised (and bagged) trees. NNodesMax No 0 − deprecated: Use MaxDepth instead to limit the tree size. Configuration options for MVA method :. Configuration options reference for MVA method: Boost. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Boost_Num No 100 − Number of times the classifier is boosted. Boost_MonitorMethod No True − Write monitoring histograms for each boosted classifier. Boost_DetailedMonitoring No False − Produce histograms for detailed boost-wise monitoring. Boost_Type No AdaBoost AdaBoost, Bagging, HighEdgeGauss, HighEdgeCoPara Boosting type for the classifiers. Boost_BaggedSampleFraction No 0.6 − Relative size of bagged event sample ",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:16535,Performance,perform,performance,16535," used in randomised (and bagged) trees. NNodesMax No 0 − deprecated: Use MaxDepth instead to limit the tree size. Configuration options for MVA method :. Configuration options reference for MVA method: Boost. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Boost_Num No 100 − Number of times the classifier is boosted. Boost_MonitorMethod No True − Write monitoring histograms for each boosted classifier. Boost_DetailedMonitoring No False − Produce histograms for detailed boost-wise monitoring. Boost_Type No AdaBoost AdaBoost, Bagging, HighEdgeGauss, HighEdgeCoPara Boosting type for the classifiers. Boost_BaggedSampleFraction No 0.6 − Relative size of bagged event sample to original size of the data sample (used whenever bagging is used). Boost_MethodWeightType No ByError ByError, Average, ByROC, ByOverlap, LastMethod How to set the final weight of the boosted classifiers. Boost_RecalculateMVACut No True − Recalculate the classifier MVA Signallike cut at every boost iteration. Boost_AdaBoostBeta No 1 − The ADA boost parameter that sets the effect of every boost step on the events' weights. Boost_Transform No step step, linear, log, gauss Type of transform applied ",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:18000,Performance,perform,performed,18000,"ginal size of the data sample (used whenever bagging is used). Boost_MethodWeightType No ByError ByError, Average, ByROC, ByOverlap, LastMethod How to set the final weight of the boosted classifiers. Boost_RecalculateMVACut No True − Recalculate the classifier MVA Signallike cut at every boost iteration. Boost_AdaBoostBeta No 1 − The ADA boost parameter that sets the effect of every boost step on the events' weights. Boost_Transform No step step, linear, log, gauss Type of transform applied to every boosted method linear, log, step. Boost_RandomSeed No 0 − Seed for random number generator used for bagging. Configuration options for MVA method :. Configuration options reference for MVA method: RuleFit. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). GDTau No -1 − Gradient-directed (GD) path: default fit cut-off. GDTauPrec No 0.01 − GD path: precision of tau. GDStep No 0.01 − GD path: step size. GDNSteps No 10000 − GD path: number of steps. GDErrScale No 1.1 − Stop scan when error > scale*errmin. LinQuantile No 0.025 − Quantile of linear terms (removes outliers). GDPathEveFrac No 0.5 − Fraction of events used for the path search. GDValidEveFrac No 0.5 − Fraction ",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:18541,Performance,perform,performance,18541,"ry boosted method linear, log, step. Boost_RandomSeed No 0 − Seed for random number generator used for bagging. Configuration options for MVA method :. Configuration options reference for MVA method: RuleFit. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). GDTau No -1 − Gradient-directed (GD) path: default fit cut-off. GDTauPrec No 0.01 − GD path: precision of tau. GDStep No 0.01 − GD path: step size. GDNSteps No 10000 − GD path: number of steps. GDErrScale No 1.1 − Stop scan when error > scale*errmin. LinQuantile No 0.025 − Quantile of linear terms (removes outliers). GDPathEveFrac No 0.5 − Fraction of events used for the path search. GDValidEveFrac No 0.5 − Fraction of events used for the validation. fEventsMin No 0.1 − Minimum fraction of events in a splittable node. fEventsMax No 0.9 − Maximum fraction of events in a splittable node. nTrees No 20 − Number of trees in forest. ForestType No AdaBoost AdaBoost, Random Method to use for forest generation (AdaBoost or RandomForest). RuleMinDist No 0.001 − Minimum distance between rules. MinImp No 0.01 − Minimum rule importance accepted. Model No ModRuleLinear ModRule, ModRuleLinear, ModLinear Model to be used. Ru",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:20133,Performance,perform,performed,20133,"raction of events in a splittable node. nTrees No 20 − Number of trees in forest. ForestType No AdaBoost AdaBoost, Random Method to use for forest generation (AdaBoost or RandomForest). RuleMinDist No 0.001 − Minimum distance between rules. MinImp No 0.01 − Minimum rule importance accepted. Model No ModRuleLinear ModRule, ModRuleLinear, ModLinear Model to be used. RuleFitModule No RFTMVA RFTMVA, RFFriedman Which RuleFit module to use. RFWorkDir No ./rulefit − Friedman's RuleFit module (RFF): working dir. RFNrules No 2000 − RFF: Mximum number of rules. RFNendnodes No 4 − RFF: Average number of end nodes. Configuration options for MVA method :. Configuration options reference for MVA method: Likelihood. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). TransformOutput No False − Transform likelihood output by inverse sigmoid function. Configuration options for MVA method :. Configuration options reference for MVA method: MLP. Option Array Default value Predefined values Description. NCycles No 500 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden layer architecture. NeuronType No sigmoid − Neuron activation function type. RandomSeed No 1 ",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:20674,Performance,perform,performance,20674,"ng dir. RFNrules No 2000 − RFF: Mximum number of rules. RFNendnodes No 4 − RFF: Average number of end nodes. Configuration options for MVA method :. Configuration options reference for MVA method: Likelihood. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). TransformOutput No False − Transform likelihood output by inverse sigmoid function. Configuration options for MVA method :. Configuration options reference for MVA method: MLP. Option Array Default value Predefined values Description. NCycles No 500 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden layer architecture. NeuronType No sigmoid − Neuron activation function type. RandomSeed No 1 − Random seed for initial synapse weights (0 means unique seed for each run; default value '1'). EstimatorType No MSE MSE, CE, linear, sigmoid, tanh, radial MSE (Mean Square Estimator) for Gaussian Likelihood or CE(Cross-Entropy) for Bernoulli Likelihood. NeuronInputType No sum sum, sqsum, abssum Neuron input function type. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verb",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:21690,Performance,perform,performed,21690,"rformance evaluation). TransformOutput No False − Transform likelihood output by inverse sigmoid function. Configuration options for MVA method :. Configuration options reference for MVA method: MLP. Option Array Default value Predefined values Description. NCycles No 500 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden layer architecture. NeuronType No sigmoid − Neuron activation function type. RandomSeed No 1 − Random seed for initial synapse weights (0 means unique seed for each run; default value '1'). EstimatorType No MSE MSE, CE, linear, sigmoid, tanh, radial MSE (Mean Square Estimator) for Gaussian Likelihood or CE(Cross-Entropy) for Bernoulli Likelihood. NeuronInputType No sum sum, sqsum, abssum Neuron input function type. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). TrainingMethod No BP BP, GA, BFGS Train with Back-Propagation (BP), BFGS Algorithm (BFGS), or Genetic Algorithm (GA - slower and worse). LearningRate No 0.02 − ANN learning rate parameter. DecayRate No 0.01 − Decay rate for learning parameter. TestRate No 10 − Test for overtraining performed at each #th epochs. EpochMonitoring No False − Provide epoch-wise monitoring plots according to TestRate (caution: causes big R",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:22231,Performance,perform,performance,22231,"eed for each run; default value '1'). EstimatorType No MSE MSE, CE, linear, sigmoid, tanh, radial MSE (Mean Square Estimator) for Gaussian Likelihood or CE(Cross-Entropy) for Bernoulli Likelihood. NeuronInputType No sum sum, sqsum, abssum Neuron input function type. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). TrainingMethod No BP BP, GA, BFGS Train with Back-Propagation (BP), BFGS Algorithm (BFGS), or Genetic Algorithm (GA - slower and worse). LearningRate No 0.02 − ANN learning rate parameter. DecayRate No 0.01 − Decay rate for learning parameter. TestRate No 10 − Test for overtraining performed at each #th epochs. EpochMonitoring No False − Provide epoch-wise monitoring plots according to TestRate (caution: causes big ROOT output file!). Sampling No 1 − Only 'Sampling' (randomly selected) events are trained each epoch. SamplingEpoch No 1 − Sampling is used for the first 'SamplingEpoch' epochs, afterwards, all events are taken for training. SamplingImportance No 1 − The sampling weights of events in epochs which successful (worse estimator than before) are multiplied with SamplingImportance, else they are divided. SamplingTraining No True − The training sample is sampled. SamplingTesting No False − The testing sa",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:22539,Performance,perform,performed,22539,"ne). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). TrainingMethod No BP BP, GA, BFGS Train with Back-Propagation (BP), BFGS Algorithm (BFGS), or Genetic Algorithm (GA - slower and worse). LearningRate No 0.02 − ANN learning rate parameter. DecayRate No 0.01 − Decay rate for learning parameter. TestRate No 10 − Test for overtraining performed at each #th epochs. EpochMonitoring No False − Provide epoch-wise monitoring plots according to TestRate (caution: causes big ROOT output file!). Sampling No 1 − Only 'Sampling' (randomly selected) events are trained each epoch. SamplingEpoch No 1 − Sampling is used for the first 'SamplingEpoch' epochs, afterwards, all events are taken for training. SamplingImportance No 1 − The sampling weights of events in epochs which successful (worse estimator than before) are multiplied with SamplingImportance, else they are divided. SamplingTraining No True − The training sample is sampled. SamplingTesting No False − The testing sample is sampled. ResetStep No 50 − How often BFGS should reset history. Tau No 3 − LineSearch size step. BPMode No sequential sequential, batch Back-propagation learning mode: sequential or batch. BatchSize No -1 − Batch size: number of events/batch, only set if in Batch Mode, -1 for BatchSize=number_of_events. ConvergenceImprove No 1e-30 − Minimum impro",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:24588,Performance,perform,performed,24588,"eans automatic convergence check is turned off). ConvergenceTests No -1 − Number of steps (without improvement) required for convergence (<0 means automatic convergence check is turned off). UseRegulator No False − Use regulator to avoid over-training. UpdateLimit No 10000 − Maximum times of regulator update. CalculateErrors No False − Calculates inverse Hessian matrix at the end of the training to be able to calculate the uncertainties of an MVA value. WeightRange No 1 − Take the events for the estimator calculations from small deviations from the desired value to large deviations only over the weight range. Configuration options for MVA method :. Configuration options reference for MVA method: Cuts. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). FitMethod No GA GA, SA, MC, MCEvents, MINUIT, EventScan Minimisation Method (GA, SA, and MC are the primary methods to be used; the others have been introduced for testing purposes and are depreciated). EffMethod No EffSel EffSel, EffPDF Selection Method. CutRangeMin Yes -1 − Minimum of allowed cut range (set per variable). CutRangeMax Yes -1 − Maximum of allowed cut range (set per variable). VarProp Yes NotEnforced ",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:25129,Performance,perform,performance,25129,"stimator calculations from small deviations from the desired value to large deviations only over the weight range. Configuration options for MVA method :. Configuration options reference for MVA method: Cuts. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). FitMethod No GA GA, SA, MC, MCEvents, MINUIT, EventScan Minimisation Method (GA, SA, and MC are the primary methods to be used; the others have been introduced for testing purposes and are depreciated). EffMethod No EffSel EffSel, EffPDF Selection Method. CutRangeMin Yes -1 − Minimum of allowed cut range (set per variable). CutRangeMax Yes -1 − Maximum of allowed cut range (set per variable). VarProp Yes NotEnforced NotEnforced, FMax, FMin, FSmart Categorisation of cuts. Configuration options for MVA method :. Configuration options reference for MVA method: PDEFoam. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:26030,Performance,perform,performed,26030,"InTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). FitMethod No GA GA, SA, MC, MCEvents, MINUIT, EventScan Minimisation Method (GA, SA, and MC are the primary methods to be used; the others have been introduced for testing purposes and are depreciated). EffMethod No EffSel EffSel, EffPDF Selection Method. CutRangeMin Yes -1 − Minimum of allowed cut range (set per variable). CutRangeMax Yes -1 − Maximum of allowed cut range (set per variable). VarProp Yes NotEnforced NotEnforced, FMax, FMin, FSmart Categorisation of cuts. Configuration options for MVA method :. Configuration options reference for MVA method: PDEFoam. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). SigBgSeparate No False − Separate foams for signal and background. TailCut No 0.001 − Fraction of outlier events that are excluded from the foam in each dimension. VolFrac No 0.0666667 − Size of sampling box, used for density calculation during foam build-up (maximum value: 1.0 is equivalent to volume of entire foam). nActiveCells No 500 − Maximum number of active cells to be created by the foam. nSampl No 2000 − Num",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:26571,Performance,perform,performance,26571,"d cut range (set per variable). VarProp Yes NotEnforced NotEnforced, FMax, FMin, FSmart Categorisation of cuts. Configuration options for MVA method :. Configuration options reference for MVA method: PDEFoam. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). SigBgSeparate No False − Separate foams for signal and background. TailCut No 0.001 − Fraction of outlier events that are excluded from the foam in each dimension. VolFrac No 0.0666667 − Size of sampling box, used for density calculation during foam build-up (maximum value: 1.0 is equivalent to volume of entire foam). nActiveCells No 500 − Maximum number of active cells to be created by the foam. nSampl No 2000 − Number of generated MC events per cell. nBin No 5 − Number of bins in edge histograms. Compress No True − Compress foam output file. MultiTargetRegression No False − Do regression with multiple targets. Nmin No 100 − Number of events in cell required to split cell. MaxDepth No 0 − Maximum depth of cell tree (0=unlimited). FillFoamWithOrigWeights No False − Fill foam with original or boost weights. UseYesNoCell No False − Return -1 or 1 for bkg or signal like events. DTLogic No None None, GiniIndex, M",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:28154,Performance,perform,performed,28154,"file. MultiTargetRegression No False − Do regression with multiple targets. Nmin No 100 − Number of events in cell required to split cell. MaxDepth No 0 − Maximum depth of cell tree (0=unlimited). FillFoamWithOrigWeights No False − Fill foam with original or boost weights. UseYesNoCell No False − Return -1 or 1 for bkg or signal like events. DTLogic No None None, GiniIndex, MisClassificationError, CrossEntropy, GiniIndexWithLaplace, SdivSqrtSplusB Use decision tree algorithm to split cells. Kernel No None None, Gauss, LinNeighbors Kernel type used. TargetSelection No Mean Mean, Mpv Target selection method. Configuration options for MVA method :. Configuration options reference for MVA method: TMlpANN. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NCycles No 200 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden layer architecture (N stands for number of variables; any integers may also be used). ValidationFraction No 0.5 − Fraction of events in training tree used for cross validation. LearningMethod No Stochastic Stochastic, Batch, SteepestDescent, RibierePolak, FletcherReeves, BFGS Learning method. Configuration options for setup an",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:28695,Performance,perform,performance,28695," No None None, Gauss, LinNeighbors Kernel type used. TargetSelection No Mean Mean, Mpv Target selection method. Configuration options for MVA method :. Configuration options reference for MVA method: TMlpANN. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NCycles No 200 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden layer architecture (N stands for number of variables; any integers may also be used). ValidationFraction No 0.5 − Fraction of events in training tree used for cross validation. LearningMethod No Stochastic Stochastic, Batch, SteepestDescent, RibierePolak, FletcherReeves, BFGS Learning method. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Simulated Annealing (SA). Option Array Default value Predefined values Description. MaxCalls No 100000 − Maximum number of minimisation calls. InitialTemp No 1e+06 − Initial temperature. MinTemp No 1e-06 − Mimimum temperature. Eps No 1e-10 − Epsilon. TempScale No 1 − Temperature scale. AdaptiveSpeed No 1 − Adaptive speed. TempAdaptiveStep No 0.009875 − Step made in each generation temperature adaptive. UseDefaultSca",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:23806,Safety,avoid,avoid,23806,"1 − Sampling is used for the first 'SamplingEpoch' epochs, afterwards, all events are taken for training. SamplingImportance No 1 − The sampling weights of events in epochs which successful (worse estimator than before) are multiplied with SamplingImportance, else they are divided. SamplingTraining No True − The training sample is sampled. SamplingTesting No False − The testing sample is sampled. ResetStep No 50 − How often BFGS should reset history. Tau No 3 − LineSearch size step. BPMode No sequential sequential, batch Back-propagation learning mode: sequential or batch. BatchSize No -1 − Batch size: number of events/batch, only set if in Batch Mode, -1 for BatchSize=number_of_events. ConvergenceImprove No 1e-30 − Minimum improvement which counts as improvement (<0 means automatic convergence check is turned off). ConvergenceTests No -1 − Number of steps (without improvement) required for convergence (<0 means automatic convergence check is turned off). UseRegulator No False − Use regulator to avoid over-training. UpdateLimit No 10000 − Maximum times of regulator update. CalculateErrors No False − Calculates inverse Hessian matrix at the end of the training to be able to calculate the uncertainties of an MVA value. WeightRange No 1 − Take the events for the estimator calculations from small deviations from the desired value to large deviations only over the weight range. Configuration options for MVA method :. Configuration options reference for MVA method: Cuts. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all even",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:19009,Security,validat,validation,19009,"ons performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). GDTau No -1 − Gradient-directed (GD) path: default fit cut-off. GDTauPrec No 0.01 − GD path: precision of tau. GDStep No 0.01 − GD path: step size. GDNSteps No 10000 − GD path: number of steps. GDErrScale No 1.1 − Stop scan when error > scale*errmin. LinQuantile No 0.025 − Quantile of linear terms (removes outliers). GDPathEveFrac No 0.5 − Fraction of events used for the path search. GDValidEveFrac No 0.5 − Fraction of events used for the validation. fEventsMin No 0.1 − Minimum fraction of events in a splittable node. fEventsMax No 0.9 − Maximum fraction of events in a splittable node. nTrees No 20 − Number of trees in forest. ForestType No AdaBoost AdaBoost, Random Method to use for forest generation (AdaBoost or RandomForest). RuleMinDist No 0.001 − Minimum distance between rules. MinImp No 0.01 − Minimum rule importance accepted. Model No ModRuleLinear ModRule, ModRuleLinear, ModLinear Model to be used. RuleFitModule No RFTMVA RFTMVA, RFFriedman Which RuleFit module to use. RFWorkDir No ./rulefit − Friedman's RuleFit module (RFF): working dir. RFNrules No 2000 − RFF: Mximum number of rules. RFNendnodes No 4 − RFF: Average number of end nodes. Configuration options for MVA method :. Configuration options reference for MVA method: Likelihood. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel N",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:28898,Security,Validat,ValidationFraction,28898,"V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NCycles No 200 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden layer architecture (N stands for number of variables; any integers may also be used). ValidationFraction No 0.5 − Fraction of events in training tree used for cross validation. LearningMethod No Stochastic Stochastic, Batch, SteepestDescent, RibierePolak, FletcherReeves, BFGS Learning method. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Simulated Annealing (SA). Option Array Default value Predefined values Description. MaxCalls No 100000 − Maximum number of minimisation calls. InitialTemp No 1e+06 − Initial temperature. MinTemp No 1e-06 − Mimimum temperature. Eps No 1e-10 − Epsilon. TempScale No 1 − Temperature scale. AdaptiveSpeed No 1 − Adaptive speed. TempAdaptiveStep No 0.009875 − Step made in each generation temperature adaptive. UseDefaultScale No False − Use default temperature scale for temperature minimisation algorithm. UseDefaultTemp No False − Use default initial temperature. KernelTemp No IncAdaptive IncAdaptive, DecAdaptive, Sqrt, Log, Sin, Homo, Geo Temperature minimisation algorithm. Configurati",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:28977,Security,validat,validation,28977,"bosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NCycles No 200 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden layer architecture (N stands for number of variables; any integers may also be used). ValidationFraction No 0.5 − Fraction of events in training tree used for cross validation. LearningMethod No Stochastic Stochastic, Batch, SteepestDescent, RibierePolak, FletcherReeves, BFGS Learning method. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Simulated Annealing (SA). Option Array Default value Predefined values Description. MaxCalls No 100000 − Maximum number of minimisation calls. InitialTemp No 1e+06 − Initial temperature. MinTemp No 1e-06 − Mimimum temperature. Eps No 1e-10 − Epsilon. TempScale No 1 − Temperature scale. AdaptiveSpeed No 1 − Adaptive speed. TempAdaptiveStep No 0.009875 − Step made in each generation temperature adaptive. UseDefaultScale No False − Use default temperature scale for temperature minimisation algorithm. UseDefaultTemp No False − Use default initial temperature. KernelTemp No IncAdaptive IncAdaptive, DecAdaptive, Sqrt, Log, Sin, Homo, Geo Temperature minimisation algorithm. Configuration options for setup and tuning of specific f",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:32175,Security,validat,validation,32175,"and tuning of specific fitter :. Configuration options reference for fitting method: Genetic Algorithm (GA). Option Array Default value Predefined values Description. PopSize No 300 − Population size for GA. Steps No 40 − Number of steps for convergence. Cycles No 3 − Independent cycles of GA fitting. SC_steps No 10 − Spread control, steps. SC_rate No 5 − Spread control, rate: factor is changed depending on the rate. SC_factor No 0.95 − Spread control, factor. ConvCrit No 0.001 − Convergence criteria. SaveBestGen No 1 − Saves the best n results from each generation. They are included in the last cycle. SaveBestCycle No 10 − Saves the best n results from each cycle. They are included in the last cycle. The value should be set to at least 1.0. Trim No False − Trim the population to PopSize after assessing the fitness of each individual. Seed No 100 − Set seed of random generator (0 gives random seeds). Configuration options given in the ""PrepareForTrainingAndTesting"" call; these options define the creation of the data sets used for training and expert validation by TMVA :. Configuration options reference for class: DataSetFactory. Option Array Default value Predefined values Description. SplitMode No Random Random, Alternate, Block Method of picking training and testing events (default: random). MixMode No SameAsSplitMode SameAsSplitMode, Random, Alternate, Block Method of mixing events of differnt classes into one dataset (default: SameAsSplitMode). SplitSeed No 100 − Seed for random event shuffling. NormMode No EqualNumEvents None, NumEvents, EqualNumEvents Overall renormalisation of event-by-event weights used in the training (NumEvents: average weight of 1 per event, independently for signal and background; EqualNumEvents: average weight of 1 per event for signal, and sum of weights for background equal to sum of weights for signal). nTrain_Signal No 0 − Number of training events of class Signal (default: 0 = all). nTest_Signal No 0 − Number of test events of clas",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:271,Testability,test,testing,271,". TMVA Options Reference. TMVA Configuration Options Reference; Reference version: TMVA-v-unknown. TMVA-version @ ROOT. Reference for configuration options defined in the option string of each MVA method booking, and for the definition of data sets used for training and testing (Factory). Table fields:. Option:; The option identifier in the option string (given, e.g., in ""factory->BookMethod(...)"" call). Array:; Can the option be set individually for each input variable via the ""[i]"" tag, where ""i"" is the ith variable?. Default value:; Value used if option is not explicitly set in the configuration option string. Predefined values:; Options can be categories of predefined values among which the user must choose. Description:; Info about the option. Colour codes:. Greenish rows:; Options shared by all MVA methods (through common base class). Bluish rows:; Specific MVA options. Yellowish rows:; Configuration options for minimiser (fitter) classes. Redish rows:; Options for other configurable classes. Available MVA methods (1st row), minimisation tools (2nd row), and other configurables (3rd row):. [MVA::HMatrix] [MVA::Fisher] [MVA::PDERS] [MVA::FDA] [MVA::LD] [MVA::SVM] [MVA::CFMlpANN] [MVA::KNN] [MVA::BDT] [MVA::Boost] [MVA::RuleFit] [MVA::Likelihood] [MVA::MLP] [MVA::Cuts] [MVA::PDEFoam] [MVA::TMlpANN]. [Fitter_SA] [Fitter_MC] [Fitter_Minuit] [Fitter_GA]. [DataSetFactory] [PDF] [Factory]. Configuration options for MVA method :. Configuration options reference for MVA method: HMatrix. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:2341,Testability,test,testing,2341,"PDEFoam] [MVA::TMlpANN]. [Fitter_SA] [Fitter_MC] [Fitter_Minuit] [Fitter_GA]. [DataSetFactory] [PDF] [Factory]. Configuration options for MVA method :. Configuration options reference for MVA method: HMatrix. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Configuration options for MVA method :. Configuration options reference for MVA method: Fisher. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are include",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:3306,Testability,test,testing,3306,"nts with negative weights are ignored in the training (but are included for testing and performance evaluation). Configuration options for MVA method :. Configuration options reference for MVA method: Fisher. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Method No Fisher Fisher, Mahalanobis Discrimination method. Configuration options for MVA method :. Configuration options reference for MVA method: PDERS. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with ne",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:4330,Testability,test,testing,4330,"are included for testing and performance evaluation). Method No Fisher Fisher, Mahalanobis Discrimination method. Configuration options for MVA method :. Configuration options reference for MVA method: PDERS. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). VolumeRangeMode No Adaptive Unscaled, MinMax, RMS, Adaptive, kNN Method to determine volume size. KernelEstimator No Box Box, Sphere, Teepee, Gauss, Sinc3, Sinc5, Sinc7, Sinc9, Sinc11, Lanczos2, Lanczos3, Lanczos5, Lanczos8, Trim Kernel estimation function. DeltaFrac No 3 − nEventsMin/Max for minmax and rms volume range. NEventsMin No 100 − nEventsMin for adaptive volume range. NEventsMax No 200 − nEventsMax for adaptive volume range. MaxVIterations No 150 − MaxVIterations for adaptive volume range. InitialScale No 0.99 − InitialScale for adaptive volume range. GaussSigma No 0.1 − Width (wrt volume size) of Gaussian kernel estimator. NormTree No False − Normalize binary search tree. Configuration options for MVA method :. Configuration options reference for MVA method: FDA. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:5984,Testability,test,testing,5984,"ma No 0.1 − Width (wrt volume size) of Gaussian kernel estimator. NormTree No False − Normalize binary search tree. Configuration options for MVA method :. Configuration options reference for MVA method: FDA. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Formula No (0) − The discrimination formula. ParRanges No () − Parameter ranges. FitMethod No MINUIT MC, GA, SA, MINUIT Optimisation Method. Converger No None None, MINUIT FitMethod uses Converger to improve result. Configuration options for MVA method :. Configuration options reference for MVA method: LD. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specifi",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:7161,Testability,test,testing,7161,"T MC, GA, SA, MINUIT Optimisation Method. Converger No None None, MINUIT FitMethod uses Converger to improve result. Configuration options for MVA method :. Configuration options reference for MVA method: LD. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Configuration options for MVA method :. Configuration options reference for MVA method: SVM. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included f",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:8123,Testability,test,testing,8123,"Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Configuration options for MVA method :. Configuration options reference for MVA method: SVM. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Gamma No 1 − RBF kernel parameter: Gamma (size of the Kernel). C No 1 − Cost parameter. Tol No 0.01 − Tolerance parameter. MaxIter No 1000 − Maximum number of training loops. Configuration options for MVA method :. Configuration options reference for MVA method: CFMlpANN. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No Fa",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:9265,Testability,test,testing,9265," No 1 − Cost parameter. Tol No 0.01 − Tolerance parameter. MaxIter No 1000 − Maximum number of training loops. Configuration options for MVA method :. Configuration options reference for MVA method: CFMlpANN. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NCycles No 3000 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden layer architecture. Configuration options for MVA method :. Configuration options reference for MVA method: KNN. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). I",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:10340,Testability,test,testing,10340,"). NCycles No 3000 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden layer architecture. Configuration options for MVA method :. Configuration options reference for MVA method: KNN. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). nkNN No 20 − Number of k-nearest neighbors. BalanceDepth No 6 − Binary tree balance depth. ScaleFrac No 0.8 − Fraction of events used to compute variable width. SigmaFact No 1 − Scale factor for sigma in Gaussian kernel. Kernel No Gaus − Use polynomial (=Poln) or Gaussian (=Gaus) kernel. Trim No False − Use equal number of signal and background events. UseKernel No False − Use polynomial kernel weight. UseWeight No True − Use weight to count kNN events. UseLDA No False − Use local linear discriminant - experimental feature. Configuration options for MVA method :. Configuration options reference for MVA method: BDT. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformati",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:11832,Testability,test,testing,11832,"t No True − Use weight to count kNN events. UseLDA No False − Use local linear discriminant - experimental feature. Configuration options for MVA method :. Configuration options reference for MVA method: BDT. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NTrees No 800 − Number of trees in the forest. MaxDepth No 3 − Max depth of the decision tree allowed. MinNodeSize No 5% − Minimum percentage of training events required in a leaf node (default: Classification: 5%, Regression: 0.2%). nCuts No 20 − Number of grid points in variable range used in finding optimal cut in node splitting. BoostType No AdaBoost AdaBoost, RealAdaBoost, Bagging, AdaBoostR2, Grad Boosting type for the trees in the forest . AdaBoostR2Loss No Quadratic Linear, Quadratic, Exponential Type of Loss function in AdaBoostR2. UseBaggedGrad No False − Use only a random subsample of all events for growing the trees in each iteration. (Only valid for GradBoost). Shrinkage No 1 − Learning rate for GradBoost algorithm. AdaBoostBeta No 0.5 − Learning rate for AdaBoost algorithm. UseRandomisedTrees No False − Determine at each node splitting the cut variable only as the best out of a random subset of ",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:16523,Testability,test,testing,16523," used in randomised (and bagged) trees. NNodesMax No 0 − deprecated: Use MaxDepth instead to limit the tree size. Configuration options for MVA method :. Configuration options reference for MVA method: Boost. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). Boost_Num No 100 − Number of times the classifier is boosted. Boost_MonitorMethod No True − Write monitoring histograms for each boosted classifier. Boost_DetailedMonitoring No False − Produce histograms for detailed boost-wise monitoring. Boost_Type No AdaBoost AdaBoost, Bagging, HighEdgeGauss, HighEdgeCoPara Boosting type for the classifiers. Boost_BaggedSampleFraction No 0.6 − Relative size of bagged event sample to original size of the data sample (used whenever bagging is used). Boost_MethodWeightType No ByError ByError, Average, ByROC, ByOverlap, LastMethod How to set the final weight of the boosted classifiers. Boost_RecalculateMVACut No True − Recalculate the classifier MVA Signallike cut at every boost iteration. Boost_AdaBoostBeta No 1 − The ADA boost parameter that sets the effect of every boost step on the events' weights. Boost_Transform No step step, linear, log, gauss Type of transform applied ",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:17445,Testability,log,log,17445,"weights are ignored in the training (but are included for testing and performance evaluation). Boost_Num No 100 − Number of times the classifier is boosted. Boost_MonitorMethod No True − Write monitoring histograms for each boosted classifier. Boost_DetailedMonitoring No False − Produce histograms for detailed boost-wise monitoring. Boost_Type No AdaBoost AdaBoost, Bagging, HighEdgeGauss, HighEdgeCoPara Boosting type for the classifiers. Boost_BaggedSampleFraction No 0.6 − Relative size of bagged event sample to original size of the data sample (used whenever bagging is used). Boost_MethodWeightType No ByError ByError, Average, ByROC, ByOverlap, LastMethod How to set the final weight of the boosted classifiers. Boost_RecalculateMVACut No True − Recalculate the classifier MVA Signallike cut at every boost iteration. Boost_AdaBoostBeta No 1 − The ADA boost parameter that sets the effect of every boost step on the events' weights. Boost_Transform No step step, linear, log, gauss Type of transform applied to every boosted method linear, log, step. Boost_RandomSeed No 0 − Seed for random number generator used for bagging. Configuration options for MVA method :. Configuration options reference for MVA method: RuleFit. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with neg",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:17514,Testability,log,log,17514,"weights are ignored in the training (but are included for testing and performance evaluation). Boost_Num No 100 − Number of times the classifier is boosted. Boost_MonitorMethod No True − Write monitoring histograms for each boosted classifier. Boost_DetailedMonitoring No False − Produce histograms for detailed boost-wise monitoring. Boost_Type No AdaBoost AdaBoost, Bagging, HighEdgeGauss, HighEdgeCoPara Boosting type for the classifiers. Boost_BaggedSampleFraction No 0.6 − Relative size of bagged event sample to original size of the data sample (used whenever bagging is used). Boost_MethodWeightType No ByError ByError, Average, ByROC, ByOverlap, LastMethod How to set the final weight of the boosted classifiers. Boost_RecalculateMVACut No True − Recalculate the classifier MVA Signallike cut at every boost iteration. Boost_AdaBoostBeta No 1 − The ADA boost parameter that sets the effect of every boost step on the events' weights. Boost_Transform No step step, linear, log, gauss Type of transform applied to every boosted method linear, log, step. Boost_RandomSeed No 0 − Seed for random number generator used for bagging. Configuration options for MVA method :. Configuration options reference for MVA method: RuleFit. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with neg",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:18529,Testability,test,testing,18529,"ry boosted method linear, log, step. Boost_RandomSeed No 0 − Seed for random number generator used for bagging. Configuration options for MVA method :. Configuration options reference for MVA method: RuleFit. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). GDTau No -1 − Gradient-directed (GD) path: default fit cut-off. GDTauPrec No 0.01 − GD path: precision of tau. GDStep No 0.01 − GD path: step size. GDNSteps No 10000 − GD path: number of steps. GDErrScale No 1.1 − Stop scan when error > scale*errmin. LinQuantile No 0.025 − Quantile of linear terms (removes outliers). GDPathEveFrac No 0.5 − Fraction of events used for the path search. GDValidEveFrac No 0.5 − Fraction of events used for the validation. fEventsMin No 0.1 − Minimum fraction of events in a splittable node. fEventsMax No 0.9 − Maximum fraction of events in a splittable node. nTrees No 20 − Number of trees in forest. ForestType No AdaBoost AdaBoost, Random Method to use for forest generation (AdaBoost or RandomForest). RuleMinDist No 0.001 − Minimum distance between rules. MinImp No 0.01 − Minimum rule importance accepted. Model No ModRuleLinear ModRule, ModRuleLinear, ModLinear Model to be used. Ru",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:20662,Testability,test,testing,20662,"ng dir. RFNrules No 2000 − RFF: Mximum number of rules. RFNendnodes No 4 − RFF: Average number of end nodes. Configuration options for MVA method :. Configuration options reference for MVA method: Likelihood. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). TransformOutput No False − Transform likelihood output by inverse sigmoid function. Configuration options for MVA method :. Configuration options reference for MVA method: MLP. Option Array Default value Predefined values Description. NCycles No 500 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden layer architecture. NeuronType No sigmoid − Neuron activation function type. RandomSeed No 1 − Random seed for initial synapse weights (0 means unique seed for each run; default value '1'). EstimatorType No MSE MSE, CE, linear, sigmoid, tanh, radial MSE (Mean Square Estimator) for Gaussian Likelihood or CE(Cross-Entropy) for Bernoulli Likelihood. NeuronInputType No sum sum, sqsum, abssum Neuron input function type. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verb",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:22219,Testability,test,testing,22219,"eed for each run; default value '1'). EstimatorType No MSE MSE, CE, linear, sigmoid, tanh, radial MSE (Mean Square Estimator) for Gaussian Likelihood or CE(Cross-Entropy) for Bernoulli Likelihood. NeuronInputType No sum sum, sqsum, abssum Neuron input function type. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). TrainingMethod No BP BP, GA, BFGS Train with Back-Propagation (BP), BFGS Algorithm (BFGS), or Genetic Algorithm (GA - slower and worse). LearningRate No 0.02 − ANN learning rate parameter. DecayRate No 0.01 − Decay rate for learning parameter. TestRate No 10 − Test for overtraining performed at each #th epochs. EpochMonitoring No False − Provide epoch-wise monitoring plots according to TestRate (caution: causes big ROOT output file!). Sampling No 1 − Only 'Sampling' (randomly selected) events are trained each epoch. SamplingEpoch No 1 − Sampling is used for the first 'SamplingEpoch' epochs, afterwards, all events are taken for training. SamplingImportance No 1 − The sampling weights of events in epochs which successful (worse estimator than before) are multiplied with SamplingImportance, else they are divided. SamplingTraining No True − The training sample is sampled. SamplingTesting No False − The testing sa",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:22500,Testability,Test,TestRate,22500,"ne). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). TrainingMethod No BP BP, GA, BFGS Train with Back-Propagation (BP), BFGS Algorithm (BFGS), or Genetic Algorithm (GA - slower and worse). LearningRate No 0.02 − ANN learning rate parameter. DecayRate No 0.01 − Decay rate for learning parameter. TestRate No 10 − Test for overtraining performed at each #th epochs. EpochMonitoring No False − Provide epoch-wise monitoring plots according to TestRate (caution: causes big ROOT output file!). Sampling No 1 − Only 'Sampling' (randomly selected) events are trained each epoch. SamplingEpoch No 1 − Sampling is used for the first 'SamplingEpoch' epochs, afterwards, all events are taken for training. SamplingImportance No 1 − The sampling weights of events in epochs which successful (worse estimator than before) are multiplied with SamplingImportance, else they are divided. SamplingTraining No True − The training sample is sampled. SamplingTesting No False − The testing sample is sampled. ResetStep No 50 − How often BFGS should reset history. Tau No 3 − LineSearch size step. BPMode No sequential sequential, batch Back-propagation learning mode: sequential or batch. BatchSize No -1 − Batch size: number of events/batch, only set if in Batch Mode, -1 for BatchSize=number_of_events. ConvergenceImprove No 1e-30 − Minimum impro",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:22517,Testability,Test,Test,22517,"ne). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). TrainingMethod No BP BP, GA, BFGS Train with Back-Propagation (BP), BFGS Algorithm (BFGS), or Genetic Algorithm (GA - slower and worse). LearningRate No 0.02 − ANN learning rate parameter. DecayRate No 0.01 − Decay rate for learning parameter. TestRate No 10 − Test for overtraining performed at each #th epochs. EpochMonitoring No False − Provide epoch-wise monitoring plots according to TestRate (caution: causes big ROOT output file!). Sampling No 1 − Only 'Sampling' (randomly selected) events are trained each epoch. SamplingEpoch No 1 − Sampling is used for the first 'SamplingEpoch' epochs, afterwards, all events are taken for training. SamplingImportance No 1 − The sampling weights of events in epochs which successful (worse estimator than before) are multiplied with SamplingImportance, else they are divided. SamplingTraining No True − The training sample is sampled. SamplingTesting No False − The testing sample is sampled. ResetStep No 50 − How often BFGS should reset history. Tau No 3 − LineSearch size step. BPMode No sequential sequential, batch Back-propagation learning mode: sequential or batch. BatchSize No -1 − Batch size: number of events/batch, only set if in Batch Mode, -1 for BatchSize=number_of_events. ConvergenceImprove No 1e-30 − Minimum impro",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:22645,Testability,Test,TestRate,22645,"l. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). TrainingMethod No BP BP, GA, BFGS Train with Back-Propagation (BP), BFGS Algorithm (BFGS), or Genetic Algorithm (GA - slower and worse). LearningRate No 0.02 − ANN learning rate parameter. DecayRate No 0.01 − Decay rate for learning parameter. TestRate No 10 − Test for overtraining performed at each #th epochs. EpochMonitoring No False − Provide epoch-wise monitoring plots according to TestRate (caution: causes big ROOT output file!). Sampling No 1 − Only 'Sampling' (randomly selected) events are trained each epoch. SamplingEpoch No 1 − Sampling is used for the first 'SamplingEpoch' epochs, afterwards, all events are taken for training. SamplingImportance No 1 − The sampling weights of events in epochs which successful (worse estimator than before) are multiplied with SamplingImportance, else they are divided. SamplingTraining No True − The training sample is sampled. SamplingTesting No False − The testing sample is sampled. ResetStep No 50 − How often BFGS should reset history. Tau No 3 − LineSearch size step. BPMode No sequential sequential, batch Back-propagation learning mode: sequential or batch. BatchSize No -1 − Batch size: number of events/batch, only set if in Batch Mode, -1 for BatchSize=number_of_events. ConvergenceImprove No 1e-30 − Minimum improvement which counts as improvement (<0 means automatic convergence check is turned off). Converge",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:23168,Testability,test,testing,23168,"hts are ignored in the training (but are included for testing and performance evaluation). TrainingMethod No BP BP, GA, BFGS Train with Back-Propagation (BP), BFGS Algorithm (BFGS), or Genetic Algorithm (GA - slower and worse). LearningRate No 0.02 − ANN learning rate parameter. DecayRate No 0.01 − Decay rate for learning parameter. TestRate No 10 − Test for overtraining performed at each #th epochs. EpochMonitoring No False − Provide epoch-wise monitoring plots according to TestRate (caution: causes big ROOT output file!). Sampling No 1 − Only 'Sampling' (randomly selected) events are trained each epoch. SamplingEpoch No 1 − Sampling is used for the first 'SamplingEpoch' epochs, afterwards, all events are taken for training. SamplingImportance No 1 − The sampling weights of events in epochs which successful (worse estimator than before) are multiplied with SamplingImportance, else they are divided. SamplingTraining No True − The training sample is sampled. SamplingTesting No False − The testing sample is sampled. ResetStep No 50 − How often BFGS should reset history. Tau No 3 − LineSearch size step. BPMode No sequential sequential, batch Back-propagation learning mode: sequential or batch. BatchSize No -1 − Batch size: number of events/batch, only set if in Batch Mode, -1 for BatchSize=number_of_events. ConvergenceImprove No 1e-30 − Minimum improvement which counts as improvement (<0 means automatic convergence check is turned off). ConvergenceTests No -1 − Number of steps (without improvement) required for convergence (<0 means automatic convergence check is turned off). UseRegulator No False − Use regulator to avoid over-training. UpdateLimit No 10000 − Maximum times of regulator update. CalculateErrors No False − Calculates inverse Hessian matrix at the end of the training to be able to calculate the uncertainties of an MVA value. WeightRange No 1 − Take the events for the estimator calculations from small deviations from the desired value to large deviations on",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:25117,Testability,test,testing,25117,"stimator calculations from small deviations from the desired value to large deviations only over the weight range. Configuration options for MVA method :. Configuration options reference for MVA method: Cuts. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). FitMethod No GA GA, SA, MC, MCEvents, MINUIT, EventScan Minimisation Method (GA, SA, and MC are the primary methods to be used; the others have been introduced for testing purposes and are depreciated). EffMethod No EffSel EffSel, EffPDF Selection Method. CutRangeMin Yes -1 − Minimum of allowed cut range (set per variable). CutRangeMax Yes -1 − Maximum of allowed cut range (set per variable). VarProp Yes NotEnforced NotEnforced, FMax, FMin, FSmart Categorisation of cuts. Configuration options for MVA method :. Configuration options reference for MVA method: PDEFoam. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:25318,Testability,test,testing,25318,"eference for MVA method: Cuts. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). FitMethod No GA GA, SA, MC, MCEvents, MINUIT, EventScan Minimisation Method (GA, SA, and MC are the primary methods to be used; the others have been introduced for testing purposes and are depreciated). EffMethod No EffSel EffSel, EffPDF Selection Method. CutRangeMin Yes -1 − Minimum of allowed cut range (set per variable). CutRangeMax Yes -1 − Maximum of allowed cut range (set per variable). VarProp Yes NotEnforced NotEnforced, FMax, FMin, FSmart Categorisation of cuts. Configuration options for MVA method :. Configuration options reference for MVA method: PDEFoam. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes,",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:26559,Testability,test,testing,26559,"d cut range (set per variable). VarProp Yes NotEnforced NotEnforced, FMax, FMin, FSmart Categorisation of cuts. Configuration options for MVA method :. Configuration options reference for MVA method: PDEFoam. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). SigBgSeparate No False − Separate foams for signal and background. TailCut No 0.001 − Fraction of outlier events that are excluded from the foam in each dimension. VolFrac No 0.0666667 − Size of sampling box, used for density calculation during foam build-up (maximum value: 1.0 is equivalent to volume of entire foam). nActiveCells No 500 − Maximum number of active cells to be created by the foam. nSampl No 2000 − Number of generated MC events per cell. nBin No 5 − Number of bins in edge histograms. Compress No True − Compress foam output file. MultiTargetRegression No False − Do regression with multiple targets. Nmin No 100 − Number of events in cell required to split cell. MaxDepth No 0 − Maximum depth of cell tree (0=unlimited). FillFoamWithOrigWeights No False − Fill foam with original or boost weights. UseYesNoCell No False − Return -1 or 1 for bkg or signal like events. DTLogic No None None, GiniIndex, M",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:28683,Testability,test,testing,28683," No None None, Gauss, LinNeighbors Kernel type used. TargetSelection No Mean Mean, Mpv Target selection method. Configuration options for MVA method :. Configuration options reference for MVA method: TMlpANN. Option Array Default value Predefined values Description. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NCycles No 200 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden layer architecture (N stands for number of variables; any integers may also be used). ValidationFraction No 0.5 − Fraction of events in training tree used for cross validation. LearningMethod No Stochastic Stochastic, Batch, SteepestDescent, RibierePolak, FletcherReeves, BFGS Learning method. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Simulated Annealing (SA). Option Array Default value Predefined values Description. MaxCalls No 100000 − Maximum number of minimisation calls. InitialTemp No 1e+06 − Initial temperature. MinTemp No 1e-06 − Mimimum temperature. Eps No 1e-10 − Epsilon. TempScale No 1 − Temperature scale. AdaptiveSpeed No 1 − Adaptive speed. TempAdaptiveStep No 0.009875 − Step made in each generation temperature adaptive. UseDefaultSca",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:29843,Testability,Log,Log,29843,"for number of variables; any integers may also be used). ValidationFraction No 0.5 − Fraction of events in training tree used for cross validation. LearningMethod No Stochastic Stochastic, Batch, SteepestDescent, RibierePolak, FletcherReeves, BFGS Learning method. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Simulated Annealing (SA). Option Array Default value Predefined values Description. MaxCalls No 100000 − Maximum number of minimisation calls. InitialTemp No 1e+06 − Initial temperature. MinTemp No 1e-06 − Mimimum temperature. Eps No 1e-10 − Epsilon. TempScale No 1 − Temperature scale. AdaptiveSpeed No 1 − Adaptive speed. TempAdaptiveStep No 0.009875 − Step made in each generation temperature adaptive. UseDefaultScale No False − Use default temperature scale for temperature minimisation algorithm. UseDefaultTemp No False − Use default initial temperature. KernelTemp No IncAdaptive IncAdaptive, DecAdaptive, Sqrt, Log, Sin, Homo, Geo Temperature minimisation algorithm. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Monte Carlo sampling (MC). Option Array Default value Predefined values Description. SampleSize No 100000 − Number of Monte Carlo events in toy sample. Sigma No -1 − If > 0: new points are generated according to Gauss around best value and with Sigma in units of interval length. Seed No 100 − Seed for the random generator (0 takes random seeds). Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: TMinuit (MT). Option Array Default value Predefined values Description. ErrorLevel No 1 − TMinuit: error level: 0.5=logL fit, 1=chi-squared fit. PrintLevel No -1 − TMinuit: output level: -1=least, 0, +1=all garbage. FitStrategy No 2 − TMinuit: fit strategy: 2=best. PrintWarnings No False − TMinuit: suppress warnings. UseImprove No True − TMinuit: use IMPROVE",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:30597,Testability,log,logL,30597,"perature adaptive. UseDefaultScale No False − Use default temperature scale for temperature minimisation algorithm. UseDefaultTemp No False − Use default initial temperature. KernelTemp No IncAdaptive IncAdaptive, DecAdaptive, Sqrt, Log, Sin, Homo, Geo Temperature minimisation algorithm. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Monte Carlo sampling (MC). Option Array Default value Predefined values Description. SampleSize No 100000 − Number of Monte Carlo events in toy sample. Sigma No -1 − If > 0: new points are generated according to Gauss around best value and with Sigma in units of interval length. Seed No 100 − Seed for the random generator (0 takes random seeds). Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: TMinuit (MT). Option Array Default value Predefined values Description. ErrorLevel No 1 − TMinuit: error level: 0.5=logL fit, 1=chi-squared fit. PrintLevel No -1 − TMinuit: output level: -1=least, 0, +1=all garbage. FitStrategy No 2 − TMinuit: fit strategy: 2=best. PrintWarnings No False − TMinuit: suppress warnings. UseImprove No True − TMinuit: use IMPROVE. UseMinos No True − TMinuit: use MINOS. SetBatch No False − TMinuit: use batch mode. MaxCalls No 1000 − TMinuit: approximate maximum number of function calls. Tolerance No 0.1 − TMinuit: tolerance to the function value at the minimum. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Genetic Algorithm (GA). Option Array Default value Predefined values Description. PopSize No 300 − Population size for GA. Steps No 40 − Number of steps for convergence. Cycles No 3 − Independent cycles of GA fitting. SC_steps No 10 − Spread control, steps. SC_rate No 5 − Spread control, rate: factor is changed depending on the rate. SC_factor No 0.95 − Spread control, factor. ConvCrit No 0.001 − Convergence crit",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:32390,Testability,test,testing,32390,"es No 3 − Independent cycles of GA fitting. SC_steps No 10 − Spread control, steps. SC_rate No 5 − Spread control, rate: factor is changed depending on the rate. SC_factor No 0.95 − Spread control, factor. ConvCrit No 0.001 − Convergence criteria. SaveBestGen No 1 − Saves the best n results from each generation. They are included in the last cycle. SaveBestCycle No 10 − Saves the best n results from each cycle. They are included in the last cycle. The value should be set to at least 1.0. Trim No False − Trim the population to PopSize after assessing the fitness of each individual. Seed No 100 − Set seed of random generator (0 gives random seeds). Configuration options given in the ""PrepareForTrainingAndTesting"" call; these options define the creation of the data sets used for training and expert validation by TMVA :. Configuration options reference for class: DataSetFactory. Option Array Default value Predefined values Description. SplitMode No Random Random, Alternate, Block Method of picking training and testing events (default: random). MixMode No SameAsSplitMode SameAsSplitMode, Random, Alternate, Block Method of mixing events of differnt classes into one dataset (default: SameAsSplitMode). SplitSeed No 100 − Seed for random event shuffling. NormMode No EqualNumEvents None, NumEvents, EqualNumEvents Overall renormalisation of event-by-event weights used in the training (NumEvents: average weight of 1 per event, independently for signal and background; EqualNumEvents: average weight of 1 per event for signal, and sum of weights for background equal to sum of weights for signal). nTrain_Signal No 0 − Number of training events of class Signal (default: 0 = all). nTest_Signal No 0 − Number of test events of class Signal (default: 0 = all). nTrain_Background No 0 − Number of training events of class Background (default: 0 = all). nTest_Background No 0 − Number of test events of class Background (default: 0 = all). V No False − Verbosity (default: true). VerboseLevel ",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:33090,Testability,test,test,33090,"se options define the creation of the data sets used for training and expert validation by TMVA :. Configuration options reference for class: DataSetFactory. Option Array Default value Predefined values Description. SplitMode No Random Random, Alternate, Block Method of picking training and testing events (default: random). MixMode No SameAsSplitMode SameAsSplitMode, Random, Alternate, Block Method of mixing events of differnt classes into one dataset (default: SameAsSplitMode). SplitSeed No 100 − Seed for random event shuffling. NormMode No EqualNumEvents None, NumEvents, EqualNumEvents Overall renormalisation of event-by-event weights used in the training (NumEvents: average weight of 1 per event, independently for signal and background; EqualNumEvents: average weight of 1 per event for signal, and sum of weights for background equal to sum of weights for signal). nTrain_Signal No 0 − Number of training events of class Signal (default: 0 = all). nTest_Signal No 0 − Number of test events of class Signal (default: 0 = all). nTrain_Background No 0 − Number of training events of class Background (default: 0 = all). nTest_Background No 0 − Number of test events of class Background (default: 0 = all). V No False − Verbosity (default: true). VerboseLevel No Info Debug, Verbose, Info VerboseLevel (Debug/Verbose/Info). Configuration options for the PDF class :. Configuration options reference for class: PDF. Option Array Default value Predefined values Description. NSmooth No 0 − Number of smoothing iterations for the input histograms. MinNSmooth No -1 − Min number of smoothing iterations, for bins with most data. MaxNSmooth No -1 − Max number of smoothing iterations, for bins with least data. NAvEvtPerBin No 50 − Average number of events per PDF bin. Nbins No 0 − Defined number of bins for the histogram from which the PDF is created. CheckHist No False − Whether or not to check the source histogram of the PDF. PDFInterpol No Spline2 Spline0, Spline1, Spline2, Spline3, Spl",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:33263,Testability,test,test,33263,"fault value Predefined values Description. SplitMode No Random Random, Alternate, Block Method of picking training and testing events (default: random). MixMode No SameAsSplitMode SameAsSplitMode, Random, Alternate, Block Method of mixing events of differnt classes into one dataset (default: SameAsSplitMode). SplitSeed No 100 − Seed for random event shuffling. NormMode No EqualNumEvents None, NumEvents, EqualNumEvents Overall renormalisation of event-by-event weights used in the training (NumEvents: average weight of 1 per event, independently for signal and background; EqualNumEvents: average weight of 1 per event for signal, and sum of weights for background equal to sum of weights for signal). nTrain_Signal No 0 − Number of training events of class Signal (default: 0 = all). nTest_Signal No 0 − Number of test events of class Signal (default: 0 = all). nTrain_Background No 0 − Number of training events of class Background (default: 0 = all). nTest_Background No 0 − Number of test events of class Background (default: 0 = all). V No False − Verbosity (default: true). VerboseLevel No Info Debug, Verbose, Info VerboseLevel (Debug/Verbose/Info). Configuration options for the PDF class :. Configuration options reference for class: PDF. Option Array Default value Predefined values Description. NSmooth No 0 − Number of smoothing iterations for the input histograms. MinNSmooth No -1 − Min number of smoothing iterations, for bins with most data. MaxNSmooth No -1 − Max number of smoothing iterations, for bins with least data. NAvEvtPerBin No 50 − Average number of events per PDF bin. Nbins No 0 − Defined number of bins for the histogram from which the PDF is created. CheckHist No False − Whether or not to check the source histogram of the PDF. PDFInterpol No Spline2 Spline0, Spline1, Spline2, Spline3, Spline5, KDE Interpolation method for reference histograms (e.g. Spline2 or KDE). KDEtype No Gauss Gauss KDE kernel type (1=Gauss). KDEiter No Nonadaptive Nonadaptive, Adaptive",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:34874,Testability,test,test,34874,"r class: PDF. Option Array Default value Predefined values Description. NSmooth No 0 − Number of smoothing iterations for the input histograms. MinNSmooth No -1 − Min number of smoothing iterations, for bins with most data. MaxNSmooth No -1 − Max number of smoothing iterations, for bins with least data. NAvEvtPerBin No 50 − Average number of events per PDF bin. Nbins No 0 − Defined number of bins for the histogram from which the PDF is created. CheckHist No False − Whether or not to check the source histogram of the PDF. PDFInterpol No Spline2 Spline0, Spline1, Spline2, Spline3, Spline5, KDE Interpolation method for reference histograms (e.g. Spline2 or KDE). KDEtype No Gauss Gauss KDE kernel type (1=Gauss). KDEiter No Nonadaptive Nonadaptive, Adaptive Number of iterations (1=non-adaptive, 2=adaptive). KDEFineFactor No 1 − Fine tuning factor for Adaptive KDE: Factor to multyply the width of the kernel. KDEborder No None None, Renorm, Mirror Border effects treatment (1=no treatment , 2=kernel renormalization, 3=sample mirroring). Configuration options for Factory running :. Configuration options reference for class: Factory. Option Array Default value Predefined values Description. V No False − Verbose flag. Color No True − Flag for coloured screen output (default: True, if in batch mode: False). Transformations No − List of transformations to test; formatting example: Transformations=I;D;P;U;G,D, for identity, decorrelation, PCA, Uniform and Gaussianisation followed by decorrelation transformations. Silent No False − Batch mode: boolean silent flag inhibiting any output from TMVA after the creation of the factory class object (default: False). DrawProgressBar No True − Draw progress bar to display training, testing and evaluation schedule (default: True). AnalysisType No Auto Classification, Regression, Multiclass, Auto Set the analysis type (Classification, Regression, Multiclass, Auto) (default: Auto). Page created on Mon Jul 29 00:06:19 2013 (© TMVA, 2006−2009). ",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:35246,Testability,test,testing,35246,"r class: PDF. Option Array Default value Predefined values Description. NSmooth No 0 − Number of smoothing iterations for the input histograms. MinNSmooth No -1 − Min number of smoothing iterations, for bins with most data. MaxNSmooth No -1 − Max number of smoothing iterations, for bins with least data. NAvEvtPerBin No 50 − Average number of events per PDF bin. Nbins No 0 − Defined number of bins for the histogram from which the PDF is created. CheckHist No False − Whether or not to check the source histogram of the PDF. PDFInterpol No Spline2 Spline0, Spline1, Spline2, Spline3, Spline5, KDE Interpolation method for reference histograms (e.g. Spline2 or KDE). KDEtype No Gauss Gauss KDE kernel type (1=Gauss). KDEiter No Nonadaptive Nonadaptive, Adaptive Number of iterations (1=non-adaptive, 2=adaptive). KDEFineFactor No 1 − Fine tuning factor for Adaptive KDE: Factor to multyply the width of the kernel. KDEborder No None None, Renorm, Mirror Border effects treatment (1=no treatment , 2=kernel renormalization, 3=sample mirroring). Configuration options for Factory running :. Configuration options reference for class: Factory. Option Array Default value Predefined values Description. V No False − Verbose flag. Color No True − Flag for coloured screen output (default: True, if in batch mode: False). Transformations No − List of transformations to test; formatting example: Transformations=I;D;P;U;G,D, for identity, decorrelation, PCA, Uniform and Gaussianisation followed by decorrelation transformations. Silent No False − Batch mode: boolean silent flag inhibiting any output from TMVA after the creation of the factory class object (default: False). DrawProgressBar No True − Draw progress bar to display training, testing and evaluation schedule (default: True). AnalysisType No Auto Classification, Regression, Multiclass, Auto Set the analysis type (Classification, Regression, Multiclass, Auto) (default: Auto). Page created on Mon Jul 29 00:06:19 2013 (© TMVA, 2006−2009). ",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:12569,Usability,Learn,Learning,12569,". H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NTrees No 800 − Number of trees in the forest. MaxDepth No 3 − Max depth of the decision tree allowed. MinNodeSize No 5% − Minimum percentage of training events required in a leaf node (default: Classification: 5%, Regression: 0.2%). nCuts No 20 − Number of grid points in variable range used in finding optimal cut in node splitting. BoostType No AdaBoost AdaBoost, RealAdaBoost, Bagging, AdaBoostR2, Grad Boosting type for the trees in the forest . AdaBoostR2Loss No Quadratic Linear, Quadratic, Exponential Type of Loss function in AdaBoostR2. UseBaggedGrad No False − Use only a random subsample of all events for growing the trees in each iteration. (Only valid for GradBoost). Shrinkage No 1 − Learning rate for GradBoost algorithm. AdaBoostBeta No 0.5 − Learning rate for AdaBoost algorithm. UseRandomisedTrees No False − Determine at each node splitting the cut variable only as the best out of a random subset of variables (like in RandomForests). UseNvars No 2 − Size of the subset of variables used with RandomisedTree option. UsePoissonNvars No True − Interpret UseNvars not as fixed number but as mean of a Possion distribution in each split with RandomisedTree option. BaggedSampleFraction No 0.6 − Relative size of bagged event sample to original size of the data sample (used whenever bagging is used (i.e. UseBaggedGrad, Bagging,). UseYesNoLeaf No True − Use Sig or Bkg categories, or the purity=S/(S+B) as classification of the leaf node -> Real-AdaBoost. NegWeightTreatment No InverseBoostNegWeights InverseBoostNegWeights, IgnoreNegWeightsInTraining, PairNegWeightsGlobal, Pray How to treat events with negative weights in the BDT training (particular the boosting) : IgnoreInTraining; Boos",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:12630,Usability,Learn,Learning,12630," False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NTrees No 800 − Number of trees in the forest. MaxDepth No 3 − Max depth of the decision tree allowed. MinNodeSize No 5% − Minimum percentage of training events required in a leaf node (default: Classification: 5%, Regression: 0.2%). nCuts No 20 − Number of grid points in variable range used in finding optimal cut in node splitting. BoostType No AdaBoost AdaBoost, RealAdaBoost, Bagging, AdaBoostR2, Grad Boosting type for the trees in the forest . AdaBoostR2Loss No Quadratic Linear, Quadratic, Exponential Type of Loss function in AdaBoostR2. UseBaggedGrad No False − Use only a random subsample of all events for growing the trees in each iteration. (Only valid for GradBoost). Shrinkage No 1 − Learning rate for GradBoost algorithm. AdaBoostBeta No 0.5 − Learning rate for AdaBoost algorithm. UseRandomisedTrees No False − Determine at each node splitting the cut variable only as the best out of a random subset of variables (like in RandomForests). UseNvars No 2 − Size of the subset of variables used with RandomisedTree option. UsePoissonNvars No True − Interpret UseNvars not as fixed number but as mean of a Possion distribution in each split with RandomisedTree option. BaggedSampleFraction No 0.6 − Relative size of bagged event sample to original size of the data sample (used whenever bagging is used (i.e. UseBaggedGrad, Bagging,). UseYesNoLeaf No True − Use Sig or Bkg categories, or the purity=S/(S+B) as classification of the leaf node -> Real-AdaBoost. NegWeightTreatment No InverseBoostNegWeights InverseBoostNegWeights, IgnoreNegWeightsInTraining, PairNegWeightsGlobal, Pray How to treat events with negative weights in the BDT training (particular the boosting) : IgnoreInTraining; Boost With inverse boostweight; Pair events with negative and positive w",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:22393,Usability,Learn,LearningRate,22393,", sqsum, abssum Neuron input function type. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). TrainingMethod No BP BP, GA, BFGS Train with Back-Propagation (BP), BFGS Algorithm (BFGS), or Genetic Algorithm (GA - slower and worse). LearningRate No 0.02 − ANN learning rate parameter. DecayRate No 0.01 − Decay rate for learning parameter. TestRate No 10 − Test for overtraining performed at each #th epochs. EpochMonitoring No False − Provide epoch-wise monitoring plots according to TestRate (caution: causes big ROOT output file!). Sampling No 1 − Only 'Sampling' (randomly selected) events are trained each epoch. SamplingEpoch No 1 − Sampling is used for the first 'SamplingEpoch' epochs, afterwards, all events are taken for training. SamplingImportance No 1 − The sampling weights of events in epochs which successful (worse estimator than before) are multiplied with SamplingImportance, else they are divided. SamplingTraining No True − The training sample is sampled. SamplingTesting No False − The testing sample is sampled. ResetStep No 50 − How often BFGS should reset history. Tau No 3 − LineSearch size step. BPMode No sequential sequential, batch Back-propagation learning mode: sequential or batch. BatchSize No -1 − Batch siz",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:22420,Usability,learn,learning,22420,"ut function type. V No False − Verbose output (short form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). TrainingMethod No BP BP, GA, BFGS Train with Back-Propagation (BP), BFGS Algorithm (BFGS), or Genetic Algorithm (GA - slower and worse). LearningRate No 0.02 − ANN learning rate parameter. DecayRate No 0.01 − Decay rate for learning parameter. TestRate No 10 − Test for overtraining performed at each #th epochs. EpochMonitoring No False − Provide epoch-wise monitoring plots according to TestRate (caution: causes big ROOT output file!). Sampling No 1 − Only 'Sampling' (randomly selected) events are trained each epoch. SamplingEpoch No 1 − Sampling is used for the first 'SamplingEpoch' epochs, afterwards, all events are taken for training. SamplingImportance No 1 − The sampling weights of events in epochs which successful (worse estimator than before) are multiplied with SamplingImportance, else they are divided. SamplingTraining No True − The training sample is sampled. SamplingTesting No False − The testing sample is sampled. ResetStep No 50 − How often BFGS should reset history. Tau No 3 − LineSearch size step. BPMode No sequential sequential, batch Back-propagation learning mode: sequential or batch. BatchSize No -1 − Batch size: number of events/batch,",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:22480,Usability,learn,learning,22480," form of VerbosityLevel below - overrides the latter one). VerbosityLevel No Default Default, Debug, Verbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). TrainingMethod No BP BP, GA, BFGS Train with Back-Propagation (BP), BFGS Algorithm (BFGS), or Genetic Algorithm (GA - slower and worse). LearningRate No 0.02 − ANN learning rate parameter. DecayRate No 0.01 − Decay rate for learning parameter. TestRate No 10 − Test for overtraining performed at each #th epochs. EpochMonitoring No False − Provide epoch-wise monitoring plots according to TestRate (caution: causes big ROOT output file!). Sampling No 1 − Only 'Sampling' (randomly selected) events are trained each epoch. SamplingEpoch No 1 − Sampling is used for the first 'SamplingEpoch' epochs, afterwards, all events are taken for training. SamplingImportance No 1 − The sampling weights of events in epochs which successful (worse estimator than before) are multiplied with SamplingImportance, else they are divided. SamplingTraining No True − The training sample is sampled. SamplingTesting No False − The testing sample is sampled. ResetStep No 50 − How often BFGS should reset history. Tau No 3 − LineSearch size step. BPMode No sequential sequential, batch Back-propagation learning mode: sequential or batch. BatchSize No -1 − Batch size: number of events/batch, only set if in Batch Mode, -1 for BatchSize=number_",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:23339,Usability,learn,learning,23339," Algorithm (BFGS), or Genetic Algorithm (GA - slower and worse). LearningRate No 0.02 − ANN learning rate parameter. DecayRate No 0.01 − Decay rate for learning parameter. TestRate No 10 − Test for overtraining performed at each #th epochs. EpochMonitoring No False − Provide epoch-wise monitoring plots according to TestRate (caution: causes big ROOT output file!). Sampling No 1 − Only 'Sampling' (randomly selected) events are trained each epoch. SamplingEpoch No 1 − Sampling is used for the first 'SamplingEpoch' epochs, afterwards, all events are taken for training. SamplingImportance No 1 − The sampling weights of events in epochs which successful (worse estimator than before) are multiplied with SamplingImportance, else they are divided. SamplingTraining No True − The training sample is sampled. SamplingTesting No False − The testing sample is sampled. ResetStep No 50 − How often BFGS should reset history. Tau No 3 − LineSearch size step. BPMode No sequential sequential, batch Back-propagation learning mode: sequential or batch. BatchSize No -1 − Batch size: number of events/batch, only set if in Batch Mode, -1 for BatchSize=number_of_events. ConvergenceImprove No 1e-30 − Minimum improvement which counts as improvement (<0 means automatic convergence check is turned off). ConvergenceTests No -1 − Number of steps (without improvement) required for convergence (<0 means automatic convergence check is turned off). UseRegulator No False − Use regulator to avoid over-training. UpdateLimit No 10000 − Maximum times of regulator update. CalculateErrors No False − Calculates inverse Hessian matrix at the end of the training to be able to calculate the uncertainties of an MVA value. WeightRange No 1 − Take the events for the estimator calculations from small deviations from the desired value to large deviations only over the weight range. Configuration options for MVA method :. Configuration options reference for MVA method: Cuts. Option Array Default value Predefined value",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:28989,Usability,Learn,LearningMethod,28989,"rbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NCycles No 200 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden layer architecture (N stands for number of variables; any integers may also be used). ValidationFraction No 0.5 − Fraction of events in training tree used for cross validation. LearningMethod No Stochastic Stochastic, Batch, SteepestDescent, RibierePolak, FletcherReeves, BFGS Learning method. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Simulated Annealing (SA). Option Array Default value Predefined values Description. MaxCalls No 100000 − Maximum number of minimisation calls. InitialTemp No 1e+06 − Initial temperature. MinTemp No 1e-06 − Mimimum temperature. Eps No 1e-10 − Epsilon. TempScale No 1 − Temperature scale. AdaptiveSpeed No 1 − Adaptive speed. TempAdaptiveStep No 0.009875 − Step made in each generation temperature adaptive. UseDefaultScale No False − Use default temperature scale for temperature minimisation algorithm. UseDefaultTemp No False − Use default initial temperature. KernelTemp No IncAdaptive IncAdaptive, DecAdaptive, Sqrt, Log, Sin, Homo, Geo Temperature minimisation algorithm. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Monte Carlo sampling (MC). Opti",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:29089,Usability,Learn,Learning,29089,"rbose, Info, Warning, Error, Fatal Verbosity level. VarTransform No None − List of variable transformations performed before training, e.g., D_Background,P_Signal,G,N_AllClasses for: Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed). H No False − Print method-specific help message. CreateMVAPdfs No False − Create PDFs for classifier outputs (signal and background). IgnoreNegWeightsInTraining No False − Events with negative weights are ignored in the training (but are included for testing and performance evaluation). NCycles No 200 − Number of training cycles. HiddenLayers No N,N-1 − Specification of hidden layer architecture (N stands for number of variables; any integers may also be used). ValidationFraction No 0.5 − Fraction of events in training tree used for cross validation. LearningMethod No Stochastic Stochastic, Batch, SteepestDescent, RibierePolak, FletcherReeves, BFGS Learning method. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Simulated Annealing (SA). Option Array Default value Predefined values Description. MaxCalls No 100000 − Maximum number of minimisation calls. InitialTemp No 1e+06 − Initial temperature. MinTemp No 1e-06 − Mimimum temperature. Eps No 1e-10 − Epsilon. TempScale No 1 − Temperature scale. AdaptiveSpeed No 1 − Adaptive speed. TempAdaptiveStep No 0.009875 − Step made in each generation temperature adaptive. UseDefaultScale No False − Use default temperature scale for temperature minimisation algorithm. UseDefaultTemp No False − Use default initial temperature. KernelTemp No IncAdaptive IncAdaptive, DecAdaptive, Sqrt, Log, Sin, Homo, Geo Temperature minimisation algorithm. Configuration options for setup and tuning of specific fitter :. Configuration options reference for fitting method: Monte Carlo sampling (MC). Opti",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html:35212,Usability,progress bar,progress bar,35212,"r class: PDF. Option Array Default value Predefined values Description. NSmooth No 0 − Number of smoothing iterations for the input histograms. MinNSmooth No -1 − Min number of smoothing iterations, for bins with most data. MaxNSmooth No -1 − Max number of smoothing iterations, for bins with least data. NAvEvtPerBin No 50 − Average number of events per PDF bin. Nbins No 0 − Defined number of bins for the histogram from which the PDF is created. CheckHist No False − Whether or not to check the source histogram of the PDF. PDFInterpol No Spline2 Spline0, Spline1, Spline2, Spline3, Spline5, KDE Interpolation method for reference histograms (e.g. Spline2 or KDE). KDEtype No Gauss Gauss KDE kernel type (1=Gauss). KDEiter No Nonadaptive Nonadaptive, Adaptive Number of iterations (1=non-adaptive, 2=adaptive). KDEFineFactor No 1 − Fine tuning factor for Adaptive KDE: Factor to multyply the width of the kernel. KDEborder No None None, Renorm, Mirror Border effects treatment (1=no treatment , 2=kernel renormalization, 3=sample mirroring). Configuration options for Factory running :. Configuration options reference for class: Factory. Option Array Default value Predefined values Description. V No False − Verbose flag. Color No True − Flag for coloured screen output (default: True, if in batch mode: False). Transformations No − List of transformations to test; formatting example: Transformations=I;D;P;U;G,D, for identity, decorrelation, PCA, Uniform and Gaussianisation followed by decorrelation transformations. Silent No False − Batch mode: boolean silent flag inhibiting any output from TMVA after the creation of the factory class object (default: False). DrawProgressBar No True − Draw progress bar to display training, testing and evaluation schedule (default: True). AnalysisType No Auto Classification, Regression, Multiclass, Auto Set the analysis type (Classification, Regression, Multiclass, Auto) (default: Auto). Page created on Mon Jul 29 00:06:19 2013 (© TMVA, 2006−2009). ",MatchSource.DOCS,documentation/tmva/UsersGuide/optionRef.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/tmva/UsersGuide/optionRef.html
https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html:1171,Availability,avail,available,1171,"y are; List of Modules; Modules' Library Dependencies. Class Reference. Sections; Link Box; Info Box; List of Data and Function Members. Display Options; Access (public / protected / private); Inheritance. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Member Function Documentation. Parts of the Reference Guide; Type Index; All basic types and typedefs are documented in the Type Index. Class Index; All classes and namespaces are listed alphabetically in the Class Index,; along with a short info of what they are used for.; You can jump to a class's entry using the shortcuts ontop of the page.; They are optimized for quick access: they are distributed evenly, and short.; Classes are grouped in modules; these, too, are listed ontop of the list of classes. Inheritance; All classes along with their derived and base classes are shown in the; Class Hierarchy.; The documentation for each class also shows the inheritance diagram.; The class hierarchy is meant to give an overview of available classes; and their relations. Modules; What they are; Classes are grouped into modules. For ROOT, this is done on a per-directory basis:; each module corresponds to a sub-directory. In other cases one module might represent; one library. Either way, modules are meant to combine similar or related classes,; allowing users to find classes close by context. If you need some functionality that; you cannot find in a class you know, you might want to check for classes in the same; module - maybe one of them does what you need. List of Modules; Modules are listed ontop of the Class Index and as part; of the Library Dependencies Chart. Modules' Library Dependencies; Each module is assumed to be part of a library. The dependencies of libraries are; not only relevant for linking, but often reflect also the contextual dependencies.; The dependencies of all modules are shown in the; Library Dependencies Chart. Class Reference; Pages like the one for TH2 are; class references. They",MatchSource.DOCS,etc/html/HELP.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html
https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html:2477,Availability,avail,available,2477,"nd classes close by context. If you need some functionality that; you cannot find in a class you know, you might want to check for classes in the same; module - maybe one of them does what you need. List of Modules; Modules are listed ontop of the Class Index and as part; of the Library Dependencies Chart. Modules' Library Dependencies; Each module is assumed to be part of a library. The dependencies of libraries are; not only relevant for linking, but often reflect also the contextual dependencies.; The dependencies of all modules are shown in the; Library Dependencies Chart. Class Reference; Pages like the one for TH2 are; class references. They document the use and functionality of a class. Sections; Each class reference page has a class documentation, which documents what the class; can be used for, and gives hints on how to use it. This allows you to figure out; whether a certain class is appropriate for what you try to do. The page then lists; all available members; they define a class's functionality and its interaction with; your code. The next item is a tabbed set of charts, which allow you to study the; class's inheritance diagram, what members get inherited from where, and which members; are re-implemented, which files get indirectly included by including the class's; header, and which libraries this class depends on. The remainder of the page contains; the functions' documentation. And there is a little tool box floating around, which; gives you some display options and a link to this help page. We will now go through all these parts in detail. Link Box; On the top of the page you can find a list of links. The first line contains the current; ""location"", giving the home page, the module name, and the class name.; The second line links to generic pages, like ROOT's home page, the; Class Index, and the Class Hierarchy.; The last line allows you to jump to the sections of the current page and a colored; version of the class's header and source file. Info Box",MatchSource.DOCS,etc/html/HELP.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html
https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html:4755,Availability,avail,available,4755,"It also contains options that influence how; the list of members is displayed. you can show or hide non-public methods. If you; just want to use ROOT you should hide them - you cannot access protected or private; members anyway. And you can select whether member that are inherited from a base class; should be shown. Again, if you just want to use ROOT you should probably show them,; as you often want to use them whether they are defined in the current class or in one; of its base classes. Whatever you set these options to should be stored in a cookie,; so you will have the same setting next time you look at the class documentation. The two links in the bottom of the box get you to the top of the page and to this help; page. You can hide the info box by clicking on the little ""-"" in the top right corner; of the box, and show it again by clicking on the ""+"". List of Data and Function Members; The central part of a class are its members. Some are available to you; some; are hidden from you, because they are only meant to be used internally.; As an example, a class might allow you to set, access, and print its values, or store; them into a file.; Because methods should have reasonable names, often the method name itself is already; a hint on what it does.; If you want to get a TNamed's; name, you will immediately see TNamed::GetName() in its list of functions.; A click on this name will send you to the documentation for the method.; If you enabled the display of inherited members you will see; some members with a class name prefix. It tells you where this method has been defined.; Display Options; The info box contains options that influence how; the list of members is displayed: you can e.g. show or hide non-public methods. If you; just want to use ROOT you should hide them - you cannot access protected or private; members anyway. And you can select whether member that are inherited from a base class; should be shown. Again, if you just want to use ROOT you should proba",MatchSource.DOCS,etc/html/HELP.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html
https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html:6127,Availability,avail,available,6127,"ee TNamed::GetName() in its list of functions.; A click on this name will send you to the documentation for the method.; If you enabled the display of inherited members you will see; some members with a class name prefix. It tells you where this method has been defined.; Display Options; The info box contains options that influence how; the list of members is displayed: you can e.g. show or hide non-public methods. If you; just want to use ROOT you should hide them - you cannot access protected or private; members anyway. And you can select whether member that are inherited from a base class; should be shown. Again, if you just want to use ROOT you should probably show them,; as you often want to use them whether they are defined in the current class or in one; of its base classes. Whatever you set these options to should be stored in a cookie,; so you will have the same setting next time you look at the class documentation. Access (public / protected / private); Not all members are available to everyone (check any C++ introduction to learn why).; Public members have a green bar on their left, protected ones have a yellow one, and; private members are marked with a red bar. Of course you won't see any protected or; private members if you hide them in the display options. Inheritance; You can often access members of a class's base classes, just as if they are defined; in the derived class. A histogram,; for example, has a name, and you can access it using GetName() as defined in its base; class TNamed. If you want to see; all available members, and not just the ones defined in the current class, in the; display options. They will be prefixed with the name of; the class they are defined in. Class Charts; The class charts are shown in a tabbed box; click on the names ontop to select a tab. Inheritance; This chart shows the inheritance hierarchy for the current class. Arrows point to; base classes. You can click the classes to get to their reference page. Inherited Memb",MatchSource.DOCS,etc/html/HELP.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html
https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html:6680,Availability,avail,available,6680,"a base class; should be shown. Again, if you just want to use ROOT you should probably show them,; as you often want to use them whether they are defined in the current class or in one; of its base classes. Whatever you set these options to should be stored in a cookie,; so you will have the same setting next time you look at the class documentation. Access (public / protected / private); Not all members are available to everyone (check any C++ introduction to learn why).; Public members have a green bar on their left, protected ones have a yellow one, and; private members are marked with a red bar. Of course you won't see any protected or; private members if you hide them in the display options. Inheritance; You can often access members of a class's base classes, just as if they are defined; in the derived class. A histogram,; for example, has a name, and you can access it using GetName() as defined in its base; class TNamed. If you want to see; all available members, and not just the ones defined in the current class, in the; display options. They will be prefixed with the name of; the class they are defined in. Class Charts; The class charts are shown in a tabbed box; click on the names ontop to select a tab. Inheritance; This chart shows the inheritance hierarchy for the current class. Arrows point to; base classes. You can click the classes to get to their reference page. Inherited Members; The second chart shows a list of all members of all base classes. You can see at what; level they are defined or at what level they are defined. Members that are accessible; (public) have a green background, protected ones have a yellow background, and private; members have a red background. Members with a dark gray background are re-implemented; or hidden by a derived class. Includes; The Includes chart shows which files are indirectly included by including the class's; header. Most headers will #include some files, so by #including that header you also; #include the #inclu",MatchSource.DOCS,etc/html/HELP.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html
https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html:3589,Deployability,update,update,3589,"r code. The next item is a tabbed set of charts, which allow you to study the; class's inheritance diagram, what members get inherited from where, and which members; are re-implemented, which files get indirectly included by including the class's; header, and which libraries this class depends on. The remainder of the page contains; the functions' documentation. And there is a little tool box floating around, which; gives you some display options and a link to this help page. We will now go through all these parts in detail. Link Box; On the top of the page you can find a list of links. The first line contains the current; ""location"", giving the home page, the module name, and the class name.; The second line links to generic pages, like ROOT's home page, the; Class Index, and the Class Hierarchy.; The last line allows you to jump to the sections of the current page and a colored; version of the class's header and source file. Info Box; There is a little info box, usually floating on the right side of the page; (update your browser if it's not). It shows the name of the class you are currently; looking at, which library you have to link against to get access to the class, and; which header file you have to #include. It also contains options that influence how; the list of members is displayed. you can show or hide non-public methods. If you; just want to use ROOT you should hide them - you cannot access protected or private; members anyway. And you can select whether member that are inherited from a base class; should be shown. Again, if you just want to use ROOT you should probably show them,; as you often want to use them whether they are defined in the current class or in one; of its base classes. Whatever you set these options to should be stored in a cookie,; so you will have the same setting next time you look at the class documentation. The two links in the bottom of the box get you to the top of the page and to this help; page. You can hide the info box by cl",MatchSource.DOCS,etc/html/HELP.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html
https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html:8631,Deployability,update,update,8631," click on the names ontop to select a tab. Inheritance; This chart shows the inheritance hierarchy for the current class. Arrows point to; base classes. You can click the classes to get to their reference page. Inherited Members; The second chart shows a list of all members of all base classes. You can see at what; level they are defined or at what level they are defined. Members that are accessible; (public) have a green background, protected ones have a yellow background, and private; members have a red background. Members with a dark gray background are re-implemented; or hidden by a derived class. Includes; The Includes chart shows which files are indirectly included by including the class's; header. Most headers will #include some files, so by #including that header you also; #include the #included files, and so on. A illegible chart often means you should; read a bit on the C++ trick known as ""forward declaration"". Including too many headers; has some nasty consequences, like compile time, additional dependencies, etc. Libraries; Each class is assumed to be in a library. That library might depend on other libraries.; The fourth chart shows the dependencies of these libraries. You will need to link against; all of these if you write your own program. Member Function Documentation; Each function should be documented by the developer of the class. The documentation can; contain HTML, pictures, and example code. It should explain what the function does,; what it expects as parameters, what it returns, and what can make it fail. Short functions; can have their source displayed. You can click on the function name to jump to a; colored version of the function's source.  . Author: Axel Naumann; Last update: 2007-01-12; Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. This page has been hand crafted. If you have any comments or suggestions about the page layout send a mail to ROOT support, or contact the developers with any questions or problems regarding ROOT. ",MatchSource.DOCS,etc/html/HELP.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html
https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html:6215,Energy Efficiency,green,green,6215," enabled the display of inherited members you will see; some members with a class name prefix. It tells you where this method has been defined.; Display Options; The info box contains options that influence how; the list of members is displayed: you can e.g. show or hide non-public methods. If you; just want to use ROOT you should hide them - you cannot access protected or private; members anyway. And you can select whether member that are inherited from a base class; should be shown. Again, if you just want to use ROOT you should probably show them,; as you often want to use them whether they are defined in the current class or in one; of its base classes. Whatever you set these options to should be stored in a cookie,; so you will have the same setting next time you look at the class documentation. Access (public / protected / private); Not all members are available to everyone (check any C++ introduction to learn why).; Public members have a green bar on their left, protected ones have a yellow one, and; private members are marked with a red bar. Of course you won't see any protected or; private members if you hide them in the display options. Inheritance; You can often access members of a class's base classes, just as if they are defined; in the derived class. A histogram,; for example, has a name, and you can access it using GetName() as defined in its base; class TNamed. If you want to see; all available members, and not just the ones defined in the current class, in the; display options. They will be prefixed with the name of; the class they are defined in. Class Charts; The class charts are shown in a tabbed box; click on the names ontop to select a tab. Inheritance; This chart shows the inheritance hierarchy for the current class. Arrows point to; base classes. You can click the classes to get to their reference page. Inherited Members; The second chart shows a list of all members of all base classes. You can see at what; level they are defined or at what l",MatchSource.DOCS,etc/html/HELP.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html
https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html:7324,Energy Efficiency,green,green,7324,"otected or; private members if you hide them in the display options. Inheritance; You can often access members of a class's base classes, just as if they are defined; in the derived class. A histogram,; for example, has a name, and you can access it using GetName() as defined in its base; class TNamed. If you want to see; all available members, and not just the ones defined in the current class, in the; display options. They will be prefixed with the name of; the class they are defined in. Class Charts; The class charts are shown in a tabbed box; click on the names ontop to select a tab. Inheritance; This chart shows the inheritance hierarchy for the current class. Arrows point to; base classes. You can click the classes to get to their reference page. Inherited Members; The second chart shows a list of all members of all base classes. You can see at what; level they are defined or at what level they are defined. Members that are accessible; (public) have a green background, protected ones have a yellow background, and private; members have a red background. Members with a dark gray background are re-implemented; or hidden by a derived class. Includes; The Includes chart shows which files are indirectly included by including the class's; header. Most headers will #include some files, so by #including that header you also; #include the #included files, and so on. A illegible chart often means you should; read a bit on the C++ trick known as ""forward declaration"". Including too many headers; has some nasty consequences, like compile time, additional dependencies, etc. Libraries; Each class is assumed to be in a library. That library might depend on other libraries.; The fourth chart shows the dependencies of these libraries. You will need to link against; all of these if you write your own program. Member Function Documentation; Each function should be documented by the developer of the class. The documentation can; contain HTML, pictures, and example code. It should ",MatchSource.DOCS,etc/html/HELP.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html
https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html:204,Integrability,Depend,Dependencies,204,". Help for ROOT's Reference Guide. Help for ROOT's Reference Guide. Contents. Parts of the Reference Guide. Type Index; Class Index; Inheritance. Modules. What they are; List of Modules; Modules' Library Dependencies. Class Reference. Sections; Link Box; Info Box; List of Data and Function Members. Display Options; Access (public / protected / private); Inheritance. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Member Function Documentation. Parts of the Reference Guide; Type Index; All basic types and typedefs are documented in the Type Index. Class Index; All classes and namespaces are listed alphabetically in the Class Index,; along with a short info of what they are used for.; You can jump to a class's entry using the shortcuts ontop of the page.; They are optimized for quick access: they are distributed evenly, and short.; Classes are grouped in modules; these, too, are listed ontop of the list of classes. Inheritance; All classes along with their derived and base classes are shown in the; Class Hierarchy.; The documentation for each class also shows the inheritance diagram.; The class hierarchy is meant to give an overview of available classes; and their relations. Modules; What they are; Classes are grouped into modules. For ROOT, this is done on a per-directory basis:; each module corresponds to a sub-directory. In other cases one module might represent; one library. Either way, modules are meant to combine similar or related classes,; allowing users to find classes close by context. If you need some functionality that; you cannot find in a class you know, you might want to check for classes in the same; module - maybe one of them does what you need. List of Modules; Modules are listed ontop of the Class Index and as part; of the Library Dependencies Chart. Modules' Library Dependencies; Each module is assumed to be part of a library. The dependencies of libraries are; not only relevant for linking, but often reflect also the contextual d",MatchSource.DOCS,etc/html/HELP.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html
https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html:1797,Integrability,Depend,Dependencies,1797,"s ontop of the page.; They are optimized for quick access: they are distributed evenly, and short.; Classes are grouped in modules; these, too, are listed ontop of the list of classes. Inheritance; All classes along with their derived and base classes are shown in the; Class Hierarchy.; The documentation for each class also shows the inheritance diagram.; The class hierarchy is meant to give an overview of available classes; and their relations. Modules; What they are; Classes are grouped into modules. For ROOT, this is done on a per-directory basis:; each module corresponds to a sub-directory. In other cases one module might represent; one library. Either way, modules are meant to combine similar or related classes,; allowing users to find classes close by context. If you need some functionality that; you cannot find in a class you know, you might want to check for classes in the same; module - maybe one of them does what you need. List of Modules; Modules are listed ontop of the Class Index and as part; of the Library Dependencies Chart. Modules' Library Dependencies; Each module is assumed to be part of a library. The dependencies of libraries are; not only relevant for linking, but often reflect also the contextual dependencies.; The dependencies of all modules are shown in the; Library Dependencies Chart. Class Reference; Pages like the one for TH2 are; class references. They document the use and functionality of a class. Sections; Each class reference page has a class documentation, which documents what the class; can be used for, and gives hints on how to use it. This allows you to figure out; whether a certain class is appropriate for what you try to do. The page then lists; all available members; they define a class's functionality and its interaction with; your code. The next item is a tabbed set of charts, which allow you to study the; class's inheritance diagram, what members get inherited from where, and which members; are re-implemented, which files get",MatchSource.DOCS,etc/html/HELP.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html
https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html:1834,Integrability,Depend,Dependencies,1834,"ort.; Classes are grouped in modules; these, too, are listed ontop of the list of classes. Inheritance; All classes along with their derived and base classes are shown in the; Class Hierarchy.; The documentation for each class also shows the inheritance diagram.; The class hierarchy is meant to give an overview of available classes; and their relations. Modules; What they are; Classes are grouped into modules. For ROOT, this is done on a per-directory basis:; each module corresponds to a sub-directory. In other cases one module might represent; one library. Either way, modules are meant to combine similar or related classes,; allowing users to find classes close by context. If you need some functionality that; you cannot find in a class you know, you might want to check for classes in the same; module - maybe one of them does what you need. List of Modules; Modules are listed ontop of the Class Index and as part; of the Library Dependencies Chart. Modules' Library Dependencies; Each module is assumed to be part of a library. The dependencies of libraries are; not only relevant for linking, but often reflect also the contextual dependencies.; The dependencies of all modules are shown in the; Library Dependencies Chart. Class Reference; Pages like the one for TH2 are; class references. They document the use and functionality of a class. Sections; Each class reference page has a class documentation, which documents what the class; can be used for, and gives hints on how to use it. This allows you to figure out; whether a certain class is appropriate for what you try to do. The page then lists; all available members; they define a class's functionality and its interaction with; your code. The next item is a tabbed set of charts, which allow you to study the; class's inheritance diagram, what members get inherited from where, and which members; are re-implemented, which files get indirectly included by including the class's; header, and which libraries this class depends ",MatchSource.DOCS,etc/html/HELP.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html
https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html:1900,Integrability,depend,dependencies,1900,"nce; All classes along with their derived and base classes are shown in the; Class Hierarchy.; The documentation for each class also shows the inheritance diagram.; The class hierarchy is meant to give an overview of available classes; and their relations. Modules; What they are; Classes are grouped into modules. For ROOT, this is done on a per-directory basis:; each module corresponds to a sub-directory. In other cases one module might represent; one library. Either way, modules are meant to combine similar or related classes,; allowing users to find classes close by context. If you need some functionality that; you cannot find in a class you know, you might want to check for classes in the same; module - maybe one of them does what you need. List of Modules; Modules are listed ontop of the Class Index and as part; of the Library Dependencies Chart. Modules' Library Dependencies; Each module is assumed to be part of a library. The dependencies of libraries are; not only relevant for linking, but often reflect also the contextual dependencies.; The dependencies of all modules are shown in the; Library Dependencies Chart. Class Reference; Pages like the one for TH2 are; class references. They document the use and functionality of a class. Sections; Each class reference page has a class documentation, which documents what the class; can be used for, and gives hints on how to use it. This allows you to figure out; whether a certain class is appropriate for what you try to do. The page then lists; all available members; they define a class's functionality and its interaction with; your code. The next item is a tabbed set of charts, which allow you to study the; class's inheritance diagram, what members get inherited from where, and which members; are re-implemented, which files get indirectly included by including the class's; header, and which libraries this class depends on. The remainder of the page contains; the functions' documentation. And there is a little tool b",MatchSource.DOCS,etc/html/HELP.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html
https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html:2000,Integrability,depend,dependencies,2000,"nce; All classes along with their derived and base classes are shown in the; Class Hierarchy.; The documentation for each class also shows the inheritance diagram.; The class hierarchy is meant to give an overview of available classes; and their relations. Modules; What they are; Classes are grouped into modules. For ROOT, this is done on a per-directory basis:; each module corresponds to a sub-directory. In other cases one module might represent; one library. Either way, modules are meant to combine similar or related classes,; allowing users to find classes close by context. If you need some functionality that; you cannot find in a class you know, you might want to check for classes in the same; module - maybe one of them does what you need. List of Modules; Modules are listed ontop of the Class Index and as part; of the Library Dependencies Chart. Modules' Library Dependencies; Each module is assumed to be part of a library. The dependencies of libraries are; not only relevant for linking, but often reflect also the contextual dependencies.; The dependencies of all modules are shown in the; Library Dependencies Chart. Class Reference; Pages like the one for TH2 are; class references. They document the use and functionality of a class. Sections; Each class reference page has a class documentation, which documents what the class; can be used for, and gives hints on how to use it. This allows you to figure out; whether a certain class is appropriate for what you try to do. The page then lists; all available members; they define a class's functionality and its interaction with; your code. The next item is a tabbed set of charts, which allow you to study the; class's inheritance diagram, what members get inherited from where, and which members; are re-implemented, which files get indirectly included by including the class's; header, and which libraries this class depends on. The remainder of the page contains; the functions' documentation. And there is a little tool b",MatchSource.DOCS,etc/html/HELP.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html
https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html:2019,Integrability,depend,dependencies,2019," documentation for each class also shows the inheritance diagram.; The class hierarchy is meant to give an overview of available classes; and their relations. Modules; What they are; Classes are grouped into modules. For ROOT, this is done on a per-directory basis:; each module corresponds to a sub-directory. In other cases one module might represent; one library. Either way, modules are meant to combine similar or related classes,; allowing users to find classes close by context. If you need some functionality that; you cannot find in a class you know, you might want to check for classes in the same; module - maybe one of them does what you need. List of Modules; Modules are listed ontop of the Class Index and as part; of the Library Dependencies Chart. Modules' Library Dependencies; Each module is assumed to be part of a library. The dependencies of libraries are; not only relevant for linking, but often reflect also the contextual dependencies.; The dependencies of all modules are shown in the; Library Dependencies Chart. Class Reference; Pages like the one for TH2 are; class references. They document the use and functionality of a class. Sections; Each class reference page has a class documentation, which documents what the class; can be used for, and gives hints on how to use it. This allows you to figure out; whether a certain class is appropriate for what you try to do. The page then lists; all available members; they define a class's functionality and its interaction with; your code. The next item is a tabbed set of charts, which allow you to study the; class's inheritance diagram, what members get inherited from where, and which members; are re-implemented, which files get indirectly included by including the class's; header, and which libraries this class depends on. The remainder of the page contains; the functions' documentation. And there is a little tool box floating around, which; gives you some display options and a link to this help page. We will now",MatchSource.DOCS,etc/html/HELP.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html
https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html:2073,Integrability,Depend,Dependencies,2073," documentation for each class also shows the inheritance diagram.; The class hierarchy is meant to give an overview of available classes; and their relations. Modules; What they are; Classes are grouped into modules. For ROOT, this is done on a per-directory basis:; each module corresponds to a sub-directory. In other cases one module might represent; one library. Either way, modules are meant to combine similar or related classes,; allowing users to find classes close by context. If you need some functionality that; you cannot find in a class you know, you might want to check for classes in the same; module - maybe one of them does what you need. List of Modules; Modules are listed ontop of the Class Index and as part; of the Library Dependencies Chart. Modules' Library Dependencies; Each module is assumed to be part of a library. The dependencies of libraries are; not only relevant for linking, but often reflect also the contextual dependencies.; The dependencies of all modules are shown in the; Library Dependencies Chart. Class Reference; Pages like the one for TH2 are; class references. They document the use and functionality of a class. Sections; Each class reference page has a class documentation, which documents what the class; can be used for, and gives hints on how to use it. This allows you to figure out; whether a certain class is appropriate for what you try to do. The page then lists; all available members; they define a class's functionality and its interaction with; your code. The next item is a tabbed set of charts, which allow you to study the; class's inheritance diagram, what members get inherited from where, and which members; are re-implemented, which files get indirectly included by including the class's; header, and which libraries this class depends on. The remainder of the page contains; the functions' documentation. And there is a little tool box floating around, which; gives you some display options and a link to this help page. We will now",MatchSource.DOCS,etc/html/HELP.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html
https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html:2848,Integrability,depend,depends,2848,"of Modules; Modules are listed ontop of the Class Index and as part; of the Library Dependencies Chart. Modules' Library Dependencies; Each module is assumed to be part of a library. The dependencies of libraries are; not only relevant for linking, but often reflect also the contextual dependencies.; The dependencies of all modules are shown in the; Library Dependencies Chart. Class Reference; Pages like the one for TH2 are; class references. They document the use and functionality of a class. Sections; Each class reference page has a class documentation, which documents what the class; can be used for, and gives hints on how to use it. This allows you to figure out; whether a certain class is appropriate for what you try to do. The page then lists; all available members; they define a class's functionality and its interaction with; your code. The next item is a tabbed set of charts, which allow you to study the; class's inheritance diagram, what members get inherited from where, and which members; are re-implemented, which files get indirectly included by including the class's; header, and which libraries this class depends on. The remainder of the page contains; the functions' documentation. And there is a little tool box floating around, which; gives you some display options and a link to this help page. We will now go through all these parts in detail. Link Box; On the top of the page you can find a list of links. The first line contains the current; ""location"", giving the home page, the module name, and the class name.; The second line links to generic pages, like ROOT's home page, the; Class Index, and the Class Hierarchy.; The last line allows you to jump to the sections of the current page and a colored; version of the class's header and source file. Info Box; There is a little info box, usually floating on the right side of the page; (update your browser if it's not). It shows the name of the class you are currently; looking at, which library you have to lin",MatchSource.DOCS,etc/html/HELP.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html
https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html:7926,Integrability,depend,dependencies,7926,"a tabbed box; click on the names ontop to select a tab. Inheritance; This chart shows the inheritance hierarchy for the current class. Arrows point to; base classes. You can click the classes to get to their reference page. Inherited Members; The second chart shows a list of all members of all base classes. You can see at what; level they are defined or at what level they are defined. Members that are accessible; (public) have a green background, protected ones have a yellow background, and private; members have a red background. Members with a dark gray background are re-implemented; or hidden by a derived class. Includes; The Includes chart shows which files are indirectly included by including the class's; header. Most headers will #include some files, so by #including that header you also; #include the #included files, and so on. A illegible chart often means you should; read a bit on the C++ trick known as ""forward declaration"". Including too many headers; has some nasty consequences, like compile time, additional dependencies, etc. Libraries; Each class is assumed to be in a library. That library might depend on other libraries.; The fourth chart shows the dependencies of these libraries. You will need to link against; all of these if you write your own program. Member Function Documentation; Each function should be documented by the developer of the class. The documentation can; contain HTML, pictures, and example code. It should explain what the function does,; what it expects as parameters, what it returns, and what can make it fail. Short functions; can have their source displayed. You can click on the function name to jump to a; colored version of the function's source.  . Author: Axel Naumann; Last update: 2007-01-12; Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. This page has been hand crafted. If you have any comments or suggestions about the page layout send a mail to ROOT support, or contact the developers with any questions or problems reg",MatchSource.DOCS,etc/html/HELP.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html
https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html:8017,Integrability,depend,depend,8017," click on the names ontop to select a tab. Inheritance; This chart shows the inheritance hierarchy for the current class. Arrows point to; base classes. You can click the classes to get to their reference page. Inherited Members; The second chart shows a list of all members of all base classes. You can see at what; level they are defined or at what level they are defined. Members that are accessible; (public) have a green background, protected ones have a yellow background, and private; members have a red background. Members with a dark gray background are re-implemented; or hidden by a derived class. Includes; The Includes chart shows which files are indirectly included by including the class's; header. Most headers will #include some files, so by #including that header you also; #include the #included files, and so on. A illegible chart often means you should; read a bit on the C++ trick known as ""forward declaration"". Including too many headers; has some nasty consequences, like compile time, additional dependencies, etc. Libraries; Each class is assumed to be in a library. That library might depend on other libraries.; The fourth chart shows the dependencies of these libraries. You will need to link against; all of these if you write your own program. Member Function Documentation; Each function should be documented by the developer of the class. The documentation can; contain HTML, pictures, and example code. It should explain what the function does,; what it expects as parameters, what it returns, and what can make it fail. Short functions; can have their source displayed. You can click on the function name to jump to a; colored version of the function's source.  . Author: Axel Naumann; Last update: 2007-01-12; Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. This page has been hand crafted. If you have any comments or suggestions about the page layout send a mail to ROOT support, or contact the developers with any questions or problems regarding ROOT. ",MatchSource.DOCS,etc/html/HELP.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html
https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html:8072,Integrability,depend,dependencies,8072," click on the names ontop to select a tab. Inheritance; This chart shows the inheritance hierarchy for the current class. Arrows point to; base classes. You can click the classes to get to their reference page. Inherited Members; The second chart shows a list of all members of all base classes. You can see at what; level they are defined or at what level they are defined. Members that are accessible; (public) have a green background, protected ones have a yellow background, and private; members have a red background. Members with a dark gray background are re-implemented; or hidden by a derived class. Includes; The Includes chart shows which files are indirectly included by including the class's; header. Most headers will #include some files, so by #including that header you also; #include the #included files, and so on. A illegible chart often means you should; read a bit on the C++ trick known as ""forward declaration"". Including too many headers; has some nasty consequences, like compile time, additional dependencies, etc. Libraries; Each class is assumed to be in a library. That library might depend on other libraries.; The fourth chart shows the dependencies of these libraries. You will need to link against; all of these if you write your own program. Member Function Documentation; Each function should be documented by the developer of the class. The documentation can; contain HTML, pictures, and example code. It should explain what the function does,; what it expects as parameters, what it returns, and what can make it fail. Short functions; can have their source displayed. You can click on the function name to jump to a; colored version of the function's source.  . Author: Axel Naumann; Last update: 2007-01-12; Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. This page has been hand crafted. If you have any comments or suggestions about the page layout send a mail to ROOT support, or contact the developers with any questions or problems regarding ROOT. ",MatchSource.DOCS,etc/html/HELP.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html
https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html:133,Modifiability,Inherit,Inheritance,133,". Help for ROOT's Reference Guide. Help for ROOT's Reference Guide. Contents. Parts of the Reference Guide. Type Index; Class Index; Inheritance. Modules. What they are; List of Modules; Modules' Library Dependencies. Class Reference. Sections; Link Box; Info Box; List of Data and Function Members. Display Options; Access (public / protected / private); Inheritance. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Member Function Documentation. Parts of the Reference Guide; Type Index; All basic types and typedefs are documented in the Type Index. Class Index; All classes and namespaces are listed alphabetically in the Class Index,; along with a short info of what they are used for.; You can jump to a class's entry using the shortcuts ontop of the page.; They are optimized for quick access: they are distributed evenly, and short.; Classes are grouped in modules; these, too, are listed ontop of the list of classes. Inheritance; All classes along with their derived and base classes are shown in the; Class Hierarchy.; The documentation for each class also shows the inheritance diagram.; The class hierarchy is meant to give an overview of available classes; and their relations. Modules; What they are; Classes are grouped into modules. For ROOT, this is done on a per-directory basis:; each module corresponds to a sub-directory. In other cases one module might represent; one library. Either way, modules are meant to combine similar or related classes,; allowing users to find classes close by context. If you need some functionality that; you cannot find in a class you know, you might want to check for classes in the same; module - maybe one of them does what you need. List of Modules; Modules are listed ontop of the Class Index and as part; of the Library Dependencies Chart. Modules' Library Dependencies; Each module is assumed to be part of a library. The dependencies of libraries are; not only relevant for linking, but often reflect also the contextual d",MatchSource.DOCS,etc/html/HELP.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html
https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html:356,Modifiability,Inherit,Inheritance,356,". Help for ROOT's Reference Guide. Help for ROOT's Reference Guide. Contents. Parts of the Reference Guide. Type Index; Class Index; Inheritance. Modules. What they are; List of Modules; Modules' Library Dependencies. Class Reference. Sections; Link Box; Info Box; List of Data and Function Members. Display Options; Access (public / protected / private); Inheritance. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Member Function Documentation. Parts of the Reference Guide; Type Index; All basic types and typedefs are documented in the Type Index. Class Index; All classes and namespaces are listed alphabetically in the Class Index,; along with a short info of what they are used for.; You can jump to a class's entry using the shortcuts ontop of the page.; They are optimized for quick access: they are distributed evenly, and short.; Classes are grouped in modules; these, too, are listed ontop of the list of classes. Inheritance; All classes along with their derived and base classes are shown in the; Class Hierarchy.; The documentation for each class also shows the inheritance diagram.; The class hierarchy is meant to give an overview of available classes; and their relations. Modules; What they are; Classes are grouped into modules. For ROOT, this is done on a per-directory basis:; each module corresponds to a sub-directory. In other cases one module might represent; one library. Either way, modules are meant to combine similar or related classes,; allowing users to find classes close by context. If you need some functionality that; you cannot find in a class you know, you might want to check for classes in the same; module - maybe one of them does what you need. List of Modules; Modules are listed ontop of the Class Index and as part; of the Library Dependencies Chart. Modules' Library Dependencies; Each module is assumed to be part of a library. The dependencies of libraries are; not only relevant for linking, but often reflect also the contextual d",MatchSource.DOCS,etc/html/HELP.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html
https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html:383,Modifiability,Inherit,Inheritance,383,". Help for ROOT's Reference Guide. Help for ROOT's Reference Guide. Contents. Parts of the Reference Guide. Type Index; Class Index; Inheritance. Modules. What they are; List of Modules; Modules' Library Dependencies. Class Reference. Sections; Link Box; Info Box; List of Data and Function Members. Display Options; Access (public / protected / private); Inheritance. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Member Function Documentation. Parts of the Reference Guide; Type Index; All basic types and typedefs are documented in the Type Index. Class Index; All classes and namespaces are listed alphabetically in the Class Index,; along with a short info of what they are used for.; You can jump to a class's entry using the shortcuts ontop of the page.; They are optimized for quick access: they are distributed evenly, and short.; Classes are grouped in modules; these, too, are listed ontop of the list of classes. Inheritance; All classes along with their derived and base classes are shown in the; Class Hierarchy.; The documentation for each class also shows the inheritance diagram.; The class hierarchy is meant to give an overview of available classes; and their relations. Modules; What they are; Classes are grouped into modules. For ROOT, this is done on a per-directory basis:; each module corresponds to a sub-directory. In other cases one module might represent; one library. Either way, modules are meant to combine similar or related classes,; allowing users to find classes close by context. If you need some functionality that; you cannot find in a class you know, you might want to check for classes in the same; module - maybe one of them does what you need. List of Modules; Modules are listed ontop of the Class Index and as part; of the Library Dependencies Chart. Modules' Library Dependencies; Each module is assumed to be part of a library. The dependencies of libraries are; not only relevant for linking, but often reflect also the contextual d",MatchSource.DOCS,etc/html/HELP.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html
https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html:396,Modifiability,Inherit,Inherited,396,". Help for ROOT's Reference Guide. Help for ROOT's Reference Guide. Contents. Parts of the Reference Guide. Type Index; Class Index; Inheritance. Modules. What they are; List of Modules; Modules' Library Dependencies. Class Reference. Sections; Link Box; Info Box; List of Data and Function Members. Display Options; Access (public / protected / private); Inheritance. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Member Function Documentation. Parts of the Reference Guide; Type Index; All basic types and typedefs are documented in the Type Index. Class Index; All classes and namespaces are listed alphabetically in the Class Index,; along with a short info of what they are used for.; You can jump to a class's entry using the shortcuts ontop of the page.; They are optimized for quick access: they are distributed evenly, and short.; Classes are grouped in modules; these, too, are listed ontop of the list of classes. Inheritance; All classes along with their derived and base classes are shown in the; Class Hierarchy.; The documentation for each class also shows the inheritance diagram.; The class hierarchy is meant to give an overview of available classes; and their relations. Modules; What they are; Classes are grouped into modules. For ROOT, this is done on a per-directory basis:; each module corresponds to a sub-directory. In other cases one module might represent; one library. Either way, modules are meant to combine similar or related classes,; allowing users to find classes close by context. If you need some functionality that; you cannot find in a class you know, you might want to check for classes in the same; module - maybe one of them does what you need. List of Modules; Modules are listed ontop of the Class Index and as part; of the Library Dependencies Chart. Modules' Library Dependencies; Each module is assumed to be part of a library. The dependencies of libraries are; not only relevant for linking, but often reflect also the contextual d",MatchSource.DOCS,etc/html/HELP.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html
https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html:946,Modifiability,Inherit,Inheritance,946,". Help for ROOT's Reference Guide. Help for ROOT's Reference Guide. Contents. Parts of the Reference Guide. Type Index; Class Index; Inheritance. Modules. What they are; List of Modules; Modules' Library Dependencies. Class Reference. Sections; Link Box; Info Box; List of Data and Function Members. Display Options; Access (public / protected / private); Inheritance. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Member Function Documentation. Parts of the Reference Guide; Type Index; All basic types and typedefs are documented in the Type Index. Class Index; All classes and namespaces are listed alphabetically in the Class Index,; along with a short info of what they are used for.; You can jump to a class's entry using the shortcuts ontop of the page.; They are optimized for quick access: they are distributed evenly, and short.; Classes are grouped in modules; these, too, are listed ontop of the list of classes. Inheritance; All classes along with their derived and base classes are shown in the; Class Hierarchy.; The documentation for each class also shows the inheritance diagram.; The class hierarchy is meant to give an overview of available classes; and their relations. Modules; What they are; Classes are grouped into modules. For ROOT, this is done on a per-directory basis:; each module corresponds to a sub-directory. In other cases one module might represent; one library. Either way, modules are meant to combine similar or related classes,; allowing users to find classes close by context. If you need some functionality that; you cannot find in a class you know, you might want to check for classes in the same; module - maybe one of them does what you need. List of Modules; Modules are listed ontop of the Class Index and as part; of the Library Dependencies Chart. Modules' Library Dependencies; Each module is assumed to be part of a library. The dependencies of libraries are; not only relevant for linking, but often reflect also the contextual d",MatchSource.DOCS,etc/html/HELP.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html
https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html:1097,Modifiability,inherit,inheritance,1097,"s of the Reference Guide. Type Index; Class Index; Inheritance. Modules. What they are; List of Modules; Modules' Library Dependencies. Class Reference. Sections; Link Box; Info Box; List of Data and Function Members. Display Options; Access (public / protected / private); Inheritance. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Member Function Documentation. Parts of the Reference Guide; Type Index; All basic types and typedefs are documented in the Type Index. Class Index; All classes and namespaces are listed alphabetically in the Class Index,; along with a short info of what they are used for.; You can jump to a class's entry using the shortcuts ontop of the page.; They are optimized for quick access: they are distributed evenly, and short.; Classes are grouped in modules; these, too, are listed ontop of the list of classes. Inheritance; All classes along with their derived and base classes are shown in the; Class Hierarchy.; The documentation for each class also shows the inheritance diagram.; The class hierarchy is meant to give an overview of available classes; and their relations. Modules; What they are; Classes are grouped into modules. For ROOT, this is done on a per-directory basis:; each module corresponds to a sub-directory. In other cases one module might represent; one library. Either way, modules are meant to combine similar or related classes,; allowing users to find classes close by context. If you need some functionality that; you cannot find in a class you know, you might want to check for classes in the same; module - maybe one of them does what you need. List of Modules; Modules are listed ontop of the Class Index and as part; of the Library Dependencies Chart. Modules' Library Dependencies; Each module is assumed to be part of a library. The dependencies of libraries are; not only relevant for linking, but often reflect also the contextual dependencies.; The dependencies of all modules are shown in the; Library Dependenc",MatchSource.DOCS,etc/html/HELP.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html
https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html:2648,Modifiability,inherit,inheritance,2648,"of Modules; Modules are listed ontop of the Class Index and as part; of the Library Dependencies Chart. Modules' Library Dependencies; Each module is assumed to be part of a library. The dependencies of libraries are; not only relevant for linking, but often reflect also the contextual dependencies.; The dependencies of all modules are shown in the; Library Dependencies Chart. Class Reference; Pages like the one for TH2 are; class references. They document the use and functionality of a class. Sections; Each class reference page has a class documentation, which documents what the class; can be used for, and gives hints on how to use it. This allows you to figure out; whether a certain class is appropriate for what you try to do. The page then lists; all available members; they define a class's functionality and its interaction with; your code. The next item is a tabbed set of charts, which allow you to study the; class's inheritance diagram, what members get inherited from where, and which members; are re-implemented, which files get indirectly included by including the class's; header, and which libraries this class depends on. The remainder of the page contains; the functions' documentation. And there is a little tool box floating around, which; gives you some display options and a link to this help page. We will now go through all these parts in detail. Link Box; On the top of the page you can find a list of links. The first line contains the current; ""location"", giving the home page, the module name, and the class name.; The second line links to generic pages, like ROOT's home page, the; Class Index, and the Class Hierarchy.; The last line allows you to jump to the sections of the current page and a colored; version of the class's header and source file. Info Box; There is a little info box, usually floating on the right side of the page; (update your browser if it's not). It shows the name of the class you are currently; looking at, which library you have to lin",MatchSource.DOCS,etc/html/HELP.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html
https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html:2686,Modifiability,inherit,inherited,2686,"of Modules; Modules are listed ontop of the Class Index and as part; of the Library Dependencies Chart. Modules' Library Dependencies; Each module is assumed to be part of a library. The dependencies of libraries are; not only relevant for linking, but often reflect also the contextual dependencies.; The dependencies of all modules are shown in the; Library Dependencies Chart. Class Reference; Pages like the one for TH2 are; class references. They document the use and functionality of a class. Sections; Each class reference page has a class documentation, which documents what the class; can be used for, and gives hints on how to use it. This allows you to figure out; whether a certain class is appropriate for what you try to do. The page then lists; all available members; they define a class's functionality and its interaction with; your code. The next item is a tabbed set of charts, which allow you to study the; class's inheritance diagram, what members get inherited from where, and which members; are re-implemented, which files get indirectly included by including the class's; header, and which libraries this class depends on. The remainder of the page contains; the functions' documentation. And there is a little tool box floating around, which; gives you some display options and a link to this help page. We will now go through all these parts in detail. Link Box; On the top of the page you can find a list of links. The first line contains the current; ""location"", giving the home page, the module name, and the class name.; The second line links to generic pages, like ROOT's home page, the; Class Index, and the Class Hierarchy.; The last line allows you to jump to the sections of the current page and a colored; version of the class's header and source file. Info Box; There is a little info box, usually floating on the right side of the page; (update your browser if it's not). It shows the name of the class you are currently; looking at, which library you have to lin",MatchSource.DOCS,etc/html/HELP.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html
https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html:4069,Modifiability,inherit,inherited,4069,"these parts in detail. Link Box; On the top of the page you can find a list of links. The first line contains the current; ""location"", giving the home page, the module name, and the class name.; The second line links to generic pages, like ROOT's home page, the; Class Index, and the Class Hierarchy.; The last line allows you to jump to the sections of the current page and a colored; version of the class's header and source file. Info Box; There is a little info box, usually floating on the right side of the page; (update your browser if it's not). It shows the name of the class you are currently; looking at, which library you have to link against to get access to the class, and; which header file you have to #include. It also contains options that influence how; the list of members is displayed. you can show or hide non-public methods. If you; just want to use ROOT you should hide them - you cannot access protected or private; members anyway. And you can select whether member that are inherited from a base class; should be shown. Again, if you just want to use ROOT you should probably show them,; as you often want to use them whether they are defined in the current class or in one; of its base classes. Whatever you set these options to should be stored in a cookie,; so you will have the same setting next time you look at the class documentation. The two links in the bottom of the box get you to the top of the page and to this help; page. You can hide the info box by clicking on the little ""-"" in the top right corner; of the box, and show it again by clicking on the ""+"". List of Data and Function Members; The central part of a class are its members. Some are available to you; some; are hidden from you, because they are only meant to be used internally.; As an example, a class might allow you to set, access, and print its values, or store; them into a file.; Because methods should have reasonable names, often the method name itself is already; a hint on what it does.; ",MatchSource.DOCS,etc/html/HELP.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html
https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html:5280,Modifiability,inherit,inherited,5280," you set these options to should be stored in a cookie,; so you will have the same setting next time you look at the class documentation. The two links in the bottom of the box get you to the top of the page and to this help; page. You can hide the info box by clicking on the little ""-"" in the top right corner; of the box, and show it again by clicking on the ""+"". List of Data and Function Members; The central part of a class are its members. Some are available to you; some; are hidden from you, because they are only meant to be used internally.; As an example, a class might allow you to set, access, and print its values, or store; them into a file.; Because methods should have reasonable names, often the method name itself is already; a hint on what it does.; If you want to get a TNamed's; name, you will immediately see TNamed::GetName() in its list of functions.; A click on this name will send you to the documentation for the method.; If you enabled the display of inherited members you will see; some members with a class name prefix. It tells you where this method has been defined.; Display Options; The info box contains options that influence how; the list of members is displayed: you can e.g. show or hide non-public methods. If you; just want to use ROOT you should hide them - you cannot access protected or private; members anyway. And you can select whether member that are inherited from a base class; should be shown. Again, if you just want to use ROOT you should probably show them,; as you often want to use them whether they are defined in the current class or in one; of its base classes. Whatever you set these options to should be stored in a cookie,; so you will have the same setting next time you look at the class documentation. Access (public / protected / private); Not all members are available to everyone (check any C++ introduction to learn why).; Public members have a green bar on their left, protected ones have a yellow one, and; private members are ",MatchSource.DOCS,etc/html/HELP.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html
https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html:5700,Modifiability,inherit,inherited,5700," The central part of a class are its members. Some are available to you; some; are hidden from you, because they are only meant to be used internally.; As an example, a class might allow you to set, access, and print its values, or store; them into a file.; Because methods should have reasonable names, often the method name itself is already; a hint on what it does.; If you want to get a TNamed's; name, you will immediately see TNamed::GetName() in its list of functions.; A click on this name will send you to the documentation for the method.; If you enabled the display of inherited members you will see; some members with a class name prefix. It tells you where this method has been defined.; Display Options; The info box contains options that influence how; the list of members is displayed: you can e.g. show or hide non-public methods. If you; just want to use ROOT you should hide them - you cannot access protected or private; members anyway. And you can select whether member that are inherited from a base class; should be shown. Again, if you just want to use ROOT you should probably show them,; as you often want to use them whether they are defined in the current class or in one; of its base classes. Whatever you set these options to should be stored in a cookie,; so you will have the same setting next time you look at the class documentation. Access (public / protected / private); Not all members are available to everyone (check any C++ introduction to learn why).; Public members have a green bar on their left, protected ones have a yellow one, and; private members are marked with a red bar. Of course you won't see any protected or; private members if you hide them in the display options. Inheritance; You can often access members of a class's base classes, just as if they are defined; in the derived class. A histogram,; for example, has a name, and you can access it using GetName() as defined in its base; class TNamed. If you want to see; all available members, an",MatchSource.DOCS,etc/html/HELP.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html
https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html:6421,Modifiability,Inherit,Inheritance,6421,"members is displayed: you can e.g. show or hide non-public methods. If you; just want to use ROOT you should hide them - you cannot access protected or private; members anyway. And you can select whether member that are inherited from a base class; should be shown. Again, if you just want to use ROOT you should probably show them,; as you often want to use them whether they are defined in the current class or in one; of its base classes. Whatever you set these options to should be stored in a cookie,; so you will have the same setting next time you look at the class documentation. Access (public / protected / private); Not all members are available to everyone (check any C++ introduction to learn why).; Public members have a green bar on their left, protected ones have a yellow one, and; private members are marked with a red bar. Of course you won't see any protected or; private members if you hide them in the display options. Inheritance; You can often access members of a class's base classes, just as if they are defined; in the derived class. A histogram,; for example, has a name, and you can access it using GetName() as defined in its base; class TNamed. If you want to see; all available members, and not just the ones defined in the current class, in the; display options. They will be prefixed with the name of; the class they are defined in. Class Charts; The class charts are shown in a tabbed box; click on the names ontop to select a tab. Inheritance; This chart shows the inheritance hierarchy for the current class. Arrows point to; base classes. You can click the classes to get to their reference page. Inherited Members; The second chart shows a list of all members of all base classes. You can see at what; level they are defined or at what level they are defined. Members that are accessible; (public) have a green background, protected ones have a yellow background, and private; members have a red background. Members with a dark gray background are re-implemente",MatchSource.DOCS,etc/html/HELP.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html
https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html:6947,Modifiability,Inherit,Inheritance,6947,"; so you will have the same setting next time you look at the class documentation. Access (public / protected / private); Not all members are available to everyone (check any C++ introduction to learn why).; Public members have a green bar on their left, protected ones have a yellow one, and; private members are marked with a red bar. Of course you won't see any protected or; private members if you hide them in the display options. Inheritance; You can often access members of a class's base classes, just as if they are defined; in the derived class. A histogram,; for example, has a name, and you can access it using GetName() as defined in its base; class TNamed. If you want to see; all available members, and not just the ones defined in the current class, in the; display options. They will be prefixed with the name of; the class they are defined in. Class Charts; The class charts are shown in a tabbed box; click on the names ontop to select a tab. Inheritance; This chart shows the inheritance hierarchy for the current class. Arrows point to; base classes. You can click the classes to get to their reference page. Inherited Members; The second chart shows a list of all members of all base classes. You can see at what; level they are defined or at what level they are defined. Members that are accessible; (public) have a green background, protected ones have a yellow background, and private; members have a red background. Members with a dark gray background are re-implemented; or hidden by a derived class. Includes; The Includes chart shows which files are indirectly included by including the class's; header. Most headers will #include some files, so by #including that header you also; #include the #included files, and so on. A illegible chart often means you should; read a bit on the C++ trick known as ""forward declaration"". Including too many headers; has some nasty consequences, like compile time, additional dependencies, etc. Libraries; Each class is assumed to be in",MatchSource.DOCS,etc/html/HELP.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html
https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html:6981,Modifiability,inherit,inheritance,6981,"; so you will have the same setting next time you look at the class documentation. Access (public / protected / private); Not all members are available to everyone (check any C++ introduction to learn why).; Public members have a green bar on their left, protected ones have a yellow one, and; private members are marked with a red bar. Of course you won't see any protected or; private members if you hide them in the display options. Inheritance; You can often access members of a class's base classes, just as if they are defined; in the derived class. A histogram,; for example, has a name, and you can access it using GetName() as defined in its base; class TNamed. If you want to see; all available members, and not just the ones defined in the current class, in the; display options. They will be prefixed with the name of; the class they are defined in. Class Charts; The class charts are shown in a tabbed box; click on the names ontop to select a tab. Inheritance; This chart shows the inheritance hierarchy for the current class. Arrows point to; base classes. You can click the classes to get to their reference page. Inherited Members; The second chart shows a list of all members of all base classes. You can see at what; level they are defined or at what level they are defined. Members that are accessible; (public) have a green background, protected ones have a yellow background, and private; members have a red background. Members with a dark gray background are re-implemented; or hidden by a derived class. Includes; The Includes chart shows which files are indirectly included by including the class's; header. Most headers will #include some files, so by #including that header you also; #include the #included files, and so on. A illegible chart often means you should; read a bit on the C++ trick known as ""forward declaration"". Including too many headers; has some nasty consequences, like compile time, additional dependencies, etc. Libraries; Each class is assumed to be in",MatchSource.DOCS,etc/html/HELP.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html
https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html:7115,Modifiability,Inherit,Inherited,7115,"any C++ introduction to learn why).; Public members have a green bar on their left, protected ones have a yellow one, and; private members are marked with a red bar. Of course you won't see any protected or; private members if you hide them in the display options. Inheritance; You can often access members of a class's base classes, just as if they are defined; in the derived class. A histogram,; for example, has a name, and you can access it using GetName() as defined in its base; class TNamed. If you want to see; all available members, and not just the ones defined in the current class, in the; display options. They will be prefixed with the name of; the class they are defined in. Class Charts; The class charts are shown in a tabbed box; click on the names ontop to select a tab. Inheritance; This chart shows the inheritance hierarchy for the current class. Arrows point to; base classes. You can click the classes to get to their reference page. Inherited Members; The second chart shows a list of all members of all base classes. You can see at what; level they are defined or at what level they are defined. Members that are accessible; (public) have a green background, protected ones have a yellow background, and private; members have a red background. Members with a dark gray background are re-implemented; or hidden by a derived class. Includes; The Includes chart shows which files are indirectly included by including the class's; header. Most headers will #include some files, so by #including that header you also; #include the #included files, and so on. A illegible chart often means you should; read a bit on the C++ trick known as ""forward declaration"". Including too many headers; has some nasty consequences, like compile time, additional dependencies, etc. Libraries; Each class is assumed to be in a library. That library might depend on other libraries.; The fourth chart shows the dependencies of these libraries. You will need to link against; all of these if you w",MatchSource.DOCS,etc/html/HELP.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html
https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html:792,Performance,optimiz,optimized,792,". Help for ROOT's Reference Guide. Help for ROOT's Reference Guide. Contents. Parts of the Reference Guide. Type Index; Class Index; Inheritance. Modules. What they are; List of Modules; Modules' Library Dependencies. Class Reference. Sections; Link Box; Info Box; List of Data and Function Members. Display Options; Access (public / protected / private); Inheritance. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Member Function Documentation. Parts of the Reference Guide; Type Index; All basic types and typedefs are documented in the Type Index. Class Index; All classes and namespaces are listed alphabetically in the Class Index,; along with a short info of what they are used for.; You can jump to a class's entry using the shortcuts ontop of the page.; They are optimized for quick access: they are distributed evenly, and short.; Classes are grouped in modules; these, too, are listed ontop of the list of classes. Inheritance; All classes along with their derived and base classes are shown in the; Class Hierarchy.; The documentation for each class also shows the inheritance diagram.; The class hierarchy is meant to give an overview of available classes; and their relations. Modules; What they are; Classes are grouped into modules. For ROOT, this is done on a per-directory basis:; each module corresponds to a sub-directory. In other cases one module might represent; one library. Either way, modules are meant to combine similar or related classes,; allowing users to find classes close by context. If you need some functionality that; you cannot find in a class you know, you might want to check for classes in the same; module - maybe one of them does what you need. List of Modules; Modules are listed ontop of the Class Index and as part; of the Library Dependencies Chart. Modules' Library Dependencies; Each module is assumed to be part of a library. The dependencies of libraries are; not only relevant for linking, but often reflect also the contextual d",MatchSource.DOCS,etc/html/HELP.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html
https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html:317,Security,Access,Access,317,". Help for ROOT's Reference Guide. Help for ROOT's Reference Guide. Contents. Parts of the Reference Guide. Type Index; Class Index; Inheritance. Modules. What they are; List of Modules; Modules' Library Dependencies. Class Reference. Sections; Link Box; Info Box; List of Data and Function Members. Display Options; Access (public / protected / private); Inheritance. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Member Function Documentation. Parts of the Reference Guide; Type Index; All basic types and typedefs are documented in the Type Index. Class Index; All classes and namespaces are listed alphabetically in the Class Index,; along with a short info of what they are used for.; You can jump to a class's entry using the shortcuts ontop of the page.; They are optimized for quick access: they are distributed evenly, and short.; Classes are grouped in modules; these, too, are listed ontop of the list of classes. Inheritance; All classes along with their derived and base classes are shown in the; Class Hierarchy.; The documentation for each class also shows the inheritance diagram.; The class hierarchy is meant to give an overview of available classes; and their relations. Modules; What they are; Classes are grouped into modules. For ROOT, this is done on a per-directory basis:; each module corresponds to a sub-directory. In other cases one module might represent; one library. Either way, modules are meant to combine similar or related classes,; allowing users to find classes close by context. If you need some functionality that; you cannot find in a class you know, you might want to check for classes in the same; module - maybe one of them does what you need. List of Modules; Modules are listed ontop of the Class Index and as part; of the Library Dependencies Chart. Modules' Library Dependencies; Each module is assumed to be part of a library. The dependencies of libraries are; not only relevant for linking, but often reflect also the contextual d",MatchSource.DOCS,etc/html/HELP.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html
https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html:812,Security,access,access,812,". Help for ROOT's Reference Guide. Help for ROOT's Reference Guide. Contents. Parts of the Reference Guide. Type Index; Class Index; Inheritance. Modules. What they are; List of Modules; Modules' Library Dependencies. Class Reference. Sections; Link Box; Info Box; List of Data and Function Members. Display Options; Access (public / protected / private); Inheritance. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Member Function Documentation. Parts of the Reference Guide; Type Index; All basic types and typedefs are documented in the Type Index. Class Index; All classes and namespaces are listed alphabetically in the Class Index,; along with a short info of what they are used for.; You can jump to a class's entry using the shortcuts ontop of the page.; They are optimized for quick access: they are distributed evenly, and short.; Classes are grouped in modules; these, too, are listed ontop of the list of classes. Inheritance; All classes along with their derived and base classes are shown in the; Class Hierarchy.; The documentation for each class also shows the inheritance diagram.; The class hierarchy is meant to give an overview of available classes; and their relations. Modules; What they are; Classes are grouped into modules. For ROOT, this is done on a per-directory basis:; each module corresponds to a sub-directory. In other cases one module might represent; one library. Either way, modules are meant to combine similar or related classes,; allowing users to find classes close by context. If you need some functionality that; you cannot find in a class you know, you might want to check for classes in the same; module - maybe one of them does what you need. List of Modules; Modules are listed ontop of the Class Index and as part; of the Library Dependencies Chart. Modules' Library Dependencies; Each module is assumed to be part of a library. The dependencies of libraries are; not only relevant for linking, but often reflect also the contextual d",MatchSource.DOCS,etc/html/HELP.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html
https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html:3731,Security,access,access,3731,"nd which members; are re-implemented, which files get indirectly included by including the class's; header, and which libraries this class depends on. The remainder of the page contains; the functions' documentation. And there is a little tool box floating around, which; gives you some display options and a link to this help page. We will now go through all these parts in detail. Link Box; On the top of the page you can find a list of links. The first line contains the current; ""location"", giving the home page, the module name, and the class name.; The second line links to generic pages, like ROOT's home page, the; Class Index, and the Class Hierarchy.; The last line allows you to jump to the sections of the current page and a colored; version of the class's header and source file. Info Box; There is a little info box, usually floating on the right side of the page; (update your browser if it's not). It shows the name of the class you are currently; looking at, which library you have to link against to get access to the class, and; which header file you have to #include. It also contains options that influence how; the list of members is displayed. you can show or hide non-public methods. If you; just want to use ROOT you should hide them - you cannot access protected or private; members anyway. And you can select whether member that are inherited from a base class; should be shown. Again, if you just want to use ROOT you should probably show them,; as you often want to use them whether they are defined in the current class or in one; of its base classes. Whatever you set these options to should be stored in a cookie,; so you will have the same setting next time you look at the class documentation. The two links in the bottom of the box get you to the top of the page and to this help; page. You can hide the info box by clicking on the little ""-"" in the top right corner; of the box, and show it again by clicking on the ""+"". List of Data and Function Members; The cent",MatchSource.DOCS,etc/html/HELP.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html
https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html:3981,Security,access,access,3981,"nd, which; gives you some display options and a link to this help page. We will now go through all these parts in detail. Link Box; On the top of the page you can find a list of links. The first line contains the current; ""location"", giving the home page, the module name, and the class name.; The second line links to generic pages, like ROOT's home page, the; Class Index, and the Class Hierarchy.; The last line allows you to jump to the sections of the current page and a colored; version of the class's header and source file. Info Box; There is a little info box, usually floating on the right side of the page; (update your browser if it's not). It shows the name of the class you are currently; looking at, which library you have to link against to get access to the class, and; which header file you have to #include. It also contains options that influence how; the list of members is displayed. you can show or hide non-public methods. If you; just want to use ROOT you should hide them - you cannot access protected or private; members anyway. And you can select whether member that are inherited from a base class; should be shown. Again, if you just want to use ROOT you should probably show them,; as you often want to use them whether they are defined in the current class or in one; of its base classes. Whatever you set these options to should be stored in a cookie,; so you will have the same setting next time you look at the class documentation. The two links in the bottom of the box get you to the top of the page and to this help; page. You can hide the info box by clicking on the little ""-"" in the top right corner; of the box, and show it again by clicking on the ""+"". List of Data and Function Members; The central part of a class are its members. Some are available to you; some; are hidden from you, because they are only meant to be used internally.; As an example, a class might allow you to set, access, and print its values, or store; them into a file.; Because metho",MatchSource.DOCS,etc/html/HELP.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html
https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html:4899,Security,access,access,4899,"blic methods. If you; just want to use ROOT you should hide them - you cannot access protected or private; members anyway. And you can select whether member that are inherited from a base class; should be shown. Again, if you just want to use ROOT you should probably show them,; as you often want to use them whether they are defined in the current class or in one; of its base classes. Whatever you set these options to should be stored in a cookie,; so you will have the same setting next time you look at the class documentation. The two links in the bottom of the box get you to the top of the page and to this help; page. You can hide the info box by clicking on the little ""-"" in the top right corner; of the box, and show it again by clicking on the ""+"". List of Data and Function Members; The central part of a class are its members. Some are available to you; some; are hidden from you, because they are only meant to be used internally.; As an example, a class might allow you to set, access, and print its values, or store; them into a file.; Because methods should have reasonable names, often the method name itself is already; a hint on what it does.; If you want to get a TNamed's; name, you will immediately see TNamed::GetName() in its list of functions.; A click on this name will send you to the documentation for the method.; If you enabled the display of inherited members you will see; some members with a class name prefix. It tells you where this method has been defined.; Display Options; The info box contains options that influence how; the list of members is displayed: you can e.g. show or hide non-public methods. If you; just want to use ROOT you should hide them - you cannot access protected or private; members anyway. And you can select whether member that are inherited from a base class; should be shown. Again, if you just want to use ROOT you should probably show them,; as you often want to use them whether they are defined in the current class or in one; of",MatchSource.DOCS,etc/html/HELP.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html
https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html:5612,Security,access,access,5612,"ht corner; of the box, and show it again by clicking on the ""+"". List of Data and Function Members; The central part of a class are its members. Some are available to you; some; are hidden from you, because they are only meant to be used internally.; As an example, a class might allow you to set, access, and print its values, or store; them into a file.; Because methods should have reasonable names, often the method name itself is already; a hint on what it does.; If you want to get a TNamed's; name, you will immediately see TNamed::GetName() in its list of functions.; A click on this name will send you to the documentation for the method.; If you enabled the display of inherited members you will see; some members with a class name prefix. It tells you where this method has been defined.; Display Options; The info box contains options that influence how; the list of members is displayed: you can e.g. show or hide non-public methods. If you; just want to use ROOT you should hide them - you cannot access protected or private; members anyway. And you can select whether member that are inherited from a base class; should be shown. Again, if you just want to use ROOT you should probably show them,; as you often want to use them whether they are defined in the current class or in one; of its base classes. Whatever you set these options to should be stored in a cookie,; so you will have the same setting next time you look at the class documentation. Access (public / protected / private); Not all members are available to everyone (check any C++ introduction to learn why).; Public members have a green bar on their left, protected ones have a yellow one, and; private members are marked with a red bar. Of course you won't see any protected or; private members if you hide them in the display options. Inheritance; You can often access members of a class's base classes, just as if they are defined; in the derived class. A histogram,; for example, has a name, and you can access it ",MatchSource.DOCS,etc/html/HELP.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html
https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html:6068,Security,Access,Access,6068,"ee TNamed::GetName() in its list of functions.; A click on this name will send you to the documentation for the method.; If you enabled the display of inherited members you will see; some members with a class name prefix. It tells you where this method has been defined.; Display Options; The info box contains options that influence how; the list of members is displayed: you can e.g. show or hide non-public methods. If you; just want to use ROOT you should hide them - you cannot access protected or private; members anyway. And you can select whether member that are inherited from a base class; should be shown. Again, if you just want to use ROOT you should probably show them,; as you often want to use them whether they are defined in the current class or in one; of its base classes. Whatever you set these options to should be stored in a cookie,; so you will have the same setting next time you look at the class documentation. Access (public / protected / private); Not all members are available to everyone (check any C++ introduction to learn why).; Public members have a green bar on their left, protected ones have a yellow one, and; private members are marked with a red bar. Of course you won't see any protected or; private members if you hide them in the display options. Inheritance; You can often access members of a class's base classes, just as if they are defined; in the derived class. A histogram,; for example, has a name, and you can access it using GetName() as defined in its base; class TNamed. If you want to see; all available members, and not just the ones defined in the current class, in the; display options. They will be prefixed with the name of; the class they are defined in. Class Charts; The class charts are shown in a tabbed box; click on the names ontop to select a tab. Inheritance; This chart shows the inheritance hierarchy for the current class. Arrows point to; base classes. You can click the classes to get to their reference page. Inherited Memb",MatchSource.DOCS,etc/html/HELP.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html
https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html:6448,Security,access,access,6448,"members is displayed: you can e.g. show or hide non-public methods. If you; just want to use ROOT you should hide them - you cannot access protected or private; members anyway. And you can select whether member that are inherited from a base class; should be shown. Again, if you just want to use ROOT you should probably show them,; as you often want to use them whether they are defined in the current class or in one; of its base classes. Whatever you set these options to should be stored in a cookie,; so you will have the same setting next time you look at the class documentation. Access (public / protected / private); Not all members are available to everyone (check any C++ introduction to learn why).; Public members have a green bar on their left, protected ones have a yellow one, and; private members are marked with a red bar. Of course you won't see any protected or; private members if you hide them in the display options. Inheritance; You can often access members of a class's base classes, just as if they are defined; in the derived class. A histogram,; for example, has a name, and you can access it using GetName() as defined in its base; class TNamed. If you want to see; all available members, and not just the ones defined in the current class, in the; display options. They will be prefixed with the name of; the class they are defined in. Class Charts; The class charts are shown in a tabbed box; click on the names ontop to select a tab. Inheritance; This chart shows the inheritance hierarchy for the current class. Arrows point to; base classes. You can click the classes to get to their reference page. Inherited Members; The second chart shows a list of all members of all base classes. You can see at what; level they are defined or at what level they are defined. Members that are accessible; (public) have a green background, protected ones have a yellow background, and private; members have a red background. Members with a dark gray background are re-implemente",MatchSource.DOCS,etc/html/HELP.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html
https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html:6592,Security,access,access,6592,"m - you cannot access protected or private; members anyway. And you can select whether member that are inherited from a base class; should be shown. Again, if you just want to use ROOT you should probably show them,; as you often want to use them whether they are defined in the current class or in one; of its base classes. Whatever you set these options to should be stored in a cookie,; so you will have the same setting next time you look at the class documentation. Access (public / protected / private); Not all members are available to everyone (check any C++ introduction to learn why).; Public members have a green bar on their left, protected ones have a yellow one, and; private members are marked with a red bar. Of course you won't see any protected or; private members if you hide them in the display options. Inheritance; You can often access members of a class's base classes, just as if they are defined; in the derived class. A histogram,; for example, has a name, and you can access it using GetName() as defined in its base; class TNamed. If you want to see; all available members, and not just the ones defined in the current class, in the; display options. They will be prefixed with the name of; the class they are defined in. Class Charts; The class charts are shown in a tabbed box; click on the names ontop to select a tab. Inheritance; This chart shows the inheritance hierarchy for the current class. Arrows point to; base classes. You can click the classes to get to their reference page. Inherited Members; The second chart shows a list of all members of all base classes. You can see at what; level they are defined or at what level they are defined. Members that are accessible; (public) have a green background, protected ones have a yellow background, and private; members have a red background. Members with a dark gray background are re-implemented; or hidden by a derived class. Includes; The Includes chart shows which files are indirectly included by including t",MatchSource.DOCS,etc/html/HELP.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html
https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html:7296,Security,access,accessible,7296,"otected or; private members if you hide them in the display options. Inheritance; You can often access members of a class's base classes, just as if they are defined; in the derived class. A histogram,; for example, has a name, and you can access it using GetName() as defined in its base; class TNamed. If you want to see; all available members, and not just the ones defined in the current class, in the; display options. They will be prefixed with the name of; the class they are defined in. Class Charts; The class charts are shown in a tabbed box; click on the names ontop to select a tab. Inheritance; This chart shows the inheritance hierarchy for the current class. Arrows point to; base classes. You can click the classes to get to their reference page. Inherited Members; The second chart shows a list of all members of all base classes. You can see at what; level they are defined or at what level they are defined. Members that are accessible; (public) have a green background, protected ones have a yellow background, and private; members have a red background. Members with a dark gray background are re-implemented; or hidden by a derived class. Includes; The Includes chart shows which files are indirectly included by including the class's; header. Most headers will #include some files, so by #including that header you also; #include the #included files, and so on. A illegible chart often means you should; read a bit on the C++ trick known as ""forward declaration"". Including too many headers; has some nasty consequences, like compile time, additional dependencies, etc. Libraries; Each class is assumed to be in a library. That library might depend on other libraries.; The fourth chart shows the dependencies of these libraries. You will need to link against; all of these if you write your own program. Member Function Documentation; Each function should be documented by the developer of the class. The documentation can; contain HTML, pictures, and example code. It should ",MatchSource.DOCS,etc/html/HELP.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html
https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html:28,Usability,Guid,Guide,28,". Help for ROOT's Reference Guide. Help for ROOT's Reference Guide. Contents. Parts of the Reference Guide. Type Index; Class Index; Inheritance. Modules. What they are; List of Modules; Modules' Library Dependencies. Class Reference. Sections; Link Box; Info Box; List of Data and Function Members. Display Options; Access (public / protected / private); Inheritance. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Member Function Documentation. Parts of the Reference Guide; Type Index; All basic types and typedefs are documented in the Type Index. Class Index; All classes and namespaces are listed alphabetically in the Class Index,; along with a short info of what they are used for.; You can jump to a class's entry using the shortcuts ontop of the page.; They are optimized for quick access: they are distributed evenly, and short.; Classes are grouped in modules; these, too, are listed ontop of the list of classes. Inheritance; All classes along with their derived and base classes are shown in the; Class Hierarchy.; The documentation for each class also shows the inheritance diagram.; The class hierarchy is meant to give an overview of available classes; and their relations. Modules; What they are; Classes are grouped into modules. For ROOT, this is done on a per-directory basis:; each module corresponds to a sub-directory. In other cases one module might represent; one library. Either way, modules are meant to combine similar or related classes,; allowing users to find classes close by context. If you need some functionality that; you cannot find in a class you know, you might want to check for classes in the same; module - maybe one of them does what you need. List of Modules; Modules are listed ontop of the Class Index and as part; of the Library Dependencies Chart. Modules' Library Dependencies; Each module is assumed to be part of a library. The dependencies of libraries are; not only relevant for linking, but often reflect also the contextual d",MatchSource.DOCS,etc/html/HELP.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html
https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html:61,Usability,Guid,Guide,61,". Help for ROOT's Reference Guide. Help for ROOT's Reference Guide. Contents. Parts of the Reference Guide. Type Index; Class Index; Inheritance. Modules. What they are; List of Modules; Modules' Library Dependencies. Class Reference. Sections; Link Box; Info Box; List of Data and Function Members. Display Options; Access (public / protected / private); Inheritance. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Member Function Documentation. Parts of the Reference Guide; Type Index; All basic types and typedefs are documented in the Type Index. Class Index; All classes and namespaces are listed alphabetically in the Class Index,; along with a short info of what they are used for.; You can jump to a class's entry using the shortcuts ontop of the page.; They are optimized for quick access: they are distributed evenly, and short.; Classes are grouped in modules; these, too, are listed ontop of the list of classes. Inheritance; All classes along with their derived and base classes are shown in the; Class Hierarchy.; The documentation for each class also shows the inheritance diagram.; The class hierarchy is meant to give an overview of available classes; and their relations. Modules; What they are; Classes are grouped into modules. For ROOT, this is done on a per-directory basis:; each module corresponds to a sub-directory. In other cases one module might represent; one library. Either way, modules are meant to combine similar or related classes,; allowing users to find classes close by context. If you need some functionality that; you cannot find in a class you know, you might want to check for classes in the same; module - maybe one of them does what you need. List of Modules; Modules are listed ontop of the Class Index and as part; of the Library Dependencies Chart. Modules' Library Dependencies; Each module is assumed to be part of a library. The dependencies of libraries are; not only relevant for linking, but often reflect also the contextual d",MatchSource.DOCS,etc/html/HELP.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html
https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html:101,Usability,Guid,Guide,101,". Help for ROOT's Reference Guide. Help for ROOT's Reference Guide. Contents. Parts of the Reference Guide. Type Index; Class Index; Inheritance. Modules. What they are; List of Modules; Modules' Library Dependencies. Class Reference. Sections; Link Box; Info Box; List of Data and Function Members. Display Options; Access (public / protected / private); Inheritance. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Member Function Documentation. Parts of the Reference Guide; Type Index; All basic types and typedefs are documented in the Type Index. Class Index; All classes and namespaces are listed alphabetically in the Class Index,; along with a short info of what they are used for.; You can jump to a class's entry using the shortcuts ontop of the page.; They are optimized for quick access: they are distributed evenly, and short.; Classes are grouped in modules; these, too, are listed ontop of the list of classes. Inheritance; All classes along with their derived and base classes are shown in the; Class Hierarchy.; The documentation for each class also shows the inheritance diagram.; The class hierarchy is meant to give an overview of available classes; and their relations. Modules; What they are; Classes are grouped into modules. For ROOT, this is done on a per-directory basis:; each module corresponds to a sub-directory. In other cases one module might represent; one library. Either way, modules are meant to combine similar or related classes,; allowing users to find classes close by context. If you need some functionality that; you cannot find in a class you know, you might want to check for classes in the same; module - maybe one of them does what you need. List of Modules; Modules are listed ontop of the Class Index and as part; of the Library Dependencies Chart. Modules' Library Dependencies; Each module is assumed to be part of a library. The dependencies of libraries are; not only relevant for linking, but often reflect also the contextual d",MatchSource.DOCS,etc/html/HELP.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html
https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html:490,Usability,Guid,Guide,490,". Help for ROOT's Reference Guide. Help for ROOT's Reference Guide. Contents. Parts of the Reference Guide. Type Index; Class Index; Inheritance. Modules. What they are; List of Modules; Modules' Library Dependencies. Class Reference. Sections; Link Box; Info Box; List of Data and Function Members. Display Options; Access (public / protected / private); Inheritance. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Member Function Documentation. Parts of the Reference Guide; Type Index; All basic types and typedefs are documented in the Type Index. Class Index; All classes and namespaces are listed alphabetically in the Class Index,; along with a short info of what they are used for.; You can jump to a class's entry using the shortcuts ontop of the page.; They are optimized for quick access: they are distributed evenly, and short.; Classes are grouped in modules; these, too, are listed ontop of the list of classes. Inheritance; All classes along with their derived and base classes are shown in the; Class Hierarchy.; The documentation for each class also shows the inheritance diagram.; The class hierarchy is meant to give an overview of available classes; and their relations. Modules; What they are; Classes are grouped into modules. For ROOT, this is done on a per-directory basis:; each module corresponds to a sub-directory. In other cases one module might represent; one library. Either way, modules are meant to combine similar or related classes,; allowing users to find classes close by context. If you need some functionality that; you cannot find in a class you know, you might want to check for classes in the same; module - maybe one of them does what you need. List of Modules; Modules are listed ontop of the Class Index and as part; of the Library Dependencies Chart. Modules' Library Dependencies; Each module is assumed to be part of a library. The dependencies of libraries are; not only relevant for linking, but often reflect also the contextual d",MatchSource.DOCS,etc/html/HELP.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html
https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html:6180,Usability,learn,learn,6180,"ee TNamed::GetName() in its list of functions.; A click on this name will send you to the documentation for the method.; If you enabled the display of inherited members you will see; some members with a class name prefix. It tells you where this method has been defined.; Display Options; The info box contains options that influence how; the list of members is displayed: you can e.g. show or hide non-public methods. If you; just want to use ROOT you should hide them - you cannot access protected or private; members anyway. And you can select whether member that are inherited from a base class; should be shown. Again, if you just want to use ROOT you should probably show them,; as you often want to use them whether they are defined in the current class or in one; of its base classes. Whatever you set these options to should be stored in a cookie,; so you will have the same setting next time you look at the class documentation. Access (public / protected / private); Not all members are available to everyone (check any C++ introduction to learn why).; Public members have a green bar on their left, protected ones have a yellow one, and; private members are marked with a red bar. Of course you won't see any protected or; private members if you hide them in the display options. Inheritance; You can often access members of a class's base classes, just as if they are defined; in the derived class. A histogram,; for example, has a name, and you can access it using GetName() as defined in its base; class TNamed. If you want to see; all available members, and not just the ones defined in the current class, in the; display options. They will be prefixed with the name of; the class they are defined in. Class Charts; The class charts are shown in a tabbed box; click on the names ontop to select a tab. Inheritance; This chart shows the inheritance hierarchy for the current class. Arrows point to; base classes. You can click the classes to get to their reference page. Inherited Memb",MatchSource.DOCS,etc/html/HELP.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/html/HELP.html
https://github.com/root-project/root/tree/v6-32-06/geom/doc/v522/index.html:490,Availability,toler,tolerance,490,". Geometry; Improvement of the standard overlap checker. The previous method was checking points on the visual mesh of volume shape against all possible overlapping partners.; The new method checks more points (currently 1000, in future configurable) on the volume outline or surface. This minimizes the number of non-detectable overlap; configurations.; The interface to activate the new checking method is the same as before:; gGeoManager->CheckOverlaps(ovlp);; where ovlp is the overlap tolerance (default 0.01 cm); An example of overlap that was not detected before but is now:. ",MatchSource.DOCS,geom/doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/geom/doc/v522/index.html:338,Deployability,configurat,configurations,338,". Geometry; Improvement of the standard overlap checker. The previous method was checking points on the visual mesh of volume shape against all possible overlapping partners.; The new method checks more points (currently 1000, in future configurable) on the volume outline or surface. This minimizes the number of non-detectable overlap; configurations.; The interface to activate the new checking method is the same as before:; gGeoManager->CheckOverlaps(ovlp);; where ovlp is the overlap tolerance (default 0.01 cm); An example of overlap that was not detected before but is now:. ",MatchSource.DOCS,geom/doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/geom/doc/v522/index.html:359,Integrability,interface,interface,359,". Geometry; Improvement of the standard overlap checker. The previous method was checking points on the visual mesh of volume shape against all possible overlapping partners.; The new method checks more points (currently 1000, in future configurable) on the volume outline or surface. This minimizes the number of non-detectable overlap; configurations.; The interface to activate the new checking method is the same as before:; gGeoManager->CheckOverlaps(ovlp);; where ovlp is the overlap tolerance (default 0.01 cm); An example of overlap that was not detected before but is now:. ",MatchSource.DOCS,geom/doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/geom/doc/v522/index.html:237,Modifiability,config,configurable,237,". Geometry; Improvement of the standard overlap checker. The previous method was checking points on the visual mesh of volume shape against all possible overlapping partners.; The new method checks more points (currently 1000, in future configurable) on the volume outline or surface. This minimizes the number of non-detectable overlap; configurations.; The interface to activate the new checking method is the same as before:; gGeoManager->CheckOverlaps(ovlp);; where ovlp is the overlap tolerance (default 0.01 cm); An example of overlap that was not detected before but is now:. ",MatchSource.DOCS,geom/doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/geom/doc/v522/index.html:338,Modifiability,config,configurations,338,". Geometry; Improvement of the standard overlap checker. The previous method was checking points on the visual mesh of volume shape against all possible overlapping partners.; The new method checks more points (currently 1000, in future configurable) on the volume outline or surface. This minimizes the number of non-detectable overlap; configurations.; The interface to activate the new checking method is the same as before:; gGeoManager->CheckOverlaps(ovlp);; where ovlp is the overlap tolerance (default 0.01 cm); An example of overlap that was not detected before but is now:. ",MatchSource.DOCS,geom/doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/geom/doc/v522/index.html:318,Safety,detect,detectable,318,". Geometry; Improvement of the standard overlap checker. The previous method was checking points on the visual mesh of volume shape against all possible overlapping partners.; The new method checks more points (currently 1000, in future configurable) on the volume outline or surface. This minimizes the number of non-detectable overlap; configurations.; The interface to activate the new checking method is the same as before:; gGeoManager->CheckOverlaps(ovlp);; where ovlp is the overlap tolerance (default 0.01 cm); An example of overlap that was not detected before but is now:. ",MatchSource.DOCS,geom/doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/geom/doc/v522/index.html:554,Safety,detect,detected,554,". Geometry; Improvement of the standard overlap checker. The previous method was checking points on the visual mesh of volume shape against all possible overlapping partners.; The new method checks more points (currently 1000, in future configurable) on the volume outline or surface. This minimizes the number of non-detectable overlap; configurations.; The interface to activate the new checking method is the same as before:; gGeoManager->CheckOverlaps(ovlp);; where ovlp is the overlap tolerance (default 0.01 cm); An example of overlap that was not detected before but is now:. ",MatchSource.DOCS,geom/doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/geom/doc/v528/index.html:871,Deployability,update,updated,871,". Geometry; . TGeoElement, TGeoIsotope ; New class TGeoIsotope inside the file TGeoElement.h/.cxx. This is done for compatibility with GEANT4 isotopes and elements. TGeoElement class now contains the number of nucleons and an array of possible isotopes (as in GEANT4). One can make isotopes of the same element:. TGeoIsotope *iso1 = new TGeoIsotope(""U235"", Z,N1,A1);. TGeoIsotope *iso2 = new TGeoIsotope(""U238"", Z,N2,A2);. then an element containing the 2 isotopes: . TGeoElement *elem = new TGeoElement(""U_nat"", ""U"", 2); elem->AddIsotope(iso1,abundance1_percent); elem->AddIsotope(iso2,abundance2_percent);. Then one can make normal materials based on such elements. Added getters for isotopes from elements, as well as an isotope table within TGeoElementTable with search method by name (and not supporting several isotopes with the same name). Existing material table updated to use the number of nucleons. Everything backward compatible. TGDMLParser ; Several fixes and support for new features:; Support for reading isotopes via the GDML parser. Interaction length now automatically computed using the algorithm from GEANT4. Fixed parsing of composite shapes. G4Ellipsoid is now supported in conversions.; ",MatchSource.DOCS,geom/doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v520/index.html:3887,Availability,error,error,3887," Juillot. TPad. In batch mode it was not possible to generate a bitmap file (gif,; jpeg etc..) with a filename containing "")"",; ""("", ""]"" or ""["".; The Tickx and Tixky attributes were not saved properly by SavePrimitive.; PaintPolyLineNDC was not working in case of PS output.; In ExecuteEvent. A problem was found Mathieu de Naurois; <denauroi@in2p3.fr>.; It can be reproduced by the following sequence:; ; do TCanvas c; do c->Divide(2,2); show the toolbar; click L to enter text; click on a pad to enter text; move the mouse without releasing the button.; entex text; hit Enter.; ; Before this bug fix, the canvas position changed on ""hit Enter"".; On a Windows dual core machine, the WaitPrimitive call returned; immediately. Miscellaneous; TView3D. Protection was missing in ctors in case gPad does not exits.; Allow interactive zooming on histograms painted with option CONT4. TMultiGraph. Joining two multigraphs using In; TMultiGraph::Add(TMultiGraph*,Option_t *) method issued the error:; ; Error in <TList::AddLast>: argument is a null pointer; ; Despite of the message the joined multigraph was correct.; Internally the loop on the input multigraph was one step too long.; Implement the fit parameters painting. Histograms painting. For 2D histograms, when all the bins' contents were negative, the boxes; were not painted correctly.; For 3D histograms painted using OpenGL (drawing options ""glbox"" and; ""glbox1"") a minus sign on negative bins is added in order to; distinguish them from positive bins.; ; In THistPainter::PaintH3 the palette is drawn in case of option; COLZ. This is useful when a TTree 4D plot is painted with that option.; ; This image has been prodiced with the command:; ntuple->Draw(""px:py:pz:px*px"","""",""COLZ"");. TGraph2D. The operator ""="" was not correct. TGraph. Protection added in PaintPolyLineHatches (division by zero in some; cases).; All the graphical code has been moved from the TGraph classes to; TGraphPainter. TGraphPolar. Protection added in case a GraphPol",MatchSource.DOCS,graf2d/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v520/index.html:3897,Availability,Error,Error,3897," Juillot. TPad. In batch mode it was not possible to generate a bitmap file (gif,; jpeg etc..) with a filename containing "")"",; ""("", ""]"" or ""["".; The Tickx and Tixky attributes were not saved properly by SavePrimitive.; PaintPolyLineNDC was not working in case of PS output.; In ExecuteEvent. A problem was found Mathieu de Naurois; <denauroi@in2p3.fr>.; It can be reproduced by the following sequence:; ; do TCanvas c; do c->Divide(2,2); show the toolbar; click L to enter text; click on a pad to enter text; move the mouse without releasing the button.; entex text; hit Enter.; ; Before this bug fix, the canvas position changed on ""hit Enter"".; On a Windows dual core machine, the WaitPrimitive call returned; immediately. Miscellaneous; TView3D. Protection was missing in ctors in case gPad does not exits.; Allow interactive zooming on histograms painted with option CONT4. TMultiGraph. Joining two multigraphs using In; TMultiGraph::Add(TMultiGraph*,Option_t *) method issued the error:; ; Error in <TList::AddLast>: argument is a null pointer; ; Despite of the message the joined multigraph was correct.; Internally the loop on the input multigraph was one step too long.; Implement the fit parameters painting. Histograms painting. For 2D histograms, when all the bins' contents were negative, the boxes; were not painted correctly.; For 3D histograms painted using OpenGL (drawing options ""glbox"" and; ""glbox1"") a minus sign on negative bins is added in order to; distinguish them from positive bins.; ; In THistPainter::PaintH3 the palette is drawn in case of option; COLZ. This is useful when a TTree 4D plot is painted with that option.; ; This image has been prodiced with the command:; ntuple->Draw(""px:py:pz:px*px"","""",""COLZ"");. TGraph2D. The operator ""="" was not correct. TGraph. Protection added in PaintPolyLineHatches (division by zero in some; cases).; All the graphical code has been moved from the TGraph classes to; TGraphPainter. TGraphPolar. Protection added in case a GraphPol",MatchSource.DOCS,graf2d/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v520/index.html:4944,Availability,error,errors,4944,"::AddLast>: argument is a null pointer; ; Despite of the message the joined multigraph was correct.; Internally the loop on the input multigraph was one step too long.; Implement the fit parameters painting. Histograms painting. For 2D histograms, when all the bins' contents were negative, the boxes; were not painted correctly.; For 3D histograms painted using OpenGL (drawing options ""glbox"" and; ""glbox1"") a minus sign on negative bins is added in order to; distinguish them from positive bins.; ; In THistPainter::PaintH3 the palette is drawn in case of option; COLZ. This is useful when a TTree 4D plot is painted with that option.; ; This image has been prodiced with the command:; ntuple->Draw(""px:py:pz:px*px"","""",""COLZ"");. TGraph2D. The operator ""="" was not correct. TGraph. Protection added in PaintPolyLineHatches (division by zero in some; cases).; All the graphical code has been moved from the TGraph classes to; TGraphPainter. TGraphPolar. Protection added in case a GraphPolar is plotted with option; ""E"" but has no errors defined.; The markers clipping (in TGraphPainter) was wrong in case of TGraphPolar.; The constructor's parameters naming was wrong.; Documentation: better example (easier to understand).; In the constructors some data members were not initialized. TPie. Add the TPie::GetEntries() method that return the number slices.; (Guido Volpi).; Implement Editors for TPie and TPieSlice (Guido Volpi). TPaletteAxis. Attributes are now accessible in the context menu.; (requested by Mathieu de Naurois <denauroi@in2p3.fr>). TPolyLine. Implement the possibility to draw TPolyLine in NDC coordinates; (it was partially done but the code was not used). Documentation. Better comments in THelix.; Option ""FUNC"" was not documented in THistPainter..; Update the help for animated gif generation in TPad.; Update TAttMarker documentation about the non scalable markers.; Re-writting of the THistPainter documentation. TCutG. The graphical cuts applied on histograms did not work w",MatchSource.DOCS,graf2d/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v520/index.html:5685,Deployability,Update,Update,5685,"om positive bins.; ; In THistPainter::PaintH3 the palette is drawn in case of option; COLZ. This is useful when a TTree 4D plot is painted with that option.; ; This image has been prodiced with the command:; ntuple->Draw(""px:py:pz:px*px"","""",""COLZ"");. TGraph2D. The operator ""="" was not correct. TGraph. Protection added in PaintPolyLineHatches (division by zero in some; cases).; All the graphical code has been moved from the TGraph classes to; TGraphPainter. TGraphPolar. Protection added in case a GraphPolar is plotted with option; ""E"" but has no errors defined.; The markers clipping (in TGraphPainter) was wrong in case of TGraphPolar.; The constructor's parameters naming was wrong.; Documentation: better example (easier to understand).; In the constructors some data members were not initialized. TPie. Add the TPie::GetEntries() method that return the number slices.; (Guido Volpi).; Implement Editors for TPie and TPieSlice (Guido Volpi). TPaletteAxis. Attributes are now accessible in the context menu.; (requested by Mathieu de Naurois <denauroi@in2p3.fr>). TPolyLine. Implement the possibility to draw TPolyLine in NDC coordinates; (it was partially done but the code was not used). Documentation. Better comments in THelix.; Option ""FUNC"" was not documented in THistPainter..; Update the help for animated gif generation in TPad.; Update TAttMarker documentation about the non scalable markers.; Re-writting of the THistPainter documentation. TCutG. The graphical cuts applied on histograms did not work when the cut name; contained a mix of lower and upper case characters. This problem occured; because the option used to draw an histogram was always converted into; lower case before begin stored in a pad (in Draw and DrawCopy). Now in; Draw() and DrawCopy() the AppendPad() procedure is called with the option; string not converted in lower; case. QT; Version 3 of QT is not supported anymore. If you install ROOT with the QT option; you must have QT version 4 already installed. ",MatchSource.DOCS,graf2d/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v520/index.html:5739,Deployability,Update,Update,5739,"om positive bins.; ; In THistPainter::PaintH3 the palette is drawn in case of option; COLZ. This is useful when a TTree 4D plot is painted with that option.; ; This image has been prodiced with the command:; ntuple->Draw(""px:py:pz:px*px"","""",""COLZ"");. TGraph2D. The operator ""="" was not correct. TGraph. Protection added in PaintPolyLineHatches (division by zero in some; cases).; All the graphical code has been moved from the TGraph classes to; TGraphPainter. TGraphPolar. Protection added in case a GraphPolar is plotted with option; ""E"" but has no errors defined.; The markers clipping (in TGraphPainter) was wrong in case of TGraphPolar.; The constructor's parameters naming was wrong.; Documentation: better example (easier to understand).; In the constructors some data members were not initialized. TPie. Add the TPie::GetEntries() method that return the number slices.; (Guido Volpi).; Implement Editors for TPie and TPieSlice (Guido Volpi). TPaletteAxis. Attributes are now accessible in the context menu.; (requested by Mathieu de Naurois <denauroi@in2p3.fr>). TPolyLine. Implement the possibility to draw TPolyLine in NDC coordinates; (it was partially done but the code was not used). Documentation. Better comments in THelix.; Option ""FUNC"" was not documented in THistPainter..; Update the help for animated gif generation in TPad.; Update TAttMarker documentation about the non scalable markers.; Re-writting of the THistPainter documentation. TCutG. The graphical cuts applied on histograms did not work when the cut name; contained a mix of lower and upper case characters. This problem occured; because the option used to draw an histogram was always converted into; lower case before begin stored in a pad (in Draw and DrawCopy). Now in; Draw() and DrawCopy() the AppendPad() procedure is called with the option; string not converted in lower; case. QT; Version 3 of QT is not supported anymore. If you install ROOT with the QT option; you must have QT version 4 already installed. ",MatchSource.DOCS,graf2d/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v520/index.html:6314,Deployability,install,install,6314,"om positive bins.; ; In THistPainter::PaintH3 the palette is drawn in case of option; COLZ. This is useful when a TTree 4D plot is painted with that option.; ; This image has been prodiced with the command:; ntuple->Draw(""px:py:pz:px*px"","""",""COLZ"");. TGraph2D. The operator ""="" was not correct. TGraph. Protection added in PaintPolyLineHatches (division by zero in some; cases).; All the graphical code has been moved from the TGraph classes to; TGraphPainter. TGraphPolar. Protection added in case a GraphPolar is plotted with option; ""E"" but has no errors defined.; The markers clipping (in TGraphPainter) was wrong in case of TGraphPolar.; The constructor's parameters naming was wrong.; Documentation: better example (easier to understand).; In the constructors some data members were not initialized. TPie. Add the TPie::GetEntries() method that return the number slices.; (Guido Volpi).; Implement Editors for TPie and TPieSlice (Guido Volpi). TPaletteAxis. Attributes are now accessible in the context menu.; (requested by Mathieu de Naurois <denauroi@in2p3.fr>). TPolyLine. Implement the possibility to draw TPolyLine in NDC coordinates; (it was partially done but the code was not used). Documentation. Better comments in THelix.; Option ""FUNC"" was not documented in THistPainter..; Update the help for animated gif generation in TPad.; Update TAttMarker documentation about the non scalable markers.; Re-writting of the THistPainter documentation. TCutG. The graphical cuts applied on histograms did not work when the cut name; contained a mix of lower and upper case characters. This problem occured; because the option used to draw an histogram was always converted into; lower case before begin stored in a pad (in Draw and DrawCopy). Now in; Draw() and DrawCopy() the AppendPad() procedure is called with the option; string not converted in lower; case. QT; Version 3 of QT is not supported anymore. If you install ROOT with the QT option; you must have QT version 4 already installed. ",MatchSource.DOCS,graf2d/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v520/index.html:6382,Deployability,install,installed,6382,"om positive bins.; ; In THistPainter::PaintH3 the palette is drawn in case of option; COLZ. This is useful when a TTree 4D plot is painted with that option.; ; This image has been prodiced with the command:; ntuple->Draw(""px:py:pz:px*px"","""",""COLZ"");. TGraph2D. The operator ""="" was not correct. TGraph. Protection added in PaintPolyLineHatches (division by zero in some; cases).; All the graphical code has been moved from the TGraph classes to; TGraphPainter. TGraphPolar. Protection added in case a GraphPolar is plotted with option; ""E"" but has no errors defined.; The markers clipping (in TGraphPainter) was wrong in case of TGraphPolar.; The constructor's parameters naming was wrong.; Documentation: better example (easier to understand).; In the constructors some data members were not initialized. TPie. Add the TPie::GetEntries() method that return the number slices.; (Guido Volpi).; Implement Editors for TPie and TPieSlice (Guido Volpi). TPaletteAxis. Attributes are now accessible in the context menu.; (requested by Mathieu de Naurois <denauroi@in2p3.fr>). TPolyLine. Implement the possibility to draw TPolyLine in NDC coordinates; (it was partially done but the code was not used). Documentation. Better comments in THelix.; Option ""FUNC"" was not documented in THistPainter..; Update the help for animated gif generation in TPad.; Update TAttMarker documentation about the non scalable markers.; Re-writting of the THistPainter documentation. TCutG. The graphical cuts applied on histograms did not work when the cut name; contained a mix of lower and upper case characters. This problem occured; because the option used to draw an histogram was always converted into; lower case before begin stored in a pad (in Draw and DrawCopy). Now in; Draw() and DrawCopy() the AppendPad() procedure is called with the option; string not converted in lower; case. QT; Version 3 of QT is not supported anymore. If you install ROOT with the QT option; you must have QT version 4 already installed. ",MatchSource.DOCS,graf2d/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v520/index.html:3969,Integrability,message,message,3969," Juillot. TPad. In batch mode it was not possible to generate a bitmap file (gif,; jpeg etc..) with a filename containing "")"",; ""("", ""]"" or ""["".; The Tickx and Tixky attributes were not saved properly by SavePrimitive.; PaintPolyLineNDC was not working in case of PS output.; In ExecuteEvent. A problem was found Mathieu de Naurois; <denauroi@in2p3.fr>.; It can be reproduced by the following sequence:; ; do TCanvas c; do c->Divide(2,2); show the toolbar; click L to enter text; click on a pad to enter text; move the mouse without releasing the button.; entex text; hit Enter.; ; Before this bug fix, the canvas position changed on ""hit Enter"".; On a Windows dual core machine, the WaitPrimitive call returned; immediately. Miscellaneous; TView3D. Protection was missing in ctors in case gPad does not exits.; Allow interactive zooming on histograms painted with option CONT4. TMultiGraph. Joining two multigraphs using In; TMultiGraph::Add(TMultiGraph*,Option_t *) method issued the error:; ; Error in <TList::AddLast>: argument is a null pointer; ; Despite of the message the joined multigraph was correct.; Internally the loop on the input multigraph was one step too long.; Implement the fit parameters painting. Histograms painting. For 2D histograms, when all the bins' contents were negative, the boxes; were not painted correctly.; For 3D histograms painted using OpenGL (drawing options ""glbox"" and; ""glbox1"") a minus sign on negative bins is added in order to; distinguish them from positive bins.; ; In THistPainter::PaintH3 the palette is drawn in case of option; COLZ. This is useful when a TTree 4D plot is painted with that option.; ; This image has been prodiced with the command:; ntuple->Draw(""px:py:pz:px*px"","""",""COLZ"");. TGraph2D. The operator ""="" was not correct. TGraph. Protection added in PaintPolyLineHatches (division by zero in some; cases).; All the graphical code has been moved from the TGraph classes to; TGraphPainter. TGraphPolar. Protection added in case a GraphPol",MatchSource.DOCS,graf2d/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v520/index.html:5785,Performance,scalab,scalable,5785,"om positive bins.; ; In THistPainter::PaintH3 the palette is drawn in case of option; COLZ. This is useful when a TTree 4D plot is painted with that option.; ; This image has been prodiced with the command:; ntuple->Draw(""px:py:pz:px*px"","""",""COLZ"");. TGraph2D. The operator ""="" was not correct. TGraph. Protection added in PaintPolyLineHatches (division by zero in some; cases).; All the graphical code has been moved from the TGraph classes to; TGraphPainter. TGraphPolar. Protection added in case a GraphPolar is plotted with option; ""E"" but has no errors defined.; The markers clipping (in TGraphPainter) was wrong in case of TGraphPolar.; The constructor's parameters naming was wrong.; Documentation: better example (easier to understand).; In the constructors some data members were not initialized. TPie. Add the TPie::GetEntries() method that return the number slices.; (Guido Volpi).; Implement Editors for TPie and TPieSlice (Guido Volpi). TPaletteAxis. Attributes are now accessible in the context menu.; (requested by Mathieu de Naurois <denauroi@in2p3.fr>). TPolyLine. Implement the possibility to draw TPolyLine in NDC coordinates; (it was partially done but the code was not used). Documentation. Better comments in THelix.; Option ""FUNC"" was not documented in THistPainter..; Update the help for animated gif generation in TPad.; Update TAttMarker documentation about the non scalable markers.; Re-writting of the THistPainter documentation. TCutG. The graphical cuts applied on histograms did not work when the cut name; contained a mix of lower and upper case characters. This problem occured; because the option used to draw an histogram was always converted into; lower case before begin stored in a pad (in Draw and DrawCopy). Now in; Draw() and DrawCopy() the AppendPad() procedure is called with the option; string not converted in lower; case. QT; Version 3 of QT is not supported anymore. If you install ROOT with the QT option; you must have QT version 4 already installed. ",MatchSource.DOCS,graf2d/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v520/index.html:5376,Security,access,accessible,5376,"uish them from positive bins.; ; In THistPainter::PaintH3 the palette is drawn in case of option; COLZ. This is useful when a TTree 4D plot is painted with that option.; ; This image has been prodiced with the command:; ntuple->Draw(""px:py:pz:px*px"","""",""COLZ"");. TGraph2D. The operator ""="" was not correct. TGraph. Protection added in PaintPolyLineHatches (division by zero in some; cases).; All the graphical code has been moved from the TGraph classes to; TGraphPainter. TGraphPolar. Protection added in case a GraphPolar is plotted with option; ""E"" but has no errors defined.; The markers clipping (in TGraphPainter) was wrong in case of TGraphPolar.; The constructor's parameters naming was wrong.; Documentation: better example (easier to understand).; In the constructors some data members were not initialized. TPie. Add the TPie::GetEntries() method that return the number slices.; (Guido Volpi).; Implement Editors for TPie and TPieSlice (Guido Volpi). TPaletteAxis. Attributes are now accessible in the context menu.; (requested by Mathieu de Naurois <denauroi@in2p3.fr>). TPolyLine. Implement the possibility to draw TPolyLine in NDC coordinates; (it was partially done but the code was not used). Documentation. Better comments in THelix.; Option ""FUNC"" was not documented in THistPainter..; Update the help for animated gif generation in TPad.; Update TAttMarker documentation about the non scalable markers.; Re-writting of the THistPainter documentation. TCutG. The graphical cuts applied on histograms did not work when the cut name; contained a mix of lower and upper case characters. This problem occured; because the option used to draw an histogram was always converted into; lower case before begin stored in a pad (in Draw and DrawCopy). Now in; Draw() and DrawCopy() the AppendPad() procedure is called with the option; string not converted in lower; case. QT; Version 3 of QT is not supported anymore. If you install ROOT with the QT option; you must have QT version 4 already ",MatchSource.DOCS,graf2d/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v520/index.html:304,Usability,simpl,simpler,304,". TASImage - libAfterImage library; TASImage. Protection added in DrawCircle. Problem seen with gcc version 4.2.3.; Fixed byte swapping issues. With that fix the pictures generated in batch; mode on Solaris and Mac are now correct (cf stressGraphics -k).; The Alpha Blending code has been rewritten in a simpler way in order to; work on linux with gcc 4.2.3. Here also the pictures generated in batch; mode were wrong.; In FillRectangleInternal when the rectangle to be drawn had its width or; its height equal to 0, they were set to the current image width or height.; This was not a good solution because this obscured completely the picture.; In particular, some markers being drawn with a filled rectangle, they; obscured the picture when they were really small because in that case the; rectangle drawn had width=height=0. Now, when a rectangle has its width or; height equal to 0 it is set to 1 (pixel) with makes sense because; ""0"" means ""tiny"" not ""huge"" ...; New method to retrieve the last zoom position on an image:; ; void TASImage::GetZoomPosition(UInt_t &x, UInt_t &y, UInt_t &w, UInt_t &h) const; ; This is useful when the zoom has been done interactively using the mouse.; In batch, when a picture was saved in a binary file (gif for instance) from; an image containing more than one pad, only the first pad was saved. The; following macro demonstrates the problem: ccc2.gif was wrong compared to; ccc1.gif. {; gROOT->SetBatch();; TCanvas *c = new TCanvas;; c->Divide(1,2);; TH1F *h = new TH1F(""gaus"", ""gaus"", 100, -5, 5);; h->FillRandom(""gaus"", 10000);; c->cd(1); h->Draw();; c->cd(2); h->Draw(""c*"");; c->Print(""ccc1.gif"");; TImage *img = TImage::Create();; img->FromPad(c);; img->WriteImage(""ccc2.gif"");; }. libAfterImage. There no need anymore for the special version we had up to now. The; modifications we needed have been introduced in the official version.; This version also fixes the color problem on BigEndian machines.; On these machines (Mac and Solaris for instance) the c",MatchSource.DOCS,graf2d/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v520/index.html:2748,Usability,simpl,simplified,2748,"need anymore for the special version we had up to now. The; modifications we needed have been introduced in the official version.; This version also fixes the color problem on BigEndian machines.; On these machines (Mac and Solaris for instance) the color of the jpeg; and png images saved from the ""File"" menu in a TCanvas were; completely wrong.; Addition for image pixelization and color to alpha functionality.; Fixed bunch of compilation bugs showing up on old systems. Graphical Output; PDF. Text rotated at 270 degrees was not correct. The PDF rotation matrix; contained very small values close to 0 instead of 0. Acrobat reader; produced a wrong output and also printed result was wrong.; ""gv"" worked. PostScript. The character ""@"" could not be printed in PostScript files.; Change the Page numbering to make it appear nicer in postcript viewers; like ""gv"". It is compliant with the Adobe Postscript Document; Structuring Conventions (easily found on the web).; The fonts encoding has been simplified (use ISOLatin1Encoding). The new; way allows to print any character with accent etc.. like on the screen.; The new encoding was done by Pierre Juillot. TPad. In batch mode it was not possible to generate a bitmap file (gif,; jpeg etc..) with a filename containing "")"",; ""("", ""]"" or ""["".; The Tickx and Tixky attributes were not saved properly by SavePrimitive.; PaintPolyLineNDC was not working in case of PS output.; In ExecuteEvent. A problem was found Mathieu de Naurois; <denauroi@in2p3.fr>.; It can be reproduced by the following sequence:; ; do TCanvas c; do c->Divide(2,2); show the toolbar; click L to enter text; click on a pad to enter text; move the mouse without releasing the button.; entex text; hit Enter.; ; Before this bug fix, the canvas position changed on ""hit Enter"".; On a Windows dual core machine, the WaitPrimitive call returned; immediately. Miscellaneous; TView3D. Protection was missing in ctors in case gPad does not exits.; Allow interactive zooming on histogram",MatchSource.DOCS,graf2d/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v520/index.html:5272,Usability,Guid,Guido,5272,"enGL (drawing options ""glbox"" and; ""glbox1"") a minus sign on negative bins is added in order to; distinguish them from positive bins.; ; In THistPainter::PaintH3 the palette is drawn in case of option; COLZ. This is useful when a TTree 4D plot is painted with that option.; ; This image has been prodiced with the command:; ntuple->Draw(""px:py:pz:px*px"","""",""COLZ"");. TGraph2D. The operator ""="" was not correct. TGraph. Protection added in PaintPolyLineHatches (division by zero in some; cases).; All the graphical code has been moved from the TGraph classes to; TGraphPainter. TGraphPolar. Protection added in case a GraphPolar is plotted with option; ""E"" but has no errors defined.; The markers clipping (in TGraphPainter) was wrong in case of TGraphPolar.; The constructor's parameters naming was wrong.; Documentation: better example (easier to understand).; In the constructors some data members were not initialized. TPie. Add the TPie::GetEntries() method that return the number slices.; (Guido Volpi).; Implement Editors for TPie and TPieSlice (Guido Volpi). TPaletteAxis. Attributes are now accessible in the context menu.; (requested by Mathieu de Naurois <denauroi@in2p3.fr>). TPolyLine. Implement the possibility to draw TPolyLine in NDC coordinates; (it was partially done but the code was not used). Documentation. Better comments in THelix.; Option ""FUNC"" was not documented in THistPainter..; Update the help for animated gif generation in TPad.; Update TAttMarker documentation about the non scalable markers.; Re-writting of the THistPainter documentation. TCutG. The graphical cuts applied on histograms did not work when the cut name; contained a mix of lower and upper case characters. This problem occured; because the option used to draw an histogram was always converted into; lower case before begin stored in a pad (in Draw and DrawCopy). Now in; Draw() and DrawCopy() the AppendPad() procedure is called with the option; string not converted in lower; case. QT; Version 3 of",MatchSource.DOCS,graf2d/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v520/index.html:5329,Usability,Guid,Guido,5329,"glbox1"") a minus sign on negative bins is added in order to; distinguish them from positive bins.; ; In THistPainter::PaintH3 the palette is drawn in case of option; COLZ. This is useful when a TTree 4D plot is painted with that option.; ; This image has been prodiced with the command:; ntuple->Draw(""px:py:pz:px*px"","""",""COLZ"");. TGraph2D. The operator ""="" was not correct. TGraph. Protection added in PaintPolyLineHatches (division by zero in some; cases).; All the graphical code has been moved from the TGraph classes to; TGraphPainter. TGraphPolar. Protection added in case a GraphPolar is plotted with option; ""E"" but has no errors defined.; The markers clipping (in TGraphPainter) was wrong in case of TGraphPolar.; The constructor's parameters naming was wrong.; Documentation: better example (easier to understand).; In the constructors some data members were not initialized. TPie. Add the TPie::GetEntries() method that return the number slices.; (Guido Volpi).; Implement Editors for TPie and TPieSlice (Guido Volpi). TPaletteAxis. Attributes are now accessible in the context menu.; (requested by Mathieu de Naurois <denauroi@in2p3.fr>). TPolyLine. Implement the possibility to draw TPolyLine in NDC coordinates; (it was partially done but the code was not used). Documentation. Better comments in THelix.; Option ""FUNC"" was not documented in THistPainter..; Update the help for animated gif generation in TPad.; Update TAttMarker documentation about the non scalable markers.; Re-writting of the THistPainter documentation. TCutG. The graphical cuts applied on histograms did not work when the cut name; contained a mix of lower and upper case characters. This problem occured; because the option used to draw an histogram was always converted into; lower case before begin stored in a pad (in Draw and DrawCopy). Now in; Draw() and DrawCopy() the AppendPad() procedure is called with the option; string not converted in lower; case. QT; Version 3 of QT is not supported anymore. If you ",MatchSource.DOCS,graf2d/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v522/index.html:2957,Availability,error,error,2957,").; Images can be saved (canvas->Print) from within threads. Miscellaneous; TColor. CreateGradientColorTable now calls; TColor::InitializeColors(). This is needed because is some cases; TColor::InitializeColors() has not been called before and the; following erro messages were issued:; ; Warning in : color 1 already defined; Warning in : color 2 already defined; Warning in : color 3 already defined; [...]; ; TColor::AsHexString was not returning the proper value in case; of gray scale mode. Before this change gray scale mode did not work in; pictures generated in batch. TLatex. TLatex in now centered vertically like TText. When centered vertically, TLatex; was not aligned on the control box. Some additionnal tiny adjustment of one; pixel was also needed in order to look better when the text is enclosed in a box; like in TPaveText. TPaveText. The vertical text aligment is now done using the text alignment attributes; instead of the trick used before. Histograms' titles are look much better; centered vertically after this modification. TGraph; TGraph::DrawPanel is now implemented. TGraphErrors. The drawing option ""[]"" has been change to ""||"". The new; option ""[]"" is the same as ""||"" except that some ticks are; drawn at the end of the horizontal and vertical lines at the end of the error; bars. This new way of drawing the option ""[]"" shows better to which error; bar the additional tick marks belong. The following example, which has been; provided by Thomas Ullrich , shows it clearly. TGraphPolargram.cxx. An extra empty canvas was created each time a TGraphPolar was painted; in ""Not Editable"" mode. TPad. Improvments in TPad::BuildLegend: If the pad contains some; TMultiGraph or THStack the individual graphs or histograms; in them are automatically added to the TLegend produced by; TPad::BuildLegend. TGaxis. When drawn with the option; X+ or Y+ the histogram axis were wrong in; case of alphanumeric labels. The tick marks were in the right; place but the labels were not. ",MatchSource.DOCS,graf2d/doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v522/index.html:3032,Availability,error,error,3032,").; Images can be saved (canvas->Print) from within threads. Miscellaneous; TColor. CreateGradientColorTable now calls; TColor::InitializeColors(). This is needed because is some cases; TColor::InitializeColors() has not been called before and the; following erro messages were issued:; ; Warning in : color 1 already defined; Warning in : color 2 already defined; Warning in : color 3 already defined; [...]; ; TColor::AsHexString was not returning the proper value in case; of gray scale mode. Before this change gray scale mode did not work in; pictures generated in batch. TLatex. TLatex in now centered vertically like TText. When centered vertically, TLatex; was not aligned on the control box. Some additionnal tiny adjustment of one; pixel was also needed in order to look better when the text is enclosed in a box; like in TPaveText. TPaveText. The vertical text aligment is now done using the text alignment attributes; instead of the trick used before. Histograms' titles are look much better; centered vertically after this modification. TGraph; TGraph::DrawPanel is now implemented. TGraphErrors. The drawing option ""[]"" has been change to ""||"". The new; option ""[]"" is the same as ""||"" except that some ticks are; drawn at the end of the horizontal and vertical lines at the end of the error; bars. This new way of drawing the option ""[]"" shows better to which error; bar the additional tick marks belong. The following example, which has been; provided by Thomas Ullrich , shows it clearly. TGraphPolargram.cxx. An extra empty canvas was created each time a TGraphPolar was painted; in ""Not Editable"" mode. TPad. Improvments in TPad::BuildLegend: If the pad contains some; TMultiGraph or THStack the individual graphs or histograms; in them are automatically added to the TLegend produced by; TPad::BuildLegend. TGaxis. When drawn with the option; X+ or Y+ the histogram axis were wrong in; case of alphanumeric labels. The tick marks were in the right; place but the labels were not. ",MatchSource.DOCS,graf2d/doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v522/index.html:691,Deployability,release,release,691,". Graphical Output; PDF. The PDF file produced by the following macro was not readable by Acrobat; reader:; ; {; TCanvas* can = new TCanvas(""can"");; double margin = 1e-10;; can->Divide(2, 2, margin, margin);; TH1D* hist = new TH1D(""hist"" , """", 1, 0, 1);; hist->Draw();; can->SaveAs(""can.pdf"");; }; ; because Acrobat does not work when a PDF file contains reals with; exponents, which is the cavse with the file ""can.pdf"". This problem is; now fixed. Note that ""can.pdf"" could be read by ""ghostview"" and printed.; PDF file now use the fonts encoding WinAnsiEncoding. This allows; to print any characters with accent etc.. like on the screen. An similar; modification was done in the previous release for PostScript. SVG. Some SVG viewer need a more complete header: ""width"" and; ""height"" attributes; in the svg tag and a ""xml"" tag to start the file.; (Found by Hubert Degaudenzi <Hubert.Degaudenzi@cern.ch>). PostScript. Since the new font endocing (June release) the hyphen was longer than; before. Now fixed.; When drawn with an angle, the ""tilde"" character as an acceent was not; correctly placed in a PostScript file. For instance:. {; TCanvas *c1 = new TCanvas(""c1"", ""c1"",15,49,700,530);; TLatex *tex1 = new TLatex(0.5,0.5,""#tilde{C}"");; tex1->SetTextSize(0.2);; tex1->SetTextAngle(90);; tex1->Draw();; c1->Print(""tilde.ps"");; }. TASImage / libAfterImage. Synchronizing libAfterImage with Sasha'a latest version.; TASImage::Merge (const TImage im, const char op, Int_t x, Int_t y) ; with x and/or y not equal 0 did not clip the overlayed picture correctly.; Make sure a rectangle drawn will TAsimage::DrawRectangle appears; after calling gPad->Modified().; Images can be saved (canvas->Print) from within threads. Miscellaneous; TColor. CreateGradientColorTable now calls; TColor::InitializeColors(). This is needed because is some cases; TColor::InitializeColors() has not been called before and the; following erro messages were issued:; ; Warning in : color 1 already defined; Warning in : colo",MatchSource.DOCS,graf2d/doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v522/index.html:954,Deployability,release,release,954,". Graphical Output; PDF. The PDF file produced by the following macro was not readable by Acrobat; reader:; ; {; TCanvas* can = new TCanvas(""can"");; double margin = 1e-10;; can->Divide(2, 2, margin, margin);; TH1D* hist = new TH1D(""hist"" , """", 1, 0, 1);; hist->Draw();; can->SaveAs(""can.pdf"");; }; ; because Acrobat does not work when a PDF file contains reals with; exponents, which is the cavse with the file ""can.pdf"". This problem is; now fixed. Note that ""can.pdf"" could be read by ""ghostview"" and printed.; PDF file now use the fonts encoding WinAnsiEncoding. This allows; to print any characters with accent etc.. like on the screen. An similar; modification was done in the previous release for PostScript. SVG. Some SVG viewer need a more complete header: ""width"" and; ""height"" attributes; in the svg tag and a ""xml"" tag to start the file.; (Found by Hubert Degaudenzi <Hubert.Degaudenzi@cern.ch>). PostScript. Since the new font endocing (June release) the hyphen was longer than; before. Now fixed.; When drawn with an angle, the ""tilde"" character as an acceent was not; correctly placed in a PostScript file. For instance:. {; TCanvas *c1 = new TCanvas(""c1"", ""c1"",15,49,700,530);; TLatex *tex1 = new TLatex(0.5,0.5,""#tilde{C}"");; tex1->SetTextSize(0.2);; tex1->SetTextAngle(90);; tex1->Draw();; c1->Print(""tilde.ps"");; }. TASImage / libAfterImage. Synchronizing libAfterImage with Sasha'a latest version.; TASImage::Merge (const TImage im, const char op, Int_t x, Int_t y) ; with x and/or y not equal 0 did not clip the overlayed picture correctly.; Make sure a rectangle drawn will TAsimage::DrawRectangle appears; after calling gPad->Modified().; Images can be saved (canvas->Print) from within threads. Miscellaneous; TColor. CreateGradientColorTable now calls; TColor::InitializeColors(). This is needed because is some cases; TColor::InitializeColors() has not been called before and the; following erro messages were issued:; ; Warning in : color 1 already defined; Warning in : colo",MatchSource.DOCS,graf2d/doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v522/index.html:1360,Integrability,Synchroniz,Synchronizing,1360,"the cavse with the file ""can.pdf"". This problem is; now fixed. Note that ""can.pdf"" could be read by ""ghostview"" and printed.; PDF file now use the fonts encoding WinAnsiEncoding. This allows; to print any characters with accent etc.. like on the screen. An similar; modification was done in the previous release for PostScript. SVG. Some SVG viewer need a more complete header: ""width"" and; ""height"" attributes; in the svg tag and a ""xml"" tag to start the file.; (Found by Hubert Degaudenzi <Hubert.Degaudenzi@cern.ch>). PostScript. Since the new font endocing (June release) the hyphen was longer than; before. Now fixed.; When drawn with an angle, the ""tilde"" character as an acceent was not; correctly placed in a PostScript file. For instance:. {; TCanvas *c1 = new TCanvas(""c1"", ""c1"",15,49,700,530);; TLatex *tex1 = new TLatex(0.5,0.5,""#tilde{C}"");; tex1->SetTextSize(0.2);; tex1->SetTextAngle(90);; tex1->Draw();; c1->Print(""tilde.ps"");; }. TASImage / libAfterImage. Synchronizing libAfterImage with Sasha'a latest version.; TASImage::Merge (const TImage im, const char op, Int_t x, Int_t y) ; with x and/or y not equal 0 did not clip the overlayed picture correctly.; Make sure a rectangle drawn will TAsimage::DrawRectangle appears; after calling gPad->Modified().; Images can be saved (canvas->Print) from within threads. Miscellaneous; TColor. CreateGradientColorTable now calls; TColor::InitializeColors(). This is needed because is some cases; TColor::InitializeColors() has not been called before and the; following erro messages were issued:; ; Warning in : color 1 already defined; Warning in : color 2 already defined; Warning in : color 3 already defined; [...]; ; TColor::AsHexString was not returning the proper value in case; of gray scale mode. Before this change gray scale mode did not work in; pictures generated in batch. TLatex. TLatex in now centered vertically like TText. When centered vertically, TLatex; was not aligned on the control box. Some additionnal tiny adjustme",MatchSource.DOCS,graf2d/doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v522/index.html:1921,Integrability,message,messages,1921," font endocing (June release) the hyphen was longer than; before. Now fixed.; When drawn with an angle, the ""tilde"" character as an acceent was not; correctly placed in a PostScript file. For instance:. {; TCanvas *c1 = new TCanvas(""c1"", ""c1"",15,49,700,530);; TLatex *tex1 = new TLatex(0.5,0.5,""#tilde{C}"");; tex1->SetTextSize(0.2);; tex1->SetTextAngle(90);; tex1->Draw();; c1->Print(""tilde.ps"");; }. TASImage / libAfterImage. Synchronizing libAfterImage with Sasha'a latest version.; TASImage::Merge (const TImage im, const char op, Int_t x, Int_t y) ; with x and/or y not equal 0 did not clip the overlayed picture correctly.; Make sure a rectangle drawn will TAsimage::DrawRectangle appears; after calling gPad->Modified().; Images can be saved (canvas->Print) from within threads. Miscellaneous; TColor. CreateGradientColorTable now calls; TColor::InitializeColors(). This is needed because is some cases; TColor::InitializeColors() has not been called before and the; following erro messages were issued:; ; Warning in : color 1 already defined; Warning in : color 2 already defined; Warning in : color 3 already defined; [...]; ; TColor::AsHexString was not returning the proper value in case; of gray scale mode. Before this change gray scale mode did not work in; pictures generated in batch. TLatex. TLatex in now centered vertically like TText. When centered vertically, TLatex; was not aligned on the control box. Some additionnal tiny adjustment of one; pixel was also needed in order to look better when the text is enclosed in a box; like in TPaveText. TPaveText. The vertical text aligment is now done using the text alignment attributes; instead of the trick used before. Histograms' titles are look much better; centered vertically after this modification. TGraph; TGraph::DrawPanel is now implemented. TGraphErrors. The drawing option ""[]"" has been change to ""||"". The new; option ""[]"" is the same as ""||"" except that some ticks are; drawn at the end of the horizontal and vertical ",MatchSource.DOCS,graf2d/doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v522/index.html:3154,Usability,clear,clearly,3154,").; Images can be saved (canvas->Print) from within threads. Miscellaneous; TColor. CreateGradientColorTable now calls; TColor::InitializeColors(). This is needed because is some cases; TColor::InitializeColors() has not been called before and the; following erro messages were issued:; ; Warning in : color 1 already defined; Warning in : color 2 already defined; Warning in : color 3 already defined; [...]; ; TColor::AsHexString was not returning the proper value in case; of gray scale mode. Before this change gray scale mode did not work in; pictures generated in batch. TLatex. TLatex in now centered vertically like TText. When centered vertically, TLatex; was not aligned on the control box. Some additionnal tiny adjustment of one; pixel was also needed in order to look better when the text is enclosed in a box; like in TPaveText. TPaveText. The vertical text aligment is now done using the text alignment attributes; instead of the trick used before. Histograms' titles are look much better; centered vertically after this modification. TGraph; TGraph::DrawPanel is now implemented. TGraphErrors. The drawing option ""[]"" has been change to ""||"". The new; option ""[]"" is the same as ""||"" except that some ticks are; drawn at the end of the horizontal and vertical lines at the end of the error; bars. This new way of drawing the option ""[]"" shows better to which error; bar the additional tick marks belong. The following example, which has been; provided by Thomas Ullrich , shows it clearly. TGraphPolargram.cxx. An extra empty canvas was created each time a TGraphPolar was painted; in ""Not Editable"" mode. TPad. Improvments in TPad::BuildLegend: If the pad contains some; TMultiGraph or THStack the individual graphs or histograms; in them are automatically added to the TLegend produced by; TPad::BuildLegend. TGaxis. When drawn with the option; X+ or Y+ the histogram axis were wrong in; case of alphanumeric labels. The tick marks were in the right; place but the labels were not. ",MatchSource.DOCS,graf2d/doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v524/index.html:543,Availability,error,error,543,". Graphical Output; TASImage / libAfterImage. In TImageDump the way the markers 6 and 7 are drawn; (medium dot and big dot) has been changed to make sure they have; the same size as the one on screen.; Changes in libAfterImage (draw.c & draw.h), TASImage.cxx; and TImageDump.cxx in order to produce nice looking; circular (hollow and solid) markers. Previously the line; used to draw hollow circular markers looked very thick and; the solid ones did not look circular.; Remove the global variable named ""dpy"" in libAfterImage. It produced; an error if a user program used that simple variable name. ""dpy""; was a pointer to a ""Display"". PostScript and PDF. Now, a text with size 0 is not drawn in PDF files. An invalid; PDF file is created if a text with size 0 is produced.; The landscape orientation is now correct in pdf files. gv recognizes; the files as ""Landscape"" and the orientation is not upside down; as it was before (seascape).; In PostScript and PDF files the method DrawPS is used to write; a single (x,y) position.; This case was not treated correctly and, because of that, the PS and PDF; files might contain useless attributes settings. That was only a few; bytes more in the file but they were useless. TLegend. When a object is added ""by name"" in a legend, the; TMultiGraph and THStack present in the current pad; are scanned if an object with this name has not been; found in the pad. Previously the graphs and histograms; were hidden in multi-graphs and histogram-stacks when one; tried to add them by name.; New reference guide. TGaxis. In PaintAxis The option ""U"", for unlabeled axis, was not; implemented in case of alphanumeric axis' labels.; On log-scale TGAxis, with labels having lower values than 1 and ticks marks; set to the positive side, alignement issues seem to come up.; The following example shows four TGAxis drawn respectively with the; following options: RG-, RG+, LG-, LG+. For the RG+ and LG+ options,; the 10E-1 and 10E-2 labels were ill-aligned, showing a sh",MatchSource.DOCS,graf2d/doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v524/index.html:904,Availability,down,down,904,". Graphical Output; TASImage / libAfterImage. In TImageDump the way the markers 6 and 7 are drawn; (medium dot and big dot) has been changed to make sure they have; the same size as the one on screen.; Changes in libAfterImage (draw.c & draw.h), TASImage.cxx; and TImageDump.cxx in order to produce nice looking; circular (hollow and solid) markers. Previously the line; used to draw hollow circular markers looked very thick and; the solid ones did not look circular.; Remove the global variable named ""dpy"" in libAfterImage. It produced; an error if a user program used that simple variable name. ""dpy""; was a pointer to a ""Display"". PostScript and PDF. Now, a text with size 0 is not drawn in PDF files. An invalid; PDF file is created if a text with size 0 is produced.; The landscape orientation is now correct in pdf files. gv recognizes; the files as ""Landscape"" and the orientation is not upside down; as it was before (seascape).; In PostScript and PDF files the method DrawPS is used to write; a single (x,y) position.; This case was not treated correctly and, because of that, the PS and PDF; files might contain useless attributes settings. That was only a few; bytes more in the file but they were useless. TLegend. When a object is added ""by name"" in a legend, the; TMultiGraph and THStack present in the current pad; are scanned if an object with this name has not been; found in the pad. Previously the graphs and histograms; were hidden in multi-graphs and histogram-stacks when one; tried to add them by name.; New reference guide. TGaxis. In PaintAxis The option ""U"", for unlabeled axis, was not; implemented in case of alphanumeric axis' labels.; On log-scale TGAxis, with labels having lower values than 1 and ticks marks; set to the positive side, alignement issues seem to come up.; The following example shows four TGAxis drawn respectively with the; following options: RG-, RG+, LG-, LG+. For the RG+ and LG+ options,; the 10E-1 and 10E-2 labels were ill-aligned, showing a sh",MatchSource.DOCS,graf2d/doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v524/index.html:3447,Availability,redundant,redundant,3447," than 1 and ticks marks; set to the positive side, alignement issues seem to come up.; The following example shows four TGAxis drawn respectively with the; following options: RG-, RG+, LG-, LG+. For the RG+ and LG+ options,; the 10E-1 and 10E-2 labels were ill-aligned, showing a shift to the right; compared to the 1E2, 1E1 and 1 labels.; ; {; c1 = new TCanvas(""c1"",""Examples of Log TGaxis"",10,10,700,500);; c1->Range(-10,-1,10,1);; TGaxis *axis1 = new TGaxis(-7,-0.8,-7,0.8,0.01,100,50510,""RG-"");; axis1->SetTitle(""RG-""); axis1->Draw();; TGaxis *axis2 = new TGaxis(-2,-0.8,-2,0.8,0.01,100,50510,""RG+"");; axis2->SetLabelOffset(-0.04); axis2->SetTitleOffset(-1.5);; axis2->SetTitle(""RG+""); axis2->Draw();; TGaxis *axis3 = new TGaxis(2,-0.8,2,0.8,0.01,100,50510,""LG-"");; axis3->SetLabelOffset(-0.04);; axis3->SetTitle(""LG-""); axis3->Draw();; TGaxis *axis4 = new TGaxis(7,-0.8,7,0.8,0.01,100,50510,""LG+"");; axis4->SetTitleOffset(-1);; axis4->SetTitle(""LG+""); axis4->Draw();; }; ; gStyle.SetStripDecimals(kFALSE) did not work in cases like the; following one:; ; {; gStyle.SetStripDecimals(kFALSE);; gStyle.SetPadLeftMargin(.15);; TGraph graph_freq;; graph_freq.SetPoint(0, 933., 40078879.);; graph_freq.SetPoint(1, 934., 40078966.);; graph_freq.Draw(""A*"");; }; . TCrown. The crown picking did not work.; Improve help. TLatex. The text angle was not taken into account in case the; text was painted in low precision like in:; ; gStyle->SetTitleFont(60,""xy"");; TH1F* h=new TH1F(""foo"", ""bar;#int;#int"", 10, 0, 1);; h->Draw();; ; In that example the Y title was not rotated. TCanvas. A canvas is turned into GL mode only if the; canvas name starts with ""gl"". Before the; ""gl"" string could be anywhere in the name. QtRoot/ libGQt. The redundant Qt3-related code was removed.; The Q3_SUPPORT flag was eliminated.; The plug-in can be used with and without Q3_SUPPORT now.; The code was adjusted to work under the Qt 4.5.x.; Many platform depended (win32) sections; were replaced with the cross-platform code. ",MatchSource.DOCS,graf2d/doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v524/index.html:3648,Integrability,depend,depended,3648," than 1 and ticks marks; set to the positive side, alignement issues seem to come up.; The following example shows four TGAxis drawn respectively with the; following options: RG-, RG+, LG-, LG+. For the RG+ and LG+ options,; the 10E-1 and 10E-2 labels were ill-aligned, showing a shift to the right; compared to the 1E2, 1E1 and 1 labels.; ; {; c1 = new TCanvas(""c1"",""Examples of Log TGaxis"",10,10,700,500);; c1->Range(-10,-1,10,1);; TGaxis *axis1 = new TGaxis(-7,-0.8,-7,0.8,0.01,100,50510,""RG-"");; axis1->SetTitle(""RG-""); axis1->Draw();; TGaxis *axis2 = new TGaxis(-2,-0.8,-2,0.8,0.01,100,50510,""RG+"");; axis2->SetLabelOffset(-0.04); axis2->SetTitleOffset(-1.5);; axis2->SetTitle(""RG+""); axis2->Draw();; TGaxis *axis3 = new TGaxis(2,-0.8,2,0.8,0.01,100,50510,""LG-"");; axis3->SetLabelOffset(-0.04);; axis3->SetTitle(""LG-""); axis3->Draw();; TGaxis *axis4 = new TGaxis(7,-0.8,7,0.8,0.01,100,50510,""LG+"");; axis4->SetTitleOffset(-1);; axis4->SetTitle(""LG+""); axis4->Draw();; }; ; gStyle.SetStripDecimals(kFALSE) did not work in cases like the; following one:; ; {; gStyle.SetStripDecimals(kFALSE);; gStyle.SetPadLeftMargin(.15);; TGraph graph_freq;; graph_freq.SetPoint(0, 933., 40078879.);; graph_freq.SetPoint(1, 934., 40078966.);; graph_freq.Draw(""A*"");; }; . TCrown. The crown picking did not work.; Improve help. TLatex. The text angle was not taken into account in case the; text was painted in low precision like in:; ; gStyle->SetTitleFont(60,""xy"");; TH1F* h=new TH1F(""foo"", ""bar;#int;#int"", 10, 0, 1);; h->Draw();; ; In that example the Y title was not rotated. TCanvas. A canvas is turned into GL mode only if the; canvas name starts with ""gl"". Before the; ""gl"" string could be anywhere in the name. QtRoot/ libGQt. The redundant Qt3-related code was removed.; The Q3_SUPPORT flag was eliminated.; The plug-in can be used with and without Q3_SUPPORT now.; The code was adjusted to work under the Qt 4.5.x.; Many platform depended (win32) sections; were replaced with the cross-platform code. ",MatchSource.DOCS,graf2d/doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v524/index.html:488,Modifiability,variab,variable,488,". Graphical Output; TASImage / libAfterImage. In TImageDump the way the markers 6 and 7 are drawn; (medium dot and big dot) has been changed to make sure they have; the same size as the one on screen.; Changes in libAfterImage (draw.c & draw.h), TASImage.cxx; and TImageDump.cxx in order to produce nice looking; circular (hollow and solid) markers. Previously the line; used to draw hollow circular markers looked very thick and; the solid ones did not look circular.; Remove the global variable named ""dpy"" in libAfterImage. It produced; an error if a user program used that simple variable name. ""dpy""; was a pointer to a ""Display"". PostScript and PDF. Now, a text with size 0 is not drawn in PDF files. An invalid; PDF file is created if a text with size 0 is produced.; The landscape orientation is now correct in pdf files. gv recognizes; the files as ""Landscape"" and the orientation is not upside down; as it was before (seascape).; In PostScript and PDF files the method DrawPS is used to write; a single (x,y) position.; This case was not treated correctly and, because of that, the PS and PDF; files might contain useless attributes settings. That was only a few; bytes more in the file but they were useless. TLegend. When a object is added ""by name"" in a legend, the; TMultiGraph and THStack present in the current pad; are scanned if an object with this name has not been; found in the pad. Previously the graphs and histograms; were hidden in multi-graphs and histogram-stacks when one; tried to add them by name.; New reference guide. TGaxis. In PaintAxis The option ""U"", for unlabeled axis, was not; implemented in case of alphanumeric axis' labels.; On log-scale TGAxis, with labels having lower values than 1 and ticks marks; set to the positive side, alignement issues seem to come up.; The following example shows four TGAxis drawn respectively with the; following options: RG-, RG+, LG-, LG+. For the RG+ and LG+ options,; the 10E-1 and 10E-2 labels were ill-aligned, showing a sh",MatchSource.DOCS,graf2d/doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v524/index.html:584,Modifiability,variab,variable,584,". Graphical Output; TASImage / libAfterImage. In TImageDump the way the markers 6 and 7 are drawn; (medium dot and big dot) has been changed to make sure they have; the same size as the one on screen.; Changes in libAfterImage (draw.c & draw.h), TASImage.cxx; and TImageDump.cxx in order to produce nice looking; circular (hollow and solid) markers. Previously the line; used to draw hollow circular markers looked very thick and; the solid ones did not look circular.; Remove the global variable named ""dpy"" in libAfterImage. It produced; an error if a user program used that simple variable name. ""dpy""; was a pointer to a ""Display"". PostScript and PDF. Now, a text with size 0 is not drawn in PDF files. An invalid; PDF file is created if a text with size 0 is produced.; The landscape orientation is now correct in pdf files. gv recognizes; the files as ""Landscape"" and the orientation is not upside down; as it was before (seascape).; In PostScript and PDF files the method DrawPS is used to write; a single (x,y) position.; This case was not treated correctly and, because of that, the PS and PDF; files might contain useless attributes settings. That was only a few; bytes more in the file but they were useless. TLegend. When a object is added ""by name"" in a legend, the; TMultiGraph and THStack present in the current pad; are scanned if an object with this name has not been; found in the pad. Previously the graphs and histograms; were hidden in multi-graphs and histogram-stacks when one; tried to add them by name.; New reference guide. TGaxis. In PaintAxis The option ""U"", for unlabeled axis, was not; implemented in case of alphanumeric axis' labels.; On log-scale TGAxis, with labels having lower values than 1 and ticks marks; set to the positive side, alignement issues seem to come up.; The following example shows four TGAxis drawn respectively with the; following options: RG-, RG+, LG-, LG+. For the RG+ and LG+ options,; the 10E-1 and 10E-2 labels were ill-aligned, showing a sh",MatchSource.DOCS,graf2d/doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v524/index.html:3529,Modifiability,plug-in,plug-in,3529," than 1 and ticks marks; set to the positive side, alignement issues seem to come up.; The following example shows four TGAxis drawn respectively with the; following options: RG-, RG+, LG-, LG+. For the RG+ and LG+ options,; the 10E-1 and 10E-2 labels were ill-aligned, showing a shift to the right; compared to the 1E2, 1E1 and 1 labels.; ; {; c1 = new TCanvas(""c1"",""Examples of Log TGaxis"",10,10,700,500);; c1->Range(-10,-1,10,1);; TGaxis *axis1 = new TGaxis(-7,-0.8,-7,0.8,0.01,100,50510,""RG-"");; axis1->SetTitle(""RG-""); axis1->Draw();; TGaxis *axis2 = new TGaxis(-2,-0.8,-2,0.8,0.01,100,50510,""RG+"");; axis2->SetLabelOffset(-0.04); axis2->SetTitleOffset(-1.5);; axis2->SetTitle(""RG+""); axis2->Draw();; TGaxis *axis3 = new TGaxis(2,-0.8,2,0.8,0.01,100,50510,""LG-"");; axis3->SetLabelOffset(-0.04);; axis3->SetTitle(""LG-""); axis3->Draw();; TGaxis *axis4 = new TGaxis(7,-0.8,7,0.8,0.01,100,50510,""LG+"");; axis4->SetTitleOffset(-1);; axis4->SetTitle(""LG+""); axis4->Draw();; }; ; gStyle.SetStripDecimals(kFALSE) did not work in cases like the; following one:; ; {; gStyle.SetStripDecimals(kFALSE);; gStyle.SetPadLeftMargin(.15);; TGraph graph_freq;; graph_freq.SetPoint(0, 933., 40078879.);; graph_freq.SetPoint(1, 934., 40078966.);; graph_freq.Draw(""A*"");; }; . TCrown. The crown picking did not work.; Improve help. TLatex. The text angle was not taken into account in case the; text was painted in low precision like in:; ; gStyle->SetTitleFont(60,""xy"");; TH1F* h=new TH1F(""foo"", ""bar;#int;#int"", 10, 0, 1);; h->Draw();; ; In that example the Y title was not rotated. TCanvas. A canvas is turned into GL mode only if the; canvas name starts with ""gl"". Before the; ""gl"" string could be anywhere in the name. QtRoot/ libGQt. The redundant Qt3-related code was removed.; The Q3_SUPPORT flag was eliminated.; The plug-in can be used with and without Q3_SUPPORT now.; The code was adjusted to work under the Qt 4.5.x.; Many platform depended (win32) sections; were replaced with the cross-platform code. ",MatchSource.DOCS,graf2d/doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v524/index.html:3447,Safety,redund,redundant,3447," than 1 and ticks marks; set to the positive side, alignement issues seem to come up.; The following example shows four TGAxis drawn respectively with the; following options: RG-, RG+, LG-, LG+. For the RG+ and LG+ options,; the 10E-1 and 10E-2 labels were ill-aligned, showing a shift to the right; compared to the 1E2, 1E1 and 1 labels.; ; {; c1 = new TCanvas(""c1"",""Examples of Log TGaxis"",10,10,700,500);; c1->Range(-10,-1,10,1);; TGaxis *axis1 = new TGaxis(-7,-0.8,-7,0.8,0.01,100,50510,""RG-"");; axis1->SetTitle(""RG-""); axis1->Draw();; TGaxis *axis2 = new TGaxis(-2,-0.8,-2,0.8,0.01,100,50510,""RG+"");; axis2->SetLabelOffset(-0.04); axis2->SetTitleOffset(-1.5);; axis2->SetTitle(""RG+""); axis2->Draw();; TGaxis *axis3 = new TGaxis(2,-0.8,2,0.8,0.01,100,50510,""LG-"");; axis3->SetLabelOffset(-0.04);; axis3->SetTitle(""LG-""); axis3->Draw();; TGaxis *axis4 = new TGaxis(7,-0.8,7,0.8,0.01,100,50510,""LG+"");; axis4->SetTitleOffset(-1);; axis4->SetTitle(""LG+""); axis4->Draw();; }; ; gStyle.SetStripDecimals(kFALSE) did not work in cases like the; following one:; ; {; gStyle.SetStripDecimals(kFALSE);; gStyle.SetPadLeftMargin(.15);; TGraph graph_freq;; graph_freq.SetPoint(0, 933., 40078879.);; graph_freq.SetPoint(1, 934., 40078966.);; graph_freq.Draw(""A*"");; }; . TCrown. The crown picking did not work.; Improve help. TLatex. The text angle was not taken into account in case the; text was painted in low precision like in:; ; gStyle->SetTitleFont(60,""xy"");; TH1F* h=new TH1F(""foo"", ""bar;#int;#int"", 10, 0, 1);; h->Draw();; ; In that example the Y title was not rotated. TCanvas. A canvas is turned into GL mode only if the; canvas name starts with ""gl"". Before the; ""gl"" string could be anywhere in the name. QtRoot/ libGQt. The redundant Qt3-related code was removed.; The Q3_SUPPORT flag was eliminated.; The plug-in can be used with and without Q3_SUPPORT now.; The code was adjusted to work under the Qt 4.5.x.; Many platform depended (win32) sections; were replaced with the cross-platform code. ",MatchSource.DOCS,graf2d/doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v524/index.html:1670,Testability,log,log-scale,1670,"ated if a text with size 0 is produced.; The landscape orientation is now correct in pdf files. gv recognizes; the files as ""Landscape"" and the orientation is not upside down; as it was before (seascape).; In PostScript and PDF files the method DrawPS is used to write; a single (x,y) position.; This case was not treated correctly and, because of that, the PS and PDF; files might contain useless attributes settings. That was only a few; bytes more in the file but they were useless. TLegend. When a object is added ""by name"" in a legend, the; TMultiGraph and THStack present in the current pad; are scanned if an object with this name has not been; found in the pad. Previously the graphs and histograms; were hidden in multi-graphs and histogram-stacks when one; tried to add them by name.; New reference guide. TGaxis. In PaintAxis The option ""U"", for unlabeled axis, was not; implemented in case of alphanumeric axis' labels.; On log-scale TGAxis, with labels having lower values than 1 and ticks marks; set to the positive side, alignement issues seem to come up.; The following example shows four TGAxis drawn respectively with the; following options: RG-, RG+, LG-, LG+. For the RG+ and LG+ options,; the 10E-1 and 10E-2 labels were ill-aligned, showing a shift to the right; compared to the 1E2, 1E1 and 1 labels.; ; {; c1 = new TCanvas(""c1"",""Examples of Log TGaxis"",10,10,700,500);; c1->Range(-10,-1,10,1);; TGaxis *axis1 = new TGaxis(-7,-0.8,-7,0.8,0.01,100,50510,""RG-"");; axis1->SetTitle(""RG-""); axis1->Draw();; TGaxis *axis2 = new TGaxis(-2,-0.8,-2,0.8,0.01,100,50510,""RG+"");; axis2->SetLabelOffset(-0.04); axis2->SetTitleOffset(-1.5);; axis2->SetTitle(""RG+""); axis2->Draw();; TGaxis *axis3 = new TGaxis(2,-0.8,2,0.8,0.01,100,50510,""LG-"");; axis3->SetLabelOffset(-0.04);; axis3->SetTitle(""LG-""); axis3->Draw();; TGaxis *axis4 = new TGaxis(7,-0.8,7,0.8,0.01,100,50510,""LG+"");; axis4->SetTitleOffset(-1);; axis4->SetTitle(""LG+""); axis4->Draw();; }; ; gStyle.SetStripDecimals(kFALSE) did no",MatchSource.DOCS,graf2d/doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v524/index.html:2099,Testability,Log,Log,2099,"in useless attributes settings. That was only a few; bytes more in the file but they were useless. TLegend. When a object is added ""by name"" in a legend, the; TMultiGraph and THStack present in the current pad; are scanned if an object with this name has not been; found in the pad. Previously the graphs and histograms; were hidden in multi-graphs and histogram-stacks when one; tried to add them by name.; New reference guide. TGaxis. In PaintAxis The option ""U"", for unlabeled axis, was not; implemented in case of alphanumeric axis' labels.; On log-scale TGAxis, with labels having lower values than 1 and ticks marks; set to the positive side, alignement issues seem to come up.; The following example shows four TGAxis drawn respectively with the; following options: RG-, RG+, LG-, LG+. For the RG+ and LG+ options,; the 10E-1 and 10E-2 labels were ill-aligned, showing a shift to the right; compared to the 1E2, 1E1 and 1 labels.; ; {; c1 = new TCanvas(""c1"",""Examples of Log TGaxis"",10,10,700,500);; c1->Range(-10,-1,10,1);; TGaxis *axis1 = new TGaxis(-7,-0.8,-7,0.8,0.01,100,50510,""RG-"");; axis1->SetTitle(""RG-""); axis1->Draw();; TGaxis *axis2 = new TGaxis(-2,-0.8,-2,0.8,0.01,100,50510,""RG+"");; axis2->SetLabelOffset(-0.04); axis2->SetTitleOffset(-1.5);; axis2->SetTitle(""RG+""); axis2->Draw();; TGaxis *axis3 = new TGaxis(2,-0.8,2,0.8,0.01,100,50510,""LG-"");; axis3->SetLabelOffset(-0.04);; axis3->SetTitle(""LG-""); axis3->Draw();; TGaxis *axis4 = new TGaxis(7,-0.8,7,0.8,0.01,100,50510,""LG+"");; axis4->SetTitleOffset(-1);; axis4->SetTitle(""LG+""); axis4->Draw();; }; ; gStyle.SetStripDecimals(kFALSE) did not work in cases like the; following one:; ; {; gStyle.SetStripDecimals(kFALSE);; gStyle.SetPadLeftMargin(.15);; TGraph graph_freq;; graph_freq.SetPoint(0, 933., 40078879.);; graph_freq.SetPoint(1, 934., 40078966.);; graph_freq.Draw(""A*"");; }; . TCrown. The crown picking did not work.; Improve help. TLatex. The text angle was not taken into account in case the; text was painted in low ",MatchSource.DOCS,graf2d/doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v524/index.html:577,Usability,simpl,simple,577,". Graphical Output; TASImage / libAfterImage. In TImageDump the way the markers 6 and 7 are drawn; (medium dot and big dot) has been changed to make sure they have; the same size as the one on screen.; Changes in libAfterImage (draw.c & draw.h), TASImage.cxx; and TImageDump.cxx in order to produce nice looking; circular (hollow and solid) markers. Previously the line; used to draw hollow circular markers looked very thick and; the solid ones did not look circular.; Remove the global variable named ""dpy"" in libAfterImage. It produced; an error if a user program used that simple variable name. ""dpy""; was a pointer to a ""Display"". PostScript and PDF. Now, a text with size 0 is not drawn in PDF files. An invalid; PDF file is created if a text with size 0 is produced.; The landscape orientation is now correct in pdf files. gv recognizes; the files as ""Landscape"" and the orientation is not upside down; as it was before (seascape).; In PostScript and PDF files the method DrawPS is used to write; a single (x,y) position.; This case was not treated correctly and, because of that, the PS and PDF; files might contain useless attributes settings. That was only a few; bytes more in the file but they were useless. TLegend. When a object is added ""by name"" in a legend, the; TMultiGraph and THStack present in the current pad; are scanned if an object with this name has not been; found in the pad. Previously the graphs and histograms; were hidden in multi-graphs and histogram-stacks when one; tried to add them by name.; New reference guide. TGaxis. In PaintAxis The option ""U"", for unlabeled axis, was not; implemented in case of alphanumeric axis' labels.; On log-scale TGAxis, with labels having lower values than 1 and ticks marks; set to the positive side, alignement issues seem to come up.; The following example shows four TGAxis drawn respectively with the; following options: RG-, RG+, LG-, LG+. For the RG+ and LG+ options,; the 10E-1 and 10E-2 labels were ill-aligned, showing a sh",MatchSource.DOCS,graf2d/doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v524/index.html:1543,Usability,guid,guide,1543,"; an error if a user program used that simple variable name. ""dpy""; was a pointer to a ""Display"". PostScript and PDF. Now, a text with size 0 is not drawn in PDF files. An invalid; PDF file is created if a text with size 0 is produced.; The landscape orientation is now correct in pdf files. gv recognizes; the files as ""Landscape"" and the orientation is not upside down; as it was before (seascape).; In PostScript and PDF files the method DrawPS is used to write; a single (x,y) position.; This case was not treated correctly and, because of that, the PS and PDF; files might contain useless attributes settings. That was only a few; bytes more in the file but they were useless. TLegend. When a object is added ""by name"" in a legend, the; TMultiGraph and THStack present in the current pad; are scanned if an object with this name has not been; found in the pad. Previously the graphs and histograms; were hidden in multi-graphs and histogram-stacks when one; tried to add them by name.; New reference guide. TGaxis. In PaintAxis The option ""U"", for unlabeled axis, was not; implemented in case of alphanumeric axis' labels.; On log-scale TGAxis, with labels having lower values than 1 and ticks marks; set to the positive side, alignement issues seem to come up.; The following example shows four TGAxis drawn respectively with the; following options: RG-, RG+, LG-, LG+. For the RG+ and LG+ options,; the 10E-1 and 10E-2 labels were ill-aligned, showing a shift to the right; compared to the 1E2, 1E1 and 1 labels.; ; {; c1 = new TCanvas(""c1"",""Examples of Log TGaxis"",10,10,700,500);; c1->Range(-10,-1,10,1);; TGaxis *axis1 = new TGaxis(-7,-0.8,-7,0.8,0.01,100,50510,""RG-"");; axis1->SetTitle(""RG-""); axis1->Draw();; TGaxis *axis2 = new TGaxis(-2,-0.8,-2,0.8,0.01,100,50510,""RG+"");; axis2->SetLabelOffset(-0.04); axis2->SetTitleOffset(-1.5);; axis2->SetTitle(""RG+""); axis2->Draw();; TGaxis *axis3 = new TGaxis(2,-0.8,2,0.8,0.01,100,50510,""LG-"");; axis3->SetLabelOffset(-0.04);; axis3->SetTitle(""L",MatchSource.DOCS,graf2d/doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v526/index.html:3388,Availability,down,downloaded,3388,"; TGraphNode *n6 = gs->AddNode(""n6"",""Node number six"");; TGraphNode *n7 = gs->AddNode(""n7"",""Node 7"");; TGraphNode *n8 = gs->AddNode(""n8"",""Node 8"");; TGraphNode *n9 = gs->AddNode(""n9"",""Node 9"");. n4->SetTextSize(0.03);; n6->SetTextSize(0.03);; n2->SetTextSize(0.04);. n3->SetTextFont(132);. n0->SetTextColor(kRed);. n9->SetFillColor(kRed-10);; n0->SetFillColor(kYellow-9);; n7->SetFillColor(kViolet-9);. // some edges ...; gs->AddEdge(n0,n1)->SetLineColor(kRed);; TGraphEdge *e06 = gs->AddEdge(n0,n6);; e06->SetLineColor(kRed-3);; e06->SetLineWidth(4);; gs->AddEdge(n1,n7);; gs->AddEdge(n4,n6);; gs->AddEdge(n3,n9);; gs->AddEdge(n6,n8);; gs->AddEdge(n7,n2);; gs->AddEdge(n8,n3);; gs->AddEdge(n2,n3);; gs->AddEdge(n9,n0);; gs->AddEdge(n1,n4);; gs->AddEdge(n1,n6);; gs->AddEdge(n2,n5);; gs->AddEdge(n3,n6);; gs->AddEdge(n4,n5);. TCanvas *c = new TCanvas(""c"",""c"",800,600);; c->SetFillColor(38);; gs->Draw();; return c;; }; . This new funtionnality relies on the graphivz package.; This package can be downloaded from; http://www.graphviz.org/. At installation time, to find graphviz, the ROOT's configure file looks in; standard locations. It is possible to define a specific location using the; configure flags:. --with-gviz-incdir=""the directory where gvc.h is""; --with-gviz-libdir=""the directory where the libgvc library is"". To install graphviz (if needed) it is recommended to use the following configure flags:. --enable-static=yes --enable-shared=no --with-pic --prefix=""graphviz installed here"". On 64 bits machines, the ROOT sources are compiled with the option -m64. In; that case graphviz should be also compiled in 64 bits mode. It might be the; default option, but on some machine it is not. In that case the environment; variable CC should be defined as:. CC=""gcc -m64"". before doing configure. On Windows machines it recommended to not install graphviz but to download the; pre-installed version from http://www.graphviz.org/. The ROOT configure command; remains the same.; Graphics Primit",MatchSource.DOCS,graf2d/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v526/index.html:4262,Availability,down,download,4262,"600);; c->SetFillColor(38);; gs->Draw();; return c;; }; . This new funtionnality relies on the graphivz package.; This package can be downloaded from; http://www.graphviz.org/. At installation time, to find graphviz, the ROOT's configure file looks in; standard locations. It is possible to define a specific location using the; configure flags:. --with-gviz-incdir=""the directory where gvc.h is""; --with-gviz-libdir=""the directory where the libgvc library is"". To install graphviz (if needed) it is recommended to use the following configure flags:. --enable-static=yes --enable-shared=no --with-pic --prefix=""graphviz installed here"". On 64 bits machines, the ROOT sources are compiled with the option -m64. In; that case graphviz should be also compiled in 64 bits mode. It might be the; default option, but on some machine it is not. In that case the environment; variable CC should be defined as:. CC=""gcc -m64"". before doing configure. On Windows machines it recommended to not install graphviz but to download the; pre-installed version from http://www.graphviz.org/. The ROOT configure command; remains the same.; Graphics Primitives; New class TGraphTime; TGraphTime is used to draw a set of objects evolving with nsteps in time between tmin and tmax.; each time step has a new list of objects. This list can be identical to; the list of objects in the previous steps, but with different attributes.; see example of use in $ROOTSYS/tutorials/graphs/gtime.C. TLatex. In the following macro the #int and #sum symbols had; wrong limits placement if the character just before started with ""#"".; ; {; TCanvas *c1 = new TCanvas(""c1"",""c1"",500,500);; TLatex l;; l.SetTextSize(0.1);. l.DrawLatex(0.1,0.6,""#nu#int^{1-x}_{2#pi}"");; l.DrawLatex(0.1,0.2,""a#int^{1-x}_{2#pi}"");. l.DrawLatex(0.5,0.6,""#nu#sum^{1-x}_{2#pi}"");; l.DrawLatex(0.5,0.2,""a#sum^{1-x}_{2#pi}"");; }; . This problem is there since the 1st version of TLatex. It is fixed by:; ; Giving ""^"" and ""_"" a lower precedence than special and gre",MatchSource.DOCS,graf2d/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v526/index.html:3434,Deployability,install,installation,3434,"n7"",""Node 7"");; TGraphNode *n8 = gs->AddNode(""n8"",""Node 8"");; TGraphNode *n9 = gs->AddNode(""n9"",""Node 9"");. n4->SetTextSize(0.03);; n6->SetTextSize(0.03);; n2->SetTextSize(0.04);. n3->SetTextFont(132);. n0->SetTextColor(kRed);. n9->SetFillColor(kRed-10);; n0->SetFillColor(kYellow-9);; n7->SetFillColor(kViolet-9);. // some edges ...; gs->AddEdge(n0,n1)->SetLineColor(kRed);; TGraphEdge *e06 = gs->AddEdge(n0,n6);; e06->SetLineColor(kRed-3);; e06->SetLineWidth(4);; gs->AddEdge(n1,n7);; gs->AddEdge(n4,n6);; gs->AddEdge(n3,n9);; gs->AddEdge(n6,n8);; gs->AddEdge(n7,n2);; gs->AddEdge(n8,n3);; gs->AddEdge(n2,n3);; gs->AddEdge(n9,n0);; gs->AddEdge(n1,n4);; gs->AddEdge(n1,n6);; gs->AddEdge(n2,n5);; gs->AddEdge(n3,n6);; gs->AddEdge(n4,n5);. TCanvas *c = new TCanvas(""c"",""c"",800,600);; c->SetFillColor(38);; gs->Draw();; return c;; }; . This new funtionnality relies on the graphivz package.; This package can be downloaded from; http://www.graphviz.org/. At installation time, to find graphviz, the ROOT's configure file looks in; standard locations. It is possible to define a specific location using the; configure flags:. --with-gviz-incdir=""the directory where gvc.h is""; --with-gviz-libdir=""the directory where the libgvc library is"". To install graphviz (if needed) it is recommended to use the following configure flags:. --enable-static=yes --enable-shared=no --with-pic --prefix=""graphviz installed here"". On 64 bits machines, the ROOT sources are compiled with the option -m64. In; that case graphviz should be also compiled in 64 bits mode. It might be the; default option, but on some machine it is not. In that case the environment; variable CC should be defined as:. CC=""gcc -m64"". before doing configure. On Windows machines it recommended to not install graphviz but to download the; pre-installed version from http://www.graphviz.org/. The ROOT configure command; remains the same.; Graphics Primitives; New class TGraphTime; TGraphTime is used to draw a set of objects evolving with n",MatchSource.DOCS,graf2d/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v526/index.html:3719,Deployability,install,install,3719,"9);; n7->SetFillColor(kViolet-9);. // some edges ...; gs->AddEdge(n0,n1)->SetLineColor(kRed);; TGraphEdge *e06 = gs->AddEdge(n0,n6);; e06->SetLineColor(kRed-3);; e06->SetLineWidth(4);; gs->AddEdge(n1,n7);; gs->AddEdge(n4,n6);; gs->AddEdge(n3,n9);; gs->AddEdge(n6,n8);; gs->AddEdge(n7,n2);; gs->AddEdge(n8,n3);; gs->AddEdge(n2,n3);; gs->AddEdge(n9,n0);; gs->AddEdge(n1,n4);; gs->AddEdge(n1,n6);; gs->AddEdge(n2,n5);; gs->AddEdge(n3,n6);; gs->AddEdge(n4,n5);. TCanvas *c = new TCanvas(""c"",""c"",800,600);; c->SetFillColor(38);; gs->Draw();; return c;; }; . This new funtionnality relies on the graphivz package.; This package can be downloaded from; http://www.graphviz.org/. At installation time, to find graphviz, the ROOT's configure file looks in; standard locations. It is possible to define a specific location using the; configure flags:. --with-gviz-incdir=""the directory where gvc.h is""; --with-gviz-libdir=""the directory where the libgvc library is"". To install graphviz (if needed) it is recommended to use the following configure flags:. --enable-static=yes --enable-shared=no --with-pic --prefix=""graphviz installed here"". On 64 bits machines, the ROOT sources are compiled with the option -m64. In; that case graphviz should be also compiled in 64 bits mode. It might be the; default option, but on some machine it is not. In that case the environment; variable CC should be defined as:. CC=""gcc -m64"". before doing configure. On Windows machines it recommended to not install graphviz but to download the; pre-installed version from http://www.graphviz.org/. The ROOT configure command; remains the same.; Graphics Primitives; New class TGraphTime; TGraphTime is used to draw a set of objects evolving with nsteps in time between tmin and tmax.; each time step has a new list of objects. This list can be identical to; the list of objects in the previous steps, but with different attributes.; see example of use in $ROOTSYS/tutorials/graphs/gtime.C. TLatex. In the following macro the #int",MatchSource.DOCS,graf2d/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v526/index.html:3874,Deployability,install,installed,3874,"Red);; TGraphEdge *e06 = gs->AddEdge(n0,n6);; e06->SetLineColor(kRed-3);; e06->SetLineWidth(4);; gs->AddEdge(n1,n7);; gs->AddEdge(n4,n6);; gs->AddEdge(n3,n9);; gs->AddEdge(n6,n8);; gs->AddEdge(n7,n2);; gs->AddEdge(n8,n3);; gs->AddEdge(n2,n3);; gs->AddEdge(n9,n0);; gs->AddEdge(n1,n4);; gs->AddEdge(n1,n6);; gs->AddEdge(n2,n5);; gs->AddEdge(n3,n6);; gs->AddEdge(n4,n5);. TCanvas *c = new TCanvas(""c"",""c"",800,600);; c->SetFillColor(38);; gs->Draw();; return c;; }; . This new funtionnality relies on the graphivz package.; This package can be downloaded from; http://www.graphviz.org/. At installation time, to find graphviz, the ROOT's configure file looks in; standard locations. It is possible to define a specific location using the; configure flags:. --with-gviz-incdir=""the directory where gvc.h is""; --with-gviz-libdir=""the directory where the libgvc library is"". To install graphviz (if needed) it is recommended to use the following configure flags:. --enable-static=yes --enable-shared=no --with-pic --prefix=""graphviz installed here"". On 64 bits machines, the ROOT sources are compiled with the option -m64. In; that case graphviz should be also compiled in 64 bits mode. It might be the; default option, but on some machine it is not. In that case the environment; variable CC should be defined as:. CC=""gcc -m64"". before doing configure. On Windows machines it recommended to not install graphviz but to download the; pre-installed version from http://www.graphviz.org/. The ROOT configure command; remains the same.; Graphics Primitives; New class TGraphTime; TGraphTime is used to draw a set of objects evolving with nsteps in time between tmin and tmax.; each time step has a new list of objects. This list can be identical to; the list of objects in the previous steps, but with different attributes.; see example of use in $ROOTSYS/tutorials/graphs/gtime.C. TLatex. In the following macro the #int and #sum symbols had; wrong limits placement if the character just before started with",MatchSource.DOCS,graf2d/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v526/index.html:4238,Deployability,install,install,4238,"600);; c->SetFillColor(38);; gs->Draw();; return c;; }; . This new funtionnality relies on the graphivz package.; This package can be downloaded from; http://www.graphviz.org/. At installation time, to find graphviz, the ROOT's configure file looks in; standard locations. It is possible to define a specific location using the; configure flags:. --with-gviz-incdir=""the directory where gvc.h is""; --with-gviz-libdir=""the directory where the libgvc library is"". To install graphviz (if needed) it is recommended to use the following configure flags:. --enable-static=yes --enable-shared=no --with-pic --prefix=""graphviz installed here"". On 64 bits machines, the ROOT sources are compiled with the option -m64. In; that case graphviz should be also compiled in 64 bits mode. It might be the; default option, but on some machine it is not. In that case the environment; variable CC should be defined as:. CC=""gcc -m64"". before doing configure. On Windows machines it recommended to not install graphviz but to download the; pre-installed version from http://www.graphviz.org/. The ROOT configure command; remains the same.; Graphics Primitives; New class TGraphTime; TGraphTime is used to draw a set of objects evolving with nsteps in time between tmin and tmax.; each time step has a new list of objects. This list can be identical to; the list of objects in the previous steps, but with different attributes.; see example of use in $ROOTSYS/tutorials/graphs/gtime.C. TLatex. In the following macro the #int and #sum symbols had; wrong limits placement if the character just before started with ""#"".; ; {; TCanvas *c1 = new TCanvas(""c1"",""c1"",500,500);; TLatex l;; l.SetTextSize(0.1);. l.DrawLatex(0.1,0.6,""#nu#int^{1-x}_{2#pi}"");; l.DrawLatex(0.1,0.2,""a#int^{1-x}_{2#pi}"");. l.DrawLatex(0.5,0.6,""#nu#sum^{1-x}_{2#pi}"");; l.DrawLatex(0.5,0.2,""a#sum^{1-x}_{2#pi}"");; }; . This problem is there since the 1st version of TLatex. It is fixed by:; ; Giving ""^"" and ""_"" a lower precedence than special and gre",MatchSource.DOCS,graf2d/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v526/index.html:4280,Deployability,install,installed,4280,"600);; c->SetFillColor(38);; gs->Draw();; return c;; }; . This new funtionnality relies on the graphivz package.; This package can be downloaded from; http://www.graphviz.org/. At installation time, to find graphviz, the ROOT's configure file looks in; standard locations. It is possible to define a specific location using the; configure flags:. --with-gviz-incdir=""the directory where gvc.h is""; --with-gviz-libdir=""the directory where the libgvc library is"". To install graphviz (if needed) it is recommended to use the following configure flags:. --enable-static=yes --enable-shared=no --with-pic --prefix=""graphviz installed here"". On 64 bits machines, the ROOT sources are compiled with the option -m64. In; that case graphviz should be also compiled in 64 bits mode. It might be the; default option, but on some machine it is not. In that case the environment; variable CC should be defined as:. CC=""gcc -m64"". before doing configure. On Windows machines it recommended to not install graphviz but to download the; pre-installed version from http://www.graphviz.org/. The ROOT configure command; remains the same.; Graphics Primitives; New class TGraphTime; TGraphTime is used to draw a set of objects evolving with nsteps in time between tmin and tmax.; each time step has a new list of objects. This list can be identical to; the list of objects in the previous steps, but with different attributes.; see example of use in $ROOTSYS/tutorials/graphs/gtime.C. TLatex. In the following macro the #int and #sum symbols had; wrong limits placement if the character just before started with ""#"".; ; {; TCanvas *c1 = new TCanvas(""c1"",""c1"",500,500);; TLatex l;; l.SetTextSize(0.1);. l.DrawLatex(0.1,0.6,""#nu#int^{1-x}_{2#pi}"");; l.DrawLatex(0.1,0.2,""a#int^{1-x}_{2#pi}"");. l.DrawLatex(0.5,0.6,""#nu#sum^{1-x}_{2#pi}"");; l.DrawLatex(0.5,0.2,""a#sum^{1-x}_{2#pi}"");; }; . This problem is there since the 1st version of TLatex. It is fixed by:; ; Giving ""^"" and ""_"" a lower precedence than special and gre",MatchSource.DOCS,graf2d/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v526/index.html:960,Integrability,message,messages,960,"; ; {; TCanvas *c = new TCanvas;; TLatex *l = new TLatex(0.5, 0.5, ""#font[122]{a = b + c - d #pm e}"");; l->Draw();; c->SaveAs(""c.eps"");; }; ; The font 122 is the greek one. With a such TLatex ""a"" becomes ""alpha"",; ""b"" becomes "" beta"" etc ... It is not the recommended way to do greek; characters with TLatex, but it should work anyway.; In TPostScript::DrawPolyMarker: do not draw the markers is the marker size; is 0.; Right aligned or centered text was not correctly positioned when rotated. TASImage. The text size adjustment applied TASImage::DrawText; was not valid (scale factor of 1.044). The text size was wrong and the; following macro produced a wrong title when ran in batch:; ; {; TCanvas *canvas = new TCanvas(""c5"",""c5"",900,900);; TH1F *histo = new TH1F(""Histo"",""123456x_{i}abcdefy^{2}"",100,0,20);; canvas->Print(""drawing.gif"");; }; ; Suppress annoying messages like:; ; root : looking for image ""filename"" in path [/home/username/icons]; ; printed by libAfterImage when using TImage::Open(""filename""); In TImageDump the hollow filled areas were not correct:; ; they used the line attributes,; a line was drawn around the polygons filled with patterns. This fixes the problem mentionned here:; https://savannah.cern.ch/bugs/index.php?59263; as well as the test #22 in stressGraphics (no need to change; the reference file). Interface to graphviz. Thanks to three new classes (TGraphStruct, TGraphNode and; TGraphEdge) ROOT provides; an interface to the graphs visualization package graphviz. Graph; visualization is a way of representing structural information as diagrams of; abstract graphs and networks. Example:. The previous image is produced by the following ROOT macro:; ; // Draw a simple graph structure.; // The graph layout is made using graphviz. This macro creates some; // nodes and edges and change a few graphical attributes on some of them.; // Author: Olivier Couet; {; TGraphStruct *gs = new TGraphStruct();. // create some nodes and put them in the graph in one go ..",MatchSource.DOCS,graf2d/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v526/index.html:1431,Integrability,Interface,Interface,1431,"ript::DrawPolyMarker: do not draw the markers is the marker size; is 0.; Right aligned or centered text was not correctly positioned when rotated. TASImage. The text size adjustment applied TASImage::DrawText; was not valid (scale factor of 1.044). The text size was wrong and the; following macro produced a wrong title when ran in batch:; ; {; TCanvas *canvas = new TCanvas(""c5"",""c5"",900,900);; TH1F *histo = new TH1F(""Histo"",""123456x_{i}abcdefy^{2}"",100,0,20);; canvas->Print(""drawing.gif"");; }; ; Suppress annoying messages like:; ; root : looking for image ""filename"" in path [/home/username/icons]; ; printed by libAfterImage when using TImage::Open(""filename""); In TImageDump the hollow filled areas were not correct:; ; they used the line attributes,; a line was drawn around the polygons filled with patterns. This fixes the problem mentionned here:; https://savannah.cern.ch/bugs/index.php?59263; as well as the test #22 in stressGraphics (no need to change; the reference file). Interface to graphviz. Thanks to three new classes (TGraphStruct, TGraphNode and; TGraphEdge) ROOT provides; an interface to the graphs visualization package graphviz. Graph; visualization is a way of representing structural information as diagrams of; abstract graphs and networks. Example:. The previous image is produced by the following ROOT macro:; ; // Draw a simple graph structure.; // The graph layout is made using graphviz. This macro creates some; // nodes and edges and change a few graphical attributes on some of them.; // Author: Olivier Couet; {; TGraphStruct *gs = new TGraphStruct();. // create some nodes and put them in the graph in one go ...; TGraphNode *n0 = gs->AddNode(""n0"",""Node 0"");; TGraphNode *n1 = gs->AddNode(""n1"",""First node"");; TGraphNode *n2 = gs->AddNode(""n2"",""Second node"");; TGraphNode *n3 = gs->AddNode(""n3"",""Third node"");; TGraphNode *n4 = gs->AddNode(""n4"",""Fourth node"");; TGraphNode *n5 = gs->AddNode(""n5"",""5th node"");; TGraphNode *n6 = gs->AddNode(""n6"",""Node number si",MatchSource.DOCS,graf2d/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v526/index.html:1543,Integrability,interface,interface,1543,"ed or centered text was not correctly positioned when rotated. TASImage. The text size adjustment applied TASImage::DrawText; was not valid (scale factor of 1.044). The text size was wrong and the; following macro produced a wrong title when ran in batch:; ; {; TCanvas *canvas = new TCanvas(""c5"",""c5"",900,900);; TH1F *histo = new TH1F(""Histo"",""123456x_{i}abcdefy^{2}"",100,0,20);; canvas->Print(""drawing.gif"");; }; ; Suppress annoying messages like:; ; root : looking for image ""filename"" in path [/home/username/icons]; ; printed by libAfterImage when using TImage::Open(""filename""); In TImageDump the hollow filled areas were not correct:; ; they used the line attributes,; a line was drawn around the polygons filled with patterns. This fixes the problem mentionned here:; https://savannah.cern.ch/bugs/index.php?59263; as well as the test #22 in stressGraphics (no need to change; the reference file). Interface to graphviz. Thanks to three new classes (TGraphStruct, TGraphNode and; TGraphEdge) ROOT provides; an interface to the graphs visualization package graphviz. Graph; visualization is a way of representing structural information as diagrams of; abstract graphs and networks. Example:. The previous image is produced by the following ROOT macro:; ; // Draw a simple graph structure.; // The graph layout is made using graphviz. This macro creates some; // nodes and edges and change a few graphical attributes on some of them.; // Author: Olivier Couet; {; TGraphStruct *gs = new TGraphStruct();. // create some nodes and put them in the graph in one go ...; TGraphNode *n0 = gs->AddNode(""n0"",""Node 0"");; TGraphNode *n1 = gs->AddNode(""n1"",""First node"");; TGraphNode *n2 = gs->AddNode(""n2"",""Second node"");; TGraphNode *n3 = gs->AddNode(""n3"",""Third node"");; TGraphNode *n4 = gs->AddNode(""n4"",""Fourth node"");; TGraphNode *n5 = gs->AddNode(""n5"",""5th node"");; TGraphNode *n6 = gs->AddNode(""n6"",""Node number six"");; TGraphNode *n7 = gs->AddNode(""n7"",""Node 7"");; TGraphNode *n8 = gs->AddNode(""n8",MatchSource.DOCS,graf2d/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v526/index.html:3482,Modifiability,config,configure,3482,"n7"",""Node 7"");; TGraphNode *n8 = gs->AddNode(""n8"",""Node 8"");; TGraphNode *n9 = gs->AddNode(""n9"",""Node 9"");. n4->SetTextSize(0.03);; n6->SetTextSize(0.03);; n2->SetTextSize(0.04);. n3->SetTextFont(132);. n0->SetTextColor(kRed);. n9->SetFillColor(kRed-10);; n0->SetFillColor(kYellow-9);; n7->SetFillColor(kViolet-9);. // some edges ...; gs->AddEdge(n0,n1)->SetLineColor(kRed);; TGraphEdge *e06 = gs->AddEdge(n0,n6);; e06->SetLineColor(kRed-3);; e06->SetLineWidth(4);; gs->AddEdge(n1,n7);; gs->AddEdge(n4,n6);; gs->AddEdge(n3,n9);; gs->AddEdge(n6,n8);; gs->AddEdge(n7,n2);; gs->AddEdge(n8,n3);; gs->AddEdge(n2,n3);; gs->AddEdge(n9,n0);; gs->AddEdge(n1,n4);; gs->AddEdge(n1,n6);; gs->AddEdge(n2,n5);; gs->AddEdge(n3,n6);; gs->AddEdge(n4,n5);. TCanvas *c = new TCanvas(""c"",""c"",800,600);; c->SetFillColor(38);; gs->Draw();; return c;; }; . This new funtionnality relies on the graphivz package.; This package can be downloaded from; http://www.graphviz.org/. At installation time, to find graphviz, the ROOT's configure file looks in; standard locations. It is possible to define a specific location using the; configure flags:. --with-gviz-incdir=""the directory where gvc.h is""; --with-gviz-libdir=""the directory where the libgvc library is"". To install graphviz (if needed) it is recommended to use the following configure flags:. --enable-static=yes --enable-shared=no --with-pic --prefix=""graphviz installed here"". On 64 bits machines, the ROOT sources are compiled with the option -m64. In; that case graphviz should be also compiled in 64 bits mode. It might be the; default option, but on some machine it is not. In that case the environment; variable CC should be defined as:. CC=""gcc -m64"". before doing configure. On Windows machines it recommended to not install graphviz but to download the; pre-installed version from http://www.graphviz.org/. The ROOT configure command; remains the same.; Graphics Primitives; New class TGraphTime; TGraphTime is used to draw a set of objects evolving with n",MatchSource.DOCS,graf2d/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v526/index.html:3583,Modifiability,config,configure,3583,"dNode(""n9"",""Node 9"");. n4->SetTextSize(0.03);; n6->SetTextSize(0.03);; n2->SetTextSize(0.04);. n3->SetTextFont(132);. n0->SetTextColor(kRed);. n9->SetFillColor(kRed-10);; n0->SetFillColor(kYellow-9);; n7->SetFillColor(kViolet-9);. // some edges ...; gs->AddEdge(n0,n1)->SetLineColor(kRed);; TGraphEdge *e06 = gs->AddEdge(n0,n6);; e06->SetLineColor(kRed-3);; e06->SetLineWidth(4);; gs->AddEdge(n1,n7);; gs->AddEdge(n4,n6);; gs->AddEdge(n3,n9);; gs->AddEdge(n6,n8);; gs->AddEdge(n7,n2);; gs->AddEdge(n8,n3);; gs->AddEdge(n2,n3);; gs->AddEdge(n9,n0);; gs->AddEdge(n1,n4);; gs->AddEdge(n1,n6);; gs->AddEdge(n2,n5);; gs->AddEdge(n3,n6);; gs->AddEdge(n4,n5);. TCanvas *c = new TCanvas(""c"",""c"",800,600);; c->SetFillColor(38);; gs->Draw();; return c;; }; . This new funtionnality relies on the graphivz package.; This package can be downloaded from; http://www.graphviz.org/. At installation time, to find graphviz, the ROOT's configure file looks in; standard locations. It is possible to define a specific location using the; configure flags:. --with-gviz-incdir=""the directory where gvc.h is""; --with-gviz-libdir=""the directory where the libgvc library is"". To install graphviz (if needed) it is recommended to use the following configure flags:. --enable-static=yes --enable-shared=no --with-pic --prefix=""graphviz installed here"". On 64 bits machines, the ROOT sources are compiled with the option -m64. In; that case graphviz should be also compiled in 64 bits mode. It might be the; default option, but on some machine it is not. In that case the environment; variable CC should be defined as:. CC=""gcc -m64"". before doing configure. On Windows machines it recommended to not install graphviz but to download the; pre-installed version from http://www.graphviz.org/. The ROOT configure command; remains the same.; Graphics Primitives; New class TGraphTime; TGraphTime is used to draw a set of objects evolving with nsteps in time between tmin and tmax.; each time step has a new list of objects. This ",MatchSource.DOCS,graf2d/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v526/index.html:3787,Modifiability,config,configure,3787,"9);; n7->SetFillColor(kViolet-9);. // some edges ...; gs->AddEdge(n0,n1)->SetLineColor(kRed);; TGraphEdge *e06 = gs->AddEdge(n0,n6);; e06->SetLineColor(kRed-3);; e06->SetLineWidth(4);; gs->AddEdge(n1,n7);; gs->AddEdge(n4,n6);; gs->AddEdge(n3,n9);; gs->AddEdge(n6,n8);; gs->AddEdge(n7,n2);; gs->AddEdge(n8,n3);; gs->AddEdge(n2,n3);; gs->AddEdge(n9,n0);; gs->AddEdge(n1,n4);; gs->AddEdge(n1,n6);; gs->AddEdge(n2,n5);; gs->AddEdge(n3,n6);; gs->AddEdge(n4,n5);. TCanvas *c = new TCanvas(""c"",""c"",800,600);; c->SetFillColor(38);; gs->Draw();; return c;; }; . This new funtionnality relies on the graphivz package.; This package can be downloaded from; http://www.graphviz.org/. At installation time, to find graphviz, the ROOT's configure file looks in; standard locations. It is possible to define a specific location using the; configure flags:. --with-gviz-incdir=""the directory where gvc.h is""; --with-gviz-libdir=""the directory where the libgvc library is"". To install graphviz (if needed) it is recommended to use the following configure flags:. --enable-static=yes --enable-shared=no --with-pic --prefix=""graphviz installed here"". On 64 bits machines, the ROOT sources are compiled with the option -m64. In; that case graphviz should be also compiled in 64 bits mode. It might be the; default option, but on some machine it is not. In that case the environment; variable CC should be defined as:. CC=""gcc -m64"". before doing configure. On Windows machines it recommended to not install graphviz but to download the; pre-installed version from http://www.graphviz.org/. The ROOT configure command; remains the same.; Graphics Primitives; New class TGraphTime; TGraphTime is used to draw a set of objects evolving with nsteps in time between tmin and tmax.; each time step has a new list of objects. This list can be identical to; the list of objects in the previous steps, but with different attributes.; see example of use in $ROOTSYS/tutorials/graphs/gtime.C. TLatex. In the following macro the #int",MatchSource.DOCS,graf2d/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v526/index.html:4122,Modifiability,variab,variable,4122,"(n1,n4);; gs->AddEdge(n1,n6);; gs->AddEdge(n2,n5);; gs->AddEdge(n3,n6);; gs->AddEdge(n4,n5);. TCanvas *c = new TCanvas(""c"",""c"",800,600);; c->SetFillColor(38);; gs->Draw();; return c;; }; . This new funtionnality relies on the graphivz package.; This package can be downloaded from; http://www.graphviz.org/. At installation time, to find graphviz, the ROOT's configure file looks in; standard locations. It is possible to define a specific location using the; configure flags:. --with-gviz-incdir=""the directory where gvc.h is""; --with-gviz-libdir=""the directory where the libgvc library is"". To install graphviz (if needed) it is recommended to use the following configure flags:. --enable-static=yes --enable-shared=no --with-pic --prefix=""graphviz installed here"". On 64 bits machines, the ROOT sources are compiled with the option -m64. In; that case graphviz should be also compiled in 64 bits mode. It might be the; default option, but on some machine it is not. In that case the environment; variable CC should be defined as:. CC=""gcc -m64"". before doing configure. On Windows machines it recommended to not install graphviz but to download the; pre-installed version from http://www.graphviz.org/. The ROOT configure command; remains the same.; Graphics Primitives; New class TGraphTime; TGraphTime is used to draw a set of objects evolving with nsteps in time between tmin and tmax.; each time step has a new list of objects. This list can be identical to; the list of objects in the previous steps, but with different attributes.; see example of use in $ROOTSYS/tutorials/graphs/gtime.C. TLatex. In the following macro the #int and #sum symbols had; wrong limits placement if the character just before started with ""#"".; ; {; TCanvas *c1 = new TCanvas(""c1"",""c1"",500,500);; TLatex l;; l.SetTextSize(0.1);. l.DrawLatex(0.1,0.6,""#nu#int^{1-x}_{2#pi}"");; l.DrawLatex(0.1,0.2,""a#int^{1-x}_{2#pi}"");. l.DrawLatex(0.5,0.6,""#nu#sum^{1-x}_{2#pi}"");; l.DrawLatex(0.5,0.2,""a#sum^{1-x}_{2#pi}"");; }; . T",MatchSource.DOCS,graf2d/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v526/index.html:4185,Modifiability,config,configure,4185,"dge(n3,n6);; gs->AddEdge(n4,n5);. TCanvas *c = new TCanvas(""c"",""c"",800,600);; c->SetFillColor(38);; gs->Draw();; return c;; }; . This new funtionnality relies on the graphivz package.; This package can be downloaded from; http://www.graphviz.org/. At installation time, to find graphviz, the ROOT's configure file looks in; standard locations. It is possible to define a specific location using the; configure flags:. --with-gviz-incdir=""the directory where gvc.h is""; --with-gviz-libdir=""the directory where the libgvc library is"". To install graphviz (if needed) it is recommended to use the following configure flags:. --enable-static=yes --enable-shared=no --with-pic --prefix=""graphviz installed here"". On 64 bits machines, the ROOT sources are compiled with the option -m64. In; that case graphviz should be also compiled in 64 bits mode. It might be the; default option, but on some machine it is not. In that case the environment; variable CC should be defined as:. CC=""gcc -m64"". before doing configure. On Windows machines it recommended to not install graphviz but to download the; pre-installed version from http://www.graphviz.org/. The ROOT configure command; remains the same.; Graphics Primitives; New class TGraphTime; TGraphTime is used to draw a set of objects evolving with nsteps in time between tmin and tmax.; each time step has a new list of objects. This list can be identical to; the list of objects in the previous steps, but with different attributes.; see example of use in $ROOTSYS/tutorials/graphs/gtime.C. TLatex. In the following macro the #int and #sum symbols had; wrong limits placement if the character just before started with ""#"".; ; {; TCanvas *c1 = new TCanvas(""c1"",""c1"",500,500);; TLatex l;; l.SetTextSize(0.1);. l.DrawLatex(0.1,0.6,""#nu#int^{1-x}_{2#pi}"");; l.DrawLatex(0.1,0.2,""a#int^{1-x}_{2#pi}"");. l.DrawLatex(0.5,0.6,""#nu#sum^{1-x}_{2#pi}"");; l.DrawLatex(0.5,0.2,""a#sum^{1-x}_{2#pi}"");; }; . This problem is there since the 1st version of TLatex. It is",MatchSource.DOCS,graf2d/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v526/index.html:4338,Modifiability,config,configure,4338,"aphivz package.; This package can be downloaded from; http://www.graphviz.org/. At installation time, to find graphviz, the ROOT's configure file looks in; standard locations. It is possible to define a specific location using the; configure flags:. --with-gviz-incdir=""the directory where gvc.h is""; --with-gviz-libdir=""the directory where the libgvc library is"". To install graphviz (if needed) it is recommended to use the following configure flags:. --enable-static=yes --enable-shared=no --with-pic --prefix=""graphviz installed here"". On 64 bits machines, the ROOT sources are compiled with the option -m64. In; that case graphviz should be also compiled in 64 bits mode. It might be the; default option, but on some machine it is not. In that case the environment; variable CC should be defined as:. CC=""gcc -m64"". before doing configure. On Windows machines it recommended to not install graphviz but to download the; pre-installed version from http://www.graphviz.org/. The ROOT configure command; remains the same.; Graphics Primitives; New class TGraphTime; TGraphTime is used to draw a set of objects evolving with nsteps in time between tmin and tmax.; each time step has a new list of objects. This list can be identical to; the list of objects in the previous steps, but with different attributes.; see example of use in $ROOTSYS/tutorials/graphs/gtime.C. TLatex. In the following macro the #int and #sum symbols had; wrong limits placement if the character just before started with ""#"".; ; {; TCanvas *c1 = new TCanvas(""c1"",""c1"",500,500);; TLatex l;; l.SetTextSize(0.1);. l.DrawLatex(0.1,0.6,""#nu#int^{1-x}_{2#pi}"");; l.DrawLatex(0.1,0.2,""a#int^{1-x}_{2#pi}"");. l.DrawLatex(0.5,0.6,""#nu#sum^{1-x}_{2#pi}"");; l.DrawLatex(0.5,0.2,""a#sum^{1-x}_{2#pi}"");; }; . This problem is there since the 1st version of TLatex. It is fixed by:; ; Giving ""^"" and ""_"" a lower precedence than special and greek characters.; Making a special case for #int and #sum and giving them even; lower precedence t",MatchSource.DOCS,graf2d/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v526/index.html:1363,Testability,test,test,1363,"acters with TLatex, but it should work anyway.; In TPostScript::DrawPolyMarker: do not draw the markers is the marker size; is 0.; Right aligned or centered text was not correctly positioned when rotated. TASImage. The text size adjustment applied TASImage::DrawText; was not valid (scale factor of 1.044). The text size was wrong and the; following macro produced a wrong title when ran in batch:; ; {; TCanvas *canvas = new TCanvas(""c5"",""c5"",900,900);; TH1F *histo = new TH1F(""Histo"",""123456x_{i}abcdefy^{2}"",100,0,20);; canvas->Print(""drawing.gif"");; }; ; Suppress annoying messages like:; ; root : looking for image ""filename"" in path [/home/username/icons]; ; printed by libAfterImage when using TImage::Open(""filename""); In TImageDump the hollow filled areas were not correct:; ; they used the line attributes,; a line was drawn around the polygons filled with patterns. This fixes the problem mentionned here:; https://savannah.cern.ch/bugs/index.php?59263; as well as the test #22 in stressGraphics (no need to change; the reference file). Interface to graphviz. Thanks to three new classes (TGraphStruct, TGraphNode and; TGraphEdge) ROOT provides; an interface to the graphs visualization package graphviz. Graph; visualization is a way of representing structural information as diagrams of; abstract graphs and networks. Example:. The previous image is produced by the following ROOT macro:; ; // Draw a simple graph structure.; // The graph layout is made using graphviz. This macro creates some; // nodes and edges and change a few graphical attributes on some of them.; // Author: Olivier Couet; {; TGraphStruct *gs = new TGraphStruct();. // create some nodes and put them in the graph in one go ...; TGraphNode *n0 = gs->AddNode(""n0"",""Node 0"");; TGraphNode *n1 = gs->AddNode(""n1"",""First node"");; TGraphNode *n2 = gs->AddNode(""n2"",""Second node"");; TGraphNode *n3 = gs->AddNode(""n3"",""Third node"");; TGraphNode *n4 = gs->AddNode(""n4"",""Fourth node"");; TGraphNode *n5 = gs->AddNode(""n5"",""5th ",MatchSource.DOCS,graf2d/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v526/index.html:1797,Usability,simpl,simple,1797,"in batch:; ; {; TCanvas *canvas = new TCanvas(""c5"",""c5"",900,900);; TH1F *histo = new TH1F(""Histo"",""123456x_{i}abcdefy^{2}"",100,0,20);; canvas->Print(""drawing.gif"");; }; ; Suppress annoying messages like:; ; root : looking for image ""filename"" in path [/home/username/icons]; ; printed by libAfterImage when using TImage::Open(""filename""); In TImageDump the hollow filled areas were not correct:; ; they used the line attributes,; a line was drawn around the polygons filled with patterns. This fixes the problem mentionned here:; https://savannah.cern.ch/bugs/index.php?59263; as well as the test #22 in stressGraphics (no need to change; the reference file). Interface to graphviz. Thanks to three new classes (TGraphStruct, TGraphNode and; TGraphEdge) ROOT provides; an interface to the graphs visualization package graphviz. Graph; visualization is a way of representing structural information as diagrams of; abstract graphs and networks. Example:. The previous image is produced by the following ROOT macro:; ; // Draw a simple graph structure.; // The graph layout is made using graphviz. This macro creates some; // nodes and edges and change a few graphical attributes on some of them.; // Author: Olivier Couet; {; TGraphStruct *gs = new TGraphStruct();. // create some nodes and put them in the graph in one go ...; TGraphNode *n0 = gs->AddNode(""n0"",""Node 0"");; TGraphNode *n1 = gs->AddNode(""n1"",""First node"");; TGraphNode *n2 = gs->AddNode(""n2"",""Second node"");; TGraphNode *n3 = gs->AddNode(""n3"",""Third node"");; TGraphNode *n4 = gs->AddNode(""n4"",""Fourth node"");; TGraphNode *n5 = gs->AddNode(""n5"",""5th node"");; TGraphNode *n6 = gs->AddNode(""n6"",""Node number six"");; TGraphNode *n7 = gs->AddNode(""n7"",""Node 7"");; TGraphNode *n8 = gs->AddNode(""n8"",""Node 8"");; TGraphNode *n9 = gs->AddNode(""n9"",""Node 9"");. n4->SetTextSize(0.03);; n6->SetTextSize(0.03);; n2->SetTextSize(0.04);. n3->SetTextFont(132);. n0->SetTextColor(kRed);. n9->SetFillColor(kRed-10);; n0->SetFillColor(kYellow-9);; n7->SetF",MatchSource.DOCS,graf2d/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v528/index.html:3621,Availability,avail,available,3621,"age.; Initialize the Visual in TASImage::ReadImage. This fix; a long standing problem with THtml: Without this fix all the embeded; macros generating GUI output did not work in THtml. TImageDump. Small boxes (less than one pixel width) were not drawn properly. Line width for hollow boxes was always 1 (in batch mode). Graphics Primitives; New text font: Symbol italic. A new text font ""Symbol Italic"" has been implemented. It is working for all; possible outputs: screen, PS, PDF,SVG, gif etc ... It has the font number; 15.; ; The following macro gives an example:; ; {; TCanvas c(""c"",""c"",0,0,400,100);; TLatex t0(.05,.45,""Symbol: #font[122]{abc} - Symbol Italic #font[152]{abc}"");; t0.SetTextSize(0.36);; t0.Draw();; c.Print(""symbolitalic.ps"");; c.Print(""symbolitalic.pdf"");; c.Print(""symbolitalic.gif"");; c.Print(""symbolitalic.svg"");; }; . The PostScript implementation was done thanks to the help of; Pierre Juillot and Benoit Speckel (IPHC Strasbourg). New markers. Three new marker's styles are now available (32, 33, 34). They complement; the markers' list making sure each marker has a solid and an hollow; version.; . TLatex. The #int and #sum symbols had wrong limits placement; if the character just before started with ""#"". There was an atempt to fix; this problem in the previous release but it produced very bad side effects; therefore the fix was reverted. This new fix does not have this sidecw; effect. It causes, in the case of the ""^"" or ""_"" preceded by ""sum"" or; ""int"", to break off and process everything before ""sum"" or ""int"" first.; After that, when processing the rest, the ""^"" kicks in first according to; the order of precedence, and takes the ""int"" (only!) as its base.; ; Fix done by: Oleksandr Grebenyuk <ogrebenyuk@lbl.gov>.; Four new commands: #kern, #lower, #it and; #bf.; ; The two commands #kern and #lower enable a better control; over characters placement. The command #kern[(Float_t)dx]{text}; moves the output string horizontally by the fraction dx of its; leng",MatchSource.DOCS,graf2d/doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v528/index.html:4679,Availability,down,down,4679,"arkers' list making sure each marker has a solid and an hollow; version.; . TLatex. The #int and #sum symbols had wrong limits placement; if the character just before started with ""#"". There was an atempt to fix; this problem in the previous release but it produced very bad side effects; therefore the fix was reverted. This new fix does not have this sidecw; effect. It causes, in the case of the ""^"" or ""_"" preceded by ""sum"" or; ""int"", to break off and process everything before ""sum"" or ""int"" first.; After that, when processing the rest, the ""^"" kicks in first according to; the order of precedence, and takes the ""int"" (only!) as its base.; ; Fix done by: Oleksandr Grebenyuk <ogrebenyuk@lbl.gov>.; Four new commands: #kern, #lower, #it and; #bf.; ; The two commands #kern and #lower enable a better control; over characters placement. The command #kern[(Float_t)dx]{text}; moves the output string horizontally by the fraction dx of its; length. Similarly, #lower[(Float_t)dy]{text} shifts the text up; or down by the fraction dy of its height.; ; Text can be turned italic or boldface using the commands; #it and #bf.; ; Example:; ; {; gStyle->SetTextFont(132);; (new TLatex(0.01, 0.9, ""Positive k#kern[0.3]{e}#kern[0.3]{r}#kern[0.3]{n}#kern[0.3]{i}#kern[0.3]{n}#kern[0.3]{g} with #^{}kern[0.3]""))->Draw();; (new TLatex(0.01, 0.7, ""Negative k#kern[-0.3]{e}#kern[-0.3]{r}#kern[-0.3]{n}#kern[-0.3]{i}#kern[-0.3]{n}#kern[-0.3]{g} with #^{}kern[-0.3]""))->Draw();; (new TLatex(0.01, 0.5, ""Vertical a#lower[0.2]{d}#lower[0.4]{j}#lower[0.1]{u}#lower[-0.1]{s}#lower[-0.3]{t}#lower[-0.4]{m}#lower[-0.2]{e}#lower[0.1]{n}t with #^{}lower[-0.4...+0.4]""))->Draw();; (new TLatex(0.01, 0.3, ""Font styles: #^{}bf{#bf{bold}}, #^{}it{#it{italic}}, #^{}bf{#^{}it{#bf{#it{bold italic}}}}, #^{}bf{#^{}bf{#bf{#bf{unbold}}}}""))->Draw();; (new TLatex(0.01, 0.1, ""Font styles: abc#alpha#beta#gamma, #^{}it{#it{abc#alpha#beta#gamma}}, #^{}it{#^{}it{#it{#it{abc#alpha#beta#gamma}}}}""))->Draw();; }. Done by: Oleksandr Gre",MatchSource.DOCS,graf2d/doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v528/index.html:2264,Deployability,Update,Update,2264,"pdf"",""Title:Three bins filled"");; histo->Fill(8.);; histo->Draw();; canvas->Print(""plots.pdf"",""Title:Four bins filled"");; histo->Fill(8.);; histo->Draw();; canvas->Print(""plots.pdf)"",""Title:The fourth bin content is 2"");; }; ; Each character string following the keyword ""Title:"" makes a new entry in; the table of contents.; TPostScript::Text: Inside a string, the backslash itself is now; escaped. The PS file generated by the two following lines did not work.; ; TText t(.5,.5,""\\t\\"");; t.Draw();; . Small fix regarding line width in TPDF.; In some cases there was some extra blanck page at the beginning of the; PDF files. In particular when generated using the ""[]"" mechanism. SVG. The character #pm was not correct.; Long polyline were not drawn correctly. TASImage. In the following macro the histogram drawing was done with wrong margins:; ; {; TImage *img = TImage::Open(""$ROOTSYS/tutorials/image/rose512.jpg"");; img->Draw(""x"");; gPad->Update();; TH1F *h1f = new TH1F(""h1f"",""Test random numbers"",100,-5,5);; h1f->FillRandom(""gaus"",10000);; h1f->Draw();; gPad->Update();; }; . Improve the palette placement in TASImage::Paint; (cf $ROOTSYS/tutorials/image/galaxy_image.C) ; GetWidth() and GetHeight() returned the size of the; scaled image (if it exist) instead of the real size of the image.; Initialize the Visual in TASImage::ReadImage. This fix; a long standing problem with THtml: Without this fix all the embeded; macros generating GUI output did not work in THtml. TImageDump. Small boxes (less than one pixel width) were not drawn properly. Line width for hollow boxes was always 1 (in batch mode). Graphics Primitives; New text font: Symbol italic. A new text font ""Symbol Italic"" has been implemented. It is working for all; possible outputs: screen, PS, PDF,SVG, gif etc ... It has the font number; 15.; ; The following macro gives an example:; ; {; TCanvas c(""c"",""c"",0,0,400,100);; TLatex t0(.05,.45,""Symbol: #font[122]{abc} - Symbol Italic #font[152]{abc}"");; t0.SetTextSize(0.3",MatchSource.DOCS,graf2d/doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v528/index.html:2388,Deployability,Update,Update,2388,"pdf"",""Title:Three bins filled"");; histo->Fill(8.);; histo->Draw();; canvas->Print(""plots.pdf"",""Title:Four bins filled"");; histo->Fill(8.);; histo->Draw();; canvas->Print(""plots.pdf)"",""Title:The fourth bin content is 2"");; }; ; Each character string following the keyword ""Title:"" makes a new entry in; the table of contents.; TPostScript::Text: Inside a string, the backslash itself is now; escaped. The PS file generated by the two following lines did not work.; ; TText t(.5,.5,""\\t\\"");; t.Draw();; . Small fix regarding line width in TPDF.; In some cases there was some extra blanck page at the beginning of the; PDF files. In particular when generated using the ""[]"" mechanism. SVG. The character #pm was not correct.; Long polyline were not drawn correctly. TASImage. In the following macro the histogram drawing was done with wrong margins:; ; {; TImage *img = TImage::Open(""$ROOTSYS/tutorials/image/rose512.jpg"");; img->Draw(""x"");; gPad->Update();; TH1F *h1f = new TH1F(""h1f"",""Test random numbers"",100,-5,5);; h1f->FillRandom(""gaus"",10000);; h1f->Draw();; gPad->Update();; }; . Improve the palette placement in TASImage::Paint; (cf $ROOTSYS/tutorials/image/galaxy_image.C) ; GetWidth() and GetHeight() returned the size of the; scaled image (if it exist) instead of the real size of the image.; Initialize the Visual in TASImage::ReadImage. This fix; a long standing problem with THtml: Without this fix all the embeded; macros generating GUI output did not work in THtml. TImageDump. Small boxes (less than one pixel width) were not drawn properly. Line width for hollow boxes was always 1 (in batch mode). Graphics Primitives; New text font: Symbol italic. A new text font ""Symbol Italic"" has been implemented. It is working for all; possible outputs: screen, PS, PDF,SVG, gif etc ... It has the font number; 15.; ; The following macro gives an example:; ; {; TCanvas c(""c"",""c"",0,0,400,100);; TLatex t0(.05,.45,""Symbol: #font[122]{abc} - Symbol Italic #font[152]{abc}"");; t0.SetTextSize(0.3",MatchSource.DOCS,graf2d/doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v528/index.html:3909,Deployability,release,release,3909,"n batch mode). Graphics Primitives; New text font: Symbol italic. A new text font ""Symbol Italic"" has been implemented. It is working for all; possible outputs: screen, PS, PDF,SVG, gif etc ... It has the font number; 15.; ; The following macro gives an example:; ; {; TCanvas c(""c"",""c"",0,0,400,100);; TLatex t0(.05,.45,""Symbol: #font[122]{abc} - Symbol Italic #font[152]{abc}"");; t0.SetTextSize(0.36);; t0.Draw();; c.Print(""symbolitalic.ps"");; c.Print(""symbolitalic.pdf"");; c.Print(""symbolitalic.gif"");; c.Print(""symbolitalic.svg"");; }; . The PostScript implementation was done thanks to the help of; Pierre Juillot and Benoit Speckel (IPHC Strasbourg). New markers. Three new marker's styles are now available (32, 33, 34). They complement; the markers' list making sure each marker has a solid and an hollow; version.; . TLatex. The #int and #sum symbols had wrong limits placement; if the character just before started with ""#"". There was an atempt to fix; this problem in the previous release but it produced very bad side effects; therefore the fix was reverted. This new fix does not have this sidecw; effect. It causes, in the case of the ""^"" or ""_"" preceded by ""sum"" or; ""int"", to break off and process everything before ""sum"" or ""int"" first.; After that, when processing the rest, the ""^"" kicks in first according to; the order of precedence, and takes the ""int"" (only!) as its base.; ; Fix done by: Oleksandr Grebenyuk <ogrebenyuk@lbl.gov>.; Four new commands: #kern, #lower, #it and; #bf.; ; The two commands #kern and #lower enable a better control; over characters placement. The command #kern[(Float_t)dx]{text}; moves the output string horizontally by the fraction dx of its; length. Similarly, #lower[(Float_t)dy]{text} shifts the text up; or down by the fraction dy of its height.; ; Text can be turned italic or boldface using the commands; #it and #bf.; ; Example:; ; {; gStyle->SetTextFont(132);; (new TLatex(0.01, 0.9, ""Positive k#kern[0.3]{e}#kern[0.3]{r}#kern[0.3]{n}#kern[0.3",MatchSource.DOCS,graf2d/doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v528/index.html:6722,Modifiability,inherit,inherited,6722,"ew TLatex(0.01, 0.3, ""Font styles: #^{}bf{#bf{bold}}, #^{}it{#it{italic}}, #^{}bf{#^{}it{#bf{#it{bold italic}}}}, #^{}bf{#^{}bf{#bf{#bf{unbold}}}}""))->Draw();; (new TLatex(0.01, 0.1, ""Font styles: abc#alpha#beta#gamma, #^{}it{#it{abc#alpha#beta#gamma}}, #^{}it{#^{}it{#it{#it{abc#alpha#beta#gamma}}}}""))->Draw();; }. Done by: Oleksandr Grebenyuk <ogrebenyuk@lbl.gov>.; Two new characters: #forall and #exists. TText. New method GetTextAdvance to return the text advance for string; text taking the kerning into account or not. TGaxis. In case of horizontal axis with the font size in pixel (font precision = 3); the labels were not visible.; Alpha numeric labels are not scaled anymore in case of text precision 3; (size in pixels). They are in the other precisions.; Fix a precision issue on Mac. With the following lines the last label; (10^3) did not show:; ; t1 = new TH1F(""test"",""test"", 100,1,1000);; t1.Draw();; gPad->SetLogx(1);; . TPaveStats. The stats painting assumed that the stats position was always defined with; Y2>Y1 and X2>X1. This is true when the stats is created automatically but; might not true if the stats position is given by user. This is now; protected. The stats are correctly drawn whatever the orders of X and Y; coordinates are. ; Saving canvas as a .C macro discarded white title and stat box; background. Same thing with TPaveText. TCutG. IsInside(x,y) is now inherited from TGraph. TCanvas and TPad. In case of Canvas.MoveOpaque = true in $ROOTSYS/etc/system.rootrc; the rubberband was not visible during the zooming along axis.; TPad::SaveAs now takes care of the extensions .pdf],; .pdf[, .pad( and .pdf) to avoid the PS and PDF; mixing when a multiple pages PDF files is generated. To work around this; problem it was enough to specify the option ""pdf"" in SaveAs.; c->BuildLegend() created the legend in the current pad,; not in c (as it should). ; A square TCanvas saved in batch mode in a ROOT file was not square anymore; when displayed in interactive mode. . ",MatchSource.DOCS,graf2d/doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v528/index.html:6973,Safety,avoid,avoid,6973,"ew TLatex(0.01, 0.3, ""Font styles: #^{}bf{#bf{bold}}, #^{}it{#it{italic}}, #^{}bf{#^{}it{#bf{#it{bold italic}}}}, #^{}bf{#^{}bf{#bf{#bf{unbold}}}}""))->Draw();; (new TLatex(0.01, 0.1, ""Font styles: abc#alpha#beta#gamma, #^{}it{#it{abc#alpha#beta#gamma}}, #^{}it{#^{}it{#it{#it{abc#alpha#beta#gamma}}}}""))->Draw();; }. Done by: Oleksandr Grebenyuk <ogrebenyuk@lbl.gov>.; Two new characters: #forall and #exists. TText. New method GetTextAdvance to return the text advance for string; text taking the kerning into account or not. TGaxis. In case of horizontal axis with the font size in pixel (font precision = 3); the labels were not visible.; Alpha numeric labels are not scaled anymore in case of text precision 3; (size in pixels). They are in the other precisions.; Fix a precision issue on Mac. With the following lines the last label; (10^3) did not show:; ; t1 = new TH1F(""test"",""test"", 100,1,1000);; t1.Draw();; gPad->SetLogx(1);; . TPaveStats. The stats painting assumed that the stats position was always defined with; Y2>Y1 and X2>X1. This is true when the stats is created automatically but; might not true if the stats position is given by user. This is now; protected. The stats are correctly drawn whatever the orders of X and Y; coordinates are. ; Saving canvas as a .C macro discarded white title and stat box; background. Same thing with TPaveText. TCutG. IsInside(x,y) is now inherited from TGraph. TCanvas and TPad. In case of Canvas.MoveOpaque = true in $ROOTSYS/etc/system.rootrc; the rubberband was not visible during the zooming along axis.; TPad::SaveAs now takes care of the extensions .pdf],; .pdf[, .pad( and .pdf) to avoid the PS and PDF; mixing when a multiple pages PDF files is generated. To work around this; problem it was enough to specify the option ""pdf"" in SaveAs.; c->BuildLegend() created the legend in the current pad,; not in c (as it should). ; A square TCanvas saved in batch mode in a ROOT file was not square anymore; when displayed in interactive mode. . ",MatchSource.DOCS,graf2d/doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v528/index.html:1043,Testability,test,test,1043,". Graphical Output; PostScript and PDF. The marker size between the screen output and the output file formats; was not consistent.; Implement the text kerning. The effect is clearly illustrated with; the following script. Without kerning the red X is overlaped by the; the rest of the text.; ; {; TCanvas *c = new TCanvas;; TLatex *l = new TLatex(0.5, 0.5, ""AVAVAVAVAVAVAVAVAVA#color[2]{X}"");; l->Draw();; c->SaveAs(""c1.eps"");; }; ; The original idea came from Oleksandr Grebenyuk. It has been implemented; in a such way that the kerning mechanism is activated only when needed. If; not needed the old way of text rendering is used. It was done that way; because most of the time kerning is not needed and text rendered using; the kerning mechanism takes more space in the PS/PDF files.; Very long text strings made wrong PS files.; PDF also allows to define table of contents. Now, this facility can be used; in ROOT. The following example shows how to proceed:; ; {; TCanvas* canvas = new TCanvas(""canvas"");; TH1F* histo = new TH1F(""histo"",""test 1"",10,0.,10.);; histo->SetFillColor(2);; histo->Fill(2.);; histo->Draw();; canvas->Print(""plots.pdf("",""Title:One bin filled"");; histo->Fill(4.);; histo->Draw();; canvas->Print(""plots.pdf"",""Title:Two bins filled"");; histo->Fill(6.);; histo->Draw();; canvas->Print(""plots.pdf"",""Title:Three bins filled"");; histo->Fill(8.);; histo->Draw();; canvas->Print(""plots.pdf"",""Title:Four bins filled"");; histo->Fill(8.);; histo->Draw();; canvas->Print(""plots.pdf)"",""Title:The fourth bin content is 2"");; }; ; Each character string following the keyword ""Title:"" makes a new entry in; the table of contents.; TPostScript::Text: Inside a string, the backslash itself is now; escaped. The PS file generated by the two following lines did not work.; ; TText t(.5,.5,""\\t\\"");; t.Draw();; . Small fix regarding line width in TPDF.; In some cases there was some extra blanck page at the beginning of the; PDF files. In particular when generated using the ""[]"" mechanism. ",MatchSource.DOCS,graf2d/doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v528/index.html:2303,Testability,Test,Test,2303,"pdf"",""Title:Three bins filled"");; histo->Fill(8.);; histo->Draw();; canvas->Print(""plots.pdf"",""Title:Four bins filled"");; histo->Fill(8.);; histo->Draw();; canvas->Print(""plots.pdf)"",""Title:The fourth bin content is 2"");; }; ; Each character string following the keyword ""Title:"" makes a new entry in; the table of contents.; TPostScript::Text: Inside a string, the backslash itself is now; escaped. The PS file generated by the two following lines did not work.; ; TText t(.5,.5,""\\t\\"");; t.Draw();; . Small fix regarding line width in TPDF.; In some cases there was some extra blanck page at the beginning of the; PDF files. In particular when generated using the ""[]"" mechanism. SVG. The character #pm was not correct.; Long polyline were not drawn correctly. TASImage. In the following macro the histogram drawing was done with wrong margins:; ; {; TImage *img = TImage::Open(""$ROOTSYS/tutorials/image/rose512.jpg"");; img->Draw(""x"");; gPad->Update();; TH1F *h1f = new TH1F(""h1f"",""Test random numbers"",100,-5,5);; h1f->FillRandom(""gaus"",10000);; h1f->Draw();; gPad->Update();; }; . Improve the palette placement in TASImage::Paint; (cf $ROOTSYS/tutorials/image/galaxy_image.C) ; GetWidth() and GetHeight() returned the size of the; scaled image (if it exist) instead of the real size of the image.; Initialize the Visual in TASImage::ReadImage. This fix; a long standing problem with THtml: Without this fix all the embeded; macros generating GUI output did not work in THtml. TImageDump. Small boxes (less than one pixel width) were not drawn properly. Line width for hollow boxes was always 1 (in batch mode). Graphics Primitives; New text font: Symbol italic. A new text font ""Symbol Italic"" has been implemented. It is working for all; possible outputs: screen, PS, PDF,SVG, gif etc ... It has the font number; 15.; ; The following macro gives an example:; ; {; TCanvas c(""c"",""c"",0,0,400,100);; TLatex t0(.05,.45,""Symbol: #font[122]{abc} - Symbol Italic #font[152]{abc}"");; t0.SetTextSize(0.3",MatchSource.DOCS,graf2d/doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v528/index.html:6207,Testability,test,test,6207,"#lower[0.4]{j}#lower[0.1]{u}#lower[-0.1]{s}#lower[-0.3]{t}#lower[-0.4]{m}#lower[-0.2]{e}#lower[0.1]{n}t with #^{}lower[-0.4...+0.4]""))->Draw();; (new TLatex(0.01, 0.3, ""Font styles: #^{}bf{#bf{bold}}, #^{}it{#it{italic}}, #^{}bf{#^{}it{#bf{#it{bold italic}}}}, #^{}bf{#^{}bf{#bf{#bf{unbold}}}}""))->Draw();; (new TLatex(0.01, 0.1, ""Font styles: abc#alpha#beta#gamma, #^{}it{#it{abc#alpha#beta#gamma}}, #^{}it{#^{}it{#it{#it{abc#alpha#beta#gamma}}}}""))->Draw();; }. Done by: Oleksandr Grebenyuk <ogrebenyuk@lbl.gov>.; Two new characters: #forall and #exists. TText. New method GetTextAdvance to return the text advance for string; text taking the kerning into account or not. TGaxis. In case of horizontal axis with the font size in pixel (font precision = 3); the labels were not visible.; Alpha numeric labels are not scaled anymore in case of text precision 3; (size in pixels). They are in the other precisions.; Fix a precision issue on Mac. With the following lines the last label; (10^3) did not show:; ; t1 = new TH1F(""test"",""test"", 100,1,1000);; t1.Draw();; gPad->SetLogx(1);; . TPaveStats. The stats painting assumed that the stats position was always defined with; Y2>Y1 and X2>X1. This is true when the stats is created automatically but; might not true if the stats position is given by user. This is now; protected. The stats are correctly drawn whatever the orders of X and Y; coordinates are. ; Saving canvas as a .C macro discarded white title and stat box; background. Same thing with TPaveText. TCutG. IsInside(x,y) is now inherited from TGraph. TCanvas and TPad. In case of Canvas.MoveOpaque = true in $ROOTSYS/etc/system.rootrc; the rubberband was not visible during the zooming along axis.; TPad::SaveAs now takes care of the extensions .pdf],; .pdf[, .pad( and .pdf) to avoid the PS and PDF; mixing when a multiple pages PDF files is generated. To work around this; problem it was enough to specify the option ""pdf"" in SaveAs.; c->BuildLegend() created the legend in the current ",MatchSource.DOCS,graf2d/doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v528/index.html:6214,Testability,test,test,6214,"#lower[0.4]{j}#lower[0.1]{u}#lower[-0.1]{s}#lower[-0.3]{t}#lower[-0.4]{m}#lower[-0.2]{e}#lower[0.1]{n}t with #^{}lower[-0.4...+0.4]""))->Draw();; (new TLatex(0.01, 0.3, ""Font styles: #^{}bf{#bf{bold}}, #^{}it{#it{italic}}, #^{}bf{#^{}it{#bf{#it{bold italic}}}}, #^{}bf{#^{}bf{#bf{#bf{unbold}}}}""))->Draw();; (new TLatex(0.01, 0.1, ""Font styles: abc#alpha#beta#gamma, #^{}it{#it{abc#alpha#beta#gamma}}, #^{}it{#^{}it{#it{#it{abc#alpha#beta#gamma}}}}""))->Draw();; }. Done by: Oleksandr Grebenyuk <ogrebenyuk@lbl.gov>.; Two new characters: #forall and #exists. TText. New method GetTextAdvance to return the text advance for string; text taking the kerning into account or not. TGaxis. In case of horizontal axis with the font size in pixel (font precision = 3); the labels were not visible.; Alpha numeric labels are not scaled anymore in case of text precision 3; (size in pixels). They are in the other precisions.; Fix a precision issue on Mac. With the following lines the last label; (10^3) did not show:; ; t1 = new TH1F(""test"",""test"", 100,1,1000);; t1.Draw();; gPad->SetLogx(1);; . TPaveStats. The stats painting assumed that the stats position was always defined with; Y2>Y1 and X2>X1. This is true when the stats is created automatically but; might not true if the stats position is given by user. This is now; protected. The stats are correctly drawn whatever the orders of X and Y; coordinates are. ; Saving canvas as a .C macro discarded white title and stat box; background. Same thing with TPaveText. TCutG. IsInside(x,y) is now inherited from TGraph. TCanvas and TPad. In case of Canvas.MoveOpaque = true in $ROOTSYS/etc/system.rootrc; the rubberband was not visible during the zooming along axis.; TPad::SaveAs now takes care of the extensions .pdf],; .pdf[, .pad( and .pdf) to avoid the PS and PDF; mixing when a multiple pages PDF files is generated. To work around this; problem it was enough to specify the option ""pdf"" in SaveAs.; c->BuildLegend() created the legend in the current ",MatchSource.DOCS,graf2d/doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v528/index.html:174,Usability,clear,clearly,174,". Graphical Output; PostScript and PDF. The marker size between the screen output and the output file formats; was not consistent.; Implement the text kerning. The effect is clearly illustrated with; the following script. Without kerning the red X is overlaped by the; the rest of the text.; ; {; TCanvas *c = new TCanvas;; TLatex *l = new TLatex(0.5, 0.5, ""AVAVAVAVAVAVAVAVAVA#color[2]{X}"");; l->Draw();; c->SaveAs(""c1.eps"");; }; ; The original idea came from Oleksandr Grebenyuk. It has been implemented; in a such way that the kerning mechanism is activated only when needed. If; not needed the old way of text rendering is used. It was done that way; because most of the time kerning is not needed and text rendered using; the kerning mechanism takes more space in the PS/PDF files.; Very long text strings made wrong PS files.; PDF also allows to define table of contents. Now, this facility can be used; in ROOT. The following example shows how to proceed:; ; {; TCanvas* canvas = new TCanvas(""canvas"");; TH1F* histo = new TH1F(""histo"",""test 1"",10,0.,10.);; histo->SetFillColor(2);; histo->Fill(2.);; histo->Draw();; canvas->Print(""plots.pdf("",""Title:One bin filled"");; histo->Fill(4.);; histo->Draw();; canvas->Print(""plots.pdf"",""Title:Two bins filled"");; histo->Fill(6.);; histo->Draw();; canvas->Print(""plots.pdf"",""Title:Three bins filled"");; histo->Fill(8.);; histo->Draw();; canvas->Print(""plots.pdf"",""Title:Four bins filled"");; histo->Fill(8.);; histo->Draw();; canvas->Print(""plots.pdf)"",""Title:The fourth bin content is 2"");; }; ; Each character string following the keyword ""Title:"" makes a new entry in; the table of contents.; TPostScript::Text: Inside a string, the backslash itself is now; escaped. The PS file generated by the two following lines did not work.; ; TText t(.5,.5,""\\t\\"");; t.Draw();; . Small fix regarding line width in TPDF.; In some cases there was some extra blanck page at the beginning of the; PDF files. In particular when generated using the ""[]"" mechanism. ",MatchSource.DOCS,graf2d/doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v530/index.html:1350,Availability,fault,fault,1350,". TPDF. The following macro produced a wrong PDF file. The second page had a black; background.; ; {; gROOT->SetStyle(""Plain"");; TCanvas* canvas = new TCanvas(""canvas"", ""canvas"", 600, 700);; TH1F* h = new TH1F(""h"",""ht"", 100, -5, 5);; h->FillRandom(""gaus"",10000);; canvas->Divide(2,1);; canvas->cd(1); h->Draw();; canvas->Update();; canvas->Print(""test.pdf("");; canvas->Print(""test.pdf"");; canvas->Print(""test.pdf)"");; }; . TPostscript. Fix a precision problem in the text positionning. When the pad limits along; X or Y were very close the text position might be wrong. This was found; thanks to the test #15 in stressGraphics. The text position is now computed; using double precision variables only. TASImage. Horizontal dashed lines having a width greater than 1, were not correct. TLatex. Improve the sqrt drawing to avoid the overlapping; problem mentionned here https://savannah.cern.ch/bugs/index.php?82436. TGaxis. The following macro produced two different labelling. Label ""3"" was missing; on the axis ""b"".; ; {; TGaxis *a = new TGaxis(0.2,0.5,0.8,0.5,0.2,3.5,510,""G"");; a->SetMoreLogLabels(1); a->Draw();; TGaxis *b = new TGaxis(0.8,0.7,0.2,0.7,0.2,3.5,510,""G"");; b->SetMoreLogLabels(1); b->Draw();; }; . TPad. Add a protection in TPad:Clear() to fix the; bug report #78382. An histogram redrawing in a cloned; pad produced a segmentation fault. GX11Gui. Only call XFreeColors if we are on a <= 8 plane machine (to match calls; to XAllocColor). This solves the bug #77329: X11 error clicking; on '?' in context menus. TGWin32. Unmap the window before to destroy it, in order to properly receive; kUnmapNotify needed by gClient->WaitForUnmap(). This fixes the problem; reported on; the forum. ",MatchSource.DOCS,graf2d/doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v530/index.html:1488,Availability,error,error,1488,". TPDF. The following macro produced a wrong PDF file. The second page had a black; background.; ; {; gROOT->SetStyle(""Plain"");; TCanvas* canvas = new TCanvas(""canvas"", ""canvas"", 600, 700);; TH1F* h = new TH1F(""h"",""ht"", 100, -5, 5);; h->FillRandom(""gaus"",10000);; canvas->Divide(2,1);; canvas->cd(1); h->Draw();; canvas->Update();; canvas->Print(""test.pdf("");; canvas->Print(""test.pdf"");; canvas->Print(""test.pdf)"");; }; . TPostscript. Fix a precision problem in the text positionning. When the pad limits along; X or Y were very close the text position might be wrong. This was found; thanks to the test #15 in stressGraphics. The text position is now computed; using double precision variables only. TASImage. Horizontal dashed lines having a width greater than 1, were not correct. TLatex. Improve the sqrt drawing to avoid the overlapping; problem mentionned here https://savannah.cern.ch/bugs/index.php?82436. TGaxis. The following macro produced two different labelling. Label ""3"" was missing; on the axis ""b"".; ; {; TGaxis *a = new TGaxis(0.2,0.5,0.8,0.5,0.2,3.5,510,""G"");; a->SetMoreLogLabels(1); a->Draw();; TGaxis *b = new TGaxis(0.8,0.7,0.2,0.7,0.2,3.5,510,""G"");; b->SetMoreLogLabels(1); b->Draw();; }; . TPad. Add a protection in TPad:Clear() to fix the; bug report #78382. An histogram redrawing in a cloned; pad produced a segmentation fault. GX11Gui. Only call XFreeColors if we are on a <= 8 plane machine (to match calls; to XAllocColor). This solves the bug #77329: X11 error clicking; on '?' in context menus. TGWin32. Unmap the window before to destroy it, in order to properly receive; kUnmapNotify needed by gClient->WaitForUnmap(). This fixes the problem; reported on; the forum. ",MatchSource.DOCS,graf2d/doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v530/index.html:321,Deployability,Update,Update,321,". TPDF. The following macro produced a wrong PDF file. The second page had a black; background.; ; {; gROOT->SetStyle(""Plain"");; TCanvas* canvas = new TCanvas(""canvas"", ""canvas"", 600, 700);; TH1F* h = new TH1F(""h"",""ht"", 100, -5, 5);; h->FillRandom(""gaus"",10000);; canvas->Divide(2,1);; canvas->cd(1); h->Draw();; canvas->Update();; canvas->Print(""test.pdf("");; canvas->Print(""test.pdf"");; canvas->Print(""test.pdf)"");; }; . TPostscript. Fix a precision problem in the text positionning. When the pad limits along; X or Y were very close the text position might be wrong. This was found; thanks to the test #15 in stressGraphics. The text position is now computed; using double precision variables only. TASImage. Horizontal dashed lines having a width greater than 1, were not correct. TLatex. Improve the sqrt drawing to avoid the overlapping; problem mentionned here https://savannah.cern.ch/bugs/index.php?82436. TGaxis. The following macro produced two different labelling. Label ""3"" was missing; on the axis ""b"".; ; {; TGaxis *a = new TGaxis(0.2,0.5,0.8,0.5,0.2,3.5,510,""G"");; a->SetMoreLogLabels(1); a->Draw();; TGaxis *b = new TGaxis(0.8,0.7,0.2,0.7,0.2,3.5,510,""G"");; b->SetMoreLogLabels(1); b->Draw();; }; . TPad. Add a protection in TPad:Clear() to fix the; bug report #78382. An histogram redrawing in a cloned; pad produced a segmentation fault. GX11Gui. Only call XFreeColors if we are on a <= 8 plane machine (to match calls; to XAllocColor). This solves the bug #77329: X11 error clicking; on '?' in context menus. TGWin32. Unmap the window before to destroy it, in order to properly receive; kUnmapNotify needed by gClient->WaitForUnmap(). This fixes the problem; reported on; the forum. ",MatchSource.DOCS,graf2d/doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v530/index.html:686,Modifiability,variab,variables,686,". TPDF. The following macro produced a wrong PDF file. The second page had a black; background.; ; {; gROOT->SetStyle(""Plain"");; TCanvas* canvas = new TCanvas(""canvas"", ""canvas"", 600, 700);; TH1F* h = new TH1F(""h"",""ht"", 100, -5, 5);; h->FillRandom(""gaus"",10000);; canvas->Divide(2,1);; canvas->cd(1); h->Draw();; canvas->Update();; canvas->Print(""test.pdf("");; canvas->Print(""test.pdf"");; canvas->Print(""test.pdf)"");; }; . TPostscript. Fix a precision problem in the text positionning. When the pad limits along; X or Y were very close the text position might be wrong. This was found; thanks to the test #15 in stressGraphics. The text position is now computed; using double precision variables only. TASImage. Horizontal dashed lines having a width greater than 1, were not correct. TLatex. Improve the sqrt drawing to avoid the overlapping; problem mentionned here https://savannah.cern.ch/bugs/index.php?82436. TGaxis. The following macro produced two different labelling. Label ""3"" was missing; on the axis ""b"".; ; {; TGaxis *a = new TGaxis(0.2,0.5,0.8,0.5,0.2,3.5,510,""G"");; a->SetMoreLogLabels(1); a->Draw();; TGaxis *b = new TGaxis(0.8,0.7,0.2,0.7,0.2,3.5,510,""G"");; b->SetMoreLogLabels(1); b->Draw();; }; . TPad. Add a protection in TPad:Clear() to fix the; bug report #78382. An histogram redrawing in a cloned; pad produced a segmentation fault. GX11Gui. Only call XFreeColors if we are on a <= 8 plane machine (to match calls; to XAllocColor). This solves the bug #77329: X11 error clicking; on '?' in context menus. TGWin32. Unmap the window before to destroy it, in order to properly receive; kUnmapNotify needed by gClient->WaitForUnmap(). This fixes the problem; reported on; the forum. ",MatchSource.DOCS,graf2d/doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v530/index.html:821,Safety,avoid,avoid,821,". TPDF. The following macro produced a wrong PDF file. The second page had a black; background.; ; {; gROOT->SetStyle(""Plain"");; TCanvas* canvas = new TCanvas(""canvas"", ""canvas"", 600, 700);; TH1F* h = new TH1F(""h"",""ht"", 100, -5, 5);; h->FillRandom(""gaus"",10000);; canvas->Divide(2,1);; canvas->cd(1); h->Draw();; canvas->Update();; canvas->Print(""test.pdf("");; canvas->Print(""test.pdf"");; canvas->Print(""test.pdf)"");; }; . TPostscript. Fix a precision problem in the text positionning. When the pad limits along; X or Y were very close the text position might be wrong. This was found; thanks to the test #15 in stressGraphics. The text position is now computed; using double precision variables only. TASImage. Horizontal dashed lines having a width greater than 1, were not correct. TLatex. Improve the sqrt drawing to avoid the overlapping; problem mentionned here https://savannah.cern.ch/bugs/index.php?82436. TGaxis. The following macro produced two different labelling. Label ""3"" was missing; on the axis ""b"".; ; {; TGaxis *a = new TGaxis(0.2,0.5,0.8,0.5,0.2,3.5,510,""G"");; a->SetMoreLogLabels(1); a->Draw();; TGaxis *b = new TGaxis(0.8,0.7,0.2,0.7,0.2,3.5,510,""G"");; b->SetMoreLogLabels(1); b->Draw();; }; . TPad. Add a protection in TPad:Clear() to fix the; bug report #78382. An histogram redrawing in a cloned; pad produced a segmentation fault. GX11Gui. Only call XFreeColors if we are on a <= 8 plane machine (to match calls; to XAllocColor). This solves the bug #77329: X11 error clicking; on '?' in context menus. TGWin32. Unmap the window before to destroy it, in order to properly receive; kUnmapNotify needed by gClient->WaitForUnmap(). This fixes the problem; reported on; the forum. ",MatchSource.DOCS,graf2d/doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v530/index.html:347,Testability,test,test,347,". TPDF. The following macro produced a wrong PDF file. The second page had a black; background.; ; {; gROOT->SetStyle(""Plain"");; TCanvas* canvas = new TCanvas(""canvas"", ""canvas"", 600, 700);; TH1F* h = new TH1F(""h"",""ht"", 100, -5, 5);; h->FillRandom(""gaus"",10000);; canvas->Divide(2,1);; canvas->cd(1); h->Draw();; canvas->Update();; canvas->Print(""test.pdf("");; canvas->Print(""test.pdf"");; canvas->Print(""test.pdf)"");; }; . TPostscript. Fix a precision problem in the text positionning. When the pad limits along; X or Y were very close the text position might be wrong. This was found; thanks to the test #15 in stressGraphics. The text position is now computed; using double precision variables only. TASImage. Horizontal dashed lines having a width greater than 1, were not correct. TLatex. Improve the sqrt drawing to avoid the overlapping; problem mentionned here https://savannah.cern.ch/bugs/index.php?82436. TGaxis. The following macro produced two different labelling. Label ""3"" was missing; on the axis ""b"".; ; {; TGaxis *a = new TGaxis(0.2,0.5,0.8,0.5,0.2,3.5,510,""G"");; a->SetMoreLogLabels(1); a->Draw();; TGaxis *b = new TGaxis(0.8,0.7,0.2,0.7,0.2,3.5,510,""G"");; b->SetMoreLogLabels(1); b->Draw();; }; . TPad. Add a protection in TPad:Clear() to fix the; bug report #78382. An histogram redrawing in a cloned; pad produced a segmentation fault. GX11Gui. Only call XFreeColors if we are on a <= 8 plane machine (to match calls; to XAllocColor). This solves the bug #77329: X11 error clicking; on '?' in context menus. TGWin32. Unmap the window before to destroy it, in order to properly receive; kUnmapNotify needed by gClient->WaitForUnmap(). This fixes the problem; reported on; the forum. ",MatchSource.DOCS,graf2d/doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v530/index.html:376,Testability,test,test,376,". TPDF. The following macro produced a wrong PDF file. The second page had a black; background.; ; {; gROOT->SetStyle(""Plain"");; TCanvas* canvas = new TCanvas(""canvas"", ""canvas"", 600, 700);; TH1F* h = new TH1F(""h"",""ht"", 100, -5, 5);; h->FillRandom(""gaus"",10000);; canvas->Divide(2,1);; canvas->cd(1); h->Draw();; canvas->Update();; canvas->Print(""test.pdf("");; canvas->Print(""test.pdf"");; canvas->Print(""test.pdf)"");; }; . TPostscript. Fix a precision problem in the text positionning. When the pad limits along; X or Y were very close the text position might be wrong. This was found; thanks to the test #15 in stressGraphics. The text position is now computed; using double precision variables only. TASImage. Horizontal dashed lines having a width greater than 1, were not correct. TLatex. Improve the sqrt drawing to avoid the overlapping; problem mentionned here https://savannah.cern.ch/bugs/index.php?82436. TGaxis. The following macro produced two different labelling. Label ""3"" was missing; on the axis ""b"".; ; {; TGaxis *a = new TGaxis(0.2,0.5,0.8,0.5,0.2,3.5,510,""G"");; a->SetMoreLogLabels(1); a->Draw();; TGaxis *b = new TGaxis(0.8,0.7,0.2,0.7,0.2,3.5,510,""G"");; b->SetMoreLogLabels(1); b->Draw();; }; . TPad. Add a protection in TPad:Clear() to fix the; bug report #78382. An histogram redrawing in a cloned; pad produced a segmentation fault. GX11Gui. Only call XFreeColors if we are on a <= 8 plane machine (to match calls; to XAllocColor). This solves the bug #77329: X11 error clicking; on '?' in context menus. TGWin32. Unmap the window before to destroy it, in order to properly receive; kUnmapNotify needed by gClient->WaitForUnmap(). This fixes the problem; reported on; the forum. ",MatchSource.DOCS,graf2d/doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v530/index.html:404,Testability,test,test,404,". TPDF. The following macro produced a wrong PDF file. The second page had a black; background.; ; {; gROOT->SetStyle(""Plain"");; TCanvas* canvas = new TCanvas(""canvas"", ""canvas"", 600, 700);; TH1F* h = new TH1F(""h"",""ht"", 100, -5, 5);; h->FillRandom(""gaus"",10000);; canvas->Divide(2,1);; canvas->cd(1); h->Draw();; canvas->Update();; canvas->Print(""test.pdf("");; canvas->Print(""test.pdf"");; canvas->Print(""test.pdf)"");; }; . TPostscript. Fix a precision problem in the text positionning. When the pad limits along; X or Y were very close the text position might be wrong. This was found; thanks to the test #15 in stressGraphics. The text position is now computed; using double precision variables only. TASImage. Horizontal dashed lines having a width greater than 1, were not correct. TLatex. Improve the sqrt drawing to avoid the overlapping; problem mentionned here https://savannah.cern.ch/bugs/index.php?82436. TGaxis. The following macro produced two different labelling. Label ""3"" was missing; on the axis ""b"".; ; {; TGaxis *a = new TGaxis(0.2,0.5,0.8,0.5,0.2,3.5,510,""G"");; a->SetMoreLogLabels(1); a->Draw();; TGaxis *b = new TGaxis(0.8,0.7,0.2,0.7,0.2,3.5,510,""G"");; b->SetMoreLogLabels(1); b->Draw();; }; . TPad. Add a protection in TPad:Clear() to fix the; bug report #78382. An histogram redrawing in a cloned; pad produced a segmentation fault. GX11Gui. Only call XFreeColors if we are on a <= 8 plane machine (to match calls; to XAllocColor). This solves the bug #77329: X11 error clicking; on '?' in context menus. TGWin32. Unmap the window before to destroy it, in order to properly receive; kUnmapNotify needed by gClient->WaitForUnmap(). This fixes the problem; reported on; the forum. ",MatchSource.DOCS,graf2d/doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v530/index.html:600,Testability,test,test,600,". TPDF. The following macro produced a wrong PDF file. The second page had a black; background.; ; {; gROOT->SetStyle(""Plain"");; TCanvas* canvas = new TCanvas(""canvas"", ""canvas"", 600, 700);; TH1F* h = new TH1F(""h"",""ht"", 100, -5, 5);; h->FillRandom(""gaus"",10000);; canvas->Divide(2,1);; canvas->cd(1); h->Draw();; canvas->Update();; canvas->Print(""test.pdf("");; canvas->Print(""test.pdf"");; canvas->Print(""test.pdf)"");; }; . TPostscript. Fix a precision problem in the text positionning. When the pad limits along; X or Y were very close the text position might be wrong. This was found; thanks to the test #15 in stressGraphics. The text position is now computed; using double precision variables only. TASImage. Horizontal dashed lines having a width greater than 1, were not correct. TLatex. Improve the sqrt drawing to avoid the overlapping; problem mentionned here https://savannah.cern.ch/bugs/index.php?82436. TGaxis. The following macro produced two different labelling. Label ""3"" was missing; on the axis ""b"".; ; {; TGaxis *a = new TGaxis(0.2,0.5,0.8,0.5,0.2,3.5,510,""G"");; a->SetMoreLogLabels(1); a->Draw();; TGaxis *b = new TGaxis(0.8,0.7,0.2,0.7,0.2,3.5,510,""G"");; b->SetMoreLogLabels(1); b->Draw();; }; . TPad. Add a protection in TPad:Clear() to fix the; bug report #78382. An histogram redrawing in a cloned; pad produced a segmentation fault. GX11Gui. Only call XFreeColors if we are on a <= 8 plane machine (to match calls; to XAllocColor). This solves the bug #77329: X11 error clicking; on '?' in context menus. TGWin32. Unmap the window before to destroy it, in order to properly receive; kUnmapNotify needed by gClient->WaitForUnmap(). This fixes the problem; reported on; the forum. ",MatchSource.DOCS,graf2d/doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v530/index.html:1247,Usability,Clear,Clear,1247,". TPDF. The following macro produced a wrong PDF file. The second page had a black; background.; ; {; gROOT->SetStyle(""Plain"");; TCanvas* canvas = new TCanvas(""canvas"", ""canvas"", 600, 700);; TH1F* h = new TH1F(""h"",""ht"", 100, -5, 5);; h->FillRandom(""gaus"",10000);; canvas->Divide(2,1);; canvas->cd(1); h->Draw();; canvas->Update();; canvas->Print(""test.pdf("");; canvas->Print(""test.pdf"");; canvas->Print(""test.pdf)"");; }; . TPostscript. Fix a precision problem in the text positionning. When the pad limits along; X or Y were very close the text position might be wrong. This was found; thanks to the test #15 in stressGraphics. The text position is now computed; using double precision variables only. TASImage. Horizontal dashed lines having a width greater than 1, were not correct. TLatex. Improve the sqrt drawing to avoid the overlapping; problem mentionned here https://savannah.cern.ch/bugs/index.php?82436. TGaxis. The following macro produced two different labelling. Label ""3"" was missing; on the axis ""b"".; ; {; TGaxis *a = new TGaxis(0.2,0.5,0.8,0.5,0.2,3.5,510,""G"");; a->SetMoreLogLabels(1); a->Draw();; TGaxis *b = new TGaxis(0.8,0.7,0.2,0.7,0.2,3.5,510,""G"");; b->SetMoreLogLabels(1); b->Draw();; }; . TPad. Add a protection in TPad:Clear() to fix the; bug report #78382. An histogram redrawing in a cloned; pad produced a segmentation fault. GX11Gui. Only call XFreeColors if we are on a <= 8 plane machine (to match calls; to XAllocColor). This solves the bug #77329: X11 error clicking; on '?' in context menus. TGWin32. Unmap the window before to destroy it, in order to properly receive; kUnmapNotify needed by gClient->WaitForUnmap(). This fixes the problem; reported on; the forum. ",MatchSource.DOCS,graf2d/doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v532/index.html:72,Availability,FAULT,FAULT,72,". 2D Graphics Libraries; TCanvas. The following sequence produced a SEG FAULT:; ; root [0] TFile f(""can.root""); root [1] TCanvas* can = (TCanvas*)f.Get(""can""); root [2] gROOT->SetBatch(1); root [3] can->Draw(); . Make sure the inspector canvas background is white. TGraphPainter. New option E5. It draws boxes for the errors like option E2 but in addition; it allows to draw the border of the boxes.; . TSVG - TPDF. When saving canvas as an svg image, the ""times"" character (i. e. in ""x10^3""; statement above axis) was saved as utf ""̄"" (combining macron) whereas it; schould be ""×"" (multiplication sign). It is now fixed. TSVG::Open and TPDF::Open now check if the output file; was successfully opened. TText. TText::GetBoundingBox now returns 0 when the string is empty.; Previously it returned undefined numbers. TLegend. Rewrite TLegend::GetEntry() to take the number of columns in the; legend into account. The previous version considered there was always only one; column in a TLegend. TPaveLabel. The following macro entered an infinite loop:. {; int x[10], y[10]; int i;; for(i = 0; i < 10; i++) {x[i] = 10*i;y[i] = i;}; TGraph *gr = new TGraph(10,x,y);; gr->Draw(""AL"");; TPaveLabel *hello = new TPaveLabel(0.2,0.4,0.8,0.6,""Hello World"");; hello->Draw();; }. iOS module. New module 'ios' was added into graf2d to make it possible to use ROOT's; graphics on iOS devices (iPad, iPhone, iPod touch).; Among other things, it has the ROOT::iOS::Pad class, which is a version; of TPad for iOS (pad with TF2 example below). Two applications, based on this module, were developed for iOS (currently,; for iPad only): ""Tutorials"" and ""RootBrowser"".; They can be found in $ROOTSYS/test/ios. ""Tutorials"" app; Small application with several demos, ""iOS version"" of the $ROOTSYS/tutorlas/demos.C. ""Tutorials"" application:. supports portrait and landscape orientation; has several demos (can be selected by tapping on table's cells); supports different gestures (pinch, single and double tap, pan, etc. - act",MatchSource.DOCS,graf2d/doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v532/index.html:318,Availability,error,errors,318,". 2D Graphics Libraries; TCanvas. The following sequence produced a SEG FAULT:; ; root [0] TFile f(""can.root""); root [1] TCanvas* can = (TCanvas*)f.Get(""can""); root [2] gROOT->SetBatch(1); root [3] can->Draw(); . Make sure the inspector canvas background is white. TGraphPainter. New option E5. It draws boxes for the errors like option E2 but in addition; it allows to draw the border of the boxes.; . TSVG - TPDF. When saving canvas as an svg image, the ""times"" character (i. e. in ""x10^3""; statement above axis) was saved as utf ""̄"" (combining macron) whereas it; schould be ""×"" (multiplication sign). It is now fixed. TSVG::Open and TPDF::Open now check if the output file; was successfully opened. TText. TText::GetBoundingBox now returns 0 when the string is empty.; Previously it returned undefined numbers. TLegend. Rewrite TLegend::GetEntry() to take the number of columns in the; legend into account. The previous version considered there was always only one; column in a TLegend. TPaveLabel. The following macro entered an infinite loop:. {; int x[10], y[10]; int i;; for(i = 0; i < 10; i++) {x[i] = 10*i;y[i] = i;}; TGraph *gr = new TGraph(10,x,y);; gr->Draw(""AL"");; TPaveLabel *hello = new TPaveLabel(0.2,0.4,0.8,0.6,""Hello World"");; hello->Draw();; }. iOS module. New module 'ios' was added into graf2d to make it possible to use ROOT's; graphics on iOS devices (iPad, iPhone, iPod touch).; Among other things, it has the ROOT::iOS::Pad class, which is a version; of TPad for iOS (pad with TF2 example below). Two applications, based on this module, were developed for iOS (currently,; for iPad only): ""Tutorials"" and ""RootBrowser"".; They can be found in $ROOTSYS/test/ios. ""Tutorials"" app; Small application with several demos, ""iOS version"" of the $ROOTSYS/tutorlas/demos.C. ""Tutorials"" application:. supports portrait and landscape orientation; has several demos (can be selected by tapping on table's cells); supports different gestures (pinch, single and double tap, pan, etc. - act",MatchSource.DOCS,graf2d/doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v532/index.html:824,Modifiability,Rewrite,Rewrite,824,". 2D Graphics Libraries; TCanvas. The following sequence produced a SEG FAULT:; ; root [0] TFile f(""can.root""); root [1] TCanvas* can = (TCanvas*)f.Get(""can""); root [2] gROOT->SetBatch(1); root [3] can->Draw(); . Make sure the inspector canvas background is white. TGraphPainter. New option E5. It draws boxes for the errors like option E2 but in addition; it allows to draw the border of the boxes.; . TSVG - TPDF. When saving canvas as an svg image, the ""times"" character (i. e. in ""x10^3""; statement above axis) was saved as utf ""̄"" (combining macron) whereas it; schould be ""×"" (multiplication sign). It is now fixed. TSVG::Open and TPDF::Open now check if the output file; was successfully opened. TText. TText::GetBoundingBox now returns 0 when the string is empty.; Previously it returned undefined numbers. TLegend. Rewrite TLegend::GetEntry() to take the number of columns in the; legend into account. The previous version considered there was always only one; column in a TLegend. TPaveLabel. The following macro entered an infinite loop:. {; int x[10], y[10]; int i;; for(i = 0; i < 10; i++) {x[i] = 10*i;y[i] = i;}; TGraph *gr = new TGraph(10,x,y);; gr->Draw(""AL"");; TPaveLabel *hello = new TPaveLabel(0.2,0.4,0.8,0.6,""Hello World"");; hello->Draw();; }. iOS module. New module 'ios' was added into graf2d to make it possible to use ROOT's; graphics on iOS devices (iPad, iPhone, iPod touch).; Among other things, it has the ROOT::iOS::Pad class, which is a version; of TPad for iOS (pad with TF2 example below). Two applications, based on this module, were developed for iOS (currently,; for iPad only): ""Tutorials"" and ""RootBrowser"".; They can be found in $ROOTSYS/test/ios. ""Tutorials"" app; Small application with several demos, ""iOS version"" of the $ROOTSYS/tutorlas/demos.C. ""Tutorials"" application:. supports portrait and landscape orientation; has several demos (can be selected by tapping on table's cells); supports different gestures (pinch, single and double tap, pan, etc. - act",MatchSource.DOCS,graf2d/doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v532/index.html:1678,Testability,test,test,1678,"utput file; was successfully opened. TText. TText::GetBoundingBox now returns 0 when the string is empty.; Previously it returned undefined numbers. TLegend. Rewrite TLegend::GetEntry() to take the number of columns in the; legend into account. The previous version considered there was always only one; column in a TLegend. TPaveLabel. The following macro entered an infinite loop:. {; int x[10], y[10]; int i;; for(i = 0; i < 10; i++) {x[i] = 10*i;y[i] = i;}; TGraph *gr = new TGraph(10,x,y);; gr->Draw(""AL"");; TPaveLabel *hello = new TPaveLabel(0.2,0.4,0.8,0.6,""Hello World"");; hello->Draw();; }. iOS module. New module 'ios' was added into graf2d to make it possible to use ROOT's; graphics on iOS devices (iPad, iPhone, iPod touch).; Among other things, it has the ROOT::iOS::Pad class, which is a version; of TPad for iOS (pad with TF2 example below). Two applications, based on this module, were developed for iOS (currently,; for iPad only): ""Tutorials"" and ""RootBrowser"".; They can be found in $ROOTSYS/test/ios. ""Tutorials"" app; Small application with several demos, ""iOS version"" of the $ROOTSYS/tutorlas/demos.C. ""Tutorials"" application:. supports portrait and landscape orientation; has several demos (can be selected by tapping on table's cells); supports different gestures (pinch, single and double tap, pan, etc. - active gestures are shown by hint icons); has ""zoom"" mode - pinch or double tap gesture will zoom in/out pad's contents; has ""selection"" mode - with single tap user can select different objects inside pad - axes, histograms, pavestats etc.; 3D objects can be rotated.; has a simple editor to modify pad's parameters : fill color, logarithmic scale, grid, ticks, etc. ""RootBrowser"" app; This application is a simplified version of TBrowser and TCanvas; for iOS. User can open ROOT's file (application uses TWebFile) and; browse file's contents.; RootBrower registers *.root file extension in a system, so for; example, attached root files from a mail client can be opene",MatchSource.DOCS,graf2d/doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v532/index.html:2328,Testability,log,logarithmic,2328,"2d to make it possible to use ROOT's; graphics on iOS devices (iPad, iPhone, iPod touch).; Among other things, it has the ROOT::iOS::Pad class, which is a version; of TPad for iOS (pad with TF2 example below). Two applications, based on this module, were developed for iOS (currently,; for iPad only): ""Tutorials"" and ""RootBrowser"".; They can be found in $ROOTSYS/test/ios. ""Tutorials"" app; Small application with several demos, ""iOS version"" of the $ROOTSYS/tutorlas/demos.C. ""Tutorials"" application:. supports portrait and landscape orientation; has several demos (can be selected by tapping on table's cells); supports different gestures (pinch, single and double tap, pan, etc. - active gestures are shown by hint icons); has ""zoom"" mode - pinch or double tap gesture will zoom in/out pad's contents; has ""selection"" mode - with single tap user can select different objects inside pad - axes, histograms, pavestats etc.; 3D objects can be rotated.; has a simple editor to modify pad's parameters : fill color, logarithmic scale, grid, ticks, etc. ""RootBrowser"" app; This application is a simplified version of TBrowser and TCanvas; for iOS. User can open ROOT's file (application uses TWebFile) and; browse file's contents.; RootBrower registers *.root file extension in a system, so for; example, attached root files from a mail client can be opened by; RootBrowser.; Application has several views. In a top level view, user can see; opened files, open new files, close files (long press gesture on; a file icon):. Tap gesture on a file's icon will open ""File contents"" view. This; view shows objects and nested directories. For objects small; previews are generated. Tapping on a directory's icon will open; new view with directory's contents. Simple search is supported; (in the current TDirectoryFile). Tap on a object's preview will open detailed view for this object.; Using pinch gesture or double tap, you can zoom in/zoom out pad's; contents.; If you have several objects in a file or dir",MatchSource.DOCS,graf2d/doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v532/index.html:3913,Testability,log,log,3913,"ent objects inside pad - axes, histograms, pavestats etc.; 3D objects can be rotated.; has a simple editor to modify pad's parameters : fill color, logarithmic scale, grid, ticks, etc. ""RootBrowser"" app; This application is a simplified version of TBrowser and TCanvas; for iOS. User can open ROOT's file (application uses TWebFile) and; browse file's contents.; RootBrower registers *.root file extension in a system, so for; example, attached root files from a mail client can be opened by; RootBrowser.; Application has several views. In a top level view, user can see; opened files, open new files, close files (long press gesture on; a file icon):. Tap gesture on a file's icon will open ""File contents"" view. This; view shows objects and nested directories. For objects small; previews are generated. Tapping on a directory's icon will open; new view with directory's contents. Simple search is supported; (in the current TDirectoryFile). Tap on a object's preview will open detailed view for this object.; Using pinch gesture or double tap, you can zoom in/zoom out pad's; contents.; If you have several objects in a file or directory, you can; navigate through directory contents by using swipe gesture,; scrolling your objects. It's possible to modify properties of objects the same way you; can do it in TCanvas - RootBrowser has an editor. After you; press ""Edit"" button, you can pick histogram, axis, frame,; pavestats, etc. in a pad and modify its properties in the; editor (selected object is highlihgted in a pad).; At the moment, there are editors for:. TH1 objects; TGraph objects; Objects derived from TAttLine (line attributes); Objects derived from TAttFill (filled area attributes); Pad object (fill properties, log scales, ticks, grid); Markers. Using pan gesture along the selected axis, you can change the; axis range - ""zoom"".; Modified object can be saved locally (in application's directory); and sent as an e-mail attachment (""Save"" functionality will be; improved soon). ",MatchSource.DOCS,graf2d/doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v532/index.html:2273,Usability,simpl,simple,2273,"2d to make it possible to use ROOT's; graphics on iOS devices (iPad, iPhone, iPod touch).; Among other things, it has the ROOT::iOS::Pad class, which is a version; of TPad for iOS (pad with TF2 example below). Two applications, based on this module, were developed for iOS (currently,; for iPad only): ""Tutorials"" and ""RootBrowser"".; They can be found in $ROOTSYS/test/ios. ""Tutorials"" app; Small application with several demos, ""iOS version"" of the $ROOTSYS/tutorlas/demos.C. ""Tutorials"" application:. supports portrait and landscape orientation; has several demos (can be selected by tapping on table's cells); supports different gestures (pinch, single and double tap, pan, etc. - active gestures are shown by hint icons); has ""zoom"" mode - pinch or double tap gesture will zoom in/out pad's contents; has ""selection"" mode - with single tap user can select different objects inside pad - axes, histograms, pavestats etc.; 3D objects can be rotated.; has a simple editor to modify pad's parameters : fill color, logarithmic scale, grid, ticks, etc. ""RootBrowser"" app; This application is a simplified version of TBrowser and TCanvas; for iOS. User can open ROOT's file (application uses TWebFile) and; browse file's contents.; RootBrower registers *.root file extension in a system, so for; example, attached root files from a mail client can be opened by; RootBrowser.; Application has several views. In a top level view, user can see; opened files, open new files, close files (long press gesture on; a file icon):. Tap gesture on a file's icon will open ""File contents"" view. This; view shows objects and nested directories. For objects small; previews are generated. Tapping on a directory's icon will open; new view with directory's contents. Simple search is supported; (in the current TDirectoryFile). Tap on a object's preview will open detailed view for this object.; Using pinch gesture or double tap, you can zoom in/zoom out pad's; contents.; If you have several objects in a file or dir",MatchSource.DOCS,graf2d/doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v532/index.html:2406,Usability,simpl,simplified,2406,"other things, it has the ROOT::iOS::Pad class, which is a version; of TPad for iOS (pad with TF2 example below). Two applications, based on this module, were developed for iOS (currently,; for iPad only): ""Tutorials"" and ""RootBrowser"".; They can be found in $ROOTSYS/test/ios. ""Tutorials"" app; Small application with several demos, ""iOS version"" of the $ROOTSYS/tutorlas/demos.C. ""Tutorials"" application:. supports portrait and landscape orientation; has several demos (can be selected by tapping on table's cells); supports different gestures (pinch, single and double tap, pan, etc. - active gestures are shown by hint icons); has ""zoom"" mode - pinch or double tap gesture will zoom in/out pad's contents; has ""selection"" mode - with single tap user can select different objects inside pad - axes, histograms, pavestats etc.; 3D objects can be rotated.; has a simple editor to modify pad's parameters : fill color, logarithmic scale, grid, ticks, etc. ""RootBrowser"" app; This application is a simplified version of TBrowser and TCanvas; for iOS. User can open ROOT's file (application uses TWebFile) and; browse file's contents.; RootBrower registers *.root file extension in a system, so for; example, attached root files from a mail client can be opened by; RootBrowser.; Application has several views. In a top level view, user can see; opened files, open new files, close files (long press gesture on; a file icon):. Tap gesture on a file's icon will open ""File contents"" view. This; view shows objects and nested directories. For objects small; previews are generated. Tapping on a directory's icon will open; new view with directory's contents. Simple search is supported; (in the current TDirectoryFile). Tap on a object's preview will open detailed view for this object.; Using pinch gesture or double tap, you can zoom in/zoom out pad's; contents.; If you have several objects in a file or directory, you can; navigate through directory contents by using swipe gesture,; scrolling your obj",MatchSource.DOCS,graf2d/doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v532/index.html:3064,Usability,Simpl,Simple,3064,"om in/out pad's contents; has ""selection"" mode - with single tap user can select different objects inside pad - axes, histograms, pavestats etc.; 3D objects can be rotated.; has a simple editor to modify pad's parameters : fill color, logarithmic scale, grid, ticks, etc. ""RootBrowser"" app; This application is a simplified version of TBrowser and TCanvas; for iOS. User can open ROOT's file (application uses TWebFile) and; browse file's contents.; RootBrower registers *.root file extension in a system, so for; example, attached root files from a mail client can be opened by; RootBrowser.; Application has several views. In a top level view, user can see; opened files, open new files, close files (long press gesture on; a file icon):. Tap gesture on a file's icon will open ""File contents"" view. This; view shows objects and nested directories. For objects small; previews are generated. Tapping on a directory's icon will open; new view with directory's contents. Simple search is supported; (in the current TDirectoryFile). Tap on a object's preview will open detailed view for this object.; Using pinch gesture or double tap, you can zoom in/zoom out pad's; contents.; If you have several objects in a file or directory, you can; navigate through directory contents by using swipe gesture,; scrolling your objects. It's possible to modify properties of objects the same way you; can do it in TCanvas - RootBrowser has an editor. After you; press ""Edit"" button, you can pick histogram, axis, frame,; pavestats, etc. in a pad and modify its properties in the; editor (selected object is highlihgted in a pad).; At the moment, there are editors for:. TH1 objects; TGraph objects; Objects derived from TAttLine (line attributes); Objects derived from TAttFill (filled area attributes); Pad object (fill properties, log scales, ticks, grid); Markers. Using pan gesture along the selected axis, you can change the; axis range - ""zoom"".; Modified object can be saved locally (in application's direct",MatchSource.DOCS,graf2d/doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v534/index.html:1123,Availability,error,error,1123,"ce set, this title will be used for all following; additions to the PDF file, instead of ""Page ###"".; . Better sizes matching with the screen output for markers 6 and 7 (dots).; . Implement the transparency in PDF files. To make a graphics object transparent; it is enough to set its color to a transparent one. The color transparency; is defined via its alpha component. The alpha value varies from 0. to 1.; 0. makes an object fully transparent, and 1. makes it fully opaque. To set the; alpha value of an existing color it is enough to do:; ; TColor *col26 = gROOT->GetColor(26);; col26->SetAlpha(0.01);; ; A new color can be created transparent the following way:; ; Int_t ci = 1756;; TColor *color = new TColor(ci, 0.1, 0.2, 0.3, 0.5); // alpha = 0.5; ; An example of tranparency usage with parallel coordinates can be found; in $ROOTSYS/tutorials/tree/parallelcoordtrans.C. TSVG. Implement the transparency in SVG files (cf TPDF).; . TLegend. The option E, to draw the error bar on a legend entry, does not need; anymore the option L to be active. It is now possible to draw the error; bar only using the option E alone. The combination of the options E and L; still works as before.; . The text attributes were not properly initialized by the default; constructor.; . TLatex. Implement #mp.; . TPad. New method DivideSquare a canvas in to n sub-pads. The number of sub-pads; along the X and Y axis are computed according to the square root of n.; Example:; ; void divsquare(int w, int h, int n); {; TCanvas *c = new TCanvas (""c"",""c"",0,0,w,h);; c->DivideSquare(n);; for (int i=1; i<=n; i++) {; c->cd(i);; gPad->DrawFrame(0,0,1,1);; }; }; . TPad::Print always use TImageDump to print gif, png and jpeg files, in; interactive and batch mode (previously it was used in the batch case only).; This allows to generate output transparent colors in these formats even in; interactive mode. The generation of gif, png and jpeg files from the; graphics window in interactive mode is kept for OpenGL canva",MatchSource.DOCS,graf2d/doc/v534/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v534/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v534/index.html:1233,Availability,error,error,1233,"""Page ###"".; . Better sizes matching with the screen output for markers 6 and 7 (dots).; . Implement the transparency in PDF files. To make a graphics object transparent; it is enough to set its color to a transparent one. The color transparency; is defined via its alpha component. The alpha value varies from 0. to 1.; 0. makes an object fully transparent, and 1. makes it fully opaque. To set the; alpha value of an existing color it is enough to do:; ; TColor *col26 = gROOT->GetColor(26);; col26->SetAlpha(0.01);; ; A new color can be created transparent the following way:; ; Int_t ci = 1756;; TColor *color = new TColor(ci, 0.1, 0.2, 0.3, 0.5); // alpha = 0.5; ; An example of tranparency usage with parallel coordinates can be found; in $ROOTSYS/tutorials/tree/parallelcoordtrans.C. TSVG. Implement the transparency in SVG files (cf TPDF).; . TLegend. The option E, to draw the error bar on a legend entry, does not need; anymore the option L to be active. It is now possible to draw the error; bar only using the option E alone. The combination of the options E and L; still works as before.; . The text attributes were not properly initialized by the default; constructor.; . TLatex. Implement #mp.; . TPad. New method DivideSquare a canvas in to n sub-pads. The number of sub-pads; along the X and Y axis are computed according to the square root of n.; Example:; ; void divsquare(int w, int h, int n); {; TCanvas *c = new TCanvas (""c"",""c"",0,0,w,h);; c->DivideSquare(n);; for (int i=1; i<=n; i++) {; c->cd(i);; gPad->DrawFrame(0,0,1,1);; }; }; . TPad::Print always use TImageDump to print gif, png and jpeg files, in; interactive and batch mode (previously it was used in the batch case only).; This allows to generate output transparent colors in these formats even in; interactive mode. The generation of gif, png and jpeg files from the; graphics window in interactive mode is kept for OpenGL canvases.; . New graphical back-end for MacOSX. TGCocoa/TGQuartz classes are the implementatio",MatchSource.DOCS,graf2d/doc/v534/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v534/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v534/index.html:2343,Deployability,install,installing,2343,"r = new TColor(ci, 0.1, 0.2, 0.3, 0.5); // alpha = 0.5; ; An example of tranparency usage with parallel coordinates can be found; in $ROOTSYS/tutorials/tree/parallelcoordtrans.C. TSVG. Implement the transparency in SVG files (cf TPDF).; . TLegend. The option E, to draw the error bar on a legend entry, does not need; anymore the option L to be active. It is now possible to draw the error; bar only using the option E alone. The combination of the options E and L; still works as before.; . The text attributes were not properly initialized by the default; constructor.; . TLatex. Implement #mp.; . TPad. New method DivideSquare a canvas in to n sub-pads. The number of sub-pads; along the X and Y axis are computed according to the square root of n.; Example:; ; void divsquare(int w, int h, int n); {; TCanvas *c = new TCanvas (""c"",""c"",0,0,w,h);; c->DivideSquare(n);; for (int i=1; i<=n; i++) {; c->cd(i);; gPad->DrawFrame(0,0,1,1);; }; }; . TPad::Print always use TImageDump to print gif, png and jpeg files, in; interactive and batch mode (previously it was used in the batch case only).; This allows to generate output transparent colors in these formats even in; interactive mode. The generation of gif, png and jpeg files from the; graphics window in interactive mode is kept for OpenGL canvases.; . New graphical back-end for MacOSX. TGCocoa/TGQuartz classes are the implementation of TVirtualX based on Cocoa and Quartz 2D.; They let to use ROOT's GUI and graphics on MacOS X without installing X11.app and also give an access to Apple's native; graphics and GUI frameworks. Window management, event loop, event dispatching, etc. are implemented on top of Cocoa.; Graphics (GUI rendering and non-GUI) is done by Quartz 2D (Core Graphics).; An example of a TCanvas with a THStack object, transparency, anti-aliasing, gradient fill, shadows:. ROOT must be configured with --enable-cocoa parameter to use Cocoa back-end instead of X11 version.; Please note, this is still a work in progress.; ",MatchSource.DOCS,graf2d/doc/v534/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v534/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v534/index.html:2713,Modifiability,config,configured,2713,"r = new TColor(ci, 0.1, 0.2, 0.3, 0.5); // alpha = 0.5; ; An example of tranparency usage with parallel coordinates can be found; in $ROOTSYS/tutorials/tree/parallelcoordtrans.C. TSVG. Implement the transparency in SVG files (cf TPDF).; . TLegend. The option E, to draw the error bar on a legend entry, does not need; anymore the option L to be active. It is now possible to draw the error; bar only using the option E alone. The combination of the options E and L; still works as before.; . The text attributes were not properly initialized by the default; constructor.; . TLatex. Implement #mp.; . TPad. New method DivideSquare a canvas in to n sub-pads. The number of sub-pads; along the X and Y axis are computed according to the square root of n.; Example:; ; void divsquare(int w, int h, int n); {; TCanvas *c = new TCanvas (""c"",""c"",0,0,w,h);; c->DivideSquare(n);; for (int i=1; i<=n; i++) {; c->cd(i);; gPad->DrawFrame(0,0,1,1);; }; }; . TPad::Print always use TImageDump to print gif, png and jpeg files, in; interactive and batch mode (previously it was used in the batch case only).; This allows to generate output transparent colors in these formats even in; interactive mode. The generation of gif, png and jpeg files from the; graphics window in interactive mode is kept for OpenGL canvases.; . New graphical back-end for MacOSX. TGCocoa/TGQuartz classes are the implementation of TVirtualX based on Cocoa and Quartz 2D.; They let to use ROOT's GUI and graphics on MacOS X without installing X11.app and also give an access to Apple's native; graphics and GUI frameworks. Window management, event loop, event dispatching, etc. are implemented on top of Cocoa.; Graphics (GUI rendering and non-GUI) is done by Quartz 2D (Core Graphics).; An example of a TCanvas with a THStack object, transparency, anti-aliasing, gradient fill, shadows:. ROOT must be configured with --enable-cocoa parameter to use Cocoa back-end instead of X11 version.; Please note, this is still a work in progress.; ",MatchSource.DOCS,graf2d/doc/v534/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v534/index.html
https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v534/index.html:2379,Security,access,access,2379,"r = new TColor(ci, 0.1, 0.2, 0.3, 0.5); // alpha = 0.5; ; An example of tranparency usage with parallel coordinates can be found; in $ROOTSYS/tutorials/tree/parallelcoordtrans.C. TSVG. Implement the transparency in SVG files (cf TPDF).; . TLegend. The option E, to draw the error bar on a legend entry, does not need; anymore the option L to be active. It is now possible to draw the error; bar only using the option E alone. The combination of the options E and L; still works as before.; . The text attributes were not properly initialized by the default; constructor.; . TLatex. Implement #mp.; . TPad. New method DivideSquare a canvas in to n sub-pads. The number of sub-pads; along the X and Y axis are computed according to the square root of n.; Example:; ; void divsquare(int w, int h, int n); {; TCanvas *c = new TCanvas (""c"",""c"",0,0,w,h);; c->DivideSquare(n);; for (int i=1; i<=n; i++) {; c->cd(i);; gPad->DrawFrame(0,0,1,1);; }; }; . TPad::Print always use TImageDump to print gif, png and jpeg files, in; interactive and batch mode (previously it was used in the batch case only).; This allows to generate output transparent colors in these formats even in; interactive mode. The generation of gif, png and jpeg files from the; graphics window in interactive mode is kept for OpenGL canvases.; . New graphical back-end for MacOSX. TGCocoa/TGQuartz classes are the implementation of TVirtualX based on Cocoa and Quartz 2D.; They let to use ROOT's GUI and graphics on MacOS X without installing X11.app and also give an access to Apple's native; graphics and GUI frameworks. Window management, event loop, event dispatching, etc. are implemented on top of Cocoa.; Graphics (GUI rendering and non-GUI) is done by Quartz 2D (Core Graphics).; An example of a TCanvas with a THStack object, transparency, anti-aliasing, gradient fill, shadows:. ROOT must be configured with --enable-cocoa parameter to use Cocoa back-end instead of X11 version.; Please note, this is still a work in progress.; ",MatchSource.DOCS,graf2d/doc/v534/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/doc/v534/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v520/index.html:1675,Availability,Avail,Available,1675,"ded to TGLViewer, looking at the scene from another; side than the one present so far. Improved FTGL font management across rendering contexts and text; rendering support. New class TGLAxisPainter that can render 2D and 3D axes; via GL. For example see tutorials/eve/cms_calo.C. Possible performance issues with ATI drivers (fglrx). In late 2007 ATI switched to a new driver architecture. With these; drivers a significant degradation of GL performance in selection mode,; up to a factor of 50, was observed. Both linux and Windows drivers; were affected. The issue has been resolved in the latest driver; versions. Eve; Major changes. Support for multiple, parallel OpenGL views that can show different; projections of the same event. Provide object selection and feedback highlight across all GL-views and; list-trees. New classes for visualization of calorimeter data,; TEveCaloXYZ, see tutorials/eve/cms_calo.C. Available; representations: 3D-cylindrical view, projected views r-phi and rho-z,; and lego-view (with dedicated event handler allowing detailed; inspection of the data). Support for compound objects in view of selection, highlight and; color managament (see class TEveCompound). Optimize updates of GL-scenes by introducing change-stamping bits; into TEveElement. See methods AddStamp() and; StampXyzz(). Added support for central management of visualization parameters; of objects. Instead of specifying visual attributes individually by; set-methods a single string tag can be used to retrieve all of them; with a single command, e.g.,; track->ApplyVizTag(""MuonTrack""). The parameter-database can; be saved as a CINT script, edited manually and loaded. This provides more; flexibility as different users can share the same code to; instantiate visualziation objects but still override visualization; parameters independently. See TEveElement::CopyVizParams(); and TEveManager::*VizDB() methods for more information. Minor changes, fixes and improvements. Improved handling of projec",MatchSource.DOCS,graf3d/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v520/index.html:1964,Deployability,update,updates,1964,"For example see tutorials/eve/cms_calo.C. Possible performance issues with ATI drivers (fglrx). In late 2007 ATI switched to a new driver architecture. With these; drivers a significant degradation of GL performance in selection mode,; up to a factor of 50, was observed. Both linux and Windows drivers; were affected. The issue has been resolved in the latest driver; versions. Eve; Major changes. Support for multiple, parallel OpenGL views that can show different; projections of the same event. Provide object selection and feedback highlight across all GL-views and; list-trees. New classes for visualization of calorimeter data,; TEveCaloXYZ, see tutorials/eve/cms_calo.C. Available; representations: 3D-cylindrical view, projected views r-phi and rho-z,; and lego-view (with dedicated event handler allowing detailed; inspection of the data). Support for compound objects in view of selection, highlight and; color managament (see class TEveCompound). Optimize updates of GL-scenes by introducing change-stamping bits; into TEveElement. See methods AddStamp() and; StampXyzz(). Added support for central management of visualization parameters; of objects. Instead of specifying visual attributes individually by; set-methods a single string tag can be used to retrieve all of them; with a single command, e.g.,; track->ApplyVizTag(""MuonTrack""). The parameter-database can; be saved as a CINT script, edited manually and loaded. This provides more; flexibility as different users can share the same code to; instantiate visualziation objects but still override visualization; parameters independently. See TEveElement::CopyVizParams(); and TEveManager::*VizDB() methods for more information. Minor changes, fixes and improvements. Improved handling of projected elements. For fish-eye projections, allow fixing of compression scale; beyond given distance from the center. Add support for step-function scaling of 2D-projections. This; allows arbitrary magnification of concentric regions in r-ph",MatchSource.DOCS,graf3d/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v520/index.html:1047,Performance,perform,performance,1047,"LViewer - render opaque; objects from all scenes first, then all transparent ones. Modularization of input event-handling in TGLViewer: all; event-handling is done by the TGLEventHandler class. One can; sub-class it now and modify behaviour of a given viewer. For; example, see TEveLegoEventHandler. Support highlighting of physical shapes for providing feedback and; showing selection. Minor changes, fixes and improvements. Improve saving of images from the GL-viewer so that the dialog; boxes and other windows do not result in black areas on the saved; image. The window must still be fully contained within the desktop. Improved camera controls. Three new orthographic cameras have; been added to TGLViewer, looking at the scene from another; side than the one present so far. Improved FTGL font management across rendering contexts and text; rendering support. New class TGLAxisPainter that can render 2D and 3D axes; via GL. For example see tutorials/eve/cms_calo.C. Possible performance issues with ATI drivers (fglrx). In late 2007 ATI switched to a new driver architecture. With these; drivers a significant degradation of GL performance in selection mode,; up to a factor of 50, was observed. Both linux and Windows drivers; were affected. The issue has been resolved in the latest driver; versions. Eve; Major changes. Support for multiple, parallel OpenGL views that can show different; projections of the same event. Provide object selection and feedback highlight across all GL-views and; list-trees. New classes for visualization of calorimeter data,; TEveCaloXYZ, see tutorials/eve/cms_calo.C. Available; representations: 3D-cylindrical view, projected views r-phi and rho-z,; and lego-view (with dedicated event handler allowing detailed; inspection of the data). Support for compound objects in view of selection, highlight and; color managament (see class TEveCompound). Optimize updates of GL-scenes by introducing change-stamping bits; into TEveElement. See methods AddStamp() a",MatchSource.DOCS,graf3d/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v520/index.html:1200,Performance,perform,performance,1200,"ent-handling is done by the TGLEventHandler class. One can; sub-class it now and modify behaviour of a given viewer. For; example, see TEveLegoEventHandler. Support highlighting of physical shapes for providing feedback and; showing selection. Minor changes, fixes and improvements. Improve saving of images from the GL-viewer so that the dialog; boxes and other windows do not result in black areas on the saved; image. The window must still be fully contained within the desktop. Improved camera controls. Three new orthographic cameras have; been added to TGLViewer, looking at the scene from another; side than the one present so far. Improved FTGL font management across rendering contexts and text; rendering support. New class TGLAxisPainter that can render 2D and 3D axes; via GL. For example see tutorials/eve/cms_calo.C. Possible performance issues with ATI drivers (fglrx). In late 2007 ATI switched to a new driver architecture. With these; drivers a significant degradation of GL performance in selection mode,; up to a factor of 50, was observed. Both linux and Windows drivers; were affected. The issue has been resolved in the latest driver; versions. Eve; Major changes. Support for multiple, parallel OpenGL views that can show different; projections of the same event. Provide object selection and feedback highlight across all GL-views and; list-trees. New classes for visualization of calorimeter data,; TEveCaloXYZ, see tutorials/eve/cms_calo.C. Available; representations: 3D-cylindrical view, projected views r-phi and rho-z,; and lego-view (with dedicated event handler allowing detailed; inspection of the data). Support for compound objects in view of selection, highlight and; color managament (see class TEveCompound). Optimize updates of GL-scenes by introducing change-stamping bits; into TEveElement. See methods AddStamp() and; StampXyzz(). Added support for central management of visualization parameters; of objects. Instead of specifying visual attributes individu",MatchSource.DOCS,graf3d/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v520/index.html:1955,Performance,Optimiz,Optimize,1955,"For example see tutorials/eve/cms_calo.C. Possible performance issues with ATI drivers (fglrx). In late 2007 ATI switched to a new driver architecture. With these; drivers a significant degradation of GL performance in selection mode,; up to a factor of 50, was observed. Both linux and Windows drivers; were affected. The issue has been resolved in the latest driver; versions. Eve; Major changes. Support for multiple, parallel OpenGL views that can show different; projections of the same event. Provide object selection and feedback highlight across all GL-views and; list-trees. New classes for visualization of calorimeter data,; TEveCaloXYZ, see tutorials/eve/cms_calo.C. Available; representations: 3D-cylindrical view, projected views r-phi and rho-z,; and lego-view (with dedicated event handler allowing detailed; inspection of the data). Support for compound objects in view of selection, highlight and; color managament (see class TEveCompound). Optimize updates of GL-scenes by introducing change-stamping bits; into TEveElement. See methods AddStamp() and; StampXyzz(). Added support for central management of visualization parameters; of objects. Instead of specifying visual attributes individually by; set-methods a single string tag can be used to retrieve all of them; with a single command, e.g.,; track->ApplyVizTag(""MuonTrack""). The parameter-database can; be saved as a CINT script, edited manually and loaded. This provides more; flexibility as different users can share the same code to; instantiate visualziation objects but still override visualization; parameters independently. See TEveElement::CopyVizParams(); and TEveManager::*VizDB() methods for more information. Minor changes, fixes and improvements. Improved handling of projected elements. For fish-eye projections, allow fixing of compression scale; beyond given distance from the center. Add support for step-function scaling of 2D-projections. This; allows arbitrary magnification of concentric regions in r-ph",MatchSource.DOCS,graf3d/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v520/index.html:2423,Performance,load,loaded,2423,"anges. Support for multiple, parallel OpenGL views that can show different; projections of the same event. Provide object selection and feedback highlight across all GL-views and; list-trees. New classes for visualization of calorimeter data,; TEveCaloXYZ, see tutorials/eve/cms_calo.C. Available; representations: 3D-cylindrical view, projected views r-phi and rho-z,; and lego-view (with dedicated event handler allowing detailed; inspection of the data). Support for compound objects in view of selection, highlight and; color managament (see class TEveCompound). Optimize updates of GL-scenes by introducing change-stamping bits; into TEveElement. See methods AddStamp() and; StampXyzz(). Added support for central management of visualization parameters; of objects. Instead of specifying visual attributes individually by; set-methods a single string tag can be used to retrieve all of them; with a single command, e.g.,; track->ApplyVizTag(""MuonTrack""). The parameter-database can; be saved as a CINT script, edited manually and loaded. This provides more; flexibility as different users can share the same code to; instantiate visualziation objects but still override visualization; parameters independently. See TEveElement::CopyVizParams(); and TEveManager::*VizDB() methods for more information. Minor changes, fixes and improvements. Improved handling of projected elements. For fish-eye projections, allow fixing of compression scale; beyond given distance from the center. Add support for step-function scaling of 2D-projections. This; allows arbitrary magnification of concentric regions in r-phi and; rho-z views. See tutorial; tutorials/eve/projection_test_prescale.C. Path-mark type representing 2D clusters was added for; TEveTrack and TEveTrackPropagator classes. Add support for representing a set of arbitrary cones to; TEveBoxSet (see tutorials/eve/cone_test.C). TEveFrameBox now supports arbitrary 2d frame shapes -; user specifies individual points via SetQuadByPoints() functi",MatchSource.DOCS,graf3d/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v520/index.html:418,Usability,feedback,feedback,418,". OpenGL; Major changes. Reorganization of scene rendering in TGLViewer - render opaque; objects from all scenes first, then all transparent ones. Modularization of input event-handling in TGLViewer: all; event-handling is done by the TGLEventHandler class. One can; sub-class it now and modify behaviour of a given viewer. For; example, see TEveLegoEventHandler. Support highlighting of physical shapes for providing feedback and; showing selection. Minor changes, fixes and improvements. Improve saving of images from the GL-viewer so that the dialog; boxes and other windows do not result in black areas on the saved; image. The window must still be fully contained within the desktop. Improved camera controls. Three new orthographic cameras have; been added to TGLViewer, looking at the scene from another; side than the one present so far. Improved FTGL font management across rendering contexts and text; rendering support. New class TGLAxisPainter that can render 2D and 3D axes; via GL. For example see tutorials/eve/cms_calo.C. Possible performance issues with ATI drivers (fglrx). In late 2007 ATI switched to a new driver architecture. With these; drivers a significant degradation of GL performance in selection mode,; up to a factor of 50, was observed. Both linux and Windows drivers; were affected. The issue has been resolved in the latest driver; versions. Eve; Major changes. Support for multiple, parallel OpenGL views that can show different; projections of the same event. Provide object selection and feedback highlight across all GL-views and; list-trees. New classes for visualization of calorimeter data,; TEveCaloXYZ, see tutorials/eve/cms_calo.C. Available; representations: 3D-cylindrical view, projected views r-phi and rho-z,; and lego-view (with dedicated event handler allowing detailed; inspection of the data). Support for compound objects in view of selection, highlight and; color managament (see class TEveCompound). Optimize updates of GL-scenes by introducing c",MatchSource.DOCS,graf3d/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v520/index.html:1524,Usability,feedback,feedback,1524," that the dialog; boxes and other windows do not result in black areas on the saved; image. The window must still be fully contained within the desktop. Improved camera controls. Three new orthographic cameras have; been added to TGLViewer, looking at the scene from another; side than the one present so far. Improved FTGL font management across rendering contexts and text; rendering support. New class TGLAxisPainter that can render 2D and 3D axes; via GL. For example see tutorials/eve/cms_calo.C. Possible performance issues with ATI drivers (fglrx). In late 2007 ATI switched to a new driver architecture. With these; drivers a significant degradation of GL performance in selection mode,; up to a factor of 50, was observed. Both linux and Windows drivers; were affected. The issue has been resolved in the latest driver; versions. Eve; Major changes. Support for multiple, parallel OpenGL views that can show different; projections of the same event. Provide object selection and feedback highlight across all GL-views and; list-trees. New classes for visualization of calorimeter data,; TEveCaloXYZ, see tutorials/eve/cms_calo.C. Available; representations: 3D-cylindrical view, projected views r-phi and rho-z,; and lego-view (with dedicated event handler allowing detailed; inspection of the data). Support for compound objects in view of selection, highlight and; color managament (see class TEveCompound). Optimize updates of GL-scenes by introducing change-stamping bits; into TEveElement. See methods AddStamp() and; StampXyzz(). Added support for central management of visualization parameters; of objects. Instead of specifying visual attributes individually by; set-methods a single string tag can be used to retrieve all of them; with a single command, e.g.,; track->ApplyVizTag(""MuonTrack""). The parameter-database can; be saved as a CINT script, edited manually and loaded. This provides more; flexibility as different users can share the same code to; instantiate visualziation o",MatchSource.DOCS,graf3d/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v522/index.html:1447,Availability,avail,available,1447,"er contents. Many improvements in text and axis rendering for orthographic; view markup. In TGLSceneBase add data-member Bool_t; fSelectable allowing one to preventing any of its elements to be; selected. Useful when given scene is used as background to help guid; the eye. Eve. Added support for internal window management. Windows can be; arranged in horizontal/vertical stacks, tabs and main windows.; The containers and individaul windows can be moved to arbitrary; window-slot. See classes TEveWindow and TEveWindowManager. See tutorial tutorials/eve/test_windows.C. TEveQuadSet -- Add flag 'Bool_t fAntiFlick'. If on (now the; default) it causes each quad to be also rendered as a pixel, thus; preventing it from disappearing when zoomed away. This is needed for visualization of small quads, e.g. silicon; detectors digits. TEveCalo classes -- Add support for automatic rebinning; of 3D views (only supported for 2D views before). In 2D mode support; automatic determination of the cell color based on the most energetic; contribution from available calo slices. Add support for enumerative registration of calorimeter towers. Before; one had to provide THStack as input. See TEveCaloDataVec; class. TEveTrackList -- Generalized API for finding of momentum; limits. TEveTrackPropagator now supports propagation of charged; particles in arbitrary / external magnetic field. Propagation can be; done with the helix-stepper or with the Runge-Kutta method. New abstract interface to magnetic field TEveMagField to get; field vector at given position. Implement two interfaces:; TEveMagFieldConst for constant magnetic field and; TEveMagFieldDuo (two constant magnetic fields, chosen by; cylindrical radius). See examples in tutorials/eve/track.C. TEvePointSetArray -- Added underflow and overflow bins. Many improvements in text and axis rendering for axes in; non-linear projections and for the dedicated lego view. New tutorial tutorials/eve/lineset_test.py showing how; tu run Eve from python. ",MatchSource.DOCS,graf3d/doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v522/index.html:1721,Energy Efficiency,charge,charged,1721,"er contents. Many improvements in text and axis rendering for orthographic; view markup. In TGLSceneBase add data-member Bool_t; fSelectable allowing one to preventing any of its elements to be; selected. Useful when given scene is used as background to help guid; the eye. Eve. Added support for internal window management. Windows can be; arranged in horizontal/vertical stacks, tabs and main windows.; The containers and individaul windows can be moved to arbitrary; window-slot. See classes TEveWindow and TEveWindowManager. See tutorial tutorials/eve/test_windows.C. TEveQuadSet -- Add flag 'Bool_t fAntiFlick'. If on (now the; default) it causes each quad to be also rendered as a pixel, thus; preventing it from disappearing when zoomed away. This is needed for visualization of small quads, e.g. silicon; detectors digits. TEveCalo classes -- Add support for automatic rebinning; of 3D views (only supported for 2D views before). In 2D mode support; automatic determination of the cell color based on the most energetic; contribution from available calo slices. Add support for enumerative registration of calorimeter towers. Before; one had to provide THStack as input. See TEveCaloDataVec; class. TEveTrackList -- Generalized API for finding of momentum; limits. TEveTrackPropagator now supports propagation of charged; particles in arbitrary / external magnetic field. Propagation can be; done with the helix-stepper or with the Runge-Kutta method. New abstract interface to magnetic field TEveMagField to get; field vector at given position. Implement two interfaces:; TEveMagFieldConst for constant magnetic field and; TEveMagFieldDuo (two constant magnetic fields, chosen by; cylindrical radius). See examples in tutorials/eve/track.C. TEvePointSetArray -- Added underflow and overflow bins. Many improvements in text and axis rendering for axes in; non-linear projections and for the dedicated lego view. New tutorial tutorials/eve/lineset_test.py showing how; tu run Eve from python. ",MatchSource.DOCS,graf3d/doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v522/index.html:1873,Integrability,interface,interface,1873,"er contents. Many improvements in text and axis rendering for orthographic; view markup. In TGLSceneBase add data-member Bool_t; fSelectable allowing one to preventing any of its elements to be; selected. Useful when given scene is used as background to help guid; the eye. Eve. Added support for internal window management. Windows can be; arranged in horizontal/vertical stacks, tabs and main windows.; The containers and individaul windows can be moved to arbitrary; window-slot. See classes TEveWindow and TEveWindowManager. See tutorial tutorials/eve/test_windows.C. TEveQuadSet -- Add flag 'Bool_t fAntiFlick'. If on (now the; default) it causes each quad to be also rendered as a pixel, thus; preventing it from disappearing when zoomed away. This is needed for visualization of small quads, e.g. silicon; detectors digits. TEveCalo classes -- Add support for automatic rebinning; of 3D views (only supported for 2D views before). In 2D mode support; automatic determination of the cell color based on the most energetic; contribution from available calo slices. Add support for enumerative registration of calorimeter towers. Before; one had to provide THStack as input. See TEveCaloDataVec; class. TEveTrackList -- Generalized API for finding of momentum; limits. TEveTrackPropagator now supports propagation of charged; particles in arbitrary / external magnetic field. Propagation can be; done with the helix-stepper or with the Runge-Kutta method. New abstract interface to magnetic field TEveMagField to get; field vector at given position. Implement two interfaces:; TEveMagFieldConst for constant magnetic field and; TEveMagFieldDuo (two constant magnetic fields, chosen by; cylindrical radius). See examples in tutorials/eve/track.C. TEvePointSetArray -- Added underflow and overflow bins. Many improvements in text and axis rendering for axes in; non-linear projections and for the dedicated lego view. New tutorial tutorials/eve/lineset_test.py showing how; tu run Eve from python. ",MatchSource.DOCS,graf3d/doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v522/index.html:1968,Integrability,interface,interfaces,1968,"er contents. Many improvements in text and axis rendering for orthographic; view markup. In TGLSceneBase add data-member Bool_t; fSelectable allowing one to preventing any of its elements to be; selected. Useful when given scene is used as background to help guid; the eye. Eve. Added support for internal window management. Windows can be; arranged in horizontal/vertical stacks, tabs and main windows.; The containers and individaul windows can be moved to arbitrary; window-slot. See classes TEveWindow and TEveWindowManager. See tutorial tutorials/eve/test_windows.C. TEveQuadSet -- Add flag 'Bool_t fAntiFlick'. If on (now the; default) it causes each quad to be also rendered as a pixel, thus; preventing it from disappearing when zoomed away. This is needed for visualization of small quads, e.g. silicon; detectors digits. TEveCalo classes -- Add support for automatic rebinning; of 3D views (only supported for 2D views before). In 2D mode support; automatic determination of the cell color based on the most energetic; contribution from available calo slices. Add support for enumerative registration of calorimeter towers. Before; one had to provide THStack as input. See TEveCaloDataVec; class. TEveTrackList -- Generalized API for finding of momentum; limits. TEveTrackPropagator now supports propagation of charged; particles in arbitrary / external magnetic field. Propagation can be; done with the helix-stepper or with the Runge-Kutta method. New abstract interface to magnetic field TEveMagField to get; field vector at given position. Implement two interfaces:; TEveMagFieldConst for constant magnetic field and; TEveMagFieldDuo (two constant magnetic fields, chosen by; cylindrical radius). See examples in tutorials/eve/track.C. TEvePointSetArray -- Added underflow and overflow bins. Many improvements in text and axis rendering for axes in; non-linear projections and for the dedicated lego view. New tutorial tutorials/eve/lineset_test.py showing how; tu run Eve from python. ",MatchSource.DOCS,graf3d/doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v522/index.html:1213,Safety,detect,detectors,1213,"nt TGLCameraOverlay that allows to; display: a) coordinate axes for orthographic mode; b) intersection of; center of screen with a given plane. Add suport for fading in/out of the viewer contents. Many improvements in text and axis rendering for orthographic; view markup. In TGLSceneBase add data-member Bool_t; fSelectable allowing one to preventing any of its elements to be; selected. Useful when given scene is used as background to help guid; the eye. Eve. Added support for internal window management. Windows can be; arranged in horizontal/vertical stacks, tabs and main windows.; The containers and individaul windows can be moved to arbitrary; window-slot. See classes TEveWindow and TEveWindowManager. See tutorial tutorials/eve/test_windows.C. TEveQuadSet -- Add flag 'Bool_t fAntiFlick'. If on (now the; default) it causes each quad to be also rendered as a pixel, thus; preventing it from disappearing when zoomed away. This is needed for visualization of small quads, e.g. silicon; detectors digits. TEveCalo classes -- Add support for automatic rebinning; of 3D views (only supported for 2D views before). In 2D mode support; automatic determination of the cell color based on the most energetic; contribution from available calo slices. Add support for enumerative registration of calorimeter towers. Before; one had to provide THStack as input. See TEveCaloDataVec; class. TEveTrackList -- Generalized API for finding of momentum; limits. TEveTrackPropagator now supports propagation of charged; particles in arbitrary / external magnetic field. Propagation can be; done with the helix-stepper or with the Runge-Kutta method. New abstract interface to magnetic field TEveMagField to get; field vector at given position. Implement two interfaces:; TEveMagFieldConst for constant magnetic field and; TEveMagFieldDuo (two constant magnetic fields, chosen by; cylindrical radius). See examples in tutorials/eve/track.C. TEvePointSetArray -- Added underflow and overflow bins. Many improv",MatchSource.DOCS,graf3d/doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v522/index.html:659,Usability,guid,guid,659,". OpenGL. Add support for showing tooltips for objects shown in; TGLViewer. See TGLEventHandler::TriggerTooltip(const; char* text) and RemoveTooltip(). Usage example is in; class TEveViewerList. Add new overlay element TGLCameraOverlay that allows to; display: a) coordinate axes for orthographic mode; b) intersection of; center of screen with a given plane. Add suport for fading in/out of the viewer contents. Many improvements in text and axis rendering for orthographic; view markup. In TGLSceneBase add data-member Bool_t; fSelectable allowing one to preventing any of its elements to be; selected. Useful when given scene is used as background to help guid; the eye. Eve. Added support for internal window management. Windows can be; arranged in horizontal/vertical stacks, tabs and main windows.; The containers and individaul windows can be moved to arbitrary; window-slot. See classes TEveWindow and TEveWindowManager. See tutorial tutorials/eve/test_windows.C. TEveQuadSet -- Add flag 'Bool_t fAntiFlick'. If on (now the; default) it causes each quad to be also rendered as a pixel, thus; preventing it from disappearing when zoomed away. This is needed for visualization of small quads, e.g. silicon; detectors digits. TEveCalo classes -- Add support for automatic rebinning; of 3D views (only supported for 2D views before). In 2D mode support; automatic determination of the cell color based on the most energetic; contribution from available calo slices. Add support for enumerative registration of calorimeter towers. Before; one had to provide THStack as input. See TEveCaloDataVec; class. TEveTrackList -- Generalized API for finding of momentum; limits. TEveTrackPropagator now supports propagation of charged; particles in arbitrary / external magnetic field. Propagation can be; done with the helix-stepper or with the Runge-Kutta method. New abstract interface to magnetic field TEveMagField to get; field vector at given position. Implement two interfaces:; TEveMagFieldConst fo",MatchSource.DOCS,graf3d/doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v524/index.html:134,Availability,avail,available,134,". OpenGL; Major changes. GLEW - The OpenGL Extension Wrangler Library - has been added to; facilitate detection of OpenGL version and available extensions at; run-time. This will allow usage of advanced visualization techniques; while still allowing fall-back solutions to be used on systems not; supporting the required functionality. If GLEW and GLEW-devel packages; are detected during configure, the ROOT provided GLEW is not; built. See also:; http://glew.sourceforge.net/. Latest (1.3.3) version of gl2ps has been imported (we had 1.2.6; before). See http://www.geuz.org/gl2ps/; for detailed change-log. New implementation of GL-in-TPad - instead of mixture of GL and; non-GL graphics in a pixmap all pad graphics (2D/3D) is now; done by OpenGL. To make this possible new TVirtualPadPainter,; TPadPainter, TGLPadPainter classes were introduced; and painting operations inside TPad class were modified to; use TVirtualPadPainter instead of TVirtualX.; TVirtualPadPainter is an abstract base class, interface for; drawing 2D primitives and pixmap management. TPadPainter is; a default, non-GL implementation, based on TVirtualX; (gVirtualX). TGLPadPainter is a GL; implementation. Currently, TGLPadPainter does not support; off-screen rendering (support for frame-buffer objects is planned). Current limitations:. The glpad can be saved only as PS now.; Several sub-pads with complex 3d geometry can be slow due to lack; of off-screen rendering which would allow for caching of resulting images. Future directions:. Use frame-buffer objects for off-screen rendering.; Support ""Save as"" png, jpg, pdf, etc.; With GLEW and GL-shading-language, use of hardware anti-aliasing and; shaders is possible. Prototype visualization of 5-dimensional distributions:. New option for TTree::Draw - ""gl5d"", for the case you have 5 and; more dimensional dataset.; Set of iso-surfaces created, 4-th dimension is used to select iso-level.; ""gl5d"" is now very similar to ""gliso"" option, but instead of; filling TH3 o",MatchSource.DOCS,graf3d/doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v524/index.html:4226,Availability,avail,available,4226,"ects. The annotation can be created from the TGLViewer editor; (""Guides"" tab). After that it can be dragged around the screen, edited; or closed. TGLAxisPainter - reimplemented to completely separate; label and tick-mark positioning code from the rendering itself. TGLSAViewer - when exporting an image properly take into; account image extension if it was typed by the user. TGLFont now uses the same font-naming scheme as the rest; of ROOT (had to specify font-file names before). Overlay-object management has been improved. Allow clipping object to be fixed by user - until now it was updated; on every redraw. See TGLViewer::SetClipAutoUpdate(). Eve. TEveElement - add context-menu functions allowing the; source-object to be printed, dumped or exported to CINT. TEveTrack - added flag for locking of current; track-points - the track will not be re-extrapolated automatically; even when the extrapolation parameters are changed. TEveTrack - removed ALICE specific ImportXyzz(); functions for loading of kinematics, hits and clusters associated with; a track. These were calling macros that were not available in ROOT. Several improvements in rendering of coordinate axes; in TEveCaloLego and TEveProjectionAxes. New class TEveJetCone for display of circular and; elliptic jet-cones clipped to the calorimeter's inner surface. Add support for extraction of composite-shape tesselations. A new; class TEveGeoPolyShape has been introduced to make this; tesselation serializable. See example; in tutorials/eve/csgdemo.C. Generalize representation of EVE-window title-bar - it can be; modified to display user-provided icons, menus or buttons. TEveWindowPack now supports registration of sub-frames; with weights that determine relative sub-frame length along the pack's; major direction. TEveUtil::SetColorBrightnes() now scales colors; according to screen-gamma transformation formula. Some examples using the GUI recorder have been added to the; tutorials. See macros tutorials/eve/*_playback.C. ",MatchSource.DOCS,graf3d/doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v524/index.html:2992,Deployability,toggle,toggles,2992," ""gliso"" option, but instead of; filling TH3 object (very primitive and rude ""density estimator""),; points are fed directly to the kernel density estimator, based on; Fast Gauss Transform. See TGL5D* classes. Limitations: 5-th dimension is not shown correctly at the moment; (lacks sofisticated algorithms, we do not have in a ROOT's math; library now). Because of this limitation, GUI is just a toy now, must; be changed. Future directions:. GUI improvements.; Support several different density estimators.; Implement regression tools. Minor changes, fixes and improvements. It is now possible to draw a histogram with the ""GLBOX"" in the; GL-viewer. New class TGLColor has been introduced to simplify color; management in TGLViewer and TGLRnrCtx. Add support for several color-sets (class TGLColorSet -; each defines colors for background, foreground, outline, markup and; for outlines of selected and highlighted objects. This also allows for independent changing of background color and; outline mode in the GL viewer - the e key now toggles between; dark / light background. New class TGLAnnotation - it allows display of; annotation-text on top of displayed objects. The annotation can be created from the TGLViewer editor; (""Guides"" tab). After that it can be dragged around the screen, edited; or closed. TGLAxisPainter - reimplemented to completely separate; label and tick-mark positioning code from the rendering itself. TGLSAViewer - when exporting an image properly take into; account image extension if it was typed by the user. TGLFont now uses the same font-naming scheme as the rest; of ROOT (had to specify font-file names before). Overlay-object management has been improved. Allow clipping object to be fixed by user - until now it was updated; on every redraw. See TGLViewer::SetClipAutoUpdate(). Eve. TEveElement - add context-menu functions allowing the; source-object to be printed, dumped or exported to CINT. TEveTrack - added flag for locking of current; track-points - the t",MatchSource.DOCS,graf3d/doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v524/index.html:3710,Deployability,update,updated,3710," TGLRnrCtx. Add support for several color-sets (class TGLColorSet -; each defines colors for background, foreground, outline, markup and; for outlines of selected and highlighted objects. This also allows for independent changing of background color and; outline mode in the GL viewer - the e key now toggles between; dark / light background. New class TGLAnnotation - it allows display of; annotation-text on top of displayed objects. The annotation can be created from the TGLViewer editor; (""Guides"" tab). After that it can be dragged around the screen, edited; or closed. TGLAxisPainter - reimplemented to completely separate; label and tick-mark positioning code from the rendering itself. TGLSAViewer - when exporting an image properly take into; account image extension if it was typed by the user. TGLFont now uses the same font-naming scheme as the rest; of ROOT (had to specify font-file names before). Overlay-object management has been improved. Allow clipping object to be fixed by user - until now it was updated; on every redraw. See TGLViewer::SetClipAutoUpdate(). Eve. TEveElement - add context-menu functions allowing the; source-object to be printed, dumped or exported to CINT. TEveTrack - added flag for locking of current; track-points - the track will not be re-extrapolated automatically; even when the extrapolation parameters are changed. TEveTrack - removed ALICE specific ImportXyzz(); functions for loading of kinematics, hits and clusters associated with; a track. These were calling macros that were not available in ROOT. Several improvements in rendering of coordinate axes; in TEveCaloLego and TEveProjectionAxes. New class TEveJetCone for display of circular and; elliptic jet-cones clipped to the calorimeter's inner surface. Add support for extraction of composite-shape tesselations. A new; class TEveGeoPolyShape has been introduced to make this; tesselation serializable. See example; in tutorials/eve/csgdemo.C. Generalize representation of EVE-window title-ba",MatchSource.DOCS,graf3d/doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v524/index.html:1003,Integrability,interface,interface,1003,"; Major changes. GLEW - The OpenGL Extension Wrangler Library - has been added to; facilitate detection of OpenGL version and available extensions at; run-time. This will allow usage of advanced visualization techniques; while still allowing fall-back solutions to be used on systems not; supporting the required functionality. If GLEW and GLEW-devel packages; are detected during configure, the ROOT provided GLEW is not; built. See also:; http://glew.sourceforge.net/. Latest (1.3.3) version of gl2ps has been imported (we had 1.2.6; before). See http://www.geuz.org/gl2ps/; for detailed change-log. New implementation of GL-in-TPad - instead of mixture of GL and; non-GL graphics in a pixmap all pad graphics (2D/3D) is now; done by OpenGL. To make this possible new TVirtualPadPainter,; TPadPainter, TGLPadPainter classes were introduced; and painting operations inside TPad class were modified to; use TVirtualPadPainter instead of TVirtualX.; TVirtualPadPainter is an abstract base class, interface for; drawing 2D primitives and pixmap management. TPadPainter is; a default, non-GL implementation, based on TVirtualX; (gVirtualX). TGLPadPainter is a GL; implementation. Currently, TGLPadPainter does not support; off-screen rendering (support for frame-buffer objects is planned). Current limitations:. The glpad can be saved only as PS now.; Several sub-pads with complex 3d geometry can be slow due to lack; of off-screen rendering which would allow for caching of resulting images. Future directions:. Use frame-buffer objects for off-screen rendering.; Support ""Save as"" png, jpg, pdf, etc.; With GLEW and GL-shading-language, use of hardware anti-aliasing and; shaders is possible. Prototype visualization of 5-dimensional distributions:. New option for TTree::Draw - ""gl5d"", for the case you have 5 and; more dimensional dataset.; Set of iso-surfaces created, 4-th dimension is used to select iso-level.; ""gl5d"" is now very similar to ""gliso"" option, but instead of; filling TH3 object (v",MatchSource.DOCS,graf3d/doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v524/index.html:389,Modifiability,config,configure,389,". OpenGL; Major changes. GLEW - The OpenGL Extension Wrangler Library - has been added to; facilitate detection of OpenGL version and available extensions at; run-time. This will allow usage of advanced visualization techniques; while still allowing fall-back solutions to be used on systems not; supporting the required functionality. If GLEW and GLEW-devel packages; are detected during configure, the ROOT provided GLEW is not; built. See also:; http://glew.sourceforge.net/. Latest (1.3.3) version of gl2ps has been imported (we had 1.2.6; before). See http://www.geuz.org/gl2ps/; for detailed change-log. New implementation of GL-in-TPad - instead of mixture of GL and; non-GL graphics in a pixmap all pad graphics (2D/3D) is now; done by OpenGL. To make this possible new TVirtualPadPainter,; TPadPainter, TGLPadPainter classes were introduced; and painting operations inside TPad class were modified to; use TVirtualPadPainter instead of TVirtualX.; TVirtualPadPainter is an abstract base class, interface for; drawing 2D primitives and pixmap management. TPadPainter is; a default, non-GL implementation, based on TVirtualX; (gVirtualX). TGLPadPainter is a GL; implementation. Currently, TGLPadPainter does not support; off-screen rendering (support for frame-buffer objects is planned). Current limitations:. The glpad can be saved only as PS now.; Several sub-pads with complex 3d geometry can be slow due to lack; of off-screen rendering which would allow for caching of resulting images. Future directions:. Use frame-buffer objects for off-screen rendering.; Support ""Save as"" png, jpg, pdf, etc.; With GLEW and GL-shading-language, use of hardware anti-aliasing and; shaders is possible. Prototype visualization of 5-dimensional distributions:. New option for TTree::Draw - ""gl5d"", for the case you have 5 and; more dimensional dataset.; Set of iso-surfaces created, 4-th dimension is used to select iso-level.; ""gl5d"" is now very similar to ""gliso"" option, but instead of; filling TH3 o",MatchSource.DOCS,graf3d/doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v524/index.html:4119,Performance,load,loading,4119,"jects. The annotation can be created from the TGLViewer editor; (""Guides"" tab). After that it can be dragged around the screen, edited; or closed. TGLAxisPainter - reimplemented to completely separate; label and tick-mark positioning code from the rendering itself. TGLSAViewer - when exporting an image properly take into; account image extension if it was typed by the user. TGLFont now uses the same font-naming scheme as the rest; of ROOT (had to specify font-file names before). Overlay-object management has been improved. Allow clipping object to be fixed by user - until now it was updated; on every redraw. See TGLViewer::SetClipAutoUpdate(). Eve. TEveElement - add context-menu functions allowing the; source-object to be printed, dumped or exported to CINT. TEveTrack - added flag for locking of current; track-points - the track will not be re-extrapolated automatically; even when the extrapolation parameters are changed. TEveTrack - removed ALICE specific ImportXyzz(); functions for loading of kinematics, hits and clusters associated with; a track. These were calling macros that were not available in ROOT. Several improvements in rendering of coordinate axes; in TEveCaloLego and TEveProjectionAxes. New class TEveJetCone for display of circular and; elliptic jet-cones clipped to the calorimeter's inner surface. Add support for extraction of composite-shape tesselations. A new; class TEveGeoPolyShape has been introduced to make this; tesselation serializable. See example; in tutorials/eve/csgdemo.C. Generalize representation of EVE-window title-bar - it can be; modified to display user-provided icons, menus or buttons. TEveWindowPack now supports registration of sub-frames; with weights that determine relative sub-frame length along the pack's; major direction. TEveUtil::SetColorBrightnes() now scales colors; according to screen-gamma transformation formula. Some examples using the GUI recorder have been added to the; tutorials. See macros tutorials/eve/*_playback.C.",MatchSource.DOCS,graf3d/doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v524/index.html:102,Safety,detect,detection,102,". OpenGL; Major changes. GLEW - The OpenGL Extension Wrangler Library - has been added to; facilitate detection of OpenGL version and available extensions at; run-time. This will allow usage of advanced visualization techniques; while still allowing fall-back solutions to be used on systems not; supporting the required functionality. If GLEW and GLEW-devel packages; are detected during configure, the ROOT provided GLEW is not; built. See also:; http://glew.sourceforge.net/. Latest (1.3.3) version of gl2ps has been imported (we had 1.2.6; before). See http://www.geuz.org/gl2ps/; for detailed change-log. New implementation of GL-in-TPad - instead of mixture of GL and; non-GL graphics in a pixmap all pad graphics (2D/3D) is now; done by OpenGL. To make this possible new TVirtualPadPainter,; TPadPainter, TGLPadPainter classes were introduced; and painting operations inside TPad class were modified to; use TVirtualPadPainter instead of TVirtualX.; TVirtualPadPainter is an abstract base class, interface for; drawing 2D primitives and pixmap management. TPadPainter is; a default, non-GL implementation, based on TVirtualX; (gVirtualX). TGLPadPainter is a GL; implementation. Currently, TGLPadPainter does not support; off-screen rendering (support for frame-buffer objects is planned). Current limitations:. The glpad can be saved only as PS now.; Several sub-pads with complex 3d geometry can be slow due to lack; of off-screen rendering which would allow for caching of resulting images. Future directions:. Use frame-buffer objects for off-screen rendering.; Support ""Save as"" png, jpg, pdf, etc.; With GLEW and GL-shading-language, use of hardware anti-aliasing and; shaders is possible. Prototype visualization of 5-dimensional distributions:. New option for TTree::Draw - ""gl5d"", for the case you have 5 and; more dimensional dataset.; Set of iso-surfaces created, 4-th dimension is used to select iso-level.; ""gl5d"" is now very similar to ""gliso"" option, but instead of; filling TH3 o",MatchSource.DOCS,graf3d/doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v524/index.html:373,Safety,detect,detected,373,". OpenGL; Major changes. GLEW - The OpenGL Extension Wrangler Library - has been added to; facilitate detection of OpenGL version and available extensions at; run-time. This will allow usage of advanced visualization techniques; while still allowing fall-back solutions to be used on systems not; supporting the required functionality. If GLEW and GLEW-devel packages; are detected during configure, the ROOT provided GLEW is not; built. See also:; http://glew.sourceforge.net/. Latest (1.3.3) version of gl2ps has been imported (we had 1.2.6; before). See http://www.geuz.org/gl2ps/; for detailed change-log. New implementation of GL-in-TPad - instead of mixture of GL and; non-GL graphics in a pixmap all pad graphics (2D/3D) is now; done by OpenGL. To make this possible new TVirtualPadPainter,; TPadPainter, TGLPadPainter classes were introduced; and painting operations inside TPad class were modified to; use TVirtualPadPainter instead of TVirtualX.; TVirtualPadPainter is an abstract base class, interface for; drawing 2D primitives and pixmap management. TPadPainter is; a default, non-GL implementation, based on TVirtualX; (gVirtualX). TGLPadPainter is a GL; implementation. Currently, TGLPadPainter does not support; off-screen rendering (support for frame-buffer objects is planned). Current limitations:. The glpad can be saved only as PS now.; Several sub-pads with complex 3d geometry can be slow due to lack; of off-screen rendering which would allow for caching of resulting images. Future directions:. Use frame-buffer objects for off-screen rendering.; Support ""Save as"" png, jpg, pdf, etc.; With GLEW and GL-shading-language, use of hardware anti-aliasing and; shaders is possible. Prototype visualization of 5-dimensional distributions:. New option for TTree::Draw - ""gl5d"", for the case you have 5 and; more dimensional dataset.; Set of iso-surfaces created, 4-th dimension is used to select iso-level.; ""gl5d"" is now very similar to ""gliso"" option, but instead of; filling TH3 o",MatchSource.DOCS,graf3d/doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v524/index.html:605,Testability,log,log,605,". OpenGL; Major changes. GLEW - The OpenGL Extension Wrangler Library - has been added to; facilitate detection of OpenGL version and available extensions at; run-time. This will allow usage of advanced visualization techniques; while still allowing fall-back solutions to be used on systems not; supporting the required functionality. If GLEW and GLEW-devel packages; are detected during configure, the ROOT provided GLEW is not; built. See also:; http://glew.sourceforge.net/. Latest (1.3.3) version of gl2ps has been imported (we had 1.2.6; before). See http://www.geuz.org/gl2ps/; for detailed change-log. New implementation of GL-in-TPad - instead of mixture of GL and; non-GL graphics in a pixmap all pad graphics (2D/3D) is now; done by OpenGL. To make this possible new TVirtualPadPainter,; TPadPainter, TGLPadPainter classes were introduced; and painting operations inside TPad class were modified to; use TVirtualPadPainter instead of TVirtualX.; TVirtualPadPainter is an abstract base class, interface for; drawing 2D primitives and pixmap management. TPadPainter is; a default, non-GL implementation, based on TVirtualX; (gVirtualX). TGLPadPainter is a GL; implementation. Currently, TGLPadPainter does not support; off-screen rendering (support for frame-buffer objects is planned). Current limitations:. The glpad can be saved only as PS now.; Several sub-pads with complex 3d geometry can be slow due to lack; of off-screen rendering which would allow for caching of resulting images. Future directions:. Use frame-buffer objects for off-screen rendering.; Support ""Save as"" png, jpg, pdf, etc.; With GLEW and GL-shading-language, use of hardware anti-aliasing and; shaders is possible. Prototype visualization of 5-dimensional distributions:. New option for TTree::Draw - ""gl5d"", for the case you have 5 and; more dimensional dataset.; Set of iso-surfaces created, 4-th dimension is used to select iso-level.; ""gl5d"" is now very similar to ""gliso"" option, but instead of; filling TH3 o",MatchSource.DOCS,graf3d/doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v524/index.html:2648,Usability,simpl,simplify,2648,"hardware anti-aliasing and; shaders is possible. Prototype visualization of 5-dimensional distributions:. New option for TTree::Draw - ""gl5d"", for the case you have 5 and; more dimensional dataset.; Set of iso-surfaces created, 4-th dimension is used to select iso-level.; ""gl5d"" is now very similar to ""gliso"" option, but instead of; filling TH3 object (very primitive and rude ""density estimator""),; points are fed directly to the kernel density estimator, based on; Fast Gauss Transform. See TGL5D* classes. Limitations: 5-th dimension is not shown correctly at the moment; (lacks sofisticated algorithms, we do not have in a ROOT's math; library now). Because of this limitation, GUI is just a toy now, must; be changed. Future directions:. GUI improvements.; Support several different density estimators.; Implement regression tools. Minor changes, fixes and improvements. It is now possible to draw a histogram with the ""GLBOX"" in the; GL-viewer. New class TGLColor has been introduced to simplify color; management in TGLViewer and TGLRnrCtx. Add support for several color-sets (class TGLColorSet -; each defines colors for background, foreground, outline, markup and; for outlines of selected and highlighted objects. This also allows for independent changing of background color and; outline mode in the GL viewer - the e key now toggles between; dark / light background. New class TGLAnnotation - it allows display of; annotation-text on top of displayed objects. The annotation can be created from the TGLViewer editor; (""Guides"" tab). After that it can be dragged around the screen, edited; or closed. TGLAxisPainter - reimplemented to completely separate; label and tick-mark positioning code from the rendering itself. TGLSAViewer - when exporting an image properly take into; account image extension if it was typed by the user. TGLFont now uses the same font-naming scheme as the rest; of ROOT (had to specify font-file names before). Overlay-object management has been improved. Allow",MatchSource.DOCS,graf3d/doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v524/index.html:3186,Usability,Guid,Guides,3186,". Limitations: 5-th dimension is not shown correctly at the moment; (lacks sofisticated algorithms, we do not have in a ROOT's math; library now). Because of this limitation, GUI is just a toy now, must; be changed. Future directions:. GUI improvements.; Support several different density estimators.; Implement regression tools. Minor changes, fixes and improvements. It is now possible to draw a histogram with the ""GLBOX"" in the; GL-viewer. New class TGLColor has been introduced to simplify color; management in TGLViewer and TGLRnrCtx. Add support for several color-sets (class TGLColorSet -; each defines colors for background, foreground, outline, markup and; for outlines of selected and highlighted objects. This also allows for independent changing of background color and; outline mode in the GL viewer - the e key now toggles between; dark / light background. New class TGLAnnotation - it allows display of; annotation-text on top of displayed objects. The annotation can be created from the TGLViewer editor; (""Guides"" tab). After that it can be dragged around the screen, edited; or closed. TGLAxisPainter - reimplemented to completely separate; label and tick-mark positioning code from the rendering itself. TGLSAViewer - when exporting an image properly take into; account image extension if it was typed by the user. TGLFont now uses the same font-naming scheme as the rest; of ROOT (had to specify font-file names before). Overlay-object management has been improved. Allow clipping object to be fixed by user - until now it was updated; on every redraw. See TGLViewer::SetClipAutoUpdate(). Eve. TEveElement - add context-menu functions allowing the; source-object to be printed, dumped or exported to CINT. TEveTrack - added flag for locking of current; track-points - the track will not be re-extrapolated automatically; even when the extrapolation parameters are changed. TEveTrack - removed ALICE specific ImportXyzz(); functions for loading of kinematics, hits and clusters ass",MatchSource.DOCS,graf3d/doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v526/index.html:5911,Availability,avail,available,5911,"nGL; Major changes. Add support for stereo rendering. This requires quad buffer; support from OpenGL driver and hardware as well as shutter; glasses. See tutorial eve/geom_cms_stereo.C.; Support for rendering into frame-buffer objects (FBO).; Using FBOs, it is now possible to save bitmap image formats at; any resolution and even when the GL window is not on screen.; Add support for global scaling of point-sizes, line-widths and font-sizes.; Generalize secondary-selection handling so that it is possible to; implement various handling schemes. For example see individual; calorimeter tower selection in TEveCalo-classes.; Generalize handling of highlight feedback -- this is now done via; a virtual TGLLogicalShape::DrawHighlight(...) so that it can be; changed by sub-classes.; The stand-alone GL viewer now supports hiding of menu-bar. It; collapses into a narrow band on top of the viewer that expands when; mouse pointer enters its area. This allows for better utilization of; the screen while still providing the controls available from the menu.; Editor for ""gl5d"" option was improved.; TGLTH3Composition class to combine several TH3s in one plot. Minor changes. Use Diagonal() instead of Volume() to determine if a bounding-box; is empty and also for sorting of the scene-elements by size. The; previous implementation caused problems with 2D and 1D objects.; Several improvements in camera configuration and handling.; Improve mouse-button handling. After a button goes down, other; buttons do not interfere with user interaction until the first button; is released.; When initializing TGLClipPlane for the first time, place it in; the center of the scene's bounding-box. Before that, plane was always; positioned at (0,0,0) which lead to unexpected behaviour when scene; was not centered at the origin.; Add virtual function TGLClip::Setup(const TGLVector3&, const; TGLVector3&) and implement it for plane and box clipping objects. See; function documentation for; TGLClipPlane; and; TGL",MatchSource.DOCS,graf3d/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v526/index.html:6362,Availability,down,down,6362,"r changes. Add support for stereo rendering. This requires quad buffer; support from OpenGL driver and hardware as well as shutter; glasses. See tutorial eve/geom_cms_stereo.C.; Support for rendering into frame-buffer objects (FBO).; Using FBOs, it is now possible to save bitmap image formats at; any resolution and even when the GL window is not on screen.; Add support for global scaling of point-sizes, line-widths and font-sizes.; Generalize secondary-selection handling so that it is possible to; implement various handling schemes. For example see individual; calorimeter tower selection in TEveCalo-classes.; Generalize handling of highlight feedback -- this is now done via; a virtual TGLLogicalShape::DrawHighlight(...) so that it can be; changed by sub-classes.; The stand-alone GL viewer now supports hiding of menu-bar. It; collapses into a narrow band on top of the viewer that expands when; mouse pointer enters its area. This allows for better utilization of; the screen while still providing the controls available from the menu.; Editor for ""gl5d"" option was improved.; TGLTH3Composition class to combine several TH3s in one plot. Minor changes. Use Diagonal() instead of Volume() to determine if a bounding-box; is empty and also for sorting of the scene-elements by size. The; previous implementation caused problems with 2D and 1D objects.; Several improvements in camera configuration and handling.; Improve mouse-button handling. After a button goes down, other; buttons do not interfere with user interaction until the first button; is released.; When initializing TGLClipPlane for the first time, place it in; the center of the scene's bounding-box. Before that, plane was always; positioned at (0,0,0) which lead to unexpected behaviour when scene; was not centered at the origin.; Add virtual function TGLClip::Setup(const TGLVector3&, const; TGLVector3&) and implement it for plane and box clipping objects. See; function documentation for; TGLClipPlane; and; TGLClipBox. ",MatchSource.DOCS,graf3d/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v526/index.html:3618,Deployability,configurat,configuration,3618,"made; projectable and corresponding TEveElementListProjected class; introduced. This also fixed the problem with render-state not being; propagated to projected classes. The check whether to project a sub-tree of elements is still performed.; TEveGeoShapeProjected has been introduced to represent the 3D; projection of a TEveGeoShape (2D projection is handled by; TEvePolygonSetProjected). Points, lines and tracks use the same projected class for both 2D; and 3D projections. An example showing this functionality has been added as a new tab in; projection_prescale.C.; TEveManager now allows simultaneous usage of several objects; editors. Simply click on the top name-button in object editor to; create a standalone editor for this object in a separate window. This; facilitates operation when several objects need to be modifed in; parallel.; New tutorial alice_vsd.C has been added. It shows; how to read Visualization Summary Data files (VSD).; Code for operating three view configuration (3D / RPhi / Rhoz); has been extracted from alice_esd.C tutorial; into MultiView.C tutorial. This is now also used; by alice_vsd.C and can serve as an example to those that; need to implement similar functionality. Screenshot of calorimeters.C tutorial. Note the; individual tower selection propagated accross all the views. Screenshot of alice_vsd.C tutorial also showing the; functionality of the MultiView class. New title is also; visible in the GUI editor. Minor changes. Object editors in Eve now show the title as button.; ; Left mouse opens a floating editor that can be positioned; anywhere on the screen. This allows a user to have commonly used; editors always accessible. Maximum number of floating editors is; limited to 10.; Right mouse opens context menu for the object. In TEveFrambox add support for drawing of back-polygons for 3D; frame-boxes. Those should be transparent, otherwise the things inside; are not visible.; TEveRGBAPalette - implement additional flag fFixColorRange specif",MatchSource.DOCS,graf3d/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v526/index.html:6282,Deployability,configurat,configuration,6282,"r changes. Add support for stereo rendering. This requires quad buffer; support from OpenGL driver and hardware as well as shutter; glasses. See tutorial eve/geom_cms_stereo.C.; Support for rendering into frame-buffer objects (FBO).; Using FBOs, it is now possible to save bitmap image formats at; any resolution and even when the GL window is not on screen.; Add support for global scaling of point-sizes, line-widths and font-sizes.; Generalize secondary-selection handling so that it is possible to; implement various handling schemes. For example see individual; calorimeter tower selection in TEveCalo-classes.; Generalize handling of highlight feedback -- this is now done via; a virtual TGLLogicalShape::DrawHighlight(...) so that it can be; changed by sub-classes.; The stand-alone GL viewer now supports hiding of menu-bar. It; collapses into a narrow band on top of the viewer that expands when; mouse pointer enters its area. This allows for better utilization of; the screen while still providing the controls available from the menu.; Editor for ""gl5d"" option was improved.; TGLTH3Composition class to combine several TH3s in one plot. Minor changes. Use Diagonal() instead of Volume() to determine if a bounding-box; is empty and also for sorting of the scene-elements by size. The; previous implementation caused problems with 2D and 1D objects.; Several improvements in camera configuration and handling.; Improve mouse-button handling. After a button goes down, other; buttons do not interfere with user interaction until the first button; is released.; When initializing TGLClipPlane for the first time, place it in; the center of the scene's bounding-box. Before that, plane was always; positioned at (0,0,0) which lead to unexpected behaviour when scene; was not centered at the origin.; Add virtual function TGLClip::Setup(const TGLVector3&, const; TGLVector3&) and implement it for plane and box clipping objects. See; function documentation for; TGLClipPlane; and; TGLClipBox. ",MatchSource.DOCS,graf3d/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v526/index.html:6449,Deployability,release,released,6449,"r changes. Add support for stereo rendering. This requires quad buffer; support from OpenGL driver and hardware as well as shutter; glasses. See tutorial eve/geom_cms_stereo.C.; Support for rendering into frame-buffer objects (FBO).; Using FBOs, it is now possible to save bitmap image formats at; any resolution and even when the GL window is not on screen.; Add support for global scaling of point-sizes, line-widths and font-sizes.; Generalize secondary-selection handling so that it is possible to; implement various handling schemes. For example see individual; calorimeter tower selection in TEveCalo-classes.; Generalize handling of highlight feedback -- this is now done via; a virtual TGLLogicalShape::DrawHighlight(...) so that it can be; changed by sub-classes.; The stand-alone GL viewer now supports hiding of menu-bar. It; collapses into a narrow band on top of the viewer that expands when; mouse pointer enters its area. This allows for better utilization of; the screen while still providing the controls available from the menu.; Editor for ""gl5d"" option was improved.; TGLTH3Composition class to combine several TH3s in one plot. Minor changes. Use Diagonal() instead of Volume() to determine if a bounding-box; is empty and also for sorting of the scene-elements by size. The; previous implementation caused problems with 2D and 1D objects.; Several improvements in camera configuration and handling.; Improve mouse-button handling. After a button goes down, other; buttons do not interfere with user interaction until the first button; is released.; When initializing TGLClipPlane for the first time, place it in; the center of the scene's bounding-box. Before that, plane was always; positioned at (0,0,0) which lead to unexpected behaviour when scene; was not centered at the origin.; Add virtual function TGLClip::Setup(const TGLVector3&, const; TGLVector3&) and implement it for plane and box clipping objects. See; function documentation for; TGLClipPlane; and; TGLClipBox. ",MatchSource.DOCS,graf3d/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v526/index.html:579,Energy Efficiency,energy,energy-scales,579,". Eve; Major changes. Add support for hierarchical positioning of TEveElements in any; specific scene. This allows for easier positioning of elements in; dynamic scenes when child elements are attached to their parent; elements and are supposed to follow their movements / rotations.; Several significant improvements in TEveCaloLego classes. Calo classes now support individal tower selection. The; selection is properly maintained across all views (3D / RPhi / RhoZ; / Lego). See screenshot below.; In top view draw cell values, if their screen size is above given limit.; New energy-scales drawn as overlay (in color and size mode). The; legend can be moved around the screen with the mouse.; Fix transition between orthographic and perspective camera in; TEveCaloLego event handler.; Use color-sets in overlays and axis in order to automatically; keep same contrast when changing background color. In TEveTrackPropagator improve overall trajectory extrapolation; through the path-marks. Fix a problem with path-mark / boundary; approach with near-zero magnetic field. Maximum R / Z of extrapolation that can be set in the object; editor can now be changed via static data-members; fgEditorMaxR and fgEditorMaxZ.; Generalization of selection from GL viewers to support internal; multiple selection from the elements.; Add support for selection of individual calorimeter towers in; TEveCalo classes.; Add support for 3D -> 3D projections. This also allows for; scaling (compression/extension) of certain space region as required by; NA62 to show the 200m long detector in a meaningful way. Several generalizations of the projection infrastructure were; required:; TEveProjectable::ProjectedClass() takes an argument:; virtual TClass* ProjectedClass(const TEveProjection* p) const = 0;; thus allowing different projected classes for different projections.; All TEveProjection::ProjectPoint/Vector(...) functions have an; additional ""depth"" argument thus allowing the projected classes to; skip explic",MatchSource.DOCS,graf3d/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v526/index.html:3618,Modifiability,config,configuration,3618,"made; projectable and corresponding TEveElementListProjected class; introduced. This also fixed the problem with render-state not being; propagated to projected classes. The check whether to project a sub-tree of elements is still performed.; TEveGeoShapeProjected has been introduced to represent the 3D; projection of a TEveGeoShape (2D projection is handled by; TEvePolygonSetProjected). Points, lines and tracks use the same projected class for both 2D; and 3D projections. An example showing this functionality has been added as a new tab in; projection_prescale.C.; TEveManager now allows simultaneous usage of several objects; editors. Simply click on the top name-button in object editor to; create a standalone editor for this object in a separate window. This; facilitates operation when several objects need to be modifed in; parallel.; New tutorial alice_vsd.C has been added. It shows; how to read Visualization Summary Data files (VSD).; Code for operating three view configuration (3D / RPhi / Rhoz); has been extracted from alice_esd.C tutorial; into MultiView.C tutorial. This is now also used; by alice_vsd.C and can serve as an example to those that; need to implement similar functionality. Screenshot of calorimeters.C tutorial. Note the; individual tower selection propagated accross all the views. Screenshot of alice_vsd.C tutorial also showing the; functionality of the MultiView class. New title is also; visible in the GUI editor. Minor changes. Object editors in Eve now show the title as button.; ; Left mouse opens a floating editor that can be positioned; anywhere on the screen. This allows a user to have commonly used; editors always accessible. Maximum number of floating editors is; limited to 10.; Right mouse opens context menu for the object. In TEveFrambox add support for drawing of back-polygons for 3D; frame-boxes. Those should be transparent, otherwise the things inside; are not visible.; TEveRGBAPalette - implement additional flag fFixColorRange specif",MatchSource.DOCS,graf3d/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v526/index.html:6282,Modifiability,config,configuration,6282,"r changes. Add support for stereo rendering. This requires quad buffer; support from OpenGL driver and hardware as well as shutter; glasses. See tutorial eve/geom_cms_stereo.C.; Support for rendering into frame-buffer objects (FBO).; Using FBOs, it is now possible to save bitmap image formats at; any resolution and even when the GL window is not on screen.; Add support for global scaling of point-sizes, line-widths and font-sizes.; Generalize secondary-selection handling so that it is possible to; implement various handling schemes. For example see individual; calorimeter tower selection in TEveCalo-classes.; Generalize handling of highlight feedback -- this is now done via; a virtual TGLLogicalShape::DrawHighlight(...) so that it can be; changed by sub-classes.; The stand-alone GL viewer now supports hiding of menu-bar. It; collapses into a narrow band on top of the viewer that expands when; mouse pointer enters its area. This allows for better utilization of; the screen while still providing the controls available from the menu.; Editor for ""gl5d"" option was improved.; TGLTH3Composition class to combine several TH3s in one plot. Minor changes. Use Diagonal() instead of Volume() to determine if a bounding-box; is empty and also for sorting of the scene-elements by size. The; previous implementation caused problems with 2D and 1D objects.; Several improvements in camera configuration and handling.; Improve mouse-button handling. After a button goes down, other; buttons do not interfere with user interaction until the first button; is released.; When initializing TGLClipPlane for the first time, place it in; the center of the scene's bounding-box. Before that, plane was always; positioned at (0,0,0) which lead to unexpected behaviour when scene; was not centered at the origin.; Add virtual function TGLClip::Setup(const TGLVector3&, const; TGLVector3&) and implement it for plane and box clipping objects. See; function documentation for; TGLClipPlane; and; TGLClipBox. ",MatchSource.DOCS,graf3d/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v526/index.html:2529,Performance,perform,performs,2529,"the 200m long detector in a meaningful way. Several generalizations of the projection infrastructure were; required:; TEveProjectable::ProjectedClass() takes an argument:; virtual TClass* ProjectedClass(const TEveProjection* p) const = 0;; thus allowing different projected classes for different projections.; All TEveProjection::ProjectPoint/Vector(...) functions have an; additional ""depth"" argument thus allowing the projected classes to; skip explicit setting of depth after the point has been projected; -- this could damage the 3rd component. Pre-scaling now supports 3 dimensions.; Abstract TEveProjected::SetDepth() has been split into two parts:; ; It has been implemented in the base class where it checks for; the projection type (2d) before calling the local function;; Abstract SetDepthLocal() has been added to provide the same; functionality. This allows for the 2d/3d check to be done in place only.; New projection class has been introduced: TEve3DProjection.; It performs pre-scaling and offsets the center.; To simplify the projection of lists TEveElementList has been made; projectable and corresponding TEveElementListProjected class; introduced. This also fixed the problem with render-state not being; propagated to projected classes. The check whether to project a sub-tree of elements is still performed.; TEveGeoShapeProjected has been introduced to represent the 3D; projection of a TEveGeoShape (2D projection is handled by; TEvePolygonSetProjected). Points, lines and tracks use the same projected class for both 2D; and 3D projections. An example showing this functionality has been added as a new tab in; projection_prescale.C.; TEveManager now allows simultaneous usage of several objects; editors. Simply click on the top name-button in object editor to; create a standalone editor for this object in a separate window. This; facilitates operation when several objects need to be modifed in; parallel.; New tutorial alice_vsd.C has been added. It shows; how to read Vi",MatchSource.DOCS,graf3d/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v526/index.html:2867,Performance,perform,performed,2867,"nt projections.; All TEveProjection::ProjectPoint/Vector(...) functions have an; additional ""depth"" argument thus allowing the projected classes to; skip explicit setting of depth after the point has been projected; -- this could damage the 3rd component. Pre-scaling now supports 3 dimensions.; Abstract TEveProjected::SetDepth() has been split into two parts:; ; It has been implemented in the base class where it checks for; the projection type (2d) before calling the local function;; Abstract SetDepthLocal() has been added to provide the same; functionality. This allows for the 2d/3d check to be done in place only.; New projection class has been introduced: TEve3DProjection.; It performs pre-scaling and offsets the center.; To simplify the projection of lists TEveElementList has been made; projectable and corresponding TEveElementListProjected class; introduced. This also fixed the problem with render-state not being; propagated to projected classes. The check whether to project a sub-tree of elements is still performed.; TEveGeoShapeProjected has been introduced to represent the 3D; projection of a TEveGeoShape (2D projection is handled by; TEvePolygonSetProjected). Points, lines and tracks use the same projected class for both 2D; and 3D projections. An example showing this functionality has been added as a new tab in; projection_prescale.C.; TEveManager now allows simultaneous usage of several objects; editors. Simply click on the top name-button in object editor to; create a standalone editor for this object in a separate window. This; facilitates operation when several objects need to be modifed in; parallel.; New tutorial alice_vsd.C has been added. It shows; how to read Visualization Summary Data files (VSD).; Code for operating three view configuration (3D / RPhi / Rhoz); has been extracted from alice_esd.C tutorial; into MultiView.C tutorial. This is now also used; by alice_vsd.C and can serve as an example to those that; need to implement similar functiona",MatchSource.DOCS,graf3d/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v526/index.html:1562,Safety,detect,detector,1562,"aw cell values, if their screen size is above given limit.; New energy-scales drawn as overlay (in color and size mode). The; legend can be moved around the screen with the mouse.; Fix transition between orthographic and perspective camera in; TEveCaloLego event handler.; Use color-sets in overlays and axis in order to automatically; keep same contrast when changing background color. In TEveTrackPropagator improve overall trajectory extrapolation; through the path-marks. Fix a problem with path-mark / boundary; approach with near-zero magnetic field. Maximum R / Z of extrapolation that can be set in the object; editor can now be changed via static data-members; fgEditorMaxR and fgEditorMaxZ.; Generalization of selection from GL viewers to support internal; multiple selection from the elements.; Add support for selection of individual calorimeter towers in; TEveCalo classes.; Add support for 3D -> 3D projections. This also allows for; scaling (compression/extension) of certain space region as required by; NA62 to show the 200m long detector in a meaningful way. Several generalizations of the projection infrastructure were; required:; TEveProjectable::ProjectedClass() takes an argument:; virtual TClass* ProjectedClass(const TEveProjection* p) const = 0;; thus allowing different projected classes for different projections.; All TEveProjection::ProjectPoint/Vector(...) functions have an; additional ""depth"" argument thus allowing the projected classes to; skip explicit setting of depth after the point has been projected; -- this could damage the 3rd component. Pre-scaling now supports 3 dimensions.; Abstract TEveProjected::SetDepth() has been split into two parts:; ; It has been implemented in the base class where it checks for; the projection type (2d) before calling the local function;; Abstract SetDepthLocal() has been added to provide the same; functionality. This allows for the 2d/3d check to be done in place only.; New projection class has been introduced: TEve3DPro",MatchSource.DOCS,graf3d/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v526/index.html:4304,Security,access,accessible,4304,"imply click on the top name-button in object editor to; create a standalone editor for this object in a separate window. This; facilitates operation when several objects need to be modifed in; parallel.; New tutorial alice_vsd.C has been added. It shows; how to read Visualization Summary Data files (VSD).; Code for operating three view configuration (3D / RPhi / Rhoz); has been extracted from alice_esd.C tutorial; into MultiView.C tutorial. This is now also used; by alice_vsd.C and can serve as an example to those that; need to implement similar functionality. Screenshot of calorimeters.C tutorial. Note the; individual tower selection propagated accross all the views. Screenshot of alice_vsd.C tutorial also showing the; functionality of the MultiView class. New title is also; visible in the GUI editor. Minor changes. Object editors in Eve now show the title as button.; ; Left mouse opens a floating editor that can be positioned; anywhere on the screen. This allows a user to have commonly used; editors always accessible. Maximum number of floating editors is; limited to 10.; Right mouse opens context menu for the object. In TEveFrambox add support for drawing of back-polygons for 3D; frame-boxes. Those should be transparent, otherwise the things inside; are not visible.; TEveRGBAPalette - implement additional flag fFixColorRange specifying; how the palette color range gets mapped onto signal values:; true - LowLimit -> HighLimit; false - MinValue -> MaxValue.; Add signal emitting TEveRGBAPalette::MinMaxValChanged(). Ged; editor calls this after setting the min/max range. OpenGL; Major changes. Add support for stereo rendering. This requires quad buffer; support from OpenGL driver and hardware as well as shutter; glasses. See tutorial eve/geom_cms_stereo.C.; Support for rendering into frame-buffer objects (FBO).; Using FBOs, it is now possible to save bitmap image formats at; any resolution and even when the GL window is not on screen.; Add support for global scaling o",MatchSource.DOCS,graf3d/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v526/index.html:2578,Usability,simpl,simplify,2578,"ture were; required:; TEveProjectable::ProjectedClass() takes an argument:; virtual TClass* ProjectedClass(const TEveProjection* p) const = 0;; thus allowing different projected classes for different projections.; All TEveProjection::ProjectPoint/Vector(...) functions have an; additional ""depth"" argument thus allowing the projected classes to; skip explicit setting of depth after the point has been projected; -- this could damage the 3rd component. Pre-scaling now supports 3 dimensions.; Abstract TEveProjected::SetDepth() has been split into two parts:; ; It has been implemented in the base class where it checks for; the projection type (2d) before calling the local function;; Abstract SetDepthLocal() has been added to provide the same; functionality. This allows for the 2d/3d check to be done in place only.; New projection class has been introduced: TEve3DProjection.; It performs pre-scaling and offsets the center.; To simplify the projection of lists TEveElementList has been made; projectable and corresponding TEveElementListProjected class; introduced. This also fixed the problem with render-state not being; propagated to projected classes. The check whether to project a sub-tree of elements is still performed.; TEveGeoShapeProjected has been introduced to represent the 3D; projection of a TEveGeoShape (2D projection is handled by; TEvePolygonSetProjected). Points, lines and tracks use the same projected class for both 2D; and 3D projections. An example showing this functionality has been added as a new tab in; projection_prescale.C.; TEveManager now allows simultaneous usage of several objects; editors. Simply click on the top name-button in object editor to; create a standalone editor for this object in a separate window. This; facilitates operation when several objects need to be modifed in; parallel.; New tutorial alice_vsd.C has been added. It shows; how to read Visualization Summary Data files (VSD).; Code for operating three view configuration (3D / RPhi /",MatchSource.DOCS,graf3d/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v526/index.html:3279,Usability,Simpl,Simply,3279,"SetDepthLocal() has been added to provide the same; functionality. This allows for the 2d/3d check to be done in place only.; New projection class has been introduced: TEve3DProjection.; It performs pre-scaling and offsets the center.; To simplify the projection of lists TEveElementList has been made; projectable and corresponding TEveElementListProjected class; introduced. This also fixed the problem with render-state not being; propagated to projected classes. The check whether to project a sub-tree of elements is still performed.; TEveGeoShapeProjected has been introduced to represent the 3D; projection of a TEveGeoShape (2D projection is handled by; TEvePolygonSetProjected). Points, lines and tracks use the same projected class for both 2D; and 3D projections. An example showing this functionality has been added as a new tab in; projection_prescale.C.; TEveManager now allows simultaneous usage of several objects; editors. Simply click on the top name-button in object editor to; create a standalone editor for this object in a separate window. This; facilitates operation when several objects need to be modifed in; parallel.; New tutorial alice_vsd.C has been added. It shows; how to read Visualization Summary Data files (VSD).; Code for operating three view configuration (3D / RPhi / Rhoz); has been extracted from alice_esd.C tutorial; into MultiView.C tutorial. This is now also used; by alice_vsd.C and can serve as an example to those that; need to implement similar functionality. Screenshot of calorimeters.C tutorial. Note the; individual tower selection propagated accross all the views. Screenshot of alice_vsd.C tutorial also showing the; functionality of the MultiView class. New title is also; visible in the GUI editor. Minor changes. Object editors in Eve now show the title as button.; ; Left mouse opens a floating editor that can be positioned; anywhere on the screen. This allows a user to have commonly used; editors always accessible. Maximum number of float",MatchSource.DOCS,graf3d/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v526/index.html:5539,Usability,feedback,feedback,5539,"t visible.; TEveRGBAPalette - implement additional flag fFixColorRange specifying; how the palette color range gets mapped onto signal values:; true - LowLimit -> HighLimit; false - MinValue -> MaxValue.; Add signal emitting TEveRGBAPalette::MinMaxValChanged(). Ged; editor calls this after setting the min/max range. OpenGL; Major changes. Add support for stereo rendering. This requires quad buffer; support from OpenGL driver and hardware as well as shutter; glasses. See tutorial eve/geom_cms_stereo.C.; Support for rendering into frame-buffer objects (FBO).; Using FBOs, it is now possible to save bitmap image formats at; any resolution and even when the GL window is not on screen.; Add support for global scaling of point-sizes, line-widths and font-sizes.; Generalize secondary-selection handling so that it is possible to; implement various handling schemes. For example see individual; calorimeter tower selection in TEveCalo-classes.; Generalize handling of highlight feedback -- this is now done via; a virtual TGLLogicalShape::DrawHighlight(...) so that it can be; changed by sub-classes.; The stand-alone GL viewer now supports hiding of menu-bar. It; collapses into a narrow band on top of the viewer that expands when; mouse pointer enters its area. This allows for better utilization of; the screen while still providing the controls available from the menu.; Editor for ""gl5d"" option was improved.; TGLTH3Composition class to combine several TH3s in one plot. Minor changes. Use Diagonal() instead of Volume() to determine if a bounding-box; is empty and also for sorting of the scene-elements by size. The; previous implementation caused problems with 2D and 1D objects.; Several improvements in camera configuration and handling.; Improve mouse-button handling. After a button goes down, other; buttons do not interfere with user interaction until the first button; is released.; When initializing TGLClipPlane for the first time, place it in; the center of the scene's bounding-b",MatchSource.DOCS,graf3d/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v528/index.html:1880,Availability,avail,available,1880,"GNAL*. TGLEventHandler emits them when needed. For example see TEveDigitSet; and its sub-classes TEveQuadSet and TEveBoxSet. It is now possible to enforce all tesselations of geometry shapes; to only use triangles via static function void; TGLFaceSet::EnforceTriangles(). This is needed to export TGeo; shapes and CSG meshes to external triangle-mesh libraries that can; not handle arbitrary polygons.; Add support for full-scene anti-aliasing (the actual benefits; depend on graphics card / driver). It is controlled via rootrc,; e.g.:. OpenGL.Framebuffer.Multisample: 4. Minor changes. Extend configurability of GL event-handler to allow inversion of; controls from scene-centric to viewer-centric. The following rootrc; variables control the behaviour:. OpenGL.EventHandler.ViewerCentricControls: 1; OpenGL.EventHandler.ArrowKeyFactor: -1.0; OpenGL.EventHandler.MouseDragFactor: -1.0; OpenGL.EventHandler.MouseWheelFactor: -1.0. Add camera auto-rotation support. Controls are available from the; ""Extras"" tab of TGLViewer GUI editor. Implemented in class; TGLAutoRotator, can be sub-classed and attached to a viewer via; TGLViewer::SetAutoRotator() method.; Added new overlay element class TGLCameraGuide that shows the; orientation of major axes. To use, call this on a TGLViewer object:. gl_viewer->AddOverlayElement(new TGLCameraGuide(0.9, 0.1, 0.08));. Fix an issue with GL-clip object not being properly updated after; a scene update.; Hide / show menu-bar with a time-out (default 400ms). This can be; adjusted by calling static method:; TGLSAViewer::SetMenuHidingTimeout(200);; To disable menu hiding for Eve viewers, where it is enabled by; default, set the following rootrc variable:; Eve.Viewer.HideMenus: off. EVE; Major changes. Implement central infractructure to allow eve-elements to support; internal multiple selection and highlightning of their sub-parts. Use this in TEveDigitSet and its sub-classes TEveQuadSet and; TEveBoxSet. TEveSecondarySelectable: New secondary base-class ",MatchSource.DOCS,graf3d/doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v528/index.html:405,Deployability,release,release,405,". 3D Graphics Primitives; TPolyMarker3D. TPolyMarker3D::PaintH3 entered an infinite loop in case of huge; bin content . OpenGL; Major changes. GL in Pad: It is now possible to save a PadGL into a binary image file; (gif, png, jpg etc...).; Improve behaviour of TGLEventHandler and make it consistent:. Process only one mouse button (the first pressed) at any; time. ; All selections take effect on button release.; Precsion modifiers Shift and Control can thus be pressed at any; time for controlling rate of rotation, translation or zooming. Add support for multiple secondary-selection and partial; highlightning of secondary-selectable sub-items. This requires new; signals to be emitted from TGLViewer:. virtual void MouseOver (TObject *obj, UInt_t state); // *SIGNAL*; virtual void ReMouseOver(TObject *obj, UInt_t state); // *SIGNAL*; virtual void UnMouseOver(TObject *obj, UInt_t state); // *SIGNAL*. TGLEventHandler emits them when needed. For example see TEveDigitSet; and its sub-classes TEveQuadSet and TEveBoxSet. It is now possible to enforce all tesselations of geometry shapes; to only use triangles via static function void; TGLFaceSet::EnforceTriangles(). This is needed to export TGeo; shapes and CSG meshes to external triangle-mesh libraries that can; not handle arbitrary polygons.; Add support for full-scene anti-aliasing (the actual benefits; depend on graphics card / driver). It is controlled via rootrc,; e.g.:. OpenGL.Framebuffer.Multisample: 4. Minor changes. Extend configurability of GL event-handler to allow inversion of; controls from scene-centric to viewer-centric. The following rootrc; variables control the behaviour:. OpenGL.EventHandler.ViewerCentricControls: 1; OpenGL.EventHandler.ArrowKeyFactor: -1.0; OpenGL.EventHandler.MouseDragFactor: -1.0; OpenGL.EventHandler.MouseWheelFactor: -1.0. Add camera auto-rotation support. Controls are available from the; ""Extras"" tab of TGLViewer GUI editor. Implemented in class; TGLAutoRotator, can be sub-classed and at",MatchSource.DOCS,graf3d/doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v528/index.html:2313,Deployability,update,updated,2313,".; Add support for full-scene anti-aliasing (the actual benefits; depend on graphics card / driver). It is controlled via rootrc,; e.g.:. OpenGL.Framebuffer.Multisample: 4. Minor changes. Extend configurability of GL event-handler to allow inversion of; controls from scene-centric to viewer-centric. The following rootrc; variables control the behaviour:. OpenGL.EventHandler.ViewerCentricControls: 1; OpenGL.EventHandler.ArrowKeyFactor: -1.0; OpenGL.EventHandler.MouseDragFactor: -1.0; OpenGL.EventHandler.MouseWheelFactor: -1.0. Add camera auto-rotation support. Controls are available from the; ""Extras"" tab of TGLViewer GUI editor. Implemented in class; TGLAutoRotator, can be sub-classed and attached to a viewer via; TGLViewer::SetAutoRotator() method.; Added new overlay element class TGLCameraGuide that shows the; orientation of major axes. To use, call this on a TGLViewer object:. gl_viewer->AddOverlayElement(new TGLCameraGuide(0.9, 0.1, 0.08));. Fix an issue with GL-clip object not being properly updated after; a scene update.; Hide / show menu-bar with a time-out (default 400ms). This can be; adjusted by calling static method:; TGLSAViewer::SetMenuHidingTimeout(200);; To disable menu hiding for Eve viewers, where it is enabled by; default, set the following rootrc variable:; Eve.Viewer.HideMenus: off. EVE; Major changes. Implement central infractructure to allow eve-elements to support; internal multiple selection and highlightning of their sub-parts. Use this in TEveDigitSet and its sub-classes TEveQuadSet and; TEveBoxSet. TEveSecondarySelectable: New secondary base-class for elements; supporting internal multiple selection / highlight.; TEveViewer - Add functions to handle additional mouse-over signals; from TGLViewer.; TEveElement - Add 3 new functions:; virtual TString GetHighlightTooltip();; virtual void UnSelected();; virtual void UnHighlighted();. TEveDigitSet, TEveQuadSet, TEveBoxSet. Sub-class TEveDigitSet from TEveSecondarySelectable.; Implement functions ",MatchSource.DOCS,graf3d/doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v528/index.html:2336,Deployability,update,update,2336,".; Add support for full-scene anti-aliasing (the actual benefits; depend on graphics card / driver). It is controlled via rootrc,; e.g.:. OpenGL.Framebuffer.Multisample: 4. Minor changes. Extend configurability of GL event-handler to allow inversion of; controls from scene-centric to viewer-centric. The following rootrc; variables control the behaviour:. OpenGL.EventHandler.ViewerCentricControls: 1; OpenGL.EventHandler.ArrowKeyFactor: -1.0; OpenGL.EventHandler.MouseDragFactor: -1.0; OpenGL.EventHandler.MouseWheelFactor: -1.0. Add camera auto-rotation support. Controls are available from the; ""Extras"" tab of TGLViewer GUI editor. Implemented in class; TGLAutoRotator, can be sub-classed and attached to a viewer via; TGLViewer::SetAutoRotator() method.; Added new overlay element class TGLCameraGuide that shows the; orientation of major axes. To use, call this on a TGLViewer object:. gl_viewer->AddOverlayElement(new TGLCameraGuide(0.9, 0.1, 0.08));. Fix an issue with GL-clip object not being properly updated after; a scene update.; Hide / show menu-bar with a time-out (default 400ms). This can be; adjusted by calling static method:; TGLSAViewer::SetMenuHidingTimeout(200);; To disable menu hiding for Eve viewers, where it is enabled by; default, set the following rootrc variable:; Eve.Viewer.HideMenus: off. EVE; Major changes. Implement central infractructure to allow eve-elements to support; internal multiple selection and highlightning of their sub-parts. Use this in TEveDigitSet and its sub-classes TEveQuadSet and; TEveBoxSet. TEveSecondarySelectable: New secondary base-class for elements; supporting internal multiple selection / highlight.; TEveViewer - Add functions to handle additional mouse-over signals; from TGLViewer.; TEveElement - Add 3 new functions:; virtual TString GetHighlightTooltip();; virtual void UnSelected();; virtual void UnHighlighted();. TEveDigitSet, TEveQuadSet, TEveBoxSet. Sub-class TEveDigitSet from TEveSecondarySelectable.; Implement functions ",MatchSource.DOCS,graf3d/doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v528/index.html:1367,Integrability,depend,depend,1367," at any; time. ; All selections take effect on button release.; Precsion modifiers Shift and Control can thus be pressed at any; time for controlling rate of rotation, translation or zooming. Add support for multiple secondary-selection and partial; highlightning of secondary-selectable sub-items. This requires new; signals to be emitted from TGLViewer:. virtual void MouseOver (TObject *obj, UInt_t state); // *SIGNAL*; virtual void ReMouseOver(TObject *obj, UInt_t state); // *SIGNAL*; virtual void UnMouseOver(TObject *obj, UInt_t state); // *SIGNAL*. TGLEventHandler emits them when needed. For example see TEveDigitSet; and its sub-classes TEveQuadSet and TEveBoxSet. It is now possible to enforce all tesselations of geometry shapes; to only use triangles via static function void; TGLFaceSet::EnforceTriangles(). This is needed to export TGeo; shapes and CSG meshes to external triangle-mesh libraries that can; not handle arbitrary polygons.; Add support for full-scene anti-aliasing (the actual benefits; depend on graphics card / driver). It is controlled via rootrc,; e.g.:. OpenGL.Framebuffer.Multisample: 4. Minor changes. Extend configurability of GL event-handler to allow inversion of; controls from scene-centric to viewer-centric. The following rootrc; variables control the behaviour:. OpenGL.EventHandler.ViewerCentricControls: 1; OpenGL.EventHandler.ArrowKeyFactor: -1.0; OpenGL.EventHandler.MouseDragFactor: -1.0; OpenGL.EventHandler.MouseWheelFactor: -1.0. Add camera auto-rotation support. Controls are available from the; ""Extras"" tab of TGLViewer GUI editor. Implemented in class; TGLAutoRotator, can be sub-classed and attached to a viewer via; TGLViewer::SetAutoRotator() method.; Added new overlay element class TGLCameraGuide that shows the; orientation of major axes. To use, call this on a TGLViewer object:. gl_viewer->AddOverlayElement(new TGLCameraGuide(0.9, 0.1, 0.08));. Fix an issue with GL-clip object not being properly updated after; a scene update.; Hide / ",MatchSource.DOCS,graf3d/doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v528/index.html:1489,Modifiability,Extend,Extend,1489,"dd support for multiple secondary-selection and partial; highlightning of secondary-selectable sub-items. This requires new; signals to be emitted from TGLViewer:. virtual void MouseOver (TObject *obj, UInt_t state); // *SIGNAL*; virtual void ReMouseOver(TObject *obj, UInt_t state); // *SIGNAL*; virtual void UnMouseOver(TObject *obj, UInt_t state); // *SIGNAL*. TGLEventHandler emits them when needed. For example see TEveDigitSet; and its sub-classes TEveQuadSet and TEveBoxSet. It is now possible to enforce all tesselations of geometry shapes; to only use triangles via static function void; TGLFaceSet::EnforceTriangles(). This is needed to export TGeo; shapes and CSG meshes to external triangle-mesh libraries that can; not handle arbitrary polygons.; Add support for full-scene anti-aliasing (the actual benefits; depend on graphics card / driver). It is controlled via rootrc,; e.g.:. OpenGL.Framebuffer.Multisample: 4. Minor changes. Extend configurability of GL event-handler to allow inversion of; controls from scene-centric to viewer-centric. The following rootrc; variables control the behaviour:. OpenGL.EventHandler.ViewerCentricControls: 1; OpenGL.EventHandler.ArrowKeyFactor: -1.0; OpenGL.EventHandler.MouseDragFactor: -1.0; OpenGL.EventHandler.MouseWheelFactor: -1.0. Add camera auto-rotation support. Controls are available from the; ""Extras"" tab of TGLViewer GUI editor. Implemented in class; TGLAutoRotator, can be sub-classed and attached to a viewer via; TGLViewer::SetAutoRotator() method.; Added new overlay element class TGLCameraGuide that shows the; orientation of major axes. To use, call this on a TGLViewer object:. gl_viewer->AddOverlayElement(new TGLCameraGuide(0.9, 0.1, 0.08));. Fix an issue with GL-clip object not being properly updated after; a scene update.; Hide / show menu-bar with a time-out (default 400ms). This can be; adjusted by calling static method:; TGLSAViewer::SetMenuHidingTimeout(200);; To disable menu hiding for Eve viewers, where it is enab",MatchSource.DOCS,graf3d/doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v528/index.html:1496,Modifiability,config,configurability,1496,"dd support for multiple secondary-selection and partial; highlightning of secondary-selectable sub-items. This requires new; signals to be emitted from TGLViewer:. virtual void MouseOver (TObject *obj, UInt_t state); // *SIGNAL*; virtual void ReMouseOver(TObject *obj, UInt_t state); // *SIGNAL*; virtual void UnMouseOver(TObject *obj, UInt_t state); // *SIGNAL*. TGLEventHandler emits them when needed. For example see TEveDigitSet; and its sub-classes TEveQuadSet and TEveBoxSet. It is now possible to enforce all tesselations of geometry shapes; to only use triangles via static function void; TGLFaceSet::EnforceTriangles(). This is needed to export TGeo; shapes and CSG meshes to external triangle-mesh libraries that can; not handle arbitrary polygons.; Add support for full-scene anti-aliasing (the actual benefits; depend on graphics card / driver). It is controlled via rootrc,; e.g.:. OpenGL.Framebuffer.Multisample: 4. Minor changes. Extend configurability of GL event-handler to allow inversion of; controls from scene-centric to viewer-centric. The following rootrc; variables control the behaviour:. OpenGL.EventHandler.ViewerCentricControls: 1; OpenGL.EventHandler.ArrowKeyFactor: -1.0; OpenGL.EventHandler.MouseDragFactor: -1.0; OpenGL.EventHandler.MouseWheelFactor: -1.0. Add camera auto-rotation support. Controls are available from the; ""Extras"" tab of TGLViewer GUI editor. Implemented in class; TGLAutoRotator, can be sub-classed and attached to a viewer via; TGLViewer::SetAutoRotator() method.; Added new overlay element class TGLCameraGuide that shows the; orientation of major axes. To use, call this on a TGLViewer object:. gl_viewer->AddOverlayElement(new TGLCameraGuide(0.9, 0.1, 0.08));. Fix an issue with GL-clip object not being properly updated after; a scene update.; Hide / show menu-bar with a time-out (default 400ms). This can be; adjusted by calling static method:; TGLSAViewer::SetMenuHidingTimeout(200);; To disable menu hiding for Eve viewers, where it is enab",MatchSource.DOCS,graf3d/doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v528/index.html:1624,Modifiability,variab,variables,1624,"electable sub-items. This requires new; signals to be emitted from TGLViewer:. virtual void MouseOver (TObject *obj, UInt_t state); // *SIGNAL*; virtual void ReMouseOver(TObject *obj, UInt_t state); // *SIGNAL*; virtual void UnMouseOver(TObject *obj, UInt_t state); // *SIGNAL*. TGLEventHandler emits them when needed. For example see TEveDigitSet; and its sub-classes TEveQuadSet and TEveBoxSet. It is now possible to enforce all tesselations of geometry shapes; to only use triangles via static function void; TGLFaceSet::EnforceTriangles(). This is needed to export TGeo; shapes and CSG meshes to external triangle-mesh libraries that can; not handle arbitrary polygons.; Add support for full-scene anti-aliasing (the actual benefits; depend on graphics card / driver). It is controlled via rootrc,; e.g.:. OpenGL.Framebuffer.Multisample: 4. Minor changes. Extend configurability of GL event-handler to allow inversion of; controls from scene-centric to viewer-centric. The following rootrc; variables control the behaviour:. OpenGL.EventHandler.ViewerCentricControls: 1; OpenGL.EventHandler.ArrowKeyFactor: -1.0; OpenGL.EventHandler.MouseDragFactor: -1.0; OpenGL.EventHandler.MouseWheelFactor: -1.0. Add camera auto-rotation support. Controls are available from the; ""Extras"" tab of TGLViewer GUI editor. Implemented in class; TGLAutoRotator, can be sub-classed and attached to a viewer via; TGLViewer::SetAutoRotator() method.; Added new overlay element class TGLCameraGuide that shows the; orientation of major axes. To use, call this on a TGLViewer object:. gl_viewer->AddOverlayElement(new TGLCameraGuide(0.9, 0.1, 0.08));. Fix an issue with GL-clip object not being properly updated after; a scene update.; Hide / show menu-bar with a time-out (default 400ms). This can be; adjusted by calling static method:; TGLSAViewer::SetMenuHidingTimeout(200);; To disable menu hiding for Eve viewers, where it is enabled by; default, set the following rootrc variable:; Eve.Viewer.HideMenus: off. EVE;",MatchSource.DOCS,graf3d/doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v528/index.html:2587,Modifiability,variab,variable,2587,"igurability of GL event-handler to allow inversion of; controls from scene-centric to viewer-centric. The following rootrc; variables control the behaviour:. OpenGL.EventHandler.ViewerCentricControls: 1; OpenGL.EventHandler.ArrowKeyFactor: -1.0; OpenGL.EventHandler.MouseDragFactor: -1.0; OpenGL.EventHandler.MouseWheelFactor: -1.0. Add camera auto-rotation support. Controls are available from the; ""Extras"" tab of TGLViewer GUI editor. Implemented in class; TGLAutoRotator, can be sub-classed and attached to a viewer via; TGLViewer::SetAutoRotator() method.; Added new overlay element class TGLCameraGuide that shows the; orientation of major axes. To use, call this on a TGLViewer object:. gl_viewer->AddOverlayElement(new TGLCameraGuide(0.9, 0.1, 0.08));. Fix an issue with GL-clip object not being properly updated after; a scene update.; Hide / show menu-bar with a time-out (default 400ms). This can be; adjusted by calling static method:; TGLSAViewer::SetMenuHidingTimeout(200);; To disable menu hiding for Eve viewers, where it is enabled by; default, set the following rootrc variable:; Eve.Viewer.HideMenus: off. EVE; Major changes. Implement central infractructure to allow eve-elements to support; internal multiple selection and highlightning of their sub-parts. Use this in TEveDigitSet and its sub-classes TEveQuadSet and; TEveBoxSet. TEveSecondarySelectable: New secondary base-class for elements; supporting internal multiple selection / highlight.; TEveViewer - Add functions to handle additional mouse-over signals; from TGLViewer.; TEveElement - Add 3 new functions:; virtual TString GetHighlightTooltip();; virtual void UnSelected();; virtual void UnHighlighted();. TEveDigitSet, TEveQuadSet, TEveBoxSet. Sub-class TEveDigitSet from TEveSecondarySelectable.; Implement functions needed for internal selection.; Add common base-class TEveDigitSetGL for quad and box-set GL rendering.; Move anti-flickering controls from TEveQuadSet to TEveDigitSet and; implement it also in TEve",MatchSource.DOCS,graf3d/doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v528/index.html:3659,Modifiability,config,configurable,3659,"ents to support; internal multiple selection and highlightning of their sub-parts. Use this in TEveDigitSet and its sub-classes TEveQuadSet and; TEveBoxSet. TEveSecondarySelectable: New secondary base-class for elements; supporting internal multiple selection / highlight.; TEveViewer - Add functions to handle additional mouse-over signals; from TGLViewer.; TEveElement - Add 3 new functions:; virtual TString GetHighlightTooltip();; virtual void UnSelected();; virtual void UnHighlighted();. TEveDigitSet, TEveQuadSet, TEveBoxSet. Sub-class TEveDigitSet from TEveSecondarySelectable.; Implement functions needed for internal selection.; Add common base-class TEveDigitSetGL for quad and box-set GL rendering.; Move anti-flickering controls from TEveQuadSet to TEveDigitSet and; implement it also in TEveBoxSetGL. TEveChunkManager: Add support for restricted iteration.; TEveChunkManager::iterator accepts set<Int_t> for that purpose. TEveElement: Extensions for configurable selection / highlight /; color / transparency propagation between compounds and elements. The; following options can be activated:. ImplySelectAllChildren() - to highlight / imply-select all; children of an compound;; TakeAnyParentAsMaster() - to upwards propagate mouse-selection to; any compound parent;; ApplyMainColorToAllChildren() / ApplyMainColorToMatchingChildren(); to request color propagation to all / matching children of a compound;; ApplyMainTransparencyToAllChildren() / ApplyMainTransparencyToMatchingChildren(); to request transparency propagation to all / matching children of a compound. These flags are stored as bit pattern of CompoundColorSelectionBits enum. TEveElement: propagate transparency to projected replicas. As this; is implemented in the base-class, it works for all projectable classes. TEveVector, TEveVector4 and TEveVector2 are now typedefs to float; specialization of corresponding templates. Double versions use 'D' as; postfix, 'F' postfix is another alias for float versions, e.g.:; ",MatchSource.DOCS,graf3d/doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v528/index.html:5678,Performance,perform,performance,5678,"torT<Float_t> TEveVector;; typedef TEveVectorT<Float_t> TEveVectorF;; typedef TEveVectorT<Double_t> TEveVectorD;. All projectable classes now take into account their transformation; matrix. The projected versions are still stored in global; coordinates.; TEveShape -- a new abstract base-class for 2D/3D shapes that; require fill / outline color, line-width and various flags; controlling the area / outline drawing.; TEveGeoShape and projected classes: subclass from TEveShape. Add; support for TGeoCompositeShapes. In 2D projected class; (TEvePolygonSetProjected) improve detection of duplicate polygons; and add support for detection of minimal-outline (triggered via; Bool_t TEveShape::fMiniOutline).; TEveBox: New class to draw a simple cuboid with minimal memory; usage. It is projectable.; TEveBoxSet: for box-type kBT_FreeBox assure proper face; orientation at registration time and calculate normals when; rendering. TEveJetCone is now projectable.; Several performance improvements when dealing with large; collections of EVE objects. Profiled with simulated heavy-ion; data. In particular, for destruction of self-contained sub-hierarchies of objects; one can use TEveElement::Annihilate() and; TEveElement::AnnihilateElements(). See class docs for constraints. Minor changes. Add support for projecting a new child (all children) of an; element after the element and its old children have already been; projected. This is provided by the following virtual functions in; TEveElement:; void ProjectChild(TEveElement* el, Bool_t sameDepth=kTRUE);; void ProjectAllChildren(Bool_t same_depth=kTRUE);. Several improvements in drawing of TEveCalo axes and labels.; TEveTrackPropagator. Fix some issues with Runge-Kutta track; propagator. Move in controls specifying how to plot tracks that get; split in RhoZ projection.; Fix rendering of TEveJetCone: normals at apex were not changing as they should.; Support single-color for TEveDigitSet (call TEveDigitSet::UseSingleColor()).; Always add chil",MatchSource.DOCS,graf3d/doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v528/index.html:5285,Safety,detect,detection,5285,"ompoundColorSelectionBits enum. TEveElement: propagate transparency to projected replicas. As this; is implemented in the base-class, it works for all projectable classes. TEveVector, TEveVector4 and TEveVector2 are now typedefs to float; specialization of corresponding templates. Double versions use 'D' as; postfix, 'F' postfix is another alias for float versions, e.g.:; typedef TEveVectorT<Float_t> TEveVector;; typedef TEveVectorT<Float_t> TEveVectorF;; typedef TEveVectorT<Double_t> TEveVectorD;. All projectable classes now take into account their transformation; matrix. The projected versions are still stored in global; coordinates.; TEveShape -- a new abstract base-class for 2D/3D shapes that; require fill / outline color, line-width and various flags; controlling the area / outline drawing.; TEveGeoShape and projected classes: subclass from TEveShape. Add; support for TGeoCompositeShapes. In 2D projected class; (TEvePolygonSetProjected) improve detection of duplicate polygons; and add support for detection of minimal-outline (triggered via; Bool_t TEveShape::fMiniOutline).; TEveBox: New class to draw a simple cuboid with minimal memory; usage. It is projectable.; TEveBoxSet: for box-type kBT_FreeBox assure proper face; orientation at registration time and calculate normals when; rendering. TEveJetCone is now projectable.; Several performance improvements when dealing with large; collections of EVE objects. Profiled with simulated heavy-ion; data. In particular, for destruction of self-contained sub-hierarchies of objects; one can use TEveElement::Annihilate() and; TEveElement::AnnihilateElements(). See class docs for constraints. Minor changes. Add support for projecting a new child (all children) of an; element after the element and its old children have already been; projected. This is provided by the following virtual functions in; TEveElement:; void ProjectChild(TEveElement* el, Bool_t sameDepth=kTRUE);; void ProjectAllChildren(Bool_t same_depth=kTRUE);. Se",MatchSource.DOCS,graf3d/doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v528/index.html:5338,Safety,detect,detection,5338,"ompoundColorSelectionBits enum. TEveElement: propagate transparency to projected replicas. As this; is implemented in the base-class, it works for all projectable classes. TEveVector, TEveVector4 and TEveVector2 are now typedefs to float; specialization of corresponding templates. Double versions use 'D' as; postfix, 'F' postfix is another alias for float versions, e.g.:; typedef TEveVectorT<Float_t> TEveVector;; typedef TEveVectorT<Float_t> TEveVectorF;; typedef TEveVectorT<Double_t> TEveVectorD;. All projectable classes now take into account their transformation; matrix. The projected versions are still stored in global; coordinates.; TEveShape -- a new abstract base-class for 2D/3D shapes that; require fill / outline color, line-width and various flags; controlling the area / outline drawing.; TEveGeoShape and projected classes: subclass from TEveShape. Add; support for TGeoCompositeShapes. In 2D projected class; (TEvePolygonSetProjected) improve detection of duplicate polygons; and add support for detection of minimal-outline (triggered via; Bool_t TEveShape::fMiniOutline).; TEveBox: New class to draw a simple cuboid with minimal memory; usage. It is projectable.; TEveBoxSet: for box-type kBT_FreeBox assure proper face; orientation at registration time and calculate normals when; rendering. TEveJetCone is now projectable.; Several performance improvements when dealing with large; collections of EVE objects. Profiled with simulated heavy-ion; data. In particular, for destruction of self-contained sub-hierarchies of objects; one can use TEveElement::Annihilate() and; TEveElement::AnnihilateElements(). See class docs for constraints. Minor changes. Add support for projecting a new child (all children) of an; element after the element and its old children have already been; projected. This is provided by the following virtual functions in; TEveElement:; void ProjectChild(TEveElement* el, Bool_t sameDepth=kTRUE);; void ProjectAllChildren(Bool_t same_depth=kTRUE);. Se",MatchSource.DOCS,graf3d/doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v528/index.html:5446,Usability,simpl,simple,5446,"ss, it works for all projectable classes. TEveVector, TEveVector4 and TEveVector2 are now typedefs to float; specialization of corresponding templates. Double versions use 'D' as; postfix, 'F' postfix is another alias for float versions, e.g.:; typedef TEveVectorT<Float_t> TEveVector;; typedef TEveVectorT<Float_t> TEveVectorF;; typedef TEveVectorT<Double_t> TEveVectorD;. All projectable classes now take into account their transformation; matrix. The projected versions are still stored in global; coordinates.; TEveShape -- a new abstract base-class for 2D/3D shapes that; require fill / outline color, line-width and various flags; controlling the area / outline drawing.; TEveGeoShape and projected classes: subclass from TEveShape. Add; support for TGeoCompositeShapes. In 2D projected class; (TEvePolygonSetProjected) improve detection of duplicate polygons; and add support for detection of minimal-outline (triggered via; Bool_t TEveShape::fMiniOutline).; TEveBox: New class to draw a simple cuboid with minimal memory; usage. It is projectable.; TEveBoxSet: for box-type kBT_FreeBox assure proper face; orientation at registration time and calculate normals when; rendering. TEveJetCone is now projectable.; Several performance improvements when dealing with large; collections of EVE objects. Profiled with simulated heavy-ion; data. In particular, for destruction of self-contained sub-hierarchies of objects; one can use TEveElement::Annihilate() and; TEveElement::AnnihilateElements(). See class docs for constraints. Minor changes. Add support for projecting a new child (all children) of an; element after the element and its old children have already been; projected. This is provided by the following virtual functions in; TEveElement:; void ProjectChild(TEveElement* el, Bool_t sameDepth=kTRUE);; void ProjectAllChildren(Bool_t same_depth=kTRUE);. Several improvements in drawing of TEveCalo axes and labels.; TEveTrackPropagator. Fix some issues with Runge-Kutta track; propagato",MatchSource.DOCS,graf3d/doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/gui/doc/v520/index.html:556,Availability,mask,mask,556,". GUI; New Classes: TGSplitFrame, TGShapedFrame, TGEventHandler; These three classes have been primarily developed to be used in EVE.; For an example of how to use them, see tutorials/eve/SplitGLView.C (this macro is used as a plugin by tutorials/eve/alice_esd_split.C). TGSplitFrame is a horizontally or vertically splittable composite frame. Once split, each part will contain a new TGSplitFrame, separated by a TGSplitter.; TGShapedFrame is a TGCompositeFrame on which a custom shape is applied, starting from a picture file, by taking its transparency mask, and then applying the picture as background.; TGEventHandler is a Base Event Handler class allowing to delegate event handling (a base class for GL event handlers). TGListTree. TGListTreeItem is now a base class and TGListTreeItemStd is the standard implementation (modification required by EVE).; Switched the icon and checkbox position in TGListTreeItem.; Added custom user control flags, with their getters and setters and three new signal methods (required by EVE). All these were implemented for better control of the TGListTree behavior.; ; fUserControlled is a flag to take over the control; fEventHandled is a flag to tell TGListTree that the current event has been processed by user.; ; MouseOver(TGListTreeItem *entry); MouseOver(TGListTreeItem *entry, UInt_t mask); Clicked(TGListTreeItem *entry, Int_t btn, UInt_t mask, Int_t x, Int_t y). The new DrawOutline() method draws a colored outline around a list tree item following the mouse position.; Implemented correct keyboard navigation.; Improvements for list trees containing a large number of items (i.e. one million). TGTab. Added a new signal method Removed(Int_t id) to notify when a tab was removed. TGListBox. Fixed flickering problem on Windows. TGDockableFrame. Introduced the fFixedSize option, to let user choose if the undocked frame may; be resized or not. Keep the (fixed) original docked frame size when undocked; (i.e. for menus and toolbars). TGShutter. Two h",MatchSource.DOCS,gui/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/gui/doc/v520/index.html:1332,Availability,mask,mask,1332,"ite frame. Once split, each part will contain a new TGSplitFrame, separated by a TGSplitter.; TGShapedFrame is a TGCompositeFrame on which a custom shape is applied, starting from a picture file, by taking its transparency mask, and then applying the picture as background.; TGEventHandler is a Base Event Handler class allowing to delegate event handling (a base class for GL event handlers). TGListTree. TGListTreeItem is now a base class and TGListTreeItemStd is the standard implementation (modification required by EVE).; Switched the icon and checkbox position in TGListTreeItem.; Added custom user control flags, with their getters and setters and three new signal methods (required by EVE). All these were implemented for better control of the TGListTree behavior.; ; fUserControlled is a flag to take over the control; fEventHandled is a flag to tell TGListTree that the current event has been processed by user.; ; MouseOver(TGListTreeItem *entry); MouseOver(TGListTreeItem *entry, UInt_t mask); Clicked(TGListTreeItem *entry, Int_t btn, UInt_t mask, Int_t x, Int_t y). The new DrawOutline() method draws a colored outline around a list tree item following the mouse position.; Implemented correct keyboard navigation.; Improvements for list trees containing a large number of items (i.e. one million). TGTab. Added a new signal method Removed(Int_t id) to notify when a tab was removed. TGListBox. Fixed flickering problem on Windows. TGDockableFrame. Introduced the fFixedSize option, to let user choose if the undocked frame may; be resized or not. Keep the (fixed) original docked frame size when undocked; (i.e. for menus and toolbars). TGShutter. Two helper methods added:; ; SetSelectedItem(const char *name) - switch to the shutter section 'name'.; EnableItem(const char *name, Bool_t on) - enable/disable the shutter section 'name' according to the value of the second parameter 'on'.; . TGFileDialog; The File Open/Close dialogs show the list of all available (mounted) drives on ",MatchSource.DOCS,gui/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/gui/doc/v520/index.html:1388,Availability,mask,mask,1388,"ite frame. Once split, each part will contain a new TGSplitFrame, separated by a TGSplitter.; TGShapedFrame is a TGCompositeFrame on which a custom shape is applied, starting from a picture file, by taking its transparency mask, and then applying the picture as background.; TGEventHandler is a Base Event Handler class allowing to delegate event handling (a base class for GL event handlers). TGListTree. TGListTreeItem is now a base class and TGListTreeItemStd is the standard implementation (modification required by EVE).; Switched the icon and checkbox position in TGListTreeItem.; Added custom user control flags, with their getters and setters and three new signal methods (required by EVE). All these were implemented for better control of the TGListTree behavior.; ; fUserControlled is a flag to take over the control; fEventHandled is a flag to tell TGListTree that the current event has been processed by user.; ; MouseOver(TGListTreeItem *entry); MouseOver(TGListTreeItem *entry, UInt_t mask); Clicked(TGListTreeItem *entry, Int_t btn, UInt_t mask, Int_t x, Int_t y). The new DrawOutline() method draws a colored outline around a list tree item following the mouse position.; Implemented correct keyboard navigation.; Improvements for list trees containing a large number of items (i.e. one million). TGTab. Added a new signal method Removed(Int_t id) to notify when a tab was removed. TGListBox. Fixed flickering problem on Windows. TGDockableFrame. Introduced the fFixedSize option, to let user choose if the undocked frame may; be resized or not. Keep the (fixed) original docked frame size when undocked; (i.e. for menus and toolbars). TGShutter. Two helper methods added:; ; SetSelectedItem(const char *name) - switch to the shutter section 'name'.; EnableItem(const char *name, Bool_t on) - enable/disable the shutter section 'name' according to the value of the second parameter 'on'.; . TGFileDialog; The File Open/Close dialogs show the list of all available (mounted) drives on ",MatchSource.DOCS,gui/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/gui/doc/v520/index.html:2303,Availability,avail,available,2303,"; MouseOver(TGListTreeItem *entry, UInt_t mask); Clicked(TGListTreeItem *entry, Int_t btn, UInt_t mask, Int_t x, Int_t y). The new DrawOutline() method draws a colored outline around a list tree item following the mouse position.; Implemented correct keyboard navigation.; Improvements for list trees containing a large number of items (i.e. one million). TGTab. Added a new signal method Removed(Int_t id) to notify when a tab was removed. TGListBox. Fixed flickering problem on Windows. TGDockableFrame. Introduced the fFixedSize option, to let user choose if the undocked frame may; be resized or not. Keep the (fixed) original docked frame size when undocked; (i.e. for menus and toolbars). TGShutter. Two helper methods added:; ; SetSelectedItem(const char *name) - switch to the shutter section 'name'.; EnableItem(const char *name, Bool_t on) - enable/disable the shutter section 'name' according to the value of the second parameter 'on'.; . TGFileDialog; The File Open/Close dialogs show the list of all available (mounted) drives on Windows. Modal Dialogs; On Windows, any modal dialog now stays on top of its parent (true modal mode). Context Menus; The context menu of ROOT classes can be created with hierarchical sub-menus, which are more convenient and offer better organization. This makes possible to access more class methods from the context menu (without having the menu becoming larger than the screen). The next is an example of the hierarchihal submenu structure shown below. void SetLevelOne(EPaletteType palette = pal3); // *MENU={Hierarchy=""Candidates/SetLevelOne""}*; void SetPalette(EPaletteType palette = pal3); // *SUBMENU={Hierarchy=""Candidates/SetPalette""}*; void SetCatalog(const char * = ""HESS"") { } // *MENU={Hierarchy=""Candidates/SetCatalog""}*; void AddCatalog(const char * = ""HESS"") { } // *MENU={Hierarchy=""Candidates/AddCatalog""}*; void RemoveCatalog(const char * = ""HESS"") { } // *MENU={Hierarchy=""Candidates/RemoveCatalog""}*; void AddCandidate(const char * = """,MatchSource.DOCS,gui/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/gui/doc/v520/index.html:3856,Availability,Robust,Robustness,3856,"d) original docked frame size when undocked; (i.e. for menus and toolbars). TGShutter. Two helper methods added:; ; SetSelectedItem(const char *name) - switch to the shutter section 'name'.; EnableItem(const char *name, Bool_t on) - enable/disable the shutter section 'name' according to the value of the second parameter 'on'.; . TGFileDialog; The File Open/Close dialogs show the list of all available (mounted) drives on Windows. Modal Dialogs; On Windows, any modal dialog now stays on top of its parent (true modal mode). Context Menus; The context menu of ROOT classes can be created with hierarchical sub-menus, which are more convenient and offer better organization. This makes possible to access more class methods from the context menu (without having the menu becoming larger than the screen). The next is an example of the hierarchihal submenu structure shown below. void SetLevelOne(EPaletteType palette = pal3); // *MENU={Hierarchy=""Candidates/SetLevelOne""}*; void SetPalette(EPaletteType palette = pal3); // *SUBMENU={Hierarchy=""Candidates/SetPalette""}*; void SetCatalog(const char * = ""HESS"") { } // *MENU={Hierarchy=""Candidates/SetCatalog""}*; void AddCatalog(const char * = ""HESS"") { } // *MENU={Hierarchy=""Candidates/AddCatalog""}*; void RemoveCatalog(const char * = ""HESS"") { } // *MENU={Hierarchy=""Candidates/RemoveCatalog""}*; void AddCandidate(const char * = ""NAME"") { } // *MENU={Hierarchy=""Candidates/AddCandidate""}*. EPaletteType fPalette; //*OPTION={GetMethod=""GetPalette"";SetMethod=""SetPalette"";Items=(PrettyPalette=""PrettyPalette"",SchlenkPalette=""Schlenk"",pal3=""Pal3"",pal4=""Pal4"")}*. GUI HTML. Implemented controls handling (text buttons, radio buttons and check buttons); Implemented signals for these controls:; ; ButtonClicked(const char *name, const char *val); SubmitClicked(const char *val); CheckToggled(const char *name, Bool_t on, const char *val); RadioChanged(const char *name, const char *val). GUI Builder. Robustness has been improved and several bugs fixed. ",MatchSource.DOCS,gui/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/gui/doc/v520/index.html:227,Modifiability,plugin,plugin,227,". GUI; New Classes: TGSplitFrame, TGShapedFrame, TGEventHandler; These three classes have been primarily developed to be used in EVE.; For an example of how to use them, see tutorials/eve/SplitGLView.C (this macro is used as a plugin by tutorials/eve/alice_esd_split.C). TGSplitFrame is a horizontally or vertically splittable composite frame. Once split, each part will contain a new TGSplitFrame, separated by a TGSplitter.; TGShapedFrame is a TGCompositeFrame on which a custom shape is applied, starting from a picture file, by taking its transparency mask, and then applying the picture as background.; TGEventHandler is a Base Event Handler class allowing to delegate event handling (a base class for GL event handlers). TGListTree. TGListTreeItem is now a base class and TGListTreeItemStd is the standard implementation (modification required by EVE).; Switched the icon and checkbox position in TGListTreeItem.; Added custom user control flags, with their getters and setters and three new signal methods (required by EVE). All these were implemented for better control of the TGListTree behavior.; ; fUserControlled is a flag to take over the control; fEventHandled is a flag to tell TGListTree that the current event has been processed by user.; ; MouseOver(TGListTreeItem *entry); MouseOver(TGListTreeItem *entry, UInt_t mask); Clicked(TGListTreeItem *entry, Int_t btn, UInt_t mask, Int_t x, Int_t y). The new DrawOutline() method draws a colored outline around a list tree item following the mouse position.; Implemented correct keyboard navigation.; Improvements for list trees containing a large number of items (i.e. one million). TGTab. Added a new signal method Removed(Int_t id) to notify when a tab was removed. TGListBox. Fixed flickering problem on Windows. TGDockableFrame. Introduced the fFixedSize option, to let user choose if the undocked frame may; be resized or not. Keep the (fixed) original docked frame size when undocked; (i.e. for menus and toolbars). TGShutter. Two h",MatchSource.DOCS,gui/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/gui/doc/v520/index.html:2608,Security,access,access,2608,"ab. Added a new signal method Removed(Int_t id) to notify when a tab was removed. TGListBox. Fixed flickering problem on Windows. TGDockableFrame. Introduced the fFixedSize option, to let user choose if the undocked frame may; be resized or not. Keep the (fixed) original docked frame size when undocked; (i.e. for menus and toolbars). TGShutter. Two helper methods added:; ; SetSelectedItem(const char *name) - switch to the shutter section 'name'.; EnableItem(const char *name, Bool_t on) - enable/disable the shutter section 'name' according to the value of the second parameter 'on'.; . TGFileDialog; The File Open/Close dialogs show the list of all available (mounted) drives on Windows. Modal Dialogs; On Windows, any modal dialog now stays on top of its parent (true modal mode). Context Menus; The context menu of ROOT classes can be created with hierarchical sub-menus, which are more convenient and offer better organization. This makes possible to access more class methods from the context menu (without having the menu becoming larger than the screen). The next is an example of the hierarchihal submenu structure shown below. void SetLevelOne(EPaletteType palette = pal3); // *MENU={Hierarchy=""Candidates/SetLevelOne""}*; void SetPalette(EPaletteType palette = pal3); // *SUBMENU={Hierarchy=""Candidates/SetPalette""}*; void SetCatalog(const char * = ""HESS"") { } // *MENU={Hierarchy=""Candidates/SetCatalog""}*; void AddCatalog(const char * = ""HESS"") { } // *MENU={Hierarchy=""Candidates/AddCatalog""}*; void RemoveCatalog(const char * = ""HESS"") { } // *MENU={Hierarchy=""Candidates/RemoveCatalog""}*; void AddCandidate(const char * = ""NAME"") { } // *MENU={Hierarchy=""Candidates/AddCandidate""}*. EPaletteType fPalette; //*OPTION={GetMethod=""GetPalette"";SetMethod=""SetPalette"";Items=(PrettyPalette=""PrettyPalette"",SchlenkPalette=""Schlenk"",pal3=""Pal3"",pal4=""Pal4"")}*. GUI HTML. Implemented controls handling (text buttons, radio buttons and check buttons); Implemented signals for these controls:;",MatchSource.DOCS,gui/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/gui/doc/v520/index.html:1856,Usability,undo,undocked,1856,"uired by EVE).; Switched the icon and checkbox position in TGListTreeItem.; Added custom user control flags, with their getters and setters and three new signal methods (required by EVE). All these were implemented for better control of the TGListTree behavior.; ; fUserControlled is a flag to take over the control; fEventHandled is a flag to tell TGListTree that the current event has been processed by user.; ; MouseOver(TGListTreeItem *entry); MouseOver(TGListTreeItem *entry, UInt_t mask); Clicked(TGListTreeItem *entry, Int_t btn, UInt_t mask, Int_t x, Int_t y). The new DrawOutline() method draws a colored outline around a list tree item following the mouse position.; Implemented correct keyboard navigation.; Improvements for list trees containing a large number of items (i.e. one million). TGTab. Added a new signal method Removed(Int_t id) to notify when a tab was removed. TGListBox. Fixed flickering problem on Windows. TGDockableFrame. Introduced the fFixedSize option, to let user choose if the undocked frame may; be resized or not. Keep the (fixed) original docked frame size when undocked; (i.e. for menus and toolbars). TGShutter. Two helper methods added:; ; SetSelectedItem(const char *name) - switch to the shutter section 'name'.; EnableItem(const char *name, Bool_t on) - enable/disable the shutter section 'name' according to the value of the second parameter 'on'.; . TGFileDialog; The File Open/Close dialogs show the list of all available (mounted) drives on Windows. Modal Dialogs; On Windows, any modal dialog now stays on top of its parent (true modal mode). Context Menus; The context menu of ROOT classes can be created with hierarchical sub-menus, which are more convenient and offer better organization. This makes possible to access more class methods from the context menu (without having the menu becoming larger than the screen). The next is an example of the hierarchihal submenu structure shown below. void SetLevelOne(EPaletteType palette = pal3); // *MENU=",MatchSource.DOCS,gui/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/gui/doc/v520/index.html:1944,Usability,undo,undocked,1944," custom user control flags, with their getters and setters and three new signal methods (required by EVE). All these were implemented for better control of the TGListTree behavior.; ; fUserControlled is a flag to take over the control; fEventHandled is a flag to tell TGListTree that the current event has been processed by user.; ; MouseOver(TGListTreeItem *entry); MouseOver(TGListTreeItem *entry, UInt_t mask); Clicked(TGListTreeItem *entry, Int_t btn, UInt_t mask, Int_t x, Int_t y). The new DrawOutline() method draws a colored outline around a list tree item following the mouse position.; Implemented correct keyboard navigation.; Improvements for list trees containing a large number of items (i.e. one million). TGTab. Added a new signal method Removed(Int_t id) to notify when a tab was removed. TGListBox. Fixed flickering problem on Windows. TGDockableFrame. Introduced the fFixedSize option, to let user choose if the undocked frame may; be resized or not. Keep the (fixed) original docked frame size when undocked; (i.e. for menus and toolbars). TGShutter. Two helper methods added:; ; SetSelectedItem(const char *name) - switch to the shutter section 'name'.; EnableItem(const char *name, Bool_t on) - enable/disable the shutter section 'name' according to the value of the second parameter 'on'.; . TGFileDialog; The File Open/Close dialogs show the list of all available (mounted) drives on Windows. Modal Dialogs; On Windows, any modal dialog now stays on top of its parent (true modal mode). Context Menus; The context menu of ROOT classes can be created with hierarchical sub-menus, which are more convenient and offer better organization. This makes possible to access more class methods from the context menu (without having the menu becoming larger than the screen). The next is an example of the hierarchihal submenu structure shown below. void SetLevelOne(EPaletteType palette = pal3); // *MENU={Hierarchy=""Candidates/SetLevelOne""}*; void SetPalette(EPaletteType palette = pal",MatchSource.DOCS,gui/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/gui/doc/v522/index.html:1768,Deployability,update,updated,1768,"r (GUI interface of the recorder):. New Class: TGPack; New Container class for vertical and horizontal grouping of frames.; It enforces a predictable resizing behaviour on children.; For an example of how to use it, see tutorials/eve/pack.C. TRootBrowser. Make the default url for the HTML plugin of TRootBrowser configurable via rootrc. TGTab. Added a 'Close Tab' icon in TGTabElement, allowing to close a tab element, and emitting a CloseTab(Int_t id) signal. The icon is active only on the actually activated tab.; Implement CloseTab slot usage in TRootBrowser and in TGRootIDE. TGTextEditor. Allow to execute a macro without having to save it first. TGSplitFrame. Added a new signal method Docked(TGFrame*) to notify when a embedded frame has been docked.; Added a new signal method Undocked(TGFrame*) to notify when a embedded frame has been undocked.; Added a new getter method GetUndocked() returning a pointer on undocked frame, if any. TGToolTip. Added new constructor with global x, y position.; If neither fWindow nor fPad are set use global fX, fY that was passed from outside. TGSplitter. Added option to handle frame resizing externally. TGView. Added a protection against possible negative scroll values. TGTextView. Fix bottom line not being properly updated while scrolling.; Solve a problem with vertical slider (avoid negative value when scrolling). TGTextEdit. Fix blinking cursor on some platforms/compilers. TGTextEntry. Added optional parameter 'Bool_t emit' to TGTextEntry::SetText(const char* text, Bool_t emit = kTRUE);; Made the same extension in sub-class TGNumberEntryField. TGCompositeFrame. Added new method virtual TGFrameElement* FindFrameElement(TGFrame *f) const; and use it in several TGCompositeFrame methods to simplify the code. GUIHTML; TGHtml. Implemented HTML <select> with TGListBox/TGCombobox and emit InputSelected(const char *name, const char *val) when changing selection. TGHtmlBrowser. Added the possibility to save current html page in a local file. ",MatchSource.DOCS,gui/doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/gui/doc/v522/index.html:68,Integrability,interface,interface,68,". GUI; New Classes: TRecorder TGRecorder; TRecorder classes provide interface for recording and replaying events in ROOT.; Recorded events are:; Commands typed by user in command line (e.g. 'new TCanvas'); GUI events (mouse movement, button clicks, ...); All the recorded events from one session are stored in one TFile and can be replayed again anytime.; Modifications in TRootCanvas menu:; Renamed 'Inspect' menu title to 'Tools'; Added 'Event Recorder' menu entry. Here is a screenshot of TGRecorder (GUI interface of the recorder):. New Class: TGPack; New Container class for vertical and horizontal grouping of frames.; It enforces a predictable resizing behaviour on children.; For an example of how to use it, see tutorials/eve/pack.C. TRootBrowser. Make the default url for the HTML plugin of TRootBrowser configurable via rootrc. TGTab. Added a 'Close Tab' icon in TGTabElement, allowing to close a tab element, and emitting a CloseTab(Int_t id) signal. The icon is active only on the actually activated tab.; Implement CloseTab slot usage in TRootBrowser and in TGRootIDE. TGTextEditor. Allow to execute a macro without having to save it first. TGSplitFrame. Added a new signal method Docked(TGFrame*) to notify when a embedded frame has been docked.; Added a new signal method Undocked(TGFrame*) to notify when a embedded frame has been undocked.; Added a new getter method GetUndocked() returning a pointer on undocked frame, if any. TGToolTip. Added new constructor with global x, y position.; If neither fWindow nor fPad are set use global fX, fY that was passed from outside. TGSplitter. Added option to handle frame resizing externally. TGView. Added a protection against possible negative scroll values. TGTextView. Fix bottom line not being properly updated while scrolling.; Solve a problem with vertical slider (avoid negative value when scrolling). TGTextEdit. Fix blinking cursor on some platforms/compilers. TGTextEntry. Added optional parameter 'Bool_t emit' to TGTextEntry::Se",MatchSource.DOCS,gui/doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/gui/doc/v522/index.html:508,Integrability,interface,interface,508,". GUI; New Classes: TRecorder TGRecorder; TRecorder classes provide interface for recording and replaying events in ROOT.; Recorded events are:; Commands typed by user in command line (e.g. 'new TCanvas'); GUI events (mouse movement, button clicks, ...); All the recorded events from one session are stored in one TFile and can be replayed again anytime.; Modifications in TRootCanvas menu:; Renamed 'Inspect' menu title to 'Tools'; Added 'Event Recorder' menu entry. Here is a screenshot of TGRecorder (GUI interface of the recorder):. New Class: TGPack; New Container class for vertical and horizontal grouping of frames.; It enforces a predictable resizing behaviour on children.; For an example of how to use it, see tutorials/eve/pack.C. TRootBrowser. Make the default url for the HTML plugin of TRootBrowser configurable via rootrc. TGTab. Added a 'Close Tab' icon in TGTabElement, allowing to close a tab element, and emitting a CloseTab(Int_t id) signal. The icon is active only on the actually activated tab.; Implement CloseTab slot usage in TRootBrowser and in TGRootIDE. TGTextEditor. Allow to execute a macro without having to save it first. TGSplitFrame. Added a new signal method Docked(TGFrame*) to notify when a embedded frame has been docked.; Added a new signal method Undocked(TGFrame*) to notify when a embedded frame has been undocked.; Added a new getter method GetUndocked() returning a pointer on undocked frame, if any. TGToolTip. Added new constructor with global x, y position.; If neither fWindow nor fPad are set use global fX, fY that was passed from outside. TGSplitter. Added option to handle frame resizing externally. TGView. Added a protection against possible negative scroll values. TGTextView. Fix bottom line not being properly updated while scrolling.; Solve a problem with vertical slider (avoid negative value when scrolling). TGTextEdit. Fix blinking cursor on some platforms/compilers. TGTextEntry. Added optional parameter 'Bool_t emit' to TGTextEntry::Se",MatchSource.DOCS,gui/doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/gui/doc/v522/index.html:791,Modifiability,plugin,plugin,791,". GUI; New Classes: TRecorder TGRecorder; TRecorder classes provide interface for recording and replaying events in ROOT.; Recorded events are:; Commands typed by user in command line (e.g. 'new TCanvas'); GUI events (mouse movement, button clicks, ...); All the recorded events from one session are stored in one TFile and can be replayed again anytime.; Modifications in TRootCanvas menu:; Renamed 'Inspect' menu title to 'Tools'; Added 'Event Recorder' menu entry. Here is a screenshot of TGRecorder (GUI interface of the recorder):. New Class: TGPack; New Container class for vertical and horizontal grouping of frames.; It enforces a predictable resizing behaviour on children.; For an example of how to use it, see tutorials/eve/pack.C. TRootBrowser. Make the default url for the HTML plugin of TRootBrowser configurable via rootrc. TGTab. Added a 'Close Tab' icon in TGTabElement, allowing to close a tab element, and emitting a CloseTab(Int_t id) signal. The icon is active only on the actually activated tab.; Implement CloseTab slot usage in TRootBrowser and in TGRootIDE. TGTextEditor. Allow to execute a macro without having to save it first. TGSplitFrame. Added a new signal method Docked(TGFrame*) to notify when a embedded frame has been docked.; Added a new signal method Undocked(TGFrame*) to notify when a embedded frame has been undocked.; Added a new getter method GetUndocked() returning a pointer on undocked frame, if any. TGToolTip. Added new constructor with global x, y position.; If neither fWindow nor fPad are set use global fX, fY that was passed from outside. TGSplitter. Added option to handle frame resizing externally. TGView. Added a protection against possible negative scroll values. TGTextView. Fix bottom line not being properly updated while scrolling.; Solve a problem with vertical slider (avoid negative value when scrolling). TGTextEdit. Fix blinking cursor on some platforms/compilers. TGTextEntry. Added optional parameter 'Bool_t emit' to TGTextEntry::Se",MatchSource.DOCS,gui/doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/gui/doc/v522/index.html:814,Modifiability,config,configurable,814,". GUI; New Classes: TRecorder TGRecorder; TRecorder classes provide interface for recording and replaying events in ROOT.; Recorded events are:; Commands typed by user in command line (e.g. 'new TCanvas'); GUI events (mouse movement, button clicks, ...); All the recorded events from one session are stored in one TFile and can be replayed again anytime.; Modifications in TRootCanvas menu:; Renamed 'Inspect' menu title to 'Tools'; Added 'Event Recorder' menu entry. Here is a screenshot of TGRecorder (GUI interface of the recorder):. New Class: TGPack; New Container class for vertical and horizontal grouping of frames.; It enforces a predictable resizing behaviour on children.; For an example of how to use it, see tutorials/eve/pack.C. TRootBrowser. Make the default url for the HTML plugin of TRootBrowser configurable via rootrc. TGTab. Added a 'Close Tab' icon in TGTabElement, allowing to close a tab element, and emitting a CloseTab(Int_t id) signal. The icon is active only on the actually activated tab.; Implement CloseTab slot usage in TRootBrowser and in TGRootIDE. TGTextEditor. Allow to execute a macro without having to save it first. TGSplitFrame. Added a new signal method Docked(TGFrame*) to notify when a embedded frame has been docked.; Added a new signal method Undocked(TGFrame*) to notify when a embedded frame has been undocked.; Added a new getter method GetUndocked() returning a pointer on undocked frame, if any. TGToolTip. Added new constructor with global x, y position.; If neither fWindow nor fPad are set use global fX, fY that was passed from outside. TGSplitter. Added option to handle frame resizing externally. TGView. Added a protection against possible negative scroll values. TGTextView. Fix bottom line not being properly updated while scrolling.; Solve a problem with vertical slider (avoid negative value when scrolling). TGTextEdit. Fix blinking cursor on some platforms/compilers. TGTextEntry. Added optional parameter 'Bool_t emit' to TGTextEntry::Se",MatchSource.DOCS,gui/doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/gui/doc/v522/index.html:639,Safety,predict,predictable,639,". GUI; New Classes: TRecorder TGRecorder; TRecorder classes provide interface for recording and replaying events in ROOT.; Recorded events are:; Commands typed by user in command line (e.g. 'new TCanvas'); GUI events (mouse movement, button clicks, ...); All the recorded events from one session are stored in one TFile and can be replayed again anytime.; Modifications in TRootCanvas menu:; Renamed 'Inspect' menu title to 'Tools'; Added 'Event Recorder' menu entry. Here is a screenshot of TGRecorder (GUI interface of the recorder):. New Class: TGPack; New Container class for vertical and horizontal grouping of frames.; It enforces a predictable resizing behaviour on children.; For an example of how to use it, see tutorials/eve/pack.C. TRootBrowser. Make the default url for the HTML plugin of TRootBrowser configurable via rootrc. TGTab. Added a 'Close Tab' icon in TGTabElement, allowing to close a tab element, and emitting a CloseTab(Int_t id) signal. The icon is active only on the actually activated tab.; Implement CloseTab slot usage in TRootBrowser and in TGRootIDE. TGTextEditor. Allow to execute a macro without having to save it first. TGSplitFrame. Added a new signal method Docked(TGFrame*) to notify when a embedded frame has been docked.; Added a new signal method Undocked(TGFrame*) to notify when a embedded frame has been undocked.; Added a new getter method GetUndocked() returning a pointer on undocked frame, if any. TGToolTip. Added new constructor with global x, y position.; If neither fWindow nor fPad are set use global fX, fY that was passed from outside. TGSplitter. Added option to handle frame resizing externally. TGView. Added a protection against possible negative scroll values. TGTextView. Fix bottom line not being properly updated while scrolling.; Solve a problem with vertical slider (avoid negative value when scrolling). TGTextEdit. Fix blinking cursor on some platforms/compilers. TGTextEntry. Added optional parameter 'Bool_t emit' to TGTextEntry::Se",MatchSource.DOCS,gui/doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/gui/doc/v522/index.html:1832,Safety,avoid,avoid,1832,"r (GUI interface of the recorder):. New Class: TGPack; New Container class for vertical and horizontal grouping of frames.; It enforces a predictable resizing behaviour on children.; For an example of how to use it, see tutorials/eve/pack.C. TRootBrowser. Make the default url for the HTML plugin of TRootBrowser configurable via rootrc. TGTab. Added a 'Close Tab' icon in TGTabElement, allowing to close a tab element, and emitting a CloseTab(Int_t id) signal. The icon is active only on the actually activated tab.; Implement CloseTab slot usage in TRootBrowser and in TGRootIDE. TGTextEditor. Allow to execute a macro without having to save it first. TGSplitFrame. Added a new signal method Docked(TGFrame*) to notify when a embedded frame has been docked.; Added a new signal method Undocked(TGFrame*) to notify when a embedded frame has been undocked.; Added a new getter method GetUndocked() returning a pointer on undocked frame, if any. TGToolTip. Added new constructor with global x, y position.; If neither fWindow nor fPad are set use global fX, fY that was passed from outside. TGSplitter. Added option to handle frame resizing externally. TGView. Added a protection against possible negative scroll values. TGTextView. Fix bottom line not being properly updated while scrolling.; Solve a problem with vertical slider (avoid negative value when scrolling). TGTextEdit. Fix blinking cursor on some platforms/compilers. TGTextEntry. Added optional parameter 'Bool_t emit' to TGTextEntry::SetText(const char* text, Bool_t emit = kTRUE);; Made the same extension in sub-class TGNumberEntryField. TGCompositeFrame. Added new method virtual TGFrameElement* FindFrameElement(TGFrame *f) const; and use it in several TGCompositeFrame methods to simplify the code. GUIHTML; TGHtml. Implemented HTML <select> with TGListBox/TGCombobox and emit InputSelected(const char *name, const char *val) when changing selection. TGHtmlBrowser. Added the possibility to save current html page in a local file. ",MatchSource.DOCS,gui/doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/gui/doc/v522/index.html:1288,Usability,Undo,Undocked,1288,"n one TFile and can be replayed again anytime.; Modifications in TRootCanvas menu:; Renamed 'Inspect' menu title to 'Tools'; Added 'Event Recorder' menu entry. Here is a screenshot of TGRecorder (GUI interface of the recorder):. New Class: TGPack; New Container class for vertical and horizontal grouping of frames.; It enforces a predictable resizing behaviour on children.; For an example of how to use it, see tutorials/eve/pack.C. TRootBrowser. Make the default url for the HTML plugin of TRootBrowser configurable via rootrc. TGTab. Added a 'Close Tab' icon in TGTabElement, allowing to close a tab element, and emitting a CloseTab(Int_t id) signal. The icon is active only on the actually activated tab.; Implement CloseTab slot usage in TRootBrowser and in TGRootIDE. TGTextEditor. Allow to execute a macro without having to save it first. TGSplitFrame. Added a new signal method Docked(TGFrame*) to notify when a embedded frame has been docked.; Added a new signal method Undocked(TGFrame*) to notify when a embedded frame has been undocked.; Added a new getter method GetUndocked() returning a pointer on undocked frame, if any. TGToolTip. Added new constructor with global x, y position.; If neither fWindow nor fPad are set use global fX, fY that was passed from outside. TGSplitter. Added option to handle frame resizing externally. TGView. Added a protection against possible negative scroll values. TGTextView. Fix bottom line not being properly updated while scrolling.; Solve a problem with vertical slider (avoid negative value when scrolling). TGTextEdit. Fix blinking cursor on some platforms/compilers. TGTextEntry. Added optional parameter 'Bool_t emit' to TGTextEntry::SetText(const char* text, Bool_t emit = kTRUE);; Made the same extension in sub-class TGNumberEntryField. TGCompositeFrame. Added new method virtual TGFrameElement* FindFrameElement(TGFrame *f) const; and use it in several TGCompositeFrame methods to simplify the code. GUIHTML; TGHtml. Implemented HTML <selec",MatchSource.DOCS,gui/doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/gui/doc/v522/index.html:1348,Usability,undo,undocked,1348,"n one TFile and can be replayed again anytime.; Modifications in TRootCanvas menu:; Renamed 'Inspect' menu title to 'Tools'; Added 'Event Recorder' menu entry. Here is a screenshot of TGRecorder (GUI interface of the recorder):. New Class: TGPack; New Container class for vertical and horizontal grouping of frames.; It enforces a predictable resizing behaviour on children.; For an example of how to use it, see tutorials/eve/pack.C. TRootBrowser. Make the default url for the HTML plugin of TRootBrowser configurable via rootrc. TGTab. Added a 'Close Tab' icon in TGTabElement, allowing to close a tab element, and emitting a CloseTab(Int_t id) signal. The icon is active only on the actually activated tab.; Implement CloseTab slot usage in TRootBrowser and in TGRootIDE. TGTextEditor. Allow to execute a macro without having to save it first. TGSplitFrame. Added a new signal method Docked(TGFrame*) to notify when a embedded frame has been docked.; Added a new signal method Undocked(TGFrame*) to notify when a embedded frame has been undocked.; Added a new getter method GetUndocked() returning a pointer on undocked frame, if any. TGToolTip. Added new constructor with global x, y position.; If neither fWindow nor fPad are set use global fX, fY that was passed from outside. TGSplitter. Added option to handle frame resizing externally. TGView. Added a protection against possible negative scroll values. TGTextView. Fix bottom line not being properly updated while scrolling.; Solve a problem with vertical slider (avoid negative value when scrolling). TGTextEdit. Fix blinking cursor on some platforms/compilers. TGTextEntry. Added optional parameter 'Bool_t emit' to TGTextEntry::SetText(const char* text, Bool_t emit = kTRUE);; Made the same extension in sub-class TGNumberEntryField. TGCompositeFrame. Added new method virtual TGFrameElement* FindFrameElement(TGFrame *f) const; and use it in several TGCompositeFrame methods to simplify the code. GUIHTML; TGHtml. Implemented HTML <selec",MatchSource.DOCS,gui/doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/gui/doc/v522/index.html:1422,Usability,undo,undocked,1422,"Inspect' menu title to 'Tools'; Added 'Event Recorder' menu entry. Here is a screenshot of TGRecorder (GUI interface of the recorder):. New Class: TGPack; New Container class for vertical and horizontal grouping of frames.; It enforces a predictable resizing behaviour on children.; For an example of how to use it, see tutorials/eve/pack.C. TRootBrowser. Make the default url for the HTML plugin of TRootBrowser configurable via rootrc. TGTab. Added a 'Close Tab' icon in TGTabElement, allowing to close a tab element, and emitting a CloseTab(Int_t id) signal. The icon is active only on the actually activated tab.; Implement CloseTab slot usage in TRootBrowser and in TGRootIDE. TGTextEditor. Allow to execute a macro without having to save it first. TGSplitFrame. Added a new signal method Docked(TGFrame*) to notify when a embedded frame has been docked.; Added a new signal method Undocked(TGFrame*) to notify when a embedded frame has been undocked.; Added a new getter method GetUndocked() returning a pointer on undocked frame, if any. TGToolTip. Added new constructor with global x, y position.; If neither fWindow nor fPad are set use global fX, fY that was passed from outside. TGSplitter. Added option to handle frame resizing externally. TGView. Added a protection against possible negative scroll values. TGTextView. Fix bottom line not being properly updated while scrolling.; Solve a problem with vertical slider (avoid negative value when scrolling). TGTextEdit. Fix blinking cursor on some platforms/compilers. TGTextEntry. Added optional parameter 'Bool_t emit' to TGTextEntry::SetText(const char* text, Bool_t emit = kTRUE);; Made the same extension in sub-class TGNumberEntryField. TGCompositeFrame. Added new method virtual TGFrameElement* FindFrameElement(TGFrame *f) const; and use it in several TGCompositeFrame methods to simplify the code. GUIHTML; TGHtml. Implemented HTML <select> with TGListBox/TGCombobox and emit InputSelected(const char *name, const char *val) when ",MatchSource.DOCS,gui/doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/gui/doc/v522/index.html:2250,Usability,simpl,simplify,2250,"r (GUI interface of the recorder):. New Class: TGPack; New Container class for vertical and horizontal grouping of frames.; It enforces a predictable resizing behaviour on children.; For an example of how to use it, see tutorials/eve/pack.C. TRootBrowser. Make the default url for the HTML plugin of TRootBrowser configurable via rootrc. TGTab. Added a 'Close Tab' icon in TGTabElement, allowing to close a tab element, and emitting a CloseTab(Int_t id) signal. The icon is active only on the actually activated tab.; Implement CloseTab slot usage in TRootBrowser and in TGRootIDE. TGTextEditor. Allow to execute a macro without having to save it first. TGSplitFrame. Added a new signal method Docked(TGFrame*) to notify when a embedded frame has been docked.; Added a new signal method Undocked(TGFrame*) to notify when a embedded frame has been undocked.; Added a new getter method GetUndocked() returning a pointer on undocked frame, if any. TGToolTip. Added new constructor with global x, y position.; If neither fWindow nor fPad are set use global fX, fY that was passed from outside. TGSplitter. Added option to handle frame resizing externally. TGView. Added a protection against possible negative scroll values. TGTextView. Fix bottom line not being properly updated while scrolling.; Solve a problem with vertical slider (avoid negative value when scrolling). TGTextEdit. Fix blinking cursor on some platforms/compilers. TGTextEntry. Added optional parameter 'Bool_t emit' to TGTextEntry::SetText(const char* text, Bool_t emit = kTRUE);; Made the same extension in sub-class TGNumberEntryField. TGCompositeFrame. Added new method virtual TGFrameElement* FindFrameElement(TGFrame *f) const; and use it in several TGCompositeFrame methods to simplify the code. GUIHTML; TGHtml. Implemented HTML <select> with TGListBox/TGCombobox and emit InputSelected(const char *name, const char *val) when changing selection. TGHtmlBrowser. Added the possibility to save current html page in a local file. ",MatchSource.DOCS,gui/doc/v522/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/doc/v522/index.html
https://github.com/root-project/root/tree/v6-32-06/gui/doc/v524/index.html:1309,Deployability,update,update,1309,". GUI; TRootCanvas. In SetWindowSize the event queue is flushed to make sure; the window size change is really done. TRootContextMenu. When creating the dialog from the context menu, skip arguments that are pointers (but not char *) and have a default value. This should avoid confusing input fields in dialog.; Implemented online help in root dialogs (the dialog boxes used with contextual menus) via a new ""Online Help"" button. This opens a Root HTML browser at the right class/method location in the Root reference guide on the web.; The base url can be changed with the Browser.StartUrl option in system.rootrc (by default: http://root.cern.ch/root/html/ClassIndex.html); Added a small '?' on the right of the context menu entries, giving access to online help. TGMenu. Add possibility to add a right aligned shortcut by using a tab character ('\t') before the shortcut string, as shown below:; fMenuFile->AddEntry(""&Open...\tCtrl+O"", kOpenFile);; Use new way of adding right aligned shortcuts in the menu entries in most of the GUI classes using shortcuts in their menu. TGSlider. Added HandleConfigureNotify() to handle resizing events. New Browser. Automatically browse ROOT files if there is any open when starting the browser.; Correct system files manipulations (copy, rename, delete) and automatic update of the list tree. GUIHTML; TGHtmlBrowser. Added ability to display single picture from the web and to open pdf files with external viewer (Windows only); Implemented anchor navigation (e.g. http://root.cern.ch/root/html/TH1.html#TH1:Multiply). ",MatchSource.DOCS,gui/doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/gui/doc/v524/index.html:47,Performance,queue,queue,47,". GUI; TRootCanvas. In SetWindowSize the event queue is flushed to make sure; the window size change is really done. TRootContextMenu. When creating the dialog from the context menu, skip arguments that are pointers (but not char *) and have a default value. This should avoid confusing input fields in dialog.; Implemented online help in root dialogs (the dialog boxes used with contextual menus) via a new ""Online Help"" button. This opens a Root HTML browser at the right class/method location in the Root reference guide on the web.; The base url can be changed with the Browser.StartUrl option in system.rootrc (by default: http://root.cern.ch/root/html/ClassIndex.html); Added a small '?' on the right of the context menu entries, giving access to online help. TGMenu. Add possibility to add a right aligned shortcut by using a tab character ('\t') before the shortcut string, as shown below:; fMenuFile->AddEntry(""&Open...\tCtrl+O"", kOpenFile);; Use new way of adding right aligned shortcuts in the menu entries in most of the GUI classes using shortcuts in their menu. TGSlider. Added HandleConfigureNotify() to handle resizing events. New Browser. Automatically browse ROOT files if there is any open when starting the browser.; Correct system files manipulations (copy, rename, delete) and automatic update of the list tree. GUIHTML; TGHtmlBrowser. Added ability to display single picture from the web and to open pdf files with external viewer (Windows only); Implemented anchor navigation (e.g. http://root.cern.ch/root/html/TH1.html#TH1:Multiply). ",MatchSource.DOCS,gui/doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/gui/doc/v524/index.html:271,Safety,avoid,avoid,271,". GUI; TRootCanvas. In SetWindowSize the event queue is flushed to make sure; the window size change is really done. TRootContextMenu. When creating the dialog from the context menu, skip arguments that are pointers (but not char *) and have a default value. This should avoid confusing input fields in dialog.; Implemented online help in root dialogs (the dialog boxes used with contextual menus) via a new ""Online Help"" button. This opens a Root HTML browser at the right class/method location in the Root reference guide on the web.; The base url can be changed with the Browser.StartUrl option in system.rootrc (by default: http://root.cern.ch/root/html/ClassIndex.html); Added a small '?' on the right of the context menu entries, giving access to online help. TGMenu. Add possibility to add a right aligned shortcut by using a tab character ('\t') before the shortcut string, as shown below:; fMenuFile->AddEntry(""&Open...\tCtrl+O"", kOpenFile);; Use new way of adding right aligned shortcuts in the menu entries in most of the GUI classes using shortcuts in their menu. TGSlider. Added HandleConfigureNotify() to handle resizing events. New Browser. Automatically browse ROOT files if there is any open when starting the browser.; Correct system files manipulations (copy, rename, delete) and automatic update of the list tree. GUIHTML; TGHtmlBrowser. Added ability to display single picture from the web and to open pdf files with external viewer (Windows only); Implemented anchor navigation (e.g. http://root.cern.ch/root/html/TH1.html#TH1:Multiply). ",MatchSource.DOCS,gui/doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/gui/doc/v524/index.html:743,Security,access,access,743,". GUI; TRootCanvas. In SetWindowSize the event queue is flushed to make sure; the window size change is really done. TRootContextMenu. When creating the dialog from the context menu, skip arguments that are pointers (but not char *) and have a default value. This should avoid confusing input fields in dialog.; Implemented online help in root dialogs (the dialog boxes used with contextual menus) via a new ""Online Help"" button. This opens a Root HTML browser at the right class/method location in the Root reference guide on the web.; The base url can be changed with the Browser.StartUrl option in system.rootrc (by default: http://root.cern.ch/root/html/ClassIndex.html); Added a small '?' on the right of the context menu entries, giving access to online help. TGMenu. Add possibility to add a right aligned shortcut by using a tab character ('\t') before the shortcut string, as shown below:; fMenuFile->AddEntry(""&Open...\tCtrl+O"", kOpenFile);; Use new way of adding right aligned shortcuts in the menu entries in most of the GUI classes using shortcuts in their menu. TGSlider. Added HandleConfigureNotify() to handle resizing events. New Browser. Automatically browse ROOT files if there is any open when starting the browser.; Correct system files manipulations (copy, rename, delete) and automatic update of the list tree. GUIHTML; TGHtmlBrowser. Added ability to display single picture from the web and to open pdf files with external viewer (Windows only); Implemented anchor navigation (e.g. http://root.cern.ch/root/html/TH1.html#TH1:Multiply). ",MatchSource.DOCS,gui/doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/gui/doc/v524/index.html:518,Usability,guid,guide,518,". GUI; TRootCanvas. In SetWindowSize the event queue is flushed to make sure; the window size change is really done. TRootContextMenu. When creating the dialog from the context menu, skip arguments that are pointers (but not char *) and have a default value. This should avoid confusing input fields in dialog.; Implemented online help in root dialogs (the dialog boxes used with contextual menus) via a new ""Online Help"" button. This opens a Root HTML browser at the right class/method location in the Root reference guide on the web.; The base url can be changed with the Browser.StartUrl option in system.rootrc (by default: http://root.cern.ch/root/html/ClassIndex.html); Added a small '?' on the right of the context menu entries, giving access to online help. TGMenu. Add possibility to add a right aligned shortcut by using a tab character ('\t') before the shortcut string, as shown below:; fMenuFile->AddEntry(""&Open...\tCtrl+O"", kOpenFile);; Use new way of adding right aligned shortcuts in the menu entries in most of the GUI classes using shortcuts in their menu. TGSlider. Added HandleConfigureNotify() to handle resizing events. New Browser. Automatically browse ROOT files if there is any open when starting the browser.; Correct system files manipulations (copy, rename, delete) and automatic update of the list tree. GUIHTML; TGHtmlBrowser. Added ability to display single picture from the web and to open pdf files with external viewer (Windows only); Implemented anchor navigation (e.g. http://root.cern.ch/root/html/TH1.html#TH1:Multiply). ",MatchSource.DOCS,gui/doc/v524/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/doc/v524/index.html
https://github.com/root-project/root/tree/v6-32-06/gui/doc/v526/index.html:577,Deployability,update,update,577,". GUI; TRootCanvas/TCanvas. Implement tooltip displaying information about the primitive below the mouse pointer in a canvas.; It is possible to enable/disable this optional feature with the ""Tooltip Info"" menu entry from the ""View"" menu of the canvas.; To change the default behaviour (off by default), a new option has been added in system.rootrc:; Canvas.ShowToolTips: false. TBrowser. Automatically switch to the tab containing the current canvas (if any) when e.g. drawing a histogram by double-clicking on its list tree item in a root file.; Automatically switch to (and update) the list of files in the file browser (left panel) when opening a ROOT file from the ""Open File"" menu. TGListView. Keyboard navigation is now fully working in the list view. TGMainFrame. Allow to save a snapshot of the GUI in a picture file. The supported formats are gif, jpg, png, tiff, and xpm. TGFileDialog. Allow to change directory by typing its name in the text entry field of the dialog. TProofProgressDialog. Added a speedometer widget (TGSpeedo) to display the processing rate; Added a check button to enable/disable smooth update of the speedometer (enabled by default). This could be useful in the case of slow displays (e.g. when using it via ssh); Several layout improvements. TRecorder. Improvements and consolidation of the cross-platform interoperability, allowing to record and replay sessions between different platforms with less side effects. NB: Using different OS/WM (Window Managers) and using different ROOT GUI settings (via e.g. system.rootrc) between recording and replaying may still produce a wrong behavior of the recorder.; New tutorial guitest_playback.C replaying a recorded session showing and validating the GUI (using guitest.C). GUI Builder; New features, new user interface; Several important features have been added to the builder, and its user interface has been redesigned.; Editing modes are now clearly distinguished with enabled and disabled layout mode. Possibility to ",MatchSource.DOCS,gui/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/gui/doc/v526/index.html:1119,Deployability,update,update,1119,"tive below the mouse pointer in a canvas.; It is possible to enable/disable this optional feature with the ""Tooltip Info"" menu entry from the ""View"" menu of the canvas.; To change the default behaviour (off by default), a new option has been added in system.rootrc:; Canvas.ShowToolTips: false. TBrowser. Automatically switch to the tab containing the current canvas (if any) when e.g. drawing a histogram by double-clicking on its list tree item in a root file.; Automatically switch to (and update) the list of files in the file browser (left panel) when opening a ROOT file from the ""Open File"" menu. TGListView. Keyboard navigation is now fully working in the list view. TGMainFrame. Allow to save a snapshot of the GUI in a picture file. The supported formats are gif, jpg, png, tiff, and xpm. TGFileDialog. Allow to change directory by typing its name in the text entry field of the dialog. TProofProgressDialog. Added a speedometer widget (TGSpeedo) to display the processing rate; Added a check button to enable/disable smooth update of the speedometer (enabled by default). This could be useful in the case of slow displays (e.g. when using it via ssh); Several layout improvements. TRecorder. Improvements and consolidation of the cross-platform interoperability, allowing to record and replay sessions between different platforms with less side effects. NB: Using different OS/WM (Window Managers) and using different ROOT GUI settings (via e.g. system.rootrc) between recording and replaying may still produce a wrong behavior of the recorder.; New tutorial guitest_playback.C replaying a recorded session showing and validating the GUI (using guitest.C). GUI Builder; New features, new user interface; Several important features have been added to the builder, and its user interface has been redesigned.; Editing modes are now clearly distinguished with enabled and disabled layout mode. Possibility to enable automatic layout fasten the interface development, as the positioning doesn'",MatchSource.DOCS,gui/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/gui/doc/v526/index.html:1340,Integrability,interoperab,interoperability,1340,"ips: false. TBrowser. Automatically switch to the tab containing the current canvas (if any) when e.g. drawing a histogram by double-clicking on its list tree item in a root file.; Automatically switch to (and update) the list of files in the file browser (left panel) when opening a ROOT file from the ""Open File"" menu. TGListView. Keyboard navigation is now fully working in the list view. TGMainFrame. Allow to save a snapshot of the GUI in a picture file. The supported formats are gif, jpg, png, tiff, and xpm. TGFileDialog. Allow to change directory by typing its name in the text entry field of the dialog. TProofProgressDialog. Added a speedometer widget (TGSpeedo) to display the processing rate; Added a check button to enable/disable smooth update of the speedometer (enabled by default). This could be useful in the case of slow displays (e.g. when using it via ssh); Several layout improvements. TRecorder. Improvements and consolidation of the cross-platform interoperability, allowing to record and replay sessions between different platforms with less side effects. NB: Using different OS/WM (Window Managers) and using different ROOT GUI settings (via e.g. system.rootrc) between recording and replaying may still produce a wrong behavior of the recorder.; New tutorial guitest_playback.C replaying a recorded session showing and validating the GUI (using guitest.C). GUI Builder; New features, new user interface; Several important features have been added to the builder, and its user interface has been redesigned.; Editing modes are now clearly distinguished with enabled and disabled layout mode. Possibility to enable automatic layout fasten the interface development, as the positioning doesn't have to be done manually anymore; Major changes in the user interface:. Added a list tree displaying the complete structure of the GUI; The name of every element of the GUI is now editable; New, more intuitive interface for padding and layout hints; Color settings option was added",MatchSource.DOCS,gui/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/gui/doc/v526/index.html:1788,Integrability,interface,interface,1788,"o (and update) the list of files in the file browser (left panel) when opening a ROOT file from the ""Open File"" menu. TGListView. Keyboard navigation is now fully working in the list view. TGMainFrame. Allow to save a snapshot of the GUI in a picture file. The supported formats are gif, jpg, png, tiff, and xpm. TGFileDialog. Allow to change directory by typing its name in the text entry field of the dialog. TProofProgressDialog. Added a speedometer widget (TGSpeedo) to display the processing rate; Added a check button to enable/disable smooth update of the speedometer (enabled by default). This could be useful in the case of slow displays (e.g. when using it via ssh); Several layout improvements. TRecorder. Improvements and consolidation of the cross-platform interoperability, allowing to record and replay sessions between different platforms with less side effects. NB: Using different OS/WM (Window Managers) and using different ROOT GUI settings (via e.g. system.rootrc) between recording and replaying may still produce a wrong behavior of the recorder.; New tutorial guitest_playback.C replaying a recorded session showing and validating the GUI (using guitest.C). GUI Builder; New features, new user interface; Several important features have been added to the builder, and its user interface has been redesigned.; Editing modes are now clearly distinguished with enabled and disabled layout mode. Possibility to enable automatic layout fasten the interface development, as the positioning doesn't have to be done manually anymore; Major changes in the user interface:. Added a list tree displaying the complete structure of the GUI; The name of every element of the GUI is now editable; New, more intuitive interface for padding and layout hints; Color settings option was added to the widget editor; Extended commands in the top menu (open project, save project...); Added important warning dialogs, such as ""Save project"" dialog when closing the window; Added several tool tips. ",MatchSource.DOCS,gui/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/gui/doc/v526/index.html:1871,Integrability,interface,interface,1871,"o (and update) the list of files in the file browser (left panel) when opening a ROOT file from the ""Open File"" menu. TGListView. Keyboard navigation is now fully working in the list view. TGMainFrame. Allow to save a snapshot of the GUI in a picture file. The supported formats are gif, jpg, png, tiff, and xpm. TGFileDialog. Allow to change directory by typing its name in the text entry field of the dialog. TProofProgressDialog. Added a speedometer widget (TGSpeedo) to display the processing rate; Added a check button to enable/disable smooth update of the speedometer (enabled by default). This could be useful in the case of slow displays (e.g. when using it via ssh); Several layout improvements. TRecorder. Improvements and consolidation of the cross-platform interoperability, allowing to record and replay sessions between different platforms with less side effects. NB: Using different OS/WM (Window Managers) and using different ROOT GUI settings (via e.g. system.rootrc) between recording and replaying may still produce a wrong behavior of the recorder.; New tutorial guitest_playback.C replaying a recorded session showing and validating the GUI (using guitest.C). GUI Builder; New features, new user interface; Several important features have been added to the builder, and its user interface has been redesigned.; Editing modes are now clearly distinguished with enabled and disabled layout mode. Possibility to enable automatic layout fasten the interface development, as the positioning doesn't have to be done manually anymore; Major changes in the user interface:. Added a list tree displaying the complete structure of the GUI; The name of every element of the GUI is now editable; New, more intuitive interface for padding and layout hints; Color settings option was added to the widget editor; Extended commands in the top menu (open project, save project...); Added important warning dialogs, such as ""Save project"" dialog when closing the window; Added several tool tips. ",MatchSource.DOCS,gui/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/gui/doc/v526/index.html:2036,Integrability,interface,interface,2036,"o (and update) the list of files in the file browser (left panel) when opening a ROOT file from the ""Open File"" menu. TGListView. Keyboard navigation is now fully working in the list view. TGMainFrame. Allow to save a snapshot of the GUI in a picture file. The supported formats are gif, jpg, png, tiff, and xpm. TGFileDialog. Allow to change directory by typing its name in the text entry field of the dialog. TProofProgressDialog. Added a speedometer widget (TGSpeedo) to display the processing rate; Added a check button to enable/disable smooth update of the speedometer (enabled by default). This could be useful in the case of slow displays (e.g. when using it via ssh); Several layout improvements. TRecorder. Improvements and consolidation of the cross-platform interoperability, allowing to record and replay sessions between different platforms with less side effects. NB: Using different OS/WM (Window Managers) and using different ROOT GUI settings (via e.g. system.rootrc) between recording and replaying may still produce a wrong behavior of the recorder.; New tutorial guitest_playback.C replaying a recorded session showing and validating the GUI (using guitest.C). GUI Builder; New features, new user interface; Several important features have been added to the builder, and its user interface has been redesigned.; Editing modes are now clearly distinguished with enabled and disabled layout mode. Possibility to enable automatic layout fasten the interface development, as the positioning doesn't have to be done manually anymore; Major changes in the user interface:. Added a list tree displaying the complete structure of the GUI; The name of every element of the GUI is now editable; New, more intuitive interface for padding and layout hints; Color settings option was added to the widget editor; Extended commands in the top menu (open project, save project...); Added important warning dialogs, such as ""Save project"" dialog when closing the window; Added several tool tips. ",MatchSource.DOCS,gui/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/gui/doc/v526/index.html:2146,Integrability,interface,interface,2146,"o (and update) the list of files in the file browser (left panel) when opening a ROOT file from the ""Open File"" menu. TGListView. Keyboard navigation is now fully working in the list view. TGMainFrame. Allow to save a snapshot of the GUI in a picture file. The supported formats are gif, jpg, png, tiff, and xpm. TGFileDialog. Allow to change directory by typing its name in the text entry field of the dialog. TProofProgressDialog. Added a speedometer widget (TGSpeedo) to display the processing rate; Added a check button to enable/disable smooth update of the speedometer (enabled by default). This could be useful in the case of slow displays (e.g. when using it via ssh); Several layout improvements. TRecorder. Improvements and consolidation of the cross-platform interoperability, allowing to record and replay sessions between different platforms with less side effects. NB: Using different OS/WM (Window Managers) and using different ROOT GUI settings (via e.g. system.rootrc) between recording and replaying may still produce a wrong behavior of the recorder.; New tutorial guitest_playback.C replaying a recorded session showing and validating the GUI (using guitest.C). GUI Builder; New features, new user interface; Several important features have been added to the builder, and its user interface has been redesigned.; Editing modes are now clearly distinguished with enabled and disabled layout mode. Possibility to enable automatic layout fasten the interface development, as the positioning doesn't have to be done manually anymore; Major changes in the user interface:. Added a list tree displaying the complete structure of the GUI; The name of every element of the GUI is now editable; New, more intuitive interface for padding and layout hints; Color settings option was added to the widget editor; Extended commands in the top menu (open project, save project...); Added important warning dialogs, such as ""Save project"" dialog when closing the window; Added several tool tips. ",MatchSource.DOCS,gui/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/gui/doc/v526/index.html:2296,Integrability,interface,interface,2296,"o (and update) the list of files in the file browser (left panel) when opening a ROOT file from the ""Open File"" menu. TGListView. Keyboard navigation is now fully working in the list view. TGMainFrame. Allow to save a snapshot of the GUI in a picture file. The supported formats are gif, jpg, png, tiff, and xpm. TGFileDialog. Allow to change directory by typing its name in the text entry field of the dialog. TProofProgressDialog. Added a speedometer widget (TGSpeedo) to display the processing rate; Added a check button to enable/disable smooth update of the speedometer (enabled by default). This could be useful in the case of slow displays (e.g. when using it via ssh); Several layout improvements. TRecorder. Improvements and consolidation of the cross-platform interoperability, allowing to record and replay sessions between different platforms with less side effects. NB: Using different OS/WM (Window Managers) and using different ROOT GUI settings (via e.g. system.rootrc) between recording and replaying may still produce a wrong behavior of the recorder.; New tutorial guitest_playback.C replaying a recorded session showing and validating the GUI (using guitest.C). GUI Builder; New features, new user interface; Several important features have been added to the builder, and its user interface has been redesigned.; Editing modes are now clearly distinguished with enabled and disabled layout mode. Possibility to enable automatic layout fasten the interface development, as the positioning doesn't have to be done manually anymore; Major changes in the user interface:. Added a list tree displaying the complete structure of the GUI; The name of every element of the GUI is now editable; New, more intuitive interface for padding and layout hints; Color settings option was added to the widget editor; Extended commands in the top menu (open project, save project...); Added important warning dialogs, such as ""Save project"" dialog when closing the window; Added several tool tips. ",MatchSource.DOCS,gui/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/gui/doc/v526/index.html:2390,Modifiability,Extend,Extended,2390,"o (and update) the list of files in the file browser (left panel) when opening a ROOT file from the ""Open File"" menu. TGListView. Keyboard navigation is now fully working in the list view. TGMainFrame. Allow to save a snapshot of the GUI in a picture file. The supported formats are gif, jpg, png, tiff, and xpm. TGFileDialog. Allow to change directory by typing its name in the text entry field of the dialog. TProofProgressDialog. Added a speedometer widget (TGSpeedo) to display the processing rate; Added a check button to enable/disable smooth update of the speedometer (enabled by default). This could be useful in the case of slow displays (e.g. when using it via ssh); Several layout improvements. TRecorder. Improvements and consolidation of the cross-platform interoperability, allowing to record and replay sessions between different platforms with less side effects. NB: Using different OS/WM (Window Managers) and using different ROOT GUI settings (via e.g. system.rootrc) between recording and replaying may still produce a wrong behavior of the recorder.; New tutorial guitest_playback.C replaying a recorded session showing and validating the GUI (using guitest.C). GUI Builder; New features, new user interface; Several important features have been added to the builder, and its user interface has been redesigned.; Editing modes are now clearly distinguished with enabled and disabled layout mode. Possibility to enable automatic layout fasten the interface development, as the positioning doesn't have to be done manually anymore; Major changes in the user interface:. Added a list tree displaying the complete structure of the GUI; The name of every element of the GUI is now editable; New, more intuitive interface for padding and layout hints; Color settings option was added to the widget editor; Extended commands in the top menu (open project, save project...); Added important warning dialogs, such as ""Save project"" dialog when closing the window; Added several tool tips. ",MatchSource.DOCS,gui/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/gui/doc/v526/index.html:1714,Security,validat,validating,1714,"o (and update) the list of files in the file browser (left panel) when opening a ROOT file from the ""Open File"" menu. TGListView. Keyboard navigation is now fully working in the list view. TGMainFrame. Allow to save a snapshot of the GUI in a picture file. The supported formats are gif, jpg, png, tiff, and xpm. TGFileDialog. Allow to change directory by typing its name in the text entry field of the dialog. TProofProgressDialog. Added a speedometer widget (TGSpeedo) to display the processing rate; Added a check button to enable/disable smooth update of the speedometer (enabled by default). This could be useful in the case of slow displays (e.g. when using it via ssh); Several layout improvements. TRecorder. Improvements and consolidation of the cross-platform interoperability, allowing to record and replay sessions between different platforms with less side effects. NB: Using different OS/WM (Window Managers) and using different ROOT GUI settings (via e.g. system.rootrc) between recording and replaying may still produce a wrong behavior of the recorder.; New tutorial guitest_playback.C replaying a recorded session showing and validating the GUI (using guitest.C). GUI Builder; New features, new user interface; Several important features have been added to the builder, and its user interface has been redesigned.; Editing modes are now clearly distinguished with enabled and disabled layout mode. Possibility to enable automatic layout fasten the interface development, as the positioning doesn't have to be done manually anymore; Major changes in the user interface:. Added a list tree displaying the complete structure of the GUI; The name of every element of the GUI is now editable; New, more intuitive interface for padding and layout hints; Color settings option was added to the widget editor; Extended commands in the top menu (open project, save project...); Added important warning dialogs, such as ""Save project"" dialog when closing the window; Added several tool tips. ",MatchSource.DOCS,gui/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/gui/doc/v526/index.html:1925,Usability,clear,clearly,1925,"o (and update) the list of files in the file browser (left panel) when opening a ROOT file from the ""Open File"" menu. TGListView. Keyboard navigation is now fully working in the list view. TGMainFrame. Allow to save a snapshot of the GUI in a picture file. The supported formats are gif, jpg, png, tiff, and xpm. TGFileDialog. Allow to change directory by typing its name in the text entry field of the dialog. TProofProgressDialog. Added a speedometer widget (TGSpeedo) to display the processing rate; Added a check button to enable/disable smooth update of the speedometer (enabled by default). This could be useful in the case of slow displays (e.g. when using it via ssh); Several layout improvements. TRecorder. Improvements and consolidation of the cross-platform interoperability, allowing to record and replay sessions between different platforms with less side effects. NB: Using different OS/WM (Window Managers) and using different ROOT GUI settings (via e.g. system.rootrc) between recording and replaying may still produce a wrong behavior of the recorder.; New tutorial guitest_playback.C replaying a recorded session showing and validating the GUI (using guitest.C). GUI Builder; New features, new user interface; Several important features have been added to the builder, and its user interface has been redesigned.; Editing modes are now clearly distinguished with enabled and disabled layout mode. Possibility to enable automatic layout fasten the interface development, as the positioning doesn't have to be done manually anymore; Major changes in the user interface:. Added a list tree displaying the complete structure of the GUI; The name of every element of the GUI is now editable; New, more intuitive interface for padding and layout hints; Color settings option was added to the widget editor; Extended commands in the top menu (open project, save project...); Added important warning dialogs, such as ""Save project"" dialog when closing the window; Added several tool tips. ",MatchSource.DOCS,gui/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/gui/doc/v526/index.html:2286,Usability,intuit,intuitive,2286,"o (and update) the list of files in the file browser (left panel) when opening a ROOT file from the ""Open File"" menu. TGListView. Keyboard navigation is now fully working in the list view. TGMainFrame. Allow to save a snapshot of the GUI in a picture file. The supported formats are gif, jpg, png, tiff, and xpm. TGFileDialog. Allow to change directory by typing its name in the text entry field of the dialog. TProofProgressDialog. Added a speedometer widget (TGSpeedo) to display the processing rate; Added a check button to enable/disable smooth update of the speedometer (enabled by default). This could be useful in the case of slow displays (e.g. when using it via ssh); Several layout improvements. TRecorder. Improvements and consolidation of the cross-platform interoperability, allowing to record and replay sessions between different platforms with less side effects. NB: Using different OS/WM (Window Managers) and using different ROOT GUI settings (via e.g. system.rootrc) between recording and replaying may still produce a wrong behavior of the recorder.; New tutorial guitest_playback.C replaying a recorded session showing and validating the GUI (using guitest.C). GUI Builder; New features, new user interface; Several important features have been added to the builder, and its user interface has been redesigned.; Editing modes are now clearly distinguished with enabled and disabled layout mode. Possibility to enable automatic layout fasten the interface development, as the positioning doesn't have to be done manually anymore; Major changes in the user interface:. Added a list tree displaying the complete structure of the GUI; The name of every element of the GUI is now editable; New, more intuitive interface for padding and layout hints; Color settings option was added to the widget editor; Extended commands in the top menu (open project, save project...); Added important warning dialogs, such as ""Save project"" dialog when closing the window; Added several tool tips. ",MatchSource.DOCS,gui/doc/v526/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/doc/v526/index.html
https://github.com/root-project/root/tree/v6-32-06/gui/doc/v528/index.html:1294,Modifiability,plug-in,plug-in,1294,"ndle keyboard navigation/selection.; For example:; TGLBContainer *lbc = (TGLBContainer *)fListBox->GetContainer();; lbc->Connect(""CurrentChanged(TGFrame*)"", ""MyGuiClass"", this, ""CurrentChanged(TGFrame*)"");. void MyGuiClass::CurrentChanged(TGFrame *f); {; TGTextLBEntry *lbe = (TGTextLBEntry *)f;; printf(""\nMyGuiClass::CurrentChanged() : Id = %d, Text = %s\n"", lbe->EntryId(), lbe->GetTitle());; }. TGSlider. Added SetEnabled(Bool_t) and SetState(Bool_t), allowing to disable or enable the TGSlider widgets (will be greyed if disabled). TGToolTip. Use a better way of positionning tooltips when they go out of screen; Avoid to overlap the mouse pointer when repositioning it (flickering effect!). TRootBrowser. Implemented the alphabetical sorting mechanism in the file browser.; The sorting is applied only in the current directory and the browser remembers every sorted directory.; For this purpose, a new picture button has been added to the file browser plug-in (the status of this button reflects the sorting status of each directory); Another button has been added to the file browser plug-in, used for refreshing the current directory in the list tree.; Refreshing now checks also if files still exist in the current directory; (for the case where files have been deleted by the user or by another application); Allow to change graphic properties of an object (e.g. a histogram) in a Root file via the context menu from the browser (by opening a ged editor); Size of directories, trees, and objects associated to keys inside Root files, or any kind of browsable object can be displayed in their associated tooltip, as soon as their GetObjectInfo() method returns their size as a long long int formatted in a const char * (""%lld""). TRootContextMenu. Close the context menu if the selected object is being deleted in the RecursiveRemove() operation. TRootCanvas/TRootEmbeddedCanvas. Drag and drop improvements for images (don't add margins between the canvas/pad border and the picture itself). ",MatchSource.DOCS,gui/doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/gui/doc/v528/index.html:1427,Modifiability,plug-in,plug-in,1427,"ndle keyboard navigation/selection.; For example:; TGLBContainer *lbc = (TGLBContainer *)fListBox->GetContainer();; lbc->Connect(""CurrentChanged(TGFrame*)"", ""MyGuiClass"", this, ""CurrentChanged(TGFrame*)"");. void MyGuiClass::CurrentChanged(TGFrame *f); {; TGTextLBEntry *lbe = (TGTextLBEntry *)f;; printf(""\nMyGuiClass::CurrentChanged() : Id = %d, Text = %s\n"", lbe->EntryId(), lbe->GetTitle());; }. TGSlider. Added SetEnabled(Bool_t) and SetState(Bool_t), allowing to disable or enable the TGSlider widgets (will be greyed if disabled). TGToolTip. Use a better way of positionning tooltips when they go out of screen; Avoid to overlap the mouse pointer when repositioning it (flickering effect!). TRootBrowser. Implemented the alphabetical sorting mechanism in the file browser.; The sorting is applied only in the current directory and the browser remembers every sorted directory.; For this purpose, a new picture button has been added to the file browser plug-in (the status of this button reflects the sorting status of each directory); Another button has been added to the file browser plug-in, used for refreshing the current directory in the list tree.; Refreshing now checks also if files still exist in the current directory; (for the case where files have been deleted by the user or by another application); Allow to change graphic properties of an object (e.g. a histogram) in a Root file via the context menu from the browser (by opening a ged editor); Size of directories, trees, and objects associated to keys inside Root files, or any kind of browsable object can be displayed in their associated tooltip, as soon as their GetObjectInfo() method returns their size as a long long int formatted in a const char * (""%lld""). TRootContextMenu. Close the context menu if the selected object is being deleted in the RecursiveRemove() operation. TRootCanvas/TRootEmbeddedCanvas. Drag and drop improvements for images (don't add margins between the canvas/pad border and the picture itself). ",MatchSource.DOCS,gui/doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/gui/doc/v528/index.html:954,Safety,Avoid,Avoid,954,". GUI; TGFileDialog. Properly change directory when navigating in the directory tree.; Make the File Dialog resizable. TGFSContainer. Create specific icons for symlinks (add a small arrow on the bottom left corner of the original icon). TGListBox. Enabled CurrentChanged(TGFrame*) and CurrentChanged(Int_t,Int_t) signals, allowing to handle keyboard navigation/selection.; For example:; TGLBContainer *lbc = (TGLBContainer *)fListBox->GetContainer();; lbc->Connect(""CurrentChanged(TGFrame*)"", ""MyGuiClass"", this, ""CurrentChanged(TGFrame*)"");. void MyGuiClass::CurrentChanged(TGFrame *f); {; TGTextLBEntry *lbe = (TGTextLBEntry *)f;; printf(""\nMyGuiClass::CurrentChanged() : Id = %d, Text = %s\n"", lbe->EntryId(), lbe->GetTitle());; }. TGSlider. Added SetEnabled(Bool_t) and SetState(Bool_t), allowing to disable or enable the TGSlider widgets (will be greyed if disabled). TGToolTip. Use a better way of positionning tooltips when they go out of screen; Avoid to overlap the mouse pointer when repositioning it (flickering effect!). TRootBrowser. Implemented the alphabetical sorting mechanism in the file browser.; The sorting is applied only in the current directory and the browser remembers every sorted directory.; For this purpose, a new picture button has been added to the file browser plug-in (the status of this button reflects the sorting status of each directory); Another button has been added to the file browser plug-in, used for refreshing the current directory in the list tree.; Refreshing now checks also if files still exist in the current directory; (for the case where files have been deleted by the user or by another application); Allow to change graphic properties of an object (e.g. a histogram) in a Root file via the context menu from the browser (by opening a ged editor); Size of directories, trees, and objects associated to keys inside Root files, or any kind of browsable object can be displayed in their associated tooltip, as soon as their GetObjectInfo() method ret",MatchSource.DOCS,gui/doc/v528/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/doc/v528/index.html
https://github.com/root-project/root/tree/v6-32-06/gui/doc/v530/index.html:3342,Modifiability,plugin,plugin,3342,"ecify any custom filter (e.g. *.png) in the filter combo box; Enable the new (flat) button style. This can be enabled/disabled via the GUI.Style entry in $ROOTSYS/etc/system.rootrc (or in a user defined $HOME/.rootrc); Create special icons for symlinks (shortcuts) in the browser (add a small arrow on bottom left corner of the original icon). TGFileDialog. Implemented the wish #78935: Longer ""File of type:"" selector is wanted (make more combo box entries visible); Enable the new (flat) button style. This can be enabled/disabled via the GUI.Style entry in $ROOTSYS/etc/system.rootrc (or in a user defined $HOME/.rootrc). TGFSContainer. The shortcuts are now working on Windows. TGColorDialog, TGFontDialog, TGTextEditDialogs. Several improvements in the layout when increasing the font size. TGTextEditor. Added a ""Close"" menu entry; Properly ask the user to save the currently opened file (if modified) when trying to open a new file; Moved the IsSaved() part of the code in the LoadFile() method, to make sure it works also when the text editor is used as a plugin in the browser; Change the text highlighing color; Cleanup the text when quitting root (avoid potential crash on Linux). TGFrame. Allow to override CTRL+S behavior by using the TGMainFrame::BindKey() function. TVirtualDragManager. Renamed TVirtualDragManager::GetDragType() to TVirtualDragManager::GetEDragType(), to avoid potential clash between two classes (TGFrame and TVirtualDragManager) having both GetDragType method with different return types. And they are both inherited by one class (TGuiBldDragManager) which doesn't define GetDragType. TGSlider. Added mouse wheel handling. TGToolTip. Properly set the text color of the tooltip label, using the value of Gui.TooltipForegroundColor in $ROOTSYS/etc/system.rootrc (or in a user defined $HOME/.rootrc). GUIHtml; TGHtmlBrowser. Only add non-empty strings (urls) in the combo box, to avoid empty entries; Enable the new (flat) button style. This can be enabled/disabled vi",MatchSource.DOCS,gui/doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/gui/doc/v530/index.html:3820,Modifiability,inherit,inherited,3820," style. This can be enabled/disabled via the GUI.Style entry in $ROOTSYS/etc/system.rootrc (or in a user defined $HOME/.rootrc); Create special icons for symlinks (shortcuts) in the browser (add a small arrow on bottom left corner of the original icon). TGFileDialog. Implemented the wish #78935: Longer ""File of type:"" selector is wanted (make more combo box entries visible); Enable the new (flat) button style. This can be enabled/disabled via the GUI.Style entry in $ROOTSYS/etc/system.rootrc (or in a user defined $HOME/.rootrc). TGFSContainer. The shortcuts are now working on Windows. TGColorDialog, TGFontDialog, TGTextEditDialogs. Several improvements in the layout when increasing the font size. TGTextEditor. Added a ""Close"" menu entry; Properly ask the user to save the currently opened file (if modified) when trying to open a new file; Moved the IsSaved() part of the code in the LoadFile() method, to make sure it works also when the text editor is used as a plugin in the browser; Change the text highlighing color; Cleanup the text when quitting root (avoid potential crash on Linux). TGFrame. Allow to override CTRL+S behavior by using the TGMainFrame::BindKey() function. TVirtualDragManager. Renamed TVirtualDragManager::GetDragType() to TVirtualDragManager::GetEDragType(), to avoid potential clash between two classes (TGFrame and TVirtualDragManager) having both GetDragType method with different return types. And they are both inherited by one class (TGuiBldDragManager) which doesn't define GetDragType. TGSlider. Added mouse wheel handling. TGToolTip. Properly set the text color of the tooltip label, using the value of Gui.TooltipForegroundColor in $ROOTSYS/etc/system.rootrc (or in a user defined $HOME/.rootrc). GUIHtml; TGHtmlBrowser. Only add non-empty strings (urls) in the combo box, to avoid empty entries; Enable the new (flat) button style. This can be enabled/disabled via the GUI.Style entry in $ROOTSYS/etc/system.rootrc (or in a user defined $HOME/.rootrc). ",MatchSource.DOCS,gui/doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/gui/doc/v530/index.html:3262,Performance,Load,LoadFile,3262,"ecify any custom filter (e.g. *.png) in the filter combo box; Enable the new (flat) button style. This can be enabled/disabled via the GUI.Style entry in $ROOTSYS/etc/system.rootrc (or in a user defined $HOME/.rootrc); Create special icons for symlinks (shortcuts) in the browser (add a small arrow on bottom left corner of the original icon). TGFileDialog. Implemented the wish #78935: Longer ""File of type:"" selector is wanted (make more combo box entries visible); Enable the new (flat) button style. This can be enabled/disabled via the GUI.Style entry in $ROOTSYS/etc/system.rootrc (or in a user defined $HOME/.rootrc). TGFSContainer. The shortcuts are now working on Windows. TGColorDialog, TGFontDialog, TGTextEditDialogs. Several improvements in the layout when increasing the font size. TGTextEditor. Added a ""Close"" menu entry; Properly ask the user to save the currently opened file (if modified) when trying to open a new file; Moved the IsSaved() part of the code in the LoadFile() method, to make sure it works also when the text editor is used as a plugin in the browser; Change the text highlighing color; Cleanup the text when quitting root (avoid potential crash on Linux). TGFrame. Allow to override CTRL+S behavior by using the TGMainFrame::BindKey() function. TVirtualDragManager. Renamed TVirtualDragManager::GetDragType() to TVirtualDragManager::GetEDragType(), to avoid potential clash between two classes (TGFrame and TVirtualDragManager) having both GetDragType method with different return types. And they are both inherited by one class (TGuiBldDragManager) which doesn't define GetDragType. TGSlider. Added mouse wheel handling. TGToolTip. Properly set the text color of the tooltip label, using the value of Gui.TooltipForegroundColor in $ROOTSYS/etc/system.rootrc (or in a user defined $HOME/.rootrc). GUIHtml; TGHtmlBrowser. Only add non-empty strings (urls) in the combo box, to avoid empty entries; Enable the new (flat) button style. This can be enabled/disabled vi",MatchSource.DOCS,gui/doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/gui/doc/v530/index.html:3437,Safety,avoid,avoid,3437,"ecify any custom filter (e.g. *.png) in the filter combo box; Enable the new (flat) button style. This can be enabled/disabled via the GUI.Style entry in $ROOTSYS/etc/system.rootrc (or in a user defined $HOME/.rootrc); Create special icons for symlinks (shortcuts) in the browser (add a small arrow on bottom left corner of the original icon). TGFileDialog. Implemented the wish #78935: Longer ""File of type:"" selector is wanted (make more combo box entries visible); Enable the new (flat) button style. This can be enabled/disabled via the GUI.Style entry in $ROOTSYS/etc/system.rootrc (or in a user defined $HOME/.rootrc). TGFSContainer. The shortcuts are now working on Windows. TGColorDialog, TGFontDialog, TGTextEditDialogs. Several improvements in the layout when increasing the font size. TGTextEditor. Added a ""Close"" menu entry; Properly ask the user to save the currently opened file (if modified) when trying to open a new file; Moved the IsSaved() part of the code in the LoadFile() method, to make sure it works also when the text editor is used as a plugin in the browser; Change the text highlighing color; Cleanup the text when quitting root (avoid potential crash on Linux). TGFrame. Allow to override CTRL+S behavior by using the TGMainFrame::BindKey() function. TVirtualDragManager. Renamed TVirtualDragManager::GetDragType() to TVirtualDragManager::GetEDragType(), to avoid potential clash between two classes (TGFrame and TVirtualDragManager) having both GetDragType method with different return types. And they are both inherited by one class (TGuiBldDragManager) which doesn't define GetDragType. TGSlider. Added mouse wheel handling. TGToolTip. Properly set the text color of the tooltip label, using the value of Gui.TooltipForegroundColor in $ROOTSYS/etc/system.rootrc (or in a user defined $HOME/.rootrc). GUIHtml; TGHtmlBrowser. Only add non-empty strings (urls) in the combo box, to avoid empty entries; Enable the new (flat) button style. This can be enabled/disabled vi",MatchSource.DOCS,gui/doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/gui/doc/v530/index.html:3666,Safety,avoid,avoid,3666," style. This can be enabled/disabled via the GUI.Style entry in $ROOTSYS/etc/system.rootrc (or in a user defined $HOME/.rootrc); Create special icons for symlinks (shortcuts) in the browser (add a small arrow on bottom left corner of the original icon). TGFileDialog. Implemented the wish #78935: Longer ""File of type:"" selector is wanted (make more combo box entries visible); Enable the new (flat) button style. This can be enabled/disabled via the GUI.Style entry in $ROOTSYS/etc/system.rootrc (or in a user defined $HOME/.rootrc). TGFSContainer. The shortcuts are now working on Windows. TGColorDialog, TGFontDialog, TGTextEditDialogs. Several improvements in the layout when increasing the font size. TGTextEditor. Added a ""Close"" menu entry; Properly ask the user to save the currently opened file (if modified) when trying to open a new file; Moved the IsSaved() part of the code in the LoadFile() method, to make sure it works also when the text editor is used as a plugin in the browser; Change the text highlighing color; Cleanup the text when quitting root (avoid potential crash on Linux). TGFrame. Allow to override CTRL+S behavior by using the TGMainFrame::BindKey() function. TVirtualDragManager. Renamed TVirtualDragManager::GetDragType() to TVirtualDragManager::GetEDragType(), to avoid potential clash between two classes (TGFrame and TVirtualDragManager) having both GetDragType method with different return types. And they are both inherited by one class (TGuiBldDragManager) which doesn't define GetDragType. TGSlider. Added mouse wheel handling. TGToolTip. Properly set the text color of the tooltip label, using the value of Gui.TooltipForegroundColor in $ROOTSYS/etc/system.rootrc (or in a user defined $HOME/.rootrc). GUIHtml; TGHtmlBrowser. Only add non-empty strings (urls) in the combo box, to avoid empty entries; Enable the new (flat) button style. This can be enabled/disabled via the GUI.Style entry in $ROOTSYS/etc/system.rootrc (or in a user defined $HOME/.rootrc). ",MatchSource.DOCS,gui/doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/gui/doc/v530/index.html:4190,Safety,avoid,avoid,4190," style. This can be enabled/disabled via the GUI.Style entry in $ROOTSYS/etc/system.rootrc (or in a user defined $HOME/.rootrc); Create special icons for symlinks (shortcuts) in the browser (add a small arrow on bottom left corner of the original icon). TGFileDialog. Implemented the wish #78935: Longer ""File of type:"" selector is wanted (make more combo box entries visible); Enable the new (flat) button style. This can be enabled/disabled via the GUI.Style entry in $ROOTSYS/etc/system.rootrc (or in a user defined $HOME/.rootrc). TGFSContainer. The shortcuts are now working on Windows. TGColorDialog, TGFontDialog, TGTextEditDialogs. Several improvements in the layout when increasing the font size. TGTextEditor. Added a ""Close"" menu entry; Properly ask the user to save the currently opened file (if modified) when trying to open a new file; Moved the IsSaved() part of the code in the LoadFile() method, to make sure it works also when the text editor is used as a plugin in the browser; Change the text highlighing color; Cleanup the text when quitting root (avoid potential crash on Linux). TGFrame. Allow to override CTRL+S behavior by using the TGMainFrame::BindKey() function. TVirtualDragManager. Renamed TVirtualDragManager::GetDragType() to TVirtualDragManager::GetEDragType(), to avoid potential clash between two classes (TGFrame and TVirtualDragManager) having both GetDragType method with different return types. And they are both inherited by one class (TGuiBldDragManager) which doesn't define GetDragType. TGSlider. Added mouse wheel handling. TGToolTip. Properly set the text color of the tooltip label, using the value of Gui.TooltipForegroundColor in $ROOTSYS/etc/system.rootrc (or in a user defined $HOME/.rootrc). GUIHtml; TGHtmlBrowser. Only add non-empty strings (urls) in the combo box, to avoid empty entries; Enable the new (flat) button style. This can be enabled/disabled via the GUI.Style entry in $ROOTSYS/etc/system.rootrc (or in a user defined $HOME/.rootrc). ",MatchSource.DOCS,gui/doc/v530/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/doc/v530/index.html
https://github.com/root-project/root/tree/v6-32-06/gui/doc/v532/index.html:1491,Availability,avail,available,1491,". GUI Libraries; TRootBrowser. Following a user request on savannah,; a filtering mechanism in the browser has been implemented. To filter the content of a file; (or a folder inside a file), simply click on the ""Filter"" button. A dialog will popup, asking; for a filtering expression string (regexp like). The filter will then be applied on the current; list tree item (folder) and will stay active until a wildcard (""*"") expression or an empty; string ("""") is entered as new filtering value. The filter button automatically reflects the; status of any selected list tree item, and if a filter is active on it, the button state is; ""engaged"" and its tooltip shows what is actually displayed in this file/folder. It is possible; to filter several files/folders, each one having its own filtering argument. TGNumberEntry. Fix a possible overflow when entering a float having its fraction part exceeding kMaxInt (e.g 9.9999999999). This fix the bug #84033, TGNumberEntryField. TTreeViewer. Make the ""Histogram"" text entry expanding in X direction (i.e. resize it when resizing the tree viewer). TGInputDialog. Implemented a hack to detect if user press cancel or if an empty string ("""") has been selected.; When the Cancel button is pressed, the first two characters are reset to 0, and if the user select; an empty string ("""") the first character is reset to 0 and the second one is set to 1. TGPrintDialog. The ""Printer"" text entry has been replaced by a combo box populated with the list of available printers on the system, and select the default one, if any. ",MatchSource.DOCS,gui/doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/gui/doc/v532/index.html:1129,Safety,detect,detect,1129,". GUI Libraries; TRootBrowser. Following a user request on savannah,; a filtering mechanism in the browser has been implemented. To filter the content of a file; (or a folder inside a file), simply click on the ""Filter"" button. A dialog will popup, asking; for a filtering expression string (regexp like). The filter will then be applied on the current; list tree item (folder) and will stay active until a wildcard (""*"") expression or an empty; string ("""") is entered as new filtering value. The filter button automatically reflects the; status of any selected list tree item, and if a filter is active on it, the button state is; ""engaged"" and its tooltip shows what is actually displayed in this file/folder. It is possible; to filter several files/folders, each one having its own filtering argument. TGNumberEntry. Fix a possible overflow when entering a float having its fraction part exceeding kMaxInt (e.g 9.9999999999). This fix the bug #84033, TGNumberEntryField. TTreeViewer. Make the ""Histogram"" text entry expanding in X direction (i.e. resize it when resizing the tree viewer). TGInputDialog. Implemented a hack to detect if user press cancel or if an empty string ("""") has been selected.; When the Cancel button is pressed, the first two characters are reset to 0, and if the user select; an empty string ("""") the first character is reset to 0 and the second one is set to 1. TGPrintDialog. The ""Printer"" text entry has been replaced by a combo box populated with the list of available printers on the system, and select the default one, if any. ",MatchSource.DOCS,gui/doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/gui/doc/v532/index.html:191,Usability,simpl,simply,191,". GUI Libraries; TRootBrowser. Following a user request on savannah,; a filtering mechanism in the browser has been implemented. To filter the content of a file; (or a folder inside a file), simply click on the ""Filter"" button. A dialog will popup, asking; for a filtering expression string (regexp like). The filter will then be applied on the current; list tree item (folder) and will stay active until a wildcard (""*"") expression or an empty; string ("""") is entered as new filtering value. The filter button automatically reflects the; status of any selected list tree item, and if a filter is active on it, the button state is; ""engaged"" and its tooltip shows what is actually displayed in this file/folder. It is possible; to filter several files/folders, each one having its own filtering argument. TGNumberEntry. Fix a possible overflow when entering a float having its fraction part exceeding kMaxInt (e.g 9.9999999999). This fix the bug #84033, TGNumberEntryField. TTreeViewer. Make the ""Histogram"" text entry expanding in X direction (i.e. resize it when resizing the tree viewer). TGInputDialog. Implemented a hack to detect if user press cancel or if an empty string ("""") has been selected.; When the Cancel button is pressed, the first two characters are reset to 0, and if the user select; an empty string ("""") the first character is reset to 0 and the second one is set to 1. TGPrintDialog. The ""Printer"" text entry has been replaced by a combo box populated with the list of available printers on the system, and select the default one, if any. ",MatchSource.DOCS,gui/doc/v532/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/doc/v532/index.html
https://github.com/root-project/root/tree/v6-32-06/gui/doc/v534/index.html:2153,Integrability,message,message,2153,"fButton->SetStyle(""modern"");. TRootBrowser. Use the ProcessedConfigure signal to be notified when an embedded frame change its layout, to properly call Layout() on its parent frame, to automatically display the change (for example, showing the EventStatusBar of a TCanvas embedded in a TBrowser was only appearing after manually resizing the window). TGFileBrowser. Fixed memory leak when browsing TList inside a file: don't read the list content each time one click on the list; A protection for empty directories (e.g. not containing any key) as been added. Solves the bug #94028, TBrowser crash trying to browse sub-root-directories in memory. TGFSComboBox. Fix a problem when the current directory is similar to $ROOTSYS, for example with $ROOTSYS being /home/user/root and $PWD being /home/user/rootdev, only ""dev"" was displayed, stripping off $ROOTSYS; Properly handle backslashes as directory separators on Windows. TGFileDialog. Change the file name only if the selected entry is not a directory (as reported on the forum). TGMsgBox. Implemented ""Enter"" and ""Escape"" key handling in TGMsgBox (used as Ok and Cancel buttons, if they are there). TGTextEntry. Several issues with text selection and combination of cursor position and text alignment in text entries have been solved. TRootCanvas. A check has been added for the case where the canvas is embedded (e.g. in the browser), then the layout of the main frame has to be re-applied when showing/hiding the editor; Stay in the current (working) directory when using ""File -> Save as..."" from a canvas or from a text editor (as the file dialog changes the current directory). TFitParametersDialog. Implemented keyboard navigation (tab and shift+tab) between the different number entry fields of the dialog. TFitEditor. Layout improvements and removed useless text in message box. TTreeViewer. Fixed a problem with array names (e.g. fVertex[]) as reported on the forum). TGWin32. Fixed several resource leaks (including GDI & USER objects). ",MatchSource.DOCS,gui/doc/v534/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/doc/v534/index.html
https://github.com/root-project/root/tree/v6-32-06/hist/doc/v520/index.html:908,Availability,error,errors,908,". Histogram package. The libHist library now depends on libMathCore which must be linked whenever one needs to use the histogram library. TF1. The code used for implementing numerical methods like TF1::Integration or TF1::Derivation or TF1::GetX has now been now moved in MathCore and used to implement corresponding classes like GaussIntegrator or BrentRootFinder. The implementation remains however the same.; A new method TF1::operator()(double x, double y=0, double z) which is equivalent to TF1::Eval has been added for using TF1 as a callable object.; New templated methods TF1::SetFunction for generic C++ callable objects or for class member functions. TH1. Fixed a bug in the TH1::KolmogorovTest function in the case of scaled or weighted histograms. The routine has been improved and; now could also be used for comparing an histogram with a function if it is represented as an histogram with zero errors (equivalent to the case of options ""F1"" or ""F2"" in the original HDIFF routine of HBOOK). The bug has been fixed also for the TH2 and TH3 corresponding method. In addition in the case of TH3 use now all 6 axis combinations for estimating the maximum deviation. This is consistent with what is done in the 2D case.; Improved the TH1::Chi2Test for the treatment of empty bins in the histograms. If both histograms have one empty bin, the number of degree of freedom is decreased by one but the test is performed without reporting an error. If only one histogram is having an empty bin it is considered in the comparison. Fixed a bug in preserving the global statistic information after scaling, adding or rebinning the histogram. TH2. Improve TH2::FitFitSliceX and TH2::FitFitSliceY by adding the possibility to return the generated histograms in a TObjArray when the passed pointer is not null. Support also variable bin size histograms. Improve histogram projections. The implementation of TH2::ProjectionX and TH2::ProjectionY has been combined in a single private method. TH3. Fixed a ",MatchSource.DOCS,hist/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/hist/doc/v520/index.html:1445,Availability,error,error,1445,"tation remains however the same.; A new method TF1::operator()(double x, double y=0, double z) which is equivalent to TF1::Eval has been added for using TF1 as a callable object.; New templated methods TF1::SetFunction for generic C++ callable objects or for class member functions. TH1. Fixed a bug in the TH1::KolmogorovTest function in the case of scaled or weighted histograms. The routine has been improved and; now could also be used for comparing an histogram with a function if it is represented as an histogram with zero errors (equivalent to the case of options ""F1"" or ""F2"" in the original HDIFF routine of HBOOK). The bug has been fixed also for the TH2 and TH3 corresponding method. In addition in the case of TH3 use now all 6 axis combinations for estimating the maximum deviation. This is consistent with what is done in the 2D case.; Improved the TH1::Chi2Test for the treatment of empty bins in the histograms. If both histograms have one empty bin, the number of degree of freedom is decreased by one but the test is performed without reporting an error. If only one histogram is having an empty bin it is considered in the comparison. Fixed a bug in preserving the global statistic information after scaling, adding or rebinning the histogram. TH2. Improve TH2::FitFitSliceX and TH2::FitFitSliceY by adding the possibility to return the generated histograms in a TObjArray when the passed pointer is not null. Support also variable bin size histograms. Improve histogram projections. The implementation of TH2::ProjectionX and TH2::ProjectionY has been combined in a single private method. TH3. Fixed a couple of bugs in TH3::Project3DProfile. TProfile and TProfile2D. Add a new option ""W"" in TProfile::ProjectionX and TProfile::ProjectionXY to be able to return the equivalent weighted filled histogram. Its bin content is equal to the profile bin content multiplied by the bin entries. Implement in the TProfile a new option, ""G"" for the bin error. This option can be used, bin b",MatchSource.DOCS,hist/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/hist/doc/v520/index.html:2342,Availability,error,error,2342,"ptions ""F1"" or ""F2"" in the original HDIFF routine of HBOOK). The bug has been fixed also for the TH2 and TH3 corresponding method. In addition in the case of TH3 use now all 6 axis combinations for estimating the maximum deviation. This is consistent with what is done in the 2D case.; Improved the TH1::Chi2Test for the treatment of empty bins in the histograms. If both histograms have one empty bin, the number of degree of freedom is decreased by one but the test is performed without reporting an error. If only one histogram is having an empty bin it is considered in the comparison. Fixed a bug in preserving the global statistic information after scaling, adding or rebinning the histogram. TH2. Improve TH2::FitFitSliceX and TH2::FitFitSliceY by adding the possibility to return the generated histograms in a TObjArray when the passed pointer is not null. Support also variable bin size histograms. Improve histogram projections. The implementation of TH2::ProjectionX and TH2::ProjectionY has been combined in a single private method. TH3. Fixed a couple of bugs in TH3::Project3DProfile. TProfile and TProfile2D. Add a new option ""W"" in TProfile::ProjectionX and TProfile::ProjectionXY to be able to return the equivalent weighted filled histogram. Its bin content is equal to the profile bin content multiplied by the bin entries. Implement in the TProfile a new option, ""G"" for the bin error. This option can be used, bin by bin, for the combination of measurements y with known gaussian error dy. In this case the profile must be filled; with a weight = 1./dy**2 and the resulting error from the combination (1./sqrt(Sum(1./dy**2) ) ) will be calculated by the profile. . THnSparse. Implement THnSparse::Projection and THnSparse::Merge. New Tutorials. tutorials/hist/sparsehist.C: an example how to use the new multi dim histogram class THnSparse.; tutorials/hist/drawsparse.C: an example how to visualize a sparse multi dim histogram.; use the new multi dim histogram class THnSparse. ",MatchSource.DOCS,hist/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/hist/doc/v520/index.html:2444,Availability,error,error,2444,"ptions ""F1"" or ""F2"" in the original HDIFF routine of HBOOK). The bug has been fixed also for the TH2 and TH3 corresponding method. In addition in the case of TH3 use now all 6 axis combinations for estimating the maximum deviation. This is consistent with what is done in the 2D case.; Improved the TH1::Chi2Test for the treatment of empty bins in the histograms. If both histograms have one empty bin, the number of degree of freedom is decreased by one but the test is performed without reporting an error. If only one histogram is having an empty bin it is considered in the comparison. Fixed a bug in preserving the global statistic information after scaling, adding or rebinning the histogram. TH2. Improve TH2::FitFitSliceX and TH2::FitFitSliceY by adding the possibility to return the generated histograms in a TObjArray when the passed pointer is not null. Support also variable bin size histograms. Improve histogram projections. The implementation of TH2::ProjectionX and TH2::ProjectionY has been combined in a single private method. TH3. Fixed a couple of bugs in TH3::Project3DProfile. TProfile and TProfile2D. Add a new option ""W"" in TProfile::ProjectionX and TProfile::ProjectionXY to be able to return the equivalent weighted filled histogram. Its bin content is equal to the profile bin content multiplied by the bin entries. Implement in the TProfile a new option, ""G"" for the bin error. This option can be used, bin by bin, for the combination of measurements y with known gaussian error dy. In this case the profile must be filled; with a weight = 1./dy**2 and the resulting error from the combination (1./sqrt(Sum(1./dy**2) ) ) will be calculated by the profile. . THnSparse. Implement THnSparse::Projection and THnSparse::Merge. New Tutorials. tutorials/hist/sparsehist.C: an example how to use the new multi dim histogram class THnSparse.; tutorials/hist/drawsparse.C: an example how to visualize a sparse multi dim histogram.; use the new multi dim histogram class THnSparse. ",MatchSource.DOCS,hist/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/hist/doc/v520/index.html:2538,Availability,error,error,2538,"ptions ""F1"" or ""F2"" in the original HDIFF routine of HBOOK). The bug has been fixed also for the TH2 and TH3 corresponding method. In addition in the case of TH3 use now all 6 axis combinations for estimating the maximum deviation. This is consistent with what is done in the 2D case.; Improved the TH1::Chi2Test for the treatment of empty bins in the histograms. If both histograms have one empty bin, the number of degree of freedom is decreased by one but the test is performed without reporting an error. If only one histogram is having an empty bin it is considered in the comparison. Fixed a bug in preserving the global statistic information after scaling, adding or rebinning the histogram. TH2. Improve TH2::FitFitSliceX and TH2::FitFitSliceY by adding the possibility to return the generated histograms in a TObjArray when the passed pointer is not null. Support also variable bin size histograms. Improve histogram projections. The implementation of TH2::ProjectionX and TH2::ProjectionY has been combined in a single private method. TH3. Fixed a couple of bugs in TH3::Project3DProfile. TProfile and TProfile2D. Add a new option ""W"" in TProfile::ProjectionX and TProfile::ProjectionXY to be able to return the equivalent weighted filled histogram. Its bin content is equal to the profile bin content multiplied by the bin entries. Implement in the TProfile a new option, ""G"" for the bin error. This option can be used, bin by bin, for the combination of measurements y with known gaussian error dy. In this case the profile must be filled; with a weight = 1./dy**2 and the resulting error from the combination (1./sqrt(Sum(1./dy**2) ) ) will be calculated by the profile. . THnSparse. Implement THnSparse::Projection and THnSparse::Merge. New Tutorials. tutorials/hist/sparsehist.C: an example how to use the new multi dim histogram class THnSparse.; tutorials/hist/drawsparse.C: an example how to visualize a sparse multi dim histogram.; use the new multi dim histogram class THnSparse. ",MatchSource.DOCS,hist/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/hist/doc/v520/index.html:202,Deployability,Integrat,Integration,202,". Histogram package. The libHist library now depends on libMathCore which must be linked whenever one needs to use the histogram library. TF1. The code used for implementing numerical methods like TF1::Integration or TF1::Derivation or TF1::GetX has now been now moved in MathCore and used to implement corresponding classes like GaussIntegrator or BrentRootFinder. The implementation remains however the same.; A new method TF1::operator()(double x, double y=0, double z) which is equivalent to TF1::Eval has been added for using TF1 as a callable object.; New templated methods TF1::SetFunction for generic C++ callable objects or for class member functions. TH1. Fixed a bug in the TH1::KolmogorovTest function in the case of scaled or weighted histograms. The routine has been improved and; now could also be used for comparing an histogram with a function if it is represented as an histogram with zero errors (equivalent to the case of options ""F1"" or ""F2"" in the original HDIFF routine of HBOOK). The bug has been fixed also for the TH2 and TH3 corresponding method. In addition in the case of TH3 use now all 6 axis combinations for estimating the maximum deviation. This is consistent with what is done in the 2D case.; Improved the TH1::Chi2Test for the treatment of empty bins in the histograms. If both histograms have one empty bin, the number of degree of freedom is decreased by one but the test is performed without reporting an error. If only one histogram is having an empty bin it is considered in the comparison. Fixed a bug in preserving the global statistic information after scaling, adding or rebinning the histogram. TH2. Improve TH2::FitFitSliceX and TH2::FitFitSliceY by adding the possibility to return the generated histograms in a TObjArray when the passed pointer is not null. Support also variable bin size histograms. Improve histogram projections. The implementation of TH2::ProjectionX and TH2::ProjectionY has been combined in a single private method. TH3. Fixed a ",MatchSource.DOCS,hist/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/doc/v520/index.html
https://github.com/root-project/root/tree/v6-32-06/hist/doc/v520/index.html:45,Integrability,depend,depends,45,". Histogram package. The libHist library now depends on libMathCore which must be linked whenever one needs to use the histogram library. TF1. The code used for implementing numerical methods like TF1::Integration or TF1::Derivation or TF1::GetX has now been now moved in MathCore and used to implement corresponding classes like GaussIntegrator or BrentRootFinder. The implementation remains however the same.; A new method TF1::operator()(double x, double y=0, double z) which is equivalent to TF1::Eval has been added for using TF1 as a callable object.; New templated methods TF1::SetFunction for generic C++ callable objects or for class member functions. TH1. Fixed a bug in the TH1::KolmogorovTest function in the case of scaled or weighted histograms. The routine has been improved and; now could also be used for comparing an histogram with a function if it is represented as an histogram with zero errors (equivalent to the case of options ""F1"" or ""F2"" in the original HDIFF routine of HBOOK). The bug has been fixed also for the TH2 and TH3 corresponding method. In addition in the case of TH3 use now all 6 axis combinations for estimating the maximum deviation. This is consistent with what is done in the 2D case.; Improved the TH1::Chi2Test for the treatment of empty bins in the histograms. If both histograms have one empty bin, the number of degree of freedom is decreased by one but the test is performed without reporting an error. If only one histogram is having an empty bin it is considered in the comparison. Fixed a bug in preserving the global statistic information after scaling, adding or rebinning the histogram. TH2. Improve TH2::FitFitSliceX and TH2::FitFitSliceY by adding the possibility to return the generated histograms in a TObjArray when the passed pointer is not null. Support also variable bin size histograms. Improve histogram projections. The implementation of TH2::ProjectionX and TH2::ProjectionY has been combined in a single private method. TH3. Fixed a ",MatchSource.DOCS,hist/doc/v520/index.html,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/doc/v520/index.html
