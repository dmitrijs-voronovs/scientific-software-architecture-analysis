id,quality_attribute,keyword,matched_word,match_idx,sentence,source,filename,author,repo,version,wiki,url
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html:287,Modifiability,Inherit,Inheritance,287,"﻿. SOFA API: sofa::gl::component::shader::OglInt4Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglInt4Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglInt4Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglInt4Variable, SOFA_TEMPLATE(OglVariable, SOFA_TEMPLATE2(type::Vec, 4, int)));  ;  OglInt4Variable ();  ; virtual ~OglInt4Variable ();  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::Vec< 4, int > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::Vec< 4, int > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  cle",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html:602,Modifiability,inherit,inherited,602,"﻿. SOFA API: sofa::gl::component::shader::OglInt4Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglInt4Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglInt4Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglInt4Variable, SOFA_TEMPLATE(OglVariable, SOFA_TEMPLATE2(type::Vec, 4, int)));  ;  OglInt4Variable ();  ; virtual ~OglInt4Variable ();  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::Vec< 4, int > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::Vec< 4, int > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  cle",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html:1063,Modifiability,variab,variables,1063,"component::shader::OglInt4Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglInt4Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglInt4Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglInt4Variable, SOFA_TEMPLATE(OglVariable, SOFA_TEMPLATE2(type::Vec, 4, int)));  ;  OglInt4Variable ();  ; virtual ~OglInt4Variable ();  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::Vec< 4, int > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::Vec< 4, int > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resou",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html:1292,Modifiability,variab,variable,1292,"shader::OglInt4Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglInt4Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglInt4Variable, SOFA_TEMPLATE(OglVariable, SOFA_TEMPLATE2(type::Vec, 4, int)));  ;  OglInt4Variable ();  ; virtual ~OglInt4Variable ();  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::Vec< 4, int > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::Vec< 4, int > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html:1479,Modifiability,inherit,inherited,1479,"riable ();  ; virtual ~OglInt4Variable ();  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::Vec< 4, int > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::Vec< 4, int > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html:3387,Modifiability,inherit,inherited,3387,"id drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; Base",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html:5087,Modifiability,variab,variables,5087,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html:5129,Modifiability,variab,variables,5129,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html:5374,Modifiability,inherit,inherited,5374,"  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html:11500,Modifiability,inherit,inherited,11500,"Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::Vec< 4, int > >; Data< type::Vec< 4, int > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html:11812,Modifiability,inherit,inherited,11812,"Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::Vec< 4, int > >; Data< type::Vec< 4, int > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html:12011,Modifiability,Inherit,Inherited,12011,"bject. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::Vec< 4, int > >; Data< type::Vec< 4, int > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html:12049,Modifiability,inherit,inherited,12049,"bject. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::Vec< 4, int > >; Data< type::Vec< 4, int > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html:12186,Modifiability,inherit,inherited,12186,"bject. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::Vec< 4, int > >; Data< type::Vec< 4, int > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html:12316,Modifiability,inherit,inherited,12316," template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::Vec< 4, int > >; Data< type::Vec< 4, int > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseOb",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html:12482,Modifiability,inherit,inherited,12482,"glShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::Vec< 4, int > >; Data< type::Vec< 4, int > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherit",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html:13304,Modifiability,inherit,inherited,13304,"nts, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html:13558,Modifiability,inherit,inherited,13558,"nts, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html:13987,Modifiability,inherit,inherited,13987,"g (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::Vec< 4, int > >; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html:14339,Modifiability,inherit,inherited,14339,"> l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::Vec< 4, int > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal updat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html:14739,Modifiability,inherit,inherited,14739,"tring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::Vec< 4, int > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initDa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html:14964,Modifiability,inherit,inherited,14964,"tring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::Vec< 4, int > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initDa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html:15122,Modifiability,inherit,inherited,15122,"tring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::Vec< 4, int > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initDa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html:15248,Modifiability,inherit,inherited,15248,"tring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::Vec< 4, int > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initDa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html:15971,Modifiability,inherit,inherited,15971,"ide;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  . Constructor details. ◆ OglInt4Variable(). sofa::gl::component::shader::OglInt4Variable::OglInt4Variable ; (; ). ◆ ~OglInt4Variable(). virtual sofa::gl::component::shader::OglInt4Variable::~OglInt4Variable ; (; ). inlinevirtual . Function details. ◆ pushValue(). void sofa::gl::com",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html:16681,Modifiability,inherit,inherited,16681,"; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  . Constructor details. ◆ OglInt4Variable(). sofa::gl::component::shader::OglInt4Variable::OglInt4Variable ; (; ). ◆ ~OglInt4Variable(). virtual sofa::gl::component::shader::OglInt4Variable::~OglInt4Variable ; (; ). inlinevirtual . Function details. ◆ pushValue(). void sofa::gl::component::shader::OglInt4Variable::pushValue ; (; ). overridevirtual . Implements sofa::gl::component::shader::OglVariable< type::Vec< 4, int > >. ◆ SOFA_CLASS(). sofa::gl::component::shader::OglInt4Variable::SOFA_CLASS ; (; OglInt4Variable ; , . SOFA_TEMPLATE(OglVariable, SOFA_TEMPLATE2(type::Vec, 4, int)) ;  . ). sofaglcomponentshaderOglInt4Variable; Generated on Mon Nov 11 2024 03:19:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html:3887,Performance,load,loader,3887," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html:13071,Performance,Load,Loading,13071,"erited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::Vec< 4, int > >; Data< type::Vec< 4, int > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::com",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html:5908,Security,Access,Accessor,5908,"  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html:10853,Security,Access,Accessor,10853," initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html:10972,Security,Access,Accessor,10972,"ta (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int ge",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html:11083,Security,Access,Accessor,11083,"thod used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::Og",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html:11202,Security,Access,Accessor,11202,"Data initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::Vec< 4, int > >; Data< type::Vec< 4, int > > value;  ;  Public Attributes inherited from sofa::cor",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html:7392,Testability,log,logging,7392," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html:7465,Testability,log,logging,7465," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html:7507,Testability,log,logging,7507," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html:7577,Testability,log,logging,7577," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html:7688,Testability,log,logging,7688," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html:7730,Testability,log,logging,7730," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html:9554,Testability,log,logErrors,9554,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html:1981,Usability,clear,clearVisual,1981,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html:1998,Usability,clear,clear,1998,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html:7773,Usability,clear,clearLoggedMessages,7773," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html:14727,Deployability,update,updateInternal,14727,"::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntAttribute, SOFA_TEMPLATE3(OglAttribute, 1, GL_INT, int))sofa::gl::component::shader::OglIntAttribute; OglAttribute< 1, GL_INT, int >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE3(OglAttribute, size, type, int), core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >protected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglAttribute() overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >protected; ~OglIntAttribute()sofa::gl::component::shader::OglIntAttributeinlinevirtual; ~OglShade",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html:14780,Deployability,update,updateLinks,14780,":OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntAttribute, SOFA_TEMPLATE3(OglAttribute, 1, GL_INT, int))sofa::gl::component::shader::OglIntAttribute; OglAttribute< 1, GL_INT, int >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE3(OglAttribute, size, type, int), core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >protected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglAttribute() overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >protected; ~OglIntAttribute()sofa::gl::component::shader::OglIntAttributeinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::Ogl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html:14850,Deployability,update,updateVisual,14850,"Description *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntAttribute, SOFA_TEMPLATE3(OglAttribute, 1, GL_INT, int))sofa::gl::component::shader::OglIntAttribute; OglAttribute< 1, GL_INT, int >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE3(OglAttribute, size, type, int), core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >protected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglAttribute() overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >protected; ~OglIntAttribute()sofa::gl::component::shader::OglIntAttributeinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~ShaderElement() overridesofa::core::visual::Shade",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html:14917,Deployability,update,updateVisual,14917,"fa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntAttribute, SOFA_TEMPLATE3(OglAttribute, 1, GL_INT, int))sofa::gl::component::shader::OglIntAttribute; OglAttribute< 1, GL_INT, int >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE3(OglAttribute, size, type, int), core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >protected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglAttribute() overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >protected; ~OglIntAttribute()sofa::gl::component::shader::OglIntAttributeinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~ShaderElement() overridesofa::core::visual::ShaderElementinlineprotected; ~VisualModel() overridesofa::core::visual:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html:1364,Integrability,Message,Message,1364,"l::component::shader::OglAttribute< 1, GL_INT, int >protected; _indexsofa::gl::component::shader::OglAttribute< 1, GL_INT, int >protected; _lastUpdateDataCountersofa::gl::component::shader::OglAttribute< 1, GL_INT, int >protected; _needUpdatesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >protected; _topologysofa::gl::component::shader::OglAttribute< 1, GL_INT, int >protected; _usagesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObj",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html:3355,Integrability,Message,Message,3355,"::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 1, GL_INT, int >; disable()sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >virtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html:3397,Integrability,Message,Message,3397,"a::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 1, GL_INT, int >; disable()sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >virtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html:6752,Integrability,Message,Message,6752,")sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex() overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >inlinevirtual; getSETotalSize() overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >virtual; getSEType() const overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >inlinevirtual; getSlave(const std::string &name) constsofa::core:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html:6794,Integrability,Message,Message,6794,"; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex() overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >inlinevirtual; getSETotalSize() overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >virtual; getSEType() const overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() cons",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html:260,Modifiability,inherit,inherited,260,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglIntAttribute Member List . This is the complete list of members for sofa::gl::component::shader::OglIntAttribute, including all inherited members. _abosofa::gl::component::shader::OglAttribute< 1, GL_INT, int >protected; _aboSizesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >protected; _indexsofa::gl::component::shader::OglAttribute< 1, GL_INT, int >protected; _lastUpdateDataCountersofa::gl::component::shader::OglAttribute< 1, GL_INT, int >protected; _needUpdatesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >protected; _topologysofa::gl::component::shader::OglAttribute< 1, GL_INT, int >protected; _usagesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; apply",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html:13331,Performance,load,loader,13331,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setUsage(unsigned int usage)sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >inline; setValue(const type::vector< int > &value)sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntAttribute, SOFA_TEMPLATE3(OglAttribute, 1, GL_INT, int))sofa::gl::component::shader::OglIntAttribute; OglAttribute< 1, GL_INT, int >::SOFA_CLASS(BaseObject, Bas",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html:1355,Testability,log,logging,1355,"zesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >protected; _indexsofa::gl::component::shader::OglAttribute< 1, GL_INT, int >protected; _lastUpdateDataCountersofa::gl::component::shader::OglAttribute< 1, GL_INT, int >protected; _needUpdatesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >protected; _topologysofa::gl::component::shader::OglAttribute< 1, GL_INT, int >protected; _usagesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html:3346,Testability,log,logging,3346,"jectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 1, GL_INT, int >; disable()sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >virtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModeli",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html:3388,Testability,log,logging,3388,"ypedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 1, GL_INT, int >; disable()sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >virtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const Visual",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html:6743,Testability,log,logging,6743,"GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex() overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >inlinevirtual; getSETotalSize() overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >virtual; getSEType() const overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >inlinevirtual; getSlave(const std::string &name) constso",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html:6785,Testability,log,logging,6785,"inestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex() overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >inlinevirtual; getSETotalSize() overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >virtual; getSEType() const overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlav",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html:14797,Testability,log,logErrors,14797,"tprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntAttribute, SOFA_TEMPLATE3(OglAttribute, 1, GL_INT, int))sofa::gl::component::shader::OglIntAttribute; OglAttribute< 1, GL_INT, int >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE3(OglAttribute, size, type, int), core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >protected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglAttribute() overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >protected; ~OglIntAttribute()sofa::gl::component::shader::OglIntAttributeinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html:3096,Usability,clear,clearLoggedMessages,3096,"const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 1, GL_INT, int >; disable()sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *vp",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html:3154,Usability,clear,clearVisual,3154,"elinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 1, GL_INT, int >; disable()sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:879,Availability,down,down,879,"﻿. SOFA API: sofa::gl::component::shader::OglIntAttribute Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglIntAttribute Class Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglIntAttribute:. [legend]; Detailed Description; INT ATTRIBUTE . Public Member Functions;  SOFA_CLASS (OglIntAttribute, SOFA_TEMPLATE3(OglAttribute, 1, GL_INT, int));  ;  OglIntAttribute ();  ; virtual ~OglIntAttribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, int), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< int > * beginEdit ();  ; void endEdit ();  ; const type::vector< int > & getValue () const;  ; void setValue (const type::vector< int > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVert",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:1008,Deployability,Update,Update,1008,"﻿. SOFA API: sofa::gl::component::shader::OglIntAttribute Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglIntAttribute Class Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglIntAttribute:. [legend]; Detailed Description; INT ATTRIBUTE . Public Member Functions;  SOFA_CLASS (OglIntAttribute, SOFA_TEMPLATE3(OglAttribute, 1, GL_INT, int));  ;  OglIntAttribute ();  ; virtual ~OglIntAttribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, int), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< int > * beginEdit ();  ; void endEdit ();  ; const type::vector< int > & getValue () const;  ; void setValue (const type::vector< int > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVert",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:1198,Deployability,update,update,1198,"c Member Functions |; List of all members . sofa::gl::component::shader::OglIntAttribute Class Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglIntAttribute:. [legend]; Detailed Description; INT ATTRIBUTE . Public Member Functions;  SOFA_CLASS (OglIntAttribute, SOFA_TEMPLATE3(OglAttribute, 1, GL_INT, int));  ;  OglIntAttribute ();  ; virtual ~OglIntAttribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, int), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< int > * beginEdit ();  ; void endEdit ();  ; const type::vector< int > & getValue () const;  ; void setValue (const type::vector< int > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVertex () override;  ; int getSETotalSize () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (Visua",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:2441,Deployability,update,updateVisual,2441,"::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVertex () override;  ; int getSETotalSize () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:2487,Deployability,update,update,2487,"::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVertex () override;  ; int getSETotalSize () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:2543,Deployability,update,updateVisual,2543,"verride;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVertex () override;  ; int getSETotalSize () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:2931,Deployability,update,update,2931,"  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVertex () override;  ; int getSETotalSize () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render in",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:5421,Deployability,update,updateInternal,5421,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:5441,Deployability,Update,Update,5441,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:9916,Deployability,update,updateLinks,9916,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:9952,Deployability,Update,Update,9952,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:15994,Deployability,update,update,15994,"string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >;  OglAttribute ();  ;  ~OglAttribute () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initDat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:4186,Integrability,depend,dependent,4186,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:7781,Integrability,Message,Message,7781," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:7854,Integrability,Message,Message,7854," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:7896,Integrability,Message,Message,7896," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:7966,Integrability,Message,Message,7966," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:8077,Integrability,Message,Message,8077," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:8119,Integrability,Message,Message,8119," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:12902,Integrability,message,messages,12902,"ted from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >; GLuint _abo;  ; unsigned int _aboSize;  ; bool _needUpdate;  ; int _lastUpdateDataCounter;  ; GLuint _index;  ; unsigned int _usage;  ; core::topology::PointData< type::vector< int > > value;  internal Data More...;  ; Data< bool > handleDynamicTopology;  ; sofa::core::topology::BaseMeshTopology * _topology;  ;  Protected Attributes ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:288,Modifiability,Inherit,Inheritance,288,"﻿. SOFA API: sofa::gl::component::shader::OglIntAttribute Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglIntAttribute Class Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglIntAttribute:. [legend]; Detailed Description; INT ATTRIBUTE . Public Member Functions;  SOFA_CLASS (OglIntAttribute, SOFA_TEMPLATE3(OglAttribute, 1, GL_INT, int));  ;  OglIntAttribute ();  ; virtual ~OglIntAttribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, int), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< int > * beginEdit ();  ; void endEdit ();  ; const type::vector< int > & getValue () const;  ; void setValue (const type::vector< int > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVert",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:593,Modifiability,inherit,inherited,593,"﻿. SOFA API: sofa::gl::component::shader::OglIntAttribute Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglIntAttribute Class Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglIntAttribute:. [legend]; Detailed Description; INT ATTRIBUTE . Public Member Functions;  SOFA_CLASS (OglIntAttribute, SOFA_TEMPLATE3(OglAttribute, 1, GL_INT, int));  ;  OglIntAttribute ();  ; virtual ~OglIntAttribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, int), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< int > * beginEdit ();  ; void endEdit ();  ; const type::vector< int > & getValue () const;  ; void setValue (const type::vector< int > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVert",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:1034,Modifiability,variab,variables,1034,"﻿. SOFA API: sofa::gl::component::shader::OglIntAttribute Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglIntAttribute Class Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglIntAttribute:. [legend]; Detailed Description; INT ATTRIBUTE . Public Member Functions;  SOFA_CLASS (OglIntAttribute, SOFA_TEMPLATE3(OglAttribute, 1, GL_INT, int));  ;  OglIntAttribute ();  ; virtual ~OglIntAttribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, int), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< int > * beginEdit ();  ; void endEdit ();  ; const type::vector< int > & getValue () const;  ; void setValue (const type::vector< int > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVert",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:1819,Modifiability,variab,variable,1819,"haderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< int > * beginEdit ();  ; void endEdit ();  ; const type::vector< int > & getValue () const;  ; void setValue (const type::vector< int > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVertex () override;  ; int getSETotalSize () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:2080,Modifiability,inherit,inherited,2080,"on are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< int > * beginEdit ();  ; void endEdit ();  ; const type::vector< int > & getValue () const;  ; void setValue (const type::vector< int > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVertex () override;  ; int getSETotalSize () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual mode",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:3767,Modifiability,inherit,inherited,3767,"id drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; Base",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:5467,Modifiability,variab,variables,5467,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:5509,Modifiability,variab,variables,5509,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:5754,Modifiability,inherit,inherited,5754,"  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:11880,Modifiability,inherit,inherited,11880,"seData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tag",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:12192,Modifiability,inherit,inherited,12192,"seData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tag",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:12319,Modifiability,Inherit,Inherited,12319,"g all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanc",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:12357,Modifiability,inherit,inherited,12357,"g all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanc",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:12487,Modifiability,inherit,inherited,12487," MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::gl::component::shader::OglAttribute< 1, GL_INT, i",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:12653,Modifiability,inherit,inherited,12653,"BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >; GLuint _abo;  ; unsigned int _aboSize;  ; bool _needUpdate;  ; int _lastUpdateDataCounter;  ; GLuint _index;  ; unsigned int _usage;  ; core::topology::PointData< type::vector< int > > ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:13475,Modifiability,inherit,inherited,13475,"bjectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >; GLuint _abo;  ; unsigned int _aboSize;  ; bool _needUpdate;  ; int _lastUpdateDataCounter;  ; GLuint _index;  ; unsigned int _usage;  ; core::topology::PointData< type::vector< int > > value;  internal Data More...;  ; Data< bool > handleDynamicTopology;  ; sofa::core::topology::BaseMeshTopology * _topology;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:13886,Modifiability,inherit,inherited,13886," sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >; GLuint _abo;  ; unsigned int _aboSize;  ; bool _needUpdate;  ; int _lastUpdateDataCounter;  ; GLuint _index;  ; unsigned int _usage;  ; core::topology::PointData< type::vector< int > > value;  internal Data More...;  ; Data< bool > handleDynamicTopology;  ; sofa::core::topology::BaseMeshTopology * _topology;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseOb",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:14140,Modifiability,inherit,inherited,14140," sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >; GLuint _abo;  ; unsigned int _aboSize;  ; bool _needUpdate;  ; int _lastUpdateDataCounter;  ; GLuint _index;  ; unsigned int _usage;  ; core::topology::PointData< type::vector< int > > value;  internal Data More...;  ; Data< bool > handleDynamicTopology;  ; sofa::core::topology::BaseMeshTopology * _topology;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseOb",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:14569,Modifiability,inherit,inherited,14569,"dateDataCounter;  ; GLuint _index;  ; unsigned int _usage;  ; core::topology::PointData< type::vector< int > > value;  internal Data More...;  ; Data< bool > handleDynamicTopology;  ; sofa::core::topology::BaseMeshTopology * _topology;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >;  Ogl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:14921,Modifiability,inherit,inherited,14921,"> l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >;  OglAttribute ();  ;  ~OglAttribute () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:15321,Modifiability,inherit,inherited,15321,"string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >;  OglAttribute ();  ;  ~OglAttribute () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initDat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:15546,Modifiability,inherit,inherited,15546,"string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >;  OglAttribute ();  ;  ~OglAttribute () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initDat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:15702,Modifiability,inherit,inherited,15702,"string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >;  OglAttribute ();  ;  ~OglAttribute () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initDat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:15828,Modifiability,inherit,inherited,15828,"string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >;  OglAttribute ();  ;  ~OglAttribute () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initDat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:16551,Modifiability,inherit,inherited,16551,"ide;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  . Constructor details. ◆ OglIntAttribute(). sofa::gl::component::shader::OglIntAttribute::OglIntAttribute ; (; ). inline . ◆ ~OglIntAttribute(). virtual sofa::gl::component::shader::OglIntAttribute::~OglIntAttribute ; (; ). inlinevirtual . Function details. ◆ SOFA_CLASS(). sofa::gl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:17261,Modifiability,inherit,inherited,17261," ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  . Constructor details. ◆ OglIntAttribute(). sofa::gl::component::shader::OglIntAttribute::OglIntAttribute ; (; ). inline . ◆ ~OglIntAttribute(). virtual sofa::gl::component::shader::OglIntAttribute::~OglIntAttribute ; (; ). inlinevirtual . Function details. ◆ SOFA_CLASS(). sofa::gl::component::shader::OglIntAttribute::SOFA_CLASS ; (; OglIntAttribute ; , . SOFA_TEMPLATE3(OglAttribute, 1, GL_INT, int) ;  . ). sofaglcomponentshaderOglIntAttribute; Generated on Mon Nov 11 2024 03:19:08 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:4267,Performance,load,loader,4267," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:13242,Performance,Load,Loading,13242,"ctions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >; GLuint _abo;  ; unsigned int _aboSize;  ; bool _needUpdate;  ; int _lastUpdateDataCounter;  ; GLuint _index;  ; unsigned int _usage;  ; core::topology::PointData< type::vector< int > > value;  internal Data More...;  ; Data< bool > handleDynamicTopology;  ; sofa::core::topology::BaseMeshTopology * _topology;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:6288,Security,Access,Accessor,6288,"  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:11233,Security,Access,Accessor,11233," initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:11352,Security,Access,Accessor,11352,"ta (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  . Additional Inherited Members;  Public Attributes inh",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:11463,Security,Access,Accessor,11463,"thod used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:11582,Security,Access,Accessor,11582,"Data initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the even",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:7772,Testability,log,logging,7772," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:7845,Testability,log,logging,7845," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:7887,Testability,log,logging,7887," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:7957,Testability,log,logging,7957," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:8068,Testability,log,logging,8068," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:8110,Testability,log,logging,8110," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:9934,Testability,log,logErrors,9934,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:2582,Usability,clear,clearVisual,2582,"verride;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVertex () override;  ; int getSETotalSize () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:2599,Usability,clear,clear,2599,"verride;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVertex () override;  ; int getSETotalSize () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:8153,Usability,clear,clearLoggedMessages,8153," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html:13272,Deployability,update,updateInternal,13272,"e::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntVariable, OglVariable< int >)sofa::gl::component::shader::OglIntVariable; OglVariable< int >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< int >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< int >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglIntVariable()sofa::gl::component::shader::OglIntVariableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html:13325,Deployability,update,updateLinks,13325,"ntType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntVariable, OglVariable< int >)sofa::gl::component::shader::OglIntVariable; OglVariable< int >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< int >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< int >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglIntVariable()sofa::gl::component::shader::OglIntVariableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::shader::OglVariable< int >inlineprotected; ~ShaderEl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html:13395,Deployability,update,updateVisual,13395,"mponent::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntVariable, OglVariable< int >)sofa::gl::component::shader::OglIntVariable; OglVariable< int >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< int >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< int >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglIntVariable()sofa::gl::component::shader::OglIntVariableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::shader::OglVariable< int >inlineprotected; ~ShaderElement() overridesofa::core::visual::ShaderElementinlineprotected; ~Visu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html:13462,Deployability,update,updateVisual,13462,"r=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntVariable, OglVariable< int >)sofa::gl::component::shader::OglIntVariable; OglVariable< int >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< int >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< int >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglIntVariable()sofa::gl::component::shader::OglIntVariableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::shader::OglVariable< int >inlineprotected; ~ShaderElement() overridesofa::core::visual::ShaderElementinlineprotected; ~VisualModel() overridesofa::core::visual::VisualModelinlineprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html:806,Integrability,Message,Message,806," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html:2680,Integrability,Message,Message,2680,"::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< int >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< int >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core::visual::VisualModelvirtual; exportO",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html:2722,Integrability,Message,Message,2722,"sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< int >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< int >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core::visual::VisualModelvirtual; exportOBJ(std::string, std::ostream *, std::ostre",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html:5720,Integrability,Message,Message,5720,)sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< int >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< int >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< int >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa:,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html:5762,Integrability,Message,Message,5762,; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< int >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< int >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< int >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplat,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html:258,Modifiability,inherit,inherited,258,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglIntVariable Member List . This is the complete list of members for sofa::gl::component::shader::OglIntVariable, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html:12076,Performance,load,loader,12076,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setValue(const int &v)sofa::gl::component::shader::OglVariable< int >inlinevirtual; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntVariable, OglVariable< int >)sofa::gl::component::shader::OglIntVariable; OglVariable< int >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< int ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html:797,Testability,log,logging,797," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html:2671,Testability,log,logging,2671,"ofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< int >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< int >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core::visual::VisualModelvirtual",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html:2713,Testability,log,logging,2713,"l; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< int >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< int >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core::visual::VisualModelvirtual; exportOBJ(std::string, std::ostream *, s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html:5711,Testability,log,logging,5711,GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< int >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< int >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< int >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() c,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html:5753,Testability,log,logging,5753,inestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< int >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< int >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< int >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; g,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html:13342,Testability,log,logErrors,13342,"sofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntVariable, OglVariable< int >)sofa::gl::component::shader::OglIntVariable; OglVariable< int >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< int >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< int >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglIntVariable()sofa::gl::component::shader::OglIntVariableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::shader::OglVariable< int >inlineprotected; ~ShaderElement() override",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html:2421,Usability,clear,clearLoggedMessages,2421,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< int >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< int >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html:2479,Usability,clear,clearVisual,2479,"ore::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< int >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< int >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::vis",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:878,Availability,down,down,878,"﻿. SOFA API: sofa::gl::component::shader::OglIntVariable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglIntVariable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglIntVariable:. [legend]; Detailed Description; SINGLE INT VARIABLE . Public Member Functions;  SOFA_CLASS (OglIntVariable, OglVariable< int >);  ;  OglIntVariable ();  ; virtual ~OglIntVariable ();  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< int >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const int &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generall",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:1000,Deployability,Update,Update,1000,"﻿. SOFA API: sofa::gl::component::shader::OglIntVariable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglIntVariable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglIntVariable:. [legend]; Detailed Description; SINGLE INT VARIABLE . Public Member Functions;  SOFA_CLASS (OglIntVariable, OglVariable< int >);  ;  OglIntVariable ();  ; virtual ~OglIntVariable ();  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< int >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const int &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generall",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:1803,Deployability,update,updateVisual,1803,"method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:1849,Deployability,update,update,1849,"method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:1905,Deployability,update,updateVisual,1905,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:2514,Deployability,update,update,2514,"T_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render in",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:5004,Deployability,update,updateInternal,5004,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:5024,Deployability,Update,Update,5024,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:9499,Deployability,update,updateLinks,9499,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:9535,Deployability,Update,Update,9535,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:15329,Deployability,update,update,15329,"< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< int >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (Bas",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:3769,Integrability,depend,dependent,3769,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:7364,Integrability,Message,Message,7364," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:7437,Integrability,Message,Message,7437," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:7479,Integrability,Message,Message,7479," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:7549,Integrability,Message,Message,7549," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:7660,Integrability,Message,Message,7660," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:7702,Integrability,Message,Message,7702," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:12662,Integrability,message,messages,12662,"str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< int >; Data< int > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of field",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:285,Modifiability,Inherit,Inheritance,285,"﻿. SOFA API: sofa::gl::component::shader::OglIntVariable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglIntVariable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglIntVariable:. [legend]; Detailed Description; SINGLE INT VARIABLE . Public Member Functions;  SOFA_CLASS (OglIntVariable, OglVariable< int >);  ;  OglIntVariable ();  ; virtual ~OglIntVariable ();  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< int >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const int &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generall",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:398,Modifiability,VARIAB,VARIABLE,398,"﻿. SOFA API: sofa::gl::component::shader::OglIntVariable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglIntVariable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglIntVariable:. [legend]; Detailed Description; SINGLE INT VARIABLE . Public Member Functions;  SOFA_CLASS (OglIntVariable, OglVariable< int >);  ;  OglIntVariable ();  ; virtual ~OglIntVariable ();  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< int >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const int &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generall",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:597,Modifiability,inherit,inherited,597,"﻿. SOFA API: sofa::gl::component::shader::OglIntVariable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglIntVariable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglIntVariable:. [legend]; Detailed Description; SINGLE INT VARIABLE . Public Member Functions;  SOFA_CLASS (OglIntVariable, OglVariable< int >);  ;  OglIntVariable ();  ; virtual ~OglIntVariable ();  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< int >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const int &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generall",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:1026,Modifiability,variab,variables,1026,"﻿. SOFA API: sofa::gl::component::shader::OglIntVariable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglIntVariable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglIntVariable:. [legend]; Detailed Description; SINGLE INT VARIABLE . Public Member Functions;  SOFA_CLASS (OglIntVariable, OglVariable< int >);  ;  OglIntVariable ();  ; virtual ~OglIntVariable ();  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< int >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const int &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generall",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:1255,Modifiability,variab,variable,1255," all members . sofa::gl::component::shader::OglIntVariable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglIntVariable:. [legend]; Detailed Description; SINGLE INT VARIABLE . Public Member Functions;  SOFA_CLASS (OglIntVariable, OglVariable< int >);  ;  OglIntVariable ();  ; virtual ~OglIntVariable ();  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< int >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const int &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:1442,Modifiability,inherit,inherited,1442,"OglVariable< int >);  ;  OglIntVariable ();  ; virtual ~OglIntVariable ();  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< int >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const int &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:3350,Modifiability,inherit,inherited,3350,"id drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; Base",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:5050,Modifiability,variab,variables,5050,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:5092,Modifiability,variab,variables,5092,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:5337,Modifiability,inherit,inherited,5337,"  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:11463,Modifiability,inherit,inherited,11463,"Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< int >; Data< int > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the obje",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:11775,Modifiability,inherit,inherited,11775,"Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< int >; Data< int > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the obje",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:11974,Modifiability,Inherit,Inherited,11974,"fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< int >; Data< int > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_de",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:12012,Modifiability,inherit,inherited,12012,"fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< int >; Data< int > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_de",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:12117,Modifiability,inherit,inherited,12117,"fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< int >; Data< int > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_de",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:12247,Modifiability,inherit,inherited,12247,"&path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< int >; Data< int > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseOb",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:12413,Modifiability,inherit,inherited,12413,"nt::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< int >; Data< int > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherit",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:13235,Modifiability,inherit,inherited,13235,"nts, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:13489,Modifiability,inherit,inherited,13489,"nts, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:13918,Modifiability,inherit,inherited,13918,"g (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< int >;  OglVariable ();",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:14270,Modifiability,inherit,inherited,14270,"> l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< int >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; v",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:14670,Modifiability,inherit,inherited,14670,"< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< int >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (Bas",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:14895,Modifiability,inherit,inherited,14895,"< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< int >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (Bas",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:15037,Modifiability,inherit,inherited,15037,"< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< int >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (Bas",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:15163,Modifiability,inherit,inherited,15163,"< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< int >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (Bas",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:15886,Modifiability,inherit,inherited,15886,"ide;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  . Constructor details. ◆ OglIntVariable(). sofa::gl::component::shader::OglIntVariable::OglIntVariable ; (; ). ◆ ~OglIntVariable(). virtual sofa::gl::component::shader::OglIntVariable::~OglIntVariable ; (; ). inlinevirtual . Function details. ◆ pushValue(). void sofa::gl::component",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:16596,Modifiability,inherit,inherited,16596," void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  . Constructor details. ◆ OglIntVariable(). sofa::gl::component::shader::OglIntVariable::OglIntVariable ; (; ). ◆ ~OglIntVariable(). virtual sofa::gl::component::shader::OglIntVariable::~OglIntVariable ; (; ). inlinevirtual . Function details. ◆ pushValue(). void sofa::gl::component::shader::OglIntVariable::pushValue ; (; ). overridevirtual . Implements sofa::gl::component::shader::OglVariable< int >. ◆ SOFA_CLASS(). sofa::gl::component::shader::OglIntVariable::SOFA_CLASS ; (; OglIntVariable ; , . OglVariable< int > ;  . ). sofaglcomponentshaderOglIntVariable; Generated on Mon Nov 11 2024 03:19:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:3850,Performance,load,loader,3850," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:13002,Performance,Load,Loading,13002,"ETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< int >; Data< int > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::com",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:5871,Security,Access,Accessor,5871,"  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:10816,Security,Access,Accessor,10816," initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:10935,Security,Access,Accessor,10935,"ta (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int ge",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:11046,Security,Access,Accessor,11046,"thod used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::Og",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:11165,Security,Access,Accessor,11165,"Data initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< int >; Data< int > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:7355,Testability,log,logging,7355," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:7428,Testability,log,logging,7428," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:7470,Testability,log,logging,7470," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:7540,Testability,log,logging,7540," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:7651,Testability,log,logging,7651," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:7693,Testability,log,logging,7693," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:9517,Testability,log,logErrors,9517,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:1944,Usability,clear,clearVisual,1944,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:1961,Usability,clear,clear,1961,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:7736,Usability,clear,clearLoggedMessages,7736," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html:13763,Deployability,update,updateInternal,13763,"llptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntVector2Variable, OglIntVectorVariable)sofa::gl::component::shader::OglIntVector2Variable; sofa::gl::component::shader::OglIntVectorVariable::SOFA_CLASS(OglIntVectorVariable, OglVariable< type::vector< GLint > >)sofa::gl::component::shader::OglIntVectorVariable; OglVariable< type::vector< GLint > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< GLint > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< GLint > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglIntVector2Variable() overridesofa::gl::component::shader::OglIntVector2Variableinline; ~OglIntVectorVariable()sofa::gl::component::shader::OglIntVectorVariableinlinevirtual; ~OglS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html:13816,Deployability,update,updateLinks,13816,"a::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntVector2Variable, OglIntVectorVariable)sofa::gl::component::shader::OglIntVector2Variable; sofa::gl::component::shader::OglIntVectorVariable::SOFA_CLASS(OglIntVectorVariable, OglVariable< type::vector< GLint > >)sofa::gl::component::shader::OglIntVectorVariable; OglVariable< type::vector< GLint > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< GLint > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< GLint > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglIntVector2Variable() overridesofa::gl::component::shader::OglIntVector2Variableinline; ~OglIntVectorVariable()sofa::gl::component::shader::OglIntVectorVariableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html:13886,Deployability,update,updateVisual,13886,"::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntVector2Variable, OglIntVectorVariable)sofa::gl::component::shader::OglIntVector2Variable; sofa::gl::component::shader::OglIntVectorVariable::SOFA_CLASS(OglIntVectorVariable, OglVariable< type::vector< GLint > >)sofa::gl::component::shader::OglIntVectorVariable; OglVariable< type::vector< GLint > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< GLint > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< GLint > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglIntVector2Variable() overridesofa::gl::component::shader::OglIntVector2Variableinline; ~OglIntVectorVariable()sofa::gl::component::shader::OglIntVectorVariableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::sh",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html:13953,Deployability,update,updateVisual,13953,"t::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntVector2Variable, OglIntVectorVariable)sofa::gl::component::shader::OglIntVector2Variable; sofa::gl::component::shader::OglIntVectorVariable::SOFA_CLASS(OglIntVectorVariable, OglVariable< type::vector< GLint > >)sofa::gl::component::shader::OglIntVectorVariable; OglVariable< type::vector< GLint > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< GLint > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< GLint > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglIntVector2Variable() overridesofa::gl::component::shader::OglIntVector2Variableinline; ~OglIntVectorVariable()sofa::gl::component::shader::OglIntVectorVariableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlineprotected; ~ShaderE",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html:820,Integrability,Message,Message,820," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvir",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html:2694,Integrability,Message,Message,2694,"::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html:2736,Integrability,Message,Message,2736,"sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core::visual::VisualModelvirtual; exportOBJ(std",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html:5770,Integrability,Message,Message,5770,)sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsof,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html:5812,Integrability,Message,Message,5812,; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags(,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html:272,Modifiability,inherit,inherited,272,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglIntVector2Variable Member List . This is the complete list of members for sofa::gl::component::shader::OglIntVector2Variable, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvir",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html:12307,Performance,load,loader,12307,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setValue(const type::vector< GLint > &v)sofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntVector2Variable, OglIntVectorVariable)sofa::gl::component::shader::OglIntVector2Variable; sofa::gl::component::shader::OglIntVectorVariable::SOFA_CLASS(OglIntVectorVariable, OglVariable< type::vector< GLint > >)sofa::gl::component::shader",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html:811,Testability,log,logging,811," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvir",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html:2685,Testability,log,logging,2685,"ofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalso",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html:2727,Testability,log,logging,2727,"l; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core::visual::VisualModelvirtual; expo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html:5761,Testability,log,logging,5761,GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves(),MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html:5803,Testability,log,logging,5803,inestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject;,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html:13833,Testability,log,logErrors,13833,"_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntVector2Variable, OglIntVectorVariable)sofa::gl::component::shader::OglIntVector2Variable; sofa::gl::component::shader::OglIntVectorVariable::SOFA_CLASS(OglIntVectorVariable, OglVariable< type::vector< GLint > >)sofa::gl::component::shader::OglIntVectorVariable; OglVariable< type::vector< GLint > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< GLint > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< GLint > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglIntVector2Variable() overridesofa::gl::component::shader::OglIntVector2Variableinline; ~OglIntVectorVariable()sofa::gl::component::shader::OglIntVectorVariableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElemen",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html:2435,Usability,clear,clearLoggedMessages,2435,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::ob",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html:2493,Usability,clear,clearVisual,2493,"ore::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const V",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:643,Availability,down,down,643,"﻿. SOFA API: sofa::gl::component::shader::OglIntVector2Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglIntVector2Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglIntVector2Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglIntVector2Variable, OglIntVectorVariable);  ;  OglIntVector2Variable ();  ;  ~OglIntVector2Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglIntVectorVariable;  SOFA_CLASS (OglIntVectorVariable, OglVariable< type::vector< GLint > >);  ;  OglIntVectorVariable ();  ; virtual ~OglIntVectorVariable ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< GLint > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:1278,Availability,down,down,1278,"﻿. SOFA API: sofa::gl::component::shader::OglIntVector2Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglIntVector2Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglIntVector2Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglIntVector2Variable, OglIntVectorVariable);  ;  OglIntVector2Variable ();  ;  ~OglIntVector2Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglIntVectorVariable;  SOFA_CLASS (OglIntVectorVariable, OglVariable< type::vector< GLint > >);  ;  OglIntVectorVariable ();  ; virtual ~OglIntVectorVariable ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< GLint > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:17633,Availability,down,down,17633,"the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  . Constructor details. ◆ OglIntVector2Variable(). sofa::gl::component::shader::OglIntVector2Variable::OglIntVector2Variable ; (; ). ◆ ~OglIntVector2Variable(). sofa::gl::component::shader::OglIntVector2Variable::~OglIntVector2Variable ; (; ). inlineoverride . Function details. ◆ init(). void sofa::gl::component::shader::OglIntVector2Variable::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::gl::component::shader::OglIntVectorVariable. ◆ pushValue(). void sofa::gl::component::shader::OglIntVector2Variable::pushValue ; (; ). overridevirtual . Reimplemented from sofa::gl::component::shader::OglIntVectorVariable. ◆ SOFA_CLASS(). sofa::gl::component::shader::OglIntVector2Variable::SOFA_CLASS ; (; OglIntVector2Variable ; , . OglIntVectorVariable ;  . ). sofaglcomponentshaderOglIntVector2Variable; Generated on Mon Nov 11 2024 03:19:15 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:1400,Deployability,Update,Update,1400,"Public Member Functions;  SOFA_CLASS (OglIntVector2Variable, OglIntVectorVariable);  ;  OglIntVector2Variable ();  ;  ~OglIntVector2Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglIntVectorVariable;  SOFA_CLASS (OglIntVectorVariable, OglVariable< type::vector< GLint > >);  ;  OglIntVectorVariable ();  ; virtual ~OglIntVectorVariable ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< GLint > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resou",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:2203,Deployability,update,updateVisual,2203,"method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:2249,Deployability,update,update,2249,"method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:2305,Deployability,update,updateVisual,2305,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:2914,Deployability,update,update,2914,"T_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render in",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:5404,Deployability,update,updateInternal,5404,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:5424,Deployability,Update,Update,5424,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:9899,Deployability,update,updateLinks,9899,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:9935,Deployability,Update,Update,9935,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:15783,Deployability,update,update,15783,"ring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:4169,Integrability,depend,dependent,4169,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:7764,Integrability,Message,Message,7764," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:7837,Integrability,Message,Message,7837," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:7879,Integrability,Message,Message,7879," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:7949,Integrability,Message,Message,7949," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:8060,Integrability,Message,Message,8060," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:8102,Integrability,Message,Message,8102," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:13098,Integrability,message,messages,13098,"ed int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >; Data< type::vector< GLint > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of field",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:299,Modifiability,Inherit,Inheritance,299,"﻿. SOFA API: sofa::gl::component::shader::OglIntVector2Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglIntVector2Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglIntVector2Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglIntVector2Variable, OglIntVectorVariable);  ;  OglIntVector2Variable ();  ;  ~OglIntVector2Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglIntVectorVariable;  SOFA_CLASS (OglIntVectorVariable, OglVariable< type::vector< GLint > >);  ;  OglIntVectorVariable ();  ; virtual ~OglIntVectorVariable ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< GLint > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:727,Modifiability,inherit,inherited,727,"﻿. SOFA API: sofa::gl::component::shader::OglIntVector2Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglIntVector2Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglIntVector2Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglIntVector2Variable, OglIntVectorVariable);  ;  OglIntVector2Variable ();  ;  ~OglIntVector2Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglIntVectorVariable;  SOFA_CLASS (OglIntVectorVariable, OglVariable< type::vector< GLint > >);  ;  OglIntVectorVariable ();  ; virtual ~OglIntVectorVariable ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< GLint > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:961,Modifiability,inherit,inherited,961,"﻿. SOFA API: sofa::gl::component::shader::OglIntVector2Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglIntVector2Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglIntVector2Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglIntVector2Variable, OglIntVectorVariable);  ;  OglIntVector2Variable ();  ;  ~OglIntVector2Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglIntVectorVariable;  SOFA_CLASS (OglIntVectorVariable, OglVariable< type::vector< GLint > >);  ;  OglIntVectorVariable ();  ; virtual ~OglIntVectorVariable ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< GLint > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:1426,Modifiability,variab,variables,1426,"Public Member Functions;  SOFA_CLASS (OglIntVector2Variable, OglIntVectorVariable);  ;  OglIntVector2Variable ();  ;  ~OglIntVector2Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglIntVectorVariable;  SOFA_CLASS (OglIntVectorVariable, OglVariable< type::vector< GLint > >);  ;  OglIntVectorVariable ();  ; virtual ~OglIntVectorVariable ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< GLint > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resou",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:1655,Modifiability,variab,variable,1655,"method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglIntVectorVariable;  SOFA_CLASS (OglIntVectorVariable, OglVariable< type::vector< GLint > >);  ;  OglIntVectorVariable ();  ; virtual ~OglIntVectorVariable ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< GLint > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:1842,Modifiability,inherit,inherited,1842,">);  ;  OglIntVectorVariable ();  ; virtual ~OglIntVectorVariable ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< GLint > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:3750,Modifiability,inherit,inherited,3750,"id drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; Base",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:5450,Modifiability,variab,variables,5450,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:5492,Modifiability,variab,variables,5492,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:5737,Modifiability,inherit,inherited,5737,"  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:11863,Modifiability,inherit,inherited,11863,"Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >; Data< type::vector< GLint > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:12175,Modifiability,inherit,inherited,12175,"Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >; Data< type::vector< GLint > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:12374,Modifiability,Inherit,Inherited,12374,"ect. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >; Data< type::vector< GLint > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:12412,Modifiability,inherit,inherited,12412,"ect. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >; Data< type::vector< GLint > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:12553,Modifiability,inherit,inherited,12553,"ect. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >; Data< type::vector< GLint > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:12683,Modifiability,inherit,inherited,12683,"plate<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >; Data< type::vector< GLint > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseOb",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:12849,Modifiability,inherit,inherited,12849,"aderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >; Data< type::vector< GLint > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherit",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:13671,Modifiability,inherit,inherited,13671,"nts, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:13925,Modifiability,inherit,inherited,13925,"nts, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:14354,Modifiability,inherit,inherited,14354,"g (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:14706,Modifiability,inherit,inherited,14706,"> l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal upd",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:15106,Modifiability,inherit,inherited,15106,"ring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:15331,Modifiability,inherit,inherited,15331,"ring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:15491,Modifiability,inherit,inherited,15491,"ring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:15617,Modifiability,inherit,inherited,15617,"ring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:16340,Modifiability,inherit,inherited,16340,"ide;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  . Constructor details. ◆ OglIntVector2Variable(). sofa::gl::component::shader::OglIntVector2Variable::OglIntVector2Variable ; (; ). ◆ ~OglIntVector2Variable(). sofa::gl::component::shader::OglIntVector2Variable::~OglIntVector2Variable ; (; ). inlineoverride . Function details. ◆ in",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:17050,Modifiability,inherit,inherited,17050,"thod called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  . Constructor details. ◆ OglIntVector2Variable(). sofa::gl::component::shader::OglIntVector2Variable::OglIntVector2Variable ; (; ). ◆ ~OglIntVector2Variable(). sofa::gl::component::shader::OglIntVector2Variable::~OglIntVector2Variable ; (; ). inlineoverride . Function details. ◆ init(). void sofa::gl::component::shader::OglIntVector2Variable::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::gl::component::shader::OglIntVectorVariable. ◆ pushValue(). void sofa::gl::component::shader::OglIntVector2Variable::pushValue ; (; ). overridevirtual . Reimplemented from sofa::gl::component::shader::OglIntVectorVariable. ◆ SOFA_CLASS(). sofa::gl::component::shader::OglIntVector2Variable::SOFA_CLASS ; (; OglIntVector2Variable ; , . OglIntVectorVariable ;  . ). sofaglcomponentshaderOglIntVector2Variable; Genera",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:4250,Performance,load,loader,4250," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:13438,Performance,Load,Loading,13438,"ed Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >; Data< type::vector< GLint > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::com",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:6271,Security,Access,Accessor,6271,"  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:11216,Security,Access,Accessor,11216," initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:11335,Security,Access,Accessor,11335,"ta (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int ge",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:11446,Security,Access,Accessor,11446,"thod used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::Og",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:11565,Security,Access,Accessor,11565,"Data initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >; Data< type::vector< GLint > > value;  ;  Public Attributes inherited from sofa:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:7755,Testability,log,logging,7755," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:7828,Testability,log,logging,7828," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:7870,Testability,log,logging,7870," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:7940,Testability,log,logging,7940," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:8051,Testability,log,logging,8051," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:8093,Testability,log,logging,8093," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:9917,Testability,log,logErrors,9917,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:2344,Usability,clear,clearVisual,2344,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:2361,Usability,clear,clear,2361,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:8136,Usability,clear,clearLoggedMessages,8136," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html:13763,Deployability,update,updateInternal,13763,"llptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntVector3Variable, OglIntVectorVariable)sofa::gl::component::shader::OglIntVector3Variable; sofa::gl::component::shader::OglIntVectorVariable::SOFA_CLASS(OglIntVectorVariable, OglVariable< type::vector< GLint > >)sofa::gl::component::shader::OglIntVectorVariable; OglVariable< type::vector< GLint > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< GLint > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< GLint > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglIntVector3Variable() overridesofa::gl::component::shader::OglIntVector3Variableinline; ~OglIntVectorVariable()sofa::gl::component::shader::OglIntVectorVariableinlinevirtual; ~OglS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html:13816,Deployability,update,updateLinks,13816,"a::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntVector3Variable, OglIntVectorVariable)sofa::gl::component::shader::OglIntVector3Variable; sofa::gl::component::shader::OglIntVectorVariable::SOFA_CLASS(OglIntVectorVariable, OglVariable< type::vector< GLint > >)sofa::gl::component::shader::OglIntVectorVariable; OglVariable< type::vector< GLint > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< GLint > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< GLint > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglIntVector3Variable() overridesofa::gl::component::shader::OglIntVector3Variableinline; ~OglIntVectorVariable()sofa::gl::component::shader::OglIntVectorVariableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html:13886,Deployability,update,updateVisual,13886,"::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntVector3Variable, OglIntVectorVariable)sofa::gl::component::shader::OglIntVector3Variable; sofa::gl::component::shader::OglIntVectorVariable::SOFA_CLASS(OglIntVectorVariable, OglVariable< type::vector< GLint > >)sofa::gl::component::shader::OglIntVectorVariable; OglVariable< type::vector< GLint > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< GLint > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< GLint > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglIntVector3Variable() overridesofa::gl::component::shader::OglIntVector3Variableinline; ~OglIntVectorVariable()sofa::gl::component::shader::OglIntVectorVariableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::sh",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html:13953,Deployability,update,updateVisual,13953,"t::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntVector3Variable, OglIntVectorVariable)sofa::gl::component::shader::OglIntVector3Variable; sofa::gl::component::shader::OglIntVectorVariable::SOFA_CLASS(OglIntVectorVariable, OglVariable< type::vector< GLint > >)sofa::gl::component::shader::OglIntVectorVariable; OglVariable< type::vector< GLint > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< GLint > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< GLint > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglIntVector3Variable() overridesofa::gl::component::shader::OglIntVector3Variableinline; ~OglIntVectorVariable()sofa::gl::component::shader::OglIntVectorVariableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlineprotected; ~ShaderE",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html:820,Integrability,Message,Message,820," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvir",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html:2694,Integrability,Message,Message,2694,"::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html:2736,Integrability,Message,Message,2736,"sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core::visual::VisualModelvirtual; exportOBJ(std",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html:5770,Integrability,Message,Message,5770,)sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsof,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html:5812,Integrability,Message,Message,5812,; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags(,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html:272,Modifiability,inherit,inherited,272,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglIntVector3Variable Member List . This is the complete list of members for sofa::gl::component::shader::OglIntVector3Variable, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvir",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html:12307,Performance,load,loader,12307,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setValue(const type::vector< GLint > &v)sofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntVector3Variable, OglIntVectorVariable)sofa::gl::component::shader::OglIntVector3Variable; sofa::gl::component::shader::OglIntVectorVariable::SOFA_CLASS(OglIntVectorVariable, OglVariable< type::vector< GLint > >)sofa::gl::component::shader",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html:811,Testability,log,logging,811," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvir",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html:2685,Testability,log,logging,2685,"ofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalso",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html:2727,Testability,log,logging,2727,"l; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core::visual::VisualModelvirtual; expo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html:5761,Testability,log,logging,5761,GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves(),MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html:5803,Testability,log,logging,5803,inestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject;,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html:13833,Testability,log,logErrors,13833,"_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntVector3Variable, OglIntVectorVariable)sofa::gl::component::shader::OglIntVector3Variable; sofa::gl::component::shader::OglIntVectorVariable::SOFA_CLASS(OglIntVectorVariable, OglVariable< type::vector< GLint > >)sofa::gl::component::shader::OglIntVectorVariable; OglVariable< type::vector< GLint > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< GLint > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< GLint > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglIntVector3Variable() overridesofa::gl::component::shader::OglIntVector3Variableinline; ~OglIntVectorVariable()sofa::gl::component::shader::OglIntVectorVariableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElemen",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html:2435,Usability,clear,clearLoggedMessages,2435,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::ob",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html:2493,Usability,clear,clearVisual,2493,"ore::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const V",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:643,Availability,down,down,643,"﻿. SOFA API: sofa::gl::component::shader::OglIntVector3Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglIntVector3Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglIntVector3Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglIntVector3Variable, OglIntVectorVariable);  ;  OglIntVector3Variable ();  ;  ~OglIntVector3Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglIntVectorVariable;  SOFA_CLASS (OglIntVectorVariable, OglVariable< type::vector< GLint > >);  ;  OglIntVectorVariable ();  ; virtual ~OglIntVectorVariable ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< GLint > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:1278,Availability,down,down,1278,"﻿. SOFA API: sofa::gl::component::shader::OglIntVector3Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglIntVector3Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglIntVector3Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglIntVector3Variable, OglIntVectorVariable);  ;  OglIntVector3Variable ();  ;  ~OglIntVector3Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglIntVectorVariable;  SOFA_CLASS (OglIntVectorVariable, OglVariable< type::vector< GLint > >);  ;  OglIntVectorVariable ();  ; virtual ~OglIntVectorVariable ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< GLint > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:17633,Availability,down,down,17633,"the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  . Constructor details. ◆ OglIntVector3Variable(). sofa::gl::component::shader::OglIntVector3Variable::OglIntVector3Variable ; (; ). ◆ ~OglIntVector3Variable(). sofa::gl::component::shader::OglIntVector3Variable::~OglIntVector3Variable ; (; ). inlineoverride . Function details. ◆ init(). void sofa::gl::component::shader::OglIntVector3Variable::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::gl::component::shader::OglIntVectorVariable. ◆ pushValue(). void sofa::gl::component::shader::OglIntVector3Variable::pushValue ; (; ). overridevirtual . Reimplemented from sofa::gl::component::shader::OglIntVectorVariable. ◆ SOFA_CLASS(). sofa::gl::component::shader::OglIntVector3Variable::SOFA_CLASS ; (; OglIntVector3Variable ; , . OglIntVectorVariable ;  . ). sofaglcomponentshaderOglIntVector3Variable; Generated on Mon Nov 11 2024 03:19:15 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:1400,Deployability,Update,Update,1400,"Public Member Functions;  SOFA_CLASS (OglIntVector3Variable, OglIntVectorVariable);  ;  OglIntVector3Variable ();  ;  ~OglIntVector3Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglIntVectorVariable;  SOFA_CLASS (OglIntVectorVariable, OglVariable< type::vector< GLint > >);  ;  OglIntVectorVariable ();  ; virtual ~OglIntVectorVariable ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< GLint > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resou",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:2203,Deployability,update,updateVisual,2203,"method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:2249,Deployability,update,update,2249,"method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:2305,Deployability,update,updateVisual,2305,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:2914,Deployability,update,update,2914,"T_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render in",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:5404,Deployability,update,updateInternal,5404,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:5424,Deployability,Update,Update,5424,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:9899,Deployability,update,updateLinks,9899,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:9935,Deployability,Update,Update,9935,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:15783,Deployability,update,update,15783,"ring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:4169,Integrability,depend,dependent,4169,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:7764,Integrability,Message,Message,7764," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:7837,Integrability,Message,Message,7837," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:7879,Integrability,Message,Message,7879," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:7949,Integrability,Message,Message,7949," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:8060,Integrability,Message,Message,8060," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:8102,Integrability,Message,Message,8102," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:13098,Integrability,message,messages,13098,"ed int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >; Data< type::vector< GLint > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of field",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:299,Modifiability,Inherit,Inheritance,299,"﻿. SOFA API: sofa::gl::component::shader::OglIntVector3Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglIntVector3Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglIntVector3Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglIntVector3Variable, OglIntVectorVariable);  ;  OglIntVector3Variable ();  ;  ~OglIntVector3Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglIntVectorVariable;  SOFA_CLASS (OglIntVectorVariable, OglVariable< type::vector< GLint > >);  ;  OglIntVectorVariable ();  ; virtual ~OglIntVectorVariable ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< GLint > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:727,Modifiability,inherit,inherited,727,"﻿. SOFA API: sofa::gl::component::shader::OglIntVector3Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglIntVector3Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglIntVector3Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglIntVector3Variable, OglIntVectorVariable);  ;  OglIntVector3Variable ();  ;  ~OglIntVector3Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglIntVectorVariable;  SOFA_CLASS (OglIntVectorVariable, OglVariable< type::vector< GLint > >);  ;  OglIntVectorVariable ();  ; virtual ~OglIntVectorVariable ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< GLint > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:961,Modifiability,inherit,inherited,961,"﻿. SOFA API: sofa::gl::component::shader::OglIntVector3Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglIntVector3Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglIntVector3Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglIntVector3Variable, OglIntVectorVariable);  ;  OglIntVector3Variable ();  ;  ~OglIntVector3Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglIntVectorVariable;  SOFA_CLASS (OglIntVectorVariable, OglVariable< type::vector< GLint > >);  ;  OglIntVectorVariable ();  ; virtual ~OglIntVectorVariable ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< GLint > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:1426,Modifiability,variab,variables,1426,"Public Member Functions;  SOFA_CLASS (OglIntVector3Variable, OglIntVectorVariable);  ;  OglIntVector3Variable ();  ;  ~OglIntVector3Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglIntVectorVariable;  SOFA_CLASS (OglIntVectorVariable, OglVariable< type::vector< GLint > >);  ;  OglIntVectorVariable ();  ; virtual ~OglIntVectorVariable ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< GLint > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resou",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:1655,Modifiability,variab,variable,1655,"method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglIntVectorVariable;  SOFA_CLASS (OglIntVectorVariable, OglVariable< type::vector< GLint > >);  ;  OglIntVectorVariable ();  ; virtual ~OglIntVectorVariable ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< GLint > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:1842,Modifiability,inherit,inherited,1842,">);  ;  OglIntVectorVariable ();  ; virtual ~OglIntVectorVariable ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< GLint > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:3750,Modifiability,inherit,inherited,3750,"id drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; Base",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:5450,Modifiability,variab,variables,5450,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:5492,Modifiability,variab,variables,5492,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:5737,Modifiability,inherit,inherited,5737,"  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:11863,Modifiability,inherit,inherited,11863,"Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >; Data< type::vector< GLint > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:12175,Modifiability,inherit,inherited,12175,"Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >; Data< type::vector< GLint > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:12374,Modifiability,Inherit,Inherited,12374,"ect. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >; Data< type::vector< GLint > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:12412,Modifiability,inherit,inherited,12412,"ect. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >; Data< type::vector< GLint > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:12553,Modifiability,inherit,inherited,12553,"ect. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >; Data< type::vector< GLint > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:12683,Modifiability,inherit,inherited,12683,"plate<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >; Data< type::vector< GLint > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseOb",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:12849,Modifiability,inherit,inherited,12849,"aderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >; Data< type::vector< GLint > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherit",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:13671,Modifiability,inherit,inherited,13671,"nts, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:13925,Modifiability,inherit,inherited,13925,"nts, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:14354,Modifiability,inherit,inherited,14354,"g (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:14706,Modifiability,inherit,inherited,14706,"> l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal upd",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:15106,Modifiability,inherit,inherited,15106,"ring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:15331,Modifiability,inherit,inherited,15331,"ring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:15491,Modifiability,inherit,inherited,15491,"ring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:15617,Modifiability,inherit,inherited,15617,"ring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:16340,Modifiability,inherit,inherited,16340,"ide;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  . Constructor details. ◆ OglIntVector3Variable(). sofa::gl::component::shader::OglIntVector3Variable::OglIntVector3Variable ; (; ). ◆ ~OglIntVector3Variable(). sofa::gl::component::shader::OglIntVector3Variable::~OglIntVector3Variable ; (; ). inlineoverride . Function details. ◆ in",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:17050,Modifiability,inherit,inherited,17050,"thod called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  . Constructor details. ◆ OglIntVector3Variable(). sofa::gl::component::shader::OglIntVector3Variable::OglIntVector3Variable ; (; ). ◆ ~OglIntVector3Variable(). sofa::gl::component::shader::OglIntVector3Variable::~OglIntVector3Variable ; (; ). inlineoverride . Function details. ◆ init(). void sofa::gl::component::shader::OglIntVector3Variable::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::gl::component::shader::OglIntVectorVariable. ◆ pushValue(). void sofa::gl::component::shader::OglIntVector3Variable::pushValue ; (; ). overridevirtual . Reimplemented from sofa::gl::component::shader::OglIntVectorVariable. ◆ SOFA_CLASS(). sofa::gl::component::shader::OglIntVector3Variable::SOFA_CLASS ; (; OglIntVector3Variable ; , . OglIntVectorVariable ;  . ). sofaglcomponentshaderOglIntVector3Variable; Genera",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:4250,Performance,load,loader,4250," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:13438,Performance,Load,Loading,13438,"ed Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >; Data< type::vector< GLint > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::com",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:6271,Security,Access,Accessor,6271,"  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:11216,Security,Access,Accessor,11216," initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:11335,Security,Access,Accessor,11335,"ta (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int ge",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:11446,Security,Access,Accessor,11446,"thod used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::Og",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:11565,Security,Access,Accessor,11565,"Data initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >; Data< type::vector< GLint > > value;  ;  Public Attributes inherited from sofa:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:7755,Testability,log,logging,7755," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:7828,Testability,log,logging,7828," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:7870,Testability,log,logging,7870," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:7940,Testability,log,logging,7940," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:8051,Testability,log,logging,8051," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:8093,Testability,log,logging,8093," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:9917,Testability,log,logErrors,9917,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:2344,Usability,clear,clearVisual,2344,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:2361,Usability,clear,clear,2361,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html:8136,Usability,clear,clearLoggedMessages,8136," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html:13763,Deployability,update,updateInternal,13763,"llptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntVector4Variable, OglIntVectorVariable)sofa::gl::component::shader::OglIntVector4Variable; sofa::gl::component::shader::OglIntVectorVariable::SOFA_CLASS(OglIntVectorVariable, OglVariable< type::vector< GLint > >)sofa::gl::component::shader::OglIntVectorVariable; OglVariable< type::vector< GLint > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< GLint > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< GLint > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglIntVector4Variable() overridesofa::gl::component::shader::OglIntVector4Variableinline; ~OglIntVectorVariable()sofa::gl::component::shader::OglIntVectorVariableinlinevirtual; ~OglS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html:13816,Deployability,update,updateLinks,13816,"a::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntVector4Variable, OglIntVectorVariable)sofa::gl::component::shader::OglIntVector4Variable; sofa::gl::component::shader::OglIntVectorVariable::SOFA_CLASS(OglIntVectorVariable, OglVariable< type::vector< GLint > >)sofa::gl::component::shader::OglIntVectorVariable; OglVariable< type::vector< GLint > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< GLint > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< GLint > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglIntVector4Variable() overridesofa::gl::component::shader::OglIntVector4Variableinline; ~OglIntVectorVariable()sofa::gl::component::shader::OglIntVectorVariableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html:13886,Deployability,update,updateVisual,13886,"::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntVector4Variable, OglIntVectorVariable)sofa::gl::component::shader::OglIntVector4Variable; sofa::gl::component::shader::OglIntVectorVariable::SOFA_CLASS(OglIntVectorVariable, OglVariable< type::vector< GLint > >)sofa::gl::component::shader::OglIntVectorVariable; OglVariable< type::vector< GLint > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< GLint > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< GLint > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglIntVector4Variable() overridesofa::gl::component::shader::OglIntVector4Variableinline; ~OglIntVectorVariable()sofa::gl::component::shader::OglIntVectorVariableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::sh",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html:13953,Deployability,update,updateVisual,13953,"t::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntVector4Variable, OglIntVectorVariable)sofa::gl::component::shader::OglIntVector4Variable; sofa::gl::component::shader::OglIntVectorVariable::SOFA_CLASS(OglIntVectorVariable, OglVariable< type::vector< GLint > >)sofa::gl::component::shader::OglIntVectorVariable; OglVariable< type::vector< GLint > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< GLint > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< GLint > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglIntVector4Variable() overridesofa::gl::component::shader::OglIntVector4Variableinline; ~OglIntVectorVariable()sofa::gl::component::shader::OglIntVectorVariableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlineprotected; ~ShaderE",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html:820,Integrability,Message,Message,820," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvir",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html:2694,Integrability,Message,Message,2694,"::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html:2736,Integrability,Message,Message,2736,"sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core::visual::VisualModelvirtual; exportOBJ(std",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html:5770,Integrability,Message,Message,5770,)sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsof,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html:5812,Integrability,Message,Message,5812,; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags(,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html:272,Modifiability,inherit,inherited,272,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglIntVector4Variable Member List . This is the complete list of members for sofa::gl::component::shader::OglIntVector4Variable, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvir",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html:12307,Performance,load,loader,12307,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setValue(const type::vector< GLint > &v)sofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntVector4Variable, OglIntVectorVariable)sofa::gl::component::shader::OglIntVector4Variable; sofa::gl::component::shader::OglIntVectorVariable::SOFA_CLASS(OglIntVectorVariable, OglVariable< type::vector< GLint > >)sofa::gl::component::shader",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html:811,Testability,log,logging,811," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvir",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html:2685,Testability,log,logging,2685,"ofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalso",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html:2727,Testability,log,logging,2727,"l; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core::visual::VisualModelvirtual; expo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html:5761,Testability,log,logging,5761,GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves(),MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html:5803,Testability,log,logging,5803,inestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject;,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html:13833,Testability,log,logErrors,13833,"_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntVector4Variable, OglIntVectorVariable)sofa::gl::component::shader::OglIntVector4Variable; sofa::gl::component::shader::OglIntVectorVariable::SOFA_CLASS(OglIntVectorVariable, OglVariable< type::vector< GLint > >)sofa::gl::component::shader::OglIntVectorVariable; OglVariable< type::vector< GLint > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< GLint > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< GLint > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglIntVector4Variable() overridesofa::gl::component::shader::OglIntVector4Variableinline; ~OglIntVectorVariable()sofa::gl::component::shader::OglIntVectorVariableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElemen",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html:2435,Usability,clear,clearLoggedMessages,2435,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::ob",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html:2493,Usability,clear,clearVisual,2493,"ore::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const V",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:643,Availability,down,down,643,"﻿. SOFA API: sofa::gl::component::shader::OglIntVector4Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglIntVector4Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglIntVector4Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglIntVector4Variable, OglIntVectorVariable);  ;  OglIntVector4Variable ();  ;  ~OglIntVector4Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglIntVectorVariable;  SOFA_CLASS (OglIntVectorVariable, OglVariable< type::vector< GLint > >);  ;  OglIntVectorVariable ();  ; virtual ~OglIntVectorVariable ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< GLint > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:1278,Availability,down,down,1278,"﻿. SOFA API: sofa::gl::component::shader::OglIntVector4Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglIntVector4Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglIntVector4Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglIntVector4Variable, OglIntVectorVariable);  ;  OglIntVector4Variable ();  ;  ~OglIntVector4Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglIntVectorVariable;  SOFA_CLASS (OglIntVectorVariable, OglVariable< type::vector< GLint > >);  ;  OglIntVectorVariable ();  ; virtual ~OglIntVectorVariable ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< GLint > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:17633,Availability,down,down,17633,"the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  . Constructor details. ◆ OglIntVector4Variable(). sofa::gl::component::shader::OglIntVector4Variable::OglIntVector4Variable ; (; ). ◆ ~OglIntVector4Variable(). sofa::gl::component::shader::OglIntVector4Variable::~OglIntVector4Variable ; (; ). inlineoverride . Function details. ◆ init(). void sofa::gl::component::shader::OglIntVector4Variable::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::gl::component::shader::OglIntVectorVariable. ◆ pushValue(). void sofa::gl::component::shader::OglIntVector4Variable::pushValue ; (; ). overridevirtual . Reimplemented from sofa::gl::component::shader::OglIntVectorVariable. ◆ SOFA_CLASS(). sofa::gl::component::shader::OglIntVector4Variable::SOFA_CLASS ; (; OglIntVector4Variable ; , . OglIntVectorVariable ;  . ). sofaglcomponentshaderOglIntVector4Variable; Generated on Mon Nov 11 2024 03:19:15 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:1400,Deployability,Update,Update,1400,"Public Member Functions;  SOFA_CLASS (OglIntVector4Variable, OglIntVectorVariable);  ;  OglIntVector4Variable ();  ;  ~OglIntVector4Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglIntVectorVariable;  SOFA_CLASS (OglIntVectorVariable, OglVariable< type::vector< GLint > >);  ;  OglIntVectorVariable ();  ; virtual ~OglIntVectorVariable ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< GLint > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resou",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:2203,Deployability,update,updateVisual,2203,"method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:2249,Deployability,update,update,2249,"method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:2305,Deployability,update,updateVisual,2305,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:2914,Deployability,update,update,2914,"T_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render in",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:5404,Deployability,update,updateInternal,5404,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:5424,Deployability,Update,Update,5424,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:9899,Deployability,update,updateLinks,9899,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:9935,Deployability,Update,Update,9935,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:15783,Deployability,update,update,15783,"ring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:4169,Integrability,depend,dependent,4169,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:7764,Integrability,Message,Message,7764," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:7837,Integrability,Message,Message,7837," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:7879,Integrability,Message,Message,7879," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:7949,Integrability,Message,Message,7949," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:8060,Integrability,Message,Message,8060," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:8102,Integrability,Message,Message,8102," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:13098,Integrability,message,messages,13098,"ed int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >; Data< type::vector< GLint > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of field",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:299,Modifiability,Inherit,Inheritance,299,"﻿. SOFA API: sofa::gl::component::shader::OglIntVector4Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglIntVector4Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglIntVector4Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglIntVector4Variable, OglIntVectorVariable);  ;  OglIntVector4Variable ();  ;  ~OglIntVector4Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglIntVectorVariable;  SOFA_CLASS (OglIntVectorVariable, OglVariable< type::vector< GLint > >);  ;  OglIntVectorVariable ();  ; virtual ~OglIntVectorVariable ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< GLint > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:727,Modifiability,inherit,inherited,727,"﻿. SOFA API: sofa::gl::component::shader::OglIntVector4Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglIntVector4Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglIntVector4Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglIntVector4Variable, OglIntVectorVariable);  ;  OglIntVector4Variable ();  ;  ~OglIntVector4Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglIntVectorVariable;  SOFA_CLASS (OglIntVectorVariable, OglVariable< type::vector< GLint > >);  ;  OglIntVectorVariable ();  ; virtual ~OglIntVectorVariable ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< GLint > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:961,Modifiability,inherit,inherited,961,"﻿. SOFA API: sofa::gl::component::shader::OglIntVector4Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglIntVector4Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglIntVector4Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglIntVector4Variable, OglIntVectorVariable);  ;  OglIntVector4Variable ();  ;  ~OglIntVector4Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglIntVectorVariable;  SOFA_CLASS (OglIntVectorVariable, OglVariable< type::vector< GLint > >);  ;  OglIntVectorVariable ();  ; virtual ~OglIntVectorVariable ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< GLint > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:1426,Modifiability,variab,variables,1426,"Public Member Functions;  SOFA_CLASS (OglIntVector4Variable, OglIntVectorVariable);  ;  OglIntVector4Variable ();  ;  ~OglIntVector4Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglIntVectorVariable;  SOFA_CLASS (OglIntVectorVariable, OglVariable< type::vector< GLint > >);  ;  OglIntVectorVariable ();  ; virtual ~OglIntVectorVariable ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< GLint > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resou",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:1655,Modifiability,variab,variable,1655,"method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglIntVectorVariable;  SOFA_CLASS (OglIntVectorVariable, OglVariable< type::vector< GLint > >);  ;  OglIntVectorVariable ();  ; virtual ~OglIntVectorVariable ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< GLint > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:1842,Modifiability,inherit,inherited,1842,">);  ;  OglIntVectorVariable ();  ; virtual ~OglIntVectorVariable ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< GLint > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:3750,Modifiability,inherit,inherited,3750,"id drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; Base",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:5450,Modifiability,variab,variables,5450,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:5492,Modifiability,variab,variables,5492,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:5737,Modifiability,inherit,inherited,5737,"  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:11863,Modifiability,inherit,inherited,11863,"Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >; Data< type::vector< GLint > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:12175,Modifiability,inherit,inherited,12175,"Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >; Data< type::vector< GLint > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:12374,Modifiability,Inherit,Inherited,12374,"ect. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >; Data< type::vector< GLint > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:12412,Modifiability,inherit,inherited,12412,"ect. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >; Data< type::vector< GLint > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:12553,Modifiability,inherit,inherited,12553,"ect. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >; Data< type::vector< GLint > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:12683,Modifiability,inherit,inherited,12683,"plate<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >; Data< type::vector< GLint > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseOb",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:12849,Modifiability,inherit,inherited,12849,"aderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >; Data< type::vector< GLint > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherit",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:13671,Modifiability,inherit,inherited,13671,"nts, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:13925,Modifiability,inherit,inherited,13925,"nts, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:14354,Modifiability,inherit,inherited,14354,"g (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:14706,Modifiability,inherit,inherited,14706,"> l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal upd",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:15106,Modifiability,inherit,inherited,15106,"ring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:15331,Modifiability,inherit,inherited,15331,"ring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:15491,Modifiability,inherit,inherited,15491,"ring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:15617,Modifiability,inherit,inherited,15617,"ring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:16340,Modifiability,inherit,inherited,16340,"ide;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  . Constructor details. ◆ OglIntVector4Variable(). sofa::gl::component::shader::OglIntVector4Variable::OglIntVector4Variable ; (; ). ◆ ~OglIntVector4Variable(). sofa::gl::component::shader::OglIntVector4Variable::~OglIntVector4Variable ; (; ). inlineoverride . Function details. ◆ in",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:17050,Modifiability,inherit,inherited,17050,"thod called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  . Constructor details. ◆ OglIntVector4Variable(). sofa::gl::component::shader::OglIntVector4Variable::OglIntVector4Variable ; (; ). ◆ ~OglIntVector4Variable(). sofa::gl::component::shader::OglIntVector4Variable::~OglIntVector4Variable ; (; ). inlineoverride . Function details. ◆ init(). void sofa::gl::component::shader::OglIntVector4Variable::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::gl::component::shader::OglIntVectorVariable. ◆ pushValue(). void sofa::gl::component::shader::OglIntVector4Variable::pushValue ; (; ). overridevirtual . Reimplemented from sofa::gl::component::shader::OglIntVectorVariable. ◆ SOFA_CLASS(). sofa::gl::component::shader::OglIntVector4Variable::SOFA_CLASS ; (; OglIntVector4Variable ; , . OglIntVectorVariable ;  . ). sofaglcomponentshaderOglIntVector4Variable; Genera",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:4250,Performance,load,loader,4250," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:13438,Performance,Load,Loading,13438,"ed Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >; Data< type::vector< GLint > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::com",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:6271,Security,Access,Accessor,6271,"  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:11216,Security,Access,Accessor,11216," initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:11335,Security,Access,Accessor,11335,"ta (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int ge",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:11446,Security,Access,Accessor,11446,"thod used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::Og",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:11565,Security,Access,Accessor,11565,"Data initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >; Data< type::vector< GLint > > value;  ;  Public Attributes inherited from sofa:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:7755,Testability,log,logging,7755," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:7828,Testability,log,logging,7828," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:7870,Testability,log,logging,7870," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:7940,Testability,log,logging,7940," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:8051,Testability,log,logging,8051," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:8093,Testability,log,logging,8093," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:9917,Testability,log,logErrors,9917,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:2344,Usability,clear,clearVisual,2344,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:2361,Usability,clear,clear,2361,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html:8136,Usability,clear,clearLoggedMessages,8136," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html:13526,Deployability,update,updateInternal,13526,"mesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntVectorVariable, OglVariable< type::vector< GLint > >)sofa::gl::component::shader::OglIntVectorVariable; OglVariable< type::vector< GLint > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< GLint > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< GLint > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglIntVectorVariable()sofa::gl::component::shader::OglIntVectorVariableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html:13579,Deployability,update,updateLinks,13579,"::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntVectorVariable, OglVariable< type::vector< GLint > >)sofa::gl::component::shader::OglIntVectorVariable; OglVariable< type::vector< GLint > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< GLint > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< GLint > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglIntVectorVariable()sofa::gl::component::shader::OglIntVectorVariableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::shader::OglVariable< t",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html:13649,Deployability,update,updateVisual,13649,"=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntVectorVariable, OglVariable< type::vector< GLint > >)sofa::gl::component::shader::OglIntVectorVariable; OglVariable< type::vector< GLint > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< GLint > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< GLint > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglIntVectorVariable()sofa::gl::component::shader::OglIntVectorVariableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlineprotected; ~ShaderElement() overridesofa::c",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html:13716,Deployability,update,updateVisual,13716,"Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntVectorVariable, OglVariable< type::vector< GLint > >)sofa::gl::component::shader::OglIntVectorVariable; OglVariable< type::vector< GLint > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< GLint > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< GLint > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglIntVectorVariable()sofa::gl::component::shader::OglIntVectorVariableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlineprotected; ~ShaderElement() overridesofa::core::visual::ShaderElementinlineprotected; ~VisualModel() overrides",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html:818,Integrability,Message,Message,818," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html:2692,Integrability,Message,Message,2692,"::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html:2734,Integrability,Message,Message,2734,"sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core::visual::VisualModelvirtual; exportOBJ(std",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html:5768,Integrability,Message,Message,5768,)sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsof,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html:5810,Integrability,Message,Message,5810,; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags(,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html:270,Modifiability,inherit,inherited,270,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglIntVectorVariable Member List . This is the complete list of members for sofa::gl::component::shader::OglIntVectorVariable, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html:12228,Performance,load,loader,12228,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setValue(const type::vector< GLint > &v)sofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntVectorVariable, OglVariable< type::vector< GLint > >)sofa::gl::component::shader::OglIntVectorVariable; OglVariable< type::vector< GLint > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html:809,Testability,log,logging,809," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html:2683,Testability,log,logging,2683,"ofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalso",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html:2725,Testability,log,logging,2725,"l; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core::visual::VisualModelvirtual; expo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html:5759,Testability,log,logging,5759,GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves(),MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html:5801,Testability,log,logging,5801,inestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject;,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html:13596,Testability,log,logErrors,13596,"der::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntVectorVariable, OglVariable< type::vector< GLint > >)sofa::gl::component::shader::OglIntVectorVariable; OglVariable< type::vector< GLint > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< GLint > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< GLint > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglIntVectorVariable()sofa::gl::component::shader::OglIntVectorVariableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::shader::OglVariable< type::vector< GLi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html:2433,Usability,clear,clearLoggedMessages,2433,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::ob",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html:2491,Usability,clear,clearVisual,2491,"ore::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const V",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:695,Availability,down,down,695,"﻿. SOFA API: sofa::gl::component::shader::OglIntVectorVariable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglIntVectorVariable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglIntVectorVariable:. [legend]; Detailed Description; INT VECTOR VARIABLE . Public Member Functions;  SOFA_CLASS (OglIntVectorVariable, OglVariable< type::vector< GLint > >);  ;  OglIntVectorVariable ();  ; virtual ~OglIntVectorVariable ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< GLint > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisua",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:1096,Availability,down,down,1096,"﻿. SOFA API: sofa::gl::component::shader::OglIntVectorVariable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglIntVectorVariable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglIntVectorVariable:. [legend]; Detailed Description; INT VECTOR VARIABLE . Public Member Functions;  SOFA_CLASS (OglIntVectorVariable, OglVariable< type::vector< GLint > >);  ;  OglIntVectorVariable ();  ; virtual ~OglIntVectorVariable ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< GLint > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisua",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:17451,Availability,down,down,17451,"bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  . Constructor details. ◆ OglIntVectorVariable(). sofa::gl::component::shader::OglIntVectorVariable::OglIntVectorVariable ; (; ). ◆ ~OglIntVectorVariable(). virtual sofa::gl::component::shader::OglIntVectorVariable::~OglIntVectorVariable ; (; ). inlinevirtual . Function details. ◆ init(). void sofa::gl::component::shader::OglIntVectorVariable::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::gl::component::shader::OglShaderElement.; Reimplemented in sofa::gl::component::shader::OglIntVector4Variable, sofa::gl::component::shader::OglIntVector3Variable, and sofa::gl::component::shader::OglIntVector2Variable. ◆ pushValue(). void sofa::gl::component::shader::OglIntVectorVariable::pushValue ; (; ). overridevirtual . Implements sofa::gl::component::shader::OglVariable< type::vector< GLint > >.; Reimplemented in sofa::gl::component::shader::OglIntVector4Variable, sofa::gl::component::shader::OglIntVector3Variable, and sofa::gl::component::shader::OglIntVector2Variable. ◆ SOFA_CLASS(). sofa::gl::component::shader::OglIntVectorVariable::SOFA_CLASS ; (; OglIntVectorVariable ; , . OglVariable< type::vector< GLint > > ;  . ). sofaglcomponentshaderOglIntVectorVariable; Generated on Mon Nov 11 2024 03:19:15 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:1218,Deployability,Update,Update,1218,"ofa::gl::component::shader::OglIntVectorVariable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglIntVectorVariable:. [legend]; Detailed Description; INT VECTOR VARIABLE . Public Member Functions;  SOFA_CLASS (OglIntVectorVariable, OglVariable< type::vector< GLint > >);  ;  OglIntVectorVariable ();  ; virtual ~OglIntVectorVariable ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< GLint > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resou",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:2021,Deployability,update,updateVisual,2021,"method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:2067,Deployability,update,update,2067,"method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:2123,Deployability,update,updateVisual,2123,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:2732,Deployability,update,update,2732,"T_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render in",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:5222,Deployability,update,updateInternal,5222,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:5242,Deployability,Update,Update,5242,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:9717,Deployability,update,updateLinks,9717,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:9753,Deployability,Update,Update,9753,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:15601,Deployability,update,update,15601,"ring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:3987,Integrability,depend,dependent,3987,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:7582,Integrability,Message,Message,7582," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:7655,Integrability,Message,Message,7655," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:7697,Integrability,Message,Message,7697," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:7767,Integrability,Message,Message,7767," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:7878,Integrability,Message,Message,7878," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:7920,Integrability,Message,Message,7920," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:12916,Integrability,message,messages,12916,"ed int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >; Data< type::vector< GLint > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of field",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:297,Modifiability,Inherit,Inheritance,297,"﻿. SOFA API: sofa::gl::component::shader::OglIntVectorVariable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglIntVectorVariable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglIntVectorVariable:. [legend]; Detailed Description; INT VECTOR VARIABLE . Public Member Functions;  SOFA_CLASS (OglIntVectorVariable, OglVariable< type::vector< GLint > >);  ;  OglIntVectorVariable ();  ; virtual ~OglIntVectorVariable ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< GLint > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisua",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:416,Modifiability,VARIAB,VARIABLE,416,"﻿. SOFA API: sofa::gl::component::shader::OglIntVectorVariable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglIntVectorVariable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglIntVectorVariable:. [legend]; Detailed Description; INT VECTOR VARIABLE . Public Member Functions;  SOFA_CLASS (OglIntVectorVariable, OglVariable< type::vector< GLint > >);  ;  OglIntVectorVariable ();  ; virtual ~OglIntVectorVariable ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< GLint > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisua",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:779,Modifiability,inherit,inherited,779,"﻿. SOFA API: sofa::gl::component::shader::OglIntVectorVariable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglIntVectorVariable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglIntVectorVariable:. [legend]; Detailed Description; INT VECTOR VARIABLE . Public Member Functions;  SOFA_CLASS (OglIntVectorVariable, OglVariable< type::vector< GLint > >);  ;  OglIntVectorVariable ();  ; virtual ~OglIntVectorVariable ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< GLint > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisua",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:1244,Modifiability,variab,variables,1244,"ofa::gl::component::shader::OglIntVectorVariable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglIntVectorVariable:. [legend]; Detailed Description; INT VECTOR VARIABLE . Public Member Functions;  SOFA_CLASS (OglIntVectorVariable, OglVariable< type::vector< GLint > >);  ;  OglIntVectorVariable ();  ; virtual ~OglIntVectorVariable ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< GLint > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resou",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:1473,Modifiability,variab,variable,1473,"ion; INT VECTOR VARIABLE . Public Member Functions;  SOFA_CLASS (OglIntVectorVariable, OglVariable< type::vector< GLint > >);  ;  OglIntVectorVariable ();  ; virtual ~OglIntVectorVariable ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< GLint > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:1660,Modifiability,inherit,inherited,1660,"n, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< GLint > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:3568,Modifiability,inherit,inherited,3568,"id drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; Base",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:5268,Modifiability,variab,variables,5268,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:5310,Modifiability,variab,variables,5310,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:5555,Modifiability,inherit,inherited,5555,"  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:11681,Modifiability,inherit,inherited,11681,"Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >; Data< type::vector< GLint > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:11993,Modifiability,inherit,inherited,11993,"Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >; Data< type::vector< GLint > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:12192,Modifiability,Inherit,Inherited,12192,"ect. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >; Data< type::vector< GLint > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:12230,Modifiability,inherit,inherited,12230,"ect. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >; Data< type::vector< GLint > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:12371,Modifiability,inherit,inherited,12371,"ect. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >; Data< type::vector< GLint > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:12501,Modifiability,inherit,inherited,12501,"plate<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >; Data< type::vector< GLint > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseOb",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:12667,Modifiability,inherit,inherited,12667,"aderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >; Data< type::vector< GLint > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherit",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:13489,Modifiability,inherit,inherited,13489,"nts, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:13743,Modifiability,inherit,inherited,13743,"nts, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:14172,Modifiability,inherit,inherited,14172,"g (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:14524,Modifiability,inherit,inherited,14524,"> l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal upd",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:14924,Modifiability,inherit,inherited,14924,"ring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:15149,Modifiability,inherit,inherited,15149,"ring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:15309,Modifiability,inherit,inherited,15309,"ring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:15435,Modifiability,inherit,inherited,15435,"ring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:16158,Modifiability,inherit,inherited,16158,"ide;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  . Constructor details. ◆ OglIntVectorVariable(). sofa::gl::component::shader::OglIntVectorVariable::OglIntVectorVariable ; (; ). ◆ ~OglIntVectorVariable(). virtual sofa::gl::component::shader::OglIntVectorVariable::~OglIntVectorVariable ; (; ). inlinevirtual . Function details. ◆ i",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:16868,Modifiability,inherit,inherited,16868,"thod called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  . Constructor details. ◆ OglIntVectorVariable(). sofa::gl::component::shader::OglIntVectorVariable::OglIntVectorVariable ; (; ). ◆ ~OglIntVectorVariable(). virtual sofa::gl::component::shader::OglIntVectorVariable::~OglIntVectorVariable ; (; ). inlinevirtual . Function details. ◆ init(). void sofa::gl::component::shader::OglIntVectorVariable::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::gl::component::shader::OglShaderElement.; Reimplemented in sofa::gl::component::shader::OglIntVector4Variable, sofa::gl::component::shader::OglIntVector3Variable, and sofa::gl::component::shader::OglIntVector2Variable. ◆ pushValue(). void sofa::gl::component::shader::OglIntVectorVariable::pushValue ; (; ). overridevirtual . Implements sofa::gl::component::shader::OglVariable< type::vector< GLint > >.; Reimpleme",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:4068,Performance,load,loader,4068," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:13256,Performance,Load,Loading,13256,"ed Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >; Data< type::vector< GLint > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::com",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:6089,Security,Access,Accessor,6089,"  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:11034,Security,Access,Accessor,11034," initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:11153,Security,Access,Accessor,11153,"ta (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int ge",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:11264,Security,Access,Accessor,11264,"thod used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::Og",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:11383,Security,Access,Accessor,11383,"Data initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >; Data< type::vector< GLint > > value;  ;  Public Attributes inherited from sofa:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:7573,Testability,log,logging,7573," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:7646,Testability,log,logging,7646," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:7688,Testability,log,logging,7688," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:7758,Testability,log,logging,7758," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:7869,Testability,log,logging,7869," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:7911,Testability,log,logging,7911," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:9735,Testability,log,logErrors,9735,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:2162,Usability,clear,clearVisual,2162,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:2179,Usability,clear,clear,2179,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:7954,Usability,clear,clearLoggedMessages,7954," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html:13890,Deployability,update,updateInternal,13890," sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix2x3Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix2x3Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix2x3Variable() overridesofa::gl::component::shader::OglMatrix2x3Variableinline; ~OglShaderE",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html:13943,Deployability,update,updateLinks,13943,":BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix2x3Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix2x3Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix2x3Variable() overridesofa::gl::component::shader::OglMatrix2x3Variableinline; ~OglShaderElement() overridesofa::gl::component::shader::OglSh",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html:14013,Deployability,update,updateVisual,14013,"er::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix2x3Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix2x3Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix2x3Variable() overridesofa::gl::component::shader::OglMatrix2x3Variableinline; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::shader::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html:14080,Deployability,update,updateVisual,14080,"l::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix2x3Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix2x3Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix2x3Variable() overridesofa::gl::component::shader::OglMatrix2x3Variableinline; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlineprotected; ~ShaderElement",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html:818,Integrability,Message,Message,818," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html:2692,Integrability,Message,Message,2692,"::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html:2734,Integrability,Message,Message,2734,"sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core::visual::VisualModelvirtual; exportOBJ(std",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html:5768,Integrability,Message,Message,5768,) constsofa::core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsof,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html:5810,Integrability,Message,Message,5810,virtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags(,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html:270,Modifiability,inherit,inherited,270,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglMatrix2x3Variable Member List . This is the complete list of members for sofa::gl::component::shader::OglMatrix2x3Variable, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html:12297,Performance,load,loader,12297,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTranspose(const bool &v)sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; setValue(const type::vector< float > &v)sofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix2x3Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix2x3Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(Ogl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html:809,Testability,log,logging,809," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html:2683,Testability,log,logging,2683,"ofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalso",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html:2725,Testability,log,logging,2725,"l; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core::visual::VisualModelvirtual; expo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html:5759,Testability,log,logging,5759,getClass() constsofa::core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves(),MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html:5801,Testability,log,logging,5801,aseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject;,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html:13960,Testability,log,logErrors,13960,"::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix2x3Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix2x3Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix2x3Variable() overridesofa::gl::component::shader::OglMatrix2x3Variableinline; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinlin",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html:2433,Usability,clear,clearLoggedMessages,2433,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::ob",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html:2491,Usability,clear,clearVisual,2491,"ore::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const V",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:635,Availability,down,down,635,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix2x3Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix2x3Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix2x3Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglMatrix2x3Variable, OglMatrix2Variable);  ;  OglMatrix2x3Variable ();  ;  ~OglMatrix2x3Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void draw",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:1308,Availability,down,down,1308,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix2x3Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix2x3Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix2x3Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglMatrix2x3Variable, OglMatrix2Variable);  ;  OglMatrix2x3Variable ();  ;  ~OglMatrix2x3Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void draw",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:17843,Availability,down,down,17843,"Tracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  . Constructor details. ◆ OglMatrix2x3Variable(). sofa::gl::component::shader::OglMatrix2x3Variable::OglMatrix2x3Variable ; (; ). ◆ ~OglMatrix2x3Variable(). sofa::gl::component::shader::OglMatrix2x3Variable::~OglMatrix2x3Variable ; (; ). inlineoverride . Function details. ◆ init(). void sofa::gl::component::shader::OglMatrix2x3Variable::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::gl::component::shader::OglMatrix2Variable. ◆ pushValue(). void sofa::gl::component::shader::OglMatrix2x3Variable::pushValue ; (; ). overridevirtual . Reimplemented from sofa::gl::component::shader::OglMatrix2Variable. ◆ SOFA_CLASS(). sofa::gl::component::shader::OglMatrix2x3Variable::SOFA_CLASS ; (; OglMatrix2x3Variable ; , . OglMatrix2Variable ;  . ). sofaglcomponentshaderOglMatrix2x3Variable; Generated on Mon Nov 11 2024 03:19:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:1430,Deployability,Update,Update,1430,"ASS (OglMatrix2x3Variable, OglMatrix2Variable);  ;  OglMatrix2x3Variable ();  ;  ~OglMatrix2x3Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resou",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:2233,Deployability,update,updateVisual,2233,"method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:2279,Deployability,update,update,2279,"method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:2335,Deployability,update,updateVisual,2335,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:2944,Deployability,update,update,2944,"T_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render in",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:5434,Deployability,update,updateInternal,5434,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:5454,Deployability,Update,Update,5454,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:9929,Deployability,update,updateLinks,9929,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:9965,Deployability,Update,Update,9965,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:16000,Deployability,update,update,16000,"ring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:4199,Integrability,depend,dependent,4199,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:7794,Integrability,Message,Message,7794," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:7867,Integrability,Message,Message,7867," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:7909,Integrability,Message,Message,7909," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:7979,Integrability,Message,Message,7979," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:8090,Integrability,Message,Message,8090," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:8132,Integrability,Message,Message,8132," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:13315,Integrability,message,messages,13315,"odel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglMatrix2Variable; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of field",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:297,Modifiability,Inherit,Inheritance,297,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix2x3Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix2x3Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix2x3Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglMatrix2x3Variable, OglMatrix2Variable);  ;  OglMatrix2x3Variable ();  ;  ~OglMatrix2x3Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void draw",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:719,Modifiability,inherit,inherited,719,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix2x3Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix2x3Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix2x3Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglMatrix2x3Variable, OglMatrix2Variable);  ;  OglMatrix2x3Variable ();  ;  ~OglMatrix2x3Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void draw",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:991,Modifiability,inherit,inherited,991,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix2x3Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix2x3Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix2x3Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglMatrix2x3Variable, OglMatrix2Variable);  ;  OglMatrix2x3Variable ();  ;  ~OglMatrix2x3Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void draw",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:1456,Modifiability,variab,variables,1456,"ASS (OglMatrix2x3Variable, OglMatrix2Variable);  ;  OglMatrix2x3Variable ();  ;  ~OglMatrix2x3Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resou",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:1685,Modifiability,variab,variable,1685,"dification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:1872,Modifiability,inherit,inherited,1872,"~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:3780,Modifiability,inherit,inherited,3780,"id drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; Base",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:5480,Modifiability,variab,variables,5480,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:5522,Modifiability,variab,variables,5522,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:5767,Modifiability,inherit,inherited,5767,"  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:11893,Modifiability,inherit,inherited,11893,"Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglMatrix2Variable; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the e",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:12205,Modifiability,inherit,inherited,12205,"Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglMatrix2Variable; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the e",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:12404,Modifiability,Inherit,Inherited,12404,";  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglMatrix2Variable; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::Bound",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:12442,Modifiability,inherit,inherited,12442,";  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglMatrix2Variable; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::Bound",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:12629,Modifiability,inherit,inherited,12629,"path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglMatrix2Variable; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:12770,Modifiability,inherit,inherited,12770,"path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglMatrix2Variable; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:12900,Modifiability,inherit,inherited,12900,"lShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglMatrix2Variable; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseOb",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:13066,Modifiability,inherit,inherited,13066,"& getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglMatrix2Variable; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherit",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:13888,Modifiability,inherit,inherited,13888,"nts, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:14142,Modifiability,inherit,inherited,14142,"nts, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:14571,Modifiability,inherit,inherited,14571,"g (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:14923,Modifiability,inherit,inherited,14923,"> l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal upd",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:15323,Modifiability,inherit,inherited,15323,"ring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:15548,Modifiability,inherit,inherited,15548,"ring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:15708,Modifiability,inherit,inherited,15708,"ring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:15834,Modifiability,inherit,inherited,15834,"ring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:16557,Modifiability,inherit,inherited,16557,"ide;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  . Constructor details. ◆ OglMatrix2x3Variable(). sofa::gl::component::shader::OglMatrix2x3Variable::OglMatrix2x3Variable ; (; ). ◆ ~OglMatrix2x3Variable(). sofa::gl::component::shader::OglMatrix2x3Variable::~OglMatrix2x3Variable ; (; ). inlineoverride . Function details. ◆ init(). ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:17267,Modifiability,inherit,inherited,17267,"thod called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  . Constructor details. ◆ OglMatrix2x3Variable(). sofa::gl::component::shader::OglMatrix2x3Variable::OglMatrix2x3Variable ; (; ). ◆ ~OglMatrix2x3Variable(). sofa::gl::component::shader::OglMatrix2x3Variable::~OglMatrix2x3Variable ; (; ). inlineoverride . Function details. ◆ init(). void sofa::gl::component::shader::OglMatrix2x3Variable::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::gl::component::shader::OglMatrix2Variable. ◆ pushValue(). void sofa::gl::component::shader::OglMatrix2x3Variable::pushValue ; (; ). overridevirtual . Reimplemented from sofa::gl::component::shader::OglMatrix2Variable. ◆ SOFA_CLASS(). sofa::gl::component::shader::OglMatrix2x3Variable::SOFA_CLASS ; (; OglMatrix2x3Variable ; , . OglMatrix2Variable ;  . ). sofaglcomponentshaderOglMatrix2x3Variable; Generated on Mon Nov 11",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:4280,Performance,load,loader,4280," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:13655,Performance,Load,Loading,13655,"More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::com",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:6301,Security,Access,Accessor,6301,"  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:11246,Security,Access,Accessor,11246," initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:11365,Security,Access,Accessor,11365,"ta (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int ge",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:11476,Security,Access,Accessor,11476,"thod used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::Og",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:11595,Security,Access,Accessor,11595,"Data initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglMatrix2Variable; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:7785,Testability,log,logging,7785," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:7858,Testability,log,logging,7858," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:7900,Testability,log,logging,7900," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:7970,Testability,log,logging,7970," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:8081,Testability,log,logging,8081," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:8123,Testability,log,logging,8123," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:9947,Testability,log,logErrors,9947,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:2374,Usability,clear,clearVisual,2374,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:2391,Usability,clear,clear,2391,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:8166,Usability,clear,clearLoggedMessages,8166," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html:13890,Deployability,update,updateInternal,13890," sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix2x4Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix2x4Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix2x4Variable() overridesofa::gl::component::shader::OglMatrix2x4Variableinline; ~OglShaderE",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html:13943,Deployability,update,updateLinks,13943,":BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix2x4Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix2x4Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix2x4Variable() overridesofa::gl::component::shader::OglMatrix2x4Variableinline; ~OglShaderElement() overridesofa::gl::component::shader::OglSh",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html:14013,Deployability,update,updateVisual,14013,"er::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix2x4Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix2x4Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix2x4Variable() overridesofa::gl::component::shader::OglMatrix2x4Variableinline; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::shader::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html:14080,Deployability,update,updateVisual,14080,"l::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix2x4Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix2x4Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix2x4Variable() overridesofa::gl::component::shader::OglMatrix2x4Variableinline; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlineprotected; ~ShaderElement",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html:818,Integrability,Message,Message,818," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html:2692,Integrability,Message,Message,2692,"::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html:2734,Integrability,Message,Message,2734,"sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core::visual::VisualModelvirtual; exportOBJ(std",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html:5768,Integrability,Message,Message,5768,) constsofa::core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsof,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html:5810,Integrability,Message,Message,5810,virtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags(,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html:270,Modifiability,inherit,inherited,270,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglMatrix2x4Variable Member List . This is the complete list of members for sofa::gl::component::shader::OglMatrix2x4Variable, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html:12297,Performance,load,loader,12297,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTranspose(const bool &v)sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; setValue(const type::vector< float > &v)sofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix2x4Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix2x4Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(Ogl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html:809,Testability,log,logging,809," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html:2683,Testability,log,logging,2683,"ofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalso",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html:2725,Testability,log,logging,2725,"l; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core::visual::VisualModelvirtual; expo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html:5759,Testability,log,logging,5759,getClass() constsofa::core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves(),MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html:5801,Testability,log,logging,5801,aseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject;,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html:13960,Testability,log,logErrors,13960,"::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix2x4Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix2x4Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix2x4Variable() overridesofa::gl::component::shader::OglMatrix2x4Variableinline; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinlin",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html:2433,Usability,clear,clearLoggedMessages,2433,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::ob",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html:2491,Usability,clear,clearVisual,2491,"ore::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const V",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:635,Availability,down,down,635,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix2x4Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix2x4Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix2x4Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglMatrix2x4Variable, OglMatrix2Variable);  ;  OglMatrix2x4Variable ();  ;  ~OglMatrix2x4Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void draw",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:1308,Availability,down,down,1308,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix2x4Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix2x4Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix2x4Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglMatrix2x4Variable, OglMatrix2Variable);  ;  OglMatrix2x4Variable ();  ;  ~OglMatrix2x4Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void draw",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:17843,Availability,down,down,17843,"Tracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  . Constructor details. ◆ OglMatrix2x4Variable(). sofa::gl::component::shader::OglMatrix2x4Variable::OglMatrix2x4Variable ; (; ). ◆ ~OglMatrix2x4Variable(). sofa::gl::component::shader::OglMatrix2x4Variable::~OglMatrix2x4Variable ; (; ). inlineoverride . Function details. ◆ init(). void sofa::gl::component::shader::OglMatrix2x4Variable::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::gl::component::shader::OglMatrix2Variable. ◆ pushValue(). void sofa::gl::component::shader::OglMatrix2x4Variable::pushValue ; (; ). overridevirtual . Reimplemented from sofa::gl::component::shader::OglMatrix2Variable. ◆ SOFA_CLASS(). sofa::gl::component::shader::OglMatrix2x4Variable::SOFA_CLASS ; (; OglMatrix2x4Variable ; , . OglMatrix2Variable ;  . ). sofaglcomponentshaderOglMatrix2x4Variable; Generated on Mon Nov 11 2024 03:19:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:1430,Deployability,Update,Update,1430,"ASS (OglMatrix2x4Variable, OglMatrix2Variable);  ;  OglMatrix2x4Variable ();  ;  ~OglMatrix2x4Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resou",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:2233,Deployability,update,updateVisual,2233,"method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:2279,Deployability,update,update,2279,"method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:2335,Deployability,update,updateVisual,2335,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:2944,Deployability,update,update,2944,"T_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render in",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:5434,Deployability,update,updateInternal,5434,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:5454,Deployability,Update,Update,5454,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:9929,Deployability,update,updateLinks,9929,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:9965,Deployability,Update,Update,9965,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:16000,Deployability,update,update,16000,"ring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:4199,Integrability,depend,dependent,4199,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:7794,Integrability,Message,Message,7794," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:7867,Integrability,Message,Message,7867," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:7909,Integrability,Message,Message,7909," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:7979,Integrability,Message,Message,7979," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:8090,Integrability,Message,Message,8090," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:8132,Integrability,Message,Message,8132," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:13315,Integrability,message,messages,13315,"odel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglMatrix2Variable; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of field",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:297,Modifiability,Inherit,Inheritance,297,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix2x4Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix2x4Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix2x4Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglMatrix2x4Variable, OglMatrix2Variable);  ;  OglMatrix2x4Variable ();  ;  ~OglMatrix2x4Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void draw",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:719,Modifiability,inherit,inherited,719,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix2x4Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix2x4Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix2x4Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglMatrix2x4Variable, OglMatrix2Variable);  ;  OglMatrix2x4Variable ();  ;  ~OglMatrix2x4Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void draw",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:991,Modifiability,inherit,inherited,991,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix2x4Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix2x4Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix2x4Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglMatrix2x4Variable, OglMatrix2Variable);  ;  OglMatrix2x4Variable ();  ;  ~OglMatrix2x4Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void draw",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:1456,Modifiability,variab,variables,1456,"ASS (OglMatrix2x4Variable, OglMatrix2Variable);  ;  OglMatrix2x4Variable ();  ;  ~OglMatrix2x4Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resou",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:1685,Modifiability,variab,variable,1685,"dification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:1872,Modifiability,inherit,inherited,1872,"~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:3780,Modifiability,inherit,inherited,3780,"id drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; Base",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:5480,Modifiability,variab,variables,5480,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:5522,Modifiability,variab,variables,5522,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:5767,Modifiability,inherit,inherited,5767,"  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:11893,Modifiability,inherit,inherited,11893,"Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglMatrix2Variable; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the e",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:12205,Modifiability,inherit,inherited,12205,"Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglMatrix2Variable; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the e",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:12404,Modifiability,Inherit,Inherited,12404,";  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglMatrix2Variable; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::Bound",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:12442,Modifiability,inherit,inherited,12442,";  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglMatrix2Variable; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::Bound",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:12629,Modifiability,inherit,inherited,12629,"path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglMatrix2Variable; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:12770,Modifiability,inherit,inherited,12770,"path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglMatrix2Variable; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:12900,Modifiability,inherit,inherited,12900,"lShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglMatrix2Variable; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseOb",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:13066,Modifiability,inherit,inherited,13066,"& getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglMatrix2Variable; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherit",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:13888,Modifiability,inherit,inherited,13888,"nts, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:14142,Modifiability,inherit,inherited,14142,"nts, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:14571,Modifiability,inherit,inherited,14571,"g (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:14923,Modifiability,inherit,inherited,14923,"> l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal upd",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:15323,Modifiability,inherit,inherited,15323,"ring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:15548,Modifiability,inherit,inherited,15548,"ring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:15708,Modifiability,inherit,inherited,15708,"ring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:15834,Modifiability,inherit,inherited,15834,"ring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:16557,Modifiability,inherit,inherited,16557,"ide;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  . Constructor details. ◆ OglMatrix2x4Variable(). sofa::gl::component::shader::OglMatrix2x4Variable::OglMatrix2x4Variable ; (; ). ◆ ~OglMatrix2x4Variable(). sofa::gl::component::shader::OglMatrix2x4Variable::~OglMatrix2x4Variable ; (; ). inlineoverride . Function details. ◆ init(). ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:17267,Modifiability,inherit,inherited,17267,"thod called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  . Constructor details. ◆ OglMatrix2x4Variable(). sofa::gl::component::shader::OglMatrix2x4Variable::OglMatrix2x4Variable ; (; ). ◆ ~OglMatrix2x4Variable(). sofa::gl::component::shader::OglMatrix2x4Variable::~OglMatrix2x4Variable ; (; ). inlineoverride . Function details. ◆ init(). void sofa::gl::component::shader::OglMatrix2x4Variable::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::gl::component::shader::OglMatrix2Variable. ◆ pushValue(). void sofa::gl::component::shader::OglMatrix2x4Variable::pushValue ; (; ). overridevirtual . Reimplemented from sofa::gl::component::shader::OglMatrix2Variable. ◆ SOFA_CLASS(). sofa::gl::component::shader::OglMatrix2x4Variable::SOFA_CLASS ; (; OglMatrix2x4Variable ; , . OglMatrix2Variable ;  . ). sofaglcomponentshaderOglMatrix2x4Variable; Generated on Mon Nov 11",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:4280,Performance,load,loader,4280," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:13655,Performance,Load,Loading,13655,"More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::com",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:6301,Security,Access,Accessor,6301,"  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:11246,Security,Access,Accessor,11246," initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:11365,Security,Access,Accessor,11365,"ta (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int ge",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:11476,Security,Access,Accessor,11476,"thod used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::Og",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:11595,Security,Access,Accessor,11595,"Data initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglMatrix2Variable; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:7785,Testability,log,logging,7785," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:7858,Testability,log,logging,7858," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:7900,Testability,log,logging,7900," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:7970,Testability,log,logging,7970," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:8081,Testability,log,logging,8081," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:8123,Testability,log,logging,8123," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:9947,Testability,log,logErrors,9947,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:2374,Usability,clear,clearVisual,2374,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:2391,Usability,clear,clear,2391,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html:8166,Usability,clear,clearLoggedMessages,8166," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html:13657,Deployability,update,updateInternal,13657,"component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() over",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html:13710,Deployability,update,updateLinks,13710,"ame(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::shader::OglVariable< type:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html:13780,Deployability,update,updateVisual,13780,"objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlineprotected; ~ShaderElement() overridesofa::core:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html:13847,Deployability,update,updateVisual,13847,"l, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlineprotected; ~ShaderElement() overridesofa::core::visual::ShaderElementinlineprotected; ~VisualModel() overridesofa:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html:814,Integrability,Message,Message,814," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html:2688,Integrability,Message,Message,2688,"::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html:2730,Integrability,Message,Message,2730,"sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core::visual::VisualModelvirtual; exportOBJ(std",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html:5764,Integrability,Message,Message,5764,)sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsof,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html:5806,Integrability,Message,Message,5806,; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags(,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html:266,Modifiability,inherit,inherited,266,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglMatrix2Variable Member List . This is the complete list of members for sofa::gl::component::shader::OglMatrix2Variable, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html:12216,Performance,load,loader,12216,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTranspose(const bool &v)sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; setValue(const type::vector< float > &v)sofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html:805,Testability,log,logging,805," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html:2679,Testability,log,logging,2679,"ofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalso",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html:2721,Testability,log,logging,2721,"l; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core::visual::VisualModelvirtual; expo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html:5755,Testability,log,logging,5755,GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves(),MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html:5797,Testability,log,logging,5797,inestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject;,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html:13727,Testability,log,logErrors,13727,"=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::shader::OglVariable< type::vector< float >",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html:2429,Usability,clear,clearLoggedMessages,2429,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::ob",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html:2487,Usability,clear,clearVisual,2487,"ore::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const V",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:2125,Availability,down,down,2125," events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * get",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:2526,Availability,down,down,2526,"s;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Ini",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:17783,Availability,down,down,17783," by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  . Attribute details. ◆ transpose. Data<bool> sofa::gl::component::shader::OglMatrix2Variable::transpose. Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. . Constructor details. ◆ OglMatrix2Variable(). sofa::gl::component::shader::OglMatrix2Variable::OglMatrix2Variable ; (; ). ◆ ~OglMatrix2Variable(). virtual sofa::gl::component::shader::OglMatrix2Variable::~OglMatrix2Variable ; (; ). inlinevirtual . Function details. ◆ init(). void sofa::gl::component::shader::OglMatrix2Variable::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::gl::component::shader::OglShaderElement.; Reimplemented in sofa::gl::component::shader::OglMatrix4x3Variable, sofa::gl::component::shader::OglMatrix3x4Variable, sofa::gl::component::shader::OglMatrix4x2Variable, sofa::gl::component::shader::OglMatrix2x4Variable, sofa::gl::component::shader::OglMatrix3x2Variable, sofa::gl::component::shader::OglMatrix2x3Variable, sofa::gl::component::shader::OglMatrix4Variable, and sofa::gl::component::shader::OglMatrix3Variable. ◆ pushValue(). void sofa::gl::component::shader::OglMatrix2Variable::pushValue ; (; ). overridevirtual . Implements sofa::gl::component::shader::OglVariable< type::vector< float > >.; Reimplemented in sofa::gl::component::shader::OglMatrix4x3Variable, sofa::gl::component::shader::OglMatrix3x4Variable, sofa::gl::component::shader::OglMatrix4x2Variable, sofa::gl::component::shader::OglMatrix2x4Variable, sofa::gl::component::shader::OglMatrix3x2Variable, sof",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:2648,Deployability,Update,Update,2648," ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resou",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:3451,Deployability,update,updateVisual,3451,"method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:3497,Deployability,update,update,3497,"method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:3553,Deployability,update,updateVisual,3553,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:4162,Deployability,update,update,4162,"T_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render in",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:6652,Deployability,update,updateInternal,6652,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:6672,Deployability,Update,Update,6672,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:11147,Deployability,update,updateLinks,11147,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:11183,Deployability,Update,Update,11183,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:15775,Deployability,update,update,15775,"ring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:1266,Integrability,message,messages,1266,":OglMatrix2Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix2Variable:. [legend]; Detailed Description; Matrix VARIABLE . Public Attributes; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shade",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:5417,Integrability,depend,dependent,5417,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:9012,Integrability,Message,Message,9012," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:9085,Integrability,Message,Message,9085," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:9127,Integrability,Message,Message,9127," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:9197,Integrability,Message,Message,9197," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:9308,Integrability,Message,Message,9308," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:9350,Integrability,Message,Message,9350," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:314,Modifiability,Inherit,Inheritance,314,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix2Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix2Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix2Variable:. [legend]; Detailed Description; Matrix VARIABLE . Public Attributes; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTransp",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:427,Modifiability,VARIAB,VARIABLE,427,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix2Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix2Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix2Variable:. [legend]; Detailed Description; Matrix VARIABLE . Public Attributes; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTransp",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:580,Modifiability,inherit,inherited,580,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix2Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix2Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix2Variable:. [legend]; Detailed Description; Matrix VARIABLE . Public Attributes; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTransp",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:721,Modifiability,inherit,inherited,721,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix2Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix2Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix2Variable:. [legend]; Detailed Description; Matrix VARIABLE . Public Attributes; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTransp",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:851,Modifiability,inherit,inherited,851,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix2Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix2Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix2Variable:. [legend]; Detailed Description; Matrix VARIABLE . Public Attributes; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTransp",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:1017,Modifiability,inherit,inherited,1017,". Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix2Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix2Variable:. [legend]; Detailed Description; Matrix VARIABLE . Public Attributes; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ; void init () override;  Initialization method called at graph creation and ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:2209,Modifiability,inherit,inherited,2209,"s;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Ini",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:2674,Modifiability,variab,variables,2674," ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resou",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:2903,Modifiability,variab,variable,2903," Functions;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:3090,Modifiability,inherit,inherited,3090,"n, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:4998,Modifiability,inherit,inherited,4998,"id drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; Base",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:6698,Modifiability,variab,variables,6698,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:6740,Modifiability,variab,variables,6740,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:6985,Modifiability,inherit,inherited,6985,"  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:13111,Modifiability,inherit,inherited,13111,"Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:13423,Modifiability,inherit,inherited,13423,"Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:13622,Modifiability,Inherit,Inherited,13622,"iases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construct",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:13663,Modifiability,inherit,inherited,13663,"iases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construct",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:13917,Modifiability,inherit,inherited,13917,"iases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construct",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:14346,Modifiability,inherit,inherited,14346,"lic Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:14698,Modifiability,inherit,inherited,14698,"> l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal upd",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:15098,Modifiability,inherit,inherited,15098,"ring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:15323,Modifiability,inherit,inherited,15323,"ring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:15483,Modifiability,inherit,inherited,15483,"ring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:15609,Modifiability,inherit,inherited,15609,"ring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:16332,Modifiability,inherit,inherited,16332,"ide;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  . Attribute details. ◆ transpose. Data<bool> sofa::gl::component::shader::OglMatrix2Variable::transpose. Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. . Constructor details. ◆ OglMatrix2Variable(). sofa::gl::component::shader::OglMatrix2Variable::OglMatrix2Vari",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:17042,Modifiability,inherit,inherited,17042,"thod called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  . Attribute details. ◆ transpose. Data<bool> sofa::gl::component::shader::OglMatrix2Variable::transpose. Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. . Constructor details. ◆ OglMatrix2Variable(). sofa::gl::component::shader::OglMatrix2Variable::OglMatrix2Variable ; (; ). ◆ ~OglMatrix2Variable(). virtual sofa::gl::component::shader::OglMatrix2Variable::~OglMatrix2Variable ; (; ). inlinevirtual . Function details. ◆ init(). void sofa::gl::component::shader::OglMatrix2Variable::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::gl::component::shader::OglShaderElement.; Reimplemented in sofa::gl::component::shader::OglMatrix4x3Variable, sofa::gl::component::shader::OglMatrix3x4Variable, sofa::gl::component::shader::OglMatrix4x2Variable, sofa::gl::component::shader::OglMatrix2x4Var",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:1606,Performance,Load,Loading,1606,"More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:5498,Performance,load,loader,5498," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:7519,Security,Access,Accessor,7519,"  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:12464,Security,Access,Accessor,12464," initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:12583,Security,Access,Accessor,12583,"ta (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int ge",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:12694,Security,Access,Accessor,12694,"thod used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::Bas",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:12813,Security,Access,Accessor,12813,"Data initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; Sin",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:9003,Testability,log,logging,9003," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:9076,Testability,log,logging,9076," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:9118,Testability,log,logging,9118," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:9188,Testability,log,logging,9188," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:9299,Testability,log,logging,9299," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:9341,Testability,log,logging,9341," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:11165,Testability,log,logErrors,11165,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:3592,Usability,clear,clearVisual,3592,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:3609,Usability,clear,clear,3609,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:9384,Usability,clear,clearLoggedMessages,9384," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html:13890,Deployability,update,updateInternal,13890," sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix3x2Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix3x2Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix3x2Variable() overridesofa::gl::component::shader::OglMatrix3x2Variableinline; ~OglShaderE",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html:13943,Deployability,update,updateLinks,13943,":BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix3x2Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix3x2Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix3x2Variable() overridesofa::gl::component::shader::OglMatrix3x2Variableinline; ~OglShaderElement() overridesofa::gl::component::shader::OglSh",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html:14013,Deployability,update,updateVisual,14013,"er::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix3x2Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix3x2Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix3x2Variable() overridesofa::gl::component::shader::OglMatrix3x2Variableinline; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::shader::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html:14080,Deployability,update,updateVisual,14080,"l::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix3x2Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix3x2Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix3x2Variable() overridesofa::gl::component::shader::OglMatrix3x2Variableinline; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlineprotected; ~ShaderElement",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html:818,Integrability,Message,Message,818," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html:2692,Integrability,Message,Message,2692,"::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html:2734,Integrability,Message,Message,2734,"sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core::visual::VisualModelvirtual; exportOBJ(std",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html:5768,Integrability,Message,Message,5768,) constsofa::core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsof,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html:5810,Integrability,Message,Message,5810,virtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags(,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html:270,Modifiability,inherit,inherited,270,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglMatrix3x2Variable Member List . This is the complete list of members for sofa::gl::component::shader::OglMatrix3x2Variable, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html:12297,Performance,load,loader,12297,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTranspose(const bool &v)sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; setValue(const type::vector< float > &v)sofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix3x2Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix3x2Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(Ogl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html:809,Testability,log,logging,809," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html:2683,Testability,log,logging,2683,"ofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalso",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html:2725,Testability,log,logging,2725,"l; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core::visual::VisualModelvirtual; expo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html:5759,Testability,log,logging,5759,getClass() constsofa::core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves(),MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html:5801,Testability,log,logging,5801,aseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject;,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html:13960,Testability,log,logErrors,13960,"::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix3x2Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix3x2Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix3x2Variable() overridesofa::gl::component::shader::OglMatrix3x2Variableinline; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinlin",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html:2433,Usability,clear,clearLoggedMessages,2433,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::ob",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html:2491,Usability,clear,clearVisual,2491,"ore::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const V",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:635,Availability,down,down,635,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix3x2Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix3x2Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix3x2Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglMatrix3x2Variable, OglMatrix2Variable);  ;  OglMatrix3x2Variable ();  ;  ~OglMatrix3x2Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void draw",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:1308,Availability,down,down,1308,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix3x2Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix3x2Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix3x2Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglMatrix3x2Variable, OglMatrix2Variable);  ;  OglMatrix3x2Variable ();  ;  ~OglMatrix3x2Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void draw",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:17843,Availability,down,down,17843,"Tracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  . Constructor details. ◆ OglMatrix3x2Variable(). sofa::gl::component::shader::OglMatrix3x2Variable::OglMatrix3x2Variable ; (; ). ◆ ~OglMatrix3x2Variable(). sofa::gl::component::shader::OglMatrix3x2Variable::~OglMatrix3x2Variable ; (; ). inlineoverride . Function details. ◆ init(). void sofa::gl::component::shader::OglMatrix3x2Variable::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::gl::component::shader::OglMatrix2Variable. ◆ pushValue(). void sofa::gl::component::shader::OglMatrix3x2Variable::pushValue ; (; ). overridevirtual . Reimplemented from sofa::gl::component::shader::OglMatrix2Variable. ◆ SOFA_CLASS(). sofa::gl::component::shader::OglMatrix3x2Variable::SOFA_CLASS ; (; OglMatrix3x2Variable ; , . OglMatrix2Variable ;  . ). sofaglcomponentshaderOglMatrix3x2Variable; Generated on Mon Nov 11 2024 03:19:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:1430,Deployability,Update,Update,1430,"ASS (OglMatrix3x2Variable, OglMatrix2Variable);  ;  OglMatrix3x2Variable ();  ;  ~OglMatrix3x2Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resou",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:2233,Deployability,update,updateVisual,2233,"method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:2279,Deployability,update,update,2279,"method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:2335,Deployability,update,updateVisual,2335,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:2944,Deployability,update,update,2944,"T_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render in",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:5434,Deployability,update,updateInternal,5434,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:5454,Deployability,Update,Update,5454,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:9929,Deployability,update,updateLinks,9929,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:9965,Deployability,Update,Update,9965,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:16000,Deployability,update,update,16000,"ring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:4199,Integrability,depend,dependent,4199,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:7794,Integrability,Message,Message,7794," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:7867,Integrability,Message,Message,7867," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:7909,Integrability,Message,Message,7909," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:7979,Integrability,Message,Message,7979," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:8090,Integrability,Message,Message,8090," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:8132,Integrability,Message,Message,8132," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:13315,Integrability,message,messages,13315,"odel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglMatrix2Variable; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of field",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:297,Modifiability,Inherit,Inheritance,297,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix3x2Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix3x2Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix3x2Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglMatrix3x2Variable, OglMatrix2Variable);  ;  OglMatrix3x2Variable ();  ;  ~OglMatrix3x2Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void draw",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:719,Modifiability,inherit,inherited,719,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix3x2Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix3x2Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix3x2Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglMatrix3x2Variable, OglMatrix2Variable);  ;  OglMatrix3x2Variable ();  ;  ~OglMatrix3x2Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void draw",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:991,Modifiability,inherit,inherited,991,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix3x2Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix3x2Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix3x2Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglMatrix3x2Variable, OglMatrix2Variable);  ;  OglMatrix3x2Variable ();  ;  ~OglMatrix3x2Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void draw",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:1456,Modifiability,variab,variables,1456,"ASS (OglMatrix3x2Variable, OglMatrix2Variable);  ;  OglMatrix3x2Variable ();  ;  ~OglMatrix3x2Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resou",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:1685,Modifiability,variab,variable,1685,"dification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:1872,Modifiability,inherit,inherited,1872,"~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:3780,Modifiability,inherit,inherited,3780,"id drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; Base",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:5480,Modifiability,variab,variables,5480,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:5522,Modifiability,variab,variables,5522,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:5767,Modifiability,inherit,inherited,5767,"  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:11893,Modifiability,inherit,inherited,11893,"Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglMatrix2Variable; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the e",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:12205,Modifiability,inherit,inherited,12205,"Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglMatrix2Variable; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the e",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:12404,Modifiability,Inherit,Inherited,12404,";  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglMatrix2Variable; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::Bound",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:12442,Modifiability,inherit,inherited,12442,";  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglMatrix2Variable; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::Bound",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:12629,Modifiability,inherit,inherited,12629,"path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglMatrix2Variable; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:12770,Modifiability,inherit,inherited,12770,"path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglMatrix2Variable; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:12900,Modifiability,inherit,inherited,12900,"lShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglMatrix2Variable; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseOb",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:13066,Modifiability,inherit,inherited,13066,"& getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglMatrix2Variable; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherit",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:13888,Modifiability,inherit,inherited,13888,"nts, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:14142,Modifiability,inherit,inherited,14142,"nts, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:14571,Modifiability,inherit,inherited,14571,"g (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:14923,Modifiability,inherit,inherited,14923,"> l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal upd",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:15323,Modifiability,inherit,inherited,15323,"ring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:15548,Modifiability,inherit,inherited,15548,"ring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:15708,Modifiability,inherit,inherited,15708,"ring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:15834,Modifiability,inherit,inherited,15834,"ring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:16557,Modifiability,inherit,inherited,16557,"ide;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  . Constructor details. ◆ OglMatrix3x2Variable(). sofa::gl::component::shader::OglMatrix3x2Variable::OglMatrix3x2Variable ; (; ). ◆ ~OglMatrix3x2Variable(). sofa::gl::component::shader::OglMatrix3x2Variable::~OglMatrix3x2Variable ; (; ). inlineoverride . Function details. ◆ init(). ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:17267,Modifiability,inherit,inherited,17267,"thod called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  . Constructor details. ◆ OglMatrix3x2Variable(). sofa::gl::component::shader::OglMatrix3x2Variable::OglMatrix3x2Variable ; (; ). ◆ ~OglMatrix3x2Variable(). sofa::gl::component::shader::OglMatrix3x2Variable::~OglMatrix3x2Variable ; (; ). inlineoverride . Function details. ◆ init(). void sofa::gl::component::shader::OglMatrix3x2Variable::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::gl::component::shader::OglMatrix2Variable. ◆ pushValue(). void sofa::gl::component::shader::OglMatrix3x2Variable::pushValue ; (; ). overridevirtual . Reimplemented from sofa::gl::component::shader::OglMatrix2Variable. ◆ SOFA_CLASS(). sofa::gl::component::shader::OglMatrix3x2Variable::SOFA_CLASS ; (; OglMatrix3x2Variable ; , . OglMatrix2Variable ;  . ). sofaglcomponentshaderOglMatrix3x2Variable; Generated on Mon Nov 11",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:4280,Performance,load,loader,4280," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:13655,Performance,Load,Loading,13655,"More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::com",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:6301,Security,Access,Accessor,6301,"  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:11246,Security,Access,Accessor,11246," initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:11365,Security,Access,Accessor,11365,"ta (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int ge",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:11476,Security,Access,Accessor,11476,"thod used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::Og",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:11595,Security,Access,Accessor,11595,"Data initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglMatrix2Variable; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:7785,Testability,log,logging,7785," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:7858,Testability,log,logging,7858," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:7900,Testability,log,logging,7900," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:7970,Testability,log,logging,7970," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:8081,Testability,log,logging,8081," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:8123,Testability,log,logging,8123," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:9947,Testability,log,logErrors,9947,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:2374,Usability,clear,clearVisual,2374,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:2391,Usability,clear,clear,2391,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html:8166,Usability,clear,clearLoggedMessages,8166," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html:13890,Deployability,update,updateInternal,13890," sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix3x4Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix3x4Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix3x4Variable() overridesofa::gl::component::shader::OglMatrix3x4Variableinline; ~OglShaderE",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html:13943,Deployability,update,updateLinks,13943,":BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix3x4Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix3x4Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix3x4Variable() overridesofa::gl::component::shader::OglMatrix3x4Variableinline; ~OglShaderElement() overridesofa::gl::component::shader::OglSh",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html:14013,Deployability,update,updateVisual,14013,"er::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix3x4Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix3x4Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix3x4Variable() overridesofa::gl::component::shader::OglMatrix3x4Variableinline; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::shader::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html:14080,Deployability,update,updateVisual,14080,"l::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix3x4Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix3x4Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix3x4Variable() overridesofa::gl::component::shader::OglMatrix3x4Variableinline; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlineprotected; ~ShaderElement",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html:818,Integrability,Message,Message,818," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html:2692,Integrability,Message,Message,2692,"::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html:2734,Integrability,Message,Message,2734,"sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core::visual::VisualModelvirtual; exportOBJ(std",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html:5768,Integrability,Message,Message,5768,) constsofa::core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsof,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html:5810,Integrability,Message,Message,5810,virtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags(,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html:270,Modifiability,inherit,inherited,270,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglMatrix3x4Variable Member List . This is the complete list of members for sofa::gl::component::shader::OglMatrix3x4Variable, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html:12297,Performance,load,loader,12297,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTranspose(const bool &v)sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; setValue(const type::vector< float > &v)sofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix3x4Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix3x4Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(Ogl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html:809,Testability,log,logging,809," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html:2683,Testability,log,logging,2683,"ofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalso",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html:2725,Testability,log,logging,2725,"l; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core::visual::VisualModelvirtual; expo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html:5759,Testability,log,logging,5759,getClass() constsofa::core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves(),MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html:5801,Testability,log,logging,5801,aseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject;,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html:13960,Testability,log,logErrors,13960,"::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix3x4Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix3x4Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix3x4Variable() overridesofa::gl::component::shader::OglMatrix3x4Variableinline; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinlin",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html:2433,Usability,clear,clearLoggedMessages,2433,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::ob",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html:2491,Usability,clear,clearVisual,2491,"ore::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const V",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:635,Availability,down,down,635,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix3x4Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix3x4Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix3x4Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglMatrix3x4Variable, OglMatrix2Variable);  ;  OglMatrix3x4Variable ();  ;  ~OglMatrix3x4Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void draw",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:1308,Availability,down,down,1308,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix3x4Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix3x4Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix3x4Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglMatrix3x4Variable, OglMatrix2Variable);  ;  OglMatrix3x4Variable ();  ;  ~OglMatrix3x4Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void draw",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:17843,Availability,down,down,17843,"Tracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  . Constructor details. ◆ OglMatrix3x4Variable(). sofa::gl::component::shader::OglMatrix3x4Variable::OglMatrix3x4Variable ; (; ). ◆ ~OglMatrix3x4Variable(). sofa::gl::component::shader::OglMatrix3x4Variable::~OglMatrix3x4Variable ; (; ). inlineoverride . Function details. ◆ init(). void sofa::gl::component::shader::OglMatrix3x4Variable::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::gl::component::shader::OglMatrix2Variable. ◆ pushValue(). void sofa::gl::component::shader::OglMatrix3x4Variable::pushValue ; (; ). overridevirtual . Reimplemented from sofa::gl::component::shader::OglMatrix2Variable. ◆ SOFA_CLASS(). sofa::gl::component::shader::OglMatrix3x4Variable::SOFA_CLASS ; (; OglMatrix3x4Variable ; , . OglMatrix2Variable ;  . ). sofaglcomponentshaderOglMatrix3x4Variable; Generated on Mon Nov 11 2024 03:19:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:1430,Deployability,Update,Update,1430,"ASS (OglMatrix3x4Variable, OglMatrix2Variable);  ;  OglMatrix3x4Variable ();  ;  ~OglMatrix3x4Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resou",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:2233,Deployability,update,updateVisual,2233,"method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:2279,Deployability,update,update,2279,"method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:2335,Deployability,update,updateVisual,2335,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:2944,Deployability,update,update,2944,"T_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render in",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:5434,Deployability,update,updateInternal,5434,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:5454,Deployability,Update,Update,5454,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:9929,Deployability,update,updateLinks,9929,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:9965,Deployability,Update,Update,9965,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:16000,Deployability,update,update,16000,"ring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:4199,Integrability,depend,dependent,4199,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:7794,Integrability,Message,Message,7794," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:7867,Integrability,Message,Message,7867," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:7909,Integrability,Message,Message,7909," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:7979,Integrability,Message,Message,7979," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:8090,Integrability,Message,Message,8090," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:8132,Integrability,Message,Message,8132," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:13315,Integrability,message,messages,13315,"odel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglMatrix2Variable; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of field",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:297,Modifiability,Inherit,Inheritance,297,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix3x4Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix3x4Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix3x4Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglMatrix3x4Variable, OglMatrix2Variable);  ;  OglMatrix3x4Variable ();  ;  ~OglMatrix3x4Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void draw",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:719,Modifiability,inherit,inherited,719,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix3x4Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix3x4Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix3x4Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglMatrix3x4Variable, OglMatrix2Variable);  ;  OglMatrix3x4Variable ();  ;  ~OglMatrix3x4Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void draw",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:991,Modifiability,inherit,inherited,991,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix3x4Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix3x4Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix3x4Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglMatrix3x4Variable, OglMatrix2Variable);  ;  OglMatrix3x4Variable ();  ;  ~OglMatrix3x4Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void draw",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:1456,Modifiability,variab,variables,1456,"ASS (OglMatrix3x4Variable, OglMatrix2Variable);  ;  OglMatrix3x4Variable ();  ;  ~OglMatrix3x4Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resou",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:1685,Modifiability,variab,variable,1685,"dification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:1872,Modifiability,inherit,inherited,1872,"~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:3780,Modifiability,inherit,inherited,3780,"id drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; Base",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:5480,Modifiability,variab,variables,5480,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:5522,Modifiability,variab,variables,5522,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:5767,Modifiability,inherit,inherited,5767,"  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:11893,Modifiability,inherit,inherited,11893,"Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglMatrix2Variable; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the e",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:12205,Modifiability,inherit,inherited,12205,"Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglMatrix2Variable; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the e",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:12404,Modifiability,Inherit,Inherited,12404,";  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglMatrix2Variable; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::Bound",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:12442,Modifiability,inherit,inherited,12442,";  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglMatrix2Variable; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::Bound",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:12629,Modifiability,inherit,inherited,12629,"path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglMatrix2Variable; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:12770,Modifiability,inherit,inherited,12770,"path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglMatrix2Variable; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:12900,Modifiability,inherit,inherited,12900,"lShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglMatrix2Variable; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseOb",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:13066,Modifiability,inherit,inherited,13066,"& getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglMatrix2Variable; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherit",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:13888,Modifiability,inherit,inherited,13888,"nts, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:14142,Modifiability,inherit,inherited,14142,"nts, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:14571,Modifiability,inherit,inherited,14571,"g (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:14923,Modifiability,inherit,inherited,14923,"> l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal upd",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:15323,Modifiability,inherit,inherited,15323,"ring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:15548,Modifiability,inherit,inherited,15548,"ring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:15708,Modifiability,inherit,inherited,15708,"ring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:15834,Modifiability,inherit,inherited,15834,"ring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:16557,Modifiability,inherit,inherited,16557,"ide;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  . Constructor details. ◆ OglMatrix3x4Variable(). sofa::gl::component::shader::OglMatrix3x4Variable::OglMatrix3x4Variable ; (; ). ◆ ~OglMatrix3x4Variable(). sofa::gl::component::shader::OglMatrix3x4Variable::~OglMatrix3x4Variable ; (; ). inlineoverride . Function details. ◆ init(). ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:17267,Modifiability,inherit,inherited,17267,"thod called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  . Constructor details. ◆ OglMatrix3x4Variable(). sofa::gl::component::shader::OglMatrix3x4Variable::OglMatrix3x4Variable ; (; ). ◆ ~OglMatrix3x4Variable(). sofa::gl::component::shader::OglMatrix3x4Variable::~OglMatrix3x4Variable ; (; ). inlineoverride . Function details. ◆ init(). void sofa::gl::component::shader::OglMatrix3x4Variable::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::gl::component::shader::OglMatrix2Variable. ◆ pushValue(). void sofa::gl::component::shader::OglMatrix3x4Variable::pushValue ; (; ). overridevirtual . Reimplemented from sofa::gl::component::shader::OglMatrix2Variable. ◆ SOFA_CLASS(). sofa::gl::component::shader::OglMatrix3x4Variable::SOFA_CLASS ; (; OglMatrix3x4Variable ; , . OglMatrix2Variable ;  . ). sofaglcomponentshaderOglMatrix3x4Variable; Generated on Mon Nov 11",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:4280,Performance,load,loader,4280," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:13655,Performance,Load,Loading,13655,"More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::com",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:6301,Security,Access,Accessor,6301,"  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:11246,Security,Access,Accessor,11246," initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:11365,Security,Access,Accessor,11365,"ta (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int ge",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:11476,Security,Access,Accessor,11476,"thod used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::Og",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:11595,Security,Access,Accessor,11595,"Data initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglMatrix2Variable; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:7785,Testability,log,logging,7785," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:7858,Testability,log,logging,7858," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:7900,Testability,log,logging,7900," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:7970,Testability,log,logging,7970," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:8081,Testability,log,logging,8081," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:8123,Testability,log,logging,8123," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:9947,Testability,log,logErrors,9947,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:2374,Usability,clear,clearVisual,2374,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:2391,Usability,clear,clear,2391,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html:8166,Usability,clear,clearLoggedMessages,8166," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html:13874,Deployability,update,updateInternal,13874,"tic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix3Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix3Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix3Variable() overridesofa::gl::component::shader::OglMatrix3Variableinline; ~OglShaderEleme",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html:13927,Deployability,update,updateLinks,13927,"del::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix3Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix3Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix3Variable() overridesofa::gl::component::shader::OglMatrix3Variableinline; ~OglShaderElement() overridesofa::gl::component::shader::OglShader",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html:13997,Deployability,update,updateVisual,13997,"shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix3Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix3Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix3Variable() overridesofa::gl::component::shader::OglMatrix3Variableinline; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::shader::OglV",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html:14064,Deployability,update,updateVisual,14064,"model::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix3Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix3Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix3Variable() overridesofa::gl::component::shader::OglMatrix3Variableinline; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlineprotected; ~ShaderElement() o",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html:814,Integrability,Message,Message,814," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html:2688,Integrability,Message,Message,2688,"::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html:2730,Integrability,Message,Message,2730,"sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core::visual::VisualModelvirtual; exportOBJ(std",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html:5764,Integrability,Message,Message,5764,) constsofa::core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsof,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html:5806,Integrability,Message,Message,5806,virtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags(,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html:266,Modifiability,inherit,inherited,266,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglMatrix3Variable Member List . This is the complete list of members for sofa::gl::component::shader::OglMatrix3Variable, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html:12285,Performance,load,loader,12285,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTranspose(const bool &v)sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; setValue(const type::vector< float > &v)sofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix3Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix3Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatr",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html:805,Testability,log,logging,805," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html:2679,Testability,log,logging,2679,"ofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalso",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html:2721,Testability,log,logging,2721,"l; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core::visual::VisualModelvirtual; expo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html:5755,Testability,log,logging,5755,getClass() constsofa::core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves(),MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html:5797,Testability,log,logging,5797,aseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject;,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html:13944,Testability,log,logErrors,13944,"sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix3Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix3Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix3Variable() overridesofa::gl::component::shader::OglMatrix3Variableinline; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html:2429,Usability,clear,clearLoggedMessages,2429,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::ob",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html:2487,Usability,clear,clearVisual,2487,"ore::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const V",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:623,Availability,down,down,623,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix3Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix3Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix3Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglMatrix3Variable, OglMatrix2Variable);  ;  OglMatrix3Variable ();  ;  ~OglMatrix3Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (cons",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:1296,Availability,down,down,1296,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix3Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix3Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix3Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglMatrix3Variable, OglMatrix2Variable);  ;  OglMatrix3Variable ();  ;  ~OglMatrix3Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (cons",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:17817,Availability,down,down,17817,"d the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  . Constructor details. ◆ OglMatrix3Variable(). sofa::gl::component::shader::OglMatrix3Variable::OglMatrix3Variable ; (; ). ◆ ~OglMatrix3Variable(). sofa::gl::component::shader::OglMatrix3Variable::~OglMatrix3Variable ; (; ). inlineoverride . Function details. ◆ init(). void sofa::gl::component::shader::OglMatrix3Variable::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::gl::component::shader::OglMatrix2Variable. ◆ pushValue(). void sofa::gl::component::shader::OglMatrix3Variable::pushValue ; (; ). overridevirtual . Reimplemented from sofa::gl::component::shader::OglMatrix2Variable. ◆ SOFA_CLASS(). sofa::gl::component::shader::OglMatrix3Variable::SOFA_CLASS ; (; OglMatrix3Variable ; , . OglMatrix2Variable ;  . ). sofaglcomponentshaderOglMatrix3Variable; Generated on Mon Nov 11 2024 03:19:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:1418,Deployability,Update,Update,1418,"OFA_CLASS (OglMatrix3Variable, OglMatrix2Variable);  ;  OglMatrix3Variable ();  ;  ~OglMatrix3Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resou",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:2221,Deployability,update,updateVisual,2221,"method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:2267,Deployability,update,update,2267,"method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:2323,Deployability,update,updateVisual,2323,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:2932,Deployability,update,update,2932,"T_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render in",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:5422,Deployability,update,updateInternal,5422,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:5442,Deployability,Update,Update,5442,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:9917,Deployability,update,updateLinks,9917,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:9953,Deployability,Update,Update,9953,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:15988,Deployability,update,update,15988,"ring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:4187,Integrability,depend,dependent,4187,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:7782,Integrability,Message,Message,7782," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:7855,Integrability,Message,Message,7855," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:7897,Integrability,Message,Message,7897," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:7967,Integrability,Message,Message,7967," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:8078,Integrability,Message,Message,8078," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:8120,Integrability,Message,Message,8120," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:13303,Integrability,message,messages,13303,"odel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglMatrix2Variable; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of field",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:293,Modifiability,Inherit,Inheritance,293,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix3Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix3Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix3Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglMatrix3Variable, OglMatrix2Variable);  ;  OglMatrix3Variable ();  ;  ~OglMatrix3Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (cons",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:707,Modifiability,inherit,inherited,707,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix3Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix3Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix3Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglMatrix3Variable, OglMatrix2Variable);  ;  OglMatrix3Variable ();  ;  ~OglMatrix3Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (cons",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:979,Modifiability,inherit,inherited,979,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix3Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix3Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix3Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglMatrix3Variable, OglMatrix2Variable);  ;  OglMatrix3Variable ();  ;  ~OglMatrix3Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (cons",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:1444,Modifiability,variab,variables,1444,"OFA_CLASS (OglMatrix3Variable, OglMatrix2Variable);  ;  OglMatrix3Variable ();  ;  ~OglMatrix3Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resou",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:1673,Modifiability,variab,variable,1673,"dification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:1860,Modifiability,inherit,inherited,1860,"~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:3768,Modifiability,inherit,inherited,3768,"id drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; Base",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:5468,Modifiability,variab,variables,5468,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:5510,Modifiability,variab,variables,5510,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:5755,Modifiability,inherit,inherited,5755,"  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:11881,Modifiability,inherit,inherited,11881,"Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglMatrix2Variable; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the e",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:12193,Modifiability,inherit,inherited,12193,"Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglMatrix2Variable; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the e",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:12392,Modifiability,Inherit,Inherited,12392,";  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglMatrix2Variable; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::Bound",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:12430,Modifiability,inherit,inherited,12430,";  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglMatrix2Variable; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::Bound",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:12617,Modifiability,inherit,inherited,12617,"path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglMatrix2Variable; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:12758,Modifiability,inherit,inherited,12758,"path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglMatrix2Variable; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:12888,Modifiability,inherit,inherited,12888,"lShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglMatrix2Variable; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseOb",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:13054,Modifiability,inherit,inherited,13054,"& getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglMatrix2Variable; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherit",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:13876,Modifiability,inherit,inherited,13876,"nts, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:14130,Modifiability,inherit,inherited,14130,"nts, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:14559,Modifiability,inherit,inherited,14559,"g (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:14911,Modifiability,inherit,inherited,14911,"> l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal upd",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:15311,Modifiability,inherit,inherited,15311,"ring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:15536,Modifiability,inherit,inherited,15536,"ring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:15696,Modifiability,inherit,inherited,15696,"ring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:15822,Modifiability,inherit,inherited,15822,"ring > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:16545,Modifiability,inherit,inherited,16545,"ide;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  . Constructor details. ◆ OglMatrix3Variable(). sofa::gl::component::shader::OglMatrix3Variable::OglMatrix3Variable ; (; ). ◆ ~OglMatrix3Variable(). sofa::gl::component::shader::OglMatrix3Variable::~OglMatrix3Variable ; (; ). inlineoverride . Function details. ◆ init(). void sofa::g",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:17255,Modifiability,inherit,inherited,17255,"thod called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  . Constructor details. ◆ OglMatrix3Variable(). sofa::gl::component::shader::OglMatrix3Variable::OglMatrix3Variable ; (; ). ◆ ~OglMatrix3Variable(). sofa::gl::component::shader::OglMatrix3Variable::~OglMatrix3Variable ; (; ). inlineoverride . Function details. ◆ init(). void sofa::gl::component::shader::OglMatrix3Variable::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::gl::component::shader::OglMatrix2Variable. ◆ pushValue(). void sofa::gl::component::shader::OglMatrix3Variable::pushValue ; (; ). overridevirtual . Reimplemented from sofa::gl::component::shader::OglMatrix2Variable. ◆ SOFA_CLASS(). sofa::gl::component::shader::OglMatrix3Variable::SOFA_CLASS ; (; OglMatrix3Variable ; , . OglMatrix2Variable ;  . ). sofaglcomponentshaderOglMatrix3Variable; Generated on Mon Nov 11 2024 03:19:17 for SOF",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:4268,Performance,load,loader,4268," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:13643,Performance,Load,Loading,13643,"More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::com",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:6289,Security,Access,Accessor,6289,"  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:11234,Security,Access,Accessor,11234," initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:11353,Security,Access,Accessor,11353,"ta (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int ge",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:11464,Security,Access,Accessor,11464,"thod used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::Og",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:11583,Security,Access,Accessor,11583,"Data initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglMatrix2Variable; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:7773,Testability,log,logging,7773," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:7846,Testability,log,logging,7846," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:7888,Testability,log,logging,7888," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:7958,Testability,log,logging,7958," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:8069,Testability,log,logging,8069," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:8111,Testability,log,logging,8111," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:9935,Testability,log,logErrors,9935,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:2362,Usability,clear,clearVisual,2362,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:2379,Usability,clear,clear,2379,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html:8154,Usability,clear,clearLoggedMessages,8154," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html:13890,Deployability,update,updateInternal,13890," sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix4x2Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix4x2Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix4x2Variable() overridesofa::gl::component::shader::OglMatrix4x2Variableinline; ~OglShaderE",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html:13943,Deployability,update,updateLinks,13943,":BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix4x2Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix4x2Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix4x2Variable() overridesofa::gl::component::shader::OglMatrix4x2Variableinline; ~OglShaderElement() overridesofa::gl::component::shader::OglSh",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html:14013,Deployability,update,updateVisual,14013,"er::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix4x2Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix4x2Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix4x2Variable() overridesofa::gl::component::shader::OglMatrix4x2Variableinline; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::shader::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html:14080,Deployability,update,updateVisual,14080,"l::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix4x2Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix4x2Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix4x2Variable() overridesofa::gl::component::shader::OglMatrix4x2Variableinline; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlineprotected; ~ShaderElement",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html:818,Integrability,Message,Message,818," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html:2692,Integrability,Message,Message,2692,"::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html:2734,Integrability,Message,Message,2734,"sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core::visual::VisualModelvirtual; exportOBJ(std",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html:5768,Integrability,Message,Message,5768,) constsofa::core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsof,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html:5810,Integrability,Message,Message,5810,virtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags(,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html:270,Modifiability,inherit,inherited,270,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglMatrix4x2Variable Member List . This is the complete list of members for sofa::gl::component::shader::OglMatrix4x2Variable, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html:12297,Performance,load,loader,12297,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTranspose(const bool &v)sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; setValue(const type::vector< float > &v)sofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix4x2Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix4x2Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(Ogl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html:809,Testability,log,logging,809," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html:2683,Testability,log,logging,2683,"ofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalso",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html:2725,Testability,log,logging,2725,"l; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core::visual::VisualModelvirtual; expo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html:5759,Testability,log,logging,5759,getClass() constsofa::core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves(),MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html:5801,Testability,log,logging,5801,aseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject;,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html:13960,Testability,log,logErrors,13960,"::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix4x2Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix4x2Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix4x2Variable() overridesofa::gl::component::shader::OglMatrix4x2Variableinline; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinlin",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html:2433,Usability,clear,clearLoggedMessages,2433,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::ob",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html:2491,Usability,clear,clearVisual,2491,"ore::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const V",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html
