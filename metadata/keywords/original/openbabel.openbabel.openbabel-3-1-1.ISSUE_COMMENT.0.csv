id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/openbabel/openbabel/issues/388#issuecomment-281773554:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. At the moment, the quat.c code has been migrated into; obutil.cpp. Some consolidation may be needed, but quat.c is; removed from the CVS. Anything else needed or can this be closed?. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/388#issuecomment-281773554
https://github.com/openbabel/openbabel/issues/389#issuecomment-281774192:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. No dtor was implemented for OBNode or OBEdge in the SMARTS; code (very BAD practice). Thus, few of the recursive calls; were properly unwound and freed. Currently, all SMARTS memory leaks are fixed and this seems; to solve overall leaks at this time. New leaks will be added; as new problem reports. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/389#issuecomment-281774192
https://github.com/openbabel/openbabel/issues/1370#issuecomment-281808299:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. Fixed. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1370#issuecomment-281808299
https://github.com/openbabel/openbabel/issues/1371#issuecomment-281808308:148,Energy Efficiency,charge,charge,148,"Logged In: YES ; user_id=21420. I'm closing this feature request. The Gasteiger model has clearly ; advanced, and new code is needed. (Adding other charge models would be ; helpful too.). I'll open a new feature request for updating the Gasteiger model.; -Geogg. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1371#issuecomment-281808308
https://github.com/openbabel/openbabel/issues/1371#issuecomment-281808308:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I'm closing this feature request. The Gasteiger model has clearly ; advanced, and new code is needed. (Adding other charge models would be ; helpful too.). I'll open a new feature request for updating the Gasteiger model.; -Geogg. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1371#issuecomment-281808308
https://github.com/openbabel/openbabel/issues/1371#issuecomment-281808308:90,Usability,clear,clearly,90,"Logged In: YES ; user_id=21420. I'm closing this feature request. The Gasteiger model has clearly ; advanced, and new code is needed. (Adding other charge models would be ; helpful too.). I'll open a new feature request for updating the Gasteiger model.; -Geogg. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1371#issuecomment-281808308
https://github.com/openbabel/openbabel/issues/1372#issuecomment-281808324:146,Performance,load,loading,146,"Logged In: YES ; user_id=21420. This is basically resolved under the new conversion framework. The ; UNIX build does not currently handle dynamic loading, but it will not be ; too much more work. Marked ""pending"" since this will be resolved soon.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1372#issuecomment-281808324
https://github.com/openbabel/openbabel/issues/1372#issuecomment-281808324:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. This is basically resolved under the new conversion framework. The ; UNIX build does not currently handle dynamic loading, but it will not be ; too much more work. Marked ""pending"" since this will be resolved soon.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1372#issuecomment-281808324
https://github.com/openbabel/openbabel/issues/1373#issuecomment-281809472:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. OBExtensionTable now supports this (in the CVS version). It would be ideal to have an -imime &lt;MIME-TYPE&gt; file flag, but this is not implemented yet. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1373#issuecomment-281809472
https://github.com/openbabel/openbabel/issues/1373#issuecomment-281809473:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. MIME command-line flags now exist. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1373#issuecomment-281809473
https://github.com/openbabel/openbabel/issues/1374#issuecomment-281809486:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. No, better just to have links in obvious places to at least one location of the original Babel. (Currently the FAQ does.). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1374#issuecomment-281809486
https://github.com/openbabel/openbabel/issues/391#issuecomment-281774219:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Fixed by Bryan Herger, along with adding some nice Windows; GUI features. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/391#issuecomment-281774219
https://github.com/openbabel/openbabel/issues/1375#issuecomment-281809498:276,Energy Efficiency,adapt,adaptation,276,"Logged In: YES ; user_id=21420. The current CVS version has a PerceiveBonds() call that implements steps 6 and 9 and does an OK job already at assigning bonds. Accuracy will improve with implementation of steps 7 &amp; 8, though more testing is certainly needed as this is an adaptation of Roger's described algorithm. Adding the PerceiveBonds() call to appropriate file translators (e.g XYZ, QM codes) will happen soon. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1375#issuecomment-281809498
https://github.com/openbabel/openbabel/issues/1375#issuecomment-281809498:276,Modifiability,adapt,adaptation,276,"Logged In: YES ; user_id=21420. The current CVS version has a PerceiveBonds() call that implements steps 6 and 9 and does an OK job already at assigning bonds. Accuracy will improve with implementation of steps 7 &amp; 8, though more testing is certainly needed as this is an adaptation of Roger's described algorithm. Adding the PerceiveBonds() call to appropriate file translators (e.g XYZ, QM codes) will happen soon. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1375#issuecomment-281809498
https://github.com/openbabel/openbabel/issues/1375#issuecomment-281809498:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. The current CVS version has a PerceiveBonds() call that implements steps 6 and 9 and does an OK job already at assigning bonds. Accuracy will improve with implementation of steps 7 &amp; 8, though more testing is certainly needed as this is an adaptation of Roger's described algorithm. Adding the PerceiveBonds() call to appropriate file translators (e.g XYZ, QM codes) will happen soon. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1375#issuecomment-281809498
https://github.com/openbabel/openbabel/issues/1375#issuecomment-281809498:234,Testability,test,testing,234,"Logged In: YES ; user_id=21420. The current CVS version has a PerceiveBonds() call that implements steps 6 and 9 and does an OK job already at assigning bonds. Accuracy will improve with implementation of steps 7 &amp; 8, though more testing is certainly needed as this is an adaptation of Roger's described algorithm. Adding the PerceiveBonds() call to appropriate file translators (e.g XYZ, QM codes) will happen soon. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1375#issuecomment-281809498
https://github.com/openbabel/openbabel/issues/1375#issuecomment-281809499:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Richard Gillilan pointed out the following MOE article on bond order assignment.; Many of the concepts are covered by Roger's algorithm, but some of the comments on metals and other non-organic elements would be useful to incorporate. http://www.chemcomp.com/article/bond.htm. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1375#issuecomment-281809499
https://github.com/openbabel/openbabel/issues/1375#issuecomment-281809501:123,Modifiability,flexible,flexible,123,"Logged In: YES ; user_id=21420. Steps 6 and 9 are now absolutely complete.; Step 7 is partially implemented, though a more flexible; system (i.e. reading SMARTS patterns from a file) would be; much more useful. I've compiled the file, but not written; the code.; Step 8 will be the most difficult. Still, the current CVS code does a pretty good job if all; the valences exist (i.e. hydrogens have been added).; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1375#issuecomment-281809501
https://github.com/openbabel/openbabel/issues/1375#issuecomment-281809501:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Steps 6 and 9 are now absolutely complete.; Step 7 is partially implemented, though a more flexible; system (i.e. reading SMARTS patterns from a file) would be; much more useful. I've compiled the file, but not written; the code.; Step 8 will be the most difficult. Still, the current CVS code does a pretty good job if all; the valences exist (i.e. hydrogens have been added).; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1375#issuecomment-281809501
https://github.com/openbabel/openbabel/issues/1375#issuecomment-281809502:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Except for cleaning up the aromatic typing, there is an; implementation of the whole algorithm. (The aromatic typing; should really try handing off to the Kekulize code, but that; doesn't work correctly and it's not obvious why.). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1375#issuecomment-281809502
https://github.com/openbabel/openbabel/issues/392#issuecomment-281774236:46,Deployability,patch,patch,46,Logged In: YES ; user_id=21420. Attached is a patch that should solve this. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/392#issuecomment-281774236
https://github.com/openbabel/openbabel/issues/392#issuecomment-281774236:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. Attached is a patch that should solve this. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/392#issuecomment-281774236
https://github.com/openbabel/openbabel/issues/1376#issuecomment-281809512:0,Testability,Log,Logged,0,Logged In: NO . I agree. PLEASE do this soon. A lot of people will really use ; this. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1376#issuecomment-281809512
https://github.com/openbabel/openbabel/issues/1376#issuecomment-281809514:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I have some test Perl and Python bindings, but they're incredibly sketchy. ; I'm looking for victims... I mean volunteers to help test them. There's ; probably not much ""coding"" needed to get this going faster, but some ; developer/debugging ability will be required. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1376#issuecomment-281809514
https://github.com/openbabel/openbabel/issues/1376#issuecomment-281809514:44,Testability,test,test,44,"Logged In: YES ; user_id=21420. I have some test Perl and Python bindings, but they're incredibly sketchy. ; I'm looking for victims... I mean volunteers to help test them. There's ; probably not much ""coding"" needed to get this going faster, but some ; developer/debugging ability will be required. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1376#issuecomment-281809514
https://github.com/openbabel/openbabel/issues/1376#issuecomment-281809514:162,Testability,test,test,162,"Logged In: YES ; user_id=21420. I have some test Perl and Python bindings, but they're incredibly sketchy. ; I'm looking for victims... I mean volunteers to help test them. There's ; probably not much ""coding"" needed to get this going faster, but some ; developer/debugging ability will be required. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1376#issuecomment-281809514
https://github.com/openbabel/openbabel/issues/1376#issuecomment-281809516:239,Integrability,wrap,wrapped,239,"Logged In: YES ; user_id=21420. OK, this is much further along now. I have working Perl and Python ; bindings using SWIG. I'm hoping that others will take these and run with ; them further since I don't know what functionality needs to be wrapped, ; how to properly test them, etc. To that end, see the openbabel-scripting mailing list:; http://sourceforge.net/mailarchive/forum.php?forum_id=45398; http://lists.sourceforge.net/mailman/listinfo/openbabel-scripting. I'm marking this closed, pending further comment.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1376#issuecomment-281809516
https://github.com/openbabel/openbabel/issues/1376#issuecomment-281809516:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. OK, this is much further along now. I have working Perl and Python ; bindings using SWIG. I'm hoping that others will take these and run with ; them further since I don't know what functionality needs to be wrapped, ; how to properly test them, etc. To that end, see the openbabel-scripting mailing list:; http://sourceforge.net/mailarchive/forum.php?forum_id=45398; http://lists.sourceforge.net/mailman/listinfo/openbabel-scripting. I'm marking this closed, pending further comment.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1376#issuecomment-281809516
https://github.com/openbabel/openbabel/issues/1376#issuecomment-281809516:266,Testability,test,test,266,"Logged In: YES ; user_id=21420. OK, this is much further along now. I have working Perl and Python ; bindings using SWIG. I'm hoping that others will take these and run with ; them further since I don't know what functionality needs to be wrapped, ; how to properly test them, etc. To that end, see the openbabel-scripting mailing list:; http://sourceforge.net/mailarchive/forum.php?forum_id=45398; http://lists.sourceforge.net/mailman/listinfo/openbabel-scripting. I'm marking this closed, pending further comment.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1376#issuecomment-281809516
https://github.com/openbabel/openbabel/issues/1377#issuecomment-281809526:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. Currently in CVS version using '--' to indicate that read/write should come from a pipe rather than a file. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1377#issuecomment-281809526
https://github.com/openbabel/openbabel/issues/1378#issuecomment-281809535:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. duplicate. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1378#issuecomment-281809535
https://github.com/openbabel/openbabel/issues/393#issuecomment-281774252:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. OK, a few things here.; 1) I'm not sure how you're treating things, but keep in mind; that Ghemical files use coordinates in nm, not Angstroms. If; I look at the two files attached, they have the same XYZ; coords even though they use different units. The PDB file is; missing a factor of 10x. &quot;Bonds&quot; that are very short are generally ignored, esp. in; PDB files which often have incorrect bond assignments. In any case, yes, it seems like the current PDB code doesn't; import the bonds quite correctly. If I had to take a guess,; it looks like except for bonds to hydrogens, all single; bonds are ignored, all higher-order bonds become single bonds. I'll try to follow up on this more. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/393#issuecomment-281774252
https://github.com/openbabel/openbabel/issues/393#issuecomment-281774253:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. A good source of PDB files for testing is at:. http://people.ouc.bc.ca/woodcock/molecule/molecule.html. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/393#issuecomment-281774253
https://github.com/openbabel/openbabel/issues/393#issuecomment-281774253:63,Testability,test,testing,63,Logged In: YES ; user_id=21420. A good source of PDB files for testing is at:. http://people.ouc.bc.ca/woodcock/molecule/molecule.html. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/393#issuecomment-281774253
https://github.com/openbabel/openbabel/issues/393#issuecomment-281774254:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Fixed in current OpenBabel CVS version now. Test PDB file; still has strange X, Y, Z coords, but it will show all 26; bonds on translation. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/393#issuecomment-281774254
https://github.com/openbabel/openbabel/issues/393#issuecomment-281774254:76,Testability,Test,Test,76,"Logged In: YES ; user_id=21420. Fixed in current OpenBabel CVS version now. Test PDB file; still has strange X, Y, Z coords, but it will show all 26; bonds on translation. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/393#issuecomment-281774254
https://github.com/openbabel/openbabel/issues/394#issuecomment-281774265:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I still have no idea what this is supposed to do, so for; now, the call is going to be removed from the header. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/394#issuecomment-281774265
https://github.com/openbabel/openbabel/issues/394#issuecomment-281774266:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Actually, it's called from rotor.cpp. if (!sp-&gt;RestrictedMatch(mol,vpr,true)); 	 {; 		 swap(vpr[0].first,vpr[1].first);; 		 if (!sp-&gt;RestrictedMatch(mol,vpr,true)); 			 continue;; 	 }. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/394#issuecomment-281774266
https://github.com/openbabel/openbabel/issues/394#issuecomment-281774268:166,Deployability,update,updated,166,"Logged In: YES ; user_id=21420. Should be fixed with the sync from the last OE-contributed; GPL code. The revised SMARTS parser implements this call.; This should be updated later today, after I confirm it is; free of memory leaks. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/394#issuecomment-281774268
https://github.com/openbabel/openbabel/issues/394#issuecomment-281774268:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Should be fixed with the sync from the last OE-contributed; GPL code. The revised SMARTS parser implements this call.; This should be updated later today, after I confirm it is; free of memory leaks. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/394#issuecomment-281774268
https://github.com/openbabel/openbabel/issues/395#issuecomment-281774280:116,Modifiability,variab,variables,116,"Logged In: YES ; user_id=21420. Should be fixed in new code now in CVS -- starts adding &quot;const&quot; to char * variables in appropriate places (e.g. tokenize, GlobalDataBase data, etc.). -GRH. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/395#issuecomment-281774280
https://github.com/openbabel/openbabel/issues/395#issuecomment-281774280:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Should be fixed in new code now in CVS -- starts adding &quot;const&quot; to char * variables in appropriate places (e.g. tokenize, GlobalDataBase data, etc.). -GRH. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/395#issuecomment-281774280
https://github.com/openbabel/openbabel/issues/396#issuecomment-281774305:60,Deployability,update,updated,60,Logged In: YES ; user_id=21420. Seems to be resolved in the updated Open Eyes contributed; code. A new bug report will be reopened if this comes up again. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/396#issuecomment-281774305
https://github.com/openbabel/openbabel/issues/396#issuecomment-281774305:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. Seems to be resolved in the updated Open Eyes contributed; code. A new bug report will be reopened if this comes up again. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/396#issuecomment-281774305
https://github.com/openbabel/openbabel/issues/397#issuecomment-281774309:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. Fixed with new Makefile adjustments. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/397#issuecomment-281774309
https://github.com/openbabel/openbabel/issues/398#issuecomment-281774326:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. This is also true for strcpy -&gt; strncpy, strcat, and a; variety of other calls. Programs like its4, flawfinder and; RATS automate searching for these. I'm attaching its4 (v; 1.1.1) and flawfinder (0.22) output for the code and these; should be addressed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/398#issuecomment-281774326
https://github.com/openbabel/openbabel/issues/398#issuecomment-281774330:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. Also there are calls to strcpy in:. data.h:92; mol.h:230; mol.h:231. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/398#issuecomment-281774330
https://github.com/openbabel/openbabel/issues/398#issuecomment-281774332:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I'm marking this bug closed and re-opening a new bug with; flawfinder-1.22 output, which is more useful to peruse. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/398#issuecomment-281774332
https://github.com/openbabel/openbabel/issues/1379#issuecomment-281809542:394,Modifiability,evolve,evolved,394,"Logged In: YES ; user_id=21420. I'm marking this closed, pending further comment or obvious bits that ; should be incorporated. I've perused the changes between the Open ; Babel fork and the last OELib iteration. The *vast* majority are changes in whitespace. Many others are changes that have been made in Open Babel (often ; with different approaches). Open Babel isn't OELib anymore -- it's evolved considerably.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1379#issuecomment-281809542
https://github.com/openbabel/openbabel/issues/1379#issuecomment-281809542:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I'm marking this closed, pending further comment or obvious bits that ; should be incorporated. I've perused the changes between the Open ; Babel fork and the last OELib iteration. The *vast* majority are changes in whitespace. Many others are changes that have been made in Open Babel (often ; with different approaches). Open Babel isn't OELib anymore -- it's evolved considerably.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1379#issuecomment-281809542
https://github.com/openbabel/openbabel/issues/1380#issuecomment-281809550:71,Safety,avoid,avoid,71,"Logged In: NO . Geoff: I thought the STL iterators where introduced to avoid this problem,; shouldn't we be using them instead of ordinary loops?. Richard. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1380#issuecomment-281809550
https://github.com/openbabel/openbabel/issues/1380#issuecomment-281809550:0,Testability,Log,Logged,0,"Logged In: NO . Geoff: I thought the STL iterators where introduced to avoid this problem,; shouldn't we be using them instead of ordinary loops?. Richard. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1380#issuecomment-281809550
https://github.com/openbabel/openbabel/issues/1380#issuecomment-281809552:358,Deployability,release,release--but,358,"Logged In: YES ; user_id=21420. Yes, STL iterators should be used wherever possible. Not all; parts of the code use iterators yet. Furthermore, some of; the internal data structures reference the atom vector; directly. These do things like atom[idx-1] and all of these; will need to be found and fixed. This should be a task for after the next interim beta; release--but definitely before the 2.0.0 release!. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1380#issuecomment-281809552
https://github.com/openbabel/openbabel/issues/1380#issuecomment-281809552:399,Deployability,release,release,399,"Logged In: YES ; user_id=21420. Yes, STL iterators should be used wherever possible. Not all; parts of the code use iterators yet. Furthermore, some of; the internal data structures reference the atom vector; directly. These do things like atom[idx-1] and all of these; will need to be found and fixed. This should be a task for after the next interim beta; release--but definitely before the 2.0.0 release!. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1380#issuecomment-281809552
https://github.com/openbabel/openbabel/issues/1380#issuecomment-281809552:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Yes, STL iterators should be used wherever possible. Not all; parts of the code use iterators yet. Furthermore, some of; the internal data structures reference the atom vector; directly. These do things like atom[idx-1] and all of these; will need to be found and fixed. This should be a task for after the next interim beta; release--but definitely before the 2.0.0 release!. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1380#issuecomment-281809552
https://github.com/openbabel/openbabel/issues/1380#issuecomment-281809553:157,Deployability,release,released,157,"Logged In: YES ; user_id=21420. For right now, this won't be &quot;fixed.&quot; It breaks too much; code and it's too important to see &quot;Babel 2.0&quot; released and; stable. This should be re-visited for post-2.0 release if it seems; useful/important. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1380#issuecomment-281809553
https://github.com/openbabel/openbabel/issues/1380#issuecomment-281809553:218,Deployability,release,release,218,"Logged In: YES ; user_id=21420. For right now, this won't be &quot;fixed.&quot; It breaks too much; code and it's too important to see &quot;Babel 2.0&quot; released and; stable. This should be re-visited for post-2.0 release if it seems; useful/important. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1380#issuecomment-281809553
https://github.com/openbabel/openbabel/issues/1380#issuecomment-281809553:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. For right now, this won't be &quot;fixed.&quot; It breaks too much; code and it's too important to see &quot;Babel 2.0&quot; released and; stable. This should be re-visited for post-2.0 release if it seems; useful/important. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1380#issuecomment-281809553
https://github.com/openbabel/openbabel/issues/399#issuecomment-281774347:115,Deployability,release,release,115,Logged In: YES ; user_id=21420. No longer particularly useful. Still a good idea to check; warnings before the 2.0 release and clean things up. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/399#issuecomment-281774347
https://github.com/openbabel/openbabel/issues/399#issuecomment-281774347:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. No longer particularly useful. Still a good idea to check; warnings before the 2.0 release and clean things up. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/399#issuecomment-281774347
https://github.com/openbabel/openbabel/issues/400#issuecomment-281774364:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. Fixed. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/400#issuecomment-281774364
https://github.com/openbabel/openbabel/issues/1381#issuecomment-281809575:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Solved. Currently in CVS. Report format now lists molecular mass, exact mass,; chirality and any comment data in the file. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1381#issuecomment-281809575
https://github.com/openbabel/openbabel/issues/401#issuecomment-281774381:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. The final z-matrix doesn't seem to be significantly; different from the last cartesian matrix, so this will be; ignored. . Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/401#issuecomment-281774381
https://github.com/openbabel/openbabel/issues/402#issuecomment-281774397:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. This has been fixed. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/402#issuecomment-281774397
https://github.com/openbabel/openbabel/issues/1382#issuecomment-281809577:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. This has been solved in the current CVS code. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1382#issuecomment-281809577
https://github.com/openbabel/openbabel/issues/403#issuecomment-281774420:207,Energy Efficiency,energy,energy,207,"Logged In: YES ; user_id=21420. As an alternative solution, the API now specifies a; &quot;preferred&quot; 2D and/or 3D conformer. So for example, the; &quot;preferred&quot; 3D conformer would be the lowest energy in a; geometry optimization, etc. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/403#issuecomment-281774420
https://github.com/openbabel/openbabel/issues/403#issuecomment-281774420:229,Performance,optimiz,optimization,229,"Logged In: YES ; user_id=21420. As an alternative solution, the API now specifies a; &quot;preferred&quot; 2D and/or 3D conformer. So for example, the; &quot;preferred&quot; 3D conformer would be the lowest energy in a; geometry optimization, etc. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/403#issuecomment-281774420
https://github.com/openbabel/openbabel/issues/403#issuecomment-281774420:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. As an alternative solution, the API now specifies a; &quot;preferred&quot; 2D and/or 3D conformer. So for example, the; &quot;preferred&quot; 3D conformer would be the lowest energy in a; geometry optimization, etc. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/403#issuecomment-281774420
https://github.com/openbabel/openbabel/issues/403#issuecomment-281774422:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. This is now a bug. The current method of dealing w/2D molecules ; prevents running ConnectTheDots and PerceiveBondOrders, etc. on ; 2D structures, but 3D structures that are, in fact, flat are not ; handled correctly. So structures *must* be marked as 2D/3D correctly or this will ; continue to become a bigger problem. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/403#issuecomment-281774422
https://github.com/openbabel/openbabel/issues/403#issuecomment-281774424:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. OBMol now has methods for getting/setting dimensionality and this is ; respected by ConnectTheDots, PerceiveBondOrders and other methods. It ; currently does not have support for marking the dimensionality of ; conformers or a ""preferred"" 2D or 3D conformer. But there are currently ; few formats that store both 2D and 3D coords -- and with the new ; OBConversion framework, the appropriate dimensionality can be picked ; by the user. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/403#issuecomment-281774424
https://github.com/openbabel/openbabel/issues/1383#issuecomment-281809591:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. Done. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1383#issuecomment-281809591
https://github.com/openbabel/openbabel/issues/1384#issuecomment-281809595:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. This is now fixed in the current CVS version. The main.cpp code ; uses OBMolVector to store multiple molecules and has code to ; pick a selection of molecules (or one, if firstMol == lastMol). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1384#issuecomment-281809595
https://github.com/openbabel/openbabel/issues/1385#issuecomment-281809622:36,Deployability,patch,patch,36,"Logged In: YES ; user_id=21420. The patch by Richard Gillian adds -hpH that will turn on; adjustment for pH, but currently there's no flag to set the pH. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1385#issuecomment-281809622
https://github.com/openbabel/openbabel/issues/1385#issuecomment-281809622:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. The patch by Richard Gillian adds -hpH that will turn on; adjustment for pH, but currently there's no flag to set the pH. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1385#issuecomment-281809622
https://github.com/openbabel/openbabel/issues/1386#issuecomment-281809655:153,Safety,safe,safely,153,"Logged In: YES ; user_id=21420. I'm closing this. Many of these flags are either now supported in Open ; Babel or auxiliary obtools (e.g., obfit) or can safely be ignored, IMHO. If ; users request them, they can be added later. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1386#issuecomment-281809655
https://github.com/openbabel/openbabel/issues/1386#issuecomment-281809655:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I'm closing this. Many of these flags are either now supported in Open ; Babel or auxiliary obtools (e.g., obfit) or can safely be ignored, IMHO. If ; users request them, they can be added later. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1386#issuecomment-281809655
https://github.com/openbabel/openbabel/issues/404#issuecomment-281774439:0,Testability,Log,Logged,0,Logged In: NO . submitted by Richard Gillilan. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/404#issuecomment-281774439
https://github.com/openbabel/openbabel/issues/404#issuecomment-281774440:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. This is most decidedly fixed in the current CVS code. (Phew!); -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/404#issuecomment-281774440
https://github.com/openbabel/openbabel/issues/404#issuecomment-281774441:4,Testability,test,test,4,TRP test file. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/404#issuecomment-281774441
https://github.com/openbabel/openbabel/issues/1387#issuecomment-281809682:133,Deployability,release,release,133,Logged In: YES ; user_id=21420. Progress is being made on this -- complete documentation should be ; finished by the time of the 2.0 release. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1387#issuecomment-281809682
https://github.com/openbabel/openbabel/issues/1387#issuecomment-281809682:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. Progress is being made on this -- complete documentation should be ; finished by the time of the 2.0 release. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1387#issuecomment-281809682
https://github.com/openbabel/openbabel/issues/1387#issuecomment-281809683:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. This is pretty much completed. I'm marking this closed -- the ; documentation needs some improvement, but is basically in good shape. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1387#issuecomment-281809683
https://github.com/openbabel/openbabel/issues/1387#issuecomment-281809684:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1387#issuecomment-281809684
https://github.com/openbabel/openbabel/issues/1388#issuecomment-281809697:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. This is duplicated in the &quot;task manager&quot; so I'm closing this. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1388#issuecomment-281809697
https://github.com/openbabel/openbabel/issues/405#issuecomment-281774470:171,Deployability,release,release,171,"Logged In: YES ; user_id=21420. Are these still a problem with the current CVS version?. I'd like to know if the current PerceiveBO code is &quot;good; enough&quot; for a release w/o massive, ugly bugs like you raised. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/405#issuecomment-281774470
https://github.com/openbabel/openbabel/issues/405#issuecomment-281774470:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Are these still a problem with the current CVS version?. I'd like to know if the current PerceiveBO code is &quot;good; enough&quot; for a release w/o massive, ugly bugs like you raised. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/405#issuecomment-281774470
https://github.com/openbabel/openbabel/issues/405#issuecomment-281774471:16,Deployability,Update,Update,16,"Logged In: NO . Update: the 1/10/03 CVS version seems to correctly protonate; all; standard amino acid residues except:. HIS: missing a proton on 5-membered ring; TRP: missing a proton on 5-membered ring; PRO: missing all bonds in 5-membered ring, protons correct; ARG: C=N double bond in wrong place. Richard. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/405#issuecomment-281774471
https://github.com/openbabel/openbabel/issues/405#issuecomment-281774471:0,Testability,Log,Logged,0,"Logged In: NO . Update: the 1/10/03 CVS version seems to correctly protonate; all; standard amino acid residues except:. HIS: missing a proton on 5-membered ring; TRP: missing a proton on 5-membered ring; PRO: missing all bonds in 5-membered ring, protons correct; ARG: C=N double bond in wrong place. Richard. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/405#issuecomment-281774471
https://github.com/openbabel/openbabel/issues/405#issuecomment-281774472:102,Availability,fault,fault,102,"Logged In: NO . Correction to last note: PRO residues are actually fine, it; was my graphics; code at fault. Richard. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/405#issuecomment-281774472
https://github.com/openbabel/openbabel/issues/405#issuecomment-281774472:0,Testability,Log,Logged,0,"Logged In: NO . Correction to last note: PRO residues are actually fine, it; was my graphics; code at fault. Richard. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/405#issuecomment-281774472
https://github.com/openbabel/openbabel/issues/405#issuecomment-281774473:16,Deployability,update,update,16,"Logged In: NO . update: have found fixes to all problems in this report,; none involved ; changes in code. In phmodel.txt:. HIS: can add missing hydrogen via; TRANSFORM [nD2:1]1c[nD2]cc1 &gt;&gt; [n+:1]1c[nD2]cc1; The real root of the problem here is that HIS in; nonionized form has; two tautomers (the proton may be on either nitrogen). ; Both occur in; nature though one is favored. . TRP: can add missing hydrogen via; TRANSFORM [nD2:1]1cccc1 &gt;&gt; [n+:1]1cccc1; (this last fix is not fully general and may mess up other; assignments,; so I have not checked it in). ARG: bond orders in resdata.txt are incorrect for RES ARG. Richard Gillilan. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/405#issuecomment-281774473
https://github.com/openbabel/openbabel/issues/405#issuecomment-281774473:0,Testability,Log,Logged,0,"Logged In: NO . update: have found fixes to all problems in this report,; none involved ; changes in code. In phmodel.txt:. HIS: can add missing hydrogen via; TRANSFORM [nD2:1]1c[nD2]cc1 &gt;&gt; [n+:1]1c[nD2]cc1; The real root of the problem here is that HIS in; nonionized form has; two tautomers (the proton may be on either nitrogen). ; Both occur in; nature though one is favored. . TRP: can add missing hydrogen via; TRANSFORM [nD2:1]1cccc1 &gt;&gt; [n+:1]1cccc1; (this last fix is not fully general and may mess up other; assignments,; so I have not checked it in). ARG: bond orders in resdata.txt are incorrect for RES ARG. Richard Gillilan. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/405#issuecomment-281774473
https://github.com/openbabel/openbabel/issues/405#issuecomment-281774474:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I'm marking this closed, since the initial report seems to be fixed. If we have more bond-order problems, let's reopen another bug. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/405#issuecomment-281774474
https://github.com/openbabel/openbabel/issues/1389#issuecomment-281809711:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. I don't believe the .z and .Z format can be supported. But gzip support is pending and will be added soon. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1389#issuecomment-281809711
https://github.com/openbabel/openbabel/issues/1389#issuecomment-281809712:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1389#issuecomment-281809712
https://github.com/openbabel/openbabel/issues/406#issuecomment-281774486:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. I can't promise that the state of the CVS tree is tested in; any significant way at any particular point of time. It's a little strange b/c I can compile it just fine. But I; think right now the build environment is still using; gcc-2.95.2 since I spied a missing std:: in the header file. I'll fix that shortly. Thanks for the heads up.; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/406#issuecomment-281774486
https://github.com/openbabel/openbabel/issues/406#issuecomment-281774486:82,Testability,test,tested,82,Logged In: YES ; user_id=21420. I can't promise that the state of the CVS tree is tested in; any significant way at any particular point of time. It's a little strange b/c I can compile it just fine. But I; think right now the build environment is still using; gcc-2.95.2 since I spied a missing std:: in the header file. I'll fix that shortly. Thanks for the heads up.; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/406#issuecomment-281774486
https://github.com/openbabel/openbabel/issues/1390#issuecomment-281809733:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Since the CML code provides some XML parsing, it might be a; better idea to have a minimal/light XML parser incorporated; into the OB codebase. This would make it easier to handle; formats like CRK and other XML-based files. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1390#issuecomment-281809733
https://github.com/openbabel/openbabel/issues/1390#issuecomment-281809734:362,Availability,avail,available,362,"Logged In: YES ; user_id=21420. This is now possible in the build environment, since individual file ; formats are built separately. Any new file format requiring an XML library ; will be built conditionally. It doesn't make sense for Open Babel itself to write an XML library or ; include such code in the distribution -- such libraries are typically ; already available on a system or can be downloaded easily if an XML ; format is requested. As for the CML code, the full CML DOM is available for an updated ; cml.cpp. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1390#issuecomment-281809734
https://github.com/openbabel/openbabel/issues/1390#issuecomment-281809734:394,Availability,down,downloaded,394,"Logged In: YES ; user_id=21420. This is now possible in the build environment, since individual file ; formats are built separately. Any new file format requiring an XML library ; will be built conditionally. It doesn't make sense for Open Babel itself to write an XML library or ; include such code in the distribution -- such libraries are typically ; already available on a system or can be downloaded easily if an XML ; format is requested. As for the CML code, the full CML DOM is available for an updated ; cml.cpp. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1390#issuecomment-281809734
https://github.com/openbabel/openbabel/issues/1390#issuecomment-281809734:486,Availability,avail,available,486,"Logged In: YES ; user_id=21420. This is now possible in the build environment, since individual file ; formats are built separately. Any new file format requiring an XML library ; will be built conditionally. It doesn't make sense for Open Babel itself to write an XML library or ; include such code in the distribution -- such libraries are typically ; already available on a system or can be downloaded easily if an XML ; format is requested. As for the CML code, the full CML DOM is available for an updated ; cml.cpp. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1390#issuecomment-281809734
https://github.com/openbabel/openbabel/issues/1390#issuecomment-281809734:503,Deployability,update,updated,503,"Logged In: YES ; user_id=21420. This is now possible in the build environment, since individual file ; formats are built separately. Any new file format requiring an XML library ; will be built conditionally. It doesn't make sense for Open Babel itself to write an XML library or ; include such code in the distribution -- such libraries are typically ; already available on a system or can be downloaded easily if an XML ; format is requested. As for the CML code, the full CML DOM is available for an updated ; cml.cpp. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1390#issuecomment-281809734
https://github.com/openbabel/openbabel/issues/1390#issuecomment-281809734:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. This is now possible in the build environment, since individual file ; formats are built separately. Any new file format requiring an XML library ; will be built conditionally. It doesn't make sense for Open Babel itself to write an XML library or ; include such code in the distribution -- such libraries are typically ; already available on a system or can be downloaded easily if an XML ; format is requested. As for the CML code, the full CML DOM is available for an updated ; cml.cpp. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1390#issuecomment-281809734
https://github.com/openbabel/openbabel/issues/1391#issuecomment-281809737:134,Deployability,integrat,integrated,134,Logged In: YES ; user_id=21420. This is essentially solved. New CML code (including a full CMLDOM) has ; been contributed and will be integrated soon. The C++ CMLDOM is ; evidently autogenerated to some degree and will thus be updated as ; needed. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1391#issuecomment-281809737
https://github.com/openbabel/openbabel/issues/1391#issuecomment-281809737:227,Deployability,update,updated,227,Logged In: YES ; user_id=21420. This is essentially solved. New CML code (including a full CMLDOM) has ; been contributed and will be integrated soon. The C++ CMLDOM is ; evidently autogenerated to some degree and will thus be updated as ; needed. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1391#issuecomment-281809737
https://github.com/openbabel/openbabel/issues/1391#issuecomment-281809737:134,Integrability,integrat,integrated,134,Logged In: YES ; user_id=21420. This is essentially solved. New CML code (including a full CMLDOM) has ; been contributed and will be integrated soon. The C++ CMLDOM is ; evidently autogenerated to some degree and will thus be updated as ; needed. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1391#issuecomment-281809737
https://github.com/openbabel/openbabel/issues/1391#issuecomment-281809737:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. This is essentially solved. New CML code (including a full CMLDOM) has ; been contributed and will be integrated soon. The C++ CMLDOM is ; evidently autogenerated to some degree and will thus be updated as ; needed. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1391#issuecomment-281809737
https://github.com/openbabel/openbabel/issues/407#issuecomment-281774487:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. This code is not used anywhere in the rest of the Open Babel; code. So let's fix this bug--it won't break our code. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/407#issuecomment-281774487
https://github.com/openbabel/openbabel/issues/407#issuecomment-281774488:67,Deployability,update,update,67,"Logged In: YES ; user_id=21420. This will be fixed in the next CVS update. All atoms are; considered, and proper mass-weighted coordinates are used. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/407#issuecomment-281774488
https://github.com/openbabel/openbabel/issues/407#issuecomment-281774488:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. This will be fixed in the next CVS update. All atoms are; considered, and proper mass-weighted coordinates are used. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/407#issuecomment-281774488
https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809758:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. The coordinates cannot be saved in SMILES format since this; format only specifies connectivity. However, there should be; non-zero coordinates given for the atoms. What needs to happen is after parsing the SMILES string and; deriving the correct connectivity, there should be a; two-step arrangement:; * Set atom geometries (i.e. bond angles); * Set bond lengths. This will require a bit more work, but I think I have the; beginnings of an &quot;easy&quot; implementation. (Famous last words,; probably.). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809758
https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809761:255,Energy Efficiency,adapt,adapting,255,"Logged In: YES ; user_id=21420. Famous last words indeed!. I'm not sure if it's better to leave random numbers as the; coordinates (which at least prevents nasty divide-by-zero; problems) or 0.0000s. The &quot;solution&quot; will probably involve porting/adapting a SDG; from the LGPL'ed CDK project:; http://cdk.sf.net/; http://cvs.sourceforge.net/cgi-bin/viewcvs.cgi/cdk/cdk/src/org/openscience/cdk/layout/StructureDiagramGenerator.java. The code is about 700 lines of Java, some of which; implements classes already in Open Babel. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809761
https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809761:255,Modifiability,adapt,adapting,255,"Logged In: YES ; user_id=21420. Famous last words indeed!. I'm not sure if it's better to leave random numbers as the; coordinates (which at least prevents nasty divide-by-zero; problems) or 0.0000s. The &quot;solution&quot; will probably involve porting/adapting a SDG; from the LGPL'ed CDK project:; http://cdk.sf.net/; http://cvs.sourceforge.net/cgi-bin/viewcvs.cgi/cdk/cdk/src/org/openscience/cdk/layout/StructureDiagramGenerator.java. The code is about 700 lines of Java, some of which; implements classes already in Open Babel. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809761
https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809761:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Famous last words indeed!. I'm not sure if it's better to leave random numbers as the; coordinates (which at least prevents nasty divide-by-zero; problems) or 0.0000s. The &quot;solution&quot; will probably involve porting/adapting a SDG; from the LGPL'ed CDK project:; http://cdk.sf.net/; http://cvs.sourceforge.net/cgi-bin/viewcvs.cgi/cdk/cdk/src/org/openscience/cdk/layout/StructureDiagramGenerator.java. The code is about 700 lines of Java, some of which; implements classes already in Open Babel. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809761
https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809762:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. This is a feature-request, not really a bug. In the worst-case scenario, 2D coordinates can be generated; using standard structure-diagram generation (SDG) code, e.g.; from the CDK project. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809762
https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809763:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. I'm renaming the summary for this. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809763
https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809765:585,Modifiability,extend,extend,585,"Logged In: YES ; user_id=169818. I like the Rarey et al. algorithm. @ARTICLE{fgr04,; author = {P. C. Fricker and M. Gastreich and M. Rarey},; title = {{A}utomated {D}rawing of {S}tructural {M}; olecular {F}ormulas under; 	{C}onstraints},; journal = {J. Chem. Inf. Comput. Sci.},; year = {2004},; volume = {44},; pages = {1065--1078},; abstract = {In this paper, we present a new algorithm for ; automated drawing of; 	2D structural formulas of molecules. The algorithm ; is based on the; 	classical scheme of a drawing queue placing the ; molecular fragments; 	in a sequential way. We extend the concept of so-; called prefabricated; 	units developed for complex ring systems to ; automatically created; 	drawing units for chains and rings which will then ; be assembled; 	in a sequential fashion. The approach is fast and ; can be naturally; 	extended to the problem of drawing molecules with ; common core structures.; 	Further on, we present an algorithm that allows the ; drawing of 2D; 	structural formulas under directional constraints ; assigned to a; 	subset of bonds. Since no numerical optimization is ; necessary, the; 	algorithm creates drawings of small organic ; molecules on the order; 	of 500 structures per second. The new algorithm is ; relevant for; 	all kinds of prediction and analysis software ; presenting a large; 	number of probably similar molecular structures to ; the user of the; 	software.},; doi = {10.1021/ci049958u},; owner = {wegner@users.sf.net},; }. Original comment by: wegner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809765
https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809765:844,Modifiability,extend,extended,844,"Logged In: YES ; user_id=169818. I like the Rarey et al. algorithm. @ARTICLE{fgr04,; author = {P. C. Fricker and M. Gastreich and M. Rarey},; title = {{A}utomated {D}rawing of {S}tructural {M}; olecular {F}ormulas under; 	{C}onstraints},; journal = {J. Chem. Inf. Comput. Sci.},; year = {2004},; volume = {44},; pages = {1065--1078},; abstract = {In this paper, we present a new algorithm for ; automated drawing of; 	2D structural formulas of molecules. The algorithm ; is based on the; 	classical scheme of a drawing queue placing the ; molecular fragments; 	in a sequential way. We extend the concept of so-; called prefabricated; 	units developed for complex ring systems to ; automatically created; 	drawing units for chains and rings which will then ; be assembled; 	in a sequential fashion. The approach is fast and ; can be naturally; 	extended to the problem of drawing molecules with ; common core structures.; 	Further on, we present an algorithm that allows the ; drawing of 2D; 	structural formulas under directional constraints ; assigned to a; 	subset of bonds. Since no numerical optimization is ; necessary, the; 	algorithm creates drawings of small organic ; molecules on the order; 	of 500 structures per second. The new algorithm is ; relevant for; 	all kinds of prediction and analysis software ; presenting a large; 	number of probably similar molecular structures to ; the user of the; 	software.},; doi = {10.1021/ci049958u},; owner = {wegner@users.sf.net},; }. Original comment by: wegner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809765
https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809765:519,Performance,queue,queue,519,"Logged In: YES ; user_id=169818. I like the Rarey et al. algorithm. @ARTICLE{fgr04,; author = {P. C. Fricker and M. Gastreich and M. Rarey},; title = {{A}utomated {D}rawing of {S}tructural {M}; olecular {F}ormulas under; 	{C}onstraints},; journal = {J. Chem. Inf. Comput. Sci.},; year = {2004},; volume = {44},; pages = {1065--1078},; abstract = {In this paper, we present a new algorithm for ; automated drawing of; 	2D structural formulas of molecules. The algorithm ; is based on the; 	classical scheme of a drawing queue placing the ; molecular fragments; 	in a sequential way. We extend the concept of so-; called prefabricated; 	units developed for complex ring systems to ; automatically created; 	drawing units for chains and rings which will then ; be assembled; 	in a sequential fashion. The approach is fast and ; can be naturally; 	extended to the problem of drawing molecules with ; common core structures.; 	Further on, we present an algorithm that allows the ; drawing of 2D; 	structural formulas under directional constraints ; assigned to a; 	subset of bonds. Since no numerical optimization is ; necessary, the; 	algorithm creates drawings of small organic ; molecules on the order; 	of 500 structures per second. The new algorithm is ; relevant for; 	all kinds of prediction and analysis software ; presenting a large; 	number of probably similar molecular structures to ; the user of the; 	software.},; doi = {10.1021/ci049958u},; owner = {wegner@users.sf.net},; }. Original comment by: wegner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809765
https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809765:1096,Performance,optimiz,optimization,1096,"Logged In: YES ; user_id=169818. I like the Rarey et al. algorithm. @ARTICLE{fgr04,; author = {P. C. Fricker and M. Gastreich and M. Rarey},; title = {{A}utomated {D}rawing of {S}tructural {M}; olecular {F}ormulas under; 	{C}onstraints},; journal = {J. Chem. Inf. Comput. Sci.},; year = {2004},; volume = {44},; pages = {1065--1078},; abstract = {In this paper, we present a new algorithm for ; automated drawing of; 	2D structural formulas of molecules. The algorithm ; is based on the; 	classical scheme of a drawing queue placing the ; molecular fragments; 	in a sequential way. We extend the concept of so-; called prefabricated; 	units developed for complex ring systems to ; automatically created; 	drawing units for chains and rings which will then ; be assembled; 	in a sequential fashion. The approach is fast and ; can be naturally; 	extended to the problem of drawing molecules with ; common core structures.; 	Further on, we present an algorithm that allows the ; drawing of 2D; 	structural formulas under directional constraints ; assigned to a; 	subset of bonds. Since no numerical optimization is ; necessary, the; 	algorithm creates drawings of small organic ; molecules on the order; 	of 500 structures per second. The new algorithm is ; relevant for; 	all kinds of prediction and analysis software ; presenting a large; 	number of probably similar molecular structures to ; the user of the; 	software.},; doi = {10.1021/ci049958u},; owner = {wegner@users.sf.net},; }. Original comment by: wegner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809765
https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809765:1283,Safety,predict,prediction,1283,"Logged In: YES ; user_id=169818. I like the Rarey et al. algorithm. @ARTICLE{fgr04,; author = {P. C. Fricker and M. Gastreich and M. Rarey},; title = {{A}utomated {D}rawing of {S}tructural {M}; olecular {F}ormulas under; 	{C}onstraints},; journal = {J. Chem. Inf. Comput. Sci.},; year = {2004},; volume = {44},; pages = {1065--1078},; abstract = {In this paper, we present a new algorithm for ; automated drawing of; 	2D structural formulas of molecules. The algorithm ; is based on the; 	classical scheme of a drawing queue placing the ; molecular fragments; 	in a sequential way. We extend the concept of so-; called prefabricated; 	units developed for complex ring systems to ; automatically created; 	drawing units for chains and rings which will then ; be assembled; 	in a sequential fashion. The approach is fast and ; can be naturally; 	extended to the problem of drawing molecules with ; common core structures.; 	Further on, we present an algorithm that allows the ; drawing of 2D; 	structural formulas under directional constraints ; assigned to a; 	subset of bonds. Since no numerical optimization is ; necessary, the; 	algorithm creates drawings of small organic ; molecules on the order; 	of 500 structures per second. The new algorithm is ; relevant for; 	all kinds of prediction and analysis software ; presenting a large; 	number of probably similar molecular structures to ; the user of the; 	software.},; doi = {10.1021/ci049958u},; owner = {wegner@users.sf.net},; }. Original comment by: wegner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809765
https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809765:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=169818. I like the Rarey et al. algorithm. @ARTICLE{fgr04,; author = {P. C. Fricker and M. Gastreich and M. Rarey},; title = {{A}utomated {D}rawing of {S}tructural {M}; olecular {F}ormulas under; 	{C}onstraints},; journal = {J. Chem. Inf. Comput. Sci.},; year = {2004},; volume = {44},; pages = {1065--1078},; abstract = {In this paper, we present a new algorithm for ; automated drawing of; 	2D structural formulas of molecules. The algorithm ; is based on the; 	classical scheme of a drawing queue placing the ; molecular fragments; 	in a sequential way. We extend the concept of so-; called prefabricated; 	units developed for complex ring systems to ; automatically created; 	drawing units for chains and rings which will then ; be assembled; 	in a sequential fashion. The approach is fast and ; can be naturally; 	extended to the problem of drawing molecules with ; common core structures.; 	Further on, we present an algorithm that allows the ; drawing of 2D; 	structural formulas under directional constraints ; assigned to a; 	subset of bonds. Since no numerical optimization is ; necessary, the; 	algorithm creates drawings of small organic ; molecules on the order; 	of 500 structures per second. The new algorithm is ; relevant for; 	all kinds of prediction and analysis software ; presenting a large; 	number of probably similar molecular structures to ; the user of the; 	software.},; doi = {10.1021/ci049958u},; owner = {wegner@users.sf.net},; }. Original comment by: wegner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809765
https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809767:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. This is currently underway, thanks to Tim Vandermeersch in the SVN trunk for 2.1. The tools/obgen program doesn't solve everything, but it does include a fair amount of linear and small ring compounds. Tim has also added code for MM2 molecular mechanics evaluation. See SVN revision e.g., 1682 or later.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809767
https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809768:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. I'm marking this closed -- the obgen / OBBuilder tools are in great shape. There are certainly issues remaining, but we should take those up as new bug reports. This feature request is closed as finished by Tim. Thanks!. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809768
https://github.com/openbabel/openbabel/issues/1393#issuecomment-281809782:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. The new OBMessageHandler class in the CVS code takes care of much of ; this. The format code (and others) need to take advantage of the new ; class more, but support exists to solve this PR. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1393#issuecomment-281809782
https://github.com/openbabel/openbabel/issues/408#issuecomment-281774505:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Actually, it just shouldn't happen. According to the PDB; spec, the current Open Babel code is just wrong. If I send you the current OpenBabel CVS code, would you give; it a try? AFAIK, it's correct. -Geoff; hutchisn@chem.northwestern.edu. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/408#issuecomment-281774505
https://github.com/openbabel/openbabel/issues/409#issuecomment-281774526:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. Also fails on:. Alpha-Linux gcc-2.95.4:; Linux usf-cf-alpha-linux-1 2.2.20 #2 Wed Mar 20 19:57:28 EST; 2002 alpha unknown. Reading specs from /usr/lib/gcc-lib/alpha-linux/2.95.4/specs; gcc version 2.95.4 20011002 (Debian prerelease). Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/409#issuecomment-281774526
https://github.com/openbabel/openbabel/issues/409#issuecomment-281774528:208,Deployability,release,release,208,"Logged In: YES ; user_id=21420. Also fails on Mac OS X (10.1.5):. Reading specs from /usr/libexec/gcc/darwin/ppc/2.95.2/specs; Apple Computer, Inc. version gcc-937.2, based on gcc version; 2.95.2 ; 19991024 (release). [localhost:~/Documents/Build/openbabel] ghutchis% uname -a; Darwin localhost 5.5 Darwin Kernel Version 5.5: Thu May 30; 14:51:26 PDT ; 2002; root:xnu/xnu-201.42.3.obj~1/RELEASE_PPC Power; Macintosh powerpc. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/409#issuecomment-281774528
https://github.com/openbabel/openbabel/issues/409#issuecomment-281774528:399,Energy Efficiency,Power,Power,399,"Logged In: YES ; user_id=21420. Also fails on Mac OS X (10.1.5):. Reading specs from /usr/libexec/gcc/darwin/ppc/2.95.2/specs; Apple Computer, Inc. version gcc-937.2, based on gcc version; 2.95.2 ; 19991024 (release). [localhost:~/Documents/Build/openbabel] ghutchis% uname -a; Darwin localhost 5.5 Darwin Kernel Version 5.5: Thu May 30; 14:51:26 PDT ; 2002; root:xnu/xnu-201.42.3.obj~1/RELEASE_PPC Power; Macintosh powerpc. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/409#issuecomment-281774528
https://github.com/openbabel/openbabel/issues/409#issuecomment-281774528:416,Energy Efficiency,power,powerpc,416,"Logged In: YES ; user_id=21420. Also fails on Mac OS X (10.1.5):. Reading specs from /usr/libexec/gcc/darwin/ppc/2.95.2/specs; Apple Computer, Inc. version gcc-937.2, based on gcc version; 2.95.2 ; 19991024 (release). [localhost:~/Documents/Build/openbabel] ghutchis% uname -a; Darwin localhost 5.5 Darwin Kernel Version 5.5: Thu May 30; 14:51:26 PDT ; 2002; root:xnu/xnu-201.42.3.obj~1/RELEASE_PPC Power; Macintosh powerpc. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/409#issuecomment-281774528
https://github.com/openbabel/openbabel/issues/409#issuecomment-281774528:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Also fails on Mac OS X (10.1.5):. Reading specs from /usr/libexec/gcc/darwin/ppc/2.95.2/specs; Apple Computer, Inc. version gcc-937.2, based on gcc version; 2.95.2 ; 19991024 (release). [localhost:~/Documents/Build/openbabel] ghutchis% uname -a; Darwin localhost 5.5 Darwin Kernel Version 5.5: Thu May 30; 14:51:26 PDT ; 2002; root:xnu/xnu-201.42.3.obj~1/RELEASE_PPC Power; Macintosh powerpc. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/409#issuecomment-281774528
https://github.com/openbabel/openbabel/issues/409#issuecomment-281774529:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Fixed. Problem derives from numerical accuracy issues, and loosening the accuracy constraints to 2e-6 from 1e-6 seems to solve the problem. The matrix test also now reports more information for debugging. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/409#issuecomment-281774529
https://github.com/openbabel/openbabel/issues/409#issuecomment-281774529:183,Testability,test,test,183,"Logged In: YES ; user_id=21420. Fixed. Problem derives from numerical accuracy issues, and loosening the accuracy constraints to 2e-6 from 1e-6 seems to solve the problem. The matrix test also now reports more information for debugging. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/409#issuecomment-281774529
https://github.com/openbabel/openbabel/issues/410#issuecomment-281774541:150,Availability,error,errors,150,"Logged In: YES ; user_id=21420. Typing problems fixed.; Buckyball kekulization problems fixed (and bonds look; &quot;perfect&quot;). 417 kekulization errors remain (unknown cause currently). SMI problems with 1HVC are from recursing too deeply.; For now, we probably should limit how large an SMI can be,; e.g. 1000 atoms. Mol and BIN problems with 1HVC come from reading the; resulting file.; MOL has a problem with the number of atoms--it stores this; in the file and 1HVC is too big. (Easy fix, we limit how; large a MOL can be!); BIN seems to have other problems. Not obvious where the; problem lies. SMI and FIX problems seem to stem from an underlying memory; corruption bug. --- Summary: ---; 417 kekulize unfixed; 1hvc BIN unfixed; Table SMI/FIX bugs unfixed; Table CACINT unfixed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/410#issuecomment-281774541
https://github.com/openbabel/openbabel/issues/410#issuecomment-281774541:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Typing problems fixed.; Buckyball kekulization problems fixed (and bonds look; &quot;perfect&quot;). 417 kekulization errors remain (unknown cause currently). SMI problems with 1HVC are from recursing too deeply.; For now, we probably should limit how large an SMI can be,; e.g. 1000 atoms. Mol and BIN problems with 1HVC come from reading the; resulting file.; MOL has a problem with the number of atoms--it stores this; in the file and 1HVC is too big. (Easy fix, we limit how; large a MOL can be!); BIN seems to have other problems. Not obvious where the; problem lies. SMI and FIX problems seem to stem from an underlying memory; corruption bug. --- Summary: ---; 417 kekulize unfixed; 1hvc BIN unfixed; Table SMI/FIX bugs unfixed; Table CACINT unfixed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/410#issuecomment-281774541
https://github.com/openbabel/openbabel/issues/411#issuecomment-281774549:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I'm working on this--it's now pretty obvious what's happening, though it may require a few more days to have a fix. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/411#issuecomment-281774549
https://github.com/openbabel/openbabel/issues/411#issuecomment-281774550:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. This is now fixed in the CVS code. If you'd like, I can send you a copy of a snapshot for further testing?. Sorry for taking so long to fix this--pretty simple in the end. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/411#issuecomment-281774550
https://github.com/openbabel/openbabel/issues/411#issuecomment-281774550:130,Testability,test,testing,130,"Logged In: YES ; user_id=21420. This is now fixed in the CVS code. If you'd like, I can send you a copy of a snapshot for further testing?. Sorry for taking so long to fix this--pretty simple in the end. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/411#issuecomment-281774550
https://github.com/openbabel/openbabel/issues/411#issuecomment-281774550:185,Usability,simpl,simple,185,"Logged In: YES ; user_id=21420. This is now fixed in the CVS code. If you'd like, I can send you a copy of a snapshot for further testing?. Sorry for taking so long to fix this--pretty simple in the end. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/411#issuecomment-281774550
https://github.com/openbabel/openbabel/issues/412#issuecomment-281774567:147,Performance,perform,performance,147,"Logged In: YES ; user_id=21420. Fixed. Root cause was that attempting to add alpha-peptide bonds was connecting long-range bonds. This should help performance as well. A new check also looks for long bonds causing very small angles, e.g. across a small ring. (As was the case in the indigo molecule that precipitated the bug report.). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/412#issuecomment-281774567
https://github.com/openbabel/openbabel/issues/412#issuecomment-281774567:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Fixed. Root cause was that attempting to add alpha-peptide bonds was connecting long-range bonds. This should help performance as well. A new check also looks for long bonds causing very small angles, e.g. across a small ring. (As was the case in the indigo molecule that precipitated the bug report.). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/412#issuecomment-281774567
https://github.com/openbabel/openbabel/issues/413#issuecomment-281774593:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. This should be fixed now. The problem was that the PDB read methods didn't ever bother to call mol.SetTitle()... this is now the case. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/413#issuecomment-281774593
https://github.com/openbabel/openbabel/issues/414#issuecomment-281774597:79,Deployability,release,release,79,Logged In: YES ; user_id=21420. This should be re-investigated before the next release and; I'll try to grab many of these along the way. I'm also wondering if some of the warnings have gone away; with the switch to double-precision floats. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/414#issuecomment-281774597
https://github.com/openbabel/openbabel/issues/414#issuecomment-281774597:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. This should be re-investigated before the next release and; I'll try to grab many of these along the way. I'm also wondering if some of the warnings have gone away; with the switch to double-precision floats. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/414#issuecomment-281774597
https://github.com/openbabel/openbabel/issues/415#issuecomment-281774609:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I certainly haven't reproduced a segfault on a SMILES to SDF conversion. So I'll need some additional information from you to debug this. (a) What version of Open Babel are you using?; (b) Can we have a copy of the SMILES file to reproduce the bug?. You can use the &quot;upload file&quot; feature in the bug tracker, or if the file needs to remain private, please e-mail me directly. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/415#issuecomment-281774609
https://github.com/openbabel/openbabel/issues/415#issuecomment-281774611:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I'd definitely like to solve this bug, but w/o more; information, I'm going to mark it &quot;pending&quot; in a few days. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/415#issuecomment-281774611
https://github.com/openbabel/openbabel/issues/415#issuecomment-281774612:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Several bugs have been fixed in the SMILES code. Without; further follow-up, this bug should be closed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/415#issuecomment-281774612
https://github.com/openbabel/openbabel/issues/1394#issuecomment-281809783:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. Duplicate submission. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1394#issuecomment-281809783
https://github.com/openbabel/openbabel/issues/1395#issuecomment-281809803:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. A test mol2 file is attached. Code changes in src/mol2.cpp::ReadMol2. The sscanf; statement needs revision (to actually grab the string) and; then code to; add the OBResidue objects needs to go in. (It'd be similar; to the code at; the end of src/pdb.cpp::ParseAtomRecord.). -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1395#issuecomment-281809803
https://github.com/openbabel/openbabel/issues/1395#issuecomment-281809803:34,Testability,test,test,34,Logged In: YES ; user_id=21420. A test mol2 file is attached. Code changes in src/mol2.cpp::ReadMol2. The sscanf; statement needs revision (to actually grab the string) and; then code to; add the OBResidue objects needs to go in. (It'd be similar; to the code at; the end of src/pdb.cpp::ParseAtomRecord.). -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1395#issuecomment-281809803
https://github.com/openbabel/openbabel/issues/1395#issuecomment-281809804:8,Testability,test,test,8,gzip-ed test file (in Mol2 format). Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1395#issuecomment-281809804
https://github.com/openbabel/openbabel/issues/1395#issuecomment-281809806:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. The CVS code should be a start on this. I'm marking the; feature request &quot;pending&quot; until I can get a bit more; feedback on whether this works. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1395#issuecomment-281809806
https://github.com/openbabel/openbabel/issues/1395#issuecomment-281809806:153,Usability,feedback,feedback,153,Logged In: YES ; user_id=21420. The CVS code should be a start on this. I'm marking the; feature request &quot;pending&quot; until I can get a bit more; feedback on whether this works. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1395#issuecomment-281809806
https://github.com/openbabel/openbabel/issues/416#issuecomment-281774626:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. This is fixed. Thanks very much for your contribution!; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/416#issuecomment-281774626
https://github.com/openbabel/openbabel/issues/417#issuecomment-281774652:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. The ViewMol program writes coordinates in Bohr, but the; format indicates the conversion factor between the; coordinates used and Angstrom. The Open Babel code continues to write coordinates in; Angstrom and reads the conversion factor, enabling correct; roundtrip behavior. This also ensures that any ViewMol files; written in Angstrom are read correctly. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/417#issuecomment-281774652
https://github.com/openbabel/openbabel/issues/420#issuecomment-281774685:124,Modifiability,variab,variables,124,"Logged In: YES ; user_id=21420. I have not been able to reproduce this, though the cml.cpp code ; unfortunately uses global variables, which is bad. The backtrace looks like it has been compiled with optimization ; turned on, which makes it a little hard to follow. If you have the ; time and can reproduce the bug after compiling with just ; CXXFLAGS=&quot;-g&quot; it would be appreciated. Alternatively, if you could come up with some small program that ; reproduces the bug, that would greatly help. As it stands, it could ; be that one of the global pointers in cml.cpp is getting clobbered, ; but I can't see why it would make it to that line before the ; segfault. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/420#issuecomment-281774685
https://github.com/openbabel/openbabel/issues/420#issuecomment-281774685:200,Performance,optimiz,optimization,200,"Logged In: YES ; user_id=21420. I have not been able to reproduce this, though the cml.cpp code ; unfortunately uses global variables, which is bad. The backtrace looks like it has been compiled with optimization ; turned on, which makes it a little hard to follow. If you have the ; time and can reproduce the bug after compiling with just ; CXXFLAGS=&quot;-g&quot; it would be appreciated. Alternatively, if you could come up with some small program that ; reproduces the bug, that would greatly help. As it stands, it could ; be that one of the global pointers in cml.cpp is getting clobbered, ; but I can't see why it would make it to that line before the ; segfault. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/420#issuecomment-281774685
https://github.com/openbabel/openbabel/issues/420#issuecomment-281774685:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I have not been able to reproduce this, though the cml.cpp code ; unfortunately uses global variables, which is bad. The backtrace looks like it has been compiled with optimization ; turned on, which makes it a little hard to follow. If you have the ; time and can reproduce the bug after compiling with just ; CXXFLAGS=&quot;-g&quot; it would be appreciated. Alternatively, if you could come up with some small program that ; reproduces the bug, that would greatly help. As it stands, it could ; be that one of the global pointers in cml.cpp is getting clobbered, ; but I can't see why it would make it to that line before the ; segfault. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/420#issuecomment-281774685
https://github.com/openbabel/openbabel/issues/420#issuecomment-281774687:275,Availability,fault,fault,275,"Logged In: YES ; user_id=21420. From Jean:; (seems to be due to global vector variables such as atomIdVector ; not being reset.). This is now fixed in the CVS version and is being tested. I'll ; forward a patch shortly.; -Geoff. Program received signal SIGSEGV, Segmentation fault.; [Switching to Thread 16384 (LWP 25081)]; 0x41051f22 in OpenBabel::OBBond::GetEndAtomIdx() const ; (this=0xbfffe350); at mol.h:444; 444 unsigned int GetEndAtomIdx() const ; {return(_end-&gt;GetIdx());}; (gdb) bt; #0 0x41051f22 in OpenBabel::OBBond::GetEndAtomIdx() const ; (this=0xbfffe350); at mol.h:444; #1 0x410a5035 in ; OpenBabel::OBMol::AddBond(OpenBabel::OBBond&amp;) (; this=0xbfffeaf0, bond=@0xbfffe350) at mol.cpp:2149; #2 0x41135a33 in OpenBabel::endBond() () at cml.cpp:1995; #3 0x4112efee in OpenBabel::endElement(std::string, ; std::string, std::string); (localName=Cannot access memory at address 0xb41a718; ) at cml.cpp:1175; #4 0x4112ede4 in OpenBabel::endElement(std::string) ; (name=Cannot access memory; at address 0xb41a718; ) at cml.cpp:1156; #5 0x4112b122 in OpenBabel::tag(std::string) (s=Cannot ; access memory at address 0xb41a718; ) at cml.cpp:702; #6 0x4112a0f2 in OpenBabel::ReadXML(std::istream&amp;) ; (ifs=@0xbfffeb60); at cml.cpp:626; #7 0x4113b186 in OpenBabel::ReadCML(std::istream&amp;, ; OpenBabel::OBMol&amp;, char const*) (ifs=@0xbfffeb60, ; mol=@0xbfffeaf0, title=0x808e2bd &quot;Untitled&quot;); at cml.cpp:2894; #8 0x411079fe in ; OpenBabel::OBFileFormat::ReadMolecule(std::istream&amp;, ; OpenBabel::OBMol&amp;, char const*) (ifs=@0xbfffeb60, ; mol=@0xbfffeaf0,; title=0x808e2bd &quot;Untitled&quot;) at fileformat.cpp:43; #9 0x0805fafb in do_open_with_babel(char const*, char ; const*, gcpDocument*, OpenBabel::io_type) ; (filename=0x84af870 &quot;/home/Jean/projects/GChemPaint/; 2.cml&quot;,; ext=0x84b65f0 &quot;\003&quot;, pDoc=0x0, Type=CML) at file.cc:294; #10 0x0805f1d2 in file_process(char const*, int, bool, ; gcpDocument*) (; filename=0x40e089e0 &quot;/home/Jean/p",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/420#issuecomment-281774687
https://github.com/openbabel/openbabel/issues/420#issuecomment-281774687:205,Deployability,patch,patch,205,"Logged In: YES ; user_id=21420. From Jean:; (seems to be due to global vector variables such as atomIdVector ; not being reset.). This is now fixed in the CVS version and is being tested. I'll ; forward a patch shortly.; -Geoff. Program received signal SIGSEGV, Segmentation fault.; [Switching to Thread 16384 (LWP 25081)]; 0x41051f22 in OpenBabel::OBBond::GetEndAtomIdx() const ; (this=0xbfffe350); at mol.h:444; 444 unsigned int GetEndAtomIdx() const ; {return(_end-&gt;GetIdx());}; (gdb) bt; #0 0x41051f22 in OpenBabel::OBBond::GetEndAtomIdx() const ; (this=0xbfffe350); at mol.h:444; #1 0x410a5035 in ; OpenBabel::OBMol::AddBond(OpenBabel::OBBond&amp;) (; this=0xbfffeaf0, bond=@0xbfffe350) at mol.cpp:2149; #2 0x41135a33 in OpenBabel::endBond() () at cml.cpp:1995; #3 0x4112efee in OpenBabel::endElement(std::string, ; std::string, std::string); (localName=Cannot access memory at address 0xb41a718; ) at cml.cpp:1175; #4 0x4112ede4 in OpenBabel::endElement(std::string) ; (name=Cannot access memory; at address 0xb41a718; ) at cml.cpp:1156; #5 0x4112b122 in OpenBabel::tag(std::string) (s=Cannot ; access memory at address 0xb41a718; ) at cml.cpp:702; #6 0x4112a0f2 in OpenBabel::ReadXML(std::istream&amp;) ; (ifs=@0xbfffeb60); at cml.cpp:626; #7 0x4113b186 in OpenBabel::ReadCML(std::istream&amp;, ; OpenBabel::OBMol&amp;, char const*) (ifs=@0xbfffeb60, ; mol=@0xbfffeaf0, title=0x808e2bd &quot;Untitled&quot;); at cml.cpp:2894; #8 0x411079fe in ; OpenBabel::OBFileFormat::ReadMolecule(std::istream&amp;, ; OpenBabel::OBMol&amp;, char const*) (ifs=@0xbfffeb60, ; mol=@0xbfffeaf0,; title=0x808e2bd &quot;Untitled&quot;) at fileformat.cpp:43; #9 0x0805fafb in do_open_with_babel(char const*, char ; const*, gcpDocument*, OpenBabel::io_type) ; (filename=0x84af870 &quot;/home/Jean/projects/GChemPaint/; 2.cml&quot;,; ext=0x84b65f0 &quot;\003&quot;, pDoc=0x0, Type=CML) at file.cc:294; #10 0x0805f1d2 in file_process(char const*, int, bool, ; gcpDocument*) (; filename=0x40e089e0 &quot;/home/Jean/p",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/420#issuecomment-281774687
https://github.com/openbabel/openbabel/issues/420#issuecomment-281774687:78,Modifiability,variab,variables,78,"Logged In: YES ; user_id=21420. From Jean:; (seems to be due to global vector variables such as atomIdVector ; not being reset.). This is now fixed in the CVS version and is being tested. I'll ; forward a patch shortly.; -Geoff. Program received signal SIGSEGV, Segmentation fault.; [Switching to Thread 16384 (LWP 25081)]; 0x41051f22 in OpenBabel::OBBond::GetEndAtomIdx() const ; (this=0xbfffe350); at mol.h:444; 444 unsigned int GetEndAtomIdx() const ; {return(_end-&gt;GetIdx());}; (gdb) bt; #0 0x41051f22 in OpenBabel::OBBond::GetEndAtomIdx() const ; (this=0xbfffe350); at mol.h:444; #1 0x410a5035 in ; OpenBabel::OBMol::AddBond(OpenBabel::OBBond&amp;) (; this=0xbfffeaf0, bond=@0xbfffe350) at mol.cpp:2149; #2 0x41135a33 in OpenBabel::endBond() () at cml.cpp:1995; #3 0x4112efee in OpenBabel::endElement(std::string, ; std::string, std::string); (localName=Cannot access memory at address 0xb41a718; ) at cml.cpp:1175; #4 0x4112ede4 in OpenBabel::endElement(std::string) ; (name=Cannot access memory; at address 0xb41a718; ) at cml.cpp:1156; #5 0x4112b122 in OpenBabel::tag(std::string) (s=Cannot ; access memory at address 0xb41a718; ) at cml.cpp:702; #6 0x4112a0f2 in OpenBabel::ReadXML(std::istream&amp;) ; (ifs=@0xbfffeb60); at cml.cpp:626; #7 0x4113b186 in OpenBabel::ReadCML(std::istream&amp;, ; OpenBabel::OBMol&amp;, char const*) (ifs=@0xbfffeb60, ; mol=@0xbfffeaf0, title=0x808e2bd &quot;Untitled&quot;); at cml.cpp:2894; #8 0x411079fe in ; OpenBabel::OBFileFormat::ReadMolecule(std::istream&amp;, ; OpenBabel::OBMol&amp;, char const*) (ifs=@0xbfffeb60, ; mol=@0xbfffeaf0,; title=0x808e2bd &quot;Untitled&quot;) at fileformat.cpp:43; #9 0x0805fafb in do_open_with_babel(char const*, char ; const*, gcpDocument*, OpenBabel::io_type) ; (filename=0x84af870 &quot;/home/Jean/projects/GChemPaint/; 2.cml&quot;,; ext=0x84b65f0 &quot;\003&quot;, pDoc=0x0, Type=CML) at file.cc:294; #10 0x0805f1d2 in file_process(char const*, int, bool, ; gcpDocument*) (; filename=0x40e089e0 &quot;/home/Jean/p",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/420#issuecomment-281774687
https://github.com/openbabel/openbabel/issues/420#issuecomment-281774687:869,Security,access,access,869,"Logged In: YES ; user_id=21420. From Jean:; (seems to be due to global vector variables such as atomIdVector ; not being reset.). This is now fixed in the CVS version and is being tested. I'll ; forward a patch shortly.; -Geoff. Program received signal SIGSEGV, Segmentation fault.; [Switching to Thread 16384 (LWP 25081)]; 0x41051f22 in OpenBabel::OBBond::GetEndAtomIdx() const ; (this=0xbfffe350); at mol.h:444; 444 unsigned int GetEndAtomIdx() const ; {return(_end-&gt;GetIdx());}; (gdb) bt; #0 0x41051f22 in OpenBabel::OBBond::GetEndAtomIdx() const ; (this=0xbfffe350); at mol.h:444; #1 0x410a5035 in ; OpenBabel::OBMol::AddBond(OpenBabel::OBBond&amp;) (; this=0xbfffeaf0, bond=@0xbfffe350) at mol.cpp:2149; #2 0x41135a33 in OpenBabel::endBond() () at cml.cpp:1995; #3 0x4112efee in OpenBabel::endElement(std::string, ; std::string, std::string); (localName=Cannot access memory at address 0xb41a718; ) at cml.cpp:1175; #4 0x4112ede4 in OpenBabel::endElement(std::string) ; (name=Cannot access memory; at address 0xb41a718; ) at cml.cpp:1156; #5 0x4112b122 in OpenBabel::tag(std::string) (s=Cannot ; access memory at address 0xb41a718; ) at cml.cpp:702; #6 0x4112a0f2 in OpenBabel::ReadXML(std::istream&amp;) ; (ifs=@0xbfffeb60); at cml.cpp:626; #7 0x4113b186 in OpenBabel::ReadCML(std::istream&amp;, ; OpenBabel::OBMol&amp;, char const*) (ifs=@0xbfffeb60, ; mol=@0xbfffeaf0, title=0x808e2bd &quot;Untitled&quot;); at cml.cpp:2894; #8 0x411079fe in ; OpenBabel::OBFileFormat::ReadMolecule(std::istream&amp;, ; OpenBabel::OBMol&amp;, char const*) (ifs=@0xbfffeb60, ; mol=@0xbfffeaf0,; title=0x808e2bd &quot;Untitled&quot;) at fileformat.cpp:43; #9 0x0805fafb in do_open_with_babel(char const*, char ; const*, gcpDocument*, OpenBabel::io_type) ; (filename=0x84af870 &quot;/home/Jean/projects/GChemPaint/; 2.cml&quot;,; ext=0x84b65f0 &quot;\003&quot;, pDoc=0x0, Type=CML) at file.cc:294; #10 0x0805f1d2 in file_process(char const*, int, bool, ; gcpDocument*) (; filename=0x40e089e0 &quot;/home/Jean/p",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/420#issuecomment-281774687
https://github.com/openbabel/openbabel/issues/420#issuecomment-281774687:991,Security,access,access,991,"Logged In: YES ; user_id=21420. From Jean:; (seems to be due to global vector variables such as atomIdVector ; not being reset.). This is now fixed in the CVS version and is being tested. I'll ; forward a patch shortly.; -Geoff. Program received signal SIGSEGV, Segmentation fault.; [Switching to Thread 16384 (LWP 25081)]; 0x41051f22 in OpenBabel::OBBond::GetEndAtomIdx() const ; (this=0xbfffe350); at mol.h:444; 444 unsigned int GetEndAtomIdx() const ; {return(_end-&gt;GetIdx());}; (gdb) bt; #0 0x41051f22 in OpenBabel::OBBond::GetEndAtomIdx() const ; (this=0xbfffe350); at mol.h:444; #1 0x410a5035 in ; OpenBabel::OBMol::AddBond(OpenBabel::OBBond&amp;) (; this=0xbfffeaf0, bond=@0xbfffe350) at mol.cpp:2149; #2 0x41135a33 in OpenBabel::endBond() () at cml.cpp:1995; #3 0x4112efee in OpenBabel::endElement(std::string, ; std::string, std::string); (localName=Cannot access memory at address 0xb41a718; ) at cml.cpp:1175; #4 0x4112ede4 in OpenBabel::endElement(std::string) ; (name=Cannot access memory; at address 0xb41a718; ) at cml.cpp:1156; #5 0x4112b122 in OpenBabel::tag(std::string) (s=Cannot ; access memory at address 0xb41a718; ) at cml.cpp:702; #6 0x4112a0f2 in OpenBabel::ReadXML(std::istream&amp;) ; (ifs=@0xbfffeb60); at cml.cpp:626; #7 0x4113b186 in OpenBabel::ReadCML(std::istream&amp;, ; OpenBabel::OBMol&amp;, char const*) (ifs=@0xbfffeb60, ; mol=@0xbfffeaf0, title=0x808e2bd &quot;Untitled&quot;); at cml.cpp:2894; #8 0x411079fe in ; OpenBabel::OBFileFormat::ReadMolecule(std::istream&amp;, ; OpenBabel::OBMol&amp;, char const*) (ifs=@0xbfffeb60, ; mol=@0xbfffeaf0,; title=0x808e2bd &quot;Untitled&quot;) at fileformat.cpp:43; #9 0x0805fafb in do_open_with_babel(char const*, char ; const*, gcpDocument*, OpenBabel::io_type) ; (filename=0x84af870 &quot;/home/Jean/projects/GChemPaint/; 2.cml&quot;,; ext=0x84b65f0 &quot;\003&quot;, pDoc=0x0, Type=CML) at file.cc:294; #10 0x0805f1d2 in file_process(char const*, int, bool, ; gcpDocument*) (; filename=0x40e089e0 &quot;/home/Jean/p",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/420#issuecomment-281774687
https://github.com/openbabel/openbabel/issues/420#issuecomment-281774687:1104,Security,access,access,1104,"as atomIdVector ; not being reset.). This is now fixed in the CVS version and is being tested. I'll ; forward a patch shortly.; -Geoff. Program received signal SIGSEGV, Segmentation fault.; [Switching to Thread 16384 (LWP 25081)]; 0x41051f22 in OpenBabel::OBBond::GetEndAtomIdx() const ; (this=0xbfffe350); at mol.h:444; 444 unsigned int GetEndAtomIdx() const ; {return(_end-&gt;GetIdx());}; (gdb) bt; #0 0x41051f22 in OpenBabel::OBBond::GetEndAtomIdx() const ; (this=0xbfffe350); at mol.h:444; #1 0x410a5035 in ; OpenBabel::OBMol::AddBond(OpenBabel::OBBond&amp;) (; this=0xbfffeaf0, bond=@0xbfffe350) at mol.cpp:2149; #2 0x41135a33 in OpenBabel::endBond() () at cml.cpp:1995; #3 0x4112efee in OpenBabel::endElement(std::string, ; std::string, std::string); (localName=Cannot access memory at address 0xb41a718; ) at cml.cpp:1175; #4 0x4112ede4 in OpenBabel::endElement(std::string) ; (name=Cannot access memory; at address 0xb41a718; ) at cml.cpp:1156; #5 0x4112b122 in OpenBabel::tag(std::string) (s=Cannot ; access memory at address 0xb41a718; ) at cml.cpp:702; #6 0x4112a0f2 in OpenBabel::ReadXML(std::istream&amp;) ; (ifs=@0xbfffeb60); at cml.cpp:626; #7 0x4113b186 in OpenBabel::ReadCML(std::istream&amp;, ; OpenBabel::OBMol&amp;, char const*) (ifs=@0xbfffeb60, ; mol=@0xbfffeaf0, title=0x808e2bd &quot;Untitled&quot;); at cml.cpp:2894; #8 0x411079fe in ; OpenBabel::OBFileFormat::ReadMolecule(std::istream&amp;, ; OpenBabel::OBMol&amp;, char const*) (ifs=@0xbfffeb60, ; mol=@0xbfffeaf0,; title=0x808e2bd &quot;Untitled&quot;) at fileformat.cpp:43; #9 0x0805fafb in do_open_with_babel(char const*, char ; const*, gcpDocument*, OpenBabel::io_type) ; (filename=0x84af870 &quot;/home/Jean/projects/GChemPaint/; 2.cml&quot;,; ext=0x84b65f0 &quot;\003&quot;, pDoc=0x0, Type=CML) at file.cc:294; #10 0x0805f1d2 in file_process(char const*, int, bool, ; gcpDocument*) (; filename=0x40e089e0 &quot;/home/Jean/projects/GChemPaint/; 2.cml&quot;, filetype=2,; bSave=false, pDoc=0x0) at file.cc:198. Origin",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/420#issuecomment-281774687
https://github.com/openbabel/openbabel/issues/420#issuecomment-281774687:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. From Jean:; (seems to be due to global vector variables such as atomIdVector ; not being reset.). This is now fixed in the CVS version and is being tested. I'll ; forward a patch shortly.; -Geoff. Program received signal SIGSEGV, Segmentation fault.; [Switching to Thread 16384 (LWP 25081)]; 0x41051f22 in OpenBabel::OBBond::GetEndAtomIdx() const ; (this=0xbfffe350); at mol.h:444; 444 unsigned int GetEndAtomIdx() const ; {return(_end-&gt;GetIdx());}; (gdb) bt; #0 0x41051f22 in OpenBabel::OBBond::GetEndAtomIdx() const ; (this=0xbfffe350); at mol.h:444; #1 0x410a5035 in ; OpenBabel::OBMol::AddBond(OpenBabel::OBBond&amp;) (; this=0xbfffeaf0, bond=@0xbfffe350) at mol.cpp:2149; #2 0x41135a33 in OpenBabel::endBond() () at cml.cpp:1995; #3 0x4112efee in OpenBabel::endElement(std::string, ; std::string, std::string); (localName=Cannot access memory at address 0xb41a718; ) at cml.cpp:1175; #4 0x4112ede4 in OpenBabel::endElement(std::string) ; (name=Cannot access memory; at address 0xb41a718; ) at cml.cpp:1156; #5 0x4112b122 in OpenBabel::tag(std::string) (s=Cannot ; access memory at address 0xb41a718; ) at cml.cpp:702; #6 0x4112a0f2 in OpenBabel::ReadXML(std::istream&amp;) ; (ifs=@0xbfffeb60); at cml.cpp:626; #7 0x4113b186 in OpenBabel::ReadCML(std::istream&amp;, ; OpenBabel::OBMol&amp;, char const*) (ifs=@0xbfffeb60, ; mol=@0xbfffeaf0, title=0x808e2bd &quot;Untitled&quot;); at cml.cpp:2894; #8 0x411079fe in ; OpenBabel::OBFileFormat::ReadMolecule(std::istream&amp;, ; OpenBabel::OBMol&amp;, char const*) (ifs=@0xbfffeb60, ; mol=@0xbfffeaf0,; title=0x808e2bd &quot;Untitled&quot;) at fileformat.cpp:43; #9 0x0805fafb in do_open_with_babel(char const*, char ; const*, gcpDocument*, OpenBabel::io_type) ; (filename=0x84af870 &quot;/home/Jean/projects/GChemPaint/; 2.cml&quot;,; ext=0x84b65f0 &quot;\003&quot;, pDoc=0x0, Type=CML) at file.cc:294; #10 0x0805f1d2 in file_process(char const*, int, bool, ; gcpDocument*) (; filename=0x40e089e0 &quot;/home/Jean/p",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/420#issuecomment-281774687
https://github.com/openbabel/openbabel/issues/420#issuecomment-281774687:180,Testability,test,tested,180,"Logged In: YES ; user_id=21420. From Jean:; (seems to be due to global vector variables such as atomIdVector ; not being reset.). This is now fixed in the CVS version and is being tested. I'll ; forward a patch shortly.; -Geoff. Program received signal SIGSEGV, Segmentation fault.; [Switching to Thread 16384 (LWP 25081)]; 0x41051f22 in OpenBabel::OBBond::GetEndAtomIdx() const ; (this=0xbfffe350); at mol.h:444; 444 unsigned int GetEndAtomIdx() const ; {return(_end-&gt;GetIdx());}; (gdb) bt; #0 0x41051f22 in OpenBabel::OBBond::GetEndAtomIdx() const ; (this=0xbfffe350); at mol.h:444; #1 0x410a5035 in ; OpenBabel::OBMol::AddBond(OpenBabel::OBBond&amp;) (; this=0xbfffeaf0, bond=@0xbfffe350) at mol.cpp:2149; #2 0x41135a33 in OpenBabel::endBond() () at cml.cpp:1995; #3 0x4112efee in OpenBabel::endElement(std::string, ; std::string, std::string); (localName=Cannot access memory at address 0xb41a718; ) at cml.cpp:1175; #4 0x4112ede4 in OpenBabel::endElement(std::string) ; (name=Cannot access memory; at address 0xb41a718; ) at cml.cpp:1156; #5 0x4112b122 in OpenBabel::tag(std::string) (s=Cannot ; access memory at address 0xb41a718; ) at cml.cpp:702; #6 0x4112a0f2 in OpenBabel::ReadXML(std::istream&amp;) ; (ifs=@0xbfffeb60); at cml.cpp:626; #7 0x4113b186 in OpenBabel::ReadCML(std::istream&amp;, ; OpenBabel::OBMol&amp;, char const*) (ifs=@0xbfffeb60, ; mol=@0xbfffeaf0, title=0x808e2bd &quot;Untitled&quot;); at cml.cpp:2894; #8 0x411079fe in ; OpenBabel::OBFileFormat::ReadMolecule(std::istream&amp;, ; OpenBabel::OBMol&amp;, char const*) (ifs=@0xbfffeb60, ; mol=@0xbfffeaf0,; title=0x808e2bd &quot;Untitled&quot;) at fileformat.cpp:43; #9 0x0805fafb in do_open_with_babel(char const*, char ; const*, gcpDocument*, OpenBabel::io_type) ; (filename=0x84af870 &quot;/home/Jean/projects/GChemPaint/; 2.cml&quot;,; ext=0x84b65f0 &quot;\003&quot;, pDoc=0x0, Type=CML) at file.cc:294; #10 0x0805f1d2 in file_process(char const*, int, bool, ; gcpDocument*) (; filename=0x40e089e0 &quot;/home/Jean/p",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/420#issuecomment-281774687
https://github.com/openbabel/openbabel/issues/1396#issuecomment-281809814:0,Testability,Log,Logged,0,Logged In: YES ; user_id=1031385. Is any work being done on creating Canonical Smiles using; OpenBabel. Original comment by: tallu,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1396#issuecomment-281809814
https://github.com/openbabel/openbabel/issues/1396#issuecomment-281809815:47,Modifiability,enhance,enhance,47,"Logged In: YES ; user_id=21420. I'd be glad to enhance SMILES support for canonical SMILES -- but I ; cannot find a definitive specification anywhere. If someone could supply ; a URL or specification file, I'd be glad to ensure that output SMILES can ; be canonical. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1396#issuecomment-281809815
https://github.com/openbabel/openbabel/issues/1396#issuecomment-281809815:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I'd be glad to enhance SMILES support for canonical SMILES -- but I ; cannot find a definitive specification anywhere. If someone could supply ; a URL or specification file, I'd be glad to ensure that output SMILES can ; be canonical. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1396#issuecomment-281809815
https://github.com/openbabel/openbabel/issues/1396#issuecomment-281809817:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I'm marking this closed, pending *someone* to point me to a definition of ; what canonical or unique SMILES should be. Everything I've read indicates ; that such a formal specification does not exist. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1396#issuecomment-281809817
https://github.com/openbabel/openbabel/issues/421#issuecomment-281774706:751,Deployability,update,update,751,"Logged In: YES ; user_id=21420. I've thought the Rcov was too short, but don't have any good references, so ; large parts of the table is just as in the original Babel!. I think it's better to stick to a maximum of 5 bonds for phosphorus. I ; thought immediately of PF6- when I saw the max bond limit, but it's really ; an exceptional case, and you could easily argue it's a Lewis acid-base ; complex between F- and PF5 neutral. I worry that setting it to 6 might ; introduce bonding problems in covalent structures?. Not so long from now, I want to move to a OBBondTyper class that will ; gather the ConnectTheDots and PerceiveBondOrder code and can more ; easily have special cases like PF6- or PCl6-. I've changed the covalent radius and it should update soon. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/421#issuecomment-281774706
https://github.com/openbabel/openbabel/issues/421#issuecomment-281774706:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I've thought the Rcov was too short, but don't have any good references, so ; large parts of the table is just as in the original Babel!. I think it's better to stick to a maximum of 5 bonds for phosphorus. I ; thought immediately of PF6- when I saw the max bond limit, but it's really ; an exceptional case, and you could easily argue it's a Lewis acid-base ; complex between F- and PF5 neutral. I worry that setting it to 6 might ; introduce bonding problems in covalent structures?. Not so long from now, I want to move to a OBBondTyper class that will ; gather the ConnectTheDots and PerceiveBondOrder code and can more ; easily have special cases like PF6- or PCl6-. I've changed the covalent radius and it should update soon. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/421#issuecomment-281774706
https://github.com/openbabel/openbabel/issues/421#issuecomment-281774708:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. The covalent radius has been fixed, but the max # bonds won't be fixed ; quite yet. After the bond-typer code goes in, special cases like PF6- and ; PCl6- can be added. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/421#issuecomment-281774708
https://github.com/openbabel/openbabel/issues/422#issuecomment-281774724:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Do you know if these files can be edited directly with a text editor? If so, I ; can make sure they're kept up-to-date with the Makefiles. But since none of ; the current developers have/use VC++, I can't verify that textual changes ; will be treated correctly. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/422#issuecomment-281774724
https://github.com/openbabel/openbabel/issues/423#issuecomment-281774744:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. It seems nothing refers to BitGrid in the Open Babel project itself. So this is a ; leftover file from Open Eyes / OELib. I'll remove it. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/423#issuecomment-281774744
https://github.com/openbabel/openbabel/issues/1397#issuecomment-281809835:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. Migrating this to API Feature requests. This also applies to a few other data.cpp methods. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1397#issuecomment-281809835
https://github.com/openbabel/openbabel/issues/1397#issuecomment-281809837:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. With the new OBConversion framework, this request is obsolete. ; OBExtensionTable no longer exists and the new MIME methods *return* ; values rather than copying into a buffer. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1397#issuecomment-281809837
https://github.com/openbabel/openbabel/issues/424#issuecomment-281774763:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. Fixed with current CVS version. (There was a mistake in the math/; Makefile.am.). -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/424#issuecomment-281774763
https://github.com/openbabel/openbabel/issues/425#issuecomment-281774783:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. This does not seem to be a problem with the current CVS code. ; What version of Open Babel was showing this bug?. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/425#issuecomment-281774783
https://github.com/openbabel/openbabel/issues/426#issuecomment-281774797:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. This is not a problem in the current CVS code. It is now a SMARTS ; test case, but I cannot reproduce this with the smartstest code or ; the obgrep program. What version was showing this bug?. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/426#issuecomment-281774797
https://github.com/openbabel/openbabel/issues/426#issuecomment-281774797:100,Testability,test,test,100,"Logged In: YES ; user_id=21420. This is not a problem in the current CVS code. It is now a SMARTS ; test case, but I cannot reproduce this with the smartstest code or ; the obgrep program. What version was showing this bug?. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/426#issuecomment-281774797
https://github.com/openbabel/openbabel/issues/427#issuecomment-281774820:59,Deployability,install,install,59,"Logged In: YES ; user_id=196016. Are you sure you run make install as superuser/root? You ; cannot install stuff under /usr/local as a normal user. At least ; that's it for most unices, I guess Mac OS X is no different. ; Try su/sudo. Original comment by: @mbanck",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/427#issuecomment-281774820
https://github.com/openbabel/openbabel/issues/427#issuecomment-281774820:99,Deployability,install,install,99,"Logged In: YES ; user_id=196016. Are you sure you run make install as superuser/root? You ; cannot install stuff under /usr/local as a normal user. At least ; that's it for most unices, I guess Mac OS X is no different. ; Try su/sudo. Original comment by: @mbanck",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/427#issuecomment-281774820
https://github.com/openbabel/openbabel/issues/427#issuecomment-281774820:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=196016. Are you sure you run make install as superuser/root? You ; cannot install stuff under /usr/local as a normal user. At least ; that's it for most unices, I guess Mac OS X is no different. ; Try su/sudo. Original comment by: @mbanck",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/427#issuecomment-281774820
https://github.com/openbabel/openbabel/issues/427#issuecomment-281774823:59,Deployability,install,install,59,Logged In: YES ; user_id=21420. Works fine for me when you install under &quot;sudo make install&quot; on ; every Mac OS X I've used on my laptop. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/427#issuecomment-281774823
https://github.com/openbabel/openbabel/issues/427#issuecomment-281774823:89,Deployability,install,install,89,Logged In: YES ; user_id=21420. Works fine for me when you install under &quot;sudo make install&quot; on ; every Mac OS X I've used on my laptop. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/427#issuecomment-281774823
https://github.com/openbabel/openbabel/issues/427#issuecomment-281774823:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. Works fine for me when you install under &quot;sudo make install&quot; on ; every Mac OS X I've used on my laptop. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/427#issuecomment-281774823
https://github.com/openbabel/openbabel/issues/428#issuecomment-281774845:174,Deployability,install,installed,174,"Logged In: YES ; user_id=21420. This is now fixed in CVS. To fix in your version, it's a simple edit ; of the atomtyp.txt file. (If this is under UNIX, make sure it's the ; *installed* atomtyp.txt file, as this is the one that's read on ; runtime.). Remove the &quot;#&quot; comment markers where it says &quot;Uncomment&quot; for ; Sybyl typing. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/428#issuecomment-281774845
https://github.com/openbabel/openbabel/issues/428#issuecomment-281774845:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. This is now fixed in CVS. To fix in your version, it's a simple edit ; of the atomtyp.txt file. (If this is under UNIX, make sure it's the ; *installed* atomtyp.txt file, as this is the one that's read on ; runtime.). Remove the &quot;#&quot; comment markers where it says &quot;Uncomment&quot; for ; Sybyl typing. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/428#issuecomment-281774845
https://github.com/openbabel/openbabel/issues/428#issuecomment-281774845:89,Usability,simpl,simple,89,"Logged In: YES ; user_id=21420. This is now fixed in CVS. To fix in your version, it's a simple edit ; of the atomtyp.txt file. (If this is under UNIX, make sure it's the ; *installed* atomtyp.txt file, as this is the one that's read on ; runtime.). Remove the &quot;#&quot; comment markers where it says &quot;Uncomment&quot; for ; Sybyl typing. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/428#issuecomment-281774845
https://github.com/openbabel/openbabel/issues/429#issuecomment-281774868:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. This bug was fixed not long after 1.100.1 and is currently fixed in ; the CVS code (and will be in 1.100.2). So if you're a developer who wants to use libopenbabel, the CVS ; version is likely to work better for you. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/429#issuecomment-281774868
https://github.com/openbabel/openbabel/issues/430#issuecomment-281774886:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Fixed, thanks to contributions from Gerd Menche. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/430#issuecomment-281774886
https://github.com/openbabel/openbabel/issues/432#issuecomment-281774926:140,Deployability,Configurat,Configuration,140,"Logged In: YES ; user_id=787122. Renaming DATADIR to BABAL_DATADIR fixes this bug, but there; are potentially many others in babelconfig.h. Configuration; headers should never be installed, they are useful only at; compile time. Normally, babelconfig.h should be the first; included header in each cpp file and should NEVER be; included in a header file (at least for a public library).; If there is a chance that an external program needs access; to BABEL_DATADIR, add a helper function such as; ob_get_datadir(). Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774926
https://github.com/openbabel/openbabel/issues/432#issuecomment-281774926:179,Deployability,install,installed,179,"Logged In: YES ; user_id=787122. Renaming DATADIR to BABAL_DATADIR fixes this bug, but there; are potentially many others in babelconfig.h. Configuration; headers should never be installed, they are useful only at; compile time. Normally, babelconfig.h should be the first; included header in each cpp file and should NEVER be; included in a header file (at least for a public library).; If there is a chance that an external program needs access; to BABEL_DATADIR, add a helper function such as; ob_get_datadir(). Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774926
https://github.com/openbabel/openbabel/issues/432#issuecomment-281774926:140,Modifiability,Config,Configuration,140,"Logged In: YES ; user_id=787122. Renaming DATADIR to BABAL_DATADIR fixes this bug, but there; are potentially many others in babelconfig.h. Configuration; headers should never be installed, they are useful only at; compile time. Normally, babelconfig.h should be the first; included header in each cpp file and should NEVER be; included in a header file (at least for a public library).; If there is a chance that an external program needs access; to BABEL_DATADIR, add a helper function such as; ob_get_datadir(). Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774926
https://github.com/openbabel/openbabel/issues/432#issuecomment-281774926:440,Security,access,access,440,"Logged In: YES ; user_id=787122. Renaming DATADIR to BABAL_DATADIR fixes this bug, but there; are potentially many others in babelconfig.h. Configuration; headers should never be installed, they are useful only at; compile time. Normally, babelconfig.h should be the first; included header in each cpp file and should NEVER be; included in a header file (at least for a public library).; If there is a chance that an external program needs access; to BABEL_DATADIR, add a helper function such as; ob_get_datadir(). Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774926
https://github.com/openbabel/openbabel/issues/432#issuecomment-281774926:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=787122. Renaming DATADIR to BABAL_DATADIR fixes this bug, but there; are potentially many others in babelconfig.h. Configuration; headers should never be installed, they are useful only at; compile time. Normally, babelconfig.h should be the first; included header in each cpp file and should NEVER be; included in a header file (at least for a public library).; If there is a chance that an external program needs access; to BABEL_DATADIR, add a helper function such as; ob_get_datadir(). Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774926
https://github.com/openbabel/openbabel/issues/432#issuecomment-281774927:65,Deployability,install,installation,65,Logged In: YES ; user_id=125666. DATADIR is certainly one of the installation problems.; AFAICS babelconfig.h is generated by ./configure on Unix; systems. There is no equivalent on Windows systems. However; there may be a bableconfig.h already in the CVS. Therefore; compiling with this will give compilation values based on; (some) arbitrary UNIX values for the environment. Is there is a need for a non-autoconfigured babelconfig.h?; Perhaps editable according to compiler?. It's also not very clear to newcomers what DATADIR should; point to. I assume it is actually normally the source directory. P. Original comment by: @petermr,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774927
https://github.com/openbabel/openbabel/issues/432#issuecomment-281774927:128,Modifiability,config,configure,128,Logged In: YES ; user_id=125666. DATADIR is certainly one of the installation problems.; AFAICS babelconfig.h is generated by ./configure on Unix; systems. There is no equivalent on Windows systems. However; there may be a bableconfig.h already in the CVS. Therefore; compiling with this will give compilation values based on; (some) arbitrary UNIX values for the environment. Is there is a need for a non-autoconfigured babelconfig.h?; Perhaps editable according to compiler?. It's also not very clear to newcomers what DATADIR should; point to. I assume it is actually normally the source directory. P. Original comment by: @petermr,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774927
https://github.com/openbabel/openbabel/issues/432#issuecomment-281774927:0,Testability,Log,Logged,0,Logged In: YES ; user_id=125666. DATADIR is certainly one of the installation problems.; AFAICS babelconfig.h is generated by ./configure on Unix; systems. There is no equivalent on Windows systems. However; there may be a bableconfig.h already in the CVS. Therefore; compiling with this will give compilation values based on; (some) arbitrary UNIX values for the environment. Is there is a need for a non-autoconfigured babelconfig.h?; Perhaps editable according to compiler?. It's also not very clear to newcomers what DATADIR should; point to. I assume it is actually normally the source directory. P. Original comment by: @petermr,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774927
https://github.com/openbabel/openbabel/issues/432#issuecomment-281774927:497,Usability,clear,clear,497,Logged In: YES ; user_id=125666. DATADIR is certainly one of the installation problems.; AFAICS babelconfig.h is generated by ./configure on Unix; systems. There is no equivalent on Windows systems. However; there may be a bableconfig.h already in the CVS. Therefore; compiling with this will give compilation values based on; (some) arbitrary UNIX values for the environment. Is there is a need for a non-autoconfigured babelconfig.h?; Perhaps editable according to compiler?. It's also not very clear to newcomers what DATADIR should; point to. I assume it is actually normally the source directory. P. Original comment by: @petermr,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774927
https://github.com/openbabel/openbabel/issues/432#issuecomment-281774928:549,Modifiability,config,configure,549,"Logged In: YES ; user_id=787122. To answer Peter's questions:; - DATADIR is the directory where applications have their; resources (as icons, static data, helpfiles,...) stored. The; default value is $(prefix)/share. Then in most cases the; real data are in a subdirectory, generally; $(datadir)/appname. Should DATADIR have been the default; value in OpenBabel, the bug would have not been found now.; Much worse, babelconfig.h defines VERSION...; -There is no need for a babelconfig.h in the CVS.; babelconfig.h.in is enough. The smae is true for configure,; Makefile.in and Makefile as far as the package uses autoconf; and automake.; My conclusion is that we have here a critical bug. A; priority of 5 is really a minimum. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774928
https://github.com/openbabel/openbabel/issues/432#issuecomment-281774928:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=787122. To answer Peter's questions:; - DATADIR is the directory where applications have their; resources (as icons, static data, helpfiles,...) stored. The; default value is $(prefix)/share. Then in most cases the; real data are in a subdirectory, generally; $(datadir)/appname. Should DATADIR have been the default; value in OpenBabel, the bug would have not been found now.; Much worse, babelconfig.h defines VERSION...; -There is no need for a babelconfig.h in the CVS.; babelconfig.h.in is enough. The smae is true for configure,; Makefile.in and Makefile as far as the package uses autoconf; and automake.; My conclusion is that we have here a critical bug. A; priority of 5 is really a minimum. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774928
https://github.com/openbabel/openbabel/issues/432#issuecomment-281774929:78,Modifiability,variab,variables,78,"Logged In: YES ; user_id=787122. There are sstill problems with the following variables; generated by AM_INIT_AUTOMAKE:; #define PACKAGE ""openbabel""; #define PACKAGE_BUGREPORT; ""openbabel-discuss@lists.sourceforge.net""; #define PACKAGE_NAME ""openbabel""; #define PACKAGE_STRING ""openbabel 1.100.2""; #define PACKAGE_TARNAME ""openbabel""; #define PACKAGE_VERSION ""1.100.2""; #define VERSION ""1.100.2"". Given the contents of the header files including; babelconfig.h, it is almost impossible to remove it from; each. It might be possible for mol.h (which is the most; important) replacing inclusion of some headers by forward; class declarations, but this is not so simple and might; introduce lots of instabilities. I also found an inconsistency in mol.h: fstream and iostream; are always included. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774929
https://github.com/openbabel/openbabel/issues/432#issuecomment-281774929:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=787122. There are sstill problems with the following variables; generated by AM_INIT_AUTOMAKE:; #define PACKAGE ""openbabel""; #define PACKAGE_BUGREPORT; ""openbabel-discuss@lists.sourceforge.net""; #define PACKAGE_NAME ""openbabel""; #define PACKAGE_STRING ""openbabel 1.100.2""; #define PACKAGE_TARNAME ""openbabel""; #define PACKAGE_VERSION ""1.100.2""; #define VERSION ""1.100.2"". Given the contents of the header files including; babelconfig.h, it is almost impossible to remove it from; each. It might be possible for mol.h (which is the most; important) replacing inclusion of some headers by forward; class declarations, but this is not so simple and might; introduce lots of instabilities. I also found an inconsistency in mol.h: fstream and iostream; are always included. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774929
https://github.com/openbabel/openbabel/issues/432#issuecomment-281774929:660,Usability,simpl,simple,660,"Logged In: YES ; user_id=787122. There are sstill problems with the following variables; generated by AM_INIT_AUTOMAKE:; #define PACKAGE ""openbabel""; #define PACKAGE_BUGREPORT; ""openbabel-discuss@lists.sourceforge.net""; #define PACKAGE_NAME ""openbabel""; #define PACKAGE_STRING ""openbabel 1.100.2""; #define PACKAGE_TARNAME ""openbabel""; #define PACKAGE_VERSION ""1.100.2""; #define VERSION ""1.100.2"". Given the contents of the header files including; babelconfig.h, it is almost impossible to remove it from; each. It might be possible for mol.h (which is the most; important) replacing inclusion of some headers by forward; class declarations, but this is not so simple and might; introduce lots of instabilities. I also found an inconsistency in mol.h: fstream and iostream; are always included. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774929
https://github.com/openbabel/openbabel/issues/432#issuecomment-281774930:86,Deployability,install,installed,86,"Logged In: YES ; user_id=21420. I'd like to close this bug ASAP. I don't see why the *installed* headers ; need to keep babelconfig.h. None of the #defines in babelconfig.h are ; appropriate for installed headers. In short, I think babelconfig.h should *only* be #included in .cpp files ; and not .h files and would like to move in this direction soon. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774930
https://github.com/openbabel/openbabel/issues/432#issuecomment-281774930:195,Deployability,install,installed,195,"Logged In: YES ; user_id=21420. I'd like to close this bug ASAP. I don't see why the *installed* headers ; need to keep babelconfig.h. None of the #defines in babelconfig.h are ; appropriate for installed headers. In short, I think babelconfig.h should *only* be #included in .cpp files ; and not .h files and would like to move in this direction soon. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774930
https://github.com/openbabel/openbabel/issues/432#issuecomment-281774930:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I'd like to close this bug ASAP. I don't see why the *installed* headers ; need to keep babelconfig.h. None of the #defines in babelconfig.h are ; appropriate for installed headers. In short, I think babelconfig.h should *only* be #included in .cpp files ; and not .h files and would like to move in this direction soon. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774930
https://github.com/openbabel/openbabel/issues/432#issuecomment-281774932:151,Deployability,install,installed,151,"Logged In: YES ; user_id=21420. In the CVS development branch openbabel-new-framework I have ; changed babelconfig.h to config.h and config.h is *NOT* installed. #if HAVE_CONFIG_H; #include config.h; #endif. This means that some #defines are needed by headers (e.g., ; HAVE_SSTREAM for the stringstream vs. strstream bits) and must be ; caught by user code. I think this seems to be the consensus solution on the automake/; autoconf mailing lists and with other library installations. I'm marking this bug report closed pending further comment. Ideally new ; comments should go in a new report to simplify bug tracking.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774932
https://github.com/openbabel/openbabel/issues/432#issuecomment-281774932:470,Deployability,install,installations,470,"Logged In: YES ; user_id=21420. In the CVS development branch openbabel-new-framework I have ; changed babelconfig.h to config.h and config.h is *NOT* installed. #if HAVE_CONFIG_H; #include config.h; #endif. This means that some #defines are needed by headers (e.g., ; HAVE_SSTREAM for the stringstream vs. strstream bits) and must be ; caught by user code. I think this seems to be the consensus solution on the automake/; autoconf mailing lists and with other library installations. I'm marking this bug report closed pending further comment. Ideally new ; comments should go in a new report to simplify bug tracking.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774932
https://github.com/openbabel/openbabel/issues/432#issuecomment-281774932:120,Modifiability,config,config,120,"Logged In: YES ; user_id=21420. In the CVS development branch openbabel-new-framework I have ; changed babelconfig.h to config.h and config.h is *NOT* installed. #if HAVE_CONFIG_H; #include config.h; #endif. This means that some #defines are needed by headers (e.g., ; HAVE_SSTREAM for the stringstream vs. strstream bits) and must be ; caught by user code. I think this seems to be the consensus solution on the automake/; autoconf mailing lists and with other library installations. I'm marking this bug report closed pending further comment. Ideally new ; comments should go in a new report to simplify bug tracking.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774932
https://github.com/openbabel/openbabel/issues/432#issuecomment-281774932:133,Modifiability,config,config,133,"Logged In: YES ; user_id=21420. In the CVS development branch openbabel-new-framework I have ; changed babelconfig.h to config.h and config.h is *NOT* installed. #if HAVE_CONFIG_H; #include config.h; #endif. This means that some #defines are needed by headers (e.g., ; HAVE_SSTREAM for the stringstream vs. strstream bits) and must be ; caught by user code. I think this seems to be the consensus solution on the automake/; autoconf mailing lists and with other library installations. I'm marking this bug report closed pending further comment. Ideally new ; comments should go in a new report to simplify bug tracking.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774932
https://github.com/openbabel/openbabel/issues/432#issuecomment-281774932:190,Modifiability,config,config,190,"Logged In: YES ; user_id=21420. In the CVS development branch openbabel-new-framework I have ; changed babelconfig.h to config.h and config.h is *NOT* installed. #if HAVE_CONFIG_H; #include config.h; #endif. This means that some #defines are needed by headers (e.g., ; HAVE_SSTREAM for the stringstream vs. strstream bits) and must be ; caught by user code. I think this seems to be the consensus solution on the automake/; autoconf mailing lists and with other library installations. I'm marking this bug report closed pending further comment. Ideally new ; comments should go in a new report to simplify bug tracking.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774932
https://github.com/openbabel/openbabel/issues/432#issuecomment-281774932:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. In the CVS development branch openbabel-new-framework I have ; changed babelconfig.h to config.h and config.h is *NOT* installed. #if HAVE_CONFIG_H; #include config.h; #endif. This means that some #defines are needed by headers (e.g., ; HAVE_SSTREAM for the stringstream vs. strstream bits) and must be ; caught by user code. I think this seems to be the consensus solution on the automake/; autoconf mailing lists and with other library installations. I'm marking this bug report closed pending further comment. Ideally new ; comments should go in a new report to simplify bug tracking.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774932
https://github.com/openbabel/openbabel/issues/432#issuecomment-281774932:597,Usability,simpl,simplify,597,"Logged In: YES ; user_id=21420. In the CVS development branch openbabel-new-framework I have ; changed babelconfig.h to config.h and config.h is *NOT* installed. #if HAVE_CONFIG_H; #include config.h; #endif. This means that some #defines are needed by headers (e.g., ; HAVE_SSTREAM for the stringstream vs. strstream bits) and must be ; caught by user code. I think this seems to be the consensus solution on the automake/; autoconf mailing lists and with other library installations. I'm marking this bug report closed pending further comment. Ideally new ; comments should go in a new report to simplify bug tracking.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774932
https://github.com/openbabel/openbabel/issues/433#issuecomment-281774943:29,Availability,error,error,29,Patch to fix the compilation error. Original comment by: fbresciani,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/433#issuecomment-281774943
https://github.com/openbabel/openbabel/issues/433#issuecomment-281774943:0,Deployability,Patch,Patch,0,Patch to fix the compilation error. Original comment by: fbresciani,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/433#issuecomment-281774943
https://github.com/openbabel/openbabel/issues/433#issuecomment-281774944:129,Availability,error,error,129,Logged In: YES ; user_id=125666. Please feel free to commit this through CVS - I think we've; had some compilers flag this as an error but haven't; recommitted. Peter. Original comment by: @petermr,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/433#issuecomment-281774944
https://github.com/openbabel/openbabel/issues/433#issuecomment-281774944:0,Testability,Log,Logged,0,Logged In: YES ; user_id=125666. Please feel free to commit this through CVS - I think we've; had some compilers flag this as an error but haven't; recommitted. Peter. Original comment by: @petermr,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/433#issuecomment-281774944
https://github.com/openbabel/openbabel/issues/1398#issuecomment-281809846:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=54358. Yes, the algorithm is simple indeed. ; Note, however, that the CDK fingerprinter implementation is; not complete (in the sense of not fully complying with the; daylight description) and has a few bugs. On the other hand,; we use it for substructure search prefiltering in our free; NMR database (http://www.nmrshiftdb.org) and it works nicely. ; If someone is going to implement the fingerprint based on; the CDK code, please get in touch with me, so that we can; plan a better, improved, debugged version for both OpenBabel; and CDK. Cheers, . Christoph Steinbeck (who implemented the fingerprinter in CDK). Original comment by: steinbeck",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1398#issuecomment-281809846
https://github.com/openbabel/openbabel/issues/1398#issuecomment-281809846:54,Usability,simpl,simple,54,"Logged In: YES ; user_id=54358. Yes, the algorithm is simple indeed. ; Note, however, that the CDK fingerprinter implementation is; not complete (in the sense of not fully complying with the; daylight description) and has a few bugs. On the other hand,; we use it for substructure search prefiltering in our free; NMR database (http://www.nmrshiftdb.org) and it works nicely. ; If someone is going to implement the fingerprint based on; the CDK code, please get in touch with me, so that we can; plan a better, improved, debugged version for both OpenBabel; and CDK. Cheers, . Christoph Steinbeck (who implemented the fingerprinter in CDK). Original comment by: steinbeck",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1398#issuecomment-281809846
https://github.com/openbabel/openbabel/issues/1398#issuecomment-281809848:0,Testability,Log,Logged,0,"Logged In: NO . Hi Christoph,; I am not a great programmer. I just use Daylight, Openeye; and OpenBabel to make some tools and work with them. I have; developed a database cartridge from OpenBabel as a experiment.; www.unm.edu/~tharun/smdb.html. My email address is tharun@unm.edu please contact me and I; will be willing to work on the fingerprinter for OpenBabel. . I dont know what standards is OpenBabel using. If you can; direct me then I will be happy to contribute for this project. Thanks; Tharun; tharun@unm.edu. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1398#issuecomment-281809848
https://github.com/openbabel/openbabel/issues/1398#issuecomment-281809849:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=54358. Hi Tharun, . I'm also not familiar with the standards of the OpenBabel; system. I'm just following the discussions relevant for the; CDK project. ; So I will not be able to help with respect to OpenBabel; peculiarities. ; But if you need help with the algorithm itself, I can at; least explain in detail what I did for CDK. Cheers, Chris. Original comment by: steinbeck",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1398#issuecomment-281809849
https://github.com/openbabel/openbabel/issues/1398#issuecomment-281809850:0,Testability,Log,Logged,0,Logged In: YES ; user_id=1031385. I have tried to build the Fingerprinter in OpenBabel. I came; up with a version how should I post the code for testing ?. What should I do next to submit the code?. Thanks; Tharun. Original comment by: tallu,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1398#issuecomment-281809850
https://github.com/openbabel/openbabel/issues/1398#issuecomment-281809850:145,Testability,test,testing,145,Logged In: YES ; user_id=1031385. I have tried to build the Fingerprinter in OpenBabel. I came; up with a version how should I post the code for testing ?. What should I do next to submit the code?. Thanks; Tharun. Original comment by: tallu,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1398#issuecomment-281809850
https://github.com/openbabel/openbabel/issues/1398#issuecomment-281809851:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1031385. The current version of the fingerprinter will accept; canonical smiles to generate finger prints. As I did not see; OpenBabel has any feature to get canonical smiles, This work; will be incomplete until the canonicalization is done. Original comment by: tallu",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1398#issuecomment-281809851
https://github.com/openbabel/openbabel/issues/1398#issuecomment-281809852:0,Testability,Log,Logged,0,Logged In: YES ; user_id=786138. My lab at UCI and I might be able help out here if the project ; programers want some help. Let me know. sswamida@uci.edu. Original comment by: sswamida,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1398#issuecomment-281809852
https://github.com/openbabel/openbabel/issues/1398#issuecomment-281809853:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I don't know if the CDK fingerprint method is different from Fabien's ; fingerprint and tanimoto code. If not, let's close this feature request. If not, the new fingerprint code in the CVS code should work fine. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1398#issuecomment-281809853
https://github.com/openbabel/openbabel/issues/1399#issuecomment-281809858:157,Deployability,patch,patch,157,"Logged In: YES ; user_id=21420. I sent a message to this e-mail address. We'd certainly like to see your ; implementation. Please submit code (preferably in patch form) to the ; openbabel-discuss mailing list -- that's why it's there! :-). I'm marking this request ""pending"" since you say you have code to ; submit -- it's not really an ""open"" feature request. Thanks and cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1399#issuecomment-281809858
https://github.com/openbabel/openbabel/issues/1399#issuecomment-281809858:41,Integrability,message,message,41,"Logged In: YES ; user_id=21420. I sent a message to this e-mail address. We'd certainly like to see your ; implementation. Please submit code (preferably in patch form) to the ; openbabel-discuss mailing list -- that's why it's there! :-). I'm marking this request ""pending"" since you say you have code to ; submit -- it's not really an ""open"" feature request. Thanks and cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1399#issuecomment-281809858
https://github.com/openbabel/openbabel/issues/1399#issuecomment-281809858:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I sent a message to this e-mail address. We'd certainly like to see your ; implementation. Please submit code (preferably in patch form) to the ; openbabel-discuss mailing list -- that's why it's there! :-). I'm marking this request ""pending"" since you say you have code to ; submit -- it's not really an ""open"" feature request. Thanks and cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1399#issuecomment-281809858
https://github.com/openbabel/openbabel/issues/434#issuecomment-281774963:121,Deployability,install,install,121,"Logged In: YES ; user_id=598602. I don't know if there may be some other problem, but I usually need to ; do:; sudo make install; to give the install permission to put files where they belong. HTH, ; Tim . Original comment by: tmgregg",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/434#issuecomment-281774963
https://github.com/openbabel/openbabel/issues/434#issuecomment-281774963:142,Deployability,install,install,142,"Logged In: YES ; user_id=598602. I don't know if there may be some other problem, but I usually need to ; do:; sudo make install; to give the install permission to put files where they belong. HTH, ; Tim . Original comment by: tmgregg",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/434#issuecomment-281774963
https://github.com/openbabel/openbabel/issues/434#issuecomment-281774963:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=598602. I don't know if there may be some other problem, but I usually need to ; do:; sudo make install; to give the install permission to put files where they belong. HTH, ; Tim . Original comment by: tmgregg",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/434#issuecomment-281774963
https://github.com/openbabel/openbabel/issues/434#issuecomment-281774964:85,Deployability,install,install,85,Logged In: YES ; user_id=196016. You need to be the system administrator in order to install; openbabel in a system-wide directory. Run 'sudo make install'. Michael. Original comment by: @mbanck,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/434#issuecomment-281774964
https://github.com/openbabel/openbabel/issues/434#issuecomment-281774964:147,Deployability,install,install,147,Logged In: YES ; user_id=196016. You need to be the system administrator in order to install; openbabel in a system-wide directory. Run 'sudo make install'. Michael. Original comment by: @mbanck,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/434#issuecomment-281774964
https://github.com/openbabel/openbabel/issues/434#issuecomment-281774964:0,Testability,Log,Logged,0,Logged In: YES ; user_id=196016. You need to be the system administrator in order to install; openbabel in a system-wide directory. Run 'sudo make install'. Michael. Original comment by: @mbanck,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/434#issuecomment-281774964
https://github.com/openbabel/openbabel/issues/435#issuecomment-281774986:57,Availability,error,error,57,"Logged In: YES ; user_id=21420. This isn't an Open Babel error. You must be root to install in /usr/local. Try:; sudo make install. If you have other installation/compilation problems, please report them ; to the openbabel-discuss mailing list. :-). Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/435#issuecomment-281774986
https://github.com/openbabel/openbabel/issues/435#issuecomment-281774986:84,Deployability,install,install,84,"Logged In: YES ; user_id=21420. This isn't an Open Babel error. You must be root to install in /usr/local. Try:; sudo make install. If you have other installation/compilation problems, please report them ; to the openbabel-discuss mailing list. :-). Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/435#issuecomment-281774986
https://github.com/openbabel/openbabel/issues/435#issuecomment-281774986:123,Deployability,install,install,123,"Logged In: YES ; user_id=21420. This isn't an Open Babel error. You must be root to install in /usr/local. Try:; sudo make install. If you have other installation/compilation problems, please report them ; to the openbabel-discuss mailing list. :-). Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/435#issuecomment-281774986
https://github.com/openbabel/openbabel/issues/435#issuecomment-281774986:150,Deployability,install,installation,150,"Logged In: YES ; user_id=21420. This isn't an Open Babel error. You must be root to install in /usr/local. Try:; sudo make install. If you have other installation/compilation problems, please report them ; to the openbabel-discuss mailing list. :-). Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/435#issuecomment-281774986
https://github.com/openbabel/openbabel/issues/435#issuecomment-281774986:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. This isn't an Open Babel error. You must be root to install in /usr/local. Try:; sudo make install. If you have other installation/compilation problems, please report them ; to the openbabel-discuss mailing list. :-). Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/435#issuecomment-281774986
https://github.com/openbabel/openbabel/issues/436#issuecomment-281775011:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. This isn't a bug. The SMILES format does not contain coordinate ; information and the current version of Open Babel does not do any sort ; of coordinate generation. Other packages, including CORINA can do this.; http://www2.chemie.uni-erlangen.de/software/corina/free_struct.html. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/436#issuecomment-281775011
https://github.com/openbabel/openbabel/issues/1400#issuecomment-281809870:0,Testability,Log,Logged,0,"Logged In: NO . There is no such thing as ""The unique IUPAC name"". The IUPAC; recommendations (of which the two listed references are only; a small part) are *designed* to provide multiple acceptable; names. . IUPAC has started some projects to produce guidelines that; *would* generate unique names, but those projects are years; from completion. Until they are completed, it is impossible; to resolve this request. Jonathan Brecher; CambridgeSoft Corporation; jsb@cambridgesoft.com. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1400#issuecomment-281809870
https://github.com/openbabel/openbabel/issues/1400#issuecomment-281809870:253,Usability,guid,guidelines,253,"Logged In: NO . There is no such thing as ""The unique IUPAC name"". The IUPAC; recommendations (of which the two listed references are only; a small part) are *designed* to provide multiple acceptable; names. . IUPAC has started some projects to produce guidelines that; *would* generate unique names, but those projects are years; from completion. Until they are completed, it is impossible; to resolve this request. Jonathan Brecher; CambridgeSoft Corporation; jsb@cambridgesoft.com. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1400#issuecomment-281809870
https://github.com/openbabel/openbabel/issues/1400#issuecomment-281809871:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I agree wholeheartedly with Jonathan -- the IUPAC recommendations are ; pretty extensive and do not generate a unique name. For now, I'm going to mark the priority pretty low on this. If someone ; would like to work on ""structure to name"" features for Open Babel, that's ; great and I can certainly help give direction. But I don't think any of the ; current core developers are interested in this task right now. It's also more of an API feature request. Some file formats may make ; use of it, but it's not a separate file format of its own. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1400#issuecomment-281809871
https://github.com/openbabel/openbabel/issues/1400#issuecomment-281809872:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I'm firmly marking this closed for now. If you're interested in dealing with ; names, check out http://wwmm.ch.cam.ac.uk/wikis/wwmm/index.php/Oscar3. If at a later point, there's more of a fixed recommendation for naming ; compounds, a new feature request should be opened. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1400#issuecomment-281809872
https://github.com/openbabel/openbabel/issues/437#issuecomment-281775025:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I'd be glad to take a look, but I don't have any examples of multi-; structure .car files or information on the file format itself (e.g., a ; developer note of some sort). So if you have any example files that you can send me, or URLs to look ; up, it'd be greatly appreciated. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/437#issuecomment-281775025
https://github.com/openbabel/openbabel/issues/437#issuecomment-281775026:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. This should be fixed in the current ob-new-framework development CVS ; code. I'm marking this closed pending review from Jean. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/437#issuecomment-281775026
https://github.com/openbabel/openbabel/issues/1401#issuecomment-281809875:239,Availability,avail,available,239,"Logged In: YES ; user_id=21420. Reading in a Gaussian zmat would be a bit difficult, as variable ; substitution can be used (and often is). Reading in a cartesian .com file ; might be possible. Reading Gaussian 98 or G03 output is already available in the CVS ; development version. I'd be happy to e-mail you a copy if you don't want ; to grab the CVS version yourself. -Geoff. ghutchis@users.sourceforge.net. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1401#issuecomment-281809875
https://github.com/openbabel/openbabel/issues/1401#issuecomment-281809875:88,Modifiability,variab,variable,88,"Logged In: YES ; user_id=21420. Reading in a Gaussian zmat would be a bit difficult, as variable ; substitution can be used (and often is). Reading in a cartesian .com file ; might be possible. Reading Gaussian 98 or G03 output is already available in the CVS ; development version. I'd be happy to e-mail you a copy if you don't want ; to grab the CVS version yourself. -Geoff. ghutchis@users.sourceforge.net. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1401#issuecomment-281809875
https://github.com/openbabel/openbabel/issues/1401#issuecomment-281809875:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Reading in a Gaussian zmat would be a bit difficult, as variable ; substitution can be used (and often is). Reading in a cartesian .com file ; might be possible. Reading Gaussian 98 or G03 output is already available in the CVS ; development version. I'd be happy to e-mail you a copy if you don't want ; to grab the CVS version yourself. -Geoff. ghutchis@users.sourceforge.net. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1401#issuecomment-281809875
https://github.com/openbabel/openbabel/issues/438#issuecomment-281775039:453,Energy Efficiency,charge,charge,453,"Logged In: YES ; user_id=21420. The attached atomtyp.txt (with changes in four lines) fixes this bug. No ; code changes are needed. I'm not sure if anyone is relying on previous behavior -- i.e. hydrogens ; are not added to acidic oxygen atoms. But I do believe this is the correct ; behavior -- regular hydrogen addition includes acidic oxygen atoms, but ; pH-corrected (-hpH) addition does not protonate acidic oxygen atoms, ; but does set the formal charge correctly. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/438#issuecomment-281775039
https://github.com/openbabel/openbabel/issues/438#issuecomment-281775039:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. The attached atomtyp.txt (with changes in four lines) fixes this bug. No ; code changes are needed. I'm not sure if anyone is relying on previous behavior -- i.e. hydrogens ; are not added to acidic oxygen atoms. But I do believe this is the correct ; behavior -- regular hydrogen addition includes acidic oxygen atoms, but ; pH-corrected (-hpH) addition does not protonate acidic oxygen atoms, ; but does set the formal charge correctly. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/438#issuecomment-281775039
https://github.com/openbabel/openbabel/issues/439#issuecomment-281775055:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. In the current CVS code for the ob-new-framework code (which will ; become version 2.0) the dimensionality is fixed -- OBMol now has ; methods GetDimension() and SetDimension() and the appropriate file ; translators keep track of this (including CML). The ""fictitious C-C bond"" is caused by the call in endMolecule to ; ConnectTheDots() -- which should not be run on 2D data. (Honestly, the ; CML code shouldn't call ConnectTheDots if there's correct bonding data -- ; but that's up to you.) Now, the code property recognizes that the 2D ; molecule should not run ConnectTheDots(). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/439#issuecomment-281775055
https://github.com/openbabel/openbabel/issues/439#issuecomment-281775056:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. I can verify that this problem is completely fixed in the current CVS ; code. Marking this bug closed.; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/439#issuecomment-281775056
https://github.com/openbabel/openbabel/issues/440#issuecomment-281775075:126,Deployability,update,updated,126,Logged In: YES ; user_id=21420. Thanks for the note. The current CVS development code now mentions ; this and the babel.1 was updated via doxygen-autogeneration. So the next release will have an improved manpage.; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/440#issuecomment-281775075
https://github.com/openbabel/openbabel/issues/440#issuecomment-281775075:174,Deployability,release,release,174,Logged In: YES ; user_id=21420. Thanks for the note. The current CVS development code now mentions ; this and the babel.1 was updated via doxygen-autogeneration. So the next release will have an improved manpage.; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/440#issuecomment-281775075
https://github.com/openbabel/openbabel/issues/440#issuecomment-281775075:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. Thanks for the note. The current CVS development code now mentions ; this and the babel.1 was updated via doxygen-autogeneration. So the next release will have an improved manpage.; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/440#issuecomment-281775075
https://github.com/openbabel/openbabel/issues/1402#issuecomment-281809879:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. This is now changed in the openbabel-new-framework CVS code, although ; it did not make the recent snapshot. Unfortunately, the change needed to support this uncovered a bug in the ; new conversion framework. Marking this closed ""pending"" further comment.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1402#issuecomment-281809879
https://github.com/openbabel/openbabel/issues/1402#issuecomment-281809880:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Fixed, thanks to Chris Morley. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1402#issuecomment-281809880
https://github.com/openbabel/openbabel/issues/441#issuecomment-281775104:630,Availability,error,error,630,"Logged In: YES ; user_id=21420. I'm not sure why obgrep crashes -- that's certainly a good question. However, if you're executing obgrep from a UNIX shell, the ""!"" character ; has a special function and probably isn't doing what you expect. So ""!c"" ; is an escape that's replaced by a string matching the last shell command ; beginning with ""c"" -- e.g.:. I type:. obgrep ""!c"" file.xyz. The shell passes:. obgrep ""cd .."" file.xyz. If you want to invert a SMARTS string, you can use the ""-v"" flag to ; obgrep, which inverts the matching. On the other hand, if you're actually getting obgrep to *crash* rather ; than giving a SMARTS error message, it would help to know more about ; your setup so we can fix the problem. The program should never crash. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/441#issuecomment-281775104
https://github.com/openbabel/openbabel/issues/441#issuecomment-281775104:636,Integrability,message,message,636,"Logged In: YES ; user_id=21420. I'm not sure why obgrep crashes -- that's certainly a good question. However, if you're executing obgrep from a UNIX shell, the ""!"" character ; has a special function and probably isn't doing what you expect. So ""!c"" ; is an escape that's replaced by a string matching the last shell command ; beginning with ""c"" -- e.g.:. I type:. obgrep ""!c"" file.xyz. The shell passes:. obgrep ""cd .."" file.xyz. If you want to invert a SMARTS string, you can use the ""-v"" flag to ; obgrep, which inverts the matching. On the other hand, if you're actually getting obgrep to *crash* rather ; than giving a SMARTS error message, it would help to know more about ; your setup so we can fix the problem. The program should never crash. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/441#issuecomment-281775104
https://github.com/openbabel/openbabel/issues/441#issuecomment-281775104:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I'm not sure why obgrep crashes -- that's certainly a good question. However, if you're executing obgrep from a UNIX shell, the ""!"" character ; has a special function and probably isn't doing what you expect. So ""!c"" ; is an escape that's replaced by a string matching the last shell command ; beginning with ""c"" -- e.g.:. I type:. obgrep ""!c"" file.xyz. The shell passes:. obgrep ""cd .."" file.xyz. If you want to invert a SMARTS string, you can use the ""-v"" flag to ; obgrep, which inverts the matching. On the other hand, if you're actually getting obgrep to *crash* rather ; than giving a SMARTS error message, it would help to know more about ; your setup so we can fix the problem. The program should never crash. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/441#issuecomment-281775104
https://github.com/openbabel/openbabel/issues/441#issuecomment-281775108:0,Testability,Log,Logged,0,Logged In: NO . try to do /bin/sh obgrep '!c' then the negation operator ; shouldn't be overrided by the system. Fabien. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/441#issuecomment-281775108
https://github.com/openbabel/openbabel/issues/441#issuecomment-281775109:145,Availability,error,errors,145,Logged In: YES ; user_id=164544. I was confusing problems caused by the shell interpreting; special characters in the SMARTS string and obgrep's errors.; By using single quotes my shell shouldn't be interpreting; special characters any more. [philip@darwin]$ obgrep '!C' mols; SMARTS Error: !C; ^; [philip@darwin]$ obgrep '[!C]' mols; [20 hits]. Is the former invalid SMARTS or is this an obgrep error?. Philip. Original comment by: pgr94,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/441#issuecomment-281775109
https://github.com/openbabel/openbabel/issues/441#issuecomment-281775109:284,Availability,Error,Error,284,Logged In: YES ; user_id=164544. I was confusing problems caused by the shell interpreting; special characters in the SMARTS string and obgrep's errors.; By using single quotes my shell shouldn't be interpreting; special characters any more. [philip@darwin]$ obgrep '!C' mols; SMARTS Error: !C; ^; [philip@darwin]$ obgrep '[!C]' mols; [20 hits]. Is the former invalid SMARTS or is this an obgrep error?. Philip. Original comment by: pgr94,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/441#issuecomment-281775109
https://github.com/openbabel/openbabel/issues/441#issuecomment-281775109:396,Availability,error,error,396,Logged In: YES ; user_id=164544. I was confusing problems caused by the shell interpreting; special characters in the SMARTS string and obgrep's errors.; By using single quotes my shell shouldn't be interpreting; special characters any more. [philip@darwin]$ obgrep '!C' mols; SMARTS Error: !C; ^; [philip@darwin]$ obgrep '[!C]' mols; [20 hits]. Is the former invalid SMARTS or is this an obgrep error?. Philip. Original comment by: pgr94,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/441#issuecomment-281775109
https://github.com/openbabel/openbabel/issues/441#issuecomment-281775109:0,Testability,Log,Logged,0,Logged In: YES ; user_id=164544. I was confusing problems caused by the shell interpreting; special characters in the SMARTS string and obgrep's errors.; By using single quotes my shell shouldn't be interpreting; special characters any more. [philip@darwin]$ obgrep '!C' mols; SMARTS Error: !C; ^; [philip@darwin]$ obgrep '[!C]' mols; [20 hits]. Is the former invalid SMARTS or is this an obgrep error?. Philip. Original comment by: pgr94,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/441#issuecomment-281775109
https://github.com/openbabel/openbabel/issues/441#issuecomment-281775112:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Quoting from the Daylight SMARTS webpages:. All atomic expressions which are not simple primitives must be enclosed ; in brackets. The default operation is `&' (high precedence ""and""), i.e., ; two adjacent primitives without an intervening logical operator must both ; be true for the expression (or subexpression) to be true. Yes, '!C' is an invalid SMARTS expression. Marking this bug closed, though if you can get a gdb backtrace of the ; crash, I'd appreciate it. Even on invalid SMARTS strings, obgrep shouldn't ; crash. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/441#issuecomment-281775112
https://github.com/openbabel/openbabel/issues/441#issuecomment-281775112:272,Testability,log,logical,272,"Logged In: YES ; user_id=21420. Quoting from the Daylight SMARTS webpages:. All atomic expressions which are not simple primitives must be enclosed ; in brackets. The default operation is `&' (high precedence ""and""), i.e., ; two adjacent primitives without an intervening logical operator must both ; be true for the expression (or subexpression) to be true. Yes, '!C' is an invalid SMARTS expression. Marking this bug closed, though if you can get a gdb backtrace of the ; crash, I'd appreciate it. Even on invalid SMARTS strings, obgrep shouldn't ; crash. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/441#issuecomment-281775112
https://github.com/openbabel/openbabel/issues/441#issuecomment-281775112:113,Usability,simpl,simple,113,"Logged In: YES ; user_id=21420. Quoting from the Daylight SMARTS webpages:. All atomic expressions which are not simple primitives must be enclosed ; in brackets. The default operation is `&' (high precedence ""and""), i.e., ; two adjacent primitives without an intervening logical operator must both ; be true for the expression (or subexpression) to be true. Yes, '!C' is an invalid SMARTS expression. Marking this bug closed, though if you can get a gdb backtrace of the ; crash, I'd appreciate it. Even on invalid SMARTS strings, obgrep shouldn't ; crash. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/441#issuecomment-281775112
https://github.com/openbabel/openbabel/issues/441#issuecomment-281775113:50,Availability,fault,fault,50,"Logged In: YES ; user_id=164544. The segmentation fault has been isolated and is reported in; a separate bug. ; ; http://sourceforge.net/tracker/index.php?func=detail&aid=1119970&group_id=40728&atid=428740. The negation operator wasn't to blame, so marking this bug; as closed. Thanks for the help Geoff et al. . Philip. Original comment by: pgr94",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/441#issuecomment-281775113
https://github.com/openbabel/openbabel/issues/441#issuecomment-281775113:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=164544. The segmentation fault has been isolated and is reported in; a separate bug. ; ; http://sourceforge.net/tracker/index.php?func=detail&aid=1119970&group_id=40728&atid=428740. The negation operator wasn't to blame, so marking this bug; as closed. Thanks for the help Geoff et al. . Philip. Original comment by: pgr94",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/441#issuecomment-281775113
https://github.com/openbabel/openbabel/issues/442#issuecomment-281775125:137,Deployability,release,release,137,Logged In: YES ; user_id=21420. Thanks for the bug report and fix. Added to openbabel-new-framework ; CVS branch which will form the 2.0-release. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/442#issuecomment-281775125
https://github.com/openbabel/openbabel/issues/442#issuecomment-281775125:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. Thanks for the bug report and fix. Added to openbabel-new-framework ; CVS branch which will form the 2.0-release. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/442#issuecomment-281775125
https://github.com/openbabel/openbabel/issues/443#issuecomment-281775149:66,Integrability,message,message,66,"Logged In: YES ; user_id=21420. The ""Requested Atom Out of Range"" message will never appear in the ; current code since there's an assert right before it -- the code is set to ; kill itself before issuing that message. Interestingly on another test SMI file, if I switch the order of ; components to '([O&X1&-][O&X2]).([#6])' it doesn't crash. I'm still tracing the problem, but thanks for the report -- it's clear there ; are some bugs in the SMARTS code. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775149
https://github.com/openbabel/openbabel/issues/443#issuecomment-281775149:210,Integrability,message,message,210,"Logged In: YES ; user_id=21420. The ""Requested Atom Out of Range"" message will never appear in the ; current code since there's an assert right before it -- the code is set to ; kill itself before issuing that message. Interestingly on another test SMI file, if I switch the order of ; components to '([O&X1&-][O&X2]).([#6])' it doesn't crash. I'm still tracing the problem, but thanks for the report -- it's clear there ; are some bugs in the SMARTS code. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775149
https://github.com/openbabel/openbabel/issues/443#issuecomment-281775149:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. The ""Requested Atom Out of Range"" message will never appear in the ; current code since there's an assert right before it -- the code is set to ; kill itself before issuing that message. Interestingly on another test SMI file, if I switch the order of ; components to '([O&X1&-][O&X2]).([#6])' it doesn't crash. I'm still tracing the problem, but thanks for the report -- it's clear there ; are some bugs in the SMARTS code. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775149
https://github.com/openbabel/openbabel/issues/443#issuecomment-281775149:131,Testability,assert,assert,131,"Logged In: YES ; user_id=21420. The ""Requested Atom Out of Range"" message will never appear in the ; current code since there's an assert right before it -- the code is set to ; kill itself before issuing that message. Interestingly on another test SMI file, if I switch the order of ; components to '([O&X1&-][O&X2]).([#6])' it doesn't crash. I'm still tracing the problem, but thanks for the report -- it's clear there ; are some bugs in the SMARTS code. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775149
https://github.com/openbabel/openbabel/issues/443#issuecomment-281775149:244,Testability,test,test,244,"Logged In: YES ; user_id=21420. The ""Requested Atom Out of Range"" message will never appear in the ; current code since there's an assert right before it -- the code is set to ; kill itself before issuing that message. Interestingly on another test SMI file, if I switch the order of ; components to '([O&X1&-][O&X2]).([#6])' it doesn't crash. I'm still tracing the problem, but thanks for the report -- it's clear there ; are some bugs in the SMARTS code. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775149
https://github.com/openbabel/openbabel/issues/443#issuecomment-281775149:409,Usability,clear,clear,409,"Logged In: YES ; user_id=21420. The ""Requested Atom Out of Range"" message will never appear in the ; current code since there's an assert right before it -- the code is set to ; kill itself before issuing that message. Interestingly on another test SMI file, if I switch the order of ; components to '([O&X1&-][O&X2]).([#6])' it doesn't crash. I'm still tracing the problem, but thanks for the report -- it's clear there ; are some bugs in the SMARTS code. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775149
https://github.com/openbabel/openbabel/issues/443#issuecomment-281775151:0,Testability,Log,Logged,0,"Logged In: NO . Should component-level grouping be functional in the current ; SMARTS implementation, or is it still in development?; I'm asking because if I search an sd file with a pattern like ; '([#6]).([#6])' (=2 carbons which are part of different ; components) obgrep will also return methane (obviously ; hitting the same carbon atom twice). Christian . Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775151
https://github.com/openbabel/openbabel/issues/443#issuecomment-281775152:522,Availability,fault,fault,522,"Logged In: YES ; user_id=164544. I can reproduce the component-level grouping problem. Below; are some interesting cases and a stack trace. This problem; seems pretty serious (assuming it's not simply missing; functionality). If it hasn't been implemented yet then it; should be mentioned in the documentation. [philip@darwin]$ obgrep '([#6]).([#6])' methane.smi; C; [philip@darwin]$ obgrep '([#6]).(c)' methane.smi; C; [philip@darwin]$ obgrep '([#6]).(cc)' methane.smi; 0 1; Assert at File mol.cpp Line 689; Segmentation fault. (gdb) set args '([#6]).([#8]c)' methane.smi; (gdb) run; Starting program: /usr/local/bin/obgrep '([#6]).([#8]c)'; methane.smi; 0 1; Assert at File mol.cpp Line 689. Program received signal SIGSEGV, Segmentation fault.; OpenBabel::OBMol::GetAtom (this=0x2b1, idx=1091774220) at; mol.cpp:689; 689 obAssert(false);; (gdb) bt; #0 OpenBabel::OBMol::GetAtom (this=0x2b1, idx=1091774220); at mol.cpp:689; #1 0xb7f7c058 in OpenBabel::OBSSMatch::Match; (this=0xbffff3b0, mlist=@0xbffff628, bidx=0) at stl_vector.h:501; #2 0xb7f7c2dc in OpenBabel::OBSSMatch::Match; (this=0xbffff3b0, mlist=@0xbffff628, bidx=-1) at; parsmart.cpp:2768; #3 0xb7f7a403 in match (mol=@0xbffff450, pat=0x805da88,; mlist=@0xbffff628, single=false) at parsmart.cpp:2262; #4 0xb7f788dd in OpenBabel::OBSmartsPattern::Match; (this=0xbffff610, mol=@0xbffff450, single=false) at; parsmart.cpp:2087; #5 0x08049a7a in main (argc=-1073744816, argv=0xbffff4d8); at obgrep.cpp:137; (gdb) The program is running. Exit anyway? (y or n) y. Original comment by: pgr94",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775152
https://github.com/openbabel/openbabel/issues/443#issuecomment-281775152:740,Availability,fault,fault,740,"Logged In: YES ; user_id=164544. I can reproduce the component-level grouping problem. Below; are some interesting cases and a stack trace. This problem; seems pretty serious (assuming it's not simply missing; functionality). If it hasn't been implemented yet then it; should be mentioned in the documentation. [philip@darwin]$ obgrep '([#6]).([#6])' methane.smi; C; [philip@darwin]$ obgrep '([#6]).(c)' methane.smi; C; [philip@darwin]$ obgrep '([#6]).(cc)' methane.smi; 0 1; Assert at File mol.cpp Line 689; Segmentation fault. (gdb) set args '([#6]).([#8]c)' methane.smi; (gdb) run; Starting program: /usr/local/bin/obgrep '([#6]).([#8]c)'; methane.smi; 0 1; Assert at File mol.cpp Line 689. Program received signal SIGSEGV, Segmentation fault.; OpenBabel::OBMol::GetAtom (this=0x2b1, idx=1091774220) at; mol.cpp:689; 689 obAssert(false);; (gdb) bt; #0 OpenBabel::OBMol::GetAtom (this=0x2b1, idx=1091774220); at mol.cpp:689; #1 0xb7f7c058 in OpenBabel::OBSSMatch::Match; (this=0xbffff3b0, mlist=@0xbffff628, bidx=0) at stl_vector.h:501; #2 0xb7f7c2dc in OpenBabel::OBSSMatch::Match; (this=0xbffff3b0, mlist=@0xbffff628, bidx=-1) at; parsmart.cpp:2768; #3 0xb7f7a403 in match (mol=@0xbffff450, pat=0x805da88,; mlist=@0xbffff628, single=false) at parsmart.cpp:2262; #4 0xb7f788dd in OpenBabel::OBSmartsPattern::Match; (this=0xbffff610, mol=@0xbffff450, single=false) at; parsmart.cpp:2087; #5 0x08049a7a in main (argc=-1073744816, argv=0xbffff4d8); at obgrep.cpp:137; (gdb) The program is running. Exit anyway? (y or n) y. Original comment by: pgr94",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775152
https://github.com/openbabel/openbabel/issues/443#issuecomment-281775152:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=164544. I can reproduce the component-level grouping problem. Below; are some interesting cases and a stack trace. This problem; seems pretty serious (assuming it's not simply missing; functionality). If it hasn't been implemented yet then it; should be mentioned in the documentation. [philip@darwin]$ obgrep '([#6]).([#6])' methane.smi; C; [philip@darwin]$ obgrep '([#6]).(c)' methane.smi; C; [philip@darwin]$ obgrep '([#6]).(cc)' methane.smi; 0 1; Assert at File mol.cpp Line 689; Segmentation fault. (gdb) set args '([#6]).([#8]c)' methane.smi; (gdb) run; Starting program: /usr/local/bin/obgrep '([#6]).([#8]c)'; methane.smi; 0 1; Assert at File mol.cpp Line 689. Program received signal SIGSEGV, Segmentation fault.; OpenBabel::OBMol::GetAtom (this=0x2b1, idx=1091774220) at; mol.cpp:689; 689 obAssert(false);; (gdb) bt; #0 OpenBabel::OBMol::GetAtom (this=0x2b1, idx=1091774220); at mol.cpp:689; #1 0xb7f7c058 in OpenBabel::OBSSMatch::Match; (this=0xbffff3b0, mlist=@0xbffff628, bidx=0) at stl_vector.h:501; #2 0xb7f7c2dc in OpenBabel::OBSSMatch::Match; (this=0xbffff3b0, mlist=@0xbffff628, bidx=-1) at; parsmart.cpp:2768; #3 0xb7f7a403 in match (mol=@0xbffff450, pat=0x805da88,; mlist=@0xbffff628, single=false) at parsmart.cpp:2262; #4 0xb7f788dd in OpenBabel::OBSmartsPattern::Match; (this=0xbffff610, mol=@0xbffff450, single=false) at; parsmart.cpp:2087; #5 0x08049a7a in main (argc=-1073744816, argv=0xbffff4d8); at obgrep.cpp:137; (gdb) The program is running. Exit anyway? (y or n) y. Original comment by: pgr94",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775152
https://github.com/openbabel/openbabel/issues/443#issuecomment-281775152:476,Testability,Assert,Assert,476,"Logged In: YES ; user_id=164544. I can reproduce the component-level grouping problem. Below; are some interesting cases and a stack trace. This problem; seems pretty serious (assuming it's not simply missing; functionality). If it hasn't been implemented yet then it; should be mentioned in the documentation. [philip@darwin]$ obgrep '([#6]).([#6])' methane.smi; C; [philip@darwin]$ obgrep '([#6]).(c)' methane.smi; C; [philip@darwin]$ obgrep '([#6]).(cc)' methane.smi; 0 1; Assert at File mol.cpp Line 689; Segmentation fault. (gdb) set args '([#6]).([#8]c)' methane.smi; (gdb) run; Starting program: /usr/local/bin/obgrep '([#6]).([#8]c)'; methane.smi; 0 1; Assert at File mol.cpp Line 689. Program received signal SIGSEGV, Segmentation fault.; OpenBabel::OBMol::GetAtom (this=0x2b1, idx=1091774220) at; mol.cpp:689; 689 obAssert(false);; (gdb) bt; #0 OpenBabel::OBMol::GetAtom (this=0x2b1, idx=1091774220); at mol.cpp:689; #1 0xb7f7c058 in OpenBabel::OBSSMatch::Match; (this=0xbffff3b0, mlist=@0xbffff628, bidx=0) at stl_vector.h:501; #2 0xb7f7c2dc in OpenBabel::OBSSMatch::Match; (this=0xbffff3b0, mlist=@0xbffff628, bidx=-1) at; parsmart.cpp:2768; #3 0xb7f7a403 in match (mol=@0xbffff450, pat=0x805da88,; mlist=@0xbffff628, single=false) at parsmart.cpp:2262; #4 0xb7f788dd in OpenBabel::OBSmartsPattern::Match; (this=0xbffff610, mol=@0xbffff450, single=false) at; parsmart.cpp:2087; #5 0x08049a7a in main (argc=-1073744816, argv=0xbffff4d8); at obgrep.cpp:137; (gdb) The program is running. Exit anyway? (y or n) y. Original comment by: pgr94",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775152
https://github.com/openbabel/openbabel/issues/443#issuecomment-281775152:661,Testability,Assert,Assert,661,"Logged In: YES ; user_id=164544. I can reproduce the component-level grouping problem. Below; are some interesting cases and a stack trace. This problem; seems pretty serious (assuming it's not simply missing; functionality). If it hasn't been implemented yet then it; should be mentioned in the documentation. [philip@darwin]$ obgrep '([#6]).([#6])' methane.smi; C; [philip@darwin]$ obgrep '([#6]).(c)' methane.smi; C; [philip@darwin]$ obgrep '([#6]).(cc)' methane.smi; 0 1; Assert at File mol.cpp Line 689; Segmentation fault. (gdb) set args '([#6]).([#8]c)' methane.smi; (gdb) run; Starting program: /usr/local/bin/obgrep '([#6]).([#8]c)'; methane.smi; 0 1; Assert at File mol.cpp Line 689. Program received signal SIGSEGV, Segmentation fault.; OpenBabel::OBMol::GetAtom (this=0x2b1, idx=1091774220) at; mol.cpp:689; 689 obAssert(false);; (gdb) bt; #0 OpenBabel::OBMol::GetAtom (this=0x2b1, idx=1091774220); at mol.cpp:689; #1 0xb7f7c058 in OpenBabel::OBSSMatch::Match; (this=0xbffff3b0, mlist=@0xbffff628, bidx=0) at stl_vector.h:501; #2 0xb7f7c2dc in OpenBabel::OBSSMatch::Match; (this=0xbffff3b0, mlist=@0xbffff628, bidx=-1) at; parsmart.cpp:2768; #3 0xb7f7a403 in match (mol=@0xbffff450, pat=0x805da88,; mlist=@0xbffff628, single=false) at parsmart.cpp:2262; #4 0xb7f788dd in OpenBabel::OBSmartsPattern::Match; (this=0xbffff610, mol=@0xbffff450, single=false) at; parsmart.cpp:2087; #5 0x08049a7a in main (argc=-1073744816, argv=0xbffff4d8); at obgrep.cpp:137; (gdb) The program is running. Exit anyway? (y or n) y. Original comment by: pgr94",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775152
https://github.com/openbabel/openbabel/issues/443#issuecomment-281775152:194,Usability,simpl,simply,194,"Logged In: YES ; user_id=164544. I can reproduce the component-level grouping problem. Below; are some interesting cases and a stack trace. This problem; seems pretty serious (assuming it's not simply missing; functionality). If it hasn't been implemented yet then it; should be mentioned in the documentation. [philip@darwin]$ obgrep '([#6]).([#6])' methane.smi; C; [philip@darwin]$ obgrep '([#6]).(c)' methane.smi; C; [philip@darwin]$ obgrep '([#6]).(cc)' methane.smi; 0 1; Assert at File mol.cpp Line 689; Segmentation fault. (gdb) set args '([#6]).([#8]c)' methane.smi; (gdb) run; Starting program: /usr/local/bin/obgrep '([#6]).([#8]c)'; methane.smi; 0 1; Assert at File mol.cpp Line 689. Program received signal SIGSEGV, Segmentation fault.; OpenBabel::OBMol::GetAtom (this=0x2b1, idx=1091774220) at; mol.cpp:689; 689 obAssert(false);; (gdb) bt; #0 OpenBabel::OBMol::GetAtom (this=0x2b1, idx=1091774220); at mol.cpp:689; #1 0xb7f7c058 in OpenBabel::OBSSMatch::Match; (this=0xbffff3b0, mlist=@0xbffff628, bidx=0) at stl_vector.h:501; #2 0xb7f7c2dc in OpenBabel::OBSSMatch::Match; (this=0xbffff3b0, mlist=@0xbffff628, bidx=-1) at; parsmart.cpp:2768; #3 0xb7f7a403 in match (mol=@0xbffff450, pat=0x805da88,; mlist=@0xbffff628, single=false) at parsmart.cpp:2262; #4 0xb7f788dd in OpenBabel::OBSmartsPattern::Match; (this=0xbffff610, mol=@0xbffff450, single=false) at; parsmart.cpp:2087; #5 0x08049a7a in main (argc=-1073744816, argv=0xbffff4d8); at obgrep.cpp:137; (gdb) The program is running. Exit anyway? (y or n) y. Original comment by: pgr94",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775152
https://github.com/openbabel/openbabel/issues/443#issuecomment-281775153:572,Availability,error,errors,572,"Logged In: YES ; user_id=21420. No, component level grouping is not properly implemented, which *will* go ; in the documentation. What worries me is the crashing -- regardless of input, Open Babel ; shouldn't crash. It looks like I've solved the crash at least for the test cases I've had so far. ; I'd be glad to provide a patch and obviously the latest CVS version on the ; openbabel-new-framework branch will have this fix. I'm marking this PR as ""pending"" and will open a new ""Feature Request"" ; entry for component-level grouping and/or documentation and/or SMARTS ; errors from obgrep about component-level grouping. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775153
https://github.com/openbabel/openbabel/issues/443#issuecomment-281775153:324,Deployability,patch,patch,324,"Logged In: YES ; user_id=21420. No, component level grouping is not properly implemented, which *will* go ; in the documentation. What worries me is the crashing -- regardless of input, Open Babel ; shouldn't crash. It looks like I've solved the crash at least for the test cases I've had so far. ; I'd be glad to provide a patch and obviously the latest CVS version on the ; openbabel-new-framework branch will have this fix. I'm marking this PR as ""pending"" and will open a new ""Feature Request"" ; entry for component-level grouping and/or documentation and/or SMARTS ; errors from obgrep about component-level grouping. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775153
https://github.com/openbabel/openbabel/issues/443#issuecomment-281775153:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. No, component level grouping is not properly implemented, which *will* go ; in the documentation. What worries me is the crashing -- regardless of input, Open Babel ; shouldn't crash. It looks like I've solved the crash at least for the test cases I've had so far. ; I'd be glad to provide a patch and obviously the latest CVS version on the ; openbabel-new-framework branch will have this fix. I'm marking this PR as ""pending"" and will open a new ""Feature Request"" ; entry for component-level grouping and/or documentation and/or SMARTS ; errors from obgrep about component-level grouping. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775153
https://github.com/openbabel/openbabel/issues/443#issuecomment-281775153:269,Testability,test,test,269,"Logged In: YES ; user_id=21420. No, component level grouping is not properly implemented, which *will* go ; in the documentation. What worries me is the crashing -- regardless of input, Open Babel ; shouldn't crash. It looks like I've solved the crash at least for the test cases I've had so far. ; I'd be glad to provide a patch and obviously the latest CVS version on the ; openbabel-new-framework branch will have this fix. I'm marking this PR as ""pending"" and will open a new ""Feature Request"" ; entry for component-level grouping and/or documentation and/or SMARTS ; errors from obgrep about component-level grouping. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775153
https://github.com/openbabel/openbabel/issues/443#issuecomment-281775155:49,Availability,error,error,49,Logged In: YES ; user_id=786138. I had a similar error two. I want an excepption to be thrown. Original comment by: sswamida,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775155
https://github.com/openbabel/openbabel/issues/443#issuecomment-281775155:0,Testability,Log,Logged,0,Logged In: YES ; user_id=786138. I had a similar error two. I want an excepption to be thrown. Original comment by: sswamida,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775155
https://github.com/openbabel/openbabel/issues/443#issuecomment-281775156:246,Availability,fault,faults,246,Logged In: NO . I did some investigating and discovered a source of these sort ; of seg; fautls. I'm not sure if it is the same source you discovered. MY OBESERVATION:; parsing an invalid smile string which starts with a digit e.g.; '2CCCC3' seg faults with assertion notice. THE PROBLEM:; the digit cues the ParseSmiles function to reference an atom ; in the; molecule when there are none. Any ideas?. Josh. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775156
https://github.com/openbabel/openbabel/issues/443#issuecomment-281775156:0,Testability,Log,Logged,0,Logged In: NO . I did some investigating and discovered a source of these sort ; of seg; fautls. I'm not sure if it is the same source you discovered. MY OBESERVATION:; parsing an invalid smile string which starts with a digit e.g.; '2CCCC3' seg faults with assertion notice. THE PROBLEM:; the digit cues the ParseSmiles function to reference an atom ; in the; molecule when there are none. Any ideas?. Josh. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775156
https://github.com/openbabel/openbabel/issues/443#issuecomment-281775156:258,Testability,assert,assertion,258,Logged In: NO . I did some investigating and discovered a source of these sort ; of seg; fautls. I'm not sure if it is the same source you discovered. MY OBESERVATION:; parsing an invalid smile string which starts with a digit e.g.; '2CCCC3' seg faults with assertion notice. THE PROBLEM:; the digit cues the ParseSmiles function to reference an atom ; in the; molecule when there are none. Any ideas?. Josh. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775156
https://github.com/openbabel/openbabel/issues/443#issuecomment-281775157:97,Security,access,accessing,97,Logged In: YES ; user_id=786138. If the input is invalid it shoudl throw an exception with out ; accessing an NULL atom. Original comment by: sswamida,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775157
https://github.com/openbabel/openbabel/issues/443#issuecomment-281775157:0,Testability,Log,Logged,0,Logged In: YES ; user_id=786138. If the input is invalid it shoudl throw an exception with out ; accessing an NULL atom. Original comment by: sswamida,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775157
https://github.com/openbabel/openbabel/issues/443#issuecomment-281775158:366,Availability,error,error,366,"Logged In: YES ; user_id=21420. This bug is *closed*. Period. If you would like to report other SMARTS bugs, please, please open ; another bug report. Otherwise, you just complicate the tracking system ; and make it very hard for me to know what bugs remain to be fixed. Sswamida, if you cannot open a new bug report and give an example of ; input that gives you an error, I'm going to assume it's covered by the fix ; I already added that covers *this* bug report. Yes, invalid input should ; receive an error without accessing a NULL atom. That should be fixed ; by the changes I've already made to the development code. If you'd like ; a copy, use CVS or e-mail me. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775158
https://github.com/openbabel/openbabel/issues/443#issuecomment-281775158:505,Availability,error,error,505,"Logged In: YES ; user_id=21420. This bug is *closed*. Period. If you would like to report other SMARTS bugs, please, please open ; another bug report. Otherwise, you just complicate the tracking system ; and make it very hard for me to know what bugs remain to be fixed. Sswamida, if you cannot open a new bug report and give an example of ; input that gives you an error, I'm going to assume it's covered by the fix ; I already added that covers *this* bug report. Yes, invalid input should ; receive an error without accessing a NULL atom. That should be fixed ; by the changes I've already made to the development code. If you'd like ; a copy, use CVS or e-mail me. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775158
https://github.com/openbabel/openbabel/issues/443#issuecomment-281775158:519,Security,access,accessing,519,"Logged In: YES ; user_id=21420. This bug is *closed*. Period. If you would like to report other SMARTS bugs, please, please open ; another bug report. Otherwise, you just complicate the tracking system ; and make it very hard for me to know what bugs remain to be fixed. Sswamida, if you cannot open a new bug report and give an example of ; input that gives you an error, I'm going to assume it's covered by the fix ; I already added that covers *this* bug report. Yes, invalid input should ; receive an error without accessing a NULL atom. That should be fixed ; by the changes I've already made to the development code. If you'd like ; a copy, use CVS or e-mail me. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775158
https://github.com/openbabel/openbabel/issues/443#issuecomment-281775158:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. This bug is *closed*. Period. If you would like to report other SMARTS bugs, please, please open ; another bug report. Otherwise, you just complicate the tracking system ; and make it very hard for me to know what bugs remain to be fixed. Sswamida, if you cannot open a new bug report and give an example of ; input that gives you an error, I'm going to assume it's covered by the fix ; I already added that covers *this* bug report. Yes, invalid input should ; receive an error without accessing a NULL atom. That should be fixed ; by the changes I've already made to the development code. If you'd like ; a copy, use CVS or e-mail me. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775158
https://github.com/openbabel/openbabel/issues/444#issuecomment-281775169:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. This is a bug, not a feature request. But it would be quite helpful to have ; the exact SD file you were using to test. If you would rather not post it ; publicly, please send it to me privately so I can resolve the bug. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/444#issuecomment-281775169
https://github.com/openbabel/openbabel/issues/444#issuecomment-281775169:146,Testability,test,test,146,"Logged In: YES ; user_id=21420. This is a bug, not a feature request. But it would be quite helpful to have ; the exact SD file you were using to test. If you would rather not post it ; publicly, please send it to me privately so I can resolve the bug. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/444#issuecomment-281775169
https://github.com/openbabel/openbabel/issues/444#issuecomment-281775171:471,Deployability,release,release,471,"Logged In: YES ; user_id=21420. After analyzing the test file (from PubChem: ftp://ftp.ncbi.nlm.nih.gov/; pubchem/Substance/SDF/) the problem became obvious. When reading the molecular properties, the INChI lines for large ; molecules were >1024 characters. The call to read a line (i.e. ; ifs.getline()) failed, making it look like the file had reached the EOF. This bug is currently fixed in the openbabel-new-framework CVS branch, ; the development code aimed for 2.0-release. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/444#issuecomment-281775171
https://github.com/openbabel/openbabel/issues/444#issuecomment-281775171:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. After analyzing the test file (from PubChem: ftp://ftp.ncbi.nlm.nih.gov/; pubchem/Substance/SDF/) the problem became obvious. When reading the molecular properties, the INChI lines for large ; molecules were >1024 characters. The call to read a line (i.e. ; ifs.getline()) failed, making it look like the file had reached the EOF. This bug is currently fixed in the openbabel-new-framework CVS branch, ; the development code aimed for 2.0-release. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/444#issuecomment-281775171
https://github.com/openbabel/openbabel/issues/444#issuecomment-281775171:52,Testability,test,test,52,"Logged In: YES ; user_id=21420. After analyzing the test file (from PubChem: ftp://ftp.ncbi.nlm.nih.gov/; pubchem/Substance/SDF/) the problem became obvious. When reading the molecular properties, the INChI lines for large ; molecules were >1024 characters. The call to read a line (i.e. ; ifs.getline()) failed, making it look like the file had reached the EOF. This bug is currently fixed in the openbabel-new-framework CVS branch, ; the development code aimed for 2.0-release. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/444#issuecomment-281775171
https://github.com/openbabel/openbabel/issues/1403#issuecomment-281810011:71,Integrability,interface,interface,71,I'm writing chemical manager that is based on OpenBabel through Mychem interface and search of multicomponent structures is essential (practicly every salt (including carboxylic salts) are drawn as two separate structures (kationic and anionic parts) and openbabel enginge for SMARTS can not handle that....yet). So far I'm convincing my users that it's enough to search for just one part and skip the other... Thanks. Leszek. Original comment by: leszekrupnicki,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1403#issuecomment-281810011
https://github.com/openbabel/openbabel/issues/1405#issuecomment-281810029:114,Deployability,release,release,114,Logged In: YES ; user_id=21420. Done!. Thanks very much for the contribution -- it'll definitely be in the next ; release. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1405#issuecomment-281810029
https://github.com/openbabel/openbabel/issues/1405#issuecomment-281810029:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. Done!. Thanks very much for the contribution -- it'll definitely be in the next ; release. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1405#issuecomment-281810029
https://github.com/openbabel/openbabel/issues/1406#issuecomment-281810032:45,Integrability,rout,routines,45,"Logged In: YES ; user_id=21420. The internal routines should parse DOS or Mac or UNIX line endings ; without any problem. If there are files with Mac line endings (or anything ; else) that does not import into Open Babel, then that's a *BUG* and I'd ; like to see some example files (e.g., submitted to the test file tracker) or ; a bug report. Support for Mac or DOS line endings on *output* is not currently ; supported and is a good idea, though it may take some work since ; much of the code uses the ""\n"" character automatically. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1406#issuecomment-281810032
https://github.com/openbabel/openbabel/issues/1406#issuecomment-281810032:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. The internal routines should parse DOS or Mac or UNIX line endings ; without any problem. If there are files with Mac line endings (or anything ; else) that does not import into Open Babel, then that's a *BUG* and I'd ; like to see some example files (e.g., submitted to the test file tracker) or ; a bug report. Support for Mac or DOS line endings on *output* is not currently ; supported and is a good idea, though it may take some work since ; much of the code uses the ""\n"" character automatically. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1406#issuecomment-281810032
https://github.com/openbabel/openbabel/issues/1406#issuecomment-281810032:307,Testability,test,test,307,"Logged In: YES ; user_id=21420. The internal routines should parse DOS or Mac or UNIX line endings ; without any problem. If there are files with Mac line endings (or anything ; else) that does not import into Open Babel, then that's a *BUG* and I'd ; like to see some example files (e.g., submitted to the test file tracker) or ; a bug report. Support for Mac or DOS line endings on *output* is not currently ; supported and is a good idea, though it may take some work since ; much of the code uses the ""\n"" character automatically. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1406#issuecomment-281810032
https://github.com/openbabel/openbabel/issues/1406#issuecomment-281810035:0,Testability,Log,Logged,0,Logged In: NO . test.smi contains; c1ccccc1C=Cc2ccccc2	stilbene; c1ccc(cc1)\C=C\c2ccccc2 trans Stilbene; c1ccc(cc1)\C=C/c2ccccc2	cis Stilbene; c1ccccc1	benzene. With Mac line endings I get. Test:~ username$ /usr/local/bin/obgrep -n 'c1ccccc1' '/Users/username/; Desktop/test.smi'; c1ccccc1 benzene2ccccc2 cis Stilbenene. If I convert to UNIX I get. Test:~ usename$ /usr/local/bin/obgrep -n 'c1ccccc1' '/Users/username/; Desktop/test.smi'; stilbene; trans Stilbene; cis Stilbene; benzene. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1406#issuecomment-281810035
https://github.com/openbabel/openbabel/issues/1406#issuecomment-281810035:16,Testability,test,test,16,Logged In: NO . test.smi contains; c1ccccc1C=Cc2ccccc2	stilbene; c1ccc(cc1)\C=C\c2ccccc2 trans Stilbene; c1ccc(cc1)\C=C/c2ccccc2	cis Stilbene; c1ccccc1	benzene. With Mac line endings I get. Test:~ username$ /usr/local/bin/obgrep -n 'c1ccccc1' '/Users/username/; Desktop/test.smi'; c1ccccc1 benzene2ccccc2 cis Stilbenene. If I convert to UNIX I get. Test:~ usename$ /usr/local/bin/obgrep -n 'c1ccccc1' '/Users/username/; Desktop/test.smi'; stilbene; trans Stilbene; cis Stilbene; benzene. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1406#issuecomment-281810035
https://github.com/openbabel/openbabel/issues/1406#issuecomment-281810035:190,Testability,Test,Test,190,Logged In: NO . test.smi contains; c1ccccc1C=Cc2ccccc2	stilbene; c1ccc(cc1)\C=C\c2ccccc2 trans Stilbene; c1ccc(cc1)\C=C/c2ccccc2	cis Stilbene; c1ccccc1	benzene. With Mac line endings I get. Test:~ username$ /usr/local/bin/obgrep -n 'c1ccccc1' '/Users/username/; Desktop/test.smi'; c1ccccc1 benzene2ccccc2 cis Stilbenene. If I convert to UNIX I get. Test:~ usename$ /usr/local/bin/obgrep -n 'c1ccccc1' '/Users/username/; Desktop/test.smi'; stilbene; trans Stilbene; cis Stilbene; benzene. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1406#issuecomment-281810035
https://github.com/openbabel/openbabel/issues/1406#issuecomment-281810035:270,Testability,test,test,270,Logged In: NO . test.smi contains; c1ccccc1C=Cc2ccccc2	stilbene; c1ccc(cc1)\C=C\c2ccccc2 trans Stilbene; c1ccc(cc1)\C=C/c2ccccc2	cis Stilbene; c1ccccc1	benzene. With Mac line endings I get. Test:~ username$ /usr/local/bin/obgrep -n 'c1ccccc1' '/Users/username/; Desktop/test.smi'; c1ccccc1 benzene2ccccc2 cis Stilbenene. If I convert to UNIX I get. Test:~ usename$ /usr/local/bin/obgrep -n 'c1ccccc1' '/Users/username/; Desktop/test.smi'; stilbene; trans Stilbene; cis Stilbene; benzene. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1406#issuecomment-281810035
https://github.com/openbabel/openbabel/issues/1406#issuecomment-281810035:349,Testability,Test,Test,349,Logged In: NO . test.smi contains; c1ccccc1C=Cc2ccccc2	stilbene; c1ccc(cc1)\C=C\c2ccccc2 trans Stilbene; c1ccc(cc1)\C=C/c2ccccc2	cis Stilbene; c1ccccc1	benzene. With Mac line endings I get. Test:~ username$ /usr/local/bin/obgrep -n 'c1ccccc1' '/Users/username/; Desktop/test.smi'; c1ccccc1 benzene2ccccc2 cis Stilbenene. If I convert to UNIX I get. Test:~ usename$ /usr/local/bin/obgrep -n 'c1ccccc1' '/Users/username/; Desktop/test.smi'; stilbene; trans Stilbene; cis Stilbene; benzene. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1406#issuecomment-281810035
https://github.com/openbabel/openbabel/issues/1406#issuecomment-281810035:428,Testability,test,test,428,Logged In: NO . test.smi contains; c1ccccc1C=Cc2ccccc2	stilbene; c1ccc(cc1)\C=C\c2ccccc2 trans Stilbene; c1ccc(cc1)\C=C/c2ccccc2	cis Stilbene; c1ccccc1	benzene. With Mac line endings I get. Test:~ username$ /usr/local/bin/obgrep -n 'c1ccccc1' '/Users/username/; Desktop/test.smi'; c1ccccc1 benzene2ccccc2 cis Stilbenene. If I convert to UNIX I get. Test:~ usename$ /usr/local/bin/obgrep -n 'c1ccccc1' '/Users/username/; Desktop/test.smi'; stilbene; trans Stilbene; cis Stilbene; benzene. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1406#issuecomment-281810035
https://github.com/openbabel/openbabel/issues/1406#issuecomment-281810036:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. This is being closed as it is superceded by PR#1499615. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1406#issuecomment-281810036
https://github.com/openbabel/openbabel/issues/445#issuecomment-281775185:229,Availability,fault,fault,229,Logged In: YES ; user_id=1189615. I had not previously compiled obgrep on Windows because it ; uses getopt() and most of its features are built into openbabel ; v2.0 anyway. But I found a getopt Windows port and ; reproduced the fault. The problem is that the ifstream object ; ifs was going out of scope before a pointer to it was used. I'll ; updated the of obgrep.cpp which can now be compiled on ; Windows with a public domain port of getopt. (Not ; extensively tested.). Chris . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/445#issuecomment-281775185
https://github.com/openbabel/openbabel/issues/445#issuecomment-281775185:345,Deployability,update,updated,345,Logged In: YES ; user_id=1189615. I had not previously compiled obgrep on Windows because it ; uses getopt() and most of its features are built into openbabel ; v2.0 anyway. But I found a getopt Windows port and ; reproduced the fault. The problem is that the ifstream object ; ifs was going out of scope before a pointer to it was used. I'll ; updated the of obgrep.cpp which can now be compiled on ; Windows with a public domain port of getopt. (Not ; extensively tested.). Chris . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/445#issuecomment-281775185
https://github.com/openbabel/openbabel/issues/445#issuecomment-281775185:0,Testability,Log,Logged,0,Logged In: YES ; user_id=1189615. I had not previously compiled obgrep on Windows because it ; uses getopt() and most of its features are built into openbabel ; v2.0 anyway. But I found a getopt Windows port and ; reproduced the fault. The problem is that the ifstream object ; ifs was going out of scope before a pointer to it was used. I'll ; updated the of obgrep.cpp which can now be compiled on ; Windows with a public domain port of getopt. (Not ; extensively tested.). Chris . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/445#issuecomment-281775185
https://github.com/openbabel/openbabel/issues/445#issuecomment-281775185:466,Testability,test,tested,466,Logged In: YES ; user_id=1189615. I had not previously compiled obgrep on Windows because it ; uses getopt() and most of its features are built into openbabel ; v2.0 anyway. But I found a getopt Windows port and ; reproduced the fault. The problem is that the ifstream object ; ifs was going out of scope before a pointer to it was used. I'll ; updated the of obgrep.cpp which can now be compiled on ; Windows with a public domain port of getopt. (Not ; extensively tested.). Chris . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/445#issuecomment-281775185
https://github.com/openbabel/openbabel/issues/445#issuecomment-281775187:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. It's fixed for me. Marking this closed. Thanks a lot!; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/445#issuecomment-281775187
https://github.com/openbabel/openbabel/issues/446#issuecomment-281775216:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I'm assigning this to Fabien and attaching the test file for future ; reference. But it'd help a lot if you were a bit more specific about which bonds are ; assigned ""wrong."" Where should the double bonds be? Can you give ; atom numbers or example CONECT records that should be changed?. At the very least, the current CVS version (on the openbabel-new-; framework branch) looks OK to me, but I don't know what the typing ; should be on the nitrogens, for example. PDB files without explicit ; hydrogens are extremely hard to type ""correctly."". Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/446#issuecomment-281775216
https://github.com/openbabel/openbabel/issues/446#issuecomment-281775216:79,Testability,test,test,79,"Logged In: YES ; user_id=21420. I'm assigning this to Fabien and attaching the test file for future ; reference. But it'd help a lot if you were a bit more specific about which bonds are ; assigned ""wrong."" Where should the double bonds be? Can you give ; atom numbers or example CONECT records that should be changed?. At the very least, the current CVS version (on the openbabel-new-; framework branch) looks OK to me, but I don't know what the typing ; should be on the nitrogens, for example. PDB files without explicit ; hydrogens are extremely hard to type ""correctly."". Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/446#issuecomment-281775216
https://github.com/openbabel/openbabel/issues/446#issuecomment-281775220:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1290830. >PDB files without explicit hydrogens are extremely hard to; type ""correctly."". I know, that's why I praised Fabien ;-); But I'm doing my best to only report things that are still; doable without hydrogens (and I think were also done; correctly before some recent changes). >At the very least, the current CVS version (on the; >openbabel-new-framework branch) looks OK to me. I cvs-checkedout this one, but it's still the same. >But it'd help a lot if you were a bit more specific about which; >bonds are assigned ""wrong."". Sorry, I feared that the one who programmed all the; complicated details of kekulize.cpp might take it as an; insult to be told about the location of double bonds in the; standard DNA base-pairs ;-). Anyway, here we go, looking at the attached kekubug.pdb:. Residue 630 is Guanosine. OpenBabel puts a double bond at; C2=N2, but it should instead be flipped over to C2=N3:; http://en.wikipedia.org/wiki/Guanosine_monophosphate. There is this general rule that oxygens bound to aromatic; rings get a double bond if possible (i.e. if it doesn't kill; aromaticity), because the keto form is more stable than the; enol tautomer:; http://www.nationmaster.com/encyclopedia/Keto_enol-tautomerism; (that's already handled well by OpenBabel). I think OpenBabel still needs to consider that nitrogens; bound to aromatic rings get a single bond if possible.; Couldn't find the theoretical justification for this; empirical rule, can anyone help?. Residue 631 is Cytidine, with essentially the same problem; again: The C4=N4 double bond belongs to C4=N3.; http://en.wikipedia.org/wiki/Cytidine. Residue 632 is an unusual one where OpenBabel puts a double; bond at C1*=C5, which is impossible because C1* is clearly; sp3 hybridized and non-planar.; So both the C1*=C5 and N1=C6 double bonds should be single; bonds, with a C6=C5 double bond in the middle. BTW: I don't have an example now, but I saw the kekulizer; generate different results for the same re",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/446#issuecomment-281775220
https://github.com/openbabel/openbabel/issues/446#issuecomment-281775220:1752,Usability,clear,clearly,1752,"ings that are still; doable without hydrogens (and I think were also done; correctly before some recent changes). >At the very least, the current CVS version (on the; >openbabel-new-framework branch) looks OK to me. I cvs-checkedout this one, but it's still the same. >But it'd help a lot if you were a bit more specific about which; >bonds are assigned ""wrong."". Sorry, I feared that the one who programmed all the; complicated details of kekulize.cpp might take it as an; insult to be told about the location of double bonds in the; standard DNA base-pairs ;-). Anyway, here we go, looking at the attached kekubug.pdb:. Residue 630 is Guanosine. OpenBabel puts a double bond at; C2=N2, but it should instead be flipped over to C2=N3:; http://en.wikipedia.org/wiki/Guanosine_monophosphate. There is this general rule that oxygens bound to aromatic; rings get a double bond if possible (i.e. if it doesn't kill; aromaticity), because the keto form is more stable than the; enol tautomer:; http://www.nationmaster.com/encyclopedia/Keto_enol-tautomerism; (that's already handled well by OpenBabel). I think OpenBabel still needs to consider that nitrogens; bound to aromatic rings get a single bond if possible.; Couldn't find the theoretical justification for this; empirical rule, can anyone help?. Residue 631 is Cytidine, with essentially the same problem; again: The C4=N4 double bond belongs to C4=N3.; http://en.wikipedia.org/wiki/Cytidine. Residue 632 is an unusual one where OpenBabel puts a double; bond at C1*=C5, which is impossible because C1* is clearly; sp3 hybridized and non-planar.; So both the C1*=C5 and N1=C6 double bonds should be single; bonds, with a C6=C5 double bond in the middle. BTW: I don't have an example now, but I saw the kekulizer; generate different results for the same residue type, i.e.; in PDB file 1ASZ every residue type appears multiple times,; but didn't always get the same single/double bond pattern. Best regards,; Elmar. Original comment by: elmarkrieger",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/446#issuecomment-281775220
https://github.com/openbabel/openbabel/issues/446#issuecomment-281775221:0,Testability,Log,Logged,0,Logged In: YES ; user_id=888972. The kekulize part is OK now. The remaining problems such ; as assignment of double bonds where they should be single ; is not a problem of the kekulize function. It is a problem of the ; PerceiveBondeOrder function. Fabien. Original comment by: fabfont,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/446#issuecomment-281775221
https://github.com/openbabel/openbabel/issues/447#issuecomment-281775229:210,Availability,down,down,210,"Logged In: YES ; user_id=21420. D'oh. I should have read through the SMARTS parser more carefully. ; There's a big section that claims:. /*; need to handle these cases; ... I'm currently implementing ""up"" and ""down"" primitives and testing. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/447#issuecomment-281775229
https://github.com/openbabel/openbabel/issues/447#issuecomment-281775229:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. D'oh. I should have read through the SMARTS parser more carefully. ; There's a big section that claims:. /*; need to handle these cases; ... I'm currently implementing ""up"" and ""down"" primitives and testing. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/447#issuecomment-281775229
https://github.com/openbabel/openbabel/issues/447#issuecomment-281775229:231,Testability,test,testing,231,"Logged In: YES ; user_id=21420. D'oh. I should have read through the SMARTS parser more carefully. ; There's a big section that claims:. /*; need to handle these cases; ... I'm currently implementing ""up"" and ""down"" primitives and testing. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/447#issuecomment-281775229
https://github.com/openbabel/openbabel/issues/447#issuecomment-281775231:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. OK, this seems to work now. Marking this closed pending further comment from the submitter.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/447#issuecomment-281775231
https://github.com/openbabel/openbabel/issues/447#issuecomment-281775232:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/447#issuecomment-281775232
https://github.com/openbabel/openbabel/issues/448#issuecomment-281775235:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. This actually involved two bugs.; * The AssignFunctionalGroupBonds code in the bond typer was not ; working correctly. This now picks two of the oxygens and assigns ; double bonds.; * (Still to be resolved) The new Kekulize function is stripping bond ; orders off of bonds, once they've been assigned. This is Fabien's code, ; so I'm assigning the resolution of this bug to him and sending him a ; note. Thanks for the report -- hopefully, it'll be fixed soon. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/448#issuecomment-281775235
https://github.com/openbabel/openbabel/issues/448#issuecomment-281775236:0,Testability,Log,Logged,0,Logged In: YES ; user_id=888972. The kekulize function only change the bond order of aromatic ; bonds. There is nothing to kekulize in a sulfate. Fabien. Original comment by: fabfont,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/448#issuecomment-281775236
https://github.com/openbabel/openbabel/issues/448#issuecomment-281775239:311,Integrability,rout,routine,311,"Logged In: YES ; user_id=21420. This is fixed. After Fabien's response, I did further debugging -- the ; problem was that the OBBondTyper was not calling SetKSingle, ; SetKDouble, etc. for functional group bond order assignment. Hence, after the new kekulize code ran through the rings, the ; OBMol::Kekulize() routine saw all remaining bonds as KSingle and set ; them to BO = 1. This is now fixed in CVS. Thanks Fabien!; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/448#issuecomment-281775239
https://github.com/openbabel/openbabel/issues/448#issuecomment-281775239:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. This is fixed. After Fabien's response, I did further debugging -- the ; problem was that the OBBondTyper was not calling SetKSingle, ; SetKDouble, etc. for functional group bond order assignment. Hence, after the new kekulize code ran through the rings, the ; OBMol::Kekulize() routine saw all remaining bonds as KSingle and set ; them to BO = 1. This is now fixed in CVS. Thanks Fabien!; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/448#issuecomment-281775239
https://github.com/openbabel/openbabel/issues/449#issuecomment-281775266:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. Fixed in current CVS. OBTypeTable was being reset to other formats ; during WriteMolecule(). Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/449#issuecomment-281775266
https://github.com/openbabel/openbabel/issues/1407#issuecomment-281810039:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. Moving to feature requests.; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1407#issuecomment-281810039
https://github.com/openbabel/openbabel/issues/1407#issuecomment-281810041:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. Committing this change now. Hydrogen addition is turned on for SMILES ; input. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1407#issuecomment-281810041
https://github.com/openbabel/openbabel/issues/1407#issuecomment-281810042:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1407#issuecomment-281810042
https://github.com/openbabel/openbabel/issues/1409#issuecomment-281810044:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420; Originator: YES. Point group symmetry has now been added to the SVN trunk for 2.2. Space group code has also been added (although not space group recognition). Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1409#issuecomment-281810044
https://github.com/openbabel/openbabel/issues/1410#issuecomment-281810054:381,Safety,predict,prediction,381,"Logged In: YES ; user_id=169818. You can convert the TPSA calculation to OpenBabel:; http://www-ra.informatik.uni-tuebingen.de/software/joelib/api2/joelib2/algo/contribution/package-summary.html; http://www-ra.informatik.uni-tuebingen.de/software/joelib/api2/joelib2/data/GroupContributionHolder.html. It is based on SMARTS and because OpenBabel uses the same; expert systems, the prediction should have the same quality. Kind regards, Joerg. Original comment by: wegner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1410#issuecomment-281810054
https://github.com/openbabel/openbabel/issues/1410#issuecomment-281810054:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=169818. You can convert the TPSA calculation to OpenBabel:; http://www-ra.informatik.uni-tuebingen.de/software/joelib/api2/joelib2/algo/contribution/package-summary.html; http://www-ra.informatik.uni-tuebingen.de/software/joelib/api2/joelib2/data/GroupContributionHolder.html. It is based on SMARTS and because OpenBabel uses the same; expert systems, the prediction should have the same quality. Kind regards, Joerg. Original comment by: wegner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1410#issuecomment-281810054
https://github.com/openbabel/openbabel/issues/1410#issuecomment-281810057:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420; Originator: NO. I believe that Tim handled this in the current SVN trunk (along with logP). Perhaps it's better to have a shared class for handling group contributions like this?; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1410#issuecomment-281810057
https://github.com/openbabel/openbabel/issues/1410#issuecomment-281810057:117,Testability,log,logP,117,Logged In: YES ; user_id=21420; Originator: NO. I believe that Tim handled this in the current SVN trunk (along with logP). Perhaps it's better to have a shared class for handling group contributions like this?; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1410#issuecomment-281810057
https://github.com/openbabel/openbabel/issues/1410#issuecomment-281810058:297,Safety,avoid,avoid,297,"Logged In: NO . The PSA calculation in SVN already uses the JOELib2 parameter files and is basically a translation. The reason why I used PSA and logP class is that it would be possible to add extra algorithms to calculate these properties. But shared GroupContribution class would make sense:; - avoid bugs in code that is quite similar; - add other JOELib properties that use GroupContribution (MR, ??). I'll implement this as a OBGroupContribution class. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1410#issuecomment-281810058
https://github.com/openbabel/openbabel/issues/1410#issuecomment-281810058:0,Testability,Log,Logged,0,"Logged In: NO . The PSA calculation in SVN already uses the JOELib2 parameter files and is basically a translation. The reason why I used PSA and logP class is that it would be possible to add extra algorithms to calculate these properties. But shared GroupContribution class would make sense:; - avoid bugs in code that is quite similar; - add other JOELib properties that use GroupContribution (MR, ??). I'll implement this as a OBGroupContribution class. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1410#issuecomment-281810058
https://github.com/openbabel/openbabel/issues/1410#issuecomment-281810058:146,Testability,log,logP,146,"Logged In: NO . The PSA calculation in SVN already uses the JOELib2 parameter files and is basically a translation. The reason why I used PSA and logP class is that it would be possible to add extra algorithms to calculate these properties. But shared GroupContribution class would make sense:; - avoid bugs in code that is quite similar; - add other JOELib properties that use GroupContribution (MR, ??). I'll implement this as a OBGroupContribution class. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1410#issuecomment-281810058
https://github.com/openbabel/openbabel/issues/1410#issuecomment-281810061:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. Thanks to Tim Vandermeersch for adding PSA, logP, and MR to the code. This is now fixed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1410#issuecomment-281810061
https://github.com/openbabel/openbabel/issues/1410#issuecomment-281810061:92,Testability,log,logP,92,"Logged In: YES ; user_id=21420; Originator: NO. Thanks to Tim Vandermeersch for adding PSA, logP, and MR to the code. This is now fixed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1410#issuecomment-281810061
https://github.com/openbabel/openbabel/issues/450#issuecomment-281775290:232,Deployability,update,update,232,"Logged In: YES ; user_id=21420. Works for me. I don't know when you checked out the CVS. The ; OBAtom::ClearBond() code is in mol.h and it's definitely compiling cleanly ; for me. Maybe try a ""make clean; make"" after running a ""cvs update"" now?. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/450#issuecomment-281775290
https://github.com/openbabel/openbabel/issues/450#issuecomment-281775290:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Works for me. I don't know when you checked out the CVS. The ; OBAtom::ClearBond() code is in mol.h and it's definitely compiling cleanly ; for me. Maybe try a ""make clean; make"" after running a ""cvs update"" now?. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/450#issuecomment-281775290
https://github.com/openbabel/openbabel/issues/450#issuecomment-281775290:103,Usability,Clear,ClearBond,103,"Logged In: YES ; user_id=21420. Works for me. I don't know when you checked out the CVS. The ; OBAtom::ClearBond() code is in mol.h and it's definitely compiling cleanly ; for me. Maybe try a ""make clean; make"" after running a ""cvs update"" now?. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/450#issuecomment-281775290
https://github.com/openbabel/openbabel/issues/451#issuecomment-281775322:157,Availability,error,errors,157,"Logged In: YES ; user_id=21420. This seems to be fixed in the current CVS code. I'm marking this report ; closed, pending comments. If similar SMARTS/obgrep errors occur, please open a new bug. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/451#issuecomment-281775322
https://github.com/openbabel/openbabel/issues/451#issuecomment-281775322:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. This seems to be fixed in the current CVS code. I'm marking this report ; closed, pending comments. If similar SMARTS/obgrep errors occur, please open a new bug. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/451#issuecomment-281775322
https://github.com/openbabel/openbabel/issues/451#issuecomment-281775323:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/451#issuecomment-281775323
https://github.com/openbabel/openbabel/issues/452#issuecomment-281775332:254,Deployability,release,release,254,"Logged In: YES ; user_id=21420. I'm game. That one's always bugged me, so let's give it a try. The worst ; thing that happens is that we find some counter-examples. Then we add ; appropriate SMARTS to work around them. Better to try this now, than after release. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/452#issuecomment-281775332
https://github.com/openbabel/openbabel/issues/452#issuecomment-281775332:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I'm game. That one's always bugged me, so let's give it a try. The worst ; thing that happens is that we find some counter-examples. Then we add ; appropriate SMARTS to work around them. Better to try this now, than after release. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/452#issuecomment-281775332
https://github.com/openbabel/openbabel/issues/452#issuecomment-281775333:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/452#issuecomment-281775333
https://github.com/openbabel/openbabel/issues/453#issuecomment-281775337:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I have *a* fix for this, but it's in your code, so I'm not sure it's absolutely ; correct. The problem is that the implicit valence for that carbon comes back as 1 ; based on the IMPVAL rules in atomtyp.txt. (I'll see if I can figure out ; what needs to happen there.). But in OBAtom::ImplicitHydrogenCount() the following happens:; int impval = _impval - GetHvyValence();; //Jan 05 Implicit valency now left alone; use spin multiplicity for ; implici\; t Hs; int mult = GetSpinMultiplicity();; if(mult==2) //radical; impval-=1;; else if(mult==1 || mult==3) //carbene; impval-=2;; return((impval>0)?impval:0);. But if impval != 0 and mult == 0, then the impval is returned. I don't ; think this is the intended behavior, so I added:; else; impval=0;. Please take a look. Thanks, -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/453#issuecomment-281775337
https://github.com/openbabel/openbabel/issues/453#issuecomment-281775339:169,Availability,fault,fault,169,"Logged In: YES ; user_id=1189615. OBAtom::ImplicitHydrogenCount() gives the right answer for ; this case, but the wrong answer in most others. I have ; removed it.; The fault is corrected by adding the line:; IMPVAL [#6^1-]			1 #CM for ; isocyanides; in atomtyp.txt. I think this fix is robust since it follows on ; from the two lines above:; IMPVAL [#6^3-]			3; IMPVAL [#6^2-]			2; I expect Geoff will update atomtyp.h appropriately. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/453#issuecomment-281775339
https://github.com/openbabel/openbabel/issues/453#issuecomment-281775339:287,Availability,robust,robust,287,"Logged In: YES ; user_id=1189615. OBAtom::ImplicitHydrogenCount() gives the right answer for ; this case, but the wrong answer in most others. I have ; removed it.; The fault is corrected by adding the line:; IMPVAL [#6^1-]			1 #CM for ; isocyanides; in atomtyp.txt. I think this fix is robust since it follows on ; from the two lines above:; IMPVAL [#6^3-]			3; IMPVAL [#6^2-]			2; I expect Geoff will update atomtyp.h appropriately. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/453#issuecomment-281775339
https://github.com/openbabel/openbabel/issues/453#issuecomment-281775339:403,Deployability,update,update,403,"Logged In: YES ; user_id=1189615. OBAtom::ImplicitHydrogenCount() gives the right answer for ; this case, but the wrong answer in most others. I have ; removed it.; The fault is corrected by adding the line:; IMPVAL [#6^1-]			1 #CM for ; isocyanides; in atomtyp.txt. I think this fix is robust since it follows on ; from the two lines above:; IMPVAL [#6^3-]			3; IMPVAL [#6^2-]			2; I expect Geoff will update atomtyp.h appropriately. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/453#issuecomment-281775339
https://github.com/openbabel/openbabel/issues/453#issuecomment-281775339:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615. OBAtom::ImplicitHydrogenCount() gives the right answer for ; this case, but the wrong answer in most others. I have ; removed it.; The fault is corrected by adding the line:; IMPVAL [#6^1-]			1 #CM for ; isocyanides; in atomtyp.txt. I think this fix is robust since it follows on ; from the two lines above:; IMPVAL [#6^3-]			3; IMPVAL [#6^2-]			2; I expect Geoff will update atomtyp.h appropriately. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/453#issuecomment-281775339
https://github.com/openbabel/openbabel/issues/453#issuecomment-281775342:184,Deployability,update,updated,184,"Logged In: YES ; user_id=21420. I'm now marking this closed. I tried adding that type previously and it ; seemed not to solve the problem -- my mistake, my system wasn't reading ; the updated data file. I've also added a series of IMPVAL for positive carbon atoms similarly. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/453#issuecomment-281775342
https://github.com/openbabel/openbabel/issues/453#issuecomment-281775342:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I'm now marking this closed. I tried adding that type previously and it ; seemed not to solve the problem -- my mistake, my system wasn't reading ; the updated data file. I've also added a series of IMPVAL for positive carbon atoms similarly. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/453#issuecomment-281775342
https://github.com/openbabel/openbabel/issues/454#issuecomment-281775346:323,Deployability,update,update,323,"Logged In: YES ; user_id=21420. Works for me on OS X g++ v. 3.3:; gcc version 3.3 20030304 (Apple Computer, Inc. build 1809). Have you tried a ""make clean; make""?. I just added the std:: namespaces to the source file to match the header ; -- this makes it easier for doxygen to generate API documentation. Sometimes when I update a source file or header and the dates are out ; of sync, make will not properly re-compile or update a library, but a ; ""make clean; make"" will fix this. For now, I'm marking this as ""Works for me, close pending response in ; 14 days."". Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/454#issuecomment-281775346
https://github.com/openbabel/openbabel/issues/454#issuecomment-281775346:424,Deployability,update,update,424,"Logged In: YES ; user_id=21420. Works for me on OS X g++ v. 3.3:; gcc version 3.3 20030304 (Apple Computer, Inc. build 1809). Have you tried a ""make clean; make""?. I just added the std:: namespaces to the source file to match the header ; -- this makes it easier for doxygen to generate API documentation. Sometimes when I update a source file or header and the dates are out ; of sync, make will not properly re-compile or update a library, but a ; ""make clean; make"" will fix this. For now, I'm marking this as ""Works for me, close pending response in ; 14 days."". Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/454#issuecomment-281775346
https://github.com/openbabel/openbabel/issues/454#issuecomment-281775346:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Works for me on OS X g++ v. 3.3:; gcc version 3.3 20030304 (Apple Computer, Inc. build 1809). Have you tried a ""make clean; make""?. I just added the std:: namespaces to the source file to match the header ; -- this makes it easier for doxygen to generate API documentation. Sometimes when I update a source file or header and the dates are out ; of sync, make will not properly re-compile or update a library, but a ; ""make clean; make"" will fix this. For now, I'm marking this as ""Works for me, close pending response in ; 14 days."". Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/454#issuecomment-281775346
https://github.com/openbabel/openbabel/issues/1413#issuecomment-281810070:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. I'm marking this entry specifically for queries and adding an entry into the file ; format list for the file format. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1413#issuecomment-281810070
https://github.com/openbabel/openbabel/issues/1415#issuecomment-281810073:298,Availability,fault,fault,298,Logged In: YES ; user_id=1189615. In v2.0 the reading and writing is interleaved. There is a queue ; of 2 so that an output format can know if it is outputting the ; last object. The ostream should be flushed even if there is an ; exception (but possibly it could be one object short(?)). If the ; fault is minor enough to just produce a molecule with no ; atoms or if the format has a SkipObjects() function the faulty ; molecule is not output but the input file should continue to be ; read. But I'll take this all back if you have a file which fails... Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1415#issuecomment-281810073
https://github.com/openbabel/openbabel/issues/1415#issuecomment-281810073:413,Availability,fault,faulty,413,Logged In: YES ; user_id=1189615. In v2.0 the reading and writing is interleaved. There is a queue ; of 2 so that an output format can know if it is outputting the ; last object. The ostream should be flushed even if there is an ; exception (but possibly it could be one object short(?)). If the ; fault is minor enough to just produce a molecule with no ; atoms or if the format has a SkipObjects() function the faulty ; molecule is not output but the input file should continue to be ; read. But I'll take this all back if you have a file which fails... Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1415#issuecomment-281810073
https://github.com/openbabel/openbabel/issues/1415#issuecomment-281810073:93,Performance,queue,queue,93,Logged In: YES ; user_id=1189615. In v2.0 the reading and writing is interleaved. There is a queue ; of 2 so that an output format can know if it is outputting the ; last object. The ostream should be flushed even if there is an ; exception (but possibly it could be one object short(?)). If the ; fault is minor enough to just produce a molecule with no ; atoms or if the format has a SkipObjects() function the faulty ; molecule is not output but the input file should continue to be ; read. But I'll take this all back if you have a file which fails... Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1415#issuecomment-281810073
https://github.com/openbabel/openbabel/issues/1415#issuecomment-281810073:0,Testability,Log,Logged,0,Logged In: YES ; user_id=1189615. In v2.0 the reading and writing is interleaved. There is a queue ; of 2 so that an output format can know if it is outputting the ; last object. The ostream should be flushed even if there is an ; exception (but possibly it could be one object short(?)). If the ; fault is minor enough to just produce a molecule with no ; atoms or if the format has a SkipObjects() function the faulty ; molecule is not output but the input file should continue to be ; read. But I'll take this all back if you have a file which fails... Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1415#issuecomment-281810073
https://github.com/openbabel/openbabel/issues/1415#issuecomment-281810074:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. Can't reproduce any bug -- just hadn't looked carefully at the code. It works ; fast enough that I hadn't witnessed the interleaving. :-). Marking this closed.; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1415#issuecomment-281810074
https://github.com/openbabel/openbabel/issues/1416#issuecomment-281810076:269,Integrability,interface,interface,269,"Logged In: YES ; user_id=1189615. This feature would be of wider application if it were in the ; main babel (which can also do the work of obgrep), where it ; could be easily implemented in OBMol::DoTransformations ; which already does filtering.; It could now have an interface like; --prop MW>102; and could be extended to other properties (with names other ; than ""MW"") which would relate to any info that OB had on ; the molecule - chemical, e.g nAtoms - and non-chemical, ; e.g. title or comments. The parsing of the string containing ; >,< or = would be easy. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1416#issuecomment-281810076
https://github.com/openbabel/openbabel/issues/1416#issuecomment-281810076:313,Modifiability,extend,extended,313,"Logged In: YES ; user_id=1189615. This feature would be of wider application if it were in the ; main babel (which can also do the work of obgrep), where it ; could be easily implemented in OBMol::DoTransformations ; which already does filtering.; It could now have an interface like; --prop MW>102; and could be extended to other properties (with names other ; than ""MW"") which would relate to any info that OB had on ; the molecule - chemical, e.g nAtoms - and non-chemical, ; e.g. title or comments. The parsing of the string containing ; >,< or = would be easy. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1416#issuecomment-281810076
https://github.com/openbabel/openbabel/issues/1416#issuecomment-281810076:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615. This feature would be of wider application if it were in the ; main babel (which can also do the work of obgrep), where it ; could be easily implemented in OBMol::DoTransformations ; which already does filtering.; It could now have an interface like; --prop MW>102; and could be extended to other properties (with names other ; than ""MW"") which would relate to any info that OB had on ; the molecule - chemical, e.g nAtoms - and non-chemical, ; e.g. title or comments. The parsing of the string containing ; >,< or = would be easy. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1416#issuecomment-281810076
https://github.com/openbabel/openbabel/issues/1416#issuecomment-281810078:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420; Originator: YES. Chris later went on to implement this in the 2.2 descriptor / filter framework. This is now closed. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1416#issuecomment-281810078
https://github.com/openbabel/openbabel/issues/455#issuecomment-281775360:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. Duplicates feature request (1222443) -- marking duplicate and closing. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/455#issuecomment-281775360
https://github.com/openbabel/openbabel/issues/456#issuecomment-281775378:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. As per Chris Morley's comments, this is fixed in the 2.0 snapshots. http://sourceforge.net/mailarchive/forum.php?; thread_id=7706552&forum_id=3042. I'm marking this closed.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/456#issuecomment-281775378
https://github.com/openbabel/openbabel/issues/456#issuecomment-281775380:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/456#issuecomment-281775380
https://github.com/openbabel/openbabel/issues/457#issuecomment-281775392:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I haven't seen a specification for the title field in SMILES files -- I'd be ; glad to take a look. In Open Babel, at least, the first space separates the SMILES string ; from a title -- any remaining spaces are ignored by ReadMolecule:; // added the following to allow spaces in compound names (titles).; // Essentially everything after the first space on a SMILES file line; // is treated as the name. It's easy enough to switch the delimiter when writing SMILES files -- and ; indeed I just checked in a change to make it a tab. However, I'd really ; like to see a specification on this. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/457#issuecomment-281775392
https://github.com/openbabel/openbabel/issues/457#issuecomment-281775394:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/457#issuecomment-281775394
https://github.com/openbabel/openbabel/issues/458#issuecomment-281775551:137,Performance,load,loaded,137,"Logged In: YES ; user_id=21420. This *should* work -- the build environment is set correctly. But for some reason, the format code isn't loaded correctly. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/458#issuecomment-281775551
https://github.com/openbabel/openbabel/issues/458#issuecomment-281775551:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. This *should* work -- the build environment is set correctly. But for some reason, the format code isn't loaded correctly. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/458#issuecomment-281775551
https://github.com/openbabel/openbabel/issues/458#issuecomment-281775552:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. This is fixed in the CVS openbabel-2-0-x branch for incorporation into 2.0.1. ; Not sure if it's fixed yet in the CVS ""head"" but it will be soon. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/458#issuecomment-281775552
https://github.com/openbabel/openbabel/issues/458#issuecomment-281775554:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/458#issuecomment-281775554
https://github.com/openbabel/openbabel/issues/459#issuecomment-281775563:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. Thanks. Fixed as soon as I commit to CVS momentarily. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/459#issuecomment-281775563
https://github.com/openbabel/openbabel/issues/460#issuecomment-281775568:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. This works for me in the current CVS version at least on Mac OS X. I've added tests to the ""roundtrip"" suite for invalid molecules like an ; empty file, piles of random data, and eventually invalid formats (e.g., ; XYZ with negative numbers of atoms, etc.). I'd be glad to provide instructions on running the roundtrip suite on other ; platforms. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/460#issuecomment-281775568
https://github.com/openbabel/openbabel/issues/460#issuecomment-281775568:110,Testability,test,tests,110,"Logged In: YES ; user_id=21420. This works for me in the current CVS version at least on Mac OS X. I've added tests to the ""roundtrip"" suite for invalid molecules like an ; empty file, piles of random data, and eventually invalid formats (e.g., ; XYZ with negative numbers of atoms, etc.). I'd be glad to provide instructions on running the roundtrip suite on other ; platforms. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/460#issuecomment-281775568
https://github.com/openbabel/openbabel/issues/460#issuecomment-281775569:438,Safety,safe,safe,438,"Logged In: YES ; user_id=1189615. This may be connected to me recently (29 July) changing ; OBMoleculeFormat to allow zero atom molecules to be ; passed on. This puts the onus on each format individually to ; handle this situation. . The reason for making this change is to handle output from ; CML where molecules are allowed to have zero atoms and ; frequently do in CMLReact. I don't think it unreasonable for a format to do something safe ; when give a molecule with <=0 atoms. But if it is too much ; work, the test could be put back into OBMoleculeFormat and ; SmilesFormat and MolFormat made not to derive from it. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/460#issuecomment-281775569
https://github.com/openbabel/openbabel/issues/460#issuecomment-281775569:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615. This may be connected to me recently (29 July) changing ; OBMoleculeFormat to allow zero atom molecules to be ; passed on. This puts the onus on each format individually to ; handle this situation. . The reason for making this change is to handle output from ; CML where molecules are allowed to have zero atoms and ; frequently do in CMLReact. I don't think it unreasonable for a format to do something safe ; when give a molecule with <=0 atoms. But if it is too much ; work, the test could be put back into OBMoleculeFormat and ; SmilesFormat and MolFormat made not to derive from it. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/460#issuecomment-281775569
https://github.com/openbabel/openbabel/issues/460#issuecomment-281775569:516,Testability,test,test,516,"Logged In: YES ; user_id=1189615. This may be connected to me recently (29 July) changing ; OBMoleculeFormat to allow zero atom molecules to be ; passed on. This puts the onus on each format individually to ; handle this situation. . The reason for making this change is to handle output from ; CML where molecules are allowed to have zero atoms and ; frequently do in CMLReact. I don't think it unreasonable for a format to do something safe ; when give a molecule with <=0 atoms. But if it is too much ; work, the test could be put back into OBMoleculeFormat and ; SmilesFormat and MolFormat made not to derive from it. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/460#issuecomment-281775569
https://github.com/openbabel/openbabel/issues/460#issuecomment-281775571:413,Safety,safe,safely,413,"Logged In: YES ; user_id=21420. Right now, testing indicates it's not a problem. The ""roundtrip"" testing ; suite that I use now has a variety of invalid files (including random data ; and size 0 files, files that end early, etc.). This indicates that this ; particular bug is solved. Furthermore, the test suite should indicate if ; this bug reoccurs in a different format. As you say, a format should be able to safely handle invalid files, ; including those with <= 0 atoms. Some of the invalid test files actually ; do claim to have -1 atoms. :-). Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/460#issuecomment-281775571
https://github.com/openbabel/openbabel/issues/460#issuecomment-281775571:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Right now, testing indicates it's not a problem. The ""roundtrip"" testing ; suite that I use now has a variety of invalid files (including random data ; and size 0 files, files that end early, etc.). This indicates that this ; particular bug is solved. Furthermore, the test suite should indicate if ; this bug reoccurs in a different format. As you say, a format should be able to safely handle invalid files, ; including those with <= 0 atoms. Some of the invalid test files actually ; do claim to have -1 atoms. :-). Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/460#issuecomment-281775571
https://github.com/openbabel/openbabel/issues/460#issuecomment-281775571:43,Testability,test,testing,43,"Logged In: YES ; user_id=21420. Right now, testing indicates it's not a problem. The ""roundtrip"" testing ; suite that I use now has a variety of invalid files (including random data ; and size 0 files, files that end early, etc.). This indicates that this ; particular bug is solved. Furthermore, the test suite should indicate if ; this bug reoccurs in a different format. As you say, a format should be able to safely handle invalid files, ; including those with <= 0 atoms. Some of the invalid test files actually ; do claim to have -1 atoms. :-). Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/460#issuecomment-281775571
https://github.com/openbabel/openbabel/issues/460#issuecomment-281775571:97,Testability,test,testing,97,"Logged In: YES ; user_id=21420. Right now, testing indicates it's not a problem. The ""roundtrip"" testing ; suite that I use now has a variety of invalid files (including random data ; and size 0 files, files that end early, etc.). This indicates that this ; particular bug is solved. Furthermore, the test suite should indicate if ; this bug reoccurs in a different format. As you say, a format should be able to safely handle invalid files, ; including those with <= 0 atoms. Some of the invalid test files actually ; do claim to have -1 atoms. :-). Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/460#issuecomment-281775571
https://github.com/openbabel/openbabel/issues/460#issuecomment-281775571:301,Testability,test,test,301,"Logged In: YES ; user_id=21420. Right now, testing indicates it's not a problem. The ""roundtrip"" testing ; suite that I use now has a variety of invalid files (including random data ; and size 0 files, files that end early, etc.). This indicates that this ; particular bug is solved. Furthermore, the test suite should indicate if ; this bug reoccurs in a different format. As you say, a format should be able to safely handle invalid files, ; including those with <= 0 atoms. Some of the invalid test files actually ; do claim to have -1 atoms. :-). Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/460#issuecomment-281775571
https://github.com/openbabel/openbabel/issues/460#issuecomment-281775571:497,Testability,test,test,497,"Logged In: YES ; user_id=21420. Right now, testing indicates it's not a problem. The ""roundtrip"" testing ; suite that I use now has a variety of invalid files (including random data ; and size 0 files, files that end early, etc.). This indicates that this ; particular bug is solved. Furthermore, the test suite should indicate if ; this bug reoccurs in a different format. As you say, a format should be able to safely handle invalid files, ; including those with <= 0 atoms. Some of the invalid test files actually ; do claim to have -1 atoms. :-). Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/460#issuecomment-281775571
https://github.com/openbabel/openbabel/issues/460#issuecomment-281775573:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/460#issuecomment-281775573
https://github.com/openbabel/openbabel/issues/461#issuecomment-281775577:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. As a temporary fix, the mm3format code is not compiled on UNIX. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/461#issuecomment-281775577
https://github.com/openbabel/openbabel/issues/461#issuecomment-281775578:44,Deployability,release,release,44,"Logged In: YES ; user_id=21420. For the 2.0 release, this isn't relevant to fix, IMHO. I've removed mm3format.cpp from the CVS. It can be added back after the ; 2.0 release, but it won't be fixed easily before then. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/461#issuecomment-281775578
https://github.com/openbabel/openbabel/issues/461#issuecomment-281775578:165,Deployability,release,release,165,"Logged In: YES ; user_id=21420. For the 2.0 release, this isn't relevant to fix, IMHO. I've removed mm3format.cpp from the CVS. It can be added back after the ; 2.0 release, but it won't be fixed easily before then. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/461#issuecomment-281775578
https://github.com/openbabel/openbabel/issues/461#issuecomment-281775578:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. For the 2.0 release, this isn't relevant to fix, IMHO. I've removed mm3format.cpp from the CVS. It can be added back after the ; 2.0 release, but it won't be fixed easily before then. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/461#issuecomment-281775578
https://github.com/openbabel/openbabel/issues/461#issuecomment-281775580:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/461#issuecomment-281775580
https://github.com/openbabel/openbabel/issues/462#issuecomment-281775583:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. This is also true in many of the OBGlobalDataBase classes. These *all* need to be made more bullet-proof. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/462#issuecomment-281775583
https://github.com/openbabel/openbabel/issues/462#issuecomment-281775585:42,Integrability,message,messages,42,"Logged In: YES ; user_id=21420. Debugging messages have been added to provide ""obInfo"" reports if the ; type table is incorrect. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/462#issuecomment-281775585
https://github.com/openbabel/openbabel/issues/462#issuecomment-281775585:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Debugging messages have been added to provide ""obInfo"" reports if the ; type table is incorrect. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/462#issuecomment-281775585
https://github.com/openbabel/openbabel/issues/462#issuecomment-281775586:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/462#issuecomment-281775586
https://github.com/openbabel/openbabel/issues/463#issuecomment-281775589:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. Added to CVS. Thanks!; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/463#issuecomment-281775589
https://github.com/openbabel/openbabel/issues/463#issuecomment-281775591:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/463#issuecomment-281775591
https://github.com/openbabel/openbabel/issues/464#issuecomment-281775597:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I'd love to fix all of these. I'll see if I can minimize the ""multimatch"" ; problem, but more bug reports like this would be helpful. I'll make sure to fix 'em as soon as I see the bug report. :-). Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/464#issuecomment-281775597
https://github.com/openbabel/openbabel/issues/464#issuecomment-281775598:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/464#issuecomment-281775598
https://github.com/openbabel/openbabel/issues/465#issuecomment-281775602:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Not much code is using GetNumberOfElements() because it's a new ; function. However it *should* return element.size() which is the size of ; the OBElementTable. If your compiled version is returning an empty table, then there's a ; different problem. I don't like the idea of using fixed #s for the number of elements in code. ; The element table *will* change in the future, so the mol2format.cpp ; code needs to use GetNumberOfElements. Let's solve the core problem -- what is causing it to be empty? Does this ; occur with 2005-08-01 snapshot on Linux?. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/465#issuecomment-281775602
https://github.com/openbabel/openbabel/issues/465#issuecomment-281775605:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1309655. Geoff,. The 2005-08-01 snapshot doesn't exist, but in the latest CVS; version mol2format (and I assume the GetNumberOfElements); seems to work perfectly. (although I had to comment out SWIG; to get it to compile). This is under linux. - Nick. Original comment by: nickengland",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/465#issuecomment-281775605
https://github.com/openbabel/openbabel/issues/465#issuecomment-281775606:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Of course the 2005-08-01 snapshot exists:; http://sourceforge.net/project/showfiles.php?; group_id=40728&package_id=154019&release_id=346276. But if you're using the latest CVS version, that's even more recent, ; obviously. I'm marking this fixed, since it seems to work for you now.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/465#issuecomment-281775606
https://github.com/openbabel/openbabel/issues/465#issuecomment-281775607:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/465#issuecomment-281775607
https://github.com/openbabel/openbabel/issues/466#issuecomment-281775616:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I believe Chris fixed this with his 2005-08-12 fix. If so, please mark this ""pending"" or ""closed"" with a ""Fixed"" resolution?. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/466#issuecomment-281775616
https://github.com/openbabel/openbabel/issues/466#issuecomment-281775617:54,Deployability,update,updated,54,"Logged In: YES ; user_id=21420. I believe with Nick's updated chiral information, this particular bug (i.e., ; SMILES => MDL) is now fixed?. Marking this closed, pending further comment. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/466#issuecomment-281775617
https://github.com/openbabel/openbabel/issues/466#issuecomment-281775617:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I believe with Nick's updated chiral information, this particular bug (i.e., ; SMILES => MDL) is now fixed?. Marking this closed, pending further comment. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/466#issuecomment-281775617
https://github.com/openbabel/openbabel/issues/466#issuecomment-281775618:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/466#issuecomment-281775618
https://github.com/openbabel/openbabel/issues/467#issuecomment-281775634:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Added, thanks!. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/467#issuecomment-281775634
https://github.com/openbabel/openbabel/issues/467#issuecomment-281775635:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/467#issuecomment-281775635
https://github.com/openbabel/openbabel/issues/468#issuecomment-281775659:49,Deployability,Update,Update,49,"Logged In: YES ; user_id=21420. Fixed, thanks!; (Update added to the website as well.). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/468#issuecomment-281775659
https://github.com/openbabel/openbabel/issues/468#issuecomment-281775659:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Fixed, thanks!; (Update added to the website as well.). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/468#issuecomment-281775659
https://github.com/openbabel/openbabel/issues/468#issuecomment-281775660:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/468#issuecomment-281775660
https://github.com/openbabel/openbabel/issues/469#issuecomment-281775663:339,Energy Efficiency,charge,charge,339,"Logged In: YES ; user_id=1290830. Yep, I finally found the bug. The above guess was wrong. In OBAromaticTyper::AssignAromaticFlags, the first pass; ""//mark atoms as potentially aromatic""; does not mark the protonated nitrogen, because the SMARTS; pattern; [#7D3+]			1	1; in data/aromatic.txt does not match. The reason is that the; formal charge has not been set. I don't know enough about; OpenBabel yet to know where this should be done properly,; but the following hack fixes the problem:. >In src/typer.cpp; >replace ; //unset all aromatic flags; for (atom = mol.BeginAtom(i);atom;atom = mol.NextAtom(i)); atom->UnsetAromatic();; >with; for (atom = mol.BeginAtom(i);atom;atom = mol.NextAtom(i)); { //unset aromatic flags; atom->UnsetAromatic();; //set the formal charges (quick hack for nitrogen only); if (atom->IsNitrogen()); atom->SetFormalCharge(atom->BOSum()-3); } . Cheers,; Elmar. Original comment by: elmarkrieger",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/469#issuecomment-281775663
https://github.com/openbabel/openbabel/issues/469#issuecomment-281775663:767,Energy Efficiency,charge,charges,767,"Logged In: YES ; user_id=1290830. Yep, I finally found the bug. The above guess was wrong. In OBAromaticTyper::AssignAromaticFlags, the first pass; ""//mark atoms as potentially aromatic""; does not mark the protonated nitrogen, because the SMARTS; pattern; [#7D3+]			1	1; in data/aromatic.txt does not match. The reason is that the; formal charge has not been set. I don't know enough about; OpenBabel yet to know where this should be done properly,; but the following hack fixes the problem:. >In src/typer.cpp; >replace ; //unset all aromatic flags; for (atom = mol.BeginAtom(i);atom;atom = mol.NextAtom(i)); atom->UnsetAromatic();; >with; for (atom = mol.BeginAtom(i);atom;atom = mol.NextAtom(i)); { //unset aromatic flags; atom->UnsetAromatic();; //set the formal charges (quick hack for nitrogen only); if (atom->IsNitrogen()); atom->SetFormalCharge(atom->BOSum()-3); } . Cheers,; Elmar. Original comment by: elmarkrieger",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/469#issuecomment-281775663
https://github.com/openbabel/openbabel/issues/469#issuecomment-281775663:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1290830. Yep, I finally found the bug. The above guess was wrong. In OBAromaticTyper::AssignAromaticFlags, the first pass; ""//mark atoms as potentially aromatic""; does not mark the protonated nitrogen, because the SMARTS; pattern; [#7D3+]			1	1; in data/aromatic.txt does not match. The reason is that the; formal charge has not been set. I don't know enough about; OpenBabel yet to know where this should be done properly,; but the following hack fixes the problem:. >In src/typer.cpp; >replace ; //unset all aromatic flags; for (atom = mol.BeginAtom(i);atom;atom = mol.NextAtom(i)); atom->UnsetAromatic();; >with; for (atom = mol.BeginAtom(i);atom;atom = mol.NextAtom(i)); { //unset aromatic flags; atom->UnsetAromatic();; //set the formal charges (quick hack for nitrogen only); if (atom->IsNitrogen()); atom->SetFormalCharge(atom->BOSum()-3); } . Cheers,; Elmar. Original comment by: elmarkrieger",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/469#issuecomment-281775663
https://github.com/openbabel/openbabel/issues/469#issuecomment-281775664:355,Deployability,patch,patch,355,"Logged In: YES ; user_id=21420. For obvious reasons, I don't like that hack. IMHO, the real reason is that there isn't a ""default"" SMARTS pattern to ; fall back on. So I've added a variety of ""default"" patterns for carbon, ; nitrogen, etc. -- molecules matching more specific SMARTS patterns ; would use those since they come later in the file. Here's my patch, which seems to mark the imidazole ring correctly (it'll ; be in CVS in a few minutes):; In aromatic.txt:; #nitrogen patterns; + [#7rD2] 1 2; + [#7rD3] 1 2; [#7r](-@*)-@* 2 2; ... I'm not a nitrogen heterocycle expert, but I think both of those patterns ; are correct -- if you have two or three bonds to a nitrogen ring atom, it ; could contribute 1 or 2 electrons to the ring, depending on the other ; bonds, the charge, etc. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/469#issuecomment-281775664
https://github.com/openbabel/openbabel/issues/469#issuecomment-281775664:776,Energy Efficiency,charge,charge,776,"Logged In: YES ; user_id=21420. For obvious reasons, I don't like that hack. IMHO, the real reason is that there isn't a ""default"" SMARTS pattern to ; fall back on. So I've added a variety of ""default"" patterns for carbon, ; nitrogen, etc. -- molecules matching more specific SMARTS patterns ; would use those since they come later in the file. Here's my patch, which seems to mark the imidazole ring correctly (it'll ; be in CVS in a few minutes):; In aromatic.txt:; #nitrogen patterns; + [#7rD2] 1 2; + [#7rD3] 1 2; [#7r](-@*)-@* 2 2; ... I'm not a nitrogen heterocycle expert, but I think both of those patterns ; are correct -- if you have two or three bonds to a nitrogen ring atom, it ; could contribute 1 or 2 electrons to the ring, depending on the other ; bonds, the charge, etc. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/469#issuecomment-281775664
https://github.com/openbabel/openbabel/issues/469#issuecomment-281775664:740,Integrability,depend,depending,740,"Logged In: YES ; user_id=21420. For obvious reasons, I don't like that hack. IMHO, the real reason is that there isn't a ""default"" SMARTS pattern to ; fall back on. So I've added a variety of ""default"" patterns for carbon, ; nitrogen, etc. -- molecules matching more specific SMARTS patterns ; would use those since they come later in the file. Here's my patch, which seems to mark the imidazole ring correctly (it'll ; be in CVS in a few minutes):; In aromatic.txt:; #nitrogen patterns; + [#7rD2] 1 2; + [#7rD3] 1 2; [#7r](-@*)-@* 2 2; ... I'm not a nitrogen heterocycle expert, but I think both of those patterns ; are correct -- if you have two or three bonds to a nitrogen ring atom, it ; could contribute 1 or 2 electrons to the ring, depending on the other ; bonds, the charge, etc. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/469#issuecomment-281775664
https://github.com/openbabel/openbabel/issues/469#issuecomment-281775664:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. For obvious reasons, I don't like that hack. IMHO, the real reason is that there isn't a ""default"" SMARTS pattern to ; fall back on. So I've added a variety of ""default"" patterns for carbon, ; nitrogen, etc. -- molecules matching more specific SMARTS patterns ; would use those since they come later in the file. Here's my patch, which seems to mark the imidazole ring correctly (it'll ; be in CVS in a few minutes):; In aromatic.txt:; #nitrogen patterns; + [#7rD2] 1 2; + [#7rD3] 1 2; [#7r](-@*)-@* 2 2; ... I'm not a nitrogen heterocycle expert, but I think both of those patterns ; are correct -- if you have two or three bonds to a nitrogen ring atom, it ; could contribute 1 or 2 electrons to the ring, depending on the other ; bonds, the charge, etc. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/469#issuecomment-281775664
https://github.com/openbabel/openbabel/issues/469#issuecomment-281775665:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/469#issuecomment-281775665
https://github.com/openbabel/openbabel/issues/470#issuecomment-281775673:150,Deployability,release,release,150,"Logged In: YES ; user_id=21420. I'd like to make sure porphyrin rings (metallated or not) and ; phthalocyanines are typed correctly for the 2.0 final release. IMHO, these are the most common macrocyclic rings with significant ; conjugation. I see three possible (and independent) approaches:; 1) An explicit HEM ""residue"" in the PDB handling that adds bond orders ; correctly, much like other residues.; 2) Explicit typing rules in bondtyp.txt.; 3) Addition of a ring bond-order assignment step to the bondtyper.cpp ; code, independent of the functional group assignment. This can take ; aromaticity into account and propagate around a macrocycle ring. More examples of ligands would definitely help this effort. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/470#issuecomment-281775673
https://github.com/openbabel/openbabel/issues/470#issuecomment-281775673:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I'd like to make sure porphyrin rings (metallated or not) and ; phthalocyanines are typed correctly for the 2.0 final release. IMHO, these are the most common macrocyclic rings with significant ; conjugation. I see three possible (and independent) approaches:; 1) An explicit HEM ""residue"" in the PDB handling that adds bond orders ; correctly, much like other residues.; 2) Explicit typing rules in bondtyp.txt.; 3) Addition of a ring bond-order assignment step to the bondtyper.cpp ; code, independent of the functional group assignment. This can take ; aromaticity into account and propagate around a macrocycle ring. More examples of ligands would definitely help this effort. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/470#issuecomment-281775673
https://github.com/openbabel/openbabel/issues/470#issuecomment-281775674:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. I'm not sure whether this is a silly idea or not. But I've added an initial ; porphyrin pattern to bondtyp.txt and will be committing it to CVS ; momentarily. This won't solve the hydrogen addition issue -- I think that needs a ; separate bug report. And I'll probably need to tinker with the pattern some -- it's currently ; written to assume normal pH -- but it should check to see if some of the ; nitrogens have expicit pH and assign bond orders accordingly. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/470#issuecomment-281775674
https://github.com/openbabel/openbabel/issues/470#issuecomment-281775676:0,Deployability,update,updated,0,updated bondtype with revised porph pattern. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/470#issuecomment-281775676
https://github.com/openbabel/openbabel/issues/470#issuecomment-281775679:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/470#issuecomment-281775679
https://github.com/openbabel/openbabel/issues/471#issuecomment-281775689:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. Added. Merci beaucoup!; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/471#issuecomment-281775689
https://github.com/openbabel/openbabel/issues/471#issuecomment-281775690:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/471#issuecomment-281775690
https://github.com/openbabel/openbabel/issues/472#issuecomment-281775691:183,Modifiability,extend,extendibility,183,"Logged In: YES ; user_id=1189615. I can see the cause of the problem, introduced in the recent ; upgrading of Options. It arises because an over-ambitious ; attempt at generality and extendibility. Options can take ; associated text (e.g. -s) or not (e.g. -p), but this is not known ; to the main() function because an option may be introduced ; by a format class. If the option was a single letter and the ; text was concatinated, there would be no problem. But with ; the text following after a space (also a unix way? and ; necessary with long options), main() can mistake a following ; file name for option-associated text. This is not easy. If a -S option takes a filterfilename, . babel infilename outfilename -S filterfilename; babel infilename -oxxx -S filterfilename. would be unambiguous. But. babel -S filterfilename infilename outfilename; babel -S filterfilename infilename -oxxx. would be difficult for main() if it didn't know whether -S took ; data or not, since it may think filterfilename is an input file. A solution would be for formats to register at start up whether ; their options had associated text, like they currently register ; their file extensions. While this may be over-elaborate, it ; would be transparent to the user, and not difficult for a format ; class developer. I'll look into it. . Chris; . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/472#issuecomment-281775691
https://github.com/openbabel/openbabel/issues/472#issuecomment-281775691:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615. I can see the cause of the problem, introduced in the recent ; upgrading of Options. It arises because an over-ambitious ; attempt at generality and extendibility. Options can take ; associated text (e.g. -s) or not (e.g. -p), but this is not known ; to the main() function because an option may be introduced ; by a format class. If the option was a single letter and the ; text was concatinated, there would be no problem. But with ; the text following after a space (also a unix way? and ; necessary with long options), main() can mistake a following ; file name for option-associated text. This is not easy. If a -S option takes a filterfilename, . babel infilename outfilename -S filterfilename; babel infilename -oxxx -S filterfilename. would be unambiguous. But. babel -S filterfilename infilename outfilename; babel -S filterfilename infilename -oxxx. would be difficult for main() if it didn't know whether -S took ; data or not, since it may think filterfilename is an input file. A solution would be for formats to register at start up whether ; their options had associated text, like they currently register ; their file extensions. While this may be over-elaborate, it ; would be transparent to the user, and not difficult for a format ; class developer. I'll look into it. . Chris; . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/472#issuecomment-281775691
https://github.com/openbabel/openbabel/issues/472#issuecomment-281775692:185,Availability,reliab,reliably,185,"Logged In: YES ; user_id=1189615. Added a system of registration of number of parameters for ; each option. This allows main() to parse the command line ; more flexibly: options can be reliably anywhere in the line ; (this bug) and the parameter text for any single character ; option can start immediately, e.g. -f3 or after a space -f 3 It ; means that options in the same group (in, out or general) ; must take the same number of parameters, even if they ; mean different things in different formats (like C++ operator ; overloading). Conflicts are flagged at startup, provided all the ; options are registered (functionally essential only for those ; with parameters). Having sets of RegisterOptionParam() statements in format ; constructors is a bit messy. The Windows GUI parses the ; format Description() for this information and maybe it could ; be done in the main program too, although you wouldn't see ; immediately when this tricky process has gone wrong, as ; you do in the GUI. This is quite a lot of code for a small improvement in the user ; interface. However, while in the 20th century if it didn't work, ; you were doing something wrong. In the 21st century it's the ; program's fault. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/472#issuecomment-281775692
https://github.com/openbabel/openbabel/issues/472#issuecomment-281775692:1198,Availability,fault,fault,1198,"Logged In: YES ; user_id=1189615. Added a system of registration of number of parameters for ; each option. This allows main() to parse the command line ; more flexibly: options can be reliably anywhere in the line ; (this bug) and the parameter text for any single character ; option can start immediately, e.g. -f3 or after a space -f 3 It ; means that options in the same group (in, out or general) ; must take the same number of parameters, even if they ; mean different things in different formats (like C++ operator ; overloading). Conflicts are flagged at startup, provided all the ; options are registered (functionally essential only for those ; with parameters). Having sets of RegisterOptionParam() statements in format ; constructors is a bit messy. The Windows GUI parses the ; format Description() for this information and maybe it could ; be done in the main program too, although you wouldn't see ; immediately when this tricky process has gone wrong, as ; you do in the GUI. This is quite a lot of code for a small improvement in the user ; interface. However, while in the 20th century if it didn't work, ; you were doing something wrong. In the 21st century it's the ; program's fault. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/472#issuecomment-281775692
https://github.com/openbabel/openbabel/issues/472#issuecomment-281775692:1058,Integrability,interface,interface,1058,"Logged In: YES ; user_id=1189615. Added a system of registration of number of parameters for ; each option. This allows main() to parse the command line ; more flexibly: options can be reliably anywhere in the line ; (this bug) and the parameter text for any single character ; option can start immediately, e.g. -f3 or after a space -f 3 It ; means that options in the same group (in, out or general) ; must take the same number of parameters, even if they ; mean different things in different formats (like C++ operator ; overloading). Conflicts are flagged at startup, provided all the ; options are registered (functionally essential only for those ; with parameters). Having sets of RegisterOptionParam() statements in format ; constructors is a bit messy. The Windows GUI parses the ; format Description() for this information and maybe it could ; be done in the main program too, although you wouldn't see ; immediately when this tricky process has gone wrong, as ; you do in the GUI. This is quite a lot of code for a small improvement in the user ; interface. However, while in the 20th century if it didn't work, ; you were doing something wrong. In the 21st century it's the ; program's fault. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/472#issuecomment-281775692
https://github.com/openbabel/openbabel/issues/472#issuecomment-281775692:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615. Added a system of registration of number of parameters for ; each option. This allows main() to parse the command line ; more flexibly: options can be reliably anywhere in the line ; (this bug) and the parameter text for any single character ; option can start immediately, e.g. -f3 or after a space -f 3 It ; means that options in the same group (in, out or general) ; must take the same number of parameters, even if they ; mean different things in different formats (like C++ operator ; overloading). Conflicts are flagged at startup, provided all the ; options are registered (functionally essential only for those ; with parameters). Having sets of RegisterOptionParam() statements in format ; constructors is a bit messy. The Windows GUI parses the ; format Description() for this information and maybe it could ; be done in the main program too, although you wouldn't see ; immediately when this tricky process has gone wrong, as ; you do in the GUI. This is quite a lot of code for a small improvement in the user ; interface. However, while in the 20th century if it didn't work, ; you were doing something wrong. In the 21st century it's the ; program's fault. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/472#issuecomment-281775692
https://github.com/openbabel/openbabel/issues/473#issuecomment-281775694:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I assume you're suggesting this needs to be changed to:. lftest = true;. Do you have some sample files supporting this, or at least a justification ; for this change? I'd hate to start making arbitrary changes in the ; SMARTS code. :-). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/473#issuecomment-281775694
https://github.com/openbabel/openbabel/issues/473#issuecomment-281775696:204,Deployability,patch,patch,204,"Logged In: YES ; user_id=1290830. I looked again at the code, and it turns out that the second; piece is just an alternative version of the first, exlcuded; from compilation with #ifdef RECURSIVE. So the patch just; reduces code entropy and makes sure that if one day someone; removes the #define RECURSIVE, he doesn't get the bug back. Original comment by: elmarkrieger",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/473#issuecomment-281775696
https://github.com/openbabel/openbabel/issues/473#issuecomment-281775696:216,Energy Efficiency,reduce,reduces,216,"Logged In: YES ; user_id=1290830. I looked again at the code, and it turns out that the second; piece is just an alternative version of the first, exlcuded; from compilation with #ifdef RECURSIVE. So the patch just; reduces code entropy and makes sure that if one day someone; removes the #define RECURSIVE, he doesn't get the bug back. Original comment by: elmarkrieger",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/473#issuecomment-281775696
https://github.com/openbabel/openbabel/issues/473#issuecomment-281775696:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1290830. I looked again at the code, and it turns out that the second; piece is just an alternative version of the first, exlcuded; from compilation with #ifdef RECURSIVE. So the patch just; reduces code entropy and makes sure that if one day someone; removes the #define RECURSIVE, he doesn't get the bug back. Original comment by: elmarkrieger",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/473#issuecomment-281775696
https://github.com/openbabel/openbabel/issues/473#issuecomment-281775697:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. Got it. Thanks. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/473#issuecomment-281775697
https://github.com/openbabel/openbabel/issues/474#issuecomment-281775701:288,Availability,error,errors,288,"Logged In: YES ; user_id=21420. Here's an alkane chain that shows the same problem:. CCC[C@@H](CCCCCCC)\C. WARNING: Incomplete EZ specification -- ignored (dy_ezanal); WARNING: CCC[C@@H](CCCCCCC)\C (dy_ezanal); WARNING: ^^^^^^ (dy_ezanal). Removing the \ in the SMILES string removes the errors. HOWEVER, the stereochemistry has been inverted (from R to S). The correct SMILES should be:; CCC[C@H](CCCCCCC)C. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/474#issuecomment-281775701
https://github.com/openbabel/openbabel/issues/474#issuecomment-281775701:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Here's an alkane chain that shows the same problem:. CCC[C@@H](CCCCCCC)\C. WARNING: Incomplete EZ specification -- ignored (dy_ezanal); WARNING: CCC[C@@H](CCCCCCC)\C (dy_ezanal); WARNING: ^^^^^^ (dy_ezanal). Removing the \ in the SMILES string removes the errors. HOWEVER, the stereochemistry has been inverted (from R to S). The correct SMILES should be:; CCC[C@H](CCCCCCC)C. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/474#issuecomment-281775701
https://github.com/openbabel/openbabel/issues/474#issuecomment-281775703:876,Availability,down,down,876,"Logged In: YES ; user_id=1309655. Geoff,. I loaded your alkane.mol into MDL draw and saved it and it; added CFG=2 to atom 4 (as well as changing the co-ords but; not significantly.) CFG=2 coresponds to a ""@"" sign in SMILES; if the attached hydrogen is written inside the [C@] bracket. On converting into smiles it outputted the same inverted; string as you. (the 2D co-ordinates with wedge bonds overruled the parity; in the smilesformat.cpp deleating all the 2D co-ords with; the CFG=2 gave the correct SMILES output). I am currently working on fixing the chirality in molV3000; and SMILES by integrating some of the smiles only routines; into chiral.cpp as well as getting CML compatible chirality; working. At the moment all the chirality routines are in; smilesformat.cpp and noformats are using the ones in chiral.cpp. The / and \ bonds are being written from the up and down; ones in the mol file, but are not valid smiles strings; unless used next to double bonds. A parser to check the; smiles string for these before output might be worthfile. Original comment by: nickengland",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/474#issuecomment-281775703
https://github.com/openbabel/openbabel/issues/474#issuecomment-281775703:594,Deployability,integrat,integrating,594,"Logged In: YES ; user_id=1309655. Geoff,. I loaded your alkane.mol into MDL draw and saved it and it; added CFG=2 to atom 4 (as well as changing the co-ords but; not significantly.) CFG=2 coresponds to a ""@"" sign in SMILES; if the attached hydrogen is written inside the [C@] bracket. On converting into smiles it outputted the same inverted; string as you. (the 2D co-ordinates with wedge bonds overruled the parity; in the smilesformat.cpp deleating all the 2D co-ords with; the CFG=2 gave the correct SMILES output). I am currently working on fixing the chirality in molV3000; and SMILES by integrating some of the smiles only routines; into chiral.cpp as well as getting CML compatible chirality; working. At the moment all the chirality routines are in; smilesformat.cpp and noformats are using the ones in chiral.cpp. The / and \ bonds are being written from the up and down; ones in the mol file, but are not valid smiles strings; unless used next to double bonds. A parser to check the; smiles string for these before output might be worthfile. Original comment by: nickengland",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/474#issuecomment-281775703
https://github.com/openbabel/openbabel/issues/474#issuecomment-281775703:594,Integrability,integrat,integrating,594,"Logged In: YES ; user_id=1309655. Geoff,. I loaded your alkane.mol into MDL draw and saved it and it; added CFG=2 to atom 4 (as well as changing the co-ords but; not significantly.) CFG=2 coresponds to a ""@"" sign in SMILES; if the attached hydrogen is written inside the [C@] bracket. On converting into smiles it outputted the same inverted; string as you. (the 2D co-ordinates with wedge bonds overruled the parity; in the smilesformat.cpp deleating all the 2D co-ords with; the CFG=2 gave the correct SMILES output). I am currently working on fixing the chirality in molV3000; and SMILES by integrating some of the smiles only routines; into chiral.cpp as well as getting CML compatible chirality; working. At the moment all the chirality routines are in; smilesformat.cpp and noformats are using the ones in chiral.cpp. The / and \ bonds are being written from the up and down; ones in the mol file, but are not valid smiles strings; unless used next to double bonds. A parser to check the; smiles string for these before output might be worthfile. Original comment by: nickengland",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/474#issuecomment-281775703
https://github.com/openbabel/openbabel/issues/474#issuecomment-281775703:630,Integrability,rout,routines,630,"Logged In: YES ; user_id=1309655. Geoff,. I loaded your alkane.mol into MDL draw and saved it and it; added CFG=2 to atom 4 (as well as changing the co-ords but; not significantly.) CFG=2 coresponds to a ""@"" sign in SMILES; if the attached hydrogen is written inside the [C@] bracket. On converting into smiles it outputted the same inverted; string as you. (the 2D co-ordinates with wedge bonds overruled the parity; in the smilesformat.cpp deleating all the 2D co-ords with; the CFG=2 gave the correct SMILES output). I am currently working on fixing the chirality in molV3000; and SMILES by integrating some of the smiles only routines; into chiral.cpp as well as getting CML compatible chirality; working. At the moment all the chirality routines are in; smilesformat.cpp and noformats are using the ones in chiral.cpp. The / and \ bonds are being written from the up and down; ones in the mol file, but are not valid smiles strings; unless used next to double bonds. A parser to check the; smiles string for these before output might be worthfile. Original comment by: nickengland",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/474#issuecomment-281775703
https://github.com/openbabel/openbabel/issues/474#issuecomment-281775703:742,Integrability,rout,routines,742,"Logged In: YES ; user_id=1309655. Geoff,. I loaded your alkane.mol into MDL draw and saved it and it; added CFG=2 to atom 4 (as well as changing the co-ords but; not significantly.) CFG=2 coresponds to a ""@"" sign in SMILES; if the attached hydrogen is written inside the [C@] bracket. On converting into smiles it outputted the same inverted; string as you. (the 2D co-ordinates with wedge bonds overruled the parity; in the smilesformat.cpp deleating all the 2D co-ords with; the CFG=2 gave the correct SMILES output). I am currently working on fixing the chirality in molV3000; and SMILES by integrating some of the smiles only routines; into chiral.cpp as well as getting CML compatible chirality; working. At the moment all the chirality routines are in; smilesformat.cpp and noformats are using the ones in chiral.cpp. The / and \ bonds are being written from the up and down; ones in the mol file, but are not valid smiles strings; unless used next to double bonds. A parser to check the; smiles string for these before output might be worthfile. Original comment by: nickengland",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/474#issuecomment-281775703
https://github.com/openbabel/openbabel/issues/474#issuecomment-281775703:44,Performance,load,loaded,44,"Logged In: YES ; user_id=1309655. Geoff,. I loaded your alkane.mol into MDL draw and saved it and it; added CFG=2 to atom 4 (as well as changing the co-ords but; not significantly.) CFG=2 coresponds to a ""@"" sign in SMILES; if the attached hydrogen is written inside the [C@] bracket. On converting into smiles it outputted the same inverted; string as you. (the 2D co-ordinates with wedge bonds overruled the parity; in the smilesformat.cpp deleating all the 2D co-ords with; the CFG=2 gave the correct SMILES output). I am currently working on fixing the chirality in molV3000; and SMILES by integrating some of the smiles only routines; into chiral.cpp as well as getting CML compatible chirality; working. At the moment all the chirality routines are in; smilesformat.cpp and noformats are using the ones in chiral.cpp. The / and \ bonds are being written from the up and down; ones in the mol file, but are not valid smiles strings; unless used next to double bonds. A parser to check the; smiles string for these before output might be worthfile. Original comment by: nickengland",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/474#issuecomment-281775703
https://github.com/openbabel/openbabel/issues/474#issuecomment-281775703:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1309655. Geoff,. I loaded your alkane.mol into MDL draw and saved it and it; added CFG=2 to atom 4 (as well as changing the co-ords but; not significantly.) CFG=2 coresponds to a ""@"" sign in SMILES; if the attached hydrogen is written inside the [C@] bracket. On converting into smiles it outputted the same inverted; string as you. (the 2D co-ordinates with wedge bonds overruled the parity; in the smilesformat.cpp deleating all the 2D co-ords with; the CFG=2 gave the correct SMILES output). I am currently working on fixing the chirality in molV3000; and SMILES by integrating some of the smiles only routines; into chiral.cpp as well as getting CML compatible chirality; working. At the moment all the chirality routines are in; smilesformat.cpp and noformats are using the ones in chiral.cpp. The / and \ bonds are being written from the up and down; ones in the mol file, but are not valid smiles strings; unless used next to double bonds. A parser to check the; smiles string for these before output might be worthfile. Original comment by: nickengland",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/474#issuecomment-281775703
https://github.com/openbabel/openbabel/issues/474#issuecomment-281775705:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. The CVS smiles code now checks for neighboring double bonds before ; outputting ""\"" or ""/"" designations on bonds. I'm marking this bug as fixed.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/474#issuecomment-281775705
https://github.com/openbabel/openbabel/issues/474#issuecomment-281775706:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/474#issuecomment-281775706
https://github.com/openbabel/openbabel/issues/1419#issuecomment-281810089:0,Deployability,Patch,Patch,0,Patch 2023510 (http://sourceforge.net/tracker2/?func=detail&aid=2023510&group_id=40728&atid=428742) allows writing CRYST1 records. It has been included into trunk and will be backported to 2.2.1. Patch 2343128 (http://sourceforge.net/tracker2/?func=detail&aid=2343128&group_id=40728&atid=428742) allows reading them. I just submitted that second patch. Original comment by: coudert,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1419#issuecomment-281810089
https://github.com/openbabel/openbabel/issues/1419#issuecomment-281810089:196,Deployability,Patch,Patch,196,Patch 2023510 (http://sourceforge.net/tracker2/?func=detail&aid=2023510&group_id=40728&atid=428742) allows writing CRYST1 records. It has been included into trunk and will be backported to 2.2.1. Patch 2343128 (http://sourceforge.net/tracker2/?func=detail&aid=2343128&group_id=40728&atid=428742) allows reading them. I just submitted that second patch. Original comment by: coudert,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1419#issuecomment-281810089
https://github.com/openbabel/openbabel/issues/1419#issuecomment-281810089:346,Deployability,patch,patch,346,Patch 2023510 (http://sourceforge.net/tracker2/?func=detail&aid=2023510&group_id=40728&atid=428742) allows writing CRYST1 records. It has been included into trunk and will be backported to 2.2.1. Patch 2343128 (http://sourceforge.net/tracker2/?func=detail&aid=2343128&group_id=40728&atid=428742) allows reading them. I just submitted that second patch. Original comment by: coudert,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1419#issuecomment-281810089
https://github.com/openbabel/openbabel/issues/1419#issuecomment-281810090:21,Deployability,patch,patches,21,"Yes, thanks to these patches, this is closed and will be released as part of 2.2.1. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1419#issuecomment-281810090
https://github.com/openbabel/openbabel/issues/1419#issuecomment-281810090:57,Deployability,release,released,57,"Yes, thanks to these patches, this is closed and will be released as part of 2.2.1. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1419#issuecomment-281810090
https://github.com/openbabel/openbabel/issues/1420#issuecomment-281810108:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. A new tool ""obxyz"" has been added to the CVS tree for 2.1, which handles the ; first three points (rotation of an atom to a certain axis, centering on a certain ; atom, and/or rotation around the principal cartesian axes by specified angles). I suspect these are the three most useful features for such a tool -- other ; features can be requested and added in the future. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1420#issuecomment-281810108
https://github.com/openbabel/openbabel/issues/1420#issuecomment-281810111:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1420#issuecomment-281810111
https://github.com/openbabel/openbabel/issues/1421#issuecomment-281810114:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=169818. The easiest way to deal with that is to use the Morgan ; algorithm to create a 'unique' renumbering of molecules. If ; this is done, the SMILES code can be generated with respect ; to this newly renumbered molecule. @ARTICLE{mor65,; author = {H. L. Morgan},; title = {{T}he {G}eneration of a {U}nique {M}achine {D}; escription for {C}hemical; 	{S}tructures -- {A} {T}echnique {D}eveloped at {C}; hemical {A}bstracts; 	{S}ervice.},; journal = {J. Chem. Doc.},; year = {1965},; volume = {5},; pages = {107--113},; }; . Original comment by: wegner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1421#issuecomment-281810114
https://github.com/openbabel/openbabel/issues/1421#issuecomment-281810115:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=169818. First, we need some basic graph algorithms like DFS (depth; first search) and BFS (breadth first search).; I think OpenBabel needs a redesign, but anyway we can work; on the actual atom, bond representation. An underlying graph; based node and edge representation would be just nicer;-). Original comment by: wegner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1421#issuecomment-281810115
https://github.com/openbabel/openbabel/issues/1421#issuecomment-281810116:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=169818. We need basic graph algorithms, e.g. using the Boost Graph; library; http://www.boost.org/; http://www.boost.org/libs/graph/doc/table_of_contents.html. Original comment by: wegner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1421#issuecomment-281810116
https://github.com/openbabel/openbabel/issues/1421#issuecomment-281810118:340,Deployability,integrat,integration,340,"Logged In: YES ; user_id=21420. I now have contributed code (from Craig James, eMolecules.com) to do this. I'm marking this closed pending further comment. The code will probably take a few days to incorporate into the SVN trunk, but will ; definitely be in 2.1.0. I don't want anyone else working on this unless they wish to help with the integration of the contributed code. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1421#issuecomment-281810118
https://github.com/openbabel/openbabel/issues/1421#issuecomment-281810118:340,Integrability,integrat,integration,340,"Logged In: YES ; user_id=21420. I now have contributed code (from Craig James, eMolecules.com) to do this. I'm marking this closed pending further comment. The code will probably take a few days to incorporate into the SVN trunk, but will ; definitely be in 2.1.0. I don't want anyone else working on this unless they wish to help with the integration of the contributed code. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1421#issuecomment-281810118
https://github.com/openbabel/openbabel/issues/1421#issuecomment-281810118:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I now have contributed code (from Craig James, eMolecules.com) to do this. I'm marking this closed pending further comment. The code will probably take a few days to incorporate into the SVN trunk, but will ; definitely be in 2.1.0. I don't want anyone else working on this unless they wish to help with the integration of the contributed code. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1421#issuecomment-281810118
https://github.com/openbabel/openbabel/issues/1421#issuecomment-281810119:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539; Originator: NO. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1421#issuecomment-281810119
https://github.com/openbabel/openbabel/issues/1422#issuecomment-281810129:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. There's not a big need for this to be a method itself. OBMol mol;; FOR_BONDS_OF_MOL(b, mol); {; if (b->IsAromatic()); b->SetBO(5); // aromatic bond order; }. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1422#issuecomment-281810129
https://github.com/openbabel/openbabel/issues/1423#issuecomment-281810131:92,Energy Efficiency,charge,charges,92,"Logged In: YES ; user_id=21420. The ""report"" format prints out more than the atomic partial charges, but it does ; do that:. http://openbabel.sourceforge.net/wiki/Open_Babel_report. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1423#issuecomment-281810131
https://github.com/openbabel/openbabel/issues/1423#issuecomment-281810131:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. The ""report"" format prints out more than the atomic partial charges, but it does ; do that:. http://openbabel.sourceforge.net/wiki/Open_Babel_report. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1423#issuecomment-281810131
https://github.com/openbabel/openbabel/issues/1423#issuecomment-281810132:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1423#issuecomment-281810132
https://github.com/openbabel/openbabel/issues/1424#issuecomment-281810139:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. Changing the summary title. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1424#issuecomment-281810139
https://github.com/openbabel/openbabel/issues/1404#issuecomment-281810026:48,Safety,detect,detection,48,"Logged In: NO . The maximum common substructure detection algorithm; described by Krissinel and Henrick in Software: Practice and; Experience; Volume 34, Issue 6 , Pages 591 - 607, is easy to implement; and reasonably fast for small (drug-size) molecules. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1404#issuecomment-281810026
https://github.com/openbabel/openbabel/issues/1404#issuecomment-281810026:0,Testability,Log,Logged,0,"Logged In: NO . The maximum common substructure detection algorithm; described by Krissinel and Henrick in Software: Practice and; Experience; Volume 34, Issue 6 , Pages 591 - 607, is easy to implement; and reasonably fast for small (drug-size) molecules. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1404#issuecomment-281810026
https://github.com/openbabel/openbabel/issues/1404#issuecomment-281810027:601,Availability,avail,available,601,"Logged In: YES ; user_id=169818. Easy and good might be a difference to general and usefull ; for prototyping. Assign it to me, I have already some code ; for that I must 'only' transform to C++. @ARTICLE{bk73,; author = {C. Bron and J. Kerbosch},; title = {{F}inding all cliques of an undirected graph},; journal = {Communications of the ACM},; year = {1973},; volume = {16},; pages = {575--577},; owner = {wegner@users.sf.net},; groupsearch = {0},; url = {http://www.netlib.org/tomspdf/457.pdf},; }. @MISC{aj88,; author = {D. Applegate and D. S. Johnson},; title = {dfmax.c [{C} program, {O}nline], available at ; ftp://dimacs.rutgers.edu/pub/challenge/graph/solvers},; year = {1988},; owner = {wegner@users.sf.net},; url = ; {ftp://dimacs.rutgers.edu/pub/challenge/graph/solvers/dfmax.; c},; }. Original comment by: wegner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1404#issuecomment-281810027
https://github.com/openbabel/openbabel/issues/1404#issuecomment-281810027:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=169818. Easy and good might be a difference to general and usefull ; for prototyping. Assign it to me, I have already some code ; for that I must 'only' transform to C++. @ARTICLE{bk73,; author = {C. Bron and J. Kerbosch},; title = {{F}inding all cliques of an undirected graph},; journal = {Communications of the ACM},; year = {1973},; volume = {16},; pages = {575--577},; owner = {wegner@users.sf.net},; groupsearch = {0},; url = {http://www.netlib.org/tomspdf/457.pdf},; }. @MISC{aj88,; author = {D. Applegate and D. S. Johnson},; title = {dfmax.c [{C} program, {O}nline], available at ; ftp://dimacs.rutgers.edu/pub/challenge/graph/solvers},; year = {1988},; owner = {wegner@users.sf.net},; url = ; {ftp://dimacs.rutgers.edu/pub/challenge/graph/solvers/dfmax.; c},; }. Original comment by: wegner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1404#issuecomment-281810027
https://github.com/openbabel/openbabel/issues/1404#issuecomment-281810028:0,Testability,Log,Logged,0,Logged In: YES ; user_id=169818. ftp://dimacs.rutgers.edu/pub/challenge/graph/solvers/; http://portal.acm.org/citation.cfm?id=362367&coll=Portal&dl=GUIDE&CFID=69760523&CFTOKEN=72640023. Original comment by: wegner,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1404#issuecomment-281810028
https://github.com/openbabel/openbabel/issues/1404#issuecomment-281810028:148,Usability,GUID,GUIDE,148,Logged In: YES ; user_id=169818. ftp://dimacs.rutgers.edu/pub/challenge/graph/solvers/; http://portal.acm.org/citation.cfm?id=362367&coll=Portal&dl=GUIDE&CFID=69760523&CFTOKEN=72640023. Original comment by: wegner,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1404#issuecomment-281810028
https://github.com/openbabel/openbabel/issues/1425#issuecomment-281810143:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I've now added this to the 2.1 SVN trunk, revision 1491. The atom iterators can be specified with:; FOR_DFS_OF_MOL(atom, mol); FOR_BFS_OF_MOL(atom, mol). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1425#issuecomment-281810143
https://github.com/openbabel/openbabel/issues/1425#issuecomment-281810144:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1425#issuecomment-281810144
https://github.com/openbabel/openbabel/issues/475#issuecomment-281775725:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I think the porph patterns still need some work (since they still match ; multiple times), but it's getting there. Thanks for the fixes!. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/475#issuecomment-281775725
https://github.com/openbabel/openbabel/issues/475#issuecomment-281775729:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/475#issuecomment-281775729
https://github.com/openbabel/openbabel/issues/476#issuecomment-281775742:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. Good fix. Thanks!. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/476#issuecomment-281775742
https://github.com/openbabel/openbabel/issues/476#issuecomment-281775745:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/476#issuecomment-281775745
https://github.com/openbabel/openbabel/issues/477#issuecomment-281775759:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. Good fix. Thanks!. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/477#issuecomment-281775759
https://github.com/openbabel/openbabel/issues/477#issuecomment-281775761:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/477#issuecomment-281775761
https://github.com/openbabel/openbabel/issues/478#issuecomment-281775803:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. All fixes for this will be in CVS shortly. Marking this closed.; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/478#issuecomment-281775803
https://github.com/openbabel/openbabel/issues/478#issuecomment-281775806:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/478#issuecomment-281775806
https://github.com/openbabel/openbabel/issues/479#issuecomment-281775816:110,Availability,error,error,110,"Logged In: YES ; user_id=21420. I've committed the change to SetNegativeStereo() -- call it a cut-and-paste ; error on my part. I added the positive/negative flags -- if you think these are unnecessary, ; we can change that. Certainly, I'm not sure why nothing is using ; GetChirality() right now. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/479#issuecomment-281775816
https://github.com/openbabel/openbabel/issues/479#issuecomment-281775816:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I've committed the change to SetNegativeStereo() -- call it a cut-and-paste ; error on my part. I added the positive/negative flags -- if you think these are unnecessary, ; we can change that. Certainly, I'm not sure why nothing is using ; GetChirality() right now. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/479#issuecomment-281775816
https://github.com/openbabel/openbabel/issues/479#issuecomment-281775817:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. This particular bug is fixed. It's probably worth revisiting positive/negative ; stereo later. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/479#issuecomment-281775817
https://github.com/openbabel/openbabel/issues/479#issuecomment-281775818:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/479#issuecomment-281775818
https://github.com/openbabel/openbabel/issues/480#issuecomment-281775828:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. This was a bug in how the count of molecules was stored. This has been ; fixed in the CVS version now. Thanks for the report!; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/480#issuecomment-281775828
https://github.com/openbabel/openbabel/issues/481#issuecomment-281775830:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. This is being closed. It is now a duplicate -- Cygwin must run as a static ; library, and currently static builds fail on UNIX. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/481#issuecomment-281775830
https://github.com/openbabel/openbabel/issues/1427#issuecomment-281810153:0,Testability,Log,Logged,0,Logged In: YES ; user_id=1682851; Originator: NO. OBBuilder::Swap() can do this now. Original comment by: @timvdm,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1427#issuecomment-281810153
https://github.com/openbabel/openbabel/issues/1427#issuecomment-281810155:0,Testability,Log,Logged,0,Logged In: YES ; user_id=1682851; Originator: NO. OBBuilder::Swap() can do this now. Original comment by: @timvdm,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1427#issuecomment-281810155
https://github.com/openbabel/openbabel/issues/482#issuecomment-281775857:70,Availability,error,error,70,"Logged In: NO . Hi,. I had the very same problem. As yuo can see, the error arise from the use ; of gcc 4.0.0 (in the lines /usr/lib/gcc/powerpc-apple-darwin8/4.0.0/). So, in order to have a working version of open babel you should:. > sudo gcc_select 3.3; > ./configure; > make; > make install. You see, the trick is to tell the system to use gcc v3.3.; After you succesfully compile openbabel, remember to:. > sudo gcc_select 4.0. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/482#issuecomment-281775857
https://github.com/openbabel/openbabel/issues/482#issuecomment-281775857:287,Deployability,install,install,287,"Logged In: NO . Hi,. I had the very same problem. As yuo can see, the error arise from the use ; of gcc 4.0.0 (in the lines /usr/lib/gcc/powerpc-apple-darwin8/4.0.0/). So, in order to have a working version of open babel you should:. > sudo gcc_select 3.3; > ./configure; > make; > make install. You see, the trick is to tell the system to use gcc v3.3.; After you succesfully compile openbabel, remember to:. > sudo gcc_select 4.0. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/482#issuecomment-281775857
https://github.com/openbabel/openbabel/issues/482#issuecomment-281775857:137,Energy Efficiency,power,powerpc-apple-,137,"Logged In: NO . Hi,. I had the very same problem. As yuo can see, the error arise from the use ; of gcc 4.0.0 (in the lines /usr/lib/gcc/powerpc-apple-darwin8/4.0.0/). So, in order to have a working version of open babel you should:. > sudo gcc_select 3.3; > ./configure; > make; > make install. You see, the trick is to tell the system to use gcc v3.3.; After you succesfully compile openbabel, remember to:. > sudo gcc_select 4.0. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/482#issuecomment-281775857
https://github.com/openbabel/openbabel/issues/482#issuecomment-281775857:261,Modifiability,config,configure,261,"Logged In: NO . Hi,. I had the very same problem. As yuo can see, the error arise from the use ; of gcc 4.0.0 (in the lines /usr/lib/gcc/powerpc-apple-darwin8/4.0.0/). So, in order to have a working version of open babel you should:. > sudo gcc_select 3.3; > ./configure; > make; > make install. You see, the trick is to tell the system to use gcc v3.3.; After you succesfully compile openbabel, remember to:. > sudo gcc_select 4.0. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/482#issuecomment-281775857
https://github.com/openbabel/openbabel/issues/482#issuecomment-281775857:0,Testability,Log,Logged,0,"Logged In: NO . Hi,. I had the very same problem. As yuo can see, the error arise from the use ; of gcc 4.0.0 (in the lines /usr/lib/gcc/powerpc-apple-darwin8/4.0.0/). So, in order to have a working version of open babel you should:. > sudo gcc_select 3.3; > ./configure; > make; > make install. You see, the trick is to tell the system to use gcc v3.3.; After you succesfully compile openbabel, remember to:. > sudo gcc_select 4.0. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/482#issuecomment-281775857
https://github.com/openbabel/openbabel/issues/482#issuecomment-281775858:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Alternatively, you can use one of the 2.0 beta snapshots. I can pretty ; much guarantee they work on Tiger -- that's what I'm using for ; development. Marking this closed.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/482#issuecomment-281775858
https://github.com/openbabel/openbabel/issues/1428#issuecomment-281810157:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Oh, and if possible, links to example files. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1428#issuecomment-281810157
https://github.com/openbabel/openbabel/issues/1428#issuecomment-281810159:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Finished an initial draft. Still need more specification URLs and data type ; support, etc. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1428#issuecomment-281810159
https://github.com/openbabel/openbabel/issues/1429#issuecomment-281810161:212,Availability,down,downloaded,212,"Logged In: YES ; user_id=21420. In addition to SWIG, I found cxxwrap:. http://cxxwrap.sourceforge.net/. The SourceForge page is somewhat unused, but the linked page has source releases as recent as 2006-01. I've downloaded a ; version and will give it a try. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1429#issuecomment-281810161
https://github.com/openbabel/openbabel/issues/1429#issuecomment-281810161:176,Deployability,release,releases,176,"Logged In: YES ; user_id=21420. In addition to SWIG, I found cxxwrap:. http://cxxwrap.sourceforge.net/. The SourceForge page is somewhat unused, but the linked page has source releases as recent as 2006-01. I've downloaded a ; version and will give it a try. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1429#issuecomment-281810161
https://github.com/openbabel/openbabel/issues/1429#issuecomment-281810161:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. In addition to SWIG, I found cxxwrap:. http://cxxwrap.sourceforge.net/. The SourceForge page is somewhat unused, but the linked page has source releases as recent as 2006-01. I've downloaded a ; version and will give it a try. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1429#issuecomment-281810161
https://github.com/openbabel/openbabel/issues/1429#issuecomment-281810162:113,Integrability,wrap,wrapper,113,"Logged In: YES ; user_id=21420; Originator: YES. Actually the current SVN trunk (e.g., r1682) has a working Java wrapper, although it currently cannot successfully load the file format objects on Linux. Some work will be needed to make sure the dlopen() is performed with RTLD_GLOBAL set. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1429#issuecomment-281810162
https://github.com/openbabel/openbabel/issues/1429#issuecomment-281810162:164,Performance,load,load,164,"Logged In: YES ; user_id=21420; Originator: YES. Actually the current SVN trunk (e.g., r1682) has a working Java wrapper, although it currently cannot successfully load the file format objects on Linux. Some work will be needed to make sure the dlopen() is performed with RTLD_GLOBAL set. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1429#issuecomment-281810162
https://github.com/openbabel/openbabel/issues/1429#issuecomment-281810162:257,Performance,perform,performed,257,"Logged In: YES ; user_id=21420; Originator: YES. Actually the current SVN trunk (e.g., r1682) has a working Java wrapper, although it currently cannot successfully load the file format objects on Linux. Some work will be needed to make sure the dlopen() is performed with RTLD_GLOBAL set. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1429#issuecomment-281810162
https://github.com/openbabel/openbabel/issues/1429#issuecomment-281810162:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: YES. Actually the current SVN trunk (e.g., r1682) has a working Java wrapper, although it currently cannot successfully load the file format objects on Linux. Some work will be needed to make sure the dlopen() is performed with RTLD_GLOBAL set. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1429#issuecomment-281810162
https://github.com/openbabel/openbabel/issues/1429#issuecomment-281810163:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539; Originator: NO. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1429#issuecomment-281810163
https://github.com/openbabel/openbabel/issues/1430#issuecomment-281810165:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: YES. I'm closing this -- it's possible to do, but not high on anyone's interest list when there are actual builder programs like Avogadro with copy/paste, etc. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1430#issuecomment-281810165
https://github.com/openbabel/openbabel/issues/484#issuecomment-281775874:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615. If all the atoms (or even all the non-H atoms) have 3D ; coordinates surely the stereochemistry *is* defined, so that ; this isn't a bug. If it were a 2D molecule, stereo centres could ; or could not be be defined which would be relected in ; theSMILES output. So what seems to be required is to be ; able to input a molecule with 3D coordinates *and* 2D stereo ; specifications, and to ignore the z coordinates. This is a ; feature request. . Many parts of the sdf/mol format (including I think undefined ; stereo) are concerned with molecular querying, and at ; present OpenBabel doesn't convert molecules of this kind ; (with defined uncertainties). For example it converts mol to ; SMILES not SMARTS. To do this would be another ; reasonable feature request.; ; Having said all this, there does seem to be a bug with ; SMILES sometimes generating spurious stereo centres from ; 2D molecules. This occurs with the attached file (posted by ; Reinhard Dunkel on the InChI form for another purpose). Is the original problem file similar to this? It would be helpful if ; it was posted. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/484#issuecomment-281775874
https://github.com/openbabel/openbabel/issues/484#issuecomment-281775879:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615. If all the atoms (or even all the non-H atoms) have 3D ; coordinates surely the stereochemistry *is* defined, so that ; this isn't a bug. If it were a 2D molecule, stereo centres could ; or could not be be defined which would be relected in ; theSMILES output. So what seems to be required is to be ; able to input a molecule with 3D coordinates *and* 2D stereo ; specifications, and to ignore the z coordinates. This is a ; feature request. . Many parts of the sdf/mol format (including I think undefined ; stereo) are concerned with molecular querying, and at ; present OpenBabel doesn't convert molecules of this kind ; (with defined uncertainties). For example it converts mol to ; SMILES not SMARTS. To do this would be another ; reasonable feature request.; ; Having said all this, there does seem to be a bug with ; SMILES sometimes generating spurious stereo centres from ; 2D molecules. This occurs with the attached file (posted by ; Reinhard Dunkel on the InChI form for another purpose). Is the original problem file similar to this? It would be helpful if ; it was posted. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/484#issuecomment-281775879
https://github.com/openbabel/openbabel/issues/484#issuecomment-281775882:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Whether or not the file has 3D coordinates, the undefined ; stereochemistry should be respected (e.g., a racemic mixture, the 3D ; coordinates are unreliable, etc.). I think the best solution is to mark the atom as chiral but not with a ; specified stereochemistry:. if (atom.IsChiral() && !atom.HasChiralitySpecified()); ... assume undefined stereochemistry, don't try to perceive chirality. I'm not sure there's a perfect solution here -- we can't assume that every ; file from MDL has chirality perceived.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/484#issuecomment-281775882
https://github.com/openbabel/openbabel/issues/484#issuecomment-281775883:431,Energy Efficiency,energy,energy,431,"Logged In: NO . >Whether or not the file has 3D coordinates, the undefined; >stereochemistry should be respected (e.g., a racemic mixture, the 3D ; >coordinates are unreliable, etc.). Yes, that's the behaviour I would expect. Sometimes you have an SD file ; with one 3D structure stored per compound, well knowing that this is just ; one of two or more stereoisomers in the (racemic) mixture, and just one ; of many reasonable low energy conformations... Christian. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/484#issuecomment-281775883
https://github.com/openbabel/openbabel/issues/484#issuecomment-281775883:0,Testability,Log,Logged,0,"Logged In: NO . >Whether or not the file has 3D coordinates, the undefined; >stereochemistry should be respected (e.g., a racemic mixture, the 3D ; >coordinates are unreliable, etc.). Yes, that's the behaviour I would expect. Sometimes you have an SD file ; with one 3D structure stored per compound, well knowing that this is just ; one of two or more stereoisomers in the (racemic) mixture, and just one ; of many reasonable low energy conformations... Christian. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/484#issuecomment-281775883
https://github.com/openbabel/openbabel/issues/484#issuecomment-281775885:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. This turned out to be a really minor change in the MDL format v3000 code in ; 2.0. It's not in the 2.0.0rc1, but it *will* be in 2.0 final, and I promise it'll work ; for MDL v3000. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/484#issuecomment-281775885
https://github.com/openbabel/openbabel/issues/484#issuecomment-281775888:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/484#issuecomment-281775888
https://github.com/openbabel/openbabel/issues/1431#issuecomment-281810166:237,Energy Efficiency,charge,charges,237,Logged In: YES ; user_id=54358. Is anyone aware of the publications on which this extension; could be based? Well-informed circles expressed to me their; well-founded opinion that only very little has been; published on the Gasteiger PI charges and that this little; documentation is not sufficient to repeat the work. Original comment by: steinbeck,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1431#issuecomment-281810166
https://github.com/openbabel/openbabel/issues/1431#issuecomment-281810166:0,Testability,Log,Logged,0,Logged In: YES ; user_id=54358. Is anyone aware of the publications on which this extension; could be based? Well-informed circles expressed to me their; well-founded opinion that only very little has been; published on the Gasteiger PI charges and that this little; documentation is not sufficient to repeat the work. Original comment by: steinbeck,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1431#issuecomment-281810166
https://github.com/openbabel/openbabel/issues/1431#issuecomment-281810167:36,Energy Efficiency,charge,charges,36,This will never happen -- the newer charges aren't published. It's better anyway to offer other charge models. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1431#issuecomment-281810167
https://github.com/openbabel/openbabel/issues/1431#issuecomment-281810167:96,Energy Efficiency,charge,charge,96,This will never happen -- the newer charges aren't published. It's better anyway to offer other charge models. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1431#issuecomment-281810167
https://github.com/openbabel/openbabel/issues/485#issuecomment-281775911:0,Testability,Log,Logged,0,"Logged In: NO . Whoops. Sorry, I pressed Submit too early. ; Anyway, the xyz file, attached to the bug report, gives the following ; output for direct conversion to bgf: . BIOGRF 200; DESCRP XYZ; REMARK BGF file created by Open Babel 2.0.0b5-20051001; FORCEFIELD DREIDING ; FORMAT ATOM ; (a6,1x,i5,1x,a5,1x,a3,1x,a1,1x,a5,3f10.5,1x,a5,i3,i2,1x,f8.5); HETATM 1 H1 RES A 444 1.75200 -0.90700 0.00000 HC 1 ; 0 0.21219; HETATM 2 O2 RES A 444 -0.36800 -0.51900 -0.90100 O3 1 ; 0 -0.36980; HETATM 3 H3 RES A 444 -0.37300 -0.52500 0.91000 HC 1 ; 0 0.08667; HETATM 4 H4 RES A 444 -0.36600 1.03900 0.00000 HC 1 ; 0 0.08667; HETATM 5 O5 RES A 444 1.43100 0.00000 0.00000 O3 1 ; 0 -0.36980; HETATM 6 C6 RES A 444 0.00000 0.00000 0.00000 C3 1 ; 0 0.14190; HETATM 7 H7 RES A 444 -1.33000 -0.51900 -0.86071 HC 1 ; 0 0.21219; FORMAT CONECT (a6,12i6). CONECT 1 5; ORDER 1 1; CONECT 2 7 6; ORDER 2 1 1; CONECT 3 6; ORDER 3 1; CONECT 4 6; ORDER 4 1; CONECT 5 1 6; ORDER 5 1 1; CONECT 6 2 4 5 3; ORDER 6 1 1 1 1; CONECT 7 2; ORDER 7 1; END. Note that the types (i.e. C3 HC O3) are NOT correct. ; When I first convert the xyz to sdf and then from sdf to bgf I get the ; correct output:. BIOGRF 200; DESCRP XYZ; REMARK BGF file created by Open Babel 2.0.0b5-20051001; FORCEFIELD DREIDING ; FORMAT ATOM ; (a6,1x,i5,1x,a5,1x,a3,1x,a1,1x,a5,3f10.5,1x,a5,i3,i2,1x,f8.5); HETATM 1 H1 RES A 444 1.75200 -0.90700 0.00000 H_ 1 ; 0 0.21219; HETATM 2 O2 RES A 444 -0.36800 -0.51900 -0.90100 O_3 2 ; 0 -0.36980; HETATM 3 H3 RES A 444 -0.37300 -0.52500 0.91000 H_ 1 ; 0 0.08667; HETATM 4 H4 RES A 444 -0.36600 1.03900 0.00000 H_ 1 ; 0 0.08667; HETATM 5 O5 RES A 444 1.43100 0.00000 0.00000 O_3 2 ; 0 -0.36980; HETATM 6 C6 RES A 444 0.00000 0.00000 0.00000 C_3 4 ; 0 0.14190; HETATM 7 H7 RES A 444 -1.33000 -0.51900 -0.86070 H_ 1 ; 0 0.21219; FORMAT CONECT (a6,12i6). CONECT 1 5; ORDER 1 1; CONECT 2 7 6; ORDER 2 1 1; CONECT 3 6; ORDER 3 1; CONECT 4 6; ORDER 4 1; CONECT 5 1 6; ORDER 5 1 1; CONECT 6 2 3 4 5; ORDER 6 1 1 1 1; CONECT 7 ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/485#issuecomment-281775911
https://github.com/openbabel/openbabel/issues/485#issuecomment-281775912:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I don't see this bug at all. (There isn't an XYZ file attached, but I created ; one I'm attaching myself.). I suspect this was fixed in the latest development code. I'd be glad to e-; mail a snapshot if you like, or you can grab the CVS openbabel-new-; framework branch. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/485#issuecomment-281775912
https://github.com/openbabel/openbabel/issues/485#issuecomment-281775916:18,Availability,down,downloaded,18,Logged In: NO . I downloaded the 2.0.0b5-20051015 version today and that worked fine. ; Must be down to differences between this version and the one I used ; earlier (2.0.0b5-20051001). Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/485#issuecomment-281775916
https://github.com/openbabel/openbabel/issues/485#issuecomment-281775916:96,Availability,down,down,96,Logged In: NO . I downloaded the 2.0.0b5-20051015 version today and that worked fine. ; Must be down to differences between this version and the one I used ; earlier (2.0.0b5-20051001). Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/485#issuecomment-281775916
https://github.com/openbabel/openbabel/issues/485#issuecomment-281775916:0,Testability,Log,Logged,0,Logged In: NO . I downloaded the 2.0.0b5-20051015 version today and that worked fine. ; Must be down to differences between this version and the one I used ; earlier (2.0.0b5-20051001). Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/485#issuecomment-281775916
https://github.com/openbabel/openbabel/issues/485#issuecomment-281775918:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Yes, there was a bug where OBAtom::GetType() would realize an atom ; didn't have a set type and use OBTypeTable::Translate() but not reset it. So higher-level code (e.g., the format conversion code) would call ; OBAtom::GetType and it would screw up the type translation set for the ; format code. As I said, it's fixed in the current CVS code. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/485#issuecomment-281775918
https://github.com/openbabel/openbabel/issues/486#issuecomment-281775925:0,Testability,Log,Logged,0,Logged In: YES ; user_id=1189615. Now corrected in CVS. I found it necessary to include a ; third place (in FullConvert()) where the zip/unzip streams ; are made. It's a pity that all these elegant features ; interact! . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/486#issuecomment-281775925
https://github.com/openbabel/openbabel/issues/486#issuecomment-281775927:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/486#issuecomment-281775927
https://github.com/openbabel/openbabel/issues/487#issuecomment-281775946:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615. Thanks for finding this. The bug is now corrected in CVS. ; Fastsearch output is now like the normal output with ; separators between items in some formats (e.g. mol), and ; with a header and footer where appropriate(e.g. CML). Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/487#issuecomment-281775946
https://github.com/openbabel/openbabel/issues/1432#issuecomment-281810172:133,Availability,error,error,133,"Logged In: YES ; user_id=21420. I'm marking this request closed. This may have been true of 1.x version of ; Open Babel, but the new error handler is much better. In particular, it's ; possible to redirect and log error messages, and particularly priority levels to ; errors. If there are *particular* complaints (e.g., some of the translators do not offer ; thorough error output), that's a useful feature request. But the feature requested here is certainly in 2.0. IMHO. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1432#issuecomment-281810172
https://github.com/openbabel/openbabel/issues/1432#issuecomment-281810172:214,Availability,error,error,214,"Logged In: YES ; user_id=21420. I'm marking this request closed. This may have been true of 1.x version of ; Open Babel, but the new error handler is much better. In particular, it's ; possible to redirect and log error messages, and particularly priority levels to ; errors. If there are *particular* complaints (e.g., some of the translators do not offer ; thorough error output), that's a useful feature request. But the feature requested here is certainly in 2.0. IMHO. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1432#issuecomment-281810172
https://github.com/openbabel/openbabel/issues/1432#issuecomment-281810172:268,Availability,error,errors,268,"Logged In: YES ; user_id=21420. I'm marking this request closed. This may have been true of 1.x version of ; Open Babel, but the new error handler is much better. In particular, it's ; possible to redirect and log error messages, and particularly priority levels to ; errors. If there are *particular* complaints (e.g., some of the translators do not offer ; thorough error output), that's a useful feature request. But the feature requested here is certainly in 2.0. IMHO. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1432#issuecomment-281810172
https://github.com/openbabel/openbabel/issues/1432#issuecomment-281810172:368,Availability,error,error,368,"Logged In: YES ; user_id=21420. I'm marking this request closed. This may have been true of 1.x version of ; Open Babel, but the new error handler is much better. In particular, it's ; possible to redirect and log error messages, and particularly priority levels to ; errors. If there are *particular* complaints (e.g., some of the translators do not offer ; thorough error output), that's a useful feature request. But the feature requested here is certainly in 2.0. IMHO. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1432#issuecomment-281810172
https://github.com/openbabel/openbabel/issues/1432#issuecomment-281810172:220,Integrability,message,messages,220,"Logged In: YES ; user_id=21420. I'm marking this request closed. This may have been true of 1.x version of ; Open Babel, but the new error handler is much better. In particular, it's ; possible to redirect and log error messages, and particularly priority levels to ; errors. If there are *particular* complaints (e.g., some of the translators do not offer ; thorough error output), that's a useful feature request. But the feature requested here is certainly in 2.0. IMHO. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1432#issuecomment-281810172
https://github.com/openbabel/openbabel/issues/1432#issuecomment-281810172:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I'm marking this request closed. This may have been true of 1.x version of ; Open Babel, but the new error handler is much better. In particular, it's ; possible to redirect and log error messages, and particularly priority levels to ; errors. If there are *particular* complaints (e.g., some of the translators do not offer ; thorough error output), that's a useful feature request. But the feature requested here is certainly in 2.0. IMHO. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1432#issuecomment-281810172
https://github.com/openbabel/openbabel/issues/1432#issuecomment-281810172:210,Testability,log,log,210,"Logged In: YES ; user_id=21420. I'm marking this request closed. This may have been true of 1.x version of ; Open Babel, but the new error handler is much better. In particular, it's ; possible to redirect and log error messages, and particularly priority levels to ; errors. If there are *particular* complaints (e.g., some of the translators do not offer ; thorough error output), that's a useful feature request. But the feature requested here is certainly in 2.0. IMHO. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1432#issuecomment-281810172
https://github.com/openbabel/openbabel/issues/1432#issuecomment-281810173:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1432#issuecomment-281810173
https://github.com/openbabel/openbabel/issues/488#issuecomment-281775968:43,Availability,error,error,43,"Logged In: YES ; user_id=21420. There's no error message here, so I have no idea what's going on. But I can attest that OB 2.0 2005-10-01 and 2005-11-16 (2.0.0rc1) *do* ; build cleanly with GCC-4.x on Mac OS X and Linux. If you'd like further help, please e-mail the openbabel-discuss mailing list. Right now, I'm marking this ""pending"" further comment in the next 14 days.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/488#issuecomment-281775968
https://github.com/openbabel/openbabel/issues/488#issuecomment-281775968:49,Integrability,message,message,49,"Logged In: YES ; user_id=21420. There's no error message here, so I have no idea what's going on. But I can attest that OB 2.0 2005-10-01 and 2005-11-16 (2.0.0rc1) *do* ; build cleanly with GCC-4.x on Mac OS X and Linux. If you'd like further help, please e-mail the openbabel-discuss mailing list. Right now, I'm marking this ""pending"" further comment in the next 14 days.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/488#issuecomment-281775968
https://github.com/openbabel/openbabel/issues/488#issuecomment-281775968:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. There's no error message here, so I have no idea what's going on. But I can attest that OB 2.0 2005-10-01 and 2005-11-16 (2.0.0rc1) *do* ; build cleanly with GCC-4.x on Mac OS X and Linux. If you'd like further help, please e-mail the openbabel-discuss mailing list. Right now, I'm marking this ""pending"" further comment in the next 14 days.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/488#issuecomment-281775968
https://github.com/openbabel/openbabel/issues/488#issuecomment-281775970:0,Testability,Log,Logged,0,"Logged In: NO . build it today without problems, must have been some kind of ; stability issues on friday, since i also had some problems ; with open office crashing later that evening. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/488#issuecomment-281775970
https://github.com/openbabel/openbabel/issues/488#issuecomment-281775972:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/488#issuecomment-281775972
https://github.com/openbabel/openbabel/issues/490#issuecomment-281775991:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615. This is by design. The $$$$ is added only between ; molecules. But if you think it a good idea to always have ; it at the end, it would be easy to change. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/490#issuecomment-281775991
https://github.com/openbabel/openbabel/issues/490#issuecomment-281775992:105,Availability,down,downloads,105,"Logged In: YES ; user_id=1385787. If my interpretation of MDLI's ""CTFile Formats"" (http://www.; mdli.com/downloads/public/ctfile/ctfile.jsp) is right, then ; there should be $$$$ also after the last compound of an SD ; file. This is also more practicable for splitting/merging ; and therefore widely used. . Original comment by: claggner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/490#issuecomment-281775992
https://github.com/openbabel/openbabel/issues/490#issuecomment-281775992:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1385787. If my interpretation of MDLI's ""CTFile Formats"" (http://www.; mdli.com/downloads/public/ctfile/ctfile.jsp) is right, then ; there should be $$$$ also after the last compound of an SD ; file. This is also more practicable for splitting/merging ; and therefore widely used. . Original comment by: claggner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/490#issuecomment-281775992
https://github.com/openbabel/openbabel/issues/490#issuecomment-281775993:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615. OK, $$$$ will be output after every molecule. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/490#issuecomment-281775993
https://github.com/openbabel/openbabel/issues/490#issuecomment-281775995:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/490#issuecomment-281775995
https://github.com/openbabel/openbabel/issues/491#issuecomment-281776005:121,Availability,error,errors,121,"Logged In: YES ; user_id=1189615. Christian Laggner has corrected the file and I hope it ; will be in v2.0.0 Some of the errors were typos but some ; were (fairly minor) deficiencies in the SMARTS parser, ; which he will report as bugs. The corrected file is attached. I did not pick up these errors earlier because they were ; reported via C (rather than C++) output routines. This ; doesn't make a difference with console output, but did ; with the Windows GUI. This will also be corrected shortly. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/491#issuecomment-281776005
https://github.com/openbabel/openbabel/issues/491#issuecomment-281776005:293,Availability,error,errors,293,"Logged In: YES ; user_id=1189615. Christian Laggner has corrected the file and I hope it ; will be in v2.0.0 Some of the errors were typos but some ; were (fairly minor) deficiencies in the SMARTS parser, ; which he will report as bugs. The corrected file is attached. I did not pick up these errors earlier because they were ; reported via C (rather than C++) output routines. This ; doesn't make a difference with console output, but did ; with the Windows GUI. This will also be corrected shortly. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/491#issuecomment-281776005
https://github.com/openbabel/openbabel/issues/491#issuecomment-281776005:368,Integrability,rout,routines,368,"Logged In: YES ; user_id=1189615. Christian Laggner has corrected the file and I hope it ; will be in v2.0.0 Some of the errors were typos but some ; were (fairly minor) deficiencies in the SMARTS parser, ; which he will report as bugs. The corrected file is attached. I did not pick up these errors earlier because they were ; reported via C (rather than C++) output routines. This ; doesn't make a difference with console output, but did ; with the Windows GUI. This will also be corrected shortly. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/491#issuecomment-281776005
https://github.com/openbabel/openbabel/issues/491#issuecomment-281776005:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615. Christian Laggner has corrected the file and I hope it ; will be in v2.0.0 Some of the errors were typos but some ; were (fairly minor) deficiencies in the SMARTS parser, ; which he will report as bugs. The corrected file is attached. I did not pick up these errors earlier because they were ; reported via C (rather than C++) output routines. This ; doesn't make a difference with console output, but did ; with the Windows GUI. This will also be corrected shortly. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/491#issuecomment-281776005
https://github.com/openbabel/openbabel/issues/491#issuecomment-281776006:0,Testability,Log,Logged,0,Logged In: YES ; user_id=1189615. Attached file!. Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/491#issuecomment-281776006
https://github.com/openbabel/openbabel/issues/492#issuecomment-281776016:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1385787. Actually, your pattern does not search for explicit ; hydrogens - that would be 'CN([H])[H]'. [NH2] should mean ; nitrogen with two hydrogens attached (implicit or explicit). Original comment by: claggner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/492#issuecomment-281776016
https://github.com/openbabel/openbabel/issues/492#issuecomment-281776017:94,Availability,error,errors,94,"Logged In: YES ; user_id=21420. I'm really going to need the original file to debug this. Bus errors are a real ; problem, and I'd like to address this ASAP. But I could not reproduce this using ; various test files I had around. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/492#issuecomment-281776017
https://github.com/openbabel/openbabel/issues/492#issuecomment-281776017:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I'm really going to need the original file to debug this. Bus errors are a real ; problem, and I'd like to address this ASAP. But I could not reproduce this using ; various test files I had around. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/492#issuecomment-281776017
https://github.com/openbabel/openbabel/issues/492#issuecomment-281776017:205,Testability,test,test,205,"Logged In: YES ; user_id=21420. I'm really going to need the original file to debug this. Bus errors are a real ; problem, and I'd like to address this ASAP. But I could not reproduce this using ; various test files I had around. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/492#issuecomment-281776017
https://github.com/openbabel/openbabel/issues/492#issuecomment-281776018:689,Availability,error,error,689,"Logged In: YES ; user_id=21420. Unfortunately, I can't reproduce this and am not allowed to see the original ; data file. The original bug reporter has not been able to give me debugging ; information, making this impossible to solve. For now, I'm marking this as ""Won't Fix"" and closing pending further ; comment. What would be really helpful is the result of:. gdb /usr/local/bin/babel; run /Users/user/Desktop/outputfile.fs -osmi /Users/user/Desktop/; outputfile.smi -s'C[NH2]'; bt. The ""gdb"" program is a debugging tool, the ""run"" command simply runs babel ; with the options listed (as if calling babel on the command-line) and the ""bt"" ; command will give a ""backtrace"" when the bus error occurs. The last bit is a ; sequence of function calls and sometimes line numbers in the code and is ; critical to debugging a problem like this. No confidential information should be passed. But unless we can get some sort of debugging information, I can't solve this ; bug. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/492#issuecomment-281776018
https://github.com/openbabel/openbabel/issues/492#issuecomment-281776018:844,Security,confidential,confidential,844,"Logged In: YES ; user_id=21420. Unfortunately, I can't reproduce this and am not allowed to see the original ; data file. The original bug reporter has not been able to give me debugging ; information, making this impossible to solve. For now, I'm marking this as ""Won't Fix"" and closing pending further ; comment. What would be really helpful is the result of:. gdb /usr/local/bin/babel; run /Users/user/Desktop/outputfile.fs -osmi /Users/user/Desktop/; outputfile.smi -s'C[NH2]'; bt. The ""gdb"" program is a debugging tool, the ""run"" command simply runs babel ; with the options listed (as if calling babel on the command-line) and the ""bt"" ; command will give a ""backtrace"" when the bus error occurs. The last bit is a ; sequence of function calls and sometimes line numbers in the code and is ; critical to debugging a problem like this. No confidential information should be passed. But unless we can get some sort of debugging information, I can't solve this ; bug. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/492#issuecomment-281776018
https://github.com/openbabel/openbabel/issues/492#issuecomment-281776018:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Unfortunately, I can't reproduce this and am not allowed to see the original ; data file. The original bug reporter has not been able to give me debugging ; information, making this impossible to solve. For now, I'm marking this as ""Won't Fix"" and closing pending further ; comment. What would be really helpful is the result of:. gdb /usr/local/bin/babel; run /Users/user/Desktop/outputfile.fs -osmi /Users/user/Desktop/; outputfile.smi -s'C[NH2]'; bt. The ""gdb"" program is a debugging tool, the ""run"" command simply runs babel ; with the options listed (as if calling babel on the command-line) and the ""bt"" ; command will give a ""backtrace"" when the bus error occurs. The last bit is a ; sequence of function calls and sometimes line numbers in the code and is ; critical to debugging a problem like this. No confidential information should be passed. But unless we can get some sort of debugging information, I can't solve this ; bug. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/492#issuecomment-281776018
https://github.com/openbabel/openbabel/issues/492#issuecomment-281776018:543,Usability,simpl,simply,543,"Logged In: YES ; user_id=21420. Unfortunately, I can't reproduce this and am not allowed to see the original ; data file. The original bug reporter has not been able to give me debugging ; information, making this impossible to solve. For now, I'm marking this as ""Won't Fix"" and closing pending further ; comment. What would be really helpful is the result of:. gdb /usr/local/bin/babel; run /Users/user/Desktop/outputfile.fs -osmi /Users/user/Desktop/; outputfile.smi -s'C[NH2]'; bt. The ""gdb"" program is a debugging tool, the ""run"" command simply runs babel ; with the options listed (as if calling babel on the command-line) and the ""bt"" ; command will give a ""backtrace"" when the bus error occurs. The last bit is a ; sequence of function calls and sometimes line numbers in the code and is ; critical to debugging a problem like this. No confidential information should be passed. But unless we can get some sort of debugging information, I can't solve this ; bug. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/492#issuecomment-281776018
https://github.com/openbabel/openbabel/issues/492#issuecomment-281776019:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/492#issuecomment-281776019
https://github.com/openbabel/openbabel/issues/493#issuecomment-281776024:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I've fixed this for 2.1 in the CVS development tree. I'd make the change in the ; 2.0.x tree as well, but I'm worried it might break something else. Thanks for the bug report!; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/493#issuecomment-281776024
https://github.com/openbabel/openbabel/issues/493#issuecomment-281776025:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/493#issuecomment-281776025
https://github.com/openbabel/openbabel/issues/494#issuecomment-281776040:317,Deployability,release,release,317,"Logged In: YES ; user_id=21420. I'm considering this more of a feature request than a bug report. I'd like to see ; this fixed, but it won't go into 2.0.x, because I'm afraid that the fix might break ; other parts of SMARTS matching. (It shouldn't, but I'm intentionally pessimistic ; at making changes for a bug-fix release.). I agree with your interpretation of the @? pattern. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/494#issuecomment-281776040
https://github.com/openbabel/openbabel/issues/494#issuecomment-281776040:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I'm considering this more of a feature request than a bug report. I'd like to see ; this fixed, but it won't go into 2.0.x, because I'm afraid that the fix might break ; other parts of SMARTS matching. (It shouldn't, but I'm intentionally pessimistic ; at making changes for a bug-fix release.). I agree with your interpretation of the @? pattern. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/494#issuecomment-281776040
https://github.com/openbabel/openbabel/issues/494#issuecomment-281776041:168,Deployability,patch,patch,168,"Logged In: YES ; user_id=21420. OK, I added this to the 2.1 development SMARTS parser in the SVN repository, ; although I haven't tested it thoroughly. If you'd like a patch, please let me know.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/494#issuecomment-281776041
https://github.com/openbabel/openbabel/issues/494#issuecomment-281776041:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. OK, I added this to the 2.1 development SMARTS parser in the SVN repository, ; although I haven't tested it thoroughly. If you'd like a patch, please let me know.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/494#issuecomment-281776041
https://github.com/openbabel/openbabel/issues/494#issuecomment-281776041:130,Testability,test,tested,130,"Logged In: YES ; user_id=21420. OK, I added this to the 2.1 development SMARTS parser in the SVN repository, ; although I haven't tested it thoroughly. If you'd like a patch, please let me know.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/494#issuecomment-281776041
https://github.com/openbabel/openbabel/issues/494#issuecomment-281776045:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/494#issuecomment-281776045
https://github.com/openbabel/openbabel/issues/495#issuecomment-281776063:216,Deployability,release,release,216,"Logged In: YES ; user_id=1189615. I'm sorry about the missing file; I attach it here. It ; being Windows only it seems to have slipped through the ; cracks; I'm sure Geoff will make sure it is included in ; the next release of source code. Visual C++ 2005 Express (the free version) can update VC6 ; dsp files ok, but I haven't tried the intermediate 2002 ; and 2003 versions. It would be helpful if you could ; provide the build files for these versions when you ; succeed in building them. If you can manage with the command line version, there are ; fewer things to go wrong when building OBabel, the ; standalone exe project. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/495#issuecomment-281776063
https://github.com/openbabel/openbabel/issues/495#issuecomment-281776063:287,Deployability,update,update,287,"Logged In: YES ; user_id=1189615. I'm sorry about the missing file; I attach it here. It ; being Windows only it seems to have slipped through the ; cracks; I'm sure Geoff will make sure it is included in ; the next release of source code. Visual C++ 2005 Express (the free version) can update VC6 ; dsp files ok, but I haven't tried the intermediate 2002 ; and 2003 versions. It would be helpful if you could ; provide the build files for these versions when you ; succeed in building them. If you can manage with the command line version, there are ; fewer things to go wrong when building OBabel, the ; standalone exe project. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/495#issuecomment-281776063
https://github.com/openbabel/openbabel/issues/495#issuecomment-281776063:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615. I'm sorry about the missing file; I attach it here. It ; being Windows only it seems to have slipped through the ; cracks; I'm sure Geoff will make sure it is included in ; the next release of source code. Visual C++ 2005 Express (the free version) can update VC6 ; dsp files ok, but I haven't tried the intermediate 2002 ; and 2003 versions. It would be helpful if you could ; provide the build files for these versions when you ; succeed in building them. If you can manage with the command line version, there are ; fewer things to go wrong when building OBabel, the ; standalone exe project. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/495#issuecomment-281776063
https://github.com/openbabel/openbabel/issues/495#issuecomment-281776065:180,Availability,error,errors,180,"Logged In: YES ; user_id=1311180. Thanks for the quick fix, but unfortunately it doesn't; compile. I don't know that much about Windows programming so; I was unable the 'cast' the errors away. I atached a file; with the output from nmake. It would be very weird that it; would compile with VS6 and .NET 2005 but not with .NET 2003. I will try to provide .vcproj files for .NET 2003 when; everything works. Original comment by: bswerts",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/495#issuecomment-281776065
https://github.com/openbabel/openbabel/issues/495#issuecomment-281776065:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1311180. Thanks for the quick fix, but unfortunately it doesn't; compile. I don't know that much about Windows programming so; I was unable the 'cast' the errors away. I atached a file; with the output from nmake. It would be very weird that it; would compile with VS6 and .NET 2005 but not with .NET 2003. I will try to provide .vcproj files for .NET 2003 when; everything works. Original comment by: bswerts",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/495#issuecomment-281776065
https://github.com/openbabel/openbabel/issues/495#issuecomment-281776068:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1311180. OK, I had UNICODE defined and that messed everything up. Now; it compiles. Sorry for the extra noise caused by me; compiling without the provided project files... Original comment by: bswerts",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/495#issuecomment-281776068
https://github.com/openbabel/openbabel/issues/495#issuecomment-281776069:63,Deployability,update,updated,63,Logged In: YES ; user_id=21420. I will make sure the source is updated ASAP. I'm marking this bug closed.; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/495#issuecomment-281776069
https://github.com/openbabel/openbabel/issues/495#issuecomment-281776069:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. I will make sure the source is updated ASAP. I'm marking this bug closed.; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/495#issuecomment-281776069
https://github.com/openbabel/openbabel/issues/495#issuecomment-281776070:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/495#issuecomment-281776070
https://github.com/openbabel/openbabel/issues/496#issuecomment-281776086:0,Testability,Log,Logged,0,Logged In: NO . ernst-georg.schmid@bayerbbs.com. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/496#issuecomment-281776086
https://github.com/openbabel/openbabel/issues/496#issuecomment-281776087:237,Availability,error,error,237,"Logged In: YES ; user_id=21420. Bug 1368223 now has an attached version of the dlhandler_win32.cpp file. And, of course, if you are having problems compiling and ""lots of unresolved ; symbols,"" it would be very helpful to have the exact error message and ; unresolved symbol listing. None of the active developers use MinGW, but we'd certainly be glad to help ; you solve this issue. The code should be portable to any platform. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/496#issuecomment-281776087
https://github.com/openbabel/openbabel/issues/496#issuecomment-281776087:243,Integrability,message,message,243,"Logged In: YES ; user_id=21420. Bug 1368223 now has an attached version of the dlhandler_win32.cpp file. And, of course, if you are having problems compiling and ""lots of unresolved ; symbols,"" it would be very helpful to have the exact error message and ; unresolved symbol listing. None of the active developers use MinGW, but we'd certainly be glad to help ; you solve this issue. The code should be portable to any platform. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/496#issuecomment-281776087
https://github.com/openbabel/openbabel/issues/496#issuecomment-281776087:403,Modifiability,portab,portable,403,"Logged In: YES ; user_id=21420. Bug 1368223 now has an attached version of the dlhandler_win32.cpp file. And, of course, if you are having problems compiling and ""lots of unresolved ; symbols,"" it would be very helpful to have the exact error message and ; unresolved symbol listing. None of the active developers use MinGW, but we'd certainly be glad to help ; you solve this issue. The code should be portable to any platform. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/496#issuecomment-281776087
https://github.com/openbabel/openbabel/issues/496#issuecomment-281776087:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Bug 1368223 now has an attached version of the dlhandler_win32.cpp file. And, of course, if you are having problems compiling and ""lots of unresolved ; symbols,"" it would be very helpful to have the exact error message and ; unresolved symbol listing. None of the active developers use MinGW, but we'd certainly be glad to help ; you solve this issue. The code should be portable to any platform. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/496#issuecomment-281776087
https://github.com/openbabel/openbabel/issues/496#issuecomment-281776089:157,Integrability,interface,interfaces,157,"Logged In: YES ; user_id=1189615. The missing libs for linking the DLLs are attached (see ; below). But it is important to be aware that the DLLs have ; C++ interfaces and so are only useable when being called ; from C++ programs which have been compiled with the same ; compiler. Even different versions of the MS compiler are ; incompatible: the name decoration is the same (from VC4 ; onwards), but STL function and parameter names seem to be ; different. The precompiled DLLs in openbabel-2.0.0win.zip ; are compiled with VC6 and would not work with a program ; compiled with MinGW. The decision not to use the more normal C interfaces was ; made because it would distort the structure of the program ; excessively and make far more of the source code specific ; to Windows DLL builds rather than being essentially the ; same for all platforms as at present. If you manage to get round the bug in building DLLs (or ; anything else) on MinGW we would be delighted if you could ; share your build files. The OBabel standalone build is ; easier if it meets your needs.; ; The attached zip file has VC6 OBConv.lib and OBDLL.lib ; which are needed to link the DLLs and are only useful if ; you have VC6 to build a program to drive them. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/496#issuecomment-281776089
https://github.com/openbabel/openbabel/issues/496#issuecomment-281776089:629,Integrability,interface,interfaces,629,"Logged In: YES ; user_id=1189615. The missing libs for linking the DLLs are attached (see ; below). But it is important to be aware that the DLLs have ; C++ interfaces and so are only useable when being called ; from C++ programs which have been compiled with the same ; compiler. Even different versions of the MS compiler are ; incompatible: the name decoration is the same (from VC4 ; onwards), but STL function and parameter names seem to be ; different. The precompiled DLLs in openbabel-2.0.0win.zip ; are compiled with VC6 and would not work with a program ; compiled with MinGW. The decision not to use the more normal C interfaces was ; made because it would distort the structure of the program ; excessively and make far more of the source code specific ; to Windows DLL builds rather than being essentially the ; same for all platforms as at present. If you manage to get round the bug in building DLLs (or ; anything else) on MinGW we would be delighted if you could ; share your build files. The OBabel standalone build is ; easier if it meets your needs.; ; The attached zip file has VC6 OBConv.lib and OBDLL.lib ; which are needed to link the DLLs and are only useful if ; you have VC6 to build a program to drive them. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/496#issuecomment-281776089
https://github.com/openbabel/openbabel/issues/496#issuecomment-281776089:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615. The missing libs for linking the DLLs are attached (see ; below). But it is important to be aware that the DLLs have ; C++ interfaces and so are only useable when being called ; from C++ programs which have been compiled with the same ; compiler. Even different versions of the MS compiler are ; incompatible: the name decoration is the same (from VC4 ; onwards), but STL function and parameter names seem to be ; different. The precompiled DLLs in openbabel-2.0.0win.zip ; are compiled with VC6 and would not work with a program ; compiled with MinGW. The decision not to use the more normal C interfaces was ; made because it would distort the structure of the program ; excessively and make far more of the source code specific ; to Windows DLL builds rather than being essentially the ; same for all platforms as at present. If you manage to get round the bug in building DLLs (or ; anything else) on MinGW we would be delighted if you could ; share your build files. The OBabel standalone build is ; easier if it meets your needs.; ; The attached zip file has VC6 OBConv.lib and OBDLL.lib ; which are needed to link the DLLs and are only useful if ; you have VC6 to build a program to drive them. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/496#issuecomment-281776089
https://github.com/openbabel/openbabel/issues/496#issuecomment-281776092:157,Integrability,interface,interfaces,157,"Logged In: YES ; user_id=1189615. The missing libs for linking the DLLs are attached (see ; below). But it is important to be aware that the DLLs have ; C++ interfaces and so are only useable when being called ; from C++ programs which have been compiled with the same ; compiler. Even different versions of the MS compiler are ; incompatible: the name decoration is the same (from VC4 ; onwards), but STL function and parameter names seem to be ; different. The precompiled DLLs in openbabel-2.0.0win.zip ; are compiled with VC6 and would not work with a program ; compiled with MinGW. The decision not to use the more normal C interfaces was ; made because it would distort the structure of the program ; excessively and make far more of the source code specific ; to Windows DLL builds rather than being essentially the ; same for all platforms as at present. If you manage to get round the bug in building DLLs (or ; anything else) on MinGW we would be delighted if you could ; share your build files. The OBabel standalone build is ; easier if it meets your needs.; ; The attached zip file has VC6 OBConv.lib and OBDLL.lib ; which are needed to link the DLLs and are only useful if ; you have VC6 to build a program to drive them. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/496#issuecomment-281776092
https://github.com/openbabel/openbabel/issues/496#issuecomment-281776092:629,Integrability,interface,interfaces,629,"Logged In: YES ; user_id=1189615. The missing libs for linking the DLLs are attached (see ; below). But it is important to be aware that the DLLs have ; C++ interfaces and so are only useable when being called ; from C++ programs which have been compiled with the same ; compiler. Even different versions of the MS compiler are ; incompatible: the name decoration is the same (from VC4 ; onwards), but STL function and parameter names seem to be ; different. The precompiled DLLs in openbabel-2.0.0win.zip ; are compiled with VC6 and would not work with a program ; compiled with MinGW. The decision not to use the more normal C interfaces was ; made because it would distort the structure of the program ; excessively and make far more of the source code specific ; to Windows DLL builds rather than being essentially the ; same for all platforms as at present. If you manage to get round the bug in building DLLs (or ; anything else) on MinGW we would be delighted if you could ; share your build files. The OBabel standalone build is ; easier if it meets your needs.; ; The attached zip file has VC6 OBConv.lib and OBDLL.lib ; which are needed to link the DLLs and are only useful if ; you have VC6 to build a program to drive them. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/496#issuecomment-281776092
https://github.com/openbabel/openbabel/issues/496#issuecomment-281776092:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615. The missing libs for linking the DLLs are attached (see ; below). But it is important to be aware that the DLLs have ; C++ interfaces and so are only useable when being called ; from C++ programs which have been compiled with the same ; compiler. Even different versions of the MS compiler are ; incompatible: the name decoration is the same (from VC4 ; onwards), but STL function and parameter names seem to be ; different. The precompiled DLLs in openbabel-2.0.0win.zip ; are compiled with VC6 and would not work with a program ; compiled with MinGW. The decision not to use the more normal C interfaces was ; made because it would distort the structure of the program ; excessively and make far more of the source code specific ; to Windows DLL builds rather than being essentially the ; same for all platforms as at present. If you manage to get round the bug in building DLLs (or ; anything else) on MinGW we would be delighted if you could ; share your build files. The OBabel standalone build is ; easier if it meets your needs.; ; The attached zip file has VC6 OBConv.lib and OBDLL.lib ; which are needed to link the DLLs and are only useful if ; you have VC6 to build a program to drive them. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/496#issuecomment-281776092
https://github.com/openbabel/openbabel/issues/496#issuecomment-281776095:766,Availability,error,error,766,"Logged In: YES ; user_id=1391954. >below). But it is important to be aware that the DLLs have ; >C++ interfaces and so are only useable when being called ; >from C++ programs which have been compiled with the same . Ouch, yes. I forgot the name mangling issue. >If you manage to get round the bug in building DLLs (or ; >anything else) on MinGW we would be delighted if you could ; >share your build files. The OBabel standalone build is ; >easier if it meets your needs. O.K., I managed to build the static library by running; configure, adding dlhandler_win32.cpp, manually replacing; all references to dlhandler_unix with dlhandler_win32; (including the .loT files and dependencies!), defining; HAVE_CLOCK_T in babelconfig.h and runnig make. It does not emit any error messages but also does not build; a DLL, maybe you can give me a hint where to look why?. Original comment by: @ergo70",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/496#issuecomment-281776095
https://github.com/openbabel/openbabel/issues/496#issuecomment-281776095:101,Integrability,interface,interfaces,101,"Logged In: YES ; user_id=1391954. >below). But it is important to be aware that the DLLs have ; >C++ interfaces and so are only useable when being called ; >from C++ programs which have been compiled with the same . Ouch, yes. I forgot the name mangling issue. >If you manage to get round the bug in building DLLs (or ; >anything else) on MinGW we would be delighted if you could ; >share your build files. The OBabel standalone build is ; >easier if it meets your needs. O.K., I managed to build the static library by running; configure, adding dlhandler_win32.cpp, manually replacing; all references to dlhandler_unix with dlhandler_win32; (including the .loT files and dependencies!), defining; HAVE_CLOCK_T in babelconfig.h and runnig make. It does not emit any error messages but also does not build; a DLL, maybe you can give me a hint where to look why?. Original comment by: @ergo70",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/496#issuecomment-281776095
https://github.com/openbabel/openbabel/issues/496#issuecomment-281776095:672,Integrability,depend,dependencies,672,"Logged In: YES ; user_id=1391954. >below). But it is important to be aware that the DLLs have ; >C++ interfaces and so are only useable when being called ; >from C++ programs which have been compiled with the same . Ouch, yes. I forgot the name mangling issue. >If you manage to get round the bug in building DLLs (or ; >anything else) on MinGW we would be delighted if you could ; >share your build files. The OBabel standalone build is ; >easier if it meets your needs. O.K., I managed to build the static library by running; configure, adding dlhandler_win32.cpp, manually replacing; all references to dlhandler_unix with dlhandler_win32; (including the .loT files and dependencies!), defining; HAVE_CLOCK_T in babelconfig.h and runnig make. It does not emit any error messages but also does not build; a DLL, maybe you can give me a hint where to look why?. Original comment by: @ergo70",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/496#issuecomment-281776095
https://github.com/openbabel/openbabel/issues/496#issuecomment-281776095:772,Integrability,message,messages,772,"Logged In: YES ; user_id=1391954. >below). But it is important to be aware that the DLLs have ; >C++ interfaces and so are only useable when being called ; >from C++ programs which have been compiled with the same . Ouch, yes. I forgot the name mangling issue. >If you manage to get round the bug in building DLLs (or ; >anything else) on MinGW we would be delighted if you could ; >share your build files. The OBabel standalone build is ; >easier if it meets your needs. O.K., I managed to build the static library by running; configure, adding dlhandler_win32.cpp, manually replacing; all references to dlhandler_unix with dlhandler_win32; (including the .loT files and dependencies!), defining; HAVE_CLOCK_T in babelconfig.h and runnig make. It does not emit any error messages but also does not build; a DLL, maybe you can give me a hint where to look why?. Original comment by: @ergo70",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/496#issuecomment-281776095
https://github.com/openbabel/openbabel/issues/496#issuecomment-281776095:528,Modifiability,config,configure,528,"Logged In: YES ; user_id=1391954. >below). But it is important to be aware that the DLLs have ; >C++ interfaces and so are only useable when being called ; >from C++ programs which have been compiled with the same . Ouch, yes. I forgot the name mangling issue. >If you manage to get round the bug in building DLLs (or ; >anything else) on MinGW we would be delighted if you could ; >share your build files. The OBabel standalone build is ; >easier if it meets your needs. O.K., I managed to build the static library by running; configure, adding dlhandler_win32.cpp, manually replacing; all references to dlhandler_unix with dlhandler_win32; (including the .loT files and dependencies!), defining; HAVE_CLOCK_T in babelconfig.h and runnig make. It does not emit any error messages but also does not build; a DLL, maybe you can give me a hint where to look why?. Original comment by: @ergo70",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/496#issuecomment-281776095
https://github.com/openbabel/openbabel/issues/496#issuecomment-281776095:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1391954. >below). But it is important to be aware that the DLLs have ; >C++ interfaces and so are only useable when being called ; >from C++ programs which have been compiled with the same . Ouch, yes. I forgot the name mangling issue. >If you manage to get round the bug in building DLLs (or ; >anything else) on MinGW we would be delighted if you could ; >share your build files. The OBabel standalone build is ; >easier if it meets your needs. O.K., I managed to build the static library by running; configure, adding dlhandler_win32.cpp, manually replacing; all references to dlhandler_unix with dlhandler_win32; (including the .loT files and dependencies!), defining; HAVE_CLOCK_T in babelconfig.h and runnig make. It does not emit any error messages but also does not build; a DLL, maybe you can give me a hint where to look why?. Original comment by: @ergo70",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/496#issuecomment-281776095
https://github.com/openbabel/openbabel/issues/496#issuecomment-281776096:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I'm going to assume this is resolved, since poster mentioned building a static ; library. If this is still an issue, please open a new bug. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/496#issuecomment-281776096
https://github.com/openbabel/openbabel/issues/497#issuecomment-281776115:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. The Windows GUI binary distribution has been removed (temporarily) -- a ; number of issues were found and are being fixed. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/497#issuecomment-281776115
https://github.com/openbabel/openbabel/issues/498#issuecomment-281776130:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. This has been fixed in the CVS code for 2.1. An option (-xm) exists to produce ; the trailing $$$$ as requested, and the default is that $$$$ will be output only if ; properties exist (i.e., it's more an SDF rather than Molfile). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/498#issuecomment-281776130
https://github.com/openbabel/openbabel/issues/499#issuecomment-281776138:410,Safety,avoid,avoided,410,"Logged In: NO . See ATOM record in the PDB Format Description below.; http://www.rcsb.org/pdb/docs/format/pdbguide2.2/guide2.2_fra; me.html. According to the description, coordinates should be ; formatted as F8.3, ; i.e. 4 digits before the decimal point, 3 digits after the ; point.; This can represent -999.000 to 9999.000, i.e. 11000 ; Angstrom.; I think it is enough for most purposes. Your problem can be avoided by adding say 5000 to the z ; coordinate values. Takaaki Fukami. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/499#issuecomment-281776138
https://github.com/openbabel/openbabel/issues/499#issuecomment-281776138:0,Testability,Log,Logged,0,"Logged In: NO . See ATOM record in the PDB Format Description below.; http://www.rcsb.org/pdb/docs/format/pdbguide2.2/guide2.2_fra; me.html. According to the description, coordinates should be ; formatted as F8.3, ; i.e. 4 digits before the decimal point, 3 digits after the ; point.; This can represent -999.000 to 9999.000, i.e. 11000 ; Angstrom.; I think it is enough for most purposes. Your problem can be avoided by adding say 5000 to the z ; coordinate values. Takaaki Fukami. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/499#issuecomment-281776138
https://github.com/openbabel/openbabel/issues/499#issuecomment-281776139:112,Safety,avoid,avoid,112,"Logged In: YES ; user_id=21420. This is now fixed -- the coordinates are checked, and translated if needed to ; avoid this situation. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/499#issuecomment-281776139
https://github.com/openbabel/openbabel/issues/499#issuecomment-281776139:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. This is now fixed -- the coordinates are checked, and translated if needed to ; avoid this situation. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/499#issuecomment-281776139
https://github.com/openbabel/openbabel/issues/500#issuecomment-281776151:179,Modifiability,variab,variable,179,"Logged In: YES ; user_id=1189615. Indeed this was the way it was until last week. But Jean ; Bréfort found difficulties when loading files during the ; initialization of a static variable. See; https://sourceforge.net/mailarchive/forum.php?; thread_id=8969769&forum_id=3042; He (as I understand it) was loading OB using dlopen. He ; said ""This might be a glibc bug, but we must live with ; it."" So we are: currently a (possibly dummy) OBConversion ; object has to be constructed to access the static data. ; Not elegant, but not a big deal either. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/500#issuecomment-281776151
https://github.com/openbabel/openbabel/issues/500#issuecomment-281776151:125,Performance,load,loading,125,"Logged In: YES ; user_id=1189615. Indeed this was the way it was until last week. But Jean ; Bréfort found difficulties when loading files during the ; initialization of a static variable. See; https://sourceforge.net/mailarchive/forum.php?; thread_id=8969769&forum_id=3042; He (as I understand it) was loading OB using dlopen. He ; said ""This might be a glibc bug, but we must live with ; it."" So we are: currently a (possibly dummy) OBConversion ; object has to be constructed to access the static data. ; Not elegant, but not a big deal either. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/500#issuecomment-281776151
https://github.com/openbabel/openbabel/issues/500#issuecomment-281776151:303,Performance,load,loading,303,"Logged In: YES ; user_id=1189615. Indeed this was the way it was until last week. But Jean ; Bréfort found difficulties when loading files during the ; initialization of a static variable. See; https://sourceforge.net/mailarchive/forum.php?; thread_id=8969769&forum_id=3042; He (as I understand it) was loading OB using dlopen. He ; said ""This might be a glibc bug, but we must live with ; it."" So we are: currently a (possibly dummy) OBConversion ; object has to be constructed to access the static data. ; Not elegant, but not a big deal either. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/500#issuecomment-281776151
https://github.com/openbabel/openbabel/issues/500#issuecomment-281776151:482,Security,access,access,482,"Logged In: YES ; user_id=1189615. Indeed this was the way it was until last week. But Jean ; Bréfort found difficulties when loading files during the ; initialization of a static variable. See; https://sourceforge.net/mailarchive/forum.php?; thread_id=8969769&forum_id=3042; He (as I understand it) was loading OB using dlopen. He ; said ""This might be a glibc bug, but we must live with ; it."" So we are: currently a (possibly dummy) OBConversion ; object has to be constructed to access the static data. ; Not elegant, but not a big deal either. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/500#issuecomment-281776151
https://github.com/openbabel/openbabel/issues/500#issuecomment-281776151:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615. Indeed this was the way it was until last week. But Jean ; Bréfort found difficulties when loading files during the ; initialization of a static variable. See; https://sourceforge.net/mailarchive/forum.php?; thread_id=8969769&forum_id=3042; He (as I understand it) was loading OB using dlopen. He ; said ""This might be a glibc bug, but we must live with ; it."" So we are: currently a (possibly dummy) OBConversion ; object has to be constructed to access the static data. ; Not elegant, but not a big deal either. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/500#issuecomment-281776151
https://github.com/openbabel/openbabel/issues/500#issuecomment-281776152:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. Marking this closed as discussed below -- a workaround does exist. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/500#issuecomment-281776152
https://github.com/openbabel/openbabel/issues/500#issuecomment-281776153:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/500#issuecomment-281776153
https://github.com/openbabel/openbabel/issues/501#issuecomment-281776174:94,Deployability,install,installation,94,"Logged In: YES ; user_id=21420. This is not a bug. If you want to change the directory of the installation, you can use the ; configure script. ./configure --help. In particular, you may want to use:. ./configure --prefix=/usr/bin. Or... you might just want to wait a few days for Michael to add a Debian ; package for OB-2.0. I suspect he'll do that as soon as he has a chance. In any case, this is not a bug in OB. If you compile your own software on a ; UNIX platform, it typically goes in /usr/local. The OB build environment tells ; you explicitly that you may need to add /usr/local to your library paths. On ; Debian, only packages are allowed to install into /usr. Not a bug, sorry.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/501#issuecomment-281776174
https://github.com/openbabel/openbabel/issues/501#issuecomment-281776174:654,Deployability,install,install,654,"Logged In: YES ; user_id=21420. This is not a bug. If you want to change the directory of the installation, you can use the ; configure script. ./configure --help. In particular, you may want to use:. ./configure --prefix=/usr/bin. Or... you might just want to wait a few days for Michael to add a Debian ; package for OB-2.0. I suspect he'll do that as soon as he has a chance. In any case, this is not a bug in OB. If you compile your own software on a ; UNIX platform, it typically goes in /usr/local. The OB build environment tells ; you explicitly that you may need to add /usr/local to your library paths. On ; Debian, only packages are allowed to install into /usr. Not a bug, sorry.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/501#issuecomment-281776174
https://github.com/openbabel/openbabel/issues/501#issuecomment-281776174:126,Modifiability,config,configure,126,"Logged In: YES ; user_id=21420. This is not a bug. If you want to change the directory of the installation, you can use the ; configure script. ./configure --help. In particular, you may want to use:. ./configure --prefix=/usr/bin. Or... you might just want to wait a few days for Michael to add a Debian ; package for OB-2.0. I suspect he'll do that as soon as he has a chance. In any case, this is not a bug in OB. If you compile your own software on a ; UNIX platform, it typically goes in /usr/local. The OB build environment tells ; you explicitly that you may need to add /usr/local to your library paths. On ; Debian, only packages are allowed to install into /usr. Not a bug, sorry.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/501#issuecomment-281776174
https://github.com/openbabel/openbabel/issues/501#issuecomment-281776174:146,Modifiability,config,configure,146,"Logged In: YES ; user_id=21420. This is not a bug. If you want to change the directory of the installation, you can use the ; configure script. ./configure --help. In particular, you may want to use:. ./configure --prefix=/usr/bin. Or... you might just want to wait a few days for Michael to add a Debian ; package for OB-2.0. I suspect he'll do that as soon as he has a chance. In any case, this is not a bug in OB. If you compile your own software on a ; UNIX platform, it typically goes in /usr/local. The OB build environment tells ; you explicitly that you may need to add /usr/local to your library paths. On ; Debian, only packages are allowed to install into /usr. Not a bug, sorry.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/501#issuecomment-281776174
https://github.com/openbabel/openbabel/issues/501#issuecomment-281776174:203,Modifiability,config,configure,203,"Logged In: YES ; user_id=21420. This is not a bug. If you want to change the directory of the installation, you can use the ; configure script. ./configure --help. In particular, you may want to use:. ./configure --prefix=/usr/bin. Or... you might just want to wait a few days for Michael to add a Debian ; package for OB-2.0. I suspect he'll do that as soon as he has a chance. In any case, this is not a bug in OB. If you compile your own software on a ; UNIX platform, it typically goes in /usr/local. The OB build environment tells ; you explicitly that you may need to add /usr/local to your library paths. On ; Debian, only packages are allowed to install into /usr. Not a bug, sorry.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/501#issuecomment-281776174
https://github.com/openbabel/openbabel/issues/501#issuecomment-281776174:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. This is not a bug. If you want to change the directory of the installation, you can use the ; configure script. ./configure --help. In particular, you may want to use:. ./configure --prefix=/usr/bin. Or... you might just want to wait a few days for Michael to add a Debian ; package for OB-2.0. I suspect he'll do that as soon as he has a chance. In any case, this is not a bug in OB. If you compile your own software on a ; UNIX platform, it typically goes in /usr/local. The OB build environment tells ; you explicitly that you may need to add /usr/local to your library paths. On ; Debian, only packages are allowed to install into /usr. Not a bug, sorry.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/501#issuecomment-281776174
https://github.com/openbabel/openbabel/issues/501#issuecomment-281776175:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=850620. Oh well, I'll keep looking. :-). Adding /usr/local/ to LD_LIBRARY_PATH seems to do the trick; as regards finding the libraries. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/501#issuecomment-281776175
https://github.com/openbabel/openbabel/issues/502#issuecomment-281776187:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. Thanks for the report. This is a duplicate.; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/502#issuecomment-281776187
https://github.com/openbabel/openbabel/issues/503#issuecomment-281776198:0,Testability,Log,Logged,0,Logged In: YES ; user_id=1189615. Corrected in HEAD code in Jan 2006. Example file now; converted ok.; Status made pending. Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/503#issuecomment-281776198
https://github.com/openbabel/openbabel/issues/503#issuecomment-281776199:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/503#issuecomment-281776199
https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810176:143,Deployability,configurat,configuration,143,"Logged In: YES ; user_id=787122. You can look at what gnumeric does. The plugins are loaded; only when they are needed, gnumeric just loads a; configuration xml file (plugin.xml) on startup.; As I am confortable with the mechanism involved, I am able; to implement such a thing in OpenBabel. Just ask. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810176
https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810176:73,Modifiability,plugin,plugins,73,"Logged In: YES ; user_id=787122. You can look at what gnumeric does. The plugins are loaded; only when they are needed, gnumeric just loads a; configuration xml file (plugin.xml) on startup.; As I am confortable with the mechanism involved, I am able; to implement such a thing in OpenBabel. Just ask. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810176
https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810176:143,Modifiability,config,configuration,143,"Logged In: YES ; user_id=787122. You can look at what gnumeric does. The plugins are loaded; only when they are needed, gnumeric just loads a; configuration xml file (plugin.xml) on startup.; As I am confortable with the mechanism involved, I am able; to implement such a thing in OpenBabel. Just ask. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810176
https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810176:167,Modifiability,plugin,plugin,167,"Logged In: YES ; user_id=787122. You can look at what gnumeric does. The plugins are loaded; only when they are needed, gnumeric just loads a; configuration xml file (plugin.xml) on startup.; As I am confortable with the mechanism involved, I am able; to implement such a thing in OpenBabel. Just ask. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810176
https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810176:85,Performance,load,loaded,85,"Logged In: YES ; user_id=787122. You can look at what gnumeric does. The plugins are loaded; only when they are needed, gnumeric just loads a; configuration xml file (plugin.xml) on startup.; As I am confortable with the mechanism involved, I am able; to implement such a thing in OpenBabel. Just ask. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810176
https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810176:134,Performance,load,loads,134,"Logged In: YES ; user_id=787122. You can look at what gnumeric does. The plugins are loaded; only when they are needed, gnumeric just loads a; configuration xml file (plugin.xml) on startup.; As I am confortable with the mechanism involved, I am able; to implement such a thing in OpenBabel. Just ask. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810176
https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810176:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=787122. You can look at what gnumeric does. The plugins are loaded; only when they are needed, gnumeric just loads a; configuration xml file (plugin.xml) on startup.; As I am confortable with the mechanism involved, I am able; to implement such a thing in OpenBabel. Just ask. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810176
https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810179:338,Deployability,install,installation,338,"Logged In: YES ; user_id=21420. Yes, I like this idea -- having an XML or text file that provides a mapping ; between the filename of a plugin and the format codes/extensions/mime ; types, etc. The file can also indicate if certain plugins are manditory (e.g., the ; API module right now). One way that I can see this working is that the installation process generates ; this file. If the file isn't present, the library can fall back on the current ; behavior. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810179
https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810179:136,Modifiability,plugin,plugin,136,"Logged In: YES ; user_id=21420. Yes, I like this idea -- having an XML or text file that provides a mapping ; between the filename of a plugin and the format codes/extensions/mime ; types, etc. The file can also indicate if certain plugins are manditory (e.g., the ; API module right now). One way that I can see this working is that the installation process generates ; this file. If the file isn't present, the library can fall back on the current ; behavior. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810179
https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810179:232,Modifiability,plugin,plugins,232,"Logged In: YES ; user_id=21420. Yes, I like this idea -- having an XML or text file that provides a mapping ; between the filename of a plugin and the format codes/extensions/mime ; types, etc. The file can also indicate if certain plugins are manditory (e.g., the ; API module right now). One way that I can see this working is that the installation process generates ; this file. If the file isn't present, the library can fall back on the current ; behavior. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810179
https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810179:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Yes, I like this idea -- having an XML or text file that provides a mapping ; between the filename of a plugin and the format codes/extensions/mime ; types, etc. The file can also indicate if certain plugins are manditory (e.g., the ; API module right now). One way that I can see this working is that the installation process generates ; this file. If the file isn't present, the library can fall back on the current ; behavior. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810179
https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810180:68,Modifiability,plugin,plugin,68,"Logged In: NO . in gnumeric/goffice, there is one xml file for each plugin.; The framework loads these on startup and then loads the; plugins when one of the services it offers is requested.; Of course, it is also possible to generate a single xml file; from some special comment present in the source file for the; plugin. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810180
https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810180:134,Modifiability,plugin,plugins,134,"Logged In: NO . in gnumeric/goffice, there is one xml file for each plugin.; The framework loads these on startup and then loads the; plugins when one of the services it offers is requested.; Of course, it is also possible to generate a single xml file; from some special comment present in the source file for the; plugin. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810180
https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810180:316,Modifiability,plugin,plugin,316,"Logged In: NO . in gnumeric/goffice, there is one xml file for each plugin.; The framework loads these on startup and then loads the; plugins when one of the services it offers is requested.; Of course, it is also possible to generate a single xml file; from some special comment present in the source file for the; plugin. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810180
https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810180:91,Performance,load,loads,91,"Logged In: NO . in gnumeric/goffice, there is one xml file for each plugin.; The framework loads these on startup and then loads the; plugins when one of the services it offers is requested.; Of course, it is also possible to generate a single xml file; from some special comment present in the source file for the; plugin. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810180
https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810180:123,Performance,load,loads,123,"Logged In: NO . in gnumeric/goffice, there is one xml file for each plugin.; The framework loads these on startup and then loads the; plugins when one of the services it offers is requested.; Of course, it is also possible to generate a single xml file; from some special comment present in the source file for the; plugin. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810180
https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810180:0,Testability,Log,Logged,0,"Logged In: NO . in gnumeric/goffice, there is one xml file for each plugin.; The framework loads these on startup and then loads the; plugins when one of the services it offers is requested.; Of course, it is also possible to generate a single xml file; from some special comment present in the source file for the; plugin. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810180
https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810181:137,Modifiability,plugin,plugins,137,"Logged In: YES ; user_id=21420; Originator: YES. It turns out that this isn't a significant performance boost. We will certainly revisit plugins with 3.0, but I'm closing this request, because it doesn't seem to be a significant issue. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810181
https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810181:92,Performance,perform,performance,92,"Logged In: YES ; user_id=21420; Originator: YES. It turns out that this isn't a significant performance boost. We will certainly revisit plugins with 3.0, but I'm closing this request, because it doesn't seem to be a significant issue. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810181
https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810181:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: YES. It turns out that this isn't a significant performance boost. We will certainly revisit plugins with 3.0, but I'm closing this request, because it doesn't seem to be a significant issue. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810181
https://github.com/openbabel/openbabel/issues/1435#issuecomment-281810191:80,Energy Efficiency,charge,charges,80,Logged In: YES ; user_id=21420; Originator: YES. This is now fixed. The partial charges are tagged as coming from Gasteiger or Mulliken. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1435#issuecomment-281810191
https://github.com/openbabel/openbabel/issues/1435#issuecomment-281810191:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420; Originator: YES. This is now fixed. The partial charges are tagged as coming from Gasteiger or Mulliken. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1435#issuecomment-281810191
https://github.com/openbabel/openbabel/issues/504#issuecomment-281776218:0,Testability,Log,Logged,0,"Logged In: NO . Can you provide me with some example files? For example, could you provide ; me with an example Sybyl file (saved from Sybyl) that doesn't work after going ; through Babel?. It's easy enough to change things in the output, but I'd like to make sure we ; match the Sybyl file exactly. Thanks,; -Geoff. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/504#issuecomment-281776218
https://github.com/openbabel/openbabel/issues/504#issuecomment-281776219:0,Testability,Log,Logged,0,Logged In: YES ; user_id=1395228. Hope the attached files provide the information you require:. test.mol: Example mol file exported from ISIS Draw. babel1.mol2: test.mol converted -imol -omol2 with babel ; 1.100.2 which is read with bonds by sybyl. babel2.mol2: same file converted with babel 2.0.0 which is ; read but doesn't get bonds. sybyl.mol2: same structure sketched and save in sybyl as a ; reference .mol2 file. Note that this is 3D whereas the ; other files are all 2D. Original comment by: kparkes,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/504#issuecomment-281776219
https://github.com/openbabel/openbabel/issues/504#issuecomment-281776219:96,Testability,test,test,96,Logged In: YES ; user_id=1395228. Hope the attached files provide the information you require:. test.mol: Example mol file exported from ISIS Draw. babel1.mol2: test.mol converted -imol -omol2 with babel ; 1.100.2 which is read with bonds by sybyl. babel2.mol2: same file converted with babel 2.0.0 which is ; read but doesn't get bonds. sybyl.mol2: same structure sketched and save in sybyl as a ; reference .mol2 file. Note that this is 3D whereas the ; other files are all 2D. Original comment by: kparkes,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/504#issuecomment-281776219
https://github.com/openbabel/openbabel/issues/504#issuecomment-281776219:161,Testability,test,test,161,Logged In: YES ; user_id=1395228. Hope the attached files provide the information you require:. test.mol: Example mol file exported from ISIS Draw. babel1.mol2: test.mol converted -imol -omol2 with babel ; 1.100.2 which is read with bonds by sybyl. babel2.mol2: same file converted with babel 2.0.0 which is ; read but doesn't get bonds. sybyl.mol2: same structure sketched and save in sybyl as a ; reference .mol2 file. Note that this is 3D whereas the ; other files are all 2D. Original comment by: kparkes,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/504#issuecomment-281776219
https://github.com/openbabel/openbabel/issues/504#issuecomment-281776222:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. This should be fixed in the current CVS tree for 2.0.x and 2.1 now. Marking closed, pending further comments. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/504#issuecomment-281776222
https://github.com/openbabel/openbabel/issues/504#issuecomment-281776223:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/504#issuecomment-281776223
https://github.com/openbabel/openbabel/issues/1436#issuecomment-281810201:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1385787. Good idea.; For adding a whole list of values, you might want something ; similar to this: take an SD file and a table file (e.g.tab-; separated txt file). The table file contains compound names ; and the values of the property/ies to add. OpenBabel should ; add the property/ies of the table file to the corresponding ; compounds in the SD file under a given property name(s).; Conversely, you should also be able to extract all property ; data including the structure name (very first line of the ; compound header) from an SD file to a table text file. Original comment by: claggner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1436#issuecomment-281810201
https://github.com/openbabel/openbabel/issues/1436#issuecomment-281810203:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. Chris Morley has added this feature to the CVS development code. It will be in ; version 2.1. Marking this closed. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1436#issuecomment-281810203
https://github.com/openbabel/openbabel/issues/1437#issuecomment-281810214:244,Integrability,interface,interface,244,"Logged In: YES ; user_id=196016. I guess we can destinguish between general properties (basis; set, electronic structure method) and job-specific; properties (single-point calculation, geometry optimization,; frequency analysis). As for a user-interface, I think it is more important to; have the library cover the various types and possibly be; able to convert between different QM inputs, than having a; UI to make up new input. I would argue that this is not the core of openbabel, and; might be easier done in a GUI like ghemical, but an elegant; implementation would be welcome, of course. Michael. Original comment by: @mbanck",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1437#issuecomment-281810214
https://github.com/openbabel/openbabel/issues/1437#issuecomment-281810214:194,Performance,optimiz,optimization,194,"Logged In: YES ; user_id=196016. I guess we can destinguish between general properties (basis; set, electronic structure method) and job-specific; properties (single-point calculation, geometry optimization,; frequency analysis). As for a user-interface, I think it is more important to; have the library cover the various types and possibly be; able to convert between different QM inputs, than having a; UI to make up new input. I would argue that this is not the core of openbabel, and; might be easier done in a GUI like ghemical, but an elegant; implementation would be welcome, of course. Michael. Original comment by: @mbanck",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1437#issuecomment-281810214
https://github.com/openbabel/openbabel/issues/1437#issuecomment-281810214:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=196016. I guess we can destinguish between general properties (basis; set, electronic structure method) and job-specific; properties (single-point calculation, geometry optimization,; frequency analysis). As for a user-interface, I think it is more important to; have the library cover the various types and possibly be; able to convert between different QM inputs, than having a; UI to make up new input. I would argue that this is not the core of openbabel, and; might be easier done in a GUI like ghemical, but an elegant; implementation would be welcome, of course. Michael. Original comment by: @mbanck",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1437#issuecomment-281810214
https://github.com/openbabel/openbabel/issues/1437#issuecomment-281810215:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. This is already done. The key is exactly that, an -xk command line option with a string or -xf with ; a filename will supply keywords to a QM input. One advantage is that GUI programs can set their keywords and use Open ; Babel to write the input file, rather than having to do both. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1437#issuecomment-281810215
https://github.com/openbabel/openbabel/issues/505#issuecomment-281776234:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Chris Morley has fixed this in the CVS head, which will eventually be part of 2.1. Closed, pending further comment. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/505#issuecomment-281776234
https://github.com/openbabel/openbabel/issues/505#issuecomment-281776235:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/505#issuecomment-281776235
https://github.com/openbabel/openbabel/issues/505#issuecomment-281776237:0,Testability,Log,Logged,0,Logged In: YES ; user_id=1189615. I've reopened this. Only preliminary work in 2.1.0 HEAD; files has been done as yet. I'll try to finish the job so; that all the OBGeneric data is copied with an OBMol. . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/505#issuecomment-281776237
https://github.com/openbabel/openbabel/issues/505#issuecomment-281776238:0,Testability,Log,Logged,0,Logged In: YES ; user_id=1189615. The code in CVS HEAD now copies the OBGenericData when an; OBMol is copied. Set pending. Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/505#issuecomment-281776238
https://github.com/openbabel/openbabel/issues/505#issuecomment-281776240:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/505#issuecomment-281776240
https://github.com/openbabel/openbabel/issues/506#issuecomment-281776255:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I have a fix for this, I'm updating CVS tonight. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/506#issuecomment-281776255
https://github.com/openbabel/openbabel/issues/1438#issuecomment-281810242:208,Availability,robust,robust,208,"Logged In: YES ; user_id=21420. I've made considerable progress on this. I have the beginnings of a unit test ; set via the Perl module. I'm also working on a way to extend the current test suite into a more robust ; form using the Perl ""Test Anything Protocol"" (TAP). Basically the C++ ; programs will output results like Perl test scripts do (e.g., Perl's ; Test::Harness) and small perl scripts will analyze the output. The benefit is that results will be quite readable for humans, providing more ; detail if things go wrong. But where Perl is available (i.e., almost everywhere) ; the summaries will be much more useful. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1438#issuecomment-281810242
https://github.com/openbabel/openbabel/issues/1438#issuecomment-281810242:548,Availability,avail,available,548,"Logged In: YES ; user_id=21420. I've made considerable progress on this. I have the beginnings of a unit test ; set via the Perl module. I'm also working on a way to extend the current test suite into a more robust ; form using the Perl ""Test Anything Protocol"" (TAP). Basically the C++ ; programs will output results like Perl test scripts do (e.g., Perl's ; Test::Harness) and small perl scripts will analyze the output. The benefit is that results will be quite readable for humans, providing more ; detail if things go wrong. But where Perl is available (i.e., almost everywhere) ; the summaries will be much more useful. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1438#issuecomment-281810242
https://github.com/openbabel/openbabel/issues/1438#issuecomment-281810242:252,Integrability,Protocol,Protocol,252,"Logged In: YES ; user_id=21420. I've made considerable progress on this. I have the beginnings of a unit test ; set via the Perl module. I'm also working on a way to extend the current test suite into a more robust ; form using the Perl ""Test Anything Protocol"" (TAP). Basically the C++ ; programs will output results like Perl test scripts do (e.g., Perl's ; Test::Harness) and small perl scripts will analyze the output. The benefit is that results will be quite readable for humans, providing more ; detail if things go wrong. But where Perl is available (i.e., almost everywhere) ; the summaries will be much more useful. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1438#issuecomment-281810242
https://github.com/openbabel/openbabel/issues/1438#issuecomment-281810242:166,Modifiability,extend,extend,166,"Logged In: YES ; user_id=21420. I've made considerable progress on this. I have the beginnings of a unit test ; set via the Perl module. I'm also working on a way to extend the current test suite into a more robust ; form using the Perl ""Test Anything Protocol"" (TAP). Basically the C++ ; programs will output results like Perl test scripts do (e.g., Perl's ; Test::Harness) and small perl scripts will analyze the output. The benefit is that results will be quite readable for humans, providing more ; detail if things go wrong. But where Perl is available (i.e., almost everywhere) ; the summaries will be much more useful. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1438#issuecomment-281810242
https://github.com/openbabel/openbabel/issues/1438#issuecomment-281810242:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I've made considerable progress on this. I have the beginnings of a unit test ; set via the Perl module. I'm also working on a way to extend the current test suite into a more robust ; form using the Perl ""Test Anything Protocol"" (TAP). Basically the C++ ; programs will output results like Perl test scripts do (e.g., Perl's ; Test::Harness) and small perl scripts will analyze the output. The benefit is that results will be quite readable for humans, providing more ; detail if things go wrong. But where Perl is available (i.e., almost everywhere) ; the summaries will be much more useful. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1438#issuecomment-281810242
https://github.com/openbabel/openbabel/issues/1438#issuecomment-281810242:105,Testability,test,test,105,"Logged In: YES ; user_id=21420. I've made considerable progress on this. I have the beginnings of a unit test ; set via the Perl module. I'm also working on a way to extend the current test suite into a more robust ; form using the Perl ""Test Anything Protocol"" (TAP). Basically the C++ ; programs will output results like Perl test scripts do (e.g., Perl's ; Test::Harness) and small perl scripts will analyze the output. The benefit is that results will be quite readable for humans, providing more ; detail if things go wrong. But where Perl is available (i.e., almost everywhere) ; the summaries will be much more useful. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1438#issuecomment-281810242
https://github.com/openbabel/openbabel/issues/1438#issuecomment-281810242:185,Testability,test,test,185,"Logged In: YES ; user_id=21420. I've made considerable progress on this. I have the beginnings of a unit test ; set via the Perl module. I'm also working on a way to extend the current test suite into a more robust ; form using the Perl ""Test Anything Protocol"" (TAP). Basically the C++ ; programs will output results like Perl test scripts do (e.g., Perl's ; Test::Harness) and small perl scripts will analyze the output. The benefit is that results will be quite readable for humans, providing more ; detail if things go wrong. But where Perl is available (i.e., almost everywhere) ; the summaries will be much more useful. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1438#issuecomment-281810242
https://github.com/openbabel/openbabel/issues/1438#issuecomment-281810242:238,Testability,Test,Test,238,"Logged In: YES ; user_id=21420. I've made considerable progress on this. I have the beginnings of a unit test ; set via the Perl module. I'm also working on a way to extend the current test suite into a more robust ; form using the Perl ""Test Anything Protocol"" (TAP). Basically the C++ ; programs will output results like Perl test scripts do (e.g., Perl's ; Test::Harness) and small perl scripts will analyze the output. The benefit is that results will be quite readable for humans, providing more ; detail if things go wrong. But where Perl is available (i.e., almost everywhere) ; the summaries will be much more useful. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1438#issuecomment-281810242
https://github.com/openbabel/openbabel/issues/1438#issuecomment-281810242:328,Testability,test,test,328,"Logged In: YES ; user_id=21420. I've made considerable progress on this. I have the beginnings of a unit test ; set via the Perl module. I'm also working on a way to extend the current test suite into a more robust ; form using the Perl ""Test Anything Protocol"" (TAP). Basically the C++ ; programs will output results like Perl test scripts do (e.g., Perl's ; Test::Harness) and small perl scripts will analyze the output. The benefit is that results will be quite readable for humans, providing more ; detail if things go wrong. But where Perl is available (i.e., almost everywhere) ; the summaries will be much more useful. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1438#issuecomment-281810242
https://github.com/openbabel/openbabel/issues/1438#issuecomment-281810242:360,Testability,Test,Test,360,"Logged In: YES ; user_id=21420. I've made considerable progress on this. I have the beginnings of a unit test ; set via the Perl module. I'm also working on a way to extend the current test suite into a more robust ; form using the Perl ""Test Anything Protocol"" (TAP). Basically the C++ ; programs will output results like Perl test scripts do (e.g., Perl's ; Test::Harness) and small perl scripts will analyze the output. The benefit is that results will be quite readable for humans, providing more ; detail if things go wrong. But where Perl is available (i.e., almost everywhere) ; the summaries will be much more useful. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1438#issuecomment-281810242
https://github.com/openbabel/openbabel/issues/1438#issuecomment-281810245:337,Availability,redundant,redundant,337,"Logged In: YES ; user_id=21420. I'm marking this closed. It's not a comprehensive test suite yet, but it's getting ; there. The functional tests on SMILES, SMARTS, and CML have uncovered a ; variety of bugs and this will continue to improve. For all intents and purposes, the framework is in good shape now, so this ; feature request is redundant. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1438#issuecomment-281810245
https://github.com/openbabel/openbabel/issues/1438#issuecomment-281810245:337,Safety,redund,redundant,337,"Logged In: YES ; user_id=21420. I'm marking this closed. It's not a comprehensive test suite yet, but it's getting ; there. The functional tests on SMILES, SMARTS, and CML have uncovered a ; variety of bugs and this will continue to improve. For all intents and purposes, the framework is in good shape now, so this ; feature request is redundant. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1438#issuecomment-281810245
https://github.com/openbabel/openbabel/issues/1438#issuecomment-281810245:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I'm marking this closed. It's not a comprehensive test suite yet, but it's getting ; there. The functional tests on SMILES, SMARTS, and CML have uncovered a ; variety of bugs and this will continue to improve. For all intents and purposes, the framework is in good shape now, so this ; feature request is redundant. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1438#issuecomment-281810245
https://github.com/openbabel/openbabel/issues/1438#issuecomment-281810245:82,Testability,test,test,82,"Logged In: YES ; user_id=21420. I'm marking this closed. It's not a comprehensive test suite yet, but it's getting ; there. The functional tests on SMILES, SMARTS, and CML have uncovered a ; variety of bugs and this will continue to improve. For all intents and purposes, the framework is in good shape now, so this ; feature request is redundant. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1438#issuecomment-281810245
https://github.com/openbabel/openbabel/issues/1438#issuecomment-281810245:139,Testability,test,tests,139,"Logged In: YES ; user_id=21420. I'm marking this closed. It's not a comprehensive test suite yet, but it's getting ; there. The functional tests on SMILES, SMARTS, and CML have uncovered a ; variety of bugs and this will continue to improve. For all intents and purposes, the framework is in good shape now, so this ; feature request is redundant. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1438#issuecomment-281810245
https://github.com/openbabel/openbabel/issues/1440#issuecomment-281810276:111,Deployability,integrat,integrate,111,"Logged In: YES ; user_id=21420. Initial wiki is up at http://openbabel.sf.net/wiki/. Need to figure out how to integrate API documentation into current setup, and ; lay out a roadmap to incorporate the existing formats database too. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1440#issuecomment-281810276
https://github.com/openbabel/openbabel/issues/1440#issuecomment-281810276:111,Integrability,integrat,integrate,111,"Logged In: YES ; user_id=21420. Initial wiki is up at http://openbabel.sf.net/wiki/. Need to figure out how to integrate API documentation into current setup, and ; lay out a roadmap to incorporate the existing formats database too. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1440#issuecomment-281810276
https://github.com/openbabel/openbabel/issues/1440#issuecomment-281810276:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Initial wiki is up at http://openbabel.sf.net/wiki/. Need to figure out how to integrate API documentation into current setup, and ; lay out a roadmap to incorporate the existing formats database too. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1440#issuecomment-281810276
https://github.com/openbabel/openbabel/issues/1440#issuecomment-281810278:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1440#issuecomment-281810278
https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810307:222,Availability,fault,faults,222,"Logged In: YES ; user_id=1189615. Thanks very much for these comments. User interface design ; depends on fitting in with the user's expectations. The ; more examples of these, the better. . The GUI has a number of design faults and bugs which I ; have put off correcting because I would prefer to put the ; effort into a cross-platform GUI. (I would welcome ; suggestions what to use to build such an interface). To respond to your comments:. (0) The installation is deliberately minimal. I would have ; thought that whatever you use for unzipping, you can ; always specify the destination folder. The current most ; common approach would be double clicking the zip file in ; Windows XP, which would do as you suggest. . (1)(2)(7) The design without a menu bar is perhaps less ; common than it used to be and maybe is too disconcerting. ; I agree there should be some About info. The control menu ; is a possible place for this, but maybe nobody would think ; to look there. I agree there should be a minimize button. (3) and (4) are bugs. The failure of All Chemical Formats ; seems to be to a 256 character limit on the filter string ; and has only come to light when all the formats were ; included. Why this should occur needs tracking down. (5) illustrates a UI dilemma. Should ; a)the type of file requested, or ; b)the extension of the file selected by the user ; have priority on what format OB attempts to convert. I ; chose b), and I provided a Force this Format checkbox to ; cover the case where this was not what was required. You ; prefer a), giving priority to the user's earlier choice ; via the Format dropdown and an opportunity to Force file ; Extension via a checkbox. Both are reasonable, but I ; prefer a) on the principle that it uses a later deliberate ; user choice. (6) I agree that more feedback is needed to help the user ; to know whether local or file input is being used. Making ; it read-only when the file option is selected and ; automatically updating the contents ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810307
https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810307:1045,Availability,failure,failure,1045," the user's expectations. The ; more examples of these, the better. . The GUI has a number of design faults and bugs which I ; have put off correcting because I would prefer to put the ; effort into a cross-platform GUI. (I would welcome ; suggestions what to use to build such an interface). To respond to your comments:. (0) The installation is deliberately minimal. I would have ; thought that whatever you use for unzipping, you can ; always specify the destination folder. The current most ; common approach would be double clicking the zip file in ; Windows XP, which would do as you suggest. . (1)(2)(7) The design without a menu bar is perhaps less ; common than it used to be and maybe is too disconcerting. ; I agree there should be some About info. The control menu ; is a possible place for this, but maybe nobody would think ; to look there. I agree there should be a minimize button. (3) and (4) are bugs. The failure of All Chemical Formats ; seems to be to a 256 character limit on the filter string ; and has only come to light when all the formats were ; included. Why this should occur needs tracking down. (5) illustrates a UI dilemma. Should ; a)the type of file requested, or ; b)the extension of the file selected by the user ; have priority on what format OB attempts to convert. I ; chose b), and I provided a Force this Format checkbox to ; cover the case where this was not what was required. You ; prefer a), giving priority to the user's earlier choice ; via the Format dropdown and an opportunity to Force file ; Extension via a checkbox. Both are reasonable, but I ; prefer a) on the principle that it uses a later deliberate ; user choice. (6) I agree that more feedback is needed to help the user ; to know whether local or file input is being used. Making ; it read-only when the file option is selected and ; automatically updating the contents from a file seem to be ; good ways. (8) This is not a bug. SMILES has no coordinate ; information; a straight conversion ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810307
https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810307:1241,Availability,down,down,1241,"ults and bugs which I ; have put off correcting because I would prefer to put the ; effort into a cross-platform GUI. (I would welcome ; suggestions what to use to build such an interface). To respond to your comments:. (0) The installation is deliberately minimal. I would have ; thought that whatever you use for unzipping, you can ; always specify the destination folder. The current most ; common approach would be double clicking the zip file in ; Windows XP, which would do as you suggest. . (1)(2)(7) The design without a menu bar is perhaps less ; common than it used to be and maybe is too disconcerting. ; I agree there should be some About info. The control menu ; is a possible place for this, but maybe nobody would think ; to look there. I agree there should be a minimize button. (3) and (4) are bugs. The failure of All Chemical Formats ; seems to be to a 256 character limit on the filter string ; and has only come to light when all the formats were ; included. Why this should occur needs tracking down. (5) illustrates a UI dilemma. Should ; a)the type of file requested, or ; b)the extension of the file selected by the user ; have priority on what format OB attempts to convert. I ; chose b), and I provided a Force this Format checkbox to ; cover the case where this was not what was required. You ; prefer a), giving priority to the user's earlier choice ; via the Format dropdown and an opportunity to Force file ; Extension via a checkbox. Both are reasonable, but I ; prefer a) on the principle that it uses a later deliberate ; user choice. (6) I agree that more feedback is needed to help the user ; to know whether local or file input is being used. Making ; it read-only when the file option is selected and ; automatically updating the contents from a file seem to be ; good ways. (8) This is not a bug. SMILES has no coordinate ; information; a straight conversion correctly gives zero ; coordinates. At present OpenBabel doesn't have the ; capability to generate coor",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810307
https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810307:2650,Availability,error,error,2650,"hemical Formats ; seems to be to a 256 character limit on the filter string ; and has only come to light when all the formats were ; included. Why this should occur needs tracking down. (5) illustrates a UI dilemma. Should ; a)the type of file requested, or ; b)the extension of the file selected by the user ; have priority on what format OB attempts to convert. I ; chose b), and I provided a Force this Format checkbox to ; cover the case where this was not what was required. You ; prefer a), giving priority to the user's earlier choice ; via the Format dropdown and an opportunity to Force file ; Extension via a checkbox. Both are reasonable, but I ; prefer a) on the principle that it uses a later deliberate ; user choice. (6) I agree that more feedback is needed to help the user ; to know whether local or file input is being used. Making ; it read-only when the file option is selected and ; automatically updating the contents from a file seem to be ; good ways. (8) This is not a bug. SMILES has no coordinate ; information; a straight conversion correctly gives zero ; coordinates. At present OpenBabel doesn't have the ; capability to generate coordinates. I'm not an expert, but ; I suspect that this can be done at many levels of realism, ; with the top ones being big computations. OB needs ; something though, and the user must be given it as an ; option and be made aware somehow of the possible ; deficiencies. The 4mols.smi wasn't really intended as an example; it ; just got left there. I agree that a 3D molecule would be ; better. The GUI really needs to display error/audit messages, and ; I guess this could be a pane at the bottom of the window. ; It also cannot handle some feature of the commandline ; interface - like specifying the target for a fastsearch as ; a file, and setting audit levels. And of course it needs a ; graphical display for molecular structure and some of the ; other nice features of Chris Swain's Mac interface. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810307
https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810307:452,Deployability,install,installation,452,"Logged In: YES ; user_id=1189615. Thanks very much for these comments. User interface design ; depends on fitting in with the user's expectations. The ; more examples of these, the better. . The GUI has a number of design faults and bugs which I ; have put off correcting because I would prefer to put the ; effort into a cross-platform GUI. (I would welcome ; suggestions what to use to build such an interface). To respond to your comments:. (0) The installation is deliberately minimal. I would have ; thought that whatever you use for unzipping, you can ; always specify the destination folder. The current most ; common approach would be double clicking the zip file in ; Windows XP, which would do as you suggest. . (1)(2)(7) The design without a menu bar is perhaps less ; common than it used to be and maybe is too disconcerting. ; I agree there should be some About info. The control menu ; is a possible place for this, but maybe nobody would think ; to look there. I agree there should be a minimize button. (3) and (4) are bugs. The failure of All Chemical Formats ; seems to be to a 256 character limit on the filter string ; and has only come to light when all the formats were ; included. Why this should occur needs tracking down. (5) illustrates a UI dilemma. Should ; a)the type of file requested, or ; b)the extension of the file selected by the user ; have priority on what format OB attempts to convert. I ; chose b), and I provided a Force this Format checkbox to ; cover the case where this was not what was required. You ; prefer a), giving priority to the user's earlier choice ; via the Format dropdown and an opportunity to Force file ; Extension via a checkbox. Both are reasonable, but I ; prefer a) on the principle that it uses a later deliberate ; user choice. (6) I agree that more feedback is needed to help the user ; to know whether local or file input is being used. Making ; it read-only when the file option is selected and ; automatically updating the contents ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810307
https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810307:76,Integrability,interface,interface,76,"Logged In: YES ; user_id=1189615. Thanks very much for these comments. User interface design ; depends on fitting in with the user's expectations. The ; more examples of these, the better. . The GUI has a number of design faults and bugs which I ; have put off correcting because I would prefer to put the ; effort into a cross-platform GUI. (I would welcome ; suggestions what to use to build such an interface). To respond to your comments:. (0) The installation is deliberately minimal. I would have ; thought that whatever you use for unzipping, you can ; always specify the destination folder. The current most ; common approach would be double clicking the zip file in ; Windows XP, which would do as you suggest. . (1)(2)(7) The design without a menu bar is perhaps less ; common than it used to be and maybe is too disconcerting. ; I agree there should be some About info. The control menu ; is a possible place for this, but maybe nobody would think ; to look there. I agree there should be a minimize button. (3) and (4) are bugs. The failure of All Chemical Formats ; seems to be to a 256 character limit on the filter string ; and has only come to light when all the formats were ; included. Why this should occur needs tracking down. (5) illustrates a UI dilemma. Should ; a)the type of file requested, or ; b)the extension of the file selected by the user ; have priority on what format OB attempts to convert. I ; chose b), and I provided a Force this Format checkbox to ; cover the case where this was not what was required. You ; prefer a), giving priority to the user's earlier choice ; via the Format dropdown and an opportunity to Force file ; Extension via a checkbox. Both are reasonable, but I ; prefer a) on the principle that it uses a later deliberate ; user choice. (6) I agree that more feedback is needed to help the user ; to know whether local or file input is being used. Making ; it read-only when the file option is selected and ; automatically updating the contents ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810307
https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810307:95,Integrability,depend,depends,95,"Logged In: YES ; user_id=1189615. Thanks very much for these comments. User interface design ; depends on fitting in with the user's expectations. The ; more examples of these, the better. . The GUI has a number of design faults and bugs which I ; have put off correcting because I would prefer to put the ; effort into a cross-platform GUI. (I would welcome ; suggestions what to use to build such an interface). To respond to your comments:. (0) The installation is deliberately minimal. I would have ; thought that whatever you use for unzipping, you can ; always specify the destination folder. The current most ; common approach would be double clicking the zip file in ; Windows XP, which would do as you suggest. . (1)(2)(7) The design without a menu bar is perhaps less ; common than it used to be and maybe is too disconcerting. ; I agree there should be some About info. The control menu ; is a possible place for this, but maybe nobody would think ; to look there. I agree there should be a minimize button. (3) and (4) are bugs. The failure of All Chemical Formats ; seems to be to a 256 character limit on the filter string ; and has only come to light when all the formats were ; included. Why this should occur needs tracking down. (5) illustrates a UI dilemma. Should ; a)the type of file requested, or ; b)the extension of the file selected by the user ; have priority on what format OB attempts to convert. I ; chose b), and I provided a Force this Format checkbox to ; cover the case where this was not what was required. You ; prefer a), giving priority to the user's earlier choice ; via the Format dropdown and an opportunity to Force file ; Extension via a checkbox. Both are reasonable, but I ; prefer a) on the principle that it uses a later deliberate ; user choice. (6) I agree that more feedback is needed to help the user ; to know whether local or file input is being used. Making ; it read-only when the file option is selected and ; automatically updating the contents ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810307
https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810307:402,Integrability,interface,interface,402,"Logged In: YES ; user_id=1189615. Thanks very much for these comments. User interface design ; depends on fitting in with the user's expectations. The ; more examples of these, the better. . The GUI has a number of design faults and bugs which I ; have put off correcting because I would prefer to put the ; effort into a cross-platform GUI. (I would welcome ; suggestions what to use to build such an interface). To respond to your comments:. (0) The installation is deliberately minimal. I would have ; thought that whatever you use for unzipping, you can ; always specify the destination folder. The current most ; common approach would be double clicking the zip file in ; Windows XP, which would do as you suggest. . (1)(2)(7) The design without a menu bar is perhaps less ; common than it used to be and maybe is too disconcerting. ; I agree there should be some About info. The control menu ; is a possible place for this, but maybe nobody would think ; to look there. I agree there should be a minimize button. (3) and (4) are bugs. The failure of All Chemical Formats ; seems to be to a 256 character limit on the filter string ; and has only come to light when all the formats were ; included. Why this should occur needs tracking down. (5) illustrates a UI dilemma. Should ; a)the type of file requested, or ; b)the extension of the file selected by the user ; have priority on what format OB attempts to convert. I ; chose b), and I provided a Force this Format checkbox to ; cover the case where this was not what was required. You ; prefer a), giving priority to the user's earlier choice ; via the Format dropdown and an opportunity to Force file ; Extension via a checkbox. Both are reasonable, but I ; prefer a) on the principle that it uses a later deliberate ; user choice. (6) I agree that more feedback is needed to help the user ; to know whether local or file input is being used. Making ; it read-only when the file option is selected and ; automatically updating the contents ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810307
https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810307:2662,Integrability,message,messages,2662,"hemical Formats ; seems to be to a 256 character limit on the filter string ; and has only come to light when all the formats were ; included. Why this should occur needs tracking down. (5) illustrates a UI dilemma. Should ; a)the type of file requested, or ; b)the extension of the file selected by the user ; have priority on what format OB attempts to convert. I ; chose b), and I provided a Force this Format checkbox to ; cover the case where this was not what was required. You ; prefer a), giving priority to the user's earlier choice ; via the Format dropdown and an opportunity to Force file ; Extension via a checkbox. Both are reasonable, but I ; prefer a) on the principle that it uses a later deliberate ; user choice. (6) I agree that more feedback is needed to help the user ; to know whether local or file input is being used. Making ; it read-only when the file option is selected and ; automatically updating the contents from a file seem to be ; good ways. (8) This is not a bug. SMILES has no coordinate ; information; a straight conversion correctly gives zero ; coordinates. At present OpenBabel doesn't have the ; capability to generate coordinates. I'm not an expert, but ; I suspect that this can be done at many levels of realism, ; with the top ones being big computations. OB needs ; something though, and the user must be given it as an ; option and be made aware somehow of the possible ; deficiencies. The 4mols.smi wasn't really intended as an example; it ; just got left there. I agree that a 3D molecule would be ; better. The GUI really needs to display error/audit messages, and ; I guess this could be a pane at the bottom of the window. ; It also cannot handle some feature of the commandline ; interface - like specifying the target for a fastsearch as ; a file, and setting audit levels. And of course it needs a ; graphical display for molecular structure and some of the ; other nice features of Chris Swain's Mac interface. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810307
https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810307:2794,Integrability,interface,interface,2794,"hemical Formats ; seems to be to a 256 character limit on the filter string ; and has only come to light when all the formats were ; included. Why this should occur needs tracking down. (5) illustrates a UI dilemma. Should ; a)the type of file requested, or ; b)the extension of the file selected by the user ; have priority on what format OB attempts to convert. I ; chose b), and I provided a Force this Format checkbox to ; cover the case where this was not what was required. You ; prefer a), giving priority to the user's earlier choice ; via the Format dropdown and an opportunity to Force file ; Extension via a checkbox. Both are reasonable, but I ; prefer a) on the principle that it uses a later deliberate ; user choice. (6) I agree that more feedback is needed to help the user ; to know whether local or file input is being used. Making ; it read-only when the file option is selected and ; automatically updating the contents from a file seem to be ; good ways. (8) This is not a bug. SMILES has no coordinate ; information; a straight conversion correctly gives zero ; coordinates. At present OpenBabel doesn't have the ; capability to generate coordinates. I'm not an expert, but ; I suspect that this can be done at many levels of realism, ; with the top ones being big computations. OB needs ; something though, and the user must be given it as an ; option and be made aware somehow of the possible ; deficiencies. The 4mols.smi wasn't really intended as an example; it ; just got left there. I agree that a 3D molecule would be ; better. The GUI really needs to display error/audit messages, and ; I guess this could be a pane at the bottom of the window. ; It also cannot handle some feature of the commandline ; interface - like specifying the target for a fastsearch as ; a file, and setting audit levels. And of course it needs a ; graphical display for molecular structure and some of the ; other nice features of Chris Swain's Mac interface. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810307
https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810307:3017,Integrability,interface,interface,3017,"hemical Formats ; seems to be to a 256 character limit on the filter string ; and has only come to light when all the formats were ; included. Why this should occur needs tracking down. (5) illustrates a UI dilemma. Should ; a)the type of file requested, or ; b)the extension of the file selected by the user ; have priority on what format OB attempts to convert. I ; chose b), and I provided a Force this Format checkbox to ; cover the case where this was not what was required. You ; prefer a), giving priority to the user's earlier choice ; via the Format dropdown and an opportunity to Force file ; Extension via a checkbox. Both are reasonable, but I ; prefer a) on the principle that it uses a later deliberate ; user choice. (6) I agree that more feedback is needed to help the user ; to know whether local or file input is being used. Making ; it read-only when the file option is selected and ; automatically updating the contents from a file seem to be ; good ways. (8) This is not a bug. SMILES has no coordinate ; information; a straight conversion correctly gives zero ; coordinates. At present OpenBabel doesn't have the ; capability to generate coordinates. I'm not an expert, but ; I suspect that this can be done at many levels of realism, ; with the top ones being big computations. OB needs ; something though, and the user must be given it as an ; option and be made aware somehow of the possible ; deficiencies. The 4mols.smi wasn't really intended as an example; it ; just got left there. I agree that a 3D molecule would be ; better. The GUI really needs to display error/audit messages, and ; I guess this could be a pane at the bottom of the window. ; It also cannot handle some feature of the commandline ; interface - like specifying the target for a fastsearch as ; a file, and setting audit levels. And of course it needs a ; graphical display for molecular structure and some of the ; other nice features of Chris Swain's Mac interface. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810307
https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810307:2656,Security,audit,audit,2656,"hemical Formats ; seems to be to a 256 character limit on the filter string ; and has only come to light when all the formats were ; included. Why this should occur needs tracking down. (5) illustrates a UI dilemma. Should ; a)the type of file requested, or ; b)the extension of the file selected by the user ; have priority on what format OB attempts to convert. I ; chose b), and I provided a Force this Format checkbox to ; cover the case where this was not what was required. You ; prefer a), giving priority to the user's earlier choice ; via the Format dropdown and an opportunity to Force file ; Extension via a checkbox. Both are reasonable, but I ; prefer a) on the principle that it uses a later deliberate ; user choice. (6) I agree that more feedback is needed to help the user ; to know whether local or file input is being used. Making ; it read-only when the file option is selected and ; automatically updating the contents from a file seem to be ; good ways. (8) This is not a bug. SMILES has no coordinate ; information; a straight conversion correctly gives zero ; coordinates. At present OpenBabel doesn't have the ; capability to generate coordinates. I'm not an expert, but ; I suspect that this can be done at many levels of realism, ; with the top ones being big computations. OB needs ; something though, and the user must be given it as an ; option and be made aware somehow of the possible ; deficiencies. The 4mols.smi wasn't really intended as an example; it ; just got left there. I agree that a 3D molecule would be ; better. The GUI really needs to display error/audit messages, and ; I guess this could be a pane at the bottom of the window. ; It also cannot handle some feature of the commandline ; interface - like specifying the target for a fastsearch as ; a file, and setting audit levels. And of course it needs a ; graphical display for molecular structure and some of the ; other nice features of Chris Swain's Mac interface. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810307
https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810307:2875,Security,audit,audit,2875,"hemical Formats ; seems to be to a 256 character limit on the filter string ; and has only come to light when all the formats were ; included. Why this should occur needs tracking down. (5) illustrates a UI dilemma. Should ; a)the type of file requested, or ; b)the extension of the file selected by the user ; have priority on what format OB attempts to convert. I ; chose b), and I provided a Force this Format checkbox to ; cover the case where this was not what was required. You ; prefer a), giving priority to the user's earlier choice ; via the Format dropdown and an opportunity to Force file ; Extension via a checkbox. Both are reasonable, but I ; prefer a) on the principle that it uses a later deliberate ; user choice. (6) I agree that more feedback is needed to help the user ; to know whether local or file input is being used. Making ; it read-only when the file option is selected and ; automatically updating the contents from a file seem to be ; good ways. (8) This is not a bug. SMILES has no coordinate ; information; a straight conversion correctly gives zero ; coordinates. At present OpenBabel doesn't have the ; capability to generate coordinates. I'm not an expert, but ; I suspect that this can be done at many levels of realism, ; with the top ones being big computations. OB needs ; something though, and the user must be given it as an ; option and be made aware somehow of the possible ; deficiencies. The 4mols.smi wasn't really intended as an example; it ; just got left there. I agree that a 3D molecule would be ; better. The GUI really needs to display error/audit messages, and ; I guess this could be a pane at the bottom of the window. ; It also cannot handle some feature of the commandline ; interface - like specifying the target for a fastsearch as ; a file, and setting audit levels. And of course it needs a ; graphical display for molecular structure and some of the ; other nice features of Chris Swain's Mac interface. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810307
https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810307:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615. Thanks very much for these comments. User interface design ; depends on fitting in with the user's expectations. The ; more examples of these, the better. . The GUI has a number of design faults and bugs which I ; have put off correcting because I would prefer to put the ; effort into a cross-platform GUI. (I would welcome ; suggestions what to use to build such an interface). To respond to your comments:. (0) The installation is deliberately minimal. I would have ; thought that whatever you use for unzipping, you can ; always specify the destination folder. The current most ; common approach would be double clicking the zip file in ; Windows XP, which would do as you suggest. . (1)(2)(7) The design without a menu bar is perhaps less ; common than it used to be and maybe is too disconcerting. ; I agree there should be some About info. The control menu ; is a possible place for this, but maybe nobody would think ; to look there. I agree there should be a minimize button. (3) and (4) are bugs. The failure of All Chemical Formats ; seems to be to a 256 character limit on the filter string ; and has only come to light when all the formats were ; included. Why this should occur needs tracking down. (5) illustrates a UI dilemma. Should ; a)the type of file requested, or ; b)the extension of the file selected by the user ; have priority on what format OB attempts to convert. I ; chose b), and I provided a Force this Format checkbox to ; cover the case where this was not what was required. You ; prefer a), giving priority to the user's earlier choice ; via the Format dropdown and an opportunity to Force file ; Extension via a checkbox. Both are reasonable, but I ; prefer a) on the principle that it uses a later deliberate ; user choice. (6) I agree that more feedback is needed to help the user ; to know whether local or file input is being used. Making ; it read-only when the file option is selected and ; automatically updating the contents ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810307
https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810307:1815,Usability,feedback,feedback,1815," there should be some About info. The control menu ; is a possible place for this, but maybe nobody would think ; to look there. I agree there should be a minimize button. (3) and (4) are bugs. The failure of All Chemical Formats ; seems to be to a 256 character limit on the filter string ; and has only come to light when all the formats were ; included. Why this should occur needs tracking down. (5) illustrates a UI dilemma. Should ; a)the type of file requested, or ; b)the extension of the file selected by the user ; have priority on what format OB attempts to convert. I ; chose b), and I provided a Force this Format checkbox to ; cover the case where this was not what was required. You ; prefer a), giving priority to the user's earlier choice ; via the Format dropdown and an opportunity to Force file ; Extension via a checkbox. Both are reasonable, but I ; prefer a) on the principle that it uses a later deliberate ; user choice. (6) I agree that more feedback is needed to help the user ; to know whether local or file input is being used. Making ; it read-only when the file option is selected and ; automatically updating the contents from a file seem to be ; good ways. (8) This is not a bug. SMILES has no coordinate ; information; a straight conversion correctly gives zero ; coordinates. At present OpenBabel doesn't have the ; capability to generate coordinates. I'm not an expert, but ; I suspect that this can be done at many levels of realism, ; with the top ones being big computations. OB needs ; something though, and the user must be given it as an ; option and be made aware somehow of the possible ; deficiencies. The 4mols.smi wasn't really intended as an example; it ; just got left there. I agree that a 3D molecule would be ; better. The GUI really needs to display error/audit messages, and ; I guess this could be a pane at the bottom of the window. ; It also cannot handle some feature of the commandline ; interface - like specifying the target for a fastsearc",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810307
https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810309:477,Availability,down,down,477,"Logged In: YES ; user_id=850620. Thanks for taking my comments on board. Just a few points in; response. (0) I use ""tar zxvf filename.tar.gz"" in linux, and expect a; folder to be created. In Windows, I use 7-zip by; right-clicking on a .zip file to bring up a context menu,; and then clicking ""Extract Here"". Most software; distributions create a new folder to prevent this problem.; (5) Is it possible to automatically select the checkbox if I; choose something from the drop-down menu? Or does this make; sense?. Regarding a crossplatform GUI for OpenBabel, it is; relatively easy to do this in Python (although I am not sure; about the molecular display part), but I'm not sure whether; the Python extensions will be available for windows openbabel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810309
https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810309:720,Availability,avail,available,720,"Logged In: YES ; user_id=850620. Thanks for taking my comments on board. Just a few points in; response. (0) I use ""tar zxvf filename.tar.gz"" in linux, and expect a; folder to be created. In Windows, I use 7-zip by; right-clicking on a .zip file to bring up a context menu,; and then clicking ""Extract Here"". Most software; distributions create a new folder to prevent this problem.; (5) Is it possible to automatically select the checkbox if I; choose something from the drop-down menu? Or does this make; sense?. Regarding a crossplatform GUI for OpenBabel, it is; relatively easy to do this in Python (although I am not sure; about the molecular display part), but I'm not sure whether; the Python extensions will be available for windows openbabel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810309
https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810309:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=850620. Thanks for taking my comments on board. Just a few points in; response. (0) I use ""tar zxvf filename.tar.gz"" in linux, and expect a; folder to be created. In Windows, I use 7-zip by; right-clicking on a .zip file to bring up a context menu,; and then clicking ""Extract Here"". Most software; distributions create a new folder to prevent this problem.; (5) Is it possible to automatically select the checkbox if I; choose something from the drop-down menu? Or does this make; sense?. Regarding a crossplatform GUI for OpenBabel, it is; relatively easy to do this in Python (although I am not sure; about the molecular display part), but I'm not sure whether; the Python extensions will be available for windows openbabel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810309
https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810310:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. I'm marking this to be closed in 2 weeks if there aren't any further comments. As far as I can tell, most if not all of these requests have been addressed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810310
https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810314:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539; Originator: NO. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810314
https://github.com/openbabel/openbabel/issues/507#issuecomment-281776263:0,Testability,Log,Logged,0,"Logged In: NO . Similarly a ""\n"" is added to the end of an InChI. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/507#issuecomment-281776263
https://github.com/openbabel/openbabel/issues/507#issuecomment-281776266:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I'm seeing this as a feature-request than a bug report. The whitespace is part of ; the format used as a file (e.g., the tab character separates the SMILES title and ; the newline ends the file). So the string from OBConversion::WriteString can be ; sent to a file directly. I'll shortly add code to the CVS head (i.e. for 2.1) that adds an optional ; parameter to WriteString to trim off trailing whitespace at the end of the file/; string. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/507#issuecomment-281776266
https://github.com/openbabel/openbabel/issues/507#issuecomment-281776269:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=850620. Well, either that or I can handle it transparently in; pyopenbabel. Maybe the latter is preferable all round?; Whatever you decide. Regards,; Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/507#issuecomment-281776269
https://github.com/openbabel/openbabel/issues/507#issuecomment-281776271:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Well, the 2.1 development code now has a second (optional) parameter to ; WriteString to trim whitespace. However, if pybabel wants to be backwards-compatible with 2.0.x, it ; probably should be done inside python. (Besides, this makes the most sense ; with things like SMILES and InChI.). I'm marking this closed, since it's been addressed in the development CVS for ; 2.1.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/507#issuecomment-281776271
https://github.com/openbabel/openbabel/issues/507#issuecomment-281776274:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/507#issuecomment-281776274
https://github.com/openbabel/openbabel/issues/508#issuecomment-281776306:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Yes, the phosphorus should have have an additional hydrogen. I'll investigate ; the atom typing rules for P to see what's wrong here. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/508#issuecomment-281776306
https://github.com/openbabel/openbabel/issues/508#issuecomment-281776307:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. OK, it's a missing implicit valence rule. Try adding the following to the ; atomtyp.txt file:. IMPVAL [$([#15]=[#8])] 4 # phosphinate (double bond = one valence). That should solve the bug. I'm updating the CVS 2.0.x branch and 2.1.0 HEAD.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/508#issuecomment-281776307
https://github.com/openbabel/openbabel/issues/508#issuecomment-281776310:0,Testability,Log,Logged,0,Logged In: YES ; user_id=1391954. Thank you. I assume atomtyp.h will also have to be fixed? ; Can I do that myself or better wait for 2.1.0?. Original comment by: @ergo70,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/508#issuecomment-281776310
https://github.com/openbabel/openbabel/issues/508#issuecomment-281776311:208,Deployability,update,updated,208,"Logged In: YES ; user_id=21420. No, atomtyp.h is the ""fallback data"" which is used when the text files are not ; found. If you edit the atomtyp.txt in the source directory, the header will be ; automatically updated. You can also update the *installed* ""atomtyp.txt"" file, using something like ; this:. emacs /usr/local/share/openbabel/2.0.0/atomtyp.txt. (Or ""sudo emacs"" if the file is installed as root.). The whole reason for having text data files is that they can easily be fixed for ; bugs before the next release. :-). Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/508#issuecomment-281776311
https://github.com/openbabel/openbabel/issues/508#issuecomment-281776311:230,Deployability,update,update,230,"Logged In: YES ; user_id=21420. No, atomtyp.h is the ""fallback data"" which is used when the text files are not ; found. If you edit the atomtyp.txt in the source directory, the header will be ; automatically updated. You can also update the *installed* ""atomtyp.txt"" file, using something like ; this:. emacs /usr/local/share/openbabel/2.0.0/atomtyp.txt. (Or ""sudo emacs"" if the file is installed as root.). The whole reason for having text data files is that they can easily be fixed for ; bugs before the next release. :-). Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/508#issuecomment-281776311
https://github.com/openbabel/openbabel/issues/508#issuecomment-281776311:242,Deployability,install,installed,242,"Logged In: YES ; user_id=21420. No, atomtyp.h is the ""fallback data"" which is used when the text files are not ; found. If you edit the atomtyp.txt in the source directory, the header will be ; automatically updated. You can also update the *installed* ""atomtyp.txt"" file, using something like ; this:. emacs /usr/local/share/openbabel/2.0.0/atomtyp.txt. (Or ""sudo emacs"" if the file is installed as root.). The whole reason for having text data files is that they can easily be fixed for ; bugs before the next release. :-). Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/508#issuecomment-281776311
https://github.com/openbabel/openbabel/issues/508#issuecomment-281776311:387,Deployability,install,installed,387,"Logged In: YES ; user_id=21420. No, atomtyp.h is the ""fallback data"" which is used when the text files are not ; found. If you edit the atomtyp.txt in the source directory, the header will be ; automatically updated. You can also update the *installed* ""atomtyp.txt"" file, using something like ; this:. emacs /usr/local/share/openbabel/2.0.0/atomtyp.txt. (Or ""sudo emacs"" if the file is installed as root.). The whole reason for having text data files is that they can easily be fixed for ; bugs before the next release. :-). Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/508#issuecomment-281776311
https://github.com/openbabel/openbabel/issues/508#issuecomment-281776311:512,Deployability,release,release,512,"Logged In: YES ; user_id=21420. No, atomtyp.h is the ""fallback data"" which is used when the text files are not ; found. If you edit the atomtyp.txt in the source directory, the header will be ; automatically updated. You can also update the *installed* ""atomtyp.txt"" file, using something like ; this:. emacs /usr/local/share/openbabel/2.0.0/atomtyp.txt. (Or ""sudo emacs"" if the file is installed as root.). The whole reason for having text data files is that they can easily be fixed for ; bugs before the next release. :-). Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/508#issuecomment-281776311
https://github.com/openbabel/openbabel/issues/508#issuecomment-281776311:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. No, atomtyp.h is the ""fallback data"" which is used when the text files are not ; found. If you edit the atomtyp.txt in the source directory, the header will be ; automatically updated. You can also update the *installed* ""atomtyp.txt"" file, using something like ; this:. emacs /usr/local/share/openbabel/2.0.0/atomtyp.txt. (Or ""sudo emacs"" if the file is installed as root.). The whole reason for having text data files is that they can easily be fixed for ; bugs before the next release. :-). Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/508#issuecomment-281776311
https://github.com/openbabel/openbabel/issues/508#issuecomment-281776313:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1391954. Yes, it works for me now. Thank you. Original comment by: @ergo70",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/508#issuecomment-281776313
https://github.com/openbabel/openbabel/issues/509#issuecomment-281776320:36,Deployability,patch,patch,36,Logged In: YES ; user_id=21420. See patch posted:; http://sourceforge.net/mailarchive/forum.php?; thread_id=9412916&forum_id=47190. This will be fixed in a 2.0.1 release. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/509#issuecomment-281776320
https://github.com/openbabel/openbabel/issues/509#issuecomment-281776320:162,Deployability,release,release,162,Logged In: YES ; user_id=21420. See patch posted:; http://sourceforge.net/mailarchive/forum.php?; thread_id=9412916&forum_id=47190. This will be fixed in a 2.0.1 release. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/509#issuecomment-281776320
https://github.com/openbabel/openbabel/issues/509#issuecomment-281776320:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. See patch posted:; http://sourceforge.net/mailarchive/forum.php?; thread_id=9412916&forum_id=47190. This will be fixed in a 2.0.1 release. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/509#issuecomment-281776320
https://github.com/openbabel/openbabel/issues/509#issuecomment-281776321:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/509#issuecomment-281776321
https://github.com/openbabel/openbabel/issues/510#issuecomment-281776337:50,Availability,down,down,50,"Logged In: YES ; user_id=1391954. I've tracked it down to ProcessOneStructure() in GetINCHI(); in inchi_dll.c. After ProcessOneStructure() the InChI in output_file->pStr; is already truncated. But from there, I'm out of my league... Original comment by: @ergo70",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/510#issuecomment-281776337
https://github.com/openbabel/openbabel/issues/510#issuecomment-281776337:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1391954. I've tracked it down to ProcessOneStructure() in GetINCHI(); in inchi_dll.c. After ProcessOneStructure() the InChI in output_file->pStr; is already truncated. But from there, I'm out of my league... Original comment by: @ergo70",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/510#issuecomment-281776337
https://github.com/openbabel/openbabel/issues/510#issuecomment-281776338:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1391954. Hm, it seems that the bond stereo information of the; original Molfile gets lost on the way throug OpenBabel. Without bond stereo, I get the same InChI from the IUPAC; tool and babel.exe. I can't find any documentation about stereo handling during; conversion, so I would consider this either a bug in; OpenBabel or in the documentation. Original comment by: @ergo70",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/510#issuecomment-281776338
https://github.com/openbabel/openbabel/issues/510#issuecomment-281776340:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. This is now fixed in the development SVN trunk, 1837 or later. The fix will go into 2.1.0b7 and of course 2.1. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/510#issuecomment-281776340
https://github.com/openbabel/openbabel/issues/510#issuecomment-281776341:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539; Originator: NO. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/510#issuecomment-281776341
https://github.com/openbabel/openbabel/issues/1444#issuecomment-281810326:282,Availability,avail,available,282,"Logged In: YES ; user_id=1384550. Hi I came across this recently, would it be possible to include this in ; openBabel?; http://bioweb.ucr.edu/ChemMine/Documents/README.php; http://bonsai.ims.u-tokyo.ac.jp/~mdehoon/software/cluster/software.htm; ""The open source clustering software available here implement the most ; commonly used clustering methods for gene expression data analysis. The ; clustering methods can be used in several ways. Cluster 3.0 provides a ; Graphical User Interface to access to the clustering routines. It is available for ; Windows, Mac OS X, and Linux/Unix. Python users can access the clustering ; routines by using Pycluster, which is an extension module to Python. People ; that want to make use of the clustering algorithms in their own C, C++, or ; Fortran programs can download the source code of the C Clustering Library."". Original comment by: chris_swa",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1444#issuecomment-281810326
https://github.com/openbabel/openbabel/issues/1444#issuecomment-281810326:534,Availability,avail,available,534,"Logged In: YES ; user_id=1384550. Hi I came across this recently, would it be possible to include this in ; openBabel?; http://bioweb.ucr.edu/ChemMine/Documents/README.php; http://bonsai.ims.u-tokyo.ac.jp/~mdehoon/software/cluster/software.htm; ""The open source clustering software available here implement the most ; commonly used clustering methods for gene expression data analysis. The ; clustering methods can be used in several ways. Cluster 3.0 provides a ; Graphical User Interface to access to the clustering routines. It is available for ; Windows, Mac OS X, and Linux/Unix. Python users can access the clustering ; routines by using Pycluster, which is an extension module to Python. People ; that want to make use of the clustering algorithms in their own C, C++, or ; Fortran programs can download the source code of the C Clustering Library."". Original comment by: chris_swa",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1444#issuecomment-281810326
https://github.com/openbabel/openbabel/issues/1444#issuecomment-281810326:802,Availability,down,download,802,"Logged In: YES ; user_id=1384550. Hi I came across this recently, would it be possible to include this in ; openBabel?; http://bioweb.ucr.edu/ChemMine/Documents/README.php; http://bonsai.ims.u-tokyo.ac.jp/~mdehoon/software/cluster/software.htm; ""The open source clustering software available here implement the most ; commonly used clustering methods for gene expression data analysis. The ; clustering methods can be used in several ways. Cluster 3.0 provides a ; Graphical User Interface to access to the clustering routines. It is available for ; Windows, Mac OS X, and Linux/Unix. Python users can access the clustering ; routines by using Pycluster, which is an extension module to Python. People ; that want to make use of the clustering algorithms in their own C, C++, or ; Fortran programs can download the source code of the C Clustering Library."". Original comment by: chris_swa",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1444#issuecomment-281810326
https://github.com/openbabel/openbabel/issues/1444#issuecomment-281810326:480,Integrability,Interface,Interface,480,"Logged In: YES ; user_id=1384550. Hi I came across this recently, would it be possible to include this in ; openBabel?; http://bioweb.ucr.edu/ChemMine/Documents/README.php; http://bonsai.ims.u-tokyo.ac.jp/~mdehoon/software/cluster/software.htm; ""The open source clustering software available here implement the most ; commonly used clustering methods for gene expression data analysis. The ; clustering methods can be used in several ways. Cluster 3.0 provides a ; Graphical User Interface to access to the clustering routines. It is available for ; Windows, Mac OS X, and Linux/Unix. Python users can access the clustering ; routines by using Pycluster, which is an extension module to Python. People ; that want to make use of the clustering algorithms in their own C, C++, or ; Fortran programs can download the source code of the C Clustering Library."". Original comment by: chris_swa",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1444#issuecomment-281810326
https://github.com/openbabel/openbabel/issues/1444#issuecomment-281810326:518,Integrability,rout,routines,518,"Logged In: YES ; user_id=1384550. Hi I came across this recently, would it be possible to include this in ; openBabel?; http://bioweb.ucr.edu/ChemMine/Documents/README.php; http://bonsai.ims.u-tokyo.ac.jp/~mdehoon/software/cluster/software.htm; ""The open source clustering software available here implement the most ; commonly used clustering methods for gene expression data analysis. The ; clustering methods can be used in several ways. Cluster 3.0 provides a ; Graphical User Interface to access to the clustering routines. It is available for ; Windows, Mac OS X, and Linux/Unix. Python users can access the clustering ; routines by using Pycluster, which is an extension module to Python. People ; that want to make use of the clustering algorithms in their own C, C++, or ; Fortran programs can download the source code of the C Clustering Library."". Original comment by: chris_swa",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1444#issuecomment-281810326
https://github.com/openbabel/openbabel/issues/1444#issuecomment-281810326:626,Integrability,rout,routines,626,"Logged In: YES ; user_id=1384550. Hi I came across this recently, would it be possible to include this in ; openBabel?; http://bioweb.ucr.edu/ChemMine/Documents/README.php; http://bonsai.ims.u-tokyo.ac.jp/~mdehoon/software/cluster/software.htm; ""The open source clustering software available here implement the most ; commonly used clustering methods for gene expression data analysis. The ; clustering methods can be used in several ways. Cluster 3.0 provides a ; Graphical User Interface to access to the clustering routines. It is available for ; Windows, Mac OS X, and Linux/Unix. Python users can access the clustering ; routines by using Pycluster, which is an extension module to Python. People ; that want to make use of the clustering algorithms in their own C, C++, or ; Fortran programs can download the source code of the C Clustering Library."". Original comment by: chris_swa",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1444#issuecomment-281810326
https://github.com/openbabel/openbabel/issues/1444#issuecomment-281810326:493,Security,access,access,493,"Logged In: YES ; user_id=1384550. Hi I came across this recently, would it be possible to include this in ; openBabel?; http://bioweb.ucr.edu/ChemMine/Documents/README.php; http://bonsai.ims.u-tokyo.ac.jp/~mdehoon/software/cluster/software.htm; ""The open source clustering software available here implement the most ; commonly used clustering methods for gene expression data analysis. The ; clustering methods can be used in several ways. Cluster 3.0 provides a ; Graphical User Interface to access to the clustering routines. It is available for ; Windows, Mac OS X, and Linux/Unix. Python users can access the clustering ; routines by using Pycluster, which is an extension module to Python. People ; that want to make use of the clustering algorithms in their own C, C++, or ; Fortran programs can download the source code of the C Clustering Library."". Original comment by: chris_swa",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1444#issuecomment-281810326
https://github.com/openbabel/openbabel/issues/1444#issuecomment-281810326:602,Security,access,access,602,"Logged In: YES ; user_id=1384550. Hi I came across this recently, would it be possible to include this in ; openBabel?; http://bioweb.ucr.edu/ChemMine/Documents/README.php; http://bonsai.ims.u-tokyo.ac.jp/~mdehoon/software/cluster/software.htm; ""The open source clustering software available here implement the most ; commonly used clustering methods for gene expression data analysis. The ; clustering methods can be used in several ways. Cluster 3.0 provides a ; Graphical User Interface to access to the clustering routines. It is available for ; Windows, Mac OS X, and Linux/Unix. Python users can access the clustering ; routines by using Pycluster, which is an extension module to Python. People ; that want to make use of the clustering algorithms in their own C, C++, or ; Fortran programs can download the source code of the C Clustering Library."". Original comment by: chris_swa",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1444#issuecomment-281810326
https://github.com/openbabel/openbabel/issues/1444#issuecomment-281810326:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1384550. Hi I came across this recently, would it be possible to include this in ; openBabel?; http://bioweb.ucr.edu/ChemMine/Documents/README.php; http://bonsai.ims.u-tokyo.ac.jp/~mdehoon/software/cluster/software.htm; ""The open source clustering software available here implement the most ; commonly used clustering methods for gene expression data analysis. The ; clustering methods can be used in several ways. Cluster 3.0 provides a ; Graphical User Interface to access to the clustering routines. It is available for ; Windows, Mac OS X, and Linux/Unix. Python users can access the clustering ; routines by using Pycluster, which is an extension module to Python. People ; that want to make use of the clustering algorithms in their own C, C++, or ; Fortran programs can download the source code of the C Clustering Library."". Original comment by: chris_swa",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1444#issuecomment-281810326
https://github.com/openbabel/openbabel/issues/1444#issuecomment-281810327:251,Modifiability,extend,extending,251,"Logged In: YES ; user_id=169818; Originator: NO. Thanks for the clustering links and I am more in favor of creating an appropriate output format based on fingerprints and/or molecular features. ; A comma or space delimited format should work, e.g. by extending obprop? Does anyone know the best input format for this cluster package?. Joerg. Original comment by: wegner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1444#issuecomment-281810327
https://github.com/openbabel/openbabel/issues/1444#issuecomment-281810327:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=169818; Originator: NO. Thanks for the clustering links and I am more in favor of creating an appropriate output format based on fingerprints and/or molecular features. ; A comma or space delimited format should work, e.g. by extending obprop? Does anyone know the best input format for this cluster package?. Joerg. Original comment by: wegner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1444#issuecomment-281810327
https://github.com/openbabel/openbabel/issues/1445#issuecomment-281810342:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420; Originator: NO. This is supported via the descriptor framework in 2.2. I'm marking this closed. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1445#issuecomment-281810342
https://github.com/openbabel/openbabel/issues/1446#issuecomment-281810376:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. This is a duplicate of the file format request PR#1764738; http://sourceforge.net/tracker/index.php?func=detail&aid=1764738&group_id=40728&atid=447448. Since this really belongs in format requests, I'm marking this closed as a duplicate. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1446#issuecomment-281810376
https://github.com/openbabel/openbabel/issues/1447#issuecomment-281810378:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Relabeling title. Not limited to pharmacophores -- and hard to define ""pharma"" ; molecules algorithmically. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1447#issuecomment-281810378
https://github.com/openbabel/openbabel/issues/1447#issuecomment-281810380:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420; Originator: NO. This is currently supported via the descriptor framework in 2.2. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1447#issuecomment-281810380
https://github.com/openbabel/openbabel/issues/1448#issuecomment-281810402:111,Availability,robust,robust,111,"Logged In: YES ; user_id=21420; Originator: NO. Thanks to Tim Vandermeersch, conformer searching exists and is robust in the 2.2 SVN trunk. This feature request is marked closed as being fixed. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1448#issuecomment-281810402
https://github.com/openbabel/openbabel/issues/1448#issuecomment-281810402:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. Thanks to Tim Vandermeersch, conformer searching exists and is robust in the 2.2 SVN trunk. This feature request is marked closed as being fixed. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1448#issuecomment-281810402
https://github.com/openbabel/openbabel/issues/1449#issuecomment-281810403:91,Energy Efficiency,charge,charges,91,"Logged In: YES ; user_id=21420. This would be a bug, as the current MOPAC reader does read charges from ; the output as partial charges. http://sourceforge.net/tracker/index.php?; func=detail&aid=660364&group_id=40728&atid=428740. Could you please e-mail me a test file or two?. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1449#issuecomment-281810403
https://github.com/openbabel/openbabel/issues/1449#issuecomment-281810403:128,Energy Efficiency,charge,charges,128,"Logged In: YES ; user_id=21420. This would be a bug, as the current MOPAC reader does read charges from ; the output as partial charges. http://sourceforge.net/tracker/index.php?; func=detail&aid=660364&group_id=40728&atid=428740. Could you please e-mail me a test file or two?. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1449#issuecomment-281810403
https://github.com/openbabel/openbabel/issues/1449#issuecomment-281810403:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. This would be a bug, as the current MOPAC reader does read charges from ; the output as partial charges. http://sourceforge.net/tracker/index.php?; func=detail&aid=660364&group_id=40728&atid=428740. Could you please e-mail me a test file or two?. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1449#issuecomment-281810403
https://github.com/openbabel/openbabel/issues/1449#issuecomment-281810403:260,Testability,test,test,260,"Logged In: YES ; user_id=21420. This would be a bug, as the current MOPAC reader does read charges from ; the output as partial charges. http://sourceforge.net/tracker/index.php?; func=detail&aid=660364&group_id=40728&atid=428740. Could you please e-mail me a test file or two?. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1449#issuecomment-281810403
https://github.com/openbabel/openbabel/issues/1449#issuecomment-281810406:0,Testability,Log,Logged,0,Logged In: YES ; user_id=850620. Turns out that he wasn't using the latest version of; OpenBabel. It works fine with OB2. (Egg on face). You can close this feature request. Noel. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1449#issuecomment-281810406
https://github.com/openbabel/openbabel/issues/1450#issuecomment-281810420:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I haven't tried compiling Open Babel with MinGW, but the following link looks ; interesting:. http://sebsauvage.net/python/mingw.html. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1450#issuecomment-281810420
https://github.com/openbabel/openbabel/issues/1450#issuecomment-281810421:125,Deployability,release,releases,125,"Logged In: YES ; user_id=21420; Originator: NO. As far as I can tell, Noel has added this feature with his new OBPython file releases for Windows:. http://sourceforge.net/project/showfiles.php?group_id=40728&package_id=215445. I'm marking this to be closed automatically in 2 weeks if there are no further comments.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1450#issuecomment-281810421
https://github.com/openbabel/openbabel/issues/1450#issuecomment-281810421:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. As far as I can tell, Noel has added this feature with his new OBPython file releases for Windows:. http://sourceforge.net/project/showfiles.php?group_id=40728&package_id=215445. I'm marking this to be closed automatically in 2 weeks if there are no further comments.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1450#issuecomment-281810421
https://github.com/openbabel/openbabel/issues/1450#issuecomment-281810423:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539; Originator: NO. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1450#issuecomment-281810423
https://github.com/openbabel/openbabel/issues/511#issuecomment-281776354:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. This is apparently not possible with the current automake / libtool. I will look ; into ways to handle it in the dlhandler_unix.cpp code itself. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/511#issuecomment-281776354
https://github.com/openbabel/openbabel/issues/511#issuecomment-281776356:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/511#issuecomment-281776356
https://github.com/openbabel/openbabel/issues/512#issuecomment-281776364:162,Integrability,wrap,wrapper,162,"Logged In: YES ; user_id=21420. Thanks for the bug report -- obviously if there's a crash, it's because the ; underlying C++ code is dead, not just the scripting wrapper. :-). This one didn't take long to debug after that report. OBConversion::ReadFile() ; was checking pOutFormat (which was a NULL pointer) rather than pInFormat. Fixed in the CVS version shortly. I can send you a snapshot of the 2.0.1 code ; if you like. Thanks!; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/512#issuecomment-281776364
https://github.com/openbabel/openbabel/issues/512#issuecomment-281776364:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Thanks for the bug report -- obviously if there's a crash, it's because the ; underlying C++ code is dead, not just the scripting wrapper. :-). This one didn't take long to debug after that report. OBConversion::ReadFile() ; was checking pOutFormat (which was a NULL pointer) rather than pInFormat. Fixed in the CVS version shortly. I can send you a snapshot of the 2.0.1 code ; if you like. Thanks!; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/512#issuecomment-281776364
https://github.com/openbabel/openbabel/issues/512#issuecomment-281776365:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/512#issuecomment-281776365
https://github.com/openbabel/openbabel/issues/513#issuecomment-281776372:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. Fixed as suggested. Now in CVS HEAD and 2.0.x branch. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/513#issuecomment-281776372
https://github.com/openbabel/openbabel/issues/514#issuecomment-281776393:0,Testability,test,test,0,test file of 40k smiles. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776393
https://github.com/openbabel/openbabel/issues/514#issuecomment-281776395:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I think there are two different issues here. The first is a memory leak -- that's ; when a program runs for a while and continues to consume more and more ; memory. (e.g., after reading 1 SMILES, it consumes 1MB, but after 100,000 ; smiles, it consumes 140MB). The second is large memory use that does not ""leak"" or continue to increase ; over time. I'm pretty confident that what you describe falls in the second category. Craig ; and I have found a few *small* leaks, but nothing that would consume 140MB ; of leaks. I will check for leaks with your test file, thanks.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776395
https://github.com/openbabel/openbabel/issues/514#issuecomment-281776395:584,Testability,test,test,584,"Logged In: YES ; user_id=21420. I think there are two different issues here. The first is a memory leak -- that's ; when a program runs for a while and continues to consume more and more ; memory. (e.g., after reading 1 SMILES, it consumes 1MB, but after 100,000 ; smiles, it consumes 140MB). The second is large memory use that does not ""leak"" or continue to increase ; over time. I'm pretty confident that what you describe falls in the second category. Craig ; and I have found a few *small* leaks, but nothing that would consume 140MB ; of leaks. I will check for leaks with your test file, thanks.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776395
https://github.com/openbabel/openbabel/issues/514#issuecomment-281776397:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I'm marking this closed pending further comment. I have seen no concrete ; evidence of significant memory leaks in 2.0.x and I've been looking. Clearly we can do much to improve memory use, which is underway in the 2.1 ; development. But this goes more as a ""feature request"" than a bug report -- ; there isn't a bug to fix, but rather a variety of things we need to do to ; improve memory usage. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776397
https://github.com/openbabel/openbabel/issues/514#issuecomment-281776397:176,Usability,Clear,Clearly,176,"Logged In: YES ; user_id=21420. I'm marking this closed pending further comment. I have seen no concrete ; evidence of significant memory leaks in 2.0.x and I've been looking. Clearly we can do much to improve memory use, which is underway in the 2.1 ; development. But this goes more as a ""feature request"" than a bug report -- ; there isn't a bug to fix, but rather a variety of things we need to do to ; improve memory usage. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776397
https://github.com/openbabel/openbabel/issues/514#issuecomment-281776399:1134,Availability,avail,available,1134,"Logged In: NO . Hi,. I have been exploring the memory usage of the windows; version of openbabel described above. I have used the; Windows task manager to follow the memory usage when; openbabel is working on the example file I posted earlier. The results are listed at the end of this post. As you can; see, the memory used by open babel increases steadily over; time. When fitting a linear regression line through the cpu; time/memory usage points you obtain the following line:. memory usage [k] = 5622 + 1198*(CPU Time[s]). As babel took about 113s to work through the 40k smiles,; i.e. ~354 molecules/s and the regression graph shows that; 1198k additional memory is used per sec, this implies that; each molecule uses an additional 1198/354 = 3.4k of memory. I have repeated this using other output formats (in case it; was only the fingerprint format causing this). For example:. babel example.smi -osdf example.sdf. The same results apply, i.e. the amount of memory used by; openbabel is contantly increased. I have also tried this with files containing more smiles,; and found that this continues as long as there is memory; available. eg after 15 minutes, the VM size is 1,391,720k. Surely this counts as a memory leak?. Regards. Ian. I_P_S@hotmail.com. openbabel-2.0.0awins memory usage on example.smi:. CPU [s]	Mem usage	Peak mem	VM size; 6	11860	11860	10424; 10	16408	16408	14980; 17	25620	26008	24528; 24	34328	34328	32916; 27	38116	38116	37196; 34	46612	46612	45380; 41	55336	55440	54696; 44	59436	59436	58628; 51	67328	67328	66236; 58	75872	76308	74516; 61	79776	81384	79632; 68	87220	87220	86780; 75	95728	95728	94644; 79	99756	99756	98856; 86	107812	107812	106584; 89	112328	112952	110948; 96	120176	102176	120520; 103	128400	128400	128416; 106	132172	132172	132036; 113	134432	139936	132820. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776399
https://github.com/openbabel/openbabel/issues/514#issuecomment-281776399:0,Testability,Log,Logged,0,"Logged In: NO . Hi,. I have been exploring the memory usage of the windows; version of openbabel described above. I have used the; Windows task manager to follow the memory usage when; openbabel is working on the example file I posted earlier. The results are listed at the end of this post. As you can; see, the memory used by open babel increases steadily over; time. When fitting a linear regression line through the cpu; time/memory usage points you obtain the following line:. memory usage [k] = 5622 + 1198*(CPU Time[s]). As babel took about 113s to work through the 40k smiles,; i.e. ~354 molecules/s and the regression graph shows that; 1198k additional memory is used per sec, this implies that; each molecule uses an additional 1198/354 = 3.4k of memory. I have repeated this using other output formats (in case it; was only the fingerprint format causing this). For example:. babel example.smi -osdf example.sdf. The same results apply, i.e. the amount of memory used by; openbabel is contantly increased. I have also tried this with files containing more smiles,; and found that this continues as long as there is memory; available. eg after 15 minutes, the VM size is 1,391,720k. Surely this counts as a memory leak?. Regards. Ian. I_P_S@hotmail.com. openbabel-2.0.0awins memory usage on example.smi:. CPU [s]	Mem usage	Peak mem	VM size; 6	11860	11860	10424; 10	16408	16408	14980; 17	25620	26008	24528; 24	34328	34328	32916; 27	38116	38116	37196; 34	46612	46612	45380; 41	55336	55440	54696; 44	59436	59436	58628; 51	67328	67328	66236; 58	75872	76308	74516; 61	79776	81384	79632; 68	87220	87220	86780; 75	95728	95728	94644; 79	99756	99756	98856; 86	107812	107812	106584; 89	112328	112952	110948; 96	120176	102176	120520; 103	128400	128400	128416; 106	132172	132172	132036; 113	134432	139936	132820. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776399
https://github.com/openbabel/openbabel/issues/514#issuecomment-281776400:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776400
https://github.com/openbabel/openbabel/issues/514#issuecomment-281776401:0,Testability,Log,Logged,0,Logged In: NO . Interesting decision by the Tracker System. I responded with detailed evidence on 2006-03-16 following; the comments posted on 2006-03-14. Why was this ignored?. Ian. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776401
https://github.com/openbabel/openbabel/issues/514#issuecomment-281776402:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I don't know why the tracker closed the thread -- indeed I wasn't notified that ; you posted a comment. Sorry about that. Out of curiosity, is the memory use increase (e.g., the regression line) ; somewhat similar for SDF as it is for fingerprint or other formats? In other ; words, it sounds like the leak is in the core library, rather than one particular ; format. That's helpful information. I'm still hunting--although it's weird that valgrind doesn't seem to find the ; leak. Thanks for all the help!; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776402
https://github.com/openbabel/openbabel/issues/514#issuecomment-281776403:87,Availability,down,down,87,"Logged In: YES ; user_id=21420. Ian,. Thanks for all the feedback. I was able to track down the largest source of ; memory use in multi-molecule files. The developer CVS is down at the ; moment, but I'll make sure the fix is in 2.0.1. I'm not sure this will solve all ; memory issues, but it certainly should solve the ""slope"" you found. Many thanks for the persistent feedback -- it wasn't a ""leak"" but more a ; ""stupid memory use"" issue that I eventually was able to find with your ; example file. Best,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776403
https://github.com/openbabel/openbabel/issues/514#issuecomment-281776403:173,Availability,down,down,173,"Logged In: YES ; user_id=21420. Ian,. Thanks for all the feedback. I was able to track down the largest source of ; memory use in multi-molecule files. The developer CVS is down at the ; moment, but I'll make sure the fix is in 2.0.1. I'm not sure this will solve all ; memory issues, but it certainly should solve the ""slope"" you found. Many thanks for the persistent feedback -- it wasn't a ""leak"" but more a ; ""stupid memory use"" issue that I eventually was able to find with your ; example file. Best,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776403
https://github.com/openbabel/openbabel/issues/514#issuecomment-281776403:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Ian,. Thanks for all the feedback. I was able to track down the largest source of ; memory use in multi-molecule files. The developer CVS is down at the ; moment, but I'll make sure the fix is in 2.0.1. I'm not sure this will solve all ; memory issues, but it certainly should solve the ""slope"" you found. Many thanks for the persistent feedback -- it wasn't a ""leak"" but more a ; ""stupid memory use"" issue that I eventually was able to find with your ; example file. Best,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776403
https://github.com/openbabel/openbabel/issues/514#issuecomment-281776403:57,Usability,feedback,feedback,57,"Logged In: YES ; user_id=21420. Ian,. Thanks for all the feedback. I was able to track down the largest source of ; memory use in multi-molecule files. The developer CVS is down at the ; moment, but I'll make sure the fix is in 2.0.1. I'm not sure this will solve all ; memory issues, but it certainly should solve the ""slope"" you found. Many thanks for the persistent feedback -- it wasn't a ""leak"" but more a ; ""stupid memory use"" issue that I eventually was able to find with your ; example file. Best,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776403
https://github.com/openbabel/openbabel/issues/514#issuecomment-281776403:369,Usability,feedback,feedback,369,"Logged In: YES ; user_id=21420. Ian,. Thanks for all the feedback. I was able to track down the largest source of ; memory use in multi-molecule files. The developer CVS is down at the ; moment, but I'll make sure the fix is in 2.0.1. I'm not sure this will solve all ; memory issues, but it certainly should solve the ""slope"" you found. Many thanks for the persistent feedback -- it wasn't a ""leak"" but more a ; ""stupid memory use"" issue that I eventually was able to find with your ; example file. Best,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776403
https://github.com/openbabel/openbabel/issues/514#issuecomment-281776404:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776404
https://github.com/openbabel/openbabel/issues/514#issuecomment-281776406:0,Testability,Log,Logged,0,"Logged In: NO . I experiment the problem of memory leak when I work with sdf; files of 400MB or files with thousands of smiles.; I don't know C++, but I think the problem is in the; OBConversion class. When I measure the memory used by a subprogram where I have; created an object of this class, the result is that it; leaves data in memory after closing the subprogram. And if I; don't use this class, the memory after calling the; subprogram is 0. I send you the tiny perl program used to take this; conclusions, each '#number' tell you the memory usage. Thanks for all. #!/usr/bin/perl -W. use Chemistry::OpenBabel;; use Memchmark qw(memchmark);;; use strict;. my $mem=memchmark {main_program()};; print ""\n\nMemoria usada: $mem\n\n"";. exit;. sub main_program {; 	my; $molec=""C(Nc1ccc([S]([N]2[CH](c3cnccc3)CCCC2)(=O)=O)cc1)(c1c(Br)cccc1)=O"";; 	my $smarts_pattern=""[S]"";. 	#0; 	my $obConversion=new Chemistry::OpenBabel::OBConversion;; 	#2727936; 	my $obSmartsPattern = new; Chemistry::OpenBabel::OBSmartsPattern;; 	#2727936; 	$obConversion->SetInFormat(""sdf"");; 	#2727936; 	my $obMol=new Chemistry::OpenBabel::OBMol;; 	#2727936; 	$obConversion->ReadString($obMol,$molec);; 	#2863104; 	$obMol->ConvertDativeBonds();; 	#2863104; 	$obSmartsPattern->Init(""$smarts_pattern"");; 	#2863104; 	if ($obSmartsPattern->Match($obMol)) {; 		print ""\nOK\t$molec\n"";	; 	}; 	#2863104; 	$obMol->Clear();; 	#2863104. }. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776406
https://github.com/openbabel/openbabel/issues/514#issuecomment-281776406:1380,Usability,Clear,Clear,1380,"Logged In: NO . I experiment the problem of memory leak when I work with sdf; files of 400MB or files with thousands of smiles.; I don't know C++, but I think the problem is in the; OBConversion class. When I measure the memory used by a subprogram where I have; created an object of this class, the result is that it; leaves data in memory after closing the subprogram. And if I; don't use this class, the memory after calling the; subprogram is 0. I send you the tiny perl program used to take this; conclusions, each '#number' tell you the memory usage. Thanks for all. #!/usr/bin/perl -W. use Chemistry::OpenBabel;; use Memchmark qw(memchmark);;; use strict;. my $mem=memchmark {main_program()};; print ""\n\nMemoria usada: $mem\n\n"";. exit;. sub main_program {; 	my; $molec=""C(Nc1ccc([S]([N]2[CH](c3cnccc3)CCCC2)(=O)=O)cc1)(c1c(Br)cccc1)=O"";; 	my $smarts_pattern=""[S]"";. 	#0; 	my $obConversion=new Chemistry::OpenBabel::OBConversion;; 	#2727936; 	my $obSmartsPattern = new; Chemistry::OpenBabel::OBSmartsPattern;; 	#2727936; 	$obConversion->SetInFormat(""sdf"");; 	#2727936; 	my $obMol=new Chemistry::OpenBabel::OBMol;; 	#2727936; 	$obConversion->ReadString($obMol,$molec);; 	#2863104; 	$obMol->ConvertDativeBonds();; 	#2863104; 	$obSmartsPattern->Init(""$smarts_pattern"");; 	#2863104; 	if ($obSmartsPattern->Match($obMol)) {; 		print ""\nOK\t$molec\n"";	; 	}; 	#2863104; 	$obMol->Clear();; 	#2863104. }. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776406
https://github.com/openbabel/openbabel/issues/515#issuecomment-281776423:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I should comment that the correct sequence should be:. Ala-Gly-Pro-Ala-Cys-Pro-Gly-Ala-Ala-Ala. (Yes, I said it was a random sequence!). Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/515#issuecomment-281776423
https://github.com/openbabel/openbabel/issues/515#issuecomment-281776425:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. The fix for this is now in the development trunk of SVN. The main problem was ; that the code searched for the valence of atoms, but ignored hydrogen atoms -- ; when explicit hydrogens were present, the atoms did not match the valence ; constraints. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/515#issuecomment-281776425
https://github.com/openbabel/openbabel/issues/516#issuecomment-281776433:366,Security,confidential,confidential,366,"Logged In: YES ; user_id=21420. Having a complete list of the aromatic rings which are incorrectly de-; aromatized would be very helpful. Pointing to one triazole ring doesn't really ; help -- we can fix this one system and still not solve your ""some aromatic ; rings."". Is this the only one, or can you give a more complete list. (E-mail me privately ; if you have confidential data.). Best,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/516#issuecomment-281776433
https://github.com/openbabel/openbabel/issues/516#issuecomment-281776433:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Having a complete list of the aromatic rings which are incorrectly de-; aromatized would be very helpful. Pointing to one triazole ring doesn't really ; help -- we can fix this one system and still not solve your ""some aromatic ; rings."". Is this the only one, or can you give a more complete list. (E-mail me privately ; if you have confidential data.). Best,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/516#issuecomment-281776433
https://github.com/openbabel/openbabel/issues/516#issuecomment-281776434:0,Testability,Log,Logged,0,"Logged In: NO . Hi, Geoff,. Thank you for your response. I give more ring systems which are incorrectly dearomatized; by Open Babel version 2.0.x. [test/attype.00.smi]; c1n[nH]c(=S)n1; O=c1nccc3nc4oc5ccccc5c(=O)c4cc13; c1nc2sccn2c1. [another example]; c1[n+]cnc2ncnc12; c1onc(-c2ccccc2Cl)c1; c1ccc2[nH]c3ccc4cc[n+]cc4c3c2c1; n1c2ccccc2c3c4C(=O)NCc4c5c6ccccc6nc5c13; c1c(C)c2cc3[n-]c(cc4nc(cc5[n-]c(cc1n2)c(C)c5C=C)c(C)c4CCC(O)=O)c(CCC(O)=O)c3; c2c3ccc(n3)cc5ccc([nH]5)cc7ccc([nH]7)cc9ccc2n9. Please try these test set. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/516#issuecomment-281776434
https://github.com/openbabel/openbabel/issues/516#issuecomment-281776434:148,Testability,test,test,148,"Logged In: NO . Hi, Geoff,. Thank you for your response. I give more ring systems which are incorrectly dearomatized; by Open Babel version 2.0.x. [test/attype.00.smi]; c1n[nH]c(=S)n1; O=c1nccc3nc4oc5ccccc5c(=O)c4cc13; c1nc2sccn2c1. [another example]; c1[n+]cnc2ncnc12; c1onc(-c2ccccc2Cl)c1; c1ccc2[nH]c3ccc4cc[n+]cc4c3c2c1; n1c2ccccc2c3c4C(=O)NCc4c5c6ccccc6nc5c13; c1c(C)c2cc3[n-]c(cc4nc(cc5[n-]c(cc1n2)c(C)c5C=C)c(C)c4CCC(O)=O)c(CCC(O)=O)c3; c2c3ccc(n3)cc5ccc([nH]5)cc7ccc([nH]7)cc9ccc2n9. Please try these test set. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/516#issuecomment-281776434
https://github.com/openbabel/openbabel/issues/516#issuecomment-281776434:509,Testability,test,test,509,"Logged In: NO . Hi, Geoff,. Thank you for your response. I give more ring systems which are incorrectly dearomatized; by Open Babel version 2.0.x. [test/attype.00.smi]; c1n[nH]c(=S)n1; O=c1nccc3nc4oc5ccccc5c(=O)c4cc13; c1nc2sccn2c1. [another example]; c1[n+]cnc2ncnc12; c1onc(-c2ccccc2Cl)c1; c1ccc2[nH]c3ccc4cc[n+]cc4c3c2c1; n1c2ccccc2c3c4C(=O)NCc4c5c6ccccc6nc5c13; c1c(C)c2cc3[n-]c(cc4nc(cc5[n-]c(cc1n2)c(C)c5C=C)c(C)c4CCC(O)=O)c(CCC(O)=O)c3; c2c3ccc(n3)cc5ccc([nH]5)cc7ccc([nH]7)cc9ccc2n9. Please try these test set. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/516#issuecomment-281776434
https://github.com/openbabel/openbabel/issues/516#issuecomment-281776436:0,Testability,Log,Logged,0,"Logged In: NO . Hi, Geoff,. Thank you for your response. I give more ring systems which are incorrectly dearomatized; by Open Babel version 2.0.x. [test/attype.00.smi]; c1n[nH]c(=S)n1; O=c1nccc3nc4oc5ccccc5c(=O)c4cc13; c1nc2sccn2c1. [another example]; c1[n+]cnc2ncnc12; c1onc(-c2ccccc2Cl)c1; c1ccc2[nH]c3ccc4cc[n+]cc4c3c2c1; n1c2ccccc2c3c4C(=O)NCc4c5c6ccccc6nc5c13; c1c(C)c2cc3[n-]c(cc4nc(cc5[n-]c(cc1n2)c(C)c5C=C)c(C)c4CCC(O)=O)c(CCC(O)=O)c3; c2c3ccc(n3)cc5ccc([nH]5)cc7ccc([nH]7)cc9ccc2n9. Please try these test set. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/516#issuecomment-281776436
https://github.com/openbabel/openbabel/issues/516#issuecomment-281776436:148,Testability,test,test,148,"Logged In: NO . Hi, Geoff,. Thank you for your response. I give more ring systems which are incorrectly dearomatized; by Open Babel version 2.0.x. [test/attype.00.smi]; c1n[nH]c(=S)n1; O=c1nccc3nc4oc5ccccc5c(=O)c4cc13; c1nc2sccn2c1. [another example]; c1[n+]cnc2ncnc12; c1onc(-c2ccccc2Cl)c1; c1ccc2[nH]c3ccc4cc[n+]cc4c3c2c1; n1c2ccccc2c3c4C(=O)NCc4c5c6ccccc6nc5c13; c1c(C)c2cc3[n-]c(cc4nc(cc5[n-]c(cc1n2)c(C)c5C=C)c(C)c4CCC(O)=O)c(CCC(O)=O)c3; c2c3ccc(n3)cc5ccc([nH]5)cc7ccc([nH]7)cc9ccc2n9. Please try these test set. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/516#issuecomment-281776436
https://github.com/openbabel/openbabel/issues/516#issuecomment-281776436:509,Testability,test,test,509,"Logged In: NO . Hi, Geoff,. Thank you for your response. I give more ring systems which are incorrectly dearomatized; by Open Babel version 2.0.x. [test/attype.00.smi]; c1n[nH]c(=S)n1; O=c1nccc3nc4oc5ccccc5c(=O)c4cc13; c1nc2sccn2c1. [another example]; c1[n+]cnc2ncnc12; c1onc(-c2ccccc2Cl)c1; c1ccc2[nH]c3ccc4cc[n+]cc4c3c2c1; n1c2ccccc2c3c4C(=O)NCc4c5c6ccccc6nc5c13; c1c(C)c2cc3[n-]c(cc4nc(cc5[n-]c(cc1n2)c(C)c5C=C)c(C)c4CCC(O)=O)c(CCC(O)=O)c3; c2c3ccc(n3)cc5ccc([nH]5)cc7ccc([nH]7)cc9ccc2n9. Please try these test set. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/516#issuecomment-281776436
https://github.com/openbabel/openbabel/issues/516#issuecomment-281776439:0,Testability,Log,Logged,0,"Logged In: NO . Hi, Geoff,. Thank you for your response. I give more ring systems which are incorrectly dearomatized; by Open Babel version 2.0.x. [test/attype.00.smi]; c1n[nH]c(=S)n1; O=c1nccc3nc4oc5ccccc5c(=O)c4cc13; c1nc2sccn2c1. [another example]; c1[n+]cnc2ncnc12; c1onc(-c2ccccc2Cl)c1; c1ccc2[nH]c3ccc4cc[n+]cc4c3c2c1; n1c2ccccc2c3c4C(=O)NCc4c5c6ccccc6nc5c13; c1c(C)c2cc3[n-]c(cc4nc(cc5[n-]c(cc1n2)c(C)c5C=C)c(C)c4CCC(O)=O)c(CCC(O)=O)c3; c2c3ccc(n3)cc5ccc([nH]5)cc7ccc([nH]7)cc9ccc2n9. Please try these test set. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/516#issuecomment-281776439
https://github.com/openbabel/openbabel/issues/516#issuecomment-281776439:148,Testability,test,test,148,"Logged In: NO . Hi, Geoff,. Thank you for your response. I give more ring systems which are incorrectly dearomatized; by Open Babel version 2.0.x. [test/attype.00.smi]; c1n[nH]c(=S)n1; O=c1nccc3nc4oc5ccccc5c(=O)c4cc13; c1nc2sccn2c1. [another example]; c1[n+]cnc2ncnc12; c1onc(-c2ccccc2Cl)c1; c1ccc2[nH]c3ccc4cc[n+]cc4c3c2c1; n1c2ccccc2c3c4C(=O)NCc4c5c6ccccc6nc5c13; c1c(C)c2cc3[n-]c(cc4nc(cc5[n-]c(cc1n2)c(C)c5C=C)c(C)c4CCC(O)=O)c(CCC(O)=O)c3; c2c3ccc(n3)cc5ccc([nH]5)cc7ccc([nH]7)cc9ccc2n9. Please try these test set. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/516#issuecomment-281776439
https://github.com/openbabel/openbabel/issues/516#issuecomment-281776439:509,Testability,test,test,509,"Logged In: NO . Hi, Geoff,. Thank you for your response. I give more ring systems which are incorrectly dearomatized; by Open Babel version 2.0.x. [test/attype.00.smi]; c1n[nH]c(=S)n1; O=c1nccc3nc4oc5ccccc5c(=O)c4cc13; c1nc2sccn2c1. [another example]; c1[n+]cnc2ncnc12; c1onc(-c2ccccc2Cl)c1; c1ccc2[nH]c3ccc4cc[n+]cc4c3c2c1; n1c2ccccc2c3c4C(=O)NCc4c5c6ccccc6nc5c13; c1c(C)c2cc3[n-]c(cc4nc(cc5[n-]c(cc1n2)c(C)c5C=C)c(C)c4CCC(O)=O)c(CCC(O)=O)c3; c2c3ccc(n3)cc5ccc([nH]5)cc7ccc([nH]7)cc9ccc2n9. Please try these test set. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/516#issuecomment-281776439
https://github.com/openbabel/openbabel/issues/516#issuecomment-281776440:239,Energy Efficiency,charge,charge,239,"Logged In: YES ; user_id=21420. I'm not sure this is a good candidate to fix for 2.0.1. There seem to be a few problems. One is that the molecules you present all ; appear to have 4-bonded aromatic nitrogen. This implicitly has a formal ; charge of +1, which isn't correctly set. Another is that the current aromaticity patterns do not allow such nitrogens ; to be marked as aromatic. Finally, I think the kekulization routines do not properly handle 4-bonded ; aromatic N+. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/516#issuecomment-281776440
https://github.com/openbabel/openbabel/issues/516#issuecomment-281776440:419,Integrability,rout,routines,419,"Logged In: YES ; user_id=21420. I'm not sure this is a good candidate to fix for 2.0.1. There seem to be a few problems. One is that the molecules you present all ; appear to have 4-bonded aromatic nitrogen. This implicitly has a formal ; charge of +1, which isn't correctly set. Another is that the current aromaticity patterns do not allow such nitrogens ; to be marked as aromatic. Finally, I think the kekulization routines do not properly handle 4-bonded ; aromatic N+. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/516#issuecomment-281776440
https://github.com/openbabel/openbabel/issues/516#issuecomment-281776440:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I'm not sure this is a good candidate to fix for 2.0.1. There seem to be a few problems. One is that the molecules you present all ; appear to have 4-bonded aromatic nitrogen. This implicitly has a formal ; charge of +1, which isn't correctly set. Another is that the current aromaticity patterns do not allow such nitrogens ; to be marked as aromatic. Finally, I think the kekulization routines do not properly handle 4-bonded ; aromatic N+. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/516#issuecomment-281776440
https://github.com/openbabel/openbabel/issues/516#issuecomment-281776442:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1444119. Here is another case that is probably the same bug. This is; particularly bad because it loses aromaticity on a simple; benzene ring. The SD File is parsed correctly can converted; to a SMILES, but when you re-parse the SMILES that OpenBabel; already produced, you get garbage. See the SD file below; (call it ""foo.sdf""), and use it for this test:. $ babel /tmp/foo.sdf -o smi ; c1(n(c2c(c(o1)=O)cccc2)CC(=O)OCC)=O; 1 molecule converted; [M6:cj] /emi/src/docs/patents $ babel /tmp/foo.sdf -o smi |; babel -i smi -o smi; 1 molecule converted; C1(OC(C2C(N1CC(=O)OCC)CCCC2)=O)=O; 1 molecule converted. ----------------------. OpenBabel05020621282D. 18 19 0 0 0 0 0 0 0 0999 V2000; 1.3509 0.4120 0.0000 C 0 0 0 0 0; 0.6384 -0.0005 0.0000 N 0 0 0 0 0; 1.3509 1.2370 0.0000 O 0 0 0 0 0; 0.6384 1.6537 0.0000 C 0 0 0 0 0; -0.0741 1.2370 0.0000 C 0 0 0 0 0; -0.0783 0.4120 0.0000 C 0 0 0 0 0; 0.6342 -0.8255 0.0000 C 0 0 0 0 0; 2.0634 -0.0005 0.0000 O 0 0 0 0 0; -0.0866 -1.2380 0.0000 C 0 0 0 0 0; 0.6384 2.4787 0.0000 O 0 0 0 0 0; -0.7991 -0.8255 0.0000 O 0 0 0 0 0; -0.7908 1.6495 0.0000 C 0 0 0 0 0; -0.0866 -2.0630 0.0000 O 0 0 0 0 0; -0.7908 -0.0005 0.0000 C 0 0 0 0 0; -0.7991 -2.4755 0.0000 C 0 0 0 0 0; -1.5033 1.2370 0.0000 C 0 0 0 0 0; -1.5033 0.4120 0.0000 C 0 0 0 0 0; -0.8033 -3.3005 0.0000 C 0 0 0 0 0; 2 1 1 0 0 0; 3 1 1 0 0 0; 8 1 2 0 0 0; 6 2 1 0 0 0; 7 2 1 0 0 0; 4 3 1 0 0 0; 5 4 1 0 0 0; 10 4 2 0 0 0; 12 5 2 0 0 0; 6 5 1 0 0 0; 14 6 2 0 0 0; 9 7 1 0 0 0; 11 9 2 0 0 0; 13 9 1 0 0 0; 16 12 1 0 0 0; 15 13 1 0 0 0; 17 14 1 0 0 0; 18 15 1 0 0 0; 17 16 2 0 0 0; M END; $$$$; -------------------. Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/516#issuecomment-281776442
https://github.com/openbabel/openbabel/issues/516#issuecomment-281776442:376,Testability,test,test,376,"Logged In: YES ; user_id=1444119. Here is another case that is probably the same bug. This is; particularly bad because it loses aromaticity on a simple; benzene ring. The SD File is parsed correctly can converted; to a SMILES, but when you re-parse the SMILES that OpenBabel; already produced, you get garbage. See the SD file below; (call it ""foo.sdf""), and use it for this test:. $ babel /tmp/foo.sdf -o smi ; c1(n(c2c(c(o1)=O)cccc2)CC(=O)OCC)=O; 1 molecule converted; [M6:cj] /emi/src/docs/patents $ babel /tmp/foo.sdf -o smi |; babel -i smi -o smi; 1 molecule converted; C1(OC(C2C(N1CC(=O)OCC)CCCC2)=O)=O; 1 molecule converted. ----------------------. OpenBabel05020621282D. 18 19 0 0 0 0 0 0 0 0999 V2000; 1.3509 0.4120 0.0000 C 0 0 0 0 0; 0.6384 -0.0005 0.0000 N 0 0 0 0 0; 1.3509 1.2370 0.0000 O 0 0 0 0 0; 0.6384 1.6537 0.0000 C 0 0 0 0 0; -0.0741 1.2370 0.0000 C 0 0 0 0 0; -0.0783 0.4120 0.0000 C 0 0 0 0 0; 0.6342 -0.8255 0.0000 C 0 0 0 0 0; 2.0634 -0.0005 0.0000 O 0 0 0 0 0; -0.0866 -1.2380 0.0000 C 0 0 0 0 0; 0.6384 2.4787 0.0000 O 0 0 0 0 0; -0.7991 -0.8255 0.0000 O 0 0 0 0 0; -0.7908 1.6495 0.0000 C 0 0 0 0 0; -0.0866 -2.0630 0.0000 O 0 0 0 0 0; -0.7908 -0.0005 0.0000 C 0 0 0 0 0; -0.7991 -2.4755 0.0000 C 0 0 0 0 0; -1.5033 1.2370 0.0000 C 0 0 0 0 0; -1.5033 0.4120 0.0000 C 0 0 0 0 0; -0.8033 -3.3005 0.0000 C 0 0 0 0 0; 2 1 1 0 0 0; 3 1 1 0 0 0; 8 1 2 0 0 0; 6 2 1 0 0 0; 7 2 1 0 0 0; 4 3 1 0 0 0; 5 4 1 0 0 0; 10 4 2 0 0 0; 12 5 2 0 0 0; 6 5 1 0 0 0; 14 6 2 0 0 0; 9 7 1 0 0 0; 11 9 2 0 0 0; 13 9 1 0 0 0; 16 12 1 0 0 0; 15 13 1 0 0 0; 17 14 1 0 0 0; 18 15 1 0 0 0; 17 16 2 0 0 0; M END; $$$$; -------------------. Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/516#issuecomment-281776442
https://github.com/openbabel/openbabel/issues/516#issuecomment-281776442:146,Usability,simpl,simple,146,"Logged In: YES ; user_id=1444119. Here is another case that is probably the same bug. This is; particularly bad because it loses aromaticity on a simple; benzene ring. The SD File is parsed correctly can converted; to a SMILES, but when you re-parse the SMILES that OpenBabel; already produced, you get garbage. See the SD file below; (call it ""foo.sdf""), and use it for this test:. $ babel /tmp/foo.sdf -o smi ; c1(n(c2c(c(o1)=O)cccc2)CC(=O)OCC)=O; 1 molecule converted; [M6:cj] /emi/src/docs/patents $ babel /tmp/foo.sdf -o smi |; babel -i smi -o smi; 1 molecule converted; C1(OC(C2C(N1CC(=O)OCC)CCCC2)=O)=O; 1 molecule converted. ----------------------. OpenBabel05020621282D. 18 19 0 0 0 0 0 0 0 0999 V2000; 1.3509 0.4120 0.0000 C 0 0 0 0 0; 0.6384 -0.0005 0.0000 N 0 0 0 0 0; 1.3509 1.2370 0.0000 O 0 0 0 0 0; 0.6384 1.6537 0.0000 C 0 0 0 0 0; -0.0741 1.2370 0.0000 C 0 0 0 0 0; -0.0783 0.4120 0.0000 C 0 0 0 0 0; 0.6342 -0.8255 0.0000 C 0 0 0 0 0; 2.0634 -0.0005 0.0000 O 0 0 0 0 0; -0.0866 -1.2380 0.0000 C 0 0 0 0 0; 0.6384 2.4787 0.0000 O 0 0 0 0 0; -0.7991 -0.8255 0.0000 O 0 0 0 0 0; -0.7908 1.6495 0.0000 C 0 0 0 0 0; -0.0866 -2.0630 0.0000 O 0 0 0 0 0; -0.7908 -0.0005 0.0000 C 0 0 0 0 0; -0.7991 -2.4755 0.0000 C 0 0 0 0 0; -1.5033 1.2370 0.0000 C 0 0 0 0 0; -1.5033 0.4120 0.0000 C 0 0 0 0 0; -0.8033 -3.3005 0.0000 C 0 0 0 0 0; 2 1 1 0 0 0; 3 1 1 0 0 0; 8 1 2 0 0 0; 6 2 1 0 0 0; 7 2 1 0 0 0; 4 3 1 0 0 0; 5 4 1 0 0 0; 10 4 2 0 0 0; 12 5 2 0 0 0; 6 5 1 0 0 0; 14 6 2 0 0 0; 9 7 1 0 0 0; 11 9 2 0 0 0; 13 9 1 0 0 0; 16 12 1 0 0 0; 15 13 1 0 0 0; 17 14 1 0 0 0; 18 15 1 0 0 0; 17 16 2 0 0 0; M END; $$$$; -------------------. Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/516#issuecomment-281776442
https://github.com/openbabel/openbabel/issues/516#issuecomment-281776444:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I'm splitting this bug, otherwise this becomes a big dumping ground for all ; possible bugs in aromatic perception and kekulization. The bug submitter gave the original bug (which is now fixed) and then some ; follow-up examples with 4-valent N+. This bug is now restricted *ONLY* to aromaticity problems with 4-valent N+. Other problems will be opened as separate bugs -- otherwise it'll be ; impossible to track what's fixed and what isn't. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/516#issuecomment-281776444
https://github.com/openbabel/openbabel/issues/516#issuecomment-281776445:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420; Originator: NO. 4-valent nitrogens are no longer a problem in the 2.2. SVN trunk. I am marking this bug closed. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/516#issuecomment-281776445
https://github.com/openbabel/openbabel/issues/517#issuecomment-281776461:442,Security,access,access,442,"Logged In: YES ; user_id=21420. It would really help if I could get a stack backtrace from gdb, e.g. gdb /usr/local/bin/babel; ...; run #command-line options here; ...; bt. This was also reported by R. Guha, but I don't have much information:; http://sourceforge.net/mailarchive/forum.php?; thread_id=9599682&forum_id=47190. For example, have you tried the current CVS development version? Does this ; also happen on FC5?. Since I don't have access to a FC4 machine, it's very hard for me to debug. It ; certainly doesn't happen on the FC3 machine in the SourceForge compile ; farm. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/517#issuecomment-281776461
https://github.com/openbabel/openbabel/issues/517#issuecomment-281776461:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. It would really help if I could get a stack backtrace from gdb, e.g. gdb /usr/local/bin/babel; ...; run #command-line options here; ...; bt. This was also reported by R. Guha, but I don't have much information:; http://sourceforge.net/mailarchive/forum.php?; thread_id=9599682&forum_id=47190. For example, have you tried the current CVS development version? Does this ; also happen on FC5?. Since I don't have access to a FC4 machine, it's very hard for me to debug. It ; certainly doesn't happen on the FC3 machine in the SourceForge compile ; farm. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/517#issuecomment-281776461
https://github.com/openbabel/openbabel/issues/517#issuecomment-281776462:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1391954. Here is the requested backtrace from gdb: gdb.txt. regards,. Ernst-Georg. Original comment by: @ergo70",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/517#issuecomment-281776462
https://github.com/openbabel/openbabel/issues/517#issuecomment-281776465:151,Deployability,release,release,151,Logged In: YES ; user_id=21420. The most recent snapshot appears to solve this. I'll be happy to send this to anyone for additional testing before the release of ; 2.0.1 and would prefer to confirm that the crashes are solved. Thanks for the bug report and all the help!; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/517#issuecomment-281776465
https://github.com/openbabel/openbabel/issues/517#issuecomment-281776465:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. The most recent snapshot appears to solve this. I'll be happy to send this to anyone for additional testing before the release of ; 2.0.1 and would prefer to confirm that the crashes are solved. Thanks for the bug report and all the help!; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/517#issuecomment-281776465
https://github.com/openbabel/openbabel/issues/517#issuecomment-281776465:132,Testability,test,testing,132,Logged In: YES ; user_id=21420. The most recent snapshot appears to solve this. I'll be happy to send this to anyone for additional testing before the release of ; 2.0.1 and would prefer to confirm that the crashes are solved. Thanks for the bug report and all the help!; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/517#issuecomment-281776465
https://github.com/openbabel/openbabel/issues/517#issuecomment-281776466:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/517#issuecomment-281776466
https://github.com/openbabel/openbabel/issues/1451#issuecomment-281810439:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. These are already preserved via OBPairData, but they do not output in the PDB file yet. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1451#issuecomment-281810439
https://github.com/openbabel/openbabel/issues/1452#issuecomment-281810448:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. Marcus, this seems like a good request for 3.0, correct?. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1452#issuecomment-281810448
https://github.com/openbabel/openbabel/issues/1452#issuecomment-281810449:153,Security,expose,exposed,153,Logged In: YES ; user_id=851435; Originator: NO. This is already working for the CMake based build of OpenBabel. To be honest far too much of the API is exposed wholesale to make visibility all that useful. I think until the API of OpenBabel is redesigned the visibility doesn't help very much at all as the DLLs just export everything... That is why I never really spent the time talking Autotools into playin ball. Should help a lot with API redesign in 3.0 though. Original comment by: @cryos,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1452#issuecomment-281810449
https://github.com/openbabel/openbabel/issues/1452#issuecomment-281810449:0,Testability,Log,Logged,0,Logged In: YES ; user_id=851435; Originator: NO. This is already working for the CMake based build of OpenBabel. To be honest far too much of the API is exposed wholesale to make visibility all that useful. I think until the API of OpenBabel is redesigned the visibility doesn't help very much at all as the DLLs just export everything... That is why I never really spent the time talking Autotools into playin ball. Should help a lot with API redesign in 3.0 though. Original comment by: @cryos,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1452#issuecomment-281810449
https://github.com/openbabel/openbabel/issues/1453#issuecomment-281810452:81,Availability,error,errors,81,"Logged In: YES ; user_id=21420. Fixed. Methods now exist to return the number of errors, warnings, etc. The new methods make it easy to alter the text or formatting of the messages, ; so any concerns about the new output can be easily revised. I'm marking this feature closed.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1453#issuecomment-281810452
https://github.com/openbabel/openbabel/issues/1453#issuecomment-281810452:172,Integrability,message,messages,172,"Logged In: YES ; user_id=21420. Fixed. Methods now exist to return the number of errors, warnings, etc. The new methods make it easy to alter the text or formatting of the messages, ; so any concerns about the new output can be easily revised. I'm marking this feature closed.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1453#issuecomment-281810452
https://github.com/openbabel/openbabel/issues/1453#issuecomment-281810452:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Fixed. Methods now exist to return the number of errors, warnings, etc. The new methods make it easy to alter the text or formatting of the messages, ; so any concerns about the new output can be easily revised. I'm marking this feature closed.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1453#issuecomment-281810452
https://github.com/openbabel/openbabel/issues/518#issuecomment-281776484:69,Deployability,patch,patch,69,"Logged In: YES ; user_id=21420. This is an old bug. Either check the patch at:; http://sourceforge.net/mailarchive/forum.php? ; thread_id=9412916&forum_id=47190. or grab the snapshot of 2.0.1:; https://sourceforge.net/project/showfiles.php?; group_id=40728&package_id=154019. However, we have heard of other problems with FC4 -- evidently there is ; some sort of crash. (See bug #1447233.). I'm marking this particular bug closed, but if you experience the crash, please ; file comments in the other bug report. Thanks!; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/518#issuecomment-281776484
https://github.com/openbabel/openbabel/issues/518#issuecomment-281776484:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. This is an old bug. Either check the patch at:; http://sourceforge.net/mailarchive/forum.php? ; thread_id=9412916&forum_id=47190. or grab the snapshot of 2.0.1:; https://sourceforge.net/project/showfiles.php?; group_id=40728&package_id=154019. However, we have heard of other problems with FC4 -- evidently there is ; some sort of crash. (See bug #1447233.). I'm marking this particular bug closed, but if you experience the crash, please ; file comments in the other bug report. Thanks!; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/518#issuecomment-281776484
https://github.com/openbabel/openbabel/issues/518#issuecomment-281776486:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/518#issuecomment-281776486
https://github.com/openbabel/openbabel/issues/520#issuecomment-281776526:0,Testability,Log,Logged,0,Logged In: YES ; user_id=1189615. Are you going to attach the file?. Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/520#issuecomment-281776526
https://github.com/openbabel/openbabel/issues/520#issuecomment-281776527:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I'd be happy to try this out, but without the file, it's unclear how to proceed. ; Certainly invalid files appear to be rejected by the HIN reader -- as tested ; during roundtrip testing. I'm not sure how the code could run infinitely, but would be glad to debug ; this ASAP. I'm marking this ""Pending"" further comment. Either the original submitter ; should post the file and a comment (to re-open it) or this will close (since we ; can't do anything to test the bug). Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/520#issuecomment-281776527
https://github.com/openbabel/openbabel/issues/520#issuecomment-281776527:185,Testability,test,tested,185,"Logged In: YES ; user_id=21420. I'd be happy to try this out, but without the file, it's unclear how to proceed. ; Certainly invalid files appear to be rejected by the HIN reader -- as tested ; during roundtrip testing. I'm not sure how the code could run infinitely, but would be glad to debug ; this ASAP. I'm marking this ""Pending"" further comment. Either the original submitter ; should post the file and a comment (to re-open it) or this will close (since we ; can't do anything to test the bug). Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/520#issuecomment-281776527
https://github.com/openbabel/openbabel/issues/520#issuecomment-281776527:211,Testability,test,testing,211,"Logged In: YES ; user_id=21420. I'd be happy to try this out, but without the file, it's unclear how to proceed. ; Certainly invalid files appear to be rejected by the HIN reader -- as tested ; during roundtrip testing. I'm not sure how the code could run infinitely, but would be glad to debug ; this ASAP. I'm marking this ""Pending"" further comment. Either the original submitter ; should post the file and a comment (to re-open it) or this will close (since we ; can't do anything to test the bug). Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/520#issuecomment-281776527
https://github.com/openbabel/openbabel/issues/520#issuecomment-281776527:487,Testability,test,test,487,"Logged In: YES ; user_id=21420. I'd be happy to try this out, but without the file, it's unclear how to proceed. ; Certainly invalid files appear to be rejected by the HIN reader -- as tested ; during roundtrip testing. I'm not sure how the code could run infinitely, but would be glad to debug ; this ASAP. I'm marking this ""Pending"" further comment. Either the original submitter ; should post the file and a comment (to re-open it) or this will close (since we ; can't do anything to test the bug). Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/520#issuecomment-281776527
https://github.com/openbabel/openbabel/issues/520#issuecomment-281776529:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/520#issuecomment-281776529
https://github.com/openbabel/openbabel/issues/1455#issuecomment-281810456:547,Deployability,update,updated,547,"Logged In: YES ; user_id=21420. There's two things here:; 1) The documentation for NumRotors() -- basically any non-ring bond with ; hybridization of sp2 or sp3 is considered a potentially rotatable bond. So ; there's no ""bond typing"" or anything like that. (There's a feature for generating conformers that can use a database of ; rotatable or non-rotatable bonds, but NumRotors() does not use that.). 2) In some sense, this is more of a feature request -- make NumRotors() a ; more intelligent function. :-). I'll make sure the documentation is updated for 2.0.1. Thanks!; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1455#issuecomment-281810456
https://github.com/openbabel/openbabel/issues/1455#issuecomment-281810456:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. There's two things here:; 1) The documentation for NumRotors() -- basically any non-ring bond with ; hybridization of sp2 or sp3 is considered a potentially rotatable bond. So ; there's no ""bond typing"" or anything like that. (There's a feature for generating conformers that can use a database of ; rotatable or non-rotatable bonds, but NumRotors() does not use that.). 2) In some sense, this is more of a feature request -- make NumRotors() a ; more intelligent function. :-). I'll make sure the documentation is updated for 2.0.1. Thanks!; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1455#issuecomment-281810456
https://github.com/openbabel/openbabel/issues/1455#issuecomment-281810457:63,Deployability,update,updated,63,"Logged In: YES ; user_id=21420. OK, the documentation has been updated, so I'm going to move this to ""Feature ; Requests"" for 2.x. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1455#issuecomment-281810457
https://github.com/openbabel/openbabel/issues/1455#issuecomment-281810457:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. OK, the documentation has been updated, so I'm going to move this to ""Feature ; Requests"" for 2.x. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1455#issuecomment-281810457
https://github.com/openbabel/openbabel/issues/1455#issuecomment-281810458:96,Deployability,update,updated,96,"Logged In: YES ; user_id=21420; Originator: NO. The documentation on this has been *thoroughly* updated. I think the better approach is to use OBRotorRules as this can perform much better typing. So I'm going to mark this closed -- if you're interested in an accurate count of the number of rotatable bonds, see the OB 2.1 documentation which will also suggest ways to generate rotamers. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1455#issuecomment-281810458
https://github.com/openbabel/openbabel/issues/1455#issuecomment-281810458:168,Performance,perform,perform,168,"Logged In: YES ; user_id=21420; Originator: NO. The documentation on this has been *thoroughly* updated. I think the better approach is to use OBRotorRules as this can perform much better typing. So I'm going to mark this closed -- if you're interested in an accurate count of the number of rotatable bonds, see the OB 2.1 documentation which will also suggest ways to generate rotamers. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1455#issuecomment-281810458
https://github.com/openbabel/openbabel/issues/1455#issuecomment-281810458:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. The documentation on this has been *thoroughly* updated. I think the better approach is to use OBRotorRules as this can perform much better typing. So I'm going to mark this closed -- if you're interested in an accurate count of the number of rotatable bonds, see the OB 2.1 documentation which will also suggest ways to generate rotamers. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1455#issuecomment-281810458
https://github.com/openbabel/openbabel/issues/521#issuecomment-281776531:418,Deployability,release,released,418,"Logged In: YES ; user_id=21420. The code at least on the surface marks H and h as total and implicit counts, ; respectively. An underlying bug made implicit hydrogen count == total hydrogen count.; The current code is exposing H as the number of explicit hydrogens. ; (Whoops). I believe this should fix the bug, although I'm going to do considerable ; testing to be sure this doesn't break other bits before 2.0.1 is released. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/521#issuecomment-281776531
https://github.com/openbabel/openbabel/issues/521#issuecomment-281776531:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. The code at least on the surface marks H and h as total and implicit counts, ; respectively. An underlying bug made implicit hydrogen count == total hydrogen count.; The current code is exposing H as the number of explicit hydrogens. ; (Whoops). I believe this should fix the bug, although I'm going to do considerable ; testing to be sure this doesn't break other bits before 2.0.1 is released. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/521#issuecomment-281776531
https://github.com/openbabel/openbabel/issues/521#issuecomment-281776531:353,Testability,test,testing,353,"Logged In: YES ; user_id=21420. The code at least on the surface marks H and h as total and implicit counts, ; respectively. An underlying bug made implicit hydrogen count == total hydrogen count.; The current code is exposing H as the number of explicit hydrogens. ; (Whoops). I believe this should fix the bug, although I'm going to do considerable ; testing to be sure this doesn't break other bits before 2.0.1 is released. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/521#issuecomment-281776531
https://github.com/openbabel/openbabel/issues/521#issuecomment-281776532:94,Deployability,release,release,94,"Logged In: YES ; user_id=21420. This appears to be fixed. I will send a copy of the 2.0.1 pre-release to bug ; submitter to see if they agree. Setting this bug to ""pending"" further comment -- otherwise it will close ; automatically as being fixed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/521#issuecomment-281776532
https://github.com/openbabel/openbabel/issues/521#issuecomment-281776532:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. This appears to be fixed. I will send a copy of the 2.0.1 pre-release to bug ; submitter to see if they agree. Setting this bug to ""pending"" further comment -- otherwise it will close ; automatically as being fixed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/521#issuecomment-281776532
https://github.com/openbabel/openbabel/issues/521#issuecomment-281776533:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/521#issuecomment-281776533
https://github.com/openbabel/openbabel/issues/522#issuecomment-281776552:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. There is a workaround for this, as described in the Daylight manual. [#1] should also provide the functionality you describe and escape questions ; of handling total/implicit hydrogen handling in Open Babel. I'll try to fix this soon, although it won't be in 2.0.1 because such a change ; may likely break other code and needs considerable testing. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/522#issuecomment-281776552
https://github.com/openbabel/openbabel/issues/522#issuecomment-281776552:372,Testability,test,testing,372,"Logged In: YES ; user_id=21420. There is a workaround for this, as described in the Daylight manual. [#1] should also provide the functionality you describe and escape questions ; of handling total/implicit hydrogen handling in Open Babel. I'll try to fix this soon, although it won't be in 2.0.1 because such a change ; may likely break other code and needs considerable testing. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/522#issuecomment-281776552
https://github.com/openbabel/openbabel/issues/522#issuecomment-281776553:112,Deployability,patch,patch,112,Logged In: YES ; user_id=21420. This is now fixed in the SVN trunk development code. I'd be glad to provide a ; patch to anyone who needs it (revision 1484). I'm now marking this closed.; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/522#issuecomment-281776553
https://github.com/openbabel/openbabel/issues/522#issuecomment-281776553:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. This is now fixed in the SVN trunk development code. I'd be glad to provide a ; patch to anyone who needs it (revision 1484). I'm now marking this closed.; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/522#issuecomment-281776553
https://github.com/openbabel/openbabel/issues/523#issuecomment-281776572:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. This should now be fixed in the CVS code for 2.0.1. I will send a copy of the ; snapshot to submitter to verify that bug is fixed. I'm marking this bug ""pending"" further comments, otherwise it will be closed ; automatically as being fixed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/523#issuecomment-281776572
https://github.com/openbabel/openbabel/issues/523#issuecomment-281776573:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/523#issuecomment-281776573
https://github.com/openbabel/openbabel/issues/524#issuecomment-281776581:186,Deployability,install,installed,186,"Logged In: YES ; user_id=21420. This was probably easy enough that I shouldn't have bothered filing a bug. The configure/Makefile scripts for 2.0.1 should now fix this. If libinchi is ; installed, it will not be re-compiled. Otherwise, it will be compiled and ; installed. This will need some careful testing, but I think it's working correctly. Certainly ; on my developer copy, it doesn't recompile libinchi all the time anymore. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/524#issuecomment-281776581
https://github.com/openbabel/openbabel/issues/524#issuecomment-281776581:262,Deployability,install,installed,262,"Logged In: YES ; user_id=21420. This was probably easy enough that I shouldn't have bothered filing a bug. The configure/Makefile scripts for 2.0.1 should now fix this. If libinchi is ; installed, it will not be re-compiled. Otherwise, it will be compiled and ; installed. This will need some careful testing, but I think it's working correctly. Certainly ; on my developer copy, it doesn't recompile libinchi all the time anymore. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/524#issuecomment-281776581
https://github.com/openbabel/openbabel/issues/524#issuecomment-281776581:111,Modifiability,config,configure,111,"Logged In: YES ; user_id=21420. This was probably easy enough that I shouldn't have bothered filing a bug. The configure/Makefile scripts for 2.0.1 should now fix this. If libinchi is ; installed, it will not be re-compiled. Otherwise, it will be compiled and ; installed. This will need some careful testing, but I think it's working correctly. Certainly ; on my developer copy, it doesn't recompile libinchi all the time anymore. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/524#issuecomment-281776581
https://github.com/openbabel/openbabel/issues/524#issuecomment-281776581:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. This was probably easy enough that I shouldn't have bothered filing a bug. The configure/Makefile scripts for 2.0.1 should now fix this. If libinchi is ; installed, it will not be re-compiled. Otherwise, it will be compiled and ; installed. This will need some careful testing, but I think it's working correctly. Certainly ; on my developer copy, it doesn't recompile libinchi all the time anymore. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/524#issuecomment-281776581
https://github.com/openbabel/openbabel/issues/524#issuecomment-281776581:301,Testability,test,testing,301,"Logged In: YES ; user_id=21420. This was probably easy enough that I shouldn't have bothered filing a bug. The configure/Makefile scripts for 2.0.1 should now fix this. If libinchi is ; installed, it will not be re-compiled. Otherwise, it will be compiled and ; installed. This will need some careful testing, but I think it's working correctly. Certainly ; on my developer copy, it doesn't recompile libinchi all the time anymore. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/524#issuecomment-281776581
https://github.com/openbabel/openbabel/issues/524#issuecomment-281776582:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/524#issuecomment-281776582
https://github.com/openbabel/openbabel/issues/525#issuecomment-281776597:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I'm moving this to a bug report. The Read() method shouldn't segfault. Both methods as you describe should work just fine. So this is a bug, not a ; feature request. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/525#issuecomment-281776597
https://github.com/openbabel/openbabel/issues/525#issuecomment-281776598:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. OK, I've debugged the problem -- the ReadString() and ReadFile() methods were ; closing the input streams before the next Read() could occur. I've finished changes for 2.0.1 that address this and will commit to CVS now. Marking this closed, pending further comments.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/525#issuecomment-281776598
https://github.com/openbabel/openbabel/issues/525#issuecomment-281776599:0,Testability,Log,Logged,0,"Logged In: NO . There is a difference - now, I get segfaults for both; examples in my original post!. I'm afraid this story isn't over yet...:-(. Noel. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/525#issuecomment-281776599
https://github.com/openbabel/openbabel/issues/525#issuecomment-281776601:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=850620. There is a difference - now, I get segfaults for both; examples in my original post!. I'm afraid this story isn't over yet...:-(. Is there any way I can get more informative segfaults for you?. Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/525#issuecomment-281776601
https://github.com/openbabel/openbabel/issues/525#issuecomment-281776602:46,Integrability,wrap,wrappers,46,"Logged In: NO . Noel, are you using the 2.0.x wrappers? I haven't fixed the 2.1 development ; code yet -- I still have to fix some compilation problems from Chris before I can ; test and commit the fixes yet. I'm quite sure that the 2.0.1 wrappers do not have this problem. -Geoff. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/525#issuecomment-281776602
https://github.com/openbabel/openbabel/issues/525#issuecomment-281776602:239,Integrability,wrap,wrappers,239,"Logged In: NO . Noel, are you using the 2.0.x wrappers? I haven't fixed the 2.1 development ; code yet -- I still have to fix some compilation problems from Chris before I can ; test and commit the fixes yet. I'm quite sure that the 2.0.1 wrappers do not have this problem. -Geoff. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/525#issuecomment-281776602
https://github.com/openbabel/openbabel/issues/525#issuecomment-281776602:0,Testability,Log,Logged,0,"Logged In: NO . Noel, are you using the 2.0.x wrappers? I haven't fixed the 2.1 development ; code yet -- I still have to fix some compilation problems from Chris before I can ; test and commit the fixes yet. I'm quite sure that the 2.0.1 wrappers do not have this problem. -Geoff. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/525#issuecomment-281776602
https://github.com/openbabel/openbabel/issues/525#issuecomment-281776602:178,Testability,test,test,178,"Logged In: NO . Noel, are you using the 2.0.x wrappers? I haven't fixed the 2.1 development ; code yet -- I still have to fix some compilation problems from Chris before I can ; test and commit the fixes yet. I'm quite sure that the 2.0.1 wrappers do not have this problem. -Geoff. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/525#issuecomment-281776602
https://github.com/openbabel/openbabel/issues/525#issuecomment-281776603:174,Deployability,update,update,174,Logged In: YES ; user_id=850620. Using the HEAD revision. I keep trying to use branches with; CVS but it defeats me every time. I will await SVN (which; makes it easy) or an update to the HEAD. Noel. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/525#issuecomment-281776603
https://github.com/openbabel/openbabel/issues/525#issuecomment-281776603:0,Testability,Log,Logged,0,Logged In: YES ; user_id=850620. Using the HEAD revision. I keep trying to use branches with; CVS but it defeats me every time. I will await SVN (which; makes it easy) or an update to the HEAD. Noel. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/525#issuecomment-281776603
https://github.com/openbabel/openbabel/issues/525#issuecomment-281776605:45,Deployability,update,updated,45,Logged In: YES ; user_id=21420. The HEAD was updated with the fixes from 2.0.1 and this seems to have fixed ; the issue. Marking this closed as the bug is fixed.; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/525#issuecomment-281776605
https://github.com/openbabel/openbabel/issues/525#issuecomment-281776605:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. The HEAD was updated with the fixes from 2.0.1 and this seems to have fixed ; the issue. Marking this closed as the bug is fixed.; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/525#issuecomment-281776605
https://github.com/openbabel/openbabel/issues/526#issuecomment-281776621:154,Deployability,release,released,154,"Logged In: YES ; user_id=21420. The current 2.0.1 CVS version seems to have fixed this particular file, although ; more testing is needed before 2.0.1 is released. I'm marking this closed, pending further comment.; Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/526#issuecomment-281776621
https://github.com/openbabel/openbabel/issues/526#issuecomment-281776621:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. The current 2.0.1 CVS version seems to have fixed this particular file, although ; more testing is needed before 2.0.1 is released. I'm marking this closed, pending further comment.; Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/526#issuecomment-281776621
https://github.com/openbabel/openbabel/issues/526#issuecomment-281776621:120,Testability,test,testing,120,"Logged In: YES ; user_id=21420. The current 2.0.1 CVS version seems to have fixed this particular file, although ; more testing is needed before 2.0.1 is released. I'm marking this closed, pending further comment.; Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/526#issuecomment-281776621
https://github.com/openbabel/openbabel/issues/526#issuecomment-281776622:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/526#issuecomment-281776622
https://github.com/openbabel/openbabel/issues/527#issuecomment-281776630:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615. This is a case where I have not been "" eating my own dog; food"" as I don't have cause to use single molecule output; files. It is obviously wrong that there can be incorrect output. So I have added to HEAD CVS a conditional block in; OBConversion::AddChemObject() so that formats with; WRITEONEONLY output only one molecule. With a multi-molecule; input file, the user can still specify which molecule that; is using the -f# option. He can already manually specify that each molecule is output; in a separate file, e.g.,; babel 4mols.smi out.qcin -m; (or in Windows babel 4mols.smi out*.qcin}. Is it a good idea for this to happen automatically? The; first file in a multi-output would be out1.qcin which wasn't; the name the user thought he was specifying. He would also; loose the opportunity to select which single molecule is; output. I think the change above is sufficient, but, as I; say, I don't eat this dog food. There have been other changes to AddChemObject() but this; one could be put into 2.0.2 should this ever happen. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/527#issuecomment-281776630
https://github.com/openbabel/openbabel/issues/527#issuecomment-281776633:90,Availability,error,error,90,"Logged In: YES ; user_id=21420. As discussed on the mailing list, the code now outputs an error/warning and ; stops after one molecule output. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/527#issuecomment-281776633
https://github.com/openbabel/openbabel/issues/527#issuecomment-281776633:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. As discussed on the mailing list, the code now outputs an error/warning and ; stops after one molecule output. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/527#issuecomment-281776633
https://github.com/openbabel/openbabel/issues/528#issuecomment-281776642:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. Fixed in both 2-0-x branch and development HEAD. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/528#issuecomment-281776642
https://github.com/openbabel/openbabel/issues/529#issuecomment-281776654:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. Fixed. Should have caught this with the ReadFile fixes too.; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/529#issuecomment-281776654
https://github.com/openbabel/openbabel/issues/530#issuecomment-281776668:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. [D], [v], and [X] are now supported, i.e., as a default of D1, v1, X1 for those ; primitives. Support for the [x#] primitive (i.e., number of ring bonds) has been moved to ; a separate feature request. This bug now focuses on support for the patterns:; [*~*]; [c:c]; [Caa(O)aN]; [Ca(aO)aaN]; [*@;!;*]. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/530#issuecomment-281776668
https://github.com/openbabel/openbabel/issues/530#issuecomment-281776672:22,Testability,test,test,22,We should have a unit test for parsing SMARTS -- including everything on these two pages:; http://www.daylight.com/dayhtml/doc/theory/theory.smarts.html; http://www.daylight.com/dayhtml_tutorials/languages/smarts/smarts_examples.html. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/530#issuecomment-281776672
https://github.com/openbabel/openbabel/issues/531#issuecomment-281776692:241,Deployability,release,release,241,"Logged In: YES ; user_id=21420. While this is a bug report, let's discuss this on the development list. I'd be ; happy if part of the 2.1 development led to revisiting all the implicit valence ; rules. We certainly have time through the 2.1 release cycle to implement and ; test all these. If you can contribute a set of molecules (better yet a SMILES file) with the ; correct number of hydrogen atoms, I'd be glad to add a unit test and we can ; add to it over time. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/531#issuecomment-281776692
https://github.com/openbabel/openbabel/issues/531#issuecomment-281776692:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. While this is a bug report, let's discuss this on the development list. I'd be ; happy if part of the 2.1 development led to revisiting all the implicit valence ; rules. We certainly have time through the 2.1 release cycle to implement and ; test all these. If you can contribute a set of molecules (better yet a SMILES file) with the ; correct number of hydrogen atoms, I'd be glad to add a unit test and we can ; add to it over time. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/531#issuecomment-281776692
https://github.com/openbabel/openbabel/issues/531#issuecomment-281776692:274,Testability,test,test,274,"Logged In: YES ; user_id=21420. While this is a bug report, let's discuss this on the development list. I'd be ; happy if part of the 2.1 development led to revisiting all the implicit valence ; rules. We certainly have time through the 2.1 release cycle to implement and ; test all these. If you can contribute a set of molecules (better yet a SMILES file) with the ; correct number of hydrogen atoms, I'd be glad to add a unit test and we can ; add to it over time. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/531#issuecomment-281776692
https://github.com/openbabel/openbabel/issues/531#issuecomment-281776692:429,Testability,test,test,429,"Logged In: YES ; user_id=21420. While this is a bug report, let's discuss this on the development list. I'd be ; happy if part of the 2.1 development led to revisiting all the implicit valence ; rules. We certainly have time through the 2.1 release cycle to implement and ; test all these. If you can contribute a set of molecules (better yet a SMILES file) with the ; correct number of hydrogen atoms, I'd be glad to add a unit test and we can ; add to it over time. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/531#issuecomment-281776692
https://github.com/openbabel/openbabel/issues/531#issuecomment-281776694:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. Chris solved this in the SVN trunk, revision 1838 or later. I'm marking this closed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/531#issuecomment-281776694
https://github.com/openbabel/openbabel/issues/1458#issuecomment-281810486:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420; Originator: YES. This has already been accomplished by Chris Morley for the 2.2 code. I'm marking this closed. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1458#issuecomment-281810486
https://github.com/openbabel/openbabel/issues/1459#issuecomment-281810488:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. This is a duplicate of PR#1229841. https://sourceforge.net/tracker/index.php?; func=detail&aid=1229841&group_id=40728&atid=447448. Marking this closed.; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1459#issuecomment-281810488
https://github.com/openbabel/openbabel/issues/532#issuecomment-281776715:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615. A possible solution to this is to give OBGenericData a; virtual GetValue function returning a std::string. Calling; GetValue on a OBGenericData pointer to a OBPairData object; would use the OBPairData function. The base class version; actually returns the Attribute, which was easier than making; it return an empty string, which would look neater, but it; should never be called. This solution is not very elegant, making OBGenericData just; a little bit less generic. But it isn't too bad - lots of; classes might find returning a string value useful - and I; hope gets the job done. (OBCommentData has a GetData; function - I'll make its virtual GetValue do the same.) . I've added the required code to generic.h in SVN. I can't; test with Python since we still lack a Windows version. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/532#issuecomment-281776715
https://github.com/openbabel/openbabel/issues/532#issuecomment-281776715:767,Testability,test,test,767,"Logged In: YES ; user_id=1189615. A possible solution to this is to give OBGenericData a; virtual GetValue function returning a std::string. Calling; GetValue on a OBGenericData pointer to a OBPairData object; would use the OBPairData function. The base class version; actually returns the Attribute, which was easier than making; it return an empty string, which would look neater, but it; should never be called. This solution is not very elegant, making OBGenericData just; a little bit less generic. But it isn't too bad - lots of; classes might find returning a string value useful - and I; hope gets the job done. (OBCommentData has a GetData; function - I'll make its virtual GetValue do the same.) . I've added the required code to generic.h in SVN. I can't; test with Python since we still lack a Windows version. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/532#issuecomment-281776715
https://github.com/openbabel/openbabel/issues/532#issuecomment-281776716:0,Testability,Log,Logged,0,Logged In: YES ; user_id=850620. Thanks! It's working now... data.GetValue() returns 122.03677944. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/532#issuecomment-281776716
https://github.com/openbabel/openbabel/issues/532#issuecomment-281776720:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. This bug was fixed, correct? I'm marking this ""pending"" so it will close unless ; someone comments and re-opens it. I do believe this is now fixed in the development repository. (Almost typed CVS ; there -- now it's SVN...). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/532#issuecomment-281776720
https://github.com/openbabel/openbabel/issues/532#issuecomment-281776722:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/532#issuecomment-281776722
https://github.com/openbabel/openbabel/issues/1462#issuecomment-281810499:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420; Originator: YES. This is really a feature request. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1462#issuecomment-281810499
https://github.com/openbabel/openbabel/issues/533#issuecomment-281776726:0,Testability,Test,Test,0,Test SD file. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/533#issuecomment-281776726
https://github.com/openbabel/openbabel/issues/533#issuecomment-281776728:136,Security,access,access,136,"Logged In: YES ; user_id=21420. I've added a comment to the documentation -- the use of the ""unsigned int ; type"" parameter is to allow access based on data type, defined in the ; OBGenericDataType namespace:. http://openbabel.sourceforge.net/api/; namespaceOpenBabel_1_1OBGenericDataType.shtml. If you access data by this means, you are current only going to get one item ; (i.e., the first matched) for OBPairData. If you think there should be a better ; way to do this, we'll need some sort of API change in 2.1 -- please feel free to ; comment on the mailing list. In short, I'm closing this bug -- I've fixed the documentation and the call is ; doing what it's supposed to do. Whether there should be alternative access ; methods is another subject. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/533#issuecomment-281776728
https://github.com/openbabel/openbabel/issues/533#issuecomment-281776728:303,Security,access,access,303,"Logged In: YES ; user_id=21420. I've added a comment to the documentation -- the use of the ""unsigned int ; type"" parameter is to allow access based on data type, defined in the ; OBGenericDataType namespace:. http://openbabel.sourceforge.net/api/; namespaceOpenBabel_1_1OBGenericDataType.shtml. If you access data by this means, you are current only going to get one item ; (i.e., the first matched) for OBPairData. If you think there should be a better ; way to do this, we'll need some sort of API change in 2.1 -- please feel free to ; comment on the mailing list. In short, I'm closing this bug -- I've fixed the documentation and the call is ; doing what it's supposed to do. Whether there should be alternative access ; methods is another subject. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/533#issuecomment-281776728
https://github.com/openbabel/openbabel/issues/533#issuecomment-281776728:718,Security,access,access,718,"Logged In: YES ; user_id=21420. I've added a comment to the documentation -- the use of the ""unsigned int ; type"" parameter is to allow access based on data type, defined in the ; OBGenericDataType namespace:. http://openbabel.sourceforge.net/api/; namespaceOpenBabel_1_1OBGenericDataType.shtml. If you access data by this means, you are current only going to get one item ; (i.e., the first matched) for OBPairData. If you think there should be a better ; way to do this, we'll need some sort of API change in 2.1 -- please feel free to ; comment on the mailing list. In short, I'm closing this bug -- I've fixed the documentation and the call is ; doing what it's supposed to do. Whether there should be alternative access ; methods is another subject. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/533#issuecomment-281776728
https://github.com/openbabel/openbabel/issues/533#issuecomment-281776728:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I've added a comment to the documentation -- the use of the ""unsigned int ; type"" parameter is to allow access based on data type, defined in the ; OBGenericDataType namespace:. http://openbabel.sourceforge.net/api/; namespaceOpenBabel_1_1OBGenericDataType.shtml. If you access data by this means, you are current only going to get one item ; (i.e., the first matched) for OBPairData. If you think there should be a better ; way to do this, we'll need some sort of API change in 2.1 -- please feel free to ; comment on the mailing list. In short, I'm closing this bug -- I've fixed the documentation and the call is ; doing what it's supposed to do. Whether there should be alternative access ; methods is another subject. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/533#issuecomment-281776728
https://github.com/openbabel/openbabel/issues/533#issuecomment-281776729:0,Testability,Log,Logged,0,Logged In: YES ; user_id=850620. So...I should submit the same bug report again but with a; different emphasis?. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/533#issuecomment-281776729
https://github.com/openbabel/openbabel/issues/533#issuecomment-281776730:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/533#issuecomment-281776730
https://github.com/openbabel/openbabel/issues/1463#issuecomment-281810509:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. I'm marking this closed. It would be more trouble than it's worth. It might be better to take the SWIG-generated files out of the SVN repository, but for now, there's no great reason to do this splitting. Worth revisiting in the 3.0 effort. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1463#issuecomment-281810509
https://github.com/openbabel/openbabel/issues/534#issuecomment-281776753:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=850620. Just for comparision, using www.chemistry-development-kit.org... Example 1:; 281.3124 and C13H19N3O4. Example 2:; 275.25327 and C10H8N3OSF3. Example 3:; 277.2597 and C16H10N2O3. Is it possible that you are swapping between using 1amu and; 1.008amu, and that this is causing the difference?. Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/534#issuecomment-281776753
https://github.com/openbabel/openbabel/issues/534#issuecomment-281776754:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Well, there's clearly a bug with www.chemistry-development-kit.org. The formulas are correct (although example 2 isn't in Hill Order, since F is ; last).; But I can pick any of several molecular weight calculators and show that those ; formulas do not give the masses calculated by c-d-k.org. I *can* confirm that before OBMol::AddHydrogens() the masses for the SMILES ; are correct from Open Babel. As of right now, I can't find the bug. But I'm attaching a PNG file with the ; three examples I gave, as well as the first four lines from attype.00.smi:; Oc1ccccc1c2nnco2 BIONET_10A-002 aryl; CC(=O)c1ccc(cc1)n2ccnc2 BIONET_10A-004 aryl; CN(C)/C=C/1\CCNC1=O BIONET_10A-007 hetatm; Cc1ccc(cc1)S(=O)(=O)Oc2ccccc2c3nnco3 BIONET_10A-008 aryl. As I said, OB calculates the formulas correctly (before and after ; AddHydrogens). But for whatever reason, the OBMol::GetMolWt() and OBMol::GetExactMass() ; do not return the correct values after AddHydrogens(). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/534#issuecomment-281776754
https://github.com/openbabel/openbabel/issues/534#issuecomment-281776754:46,Usability,clear,clearly,46,"Logged In: YES ; user_id=21420. Well, there's clearly a bug with www.chemistry-development-kit.org. The formulas are correct (although example 2 isn't in Hill Order, since F is ; last).; But I can pick any of several molecular weight calculators and show that those ; formulas do not give the masses calculated by c-d-k.org. I *can* confirm that before OBMol::AddHydrogens() the masses for the SMILES ; are correct from Open Babel. As of right now, I can't find the bug. But I'm attaching a PNG file with the ; three examples I gave, as well as the first four lines from attype.00.smi:; Oc1ccccc1c2nnco2 BIONET_10A-002 aryl; CC(=O)c1ccc(cc1)n2ccnc2 BIONET_10A-004 aryl; CN(C)/C=C/1\CCNC1=O BIONET_10A-007 hetatm; Cc1ccc(cc1)S(=O)(=O)Oc2ccccc2c3nnco3 BIONET_10A-008 aryl. As I said, OB calculates the formulas correctly (before and after ; AddHydrogens). But for whatever reason, the OBMol::GetMolWt() and OBMol::GetExactMass() ; do not return the correct values after AddHydrogens(). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/534#issuecomment-281776754
https://github.com/openbabel/openbabel/issues/534#issuecomment-281776756:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. Fixed in SVN now. Thanks to Noel for suggestion -- the functions were missing ; parens for evaluating the number of hydrogens. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/534#issuecomment-281776756
https://github.com/openbabel/openbabel/issues/535#issuecomment-281776784:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. Attaching also the SDF file used to generate the problematic CML output. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/535#issuecomment-281776784
https://github.com/openbabel/openbabel/issues/535#issuecomment-281776785:120,Integrability,depend,dependent,120,"Logged In: YES ; user_id=1189615. This example works ok for me in Windows, but it fails on; others. It seems critically dependent on the size of the; file - adding a single space sometimes make it work. I'll; try to sort it out. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/535#issuecomment-281776785
https://github.com/openbabel/openbabel/issues/535#issuecomment-281776785:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615. This example works ok for me in Windows, but it fails on; others. It seems critically dependent on the size of the; file - adding a single space sometimes make it work. I'll; try to sort it out. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/535#issuecomment-281776785
https://github.com/openbabel/openbabel/issues/535#issuecomment-281776786:114,Availability,error,errors,114,"Logged In: YES ; user_id=21420. I'm really wondering if this is some sort of bug with libxml2. There were ; weird errors on Fedora Core Linux 4 with libxml2 and I've been using v.2.6.19 ; on my Mac. I don't know if it's a miscompile with libxml2 (e.g., GCC causes ; problems?) or maybe a bug with the library itself. I'm trying to update to libxml2 2.6.22 now (it's available from a package ; manager) and might try compiling 2.6.24 (the latest) from scratch as well. I'll keep posting to this bug as I have more info. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/535#issuecomment-281776786
https://github.com/openbabel/openbabel/issues/535#issuecomment-281776786:366,Availability,avail,available,366,"Logged In: YES ; user_id=21420. I'm really wondering if this is some sort of bug with libxml2. There were ; weird errors on Fedora Core Linux 4 with libxml2 and I've been using v.2.6.19 ; on my Mac. I don't know if it's a miscompile with libxml2 (e.g., GCC causes ; problems?) or maybe a bug with the library itself. I'm trying to update to libxml2 2.6.22 now (it's available from a package ; manager) and might try compiling 2.6.24 (the latest) from scratch as well. I'll keep posting to this bug as I have more info. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/535#issuecomment-281776786
https://github.com/openbabel/openbabel/issues/535#issuecomment-281776786:331,Deployability,update,update,331,"Logged In: YES ; user_id=21420. I'm really wondering if this is some sort of bug with libxml2. There were ; weird errors on Fedora Core Linux 4 with libxml2 and I've been using v.2.6.19 ; on my Mac. I don't know if it's a miscompile with libxml2 (e.g., GCC causes ; problems?) or maybe a bug with the library itself. I'm trying to update to libxml2 2.6.22 now (it's available from a package ; manager) and might try compiling 2.6.24 (the latest) from scratch as well. I'll keep posting to this bug as I have more info. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/535#issuecomment-281776786
https://github.com/openbabel/openbabel/issues/535#issuecomment-281776786:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I'm really wondering if this is some sort of bug with libxml2. There were ; weird errors on Fedora Core Linux 4 with libxml2 and I've been using v.2.6.19 ; on my Mac. I don't know if it's a miscompile with libxml2 (e.g., GCC causes ; problems?) or maybe a bug with the library itself. I'm trying to update to libxml2 2.6.22 now (it's available from a package ; manager) and might try compiling 2.6.24 (the latest) from scratch as well. I'll keep posting to this bug as I have more info. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/535#issuecomment-281776786
https://github.com/openbabel/openbabel/issues/535#issuecomment-281776787:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. This turned out to be a small fix. Libxml2 is very unhappy attempting to read at ; the end of a file. I'm committing a change to SVN trunk and the 2.0.x branch that checks the state ; of the stream before reading. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/535#issuecomment-281776787
https://github.com/openbabel/openbabel/issues/536#issuecomment-281776790:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. This is now fixed in both the SVN trunk for 2.1 and the 2.0.x branch for 2.0.2. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/536#issuecomment-281776790
https://github.com/openbabel/openbabel/issues/537#issuecomment-281776827:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I don't know Python, but certainly the C++ code works and does not crash. . From what you describe, the segfault comes from the python code:. map.front(). But here, map doesn't have any elements. Shouldn't your code check to see if ; map is empty before trying to get the first?. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/537#issuecomment-281776827
https://github.com/openbabel/openbabel/issues/537#issuecomment-281776828:0,Testability,Log,Logged,0,"Logged In: NO . What's the equivalent C++ code?. And shouldn't map.front() return NULL if there are no; elements or better still, raise an Exception, rather than; segfaulting?. Python uses an Easier to Ask Forgiveness Than Permission; philosophy rather than Look Before You Leap. So catching; exceptions is seen as better than using if statements, which; may/may not catch the problem. Regards,; Noel. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/537#issuecomment-281776828
https://github.com/openbabel/openbabel/issues/537#issuecomment-281776829:422,Integrability,wrap,wrapper,422,"Logged In: YES ; user_id=21420. The correct C++ code would be something like this:. sp = OBSmartsPattern();; sp.Init(""[#12]"");; sp.Match(obMol);; maplist = sp.GetUMapList();. if (maplist.empty()) {; exit;; }. // Find the matching atoms; for (i = maplist.begin(); i != maplist.end(); i++); {; ... I mean, I don't know enough Python to know why it's not returning a NULL or ; raising an Exception. It may be due to the SWIG wrapper (i.e, translating ; between the C++ vector and the Python structure), and I'm happy to raise ; that as a bug with SWIG. But it's not an underlying library bug because the C++ code works just fine ; IMHO. Is. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/537#issuecomment-281776829
https://github.com/openbabel/openbabel/issues/537#issuecomment-281776829:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. The correct C++ code would be something like this:. sp = OBSmartsPattern();; sp.Init(""[#12]"");; sp.Match(obMol);; maplist = sp.GetUMapList();. if (maplist.empty()) {; exit;; }. // Find the matching atoms; for (i = maplist.begin(); i != maplist.end(); i++); {; ... I mean, I don't know enough Python to know why it's not returning a NULL or ; raising an Exception. It may be due to the SWIG wrapper (i.e, translating ; between the C++ vector and the Python structure), and I'm happy to raise ; that as a bug with SWIG. But it's not an underlying library bug because the C++ code works just fine ; IMHO. Is. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/537#issuecomment-281776829
https://github.com/openbabel/openbabel/issues/537#issuecomment-281776830:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. What I meant to say before the browser stopped allowing text... Is there a different resolution you'd like to see? I guess you'd rather see an ; exception or a NULL?. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/537#issuecomment-281776830
https://github.com/openbabel/openbabel/issues/537#issuecomment-281776833:304,Availability,error,error,304,"Logged In: YES ; user_id=850620. I'm still not quite with you here. Your C++ code is not equivalent, as it 'looks before you; leap'. Do you also get a segfault if you (mis)use; map.front() on an empty map?. If so, then I would say that OB should raise an Exception. If not, then, as you say, it's a SWIG error and not worth; tracking down right now (since it only arises in the course; of a misuse of the API). Regards,; Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/537#issuecomment-281776833
https://github.com/openbabel/openbabel/issues/537#issuecomment-281776833:334,Availability,down,down,334,"Logged In: YES ; user_id=850620. I'm still not quite with you here. Your C++ code is not equivalent, as it 'looks before you; leap'. Do you also get a segfault if you (mis)use; map.front() on an empty map?. If so, then I would say that OB should raise an Exception. If not, then, as you say, it's a SWIG error and not worth; tracking down right now (since it only arises in the course; of a misuse of the API). Regards,; Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/537#issuecomment-281776833
https://github.com/openbabel/openbabel/issues/537#issuecomment-281776833:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=850620. I'm still not quite with you here. Your C++ code is not equivalent, as it 'looks before you; leap'. Do you also get a segfault if you (mis)use; map.front() on an empty map?. If so, then I would say that OB should raise an Exception. If not, then, as you say, it's a SWIG error and not worth; tracking down right now (since it only arises in the course; of a misuse of the API). Regards,; Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/537#issuecomment-281776833
https://github.com/openbabel/openbabel/issues/537#issuecomment-281776835:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. No, we don't get a segfault if you misuse map.begin(). That's why I think we should file a SWIG bug report and close this one. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/537#issuecomment-281776835
https://github.com/openbabel/openbabel/issues/537#issuecomment-281776836:0,Testability,Log,Logged,0,Logged In: YES ; user_id=850620. Right so. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/537#issuecomment-281776836
https://github.com/openbabel/openbabel/issues/538#issuecomment-281776850:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1444119. I tested this bug against openbabel-1.100.2, and it does NOT; exhibit this problem. Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/538#issuecomment-281776850
https://github.com/openbabel/openbabel/issues/538#issuecomment-281776850:36,Testability,test,tested,36,"Logged In: YES ; user_id=1444119. I tested this bug against openbabel-1.100.2, and it does NOT; exhibit this problem. Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/538#issuecomment-281776850
https://github.com/openbabel/openbabel/issues/538#issuecomment-281776851:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. This should now be fixed in the current development trunk (1393) and will be ; brought back to the 2.0.x branch as well. I'm marking this closed pending further comment. If no one comments, this will ; automatically close in 14 days. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/538#issuecomment-281776851
https://github.com/openbabel/openbabel/issues/538#issuecomment-281776852:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/538#issuecomment-281776852
https://github.com/openbabel/openbabel/issues/539#issuecomment-281776861:372,Deployability,patch,patched,372,"Logged In: YES ; user_id=21420. Some of this seems to have been fixed with earlier bug-fixes (e.g., this PDB ; file has hydrogens, which not all do) related to residue parsing with ; hydrogens. The behavior of cutting to a smaller PDB is a side-effect of limiting bond ; order perception in PDB files >250 atoms, since it's a time-intensive ; behavior. In this case, I've patched the 2.0.x and development code to do this ; regardless -- benchmarking show that it's time-intensive, but hardly a ; significant slowdown in the scheme of things. If you'd like, I can send you a source copy of the latest 2.0.x development ; snapshot, which should solve the problem for you. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/539#issuecomment-281776861
https://github.com/openbabel/openbabel/issues/539#issuecomment-281776861:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Some of this seems to have been fixed with earlier bug-fixes (e.g., this PDB ; file has hydrogens, which not all do) related to residue parsing with ; hydrogens. The behavior of cutting to a smaller PDB is a side-effect of limiting bond ; order perception in PDB files >250 atoms, since it's a time-intensive ; behavior. In this case, I've patched the 2.0.x and development code to do this ; regardless -- benchmarking show that it's time-intensive, but hardly a ; significant slowdown in the scheme of things. If you'd like, I can send you a source copy of the latest 2.0.x development ; snapshot, which should solve the problem for you. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/539#issuecomment-281776861
https://github.com/openbabel/openbabel/issues/539#issuecomment-281776861:438,Testability,benchmark,benchmarking,438,"Logged In: YES ; user_id=21420. Some of this seems to have been fixed with earlier bug-fixes (e.g., this PDB ; file has hydrogens, which not all do) related to residue parsing with ; hydrogens. The behavior of cutting to a smaller PDB is a side-effect of limiting bond ; order perception in PDB files >250 atoms, since it's a time-intensive ; behavior. In this case, I've patched the 2.0.x and development code to do this ; regardless -- benchmarking show that it's time-intensive, but hardly a ; significant slowdown in the scheme of things. If you'd like, I can send you a source copy of the latest 2.0.x development ; snapshot, which should solve the problem for you. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/539#issuecomment-281776861
https://github.com/openbabel/openbabel/issues/539#issuecomment-281776863:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/539#issuecomment-281776863
https://github.com/openbabel/openbabel/issues/540#issuecomment-281776876:0,Testability,Log,Logged,0,"Logged In: NO . Um, actually, perhaps buffer[BUFF_SIZE-1] = '\0'; would; be rather better. MJR. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/540#issuecomment-281776876
https://github.com/openbabel/openbabel/issues/540#issuecomment-281776878:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Thanks, I just fixed this in the development trunk and 2.0.x branch -- it'll ; definitely go into 2.0.2 soon. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/540#issuecomment-281776878
https://github.com/openbabel/openbabel/issues/542#issuecomment-281776913:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420; Originator: NO. I'm bumping this to a higher priority. Do we match the InChI test set now?. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/542#issuecomment-281776913
https://github.com/openbabel/openbabel/issues/542#issuecomment-281776913:109,Testability,test,test,109,Logged In: YES ; user_id=21420; Originator: NO. I'm bumping this to a higher priority. Do we match the InChI test set now?. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/542#issuecomment-281776913
https://github.com/openbabel/openbabel/issues/542#issuecomment-281776914:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. This seems to be fixed with recent changes. I'm going to mark this particular bug closed. If more InChI stereo bugs crop up, we should create new bugs and fix them as needed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/542#issuecomment-281776914
https://github.com/openbabel/openbabel/issues/1465#issuecomment-281810520:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. After much thought, I'm not sure an output filter makes any sense. By default, ; the end-of-line should be correct for the platform (now only \r\n for Windows, ; \n for everyone else). If line endings are corrected on input, everything works. Since there's now an input line filter, I'm marking this closed too.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1465#issuecomment-281810520
https://github.com/openbabel/openbabel/issues/543#issuecomment-281776925:172,Deployability,release,release,172,"Logged In: YES ; user_id=21420. Hi Alexander,. Thanks for the bug report, I just fixed it for the 2.0.x and development (2.1) ; trees. This will go into the upcoming 2.0.2 release. If you'd like me to send ; you an updated snapshot, please let me know. If you have some hin files that you can contribute for testing, it would be ; greatly appreciated. As far as I can tell, HIN is undocumented, so any ; examples from HyperChem (particularly multi-molecule files) would be very ; helpful. Thanks!; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/543#issuecomment-281776925
https://github.com/openbabel/openbabel/issues/543#issuecomment-281776925:215,Deployability,update,updated,215,"Logged In: YES ; user_id=21420. Hi Alexander,. Thanks for the bug report, I just fixed it for the 2.0.x and development (2.1) ; trees. This will go into the upcoming 2.0.2 release. If you'd like me to send ; you an updated snapshot, please let me know. If you have some hin files that you can contribute for testing, it would be ; greatly appreciated. As far as I can tell, HIN is undocumented, so any ; examples from HyperChem (particularly multi-molecule files) would be very ; helpful. Thanks!; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/543#issuecomment-281776925
https://github.com/openbabel/openbabel/issues/543#issuecomment-281776925:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Hi Alexander,. Thanks for the bug report, I just fixed it for the 2.0.x and development (2.1) ; trees. This will go into the upcoming 2.0.2 release. If you'd like me to send ; you an updated snapshot, please let me know. If you have some hin files that you can contribute for testing, it would be ; greatly appreciated. As far as I can tell, HIN is undocumented, so any ; examples from HyperChem (particularly multi-molecule files) would be very ; helpful. Thanks!; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/543#issuecomment-281776925
https://github.com/openbabel/openbabel/issues/543#issuecomment-281776925:308,Testability,test,testing,308,"Logged In: YES ; user_id=21420. Hi Alexander,. Thanks for the bug report, I just fixed it for the 2.0.x and development (2.1) ; trees. This will go into the upcoming 2.0.2 release. If you'd like me to send ; you an updated snapshot, please let me know. If you have some hin files that you can contribute for testing, it would be ; greatly appreciated. As far as I can tell, HIN is undocumented, so any ; examples from HyperChem (particularly multi-molecule files) would be very ; helpful. Thanks!; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/543#issuecomment-281776925
https://github.com/openbabel/openbabel/issues/543#issuecomment-281776925:381,Usability,undo,undocumented,381,"Logged In: YES ; user_id=21420. Hi Alexander,. Thanks for the bug report, I just fixed it for the 2.0.x and development (2.1) ; trees. This will go into the upcoming 2.0.2 release. If you'd like me to send ; you an updated snapshot, please let me know. If you have some hin files that you can contribute for testing, it would be ; greatly appreciated. As far as I can tell, HIN is undocumented, so any ; examples from HyperChem (particularly multi-molecule files) would be very ; helpful. Thanks!; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/543#issuecomment-281776925
https://github.com/openbabel/openbabel/issues/543#issuecomment-281776926:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/543#issuecomment-281776926
https://github.com/openbabel/openbabel/issues/544#issuecomment-281776947:69,Availability,error,errors,69,Logged In: YES ; user_id=21420. I'm closing my own submission -- the errors seem to be in the CygWin libraries ; themselves. All crashes happen at the *end* of processing. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/544#issuecomment-281776947
https://github.com/openbabel/openbabel/issues/544#issuecomment-281776947:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. I'm closing my own submission -- the errors seem to be in the CygWin libraries ; themselves. All crashes happen at the *end* of processing. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/544#issuecomment-281776947
https://github.com/openbabel/openbabel/issues/544#issuecomment-281776949:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/544#issuecomment-281776949
https://github.com/openbabel/openbabel/issues/545#issuecomment-281776970:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. This is now fixed in the SVN repository for both 2.0.x and development trunk. ; The bug was caused by an incorrect code change on 5/24. (Oops!). -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/545#issuecomment-281776970
https://github.com/openbabel/openbabel/issues/546#issuecomment-281776980:223,Deployability,release,released,223,"Logged In: YES ; user_id=21420. This works for me in both the latest 2.0.x development code and the ; development trunk. I believe this was fixed by recent SMILES/aromaticity bug-fixing and should ; be solved when 2.0.2 is released. I'm marking this closed as it works for me, and Craig verifies that his batch of ; aromaticity tests are working too. Any new aromaticity bugs should be ; opened as separate issues. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/546#issuecomment-281776980
https://github.com/openbabel/openbabel/issues/546#issuecomment-281776980:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. This works for me in both the latest 2.0.x development code and the ; development trunk. I believe this was fixed by recent SMILES/aromaticity bug-fixing and should ; be solved when 2.0.2 is released. I'm marking this closed as it works for me, and Craig verifies that his batch of ; aromaticity tests are working too. Any new aromaticity bugs should be ; opened as separate issues. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/546#issuecomment-281776980
https://github.com/openbabel/openbabel/issues/546#issuecomment-281776980:328,Testability,test,tests,328,"Logged In: YES ; user_id=21420. This works for me in both the latest 2.0.x development code and the ; development trunk. I believe this was fixed by recent SMILES/aromaticity bug-fixing and should ; be solved when 2.0.2 is released. I'm marking this closed as it works for me, and Craig verifies that his batch of ; aromaticity tests are working too. Any new aromaticity bugs should be ; opened as separate issues. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/546#issuecomment-281776980
https://github.com/openbabel/openbabel/issues/547#issuecomment-281776991:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. Fixed this in the 2.1 trunk and the 2.0.x development repository now. The ; problem was in OBConversion::BatchFileName. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/547#issuecomment-281776991
https://github.com/openbabel/openbabel/issues/548#issuecomment-281777007:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. This should be fixed in the 2.1 SVN repository now. I've also added the ; suggested invalid SMARTS to the tests. I'm marking this ""pending"" -- if there is no other comment, this will be closed ; as fixed. If the bug is not, in fact, fixed, please comment on what's missing ; from the current revision. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/548#issuecomment-281777007
https://github.com/openbabel/openbabel/issues/548#issuecomment-281777007:138,Testability,test,tests,138,"Logged In: YES ; user_id=21420. This should be fixed in the 2.1 SVN repository now. I've also added the ; suggested invalid SMARTS to the tests. I'm marking this ""pending"" -- if there is no other comment, this will be closed ; as fixed. If the bug is not, in fact, fixed, please comment on what's missing ; from the current revision. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/548#issuecomment-281777007
https://github.com/openbabel/openbabel/issues/548#issuecomment-281777008:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/548#issuecomment-281777008
https://github.com/openbabel/openbabel/issues/549#issuecomment-281777023:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. This has now been fixed in the 2.1 development trunk and I'll try to back-port ; the changes to the 2.0.x development as well for 2.0.2. I'm marking this ""pending"" -- if there isn't any further comment, this will ; automatically close as fixed within 2 weeks. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/549#issuecomment-281777023
https://github.com/openbabel/openbabel/issues/549#issuecomment-281777025:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/549#issuecomment-281777025
https://github.com/openbabel/openbabel/issues/550#issuecomment-281777040:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Actually, I think the interesting question is also why the atoms seem to be ; renumbered every time. In the first case, the input goes from the nitrogen to the benzene ring. But the ; output goes from the nitrogen to the CH2 group and the dithiole-3-thione:; S=c1sscc1. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/550#issuecomment-281777040
https://github.com/openbabel/openbabel/issues/550#issuecomment-281777042:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. In one case:; N1Cc2[s][s]c(c2c2ccccc12)=S. the BO sum for every S atom is 2. In the other case:; N1c2ccccc2c2c(ssc2C1)=S. the BO sum for the aromatic S atoms is 3. So in that case, it's a strange valence and it brackets the atom. Why does this ; happen? In this case, the bond order assignment places a double bond ; between the aromatic sulfur atoms. I'll investigate why it's doing that later -- I suspect something in kekulize.cpp ; -- it probably needs a special case rule that says that no double bond is ; needed between two aromatic sulfurs. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/550#issuecomment-281777042
https://github.com/openbabel/openbabel/issues/550#issuecomment-281777044:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. Added a special case in kekulize.cpp in repository. Solves problem for now. Marking this closed.; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/550#issuecomment-281777044
https://github.com/openbabel/openbabel/issues/1466#issuecomment-281810523:123,Deployability,patch,patch,123,"Logged In: YES ; user_id=21420. OK, this is now implemented in the 2.1 SVN repository -- anyone interested can ; ask for a patch (revision 1486). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1466#issuecomment-281810523
https://github.com/openbabel/openbabel/issues/1466#issuecomment-281810523:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. OK, this is now implemented in the 2.1 SVN repository -- anyone interested can ; ask for a patch (revision 1486). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1466#issuecomment-281810523
https://github.com/openbabel/openbabel/issues/1467#issuecomment-281810534:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615. I agree but would go further. There is little point in; storing data which is easily computed. The contamination of; OBGenericData was one reason why I bypassed GetFormula(); with GetSpacedFormula(). . I would propose to change the code so that RingData and ; Formula do not store here. Chiral data should also not be; stored here (as I keep saying without doing anything) and; maybe not z-matrix stuff either. . Broadly, OBGenericData should contain:; meta-data comments, IDs, sources, methods, etc.; extra chemical information - e.g crystal properties,; energies, spectra and all those comp chem things I don't; uderstand.; and, if really necessary, any data which takes more than a; second to calculate or requires an external program. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1467#issuecomment-281810534
https://github.com/openbabel/openbabel/issues/1467#issuecomment-281810535:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420; Originator: YES. This is fixed in the current SVN trunk.; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1467#issuecomment-281810535
https://github.com/openbabel/openbabel/issues/551#issuecomment-281777206:454,Deployability,patch,patch,454,"Logged In: YES ; user_id=21420. I honestly think the best current solution for this problem is to reject all ""."" ; SMARTS patterns. The dot matching behavior doesn't work correct in the ; current code at all, since there's no test to be sure that the individual ; components are actually separate (i.e. C.C can match an ethane molecule). ; This has been documented on the webpage for a while:. http://openbabel.sourceforge.net/wiki/SMARTS. I'll commit a patch for this shortly, it's basically just one line. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/551#issuecomment-281777206
https://github.com/openbabel/openbabel/issues/551#issuecomment-281777206:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I honestly think the best current solution for this problem is to reject all ""."" ; SMARTS patterns. The dot matching behavior doesn't work correct in the ; current code at all, since there's no test to be sure that the individual ; components are actually separate (i.e. C.C can match an ethane molecule). ; This has been documented on the webpage for a while:. http://openbabel.sourceforge.net/wiki/SMARTS. I'll commit a patch for this shortly, it's basically just one line. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/551#issuecomment-281777206
https://github.com/openbabel/openbabel/issues/551#issuecomment-281777206:226,Testability,test,test,226,"Logged In: YES ; user_id=21420. I honestly think the best current solution for this problem is to reject all ""."" ; SMARTS patterns. The dot matching behavior doesn't work correct in the ; current code at all, since there's no test to be sure that the individual ; components are actually separate (i.e. C.C can match an ethane molecule). ; This has been documented on the webpage for a while:. http://openbabel.sourceforge.net/wiki/SMARTS. I'll commit a patch for this shortly, it's basically just one line. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/551#issuecomment-281777206
https://github.com/openbabel/openbabel/issues/551#issuecomment-281777209:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I should mention that I'm marking this ""pending"" and it will auto-close as being ; resolved, if there's no further comment within the next 2 weeks. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/551#issuecomment-281777209
https://github.com/openbabel/openbabel/issues/551#issuecomment-281777213:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/551#issuecomment-281777213
https://github.com/openbabel/openbabel/issues/552#issuecomment-281777230:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. As a follow-up:. http://www.daylight.com/dayhtml/doc/theory/theory.smarts.html#RTFToC39. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/552#issuecomment-281777230
https://github.com/openbabel/openbabel/issues/552#issuecomment-281777232:237,Availability,error,errors,237,"Logged In: YES ; user_id=1444119. This is most likely a combination of two other bugs. . 1. As far as I can tell, any SMARTS with @, @@, or /\; cis/trans markings never matches itself. It's just flat broken. 2. The other major source of errors is bug #1503849, ""SMARTS; ring-closure not parsed correctly."" Since OB *often* writes; out SMILES like C=1CCCCC1, these never match themselves. Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/552#issuecomment-281777232
https://github.com/openbabel/openbabel/issues/552#issuecomment-281777232:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1444119. This is most likely a combination of two other bugs. . 1. As far as I can tell, any SMARTS with @, @@, or /\; cis/trans markings never matches itself. It's just flat broken. 2. The other major source of errors is bug #1503849, ""SMARTS; ring-closure not parsed correctly."" Since OB *often* writes; out SMILES like C=1CCCCC1, these never match themselves. Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/552#issuecomment-281777232
https://github.com/openbabel/openbabel/issues/552#issuecomment-281777233:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. This is now a duplicate, as mentioned by Craig. I'm marking this closed as Craig ; has opened reports for the separate issues. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/552#issuecomment-281777233
https://github.com/openbabel/openbabel/issues/553#issuecomment-281777242:416,Availability,echo,echo,416,"Logged In: YES ; user_id=21420. The first part of this ""@"" vs. ""@@"" specification in SMARTS was simply ; something that was apparently left unimplemented. It now works. As for cis/trans, I don't know what the problem is -- certainly the test for ; bond->IsUp and bond->IsDown are being run correctly. I'll debug that ; tomorrow. I suspect that it's trying to match in one direction and finding problems, ; since:; $ echo ""Cl/C=C/Cl"" | tools/obgrep ""Cl\C=C\Cl""; Cl/C=C/Cl. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/553#issuecomment-281777242
https://github.com/openbabel/openbabel/issues/553#issuecomment-281777242:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. The first part of this ""@"" vs. ""@@"" specification in SMARTS was simply ; something that was apparently left unimplemented. It now works. As for cis/trans, I don't know what the problem is -- certainly the test for ; bond->IsUp and bond->IsDown are being run correctly. I'll debug that ; tomorrow. I suspect that it's trying to match in one direction and finding problems, ; since:; $ echo ""Cl/C=C/Cl"" | tools/obgrep ""Cl\C=C\Cl""; Cl/C=C/Cl. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/553#issuecomment-281777242
https://github.com/openbabel/openbabel/issues/553#issuecomment-281777242:237,Testability,test,test,237,"Logged In: YES ; user_id=21420. The first part of this ""@"" vs. ""@@"" specification in SMARTS was simply ; something that was apparently left unimplemented. It now works. As for cis/trans, I don't know what the problem is -- certainly the test for ; bond->IsUp and bond->IsDown are being run correctly. I'll debug that ; tomorrow. I suspect that it's trying to match in one direction and finding problems, ; since:; $ echo ""Cl/C=C/Cl"" | tools/obgrep ""Cl\C=C\Cl""; Cl/C=C/Cl. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/553#issuecomment-281777242
https://github.com/openbabel/openbabel/issues/553#issuecomment-281777242:96,Usability,simpl,simply,96,"Logged In: YES ; user_id=21420. The first part of this ""@"" vs. ""@@"" specification in SMARTS was simply ; something that was apparently left unimplemented. It now works. As for cis/trans, I don't know what the problem is -- certainly the test for ; bond->IsUp and bond->IsDown are being run correctly. I'll debug that ; tomorrow. I suspect that it's trying to match in one direction and finding problems, ; since:; $ echo ""Cl/C=C/Cl"" | tools/obgrep ""Cl\C=C\Cl""; Cl/C=C/Cl. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/553#issuecomment-281777242
https://github.com/openbabel/openbabel/issues/553#issuecomment-281777243:54,Availability,error,error,54,"Logged In: YES ; user_id=21420. OK, that was a stupid error and should have been caught sooner. UP was ; declared as the ""/"" specification, but smilesformat.cpp and parsmart.cpp had up ; for one and down for the other!. This is now fixed in the 2.1 SVN. I'm marking this ""pending"" -- if there is no ; further comment, this will close as being fixed in 14 days. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/553#issuecomment-281777243
https://github.com/openbabel/openbabel/issues/553#issuecomment-281777243:199,Availability,down,down,199,"Logged In: YES ; user_id=21420. OK, that was a stupid error and should have been caught sooner. UP was ; declared as the ""/"" specification, but smilesformat.cpp and parsmart.cpp had up ; for one and down for the other!. This is now fixed in the 2.1 SVN. I'm marking this ""pending"" -- if there is no ; further comment, this will close as being fixed in 14 days. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/553#issuecomment-281777243
https://github.com/openbabel/openbabel/issues/553#issuecomment-281777243:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. OK, that was a stupid error and should have been caught sooner. UP was ; declared as the ""/"" specification, but smilesformat.cpp and parsmart.cpp had up ; for one and down for the other!. This is now fixed in the 2.1 SVN. I'm marking this ""pending"" -- if there is no ; further comment, this will close as being fixed in 14 days. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/553#issuecomment-281777243
https://github.com/openbabel/openbabel/issues/553#issuecomment-281777245:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/553#issuecomment-281777245
https://github.com/openbabel/openbabel/issues/554#issuecomment-281777250:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1444119. Accidentally created twice, deleting second copy. Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/554#issuecomment-281777250
https://github.com/openbabel/openbabel/issues/555#issuecomment-281777254:0,Testability,Log,Logged,0,Logged In: YES ; user_id=840863. Another (simplier) example:. [C@@]%10(F)(C)C(=O)O.Br%10 is converted to; F[C@@](Br)(C)C(=O)O which is wrong. Correct would be e.g.; Br[C@@](F)(C)C(=O)O. --Andreas. Original comment by: archvile18,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777254
https://github.com/openbabel/openbabel/issues/555#issuecomment-281777254:42,Usability,simpl,simplier,42,Logged In: YES ; user_id=840863. Another (simplier) example:. [C@@]%10(F)(C)C(=O)O.Br%10 is converted to; F[C@@](Br)(C)C(=O)O which is wrong. Correct would be e.g.; Br[C@@](F)(C)C(=O)O. --Andreas. Original comment by: archvile18,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777254
https://github.com/openbabel/openbabel/issues/555#issuecomment-281777258:584,Performance,perform,performed,584,"Logged In: YES ; user_id=21420. Actually, the simplified case, shows how the bug occurs:. [C@@]1(F)(C)C(=O)O.Br1; Br1.[C@@]1(F)(C)C(=O)O. These are identical SMILES (e.g., check at http://www.daylight.com/daycgi/; depict). But these end up as very different SMILES because the atom ordering isn't ; handled by Open Babel:. F[C@@](Br)(C)C(=O)O test.smi; Br[C@@](F)(C)C(=O)O test.smi. Personally, I don't like this use of ring closure bonds, but you're correct that ; this is a bug. (The other bug report is essentially a duplicate -- the problem ; is that the ring closure isn't being performed correctly.). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777258
https://github.com/openbabel/openbabel/issues/555#issuecomment-281777258:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Actually, the simplified case, shows how the bug occurs:. [C@@]1(F)(C)C(=O)O.Br1; Br1.[C@@]1(F)(C)C(=O)O. These are identical SMILES (e.g., check at http://www.daylight.com/daycgi/; depict). But these end up as very different SMILES because the atom ordering isn't ; handled by Open Babel:. F[C@@](Br)(C)C(=O)O test.smi; Br[C@@](F)(C)C(=O)O test.smi. Personally, I don't like this use of ring closure bonds, but you're correct that ; this is a bug. (The other bug report is essentially a duplicate -- the problem ; is that the ring closure isn't being performed correctly.). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777258
https://github.com/openbabel/openbabel/issues/555#issuecomment-281777258:343,Testability,test,test,343,"Logged In: YES ; user_id=21420. Actually, the simplified case, shows how the bug occurs:. [C@@]1(F)(C)C(=O)O.Br1; Br1.[C@@]1(F)(C)C(=O)O. These are identical SMILES (e.g., check at http://www.daylight.com/daycgi/; depict). But these end up as very different SMILES because the atom ordering isn't ; handled by Open Babel:. F[C@@](Br)(C)C(=O)O test.smi; Br[C@@](F)(C)C(=O)O test.smi. Personally, I don't like this use of ring closure bonds, but you're correct that ; this is a bug. (The other bug report is essentially a duplicate -- the problem ; is that the ring closure isn't being performed correctly.). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777258
https://github.com/openbabel/openbabel/issues/555#issuecomment-281777258:373,Testability,test,test,373,"Logged In: YES ; user_id=21420. Actually, the simplified case, shows how the bug occurs:. [C@@]1(F)(C)C(=O)O.Br1; Br1.[C@@]1(F)(C)C(=O)O. These are identical SMILES (e.g., check at http://www.daylight.com/daycgi/; depict). But these end up as very different SMILES because the atom ordering isn't ; handled by Open Babel:. F[C@@](Br)(C)C(=O)O test.smi; Br[C@@](F)(C)C(=O)O test.smi. Personally, I don't like this use of ring closure bonds, but you're correct that ; this is a bug. (The other bug report is essentially a duplicate -- the problem ; is that the ring closure isn't being performed correctly.). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777258
https://github.com/openbabel/openbabel/issues/555#issuecomment-281777258:46,Usability,simpl,simplified,46,"Logged In: YES ; user_id=21420. Actually, the simplified case, shows how the bug occurs:. [C@@]1(F)(C)C(=O)O.Br1; Br1.[C@@]1(F)(C)C(=O)O. These are identical SMILES (e.g., check at http://www.daylight.com/daycgi/; depict). But these end up as very different SMILES because the atom ordering isn't ; handled by Open Babel:. F[C@@](Br)(C)C(=O)O test.smi; Br[C@@](F)(C)C(=O)O test.smi. Personally, I don't like this use of ring closure bonds, but you're correct that ; this is a bug. (The other bug report is essentially a duplicate -- the problem ; is that the ring closure isn't being performed correctly.). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777258
https://github.com/openbabel/openbabel/issues/555#issuecomment-281777259:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=840863. We apply this special use of ring closure bonds for rapid; string concatenation-based combinatorial library enumeration; (see A. Schüller, G. Schneider, E. Byvatov; SMILIB: Rapid; Assembly of Combinatorial Libraries in SMILES Notation, QSAR; & Combinatorial Science 2003, 22, 719-721.); The obvious advantage of using those ring closures is that; SMILES do only need to be parsed as strings and not as; molecules, which saves a lot of computation time. --Andreas. Original comment by: archvile18",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777259
https://github.com/openbabel/openbabel/issues/555#issuecomment-281777260:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1309655. When I added the chiral code to allow Smiles->MOLv3000 ; conversion I didn't add the code to the WriteSmiles. If you ; convert from the smiles string ""C1-C-C-C-C-C1%11.O%10%11.N; [C@@]%10(C)C(=O)O"" to sdf Molv3000 (-x3) and then from that ; to smiles you get ""C1C(CCCC1)O[C@](N)(C)C(=O)O"" which is ; the correct output. You can use this as a workaround for dot disconected ; structures until I get time to work out how to implement ; the chiral checking properly in the write smiles code. Original comment by: nickengland",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777260
https://github.com/openbabel/openbabel/issues/555#issuecomment-281777262:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1309655. The attached smilesformat.cpp has been altered to correctly ; write 0D chirality for dot.disconected SMILES. I think its ; working correctly,. C1-C-C-C-C-C1%11.O%10%11.N[C@@]%10(C)C(=O)O; C1-C-C-C-C-C1%11.O%10%11.N[C@]%10(C(=O)O)C; C1C(CCCC1)O[C@](N)(C)C(=O)O . are all converted into the same molecule (although not ; written in the same way). I haven't tested it a great deal so there might be some ; problems with it. - Nick. Original comment by: nickengland",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777262
https://github.com/openbabel/openbabel/issues/555#issuecomment-281777262:389,Testability,test,tested,389,"Logged In: YES ; user_id=1309655. The attached smilesformat.cpp has been altered to correctly ; write 0D chirality for dot.disconected SMILES. I think its ; working correctly,. C1-C-C-C-C-C1%11.O%10%11.N[C@@]%10(C)C(=O)O; C1-C-C-C-C-C1%11.O%10%11.N[C@]%10(C(=O)O)C; C1C(CCCC1)O[C@](N)(C)C(=O)O . are all converted into the same molecule (although not ; written in the same way). I haven't tested it a great deal so there might be some ; problems with it. - Nick. Original comment by: nickengland",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777262
https://github.com/openbabel/openbabel/issues/555#issuecomment-281777264:39,Deployability,update,updated,39,"Logged In: YES ; user_id=21420. Nick's updated version of the SMILES parser, with OBChiralData output, ; appears to solve the problem. It is part of the 2.1 subversion repository, ; revision 1542 and later. I'm marking this bug ""pending."" Any comment in the next 2 weeks will reopen ; it, otherwise it will close as being fixed automatically. Nick, it'd be great to have more documentation on the OBChiralData code -- ; if you can contribute to that, it would be most appreciated!. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777264
https://github.com/openbabel/openbabel/issues/555#issuecomment-281777264:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Nick's updated version of the SMILES parser, with OBChiralData output, ; appears to solve the problem. It is part of the 2.1 subversion repository, ; revision 1542 and later. I'm marking this bug ""pending."" Any comment in the next 2 weeks will reopen ; it, otherwise it will close as being fixed automatically. Nick, it'd be great to have more documentation on the OBChiralData code -- ; if you can contribute to that, it would be most appreciated!. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777264
https://github.com/openbabel/openbabel/issues/555#issuecomment-281777265:47,Deployability,update,updated,47,Logged In: YES ; user_id=840863. Nick's latest updated version of the SMILES parser still; failed to convert this SMILES correctly:. [C@@]%10(F)(C)C(=O)O.Br%10 (S-configured). which was converted to. [C@](Br)(F)(C)C(=O)O (R-configured). I've made a test set of 128 nasty stereo SMILES and quite a; lot of them still got converted incorrectly.; I'd be glad to extensively test a new bug-fixed version of; the SMILES parser after my two-weeks vacations now. -Andreas. Original comment by: archvile18,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777265
https://github.com/openbabel/openbabel/issues/555#issuecomment-281777265:163,Modifiability,config,configured,163,Logged In: YES ; user_id=840863. Nick's latest updated version of the SMILES parser still; failed to convert this SMILES correctly:. [C@@]%10(F)(C)C(=O)O.Br%10 (S-configured). which was converted to. [C@](Br)(F)(C)C(=O)O (R-configured). I've made a test set of 128 nasty stereo SMILES and quite a; lot of them still got converted incorrectly.; I'd be glad to extensively test a new bug-fixed version of; the SMILES parser after my two-weeks vacations now. -Andreas. Original comment by: archvile18,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777265
https://github.com/openbabel/openbabel/issues/555#issuecomment-281777265:224,Modifiability,config,configured,224,Logged In: YES ; user_id=840863. Nick's latest updated version of the SMILES parser still; failed to convert this SMILES correctly:. [C@@]%10(F)(C)C(=O)O.Br%10 (S-configured). which was converted to. [C@](Br)(F)(C)C(=O)O (R-configured). I've made a test set of 128 nasty stereo SMILES and quite a; lot of them still got converted incorrectly.; I'd be glad to extensively test a new bug-fixed version of; the SMILES parser after my two-weeks vacations now. -Andreas. Original comment by: archvile18,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777265
https://github.com/openbabel/openbabel/issues/555#issuecomment-281777265:0,Testability,Log,Logged,0,Logged In: YES ; user_id=840863. Nick's latest updated version of the SMILES parser still; failed to convert this SMILES correctly:. [C@@]%10(F)(C)C(=O)O.Br%10 (S-configured). which was converted to. [C@](Br)(F)(C)C(=O)O (R-configured). I've made a test set of 128 nasty stereo SMILES and quite a; lot of them still got converted incorrectly.; I'd be glad to extensively test a new bug-fixed version of; the SMILES parser after my two-weeks vacations now. -Andreas. Original comment by: archvile18,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777265
https://github.com/openbabel/openbabel/issues/555#issuecomment-281777265:249,Testability,test,test,249,Logged In: YES ; user_id=840863. Nick's latest updated version of the SMILES parser still; failed to convert this SMILES correctly:. [C@@]%10(F)(C)C(=O)O.Br%10 (S-configured). which was converted to. [C@](Br)(F)(C)C(=O)O (R-configured). I've made a test set of 128 nasty stereo SMILES and quite a; lot of them still got converted incorrectly.; I'd be glad to extensively test a new bug-fixed version of; the SMILES parser after my two-weeks vacations now. -Andreas. Original comment by: archvile18,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777265
https://github.com/openbabel/openbabel/issues/555#issuecomment-281777265:371,Testability,test,test,371,Logged In: YES ; user_id=840863. Nick's latest updated version of the SMILES parser still; failed to convert this SMILES correctly:. [C@@]%10(F)(C)C(=O)O.Br%10 (S-configured). which was converted to. [C@](Br)(F)(C)C(=O)O (R-configured). I've made a test set of 128 nasty stereo SMILES and quite a; lot of them still got converted incorrectly.; I'd be glad to extensively test a new bug-fixed version of; the SMILES parser after my two-weeks vacations now. -Andreas. Original comment by: archvile18,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777265
https://github.com/openbabel/openbabel/issues/555#issuecomment-281777267:239,Deployability,update,update,239,"Logged In: YES ; user_id=21420; Originator: NO. Well, I'm going to mark this one closed. We have fixed the initial set of bugs. Since this bug report, we've fixed a variety of other SMILES bugs which may cover your other set. In your last update, you've promised to test 128 nasty stereo SMILES -- if you'd either send me the list of SMILES or let me e-mail you a 2.1 beta from the current SVN trunk, we can validate those. If there are bugs in your nasty set, let's open a new bug for those. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777267
https://github.com/openbabel/openbabel/issues/555#issuecomment-281777267:408,Security,validat,validate,408,"Logged In: YES ; user_id=21420; Originator: NO. Well, I'm going to mark this one closed. We have fixed the initial set of bugs. Since this bug report, we've fixed a variety of other SMILES bugs which may cover your other set. In your last update, you've promised to test 128 nasty stereo SMILES -- if you'd either send me the list of SMILES or let me e-mail you a 2.1 beta from the current SVN trunk, we can validate those. If there are bugs in your nasty set, let's open a new bug for those. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777267
https://github.com/openbabel/openbabel/issues/555#issuecomment-281777267:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. Well, I'm going to mark this one closed. We have fixed the initial set of bugs. Since this bug report, we've fixed a variety of other SMILES bugs which may cover your other set. In your last update, you've promised to test 128 nasty stereo SMILES -- if you'd either send me the list of SMILES or let me e-mail you a 2.1 beta from the current SVN trunk, we can validate those. If there are bugs in your nasty set, let's open a new bug for those. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777267
https://github.com/openbabel/openbabel/issues/555#issuecomment-281777267:266,Testability,test,test,266,"Logged In: YES ; user_id=21420; Originator: NO. Well, I'm going to mark this one closed. We have fixed the initial set of bugs. Since this bug report, we've fixed a variety of other SMILES bugs which may cover your other set. In your last update, you've promised to test 128 nasty stereo SMILES -- if you'd either send me the list of SMILES or let me e-mail you a 2.1 beta from the current SVN trunk, we can validate those. If there are bugs in your nasty set, let's open a new bug for those. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777267
https://github.com/openbabel/openbabel/issues/555#issuecomment-281777268:0,Testability,Log,Logged,0,Logged In: YES ; user_id=840863; Originator: YES. If you could send me the latest 2.1 beta I'll do the tests again for the nasty set.; My email address is: a.schueller at chemie dot uni-frankfurt dot de. -Andreas. Original comment by: archvile18,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777268
https://github.com/openbabel/openbabel/issues/555#issuecomment-281777268:103,Testability,test,tests,103,Logged In: YES ; user_id=840863; Originator: YES. If you could send me the latest 2.1 beta I'll do the tests again for the nasty set.; My email address is: a.schueller at chemie dot uni-frankfurt dot de. -Andreas. Original comment by: archvile18,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777268
https://github.com/openbabel/openbabel/issues/556#issuecomment-281777279:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. Essentially this is a duplicate -- I don't think the underlying bug is any different ; from the stereo bug PR#1508741. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/556#issuecomment-281777279
https://github.com/openbabel/openbabel/issues/556#issuecomment-281777280:347,Deployability,release,release,347,"Logged In: YES ; user_id=21420. Nope, I was wrong -- this is a different bug (actually two). Initial [H] atoms were ignored, but they're sometimes needed for ""/"" or ""\"" ; specifications. Also, [H] atoms were omitted even when needed by a ""/"" or ""\"" specification. This is now fixed in the 2.1 SVN repository and will be backported for the ; 2.0.2 release. If you'd like a patch, please let me know. I'm marking this ""pending"" and will auto-close as fixed in 2 weeks if there is ; no further comment. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/556#issuecomment-281777280
https://github.com/openbabel/openbabel/issues/556#issuecomment-281777280:372,Deployability,patch,patch,372,"Logged In: YES ; user_id=21420. Nope, I was wrong -- this is a different bug (actually two). Initial [H] atoms were ignored, but they're sometimes needed for ""/"" or ""\"" ; specifications. Also, [H] atoms were omitted even when needed by a ""/"" or ""\"" specification. This is now fixed in the 2.1 SVN repository and will be backported for the ; 2.0.2 release. If you'd like a patch, please let me know. I'm marking this ""pending"" and will auto-close as fixed in 2 weeks if there is ; no further comment. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/556#issuecomment-281777280
https://github.com/openbabel/openbabel/issues/556#issuecomment-281777280:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Nope, I was wrong -- this is a different bug (actually two). Initial [H] atoms were ignored, but they're sometimes needed for ""/"" or ""\"" ; specifications. Also, [H] atoms were omitted even when needed by a ""/"" or ""\"" specification. This is now fixed in the 2.1 SVN repository and will be backported for the ; 2.0.2 release. If you'd like a patch, please let me know. I'm marking this ""pending"" and will auto-close as fixed in 2 weeks if there is ; no further comment. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/556#issuecomment-281777280
https://github.com/openbabel/openbabel/issues/556#issuecomment-281777281:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/556#issuecomment-281777281
https://github.com/openbabel/openbabel/issues/557#issuecomment-281777297:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. At least for now, the new newlinebuf class seems to do this exactly. It needs ; more testing before I'm convinced it works perfectly. I'll mark this as ""pending"" -- it will auto-close after 2 weeks if the newlinebuf ; class seems to work. If anyone wants/needs the class, please check the SVN trunk, revision 1489. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/557#issuecomment-281777297
https://github.com/openbabel/openbabel/issues/557#issuecomment-281777297:117,Testability,test,testing,117,"Logged In: YES ; user_id=21420. At least for now, the new newlinebuf class seems to do this exactly. It needs ; more testing before I'm convinced it works perfectly. I'll mark this as ""pending"" -- it will auto-close after 2 weeks if the newlinebuf ; class seems to work. If anyone wants/needs the class, please check the SVN trunk, revision 1489. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/557#issuecomment-281777297
https://github.com/openbabel/openbabel/issues/557#issuecomment-281777301:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/557#issuecomment-281777301
https://github.com/openbabel/openbabel/issues/558#issuecomment-281777303:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615. OBMol::Center() is working with the SVN HEAD code for me, at; least when called from OBMol::DoTransformations as part of; the normal conversion process (-c option). Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777303
https://github.com/openbabel/openbabel/issues/558#issuecomment-281777305:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=684210. Would you be so nice and post a code-snipped of yours? We ; don't get what to put in the std::map<> to be honest. ; In OB2.0.1 we simply called OBMol::Center() and were done, ; I wonder why this is no longer working. Original comment by: @cniehaus",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777305
https://github.com/openbabel/openbabel/issues/558#issuecomment-281777305:163,Usability,simpl,simply,163,"Logged In: YES ; user_id=684210. Would you be so nice and post a code-snipped of yours? We ; don't get what to put in the std::map<> to be honest. ; In OB2.0.1 we simply called OBMol::Center() and were done, ; I wonder why this is no longer working. Original comment by: @cniehaus",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777305
https://github.com/openbabel/openbabel/issues/558#issuecomment-281777307:317,Availability,failure,failures,317,Logged In: YES ; user_id=1189615. I'm afraid I don't understand what std::map<> you mean. The; call to OBMol::Center I was observing to be successful is at; line 70 of transform.cpp. ; babel some2Dmolecule.mol -omol -c; will exercise it.; Is your OBMol fully constructed? I have found this to be a; cause for strange failures of API functions in other cases. . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777307
https://github.com/openbabel/openbabel/issues/558#issuecomment-281777307:0,Testability,Log,Logged,0,Logged In: YES ; user_id=1189615. I'm afraid I don't understand what std::map<> you mean. The; call to OBMol::Center I was observing to be successful is at; line 70 of transform.cpp. ; babel some2Dmolecule.mol -omol -c; will exercise it.; Is your OBMol fully constructed? I have found this to be a; cause for strange failures of API functions in other cases. . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777307
https://github.com/openbabel/openbabel/issues/558#issuecomment-281777308:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=684210. Well, I am using OpenBabel's cpp-API, not the command-line; tool, that is causing your confusion. Original comment by: @cniehaus",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777308
https://github.com/openbabel/openbabel/issues/558#issuecomment-281777309:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Well, I'm certainly confused too. There's still OBMol::Center() which is the same ; as it ever was. It works for me. Carsten, could you post the code that you're using that's causing you problems? ; Again, I don't know what you mean by a std::map<>. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777309
https://github.com/openbabel/openbabel/issues/558#issuecomment-281777310:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=684210. My code is... void KalziumGLWidget::prepareMoleculeData(); {; // translate the molecule so that center has coords ; 0,0,0; m_molecule->Center();. m_molecule is:; /**; * The molecule which is displayed; */; OpenBabel::OBMol* m_molecule;. This worked in OB2.0.1 and does not work in 2.1.x. The std::map<> I am talking about is here:. OBBase* OBMol::DoTransformations(const ; std::map<std::string, std::string>* pOptions). I never used the DoTransformations code, as I said: My ; code worked in OB 2.0, but Chris mentioned it. Original comment by: @cniehaus",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777310
https://github.com/openbabel/openbabel/issues/558#issuecomment-281777311:166,Availability,redundant,redundant,166,"Logged In: YES ; user_id=21420. The Transformation code is used by the command-line babel program and ; isn't particularly intended for user code. (You can, but it's redundant, since ; every function in Transformation is available directly by other means.). As I e-mailed directly, OBMol::Center() certainly works for me in the 2.1 SVN ; trunk. For proof, I took a molecule, called:. m_molecule->Translate(vector3(-1.0f, 0.5f, 0.8f)); // or whatever vector you ; want; // Now I output the molecule, which shows a clear translation. Then:; obConversion.Write(&m_molecule, &cout);; m_molecule->Center();; obConversion.Write(&m_molecule, &cout);. After the call to OBMol::Center() the coordinates are indeed centered ; compared to the coords from the Translate() call. I'm marking this ""Works for Me."" What revision of the SVN code are you using?. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777311
https://github.com/openbabel/openbabel/issues/558#issuecomment-281777311:221,Availability,avail,available,221,"Logged In: YES ; user_id=21420. The Transformation code is used by the command-line babel program and ; isn't particularly intended for user code. (You can, but it's redundant, since ; every function in Transformation is available directly by other means.). As I e-mailed directly, OBMol::Center() certainly works for me in the 2.1 SVN ; trunk. For proof, I took a molecule, called:. m_molecule->Translate(vector3(-1.0f, 0.5f, 0.8f)); // or whatever vector you ; want; // Now I output the molecule, which shows a clear translation. Then:; obConversion.Write(&m_molecule, &cout);; m_molecule->Center();; obConversion.Write(&m_molecule, &cout);. After the call to OBMol::Center() the coordinates are indeed centered ; compared to the coords from the Translate() call. I'm marking this ""Works for Me."" What revision of the SVN code are you using?. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777311
https://github.com/openbabel/openbabel/issues/558#issuecomment-281777311:166,Safety,redund,redundant,166,"Logged In: YES ; user_id=21420. The Transformation code is used by the command-line babel program and ; isn't particularly intended for user code. (You can, but it's redundant, since ; every function in Transformation is available directly by other means.). As I e-mailed directly, OBMol::Center() certainly works for me in the 2.1 SVN ; trunk. For proof, I took a molecule, called:. m_molecule->Translate(vector3(-1.0f, 0.5f, 0.8f)); // or whatever vector you ; want; // Now I output the molecule, which shows a clear translation. Then:; obConversion.Write(&m_molecule, &cout);; m_molecule->Center();; obConversion.Write(&m_molecule, &cout);. After the call to OBMol::Center() the coordinates are indeed centered ; compared to the coords from the Translate() call. I'm marking this ""Works for Me."" What revision of the SVN code are you using?. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777311
https://github.com/openbabel/openbabel/issues/558#issuecomment-281777311:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. The Transformation code is used by the command-line babel program and ; isn't particularly intended for user code. (You can, but it's redundant, since ; every function in Transformation is available directly by other means.). As I e-mailed directly, OBMol::Center() certainly works for me in the 2.1 SVN ; trunk. For proof, I took a molecule, called:. m_molecule->Translate(vector3(-1.0f, 0.5f, 0.8f)); // or whatever vector you ; want; // Now I output the molecule, which shows a clear translation. Then:; obConversion.Write(&m_molecule, &cout);; m_molecule->Center();; obConversion.Write(&m_molecule, &cout);. After the call to OBMol::Center() the coordinates are indeed centered ; compared to the coords from the Translate() call. I'm marking this ""Works for Me."" What revision of the SVN code are you using?. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777311
https://github.com/openbabel/openbabel/issues/558#issuecomment-281777311:513,Usability,clear,clear,513,"Logged In: YES ; user_id=21420. The Transformation code is used by the command-line babel program and ; isn't particularly intended for user code. (You can, but it's redundant, since ; every function in Transformation is available directly by other means.). As I e-mailed directly, OBMol::Center() certainly works for me in the 2.1 SVN ; trunk. For proof, I took a molecule, called:. m_molecule->Translate(vector3(-1.0f, 0.5f, 0.8f)); // or whatever vector you ; want; // Now I output the molecule, which shows a clear translation. Then:; obConversion.Write(&m_molecule, &cout);; m_molecule->Center();; obConversion.Write(&m_molecule, &cout);. After the call to OBMol::Center() the coordinates are indeed centered ; compared to the coords from the Translate() call. I'm marking this ""Works for Me."" What revision of the SVN code are you using?. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777311
https://github.com/openbabel/openbabel/issues/558#issuecomment-281777312:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. This turned out to be a bug in the CML ReadMolecule() method in 2.1 ; development. The other file formats are unaffected. This is now fixed in the 2.1 trunk, as of revision 1534.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777312
https://github.com/openbabel/openbabel/issues/559#issuecomment-281777321:4,Testability,test,test,4,sdf test file. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/559#issuecomment-281777321
https://github.com/openbabel/openbabel/issues/559#issuecomment-281777322:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Mm. That structure totally confused the chains parser. It ran into an infinite ; loop. Surprisingly, that never came up before -- there's no test to ensure an ; atom is never visited twice. I just added a test and while the result is a little strange (it thinks there are ; 3-4 unknown protein residues), it certainly doesn't crash now. I'll commit the change to SVN on the trunk and 2.0.2 branch shortly. I'm marking this as fixed, pending further comment. In two weeks it'll close ; automatically as fixed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/559#issuecomment-281777322
https://github.com/openbabel/openbabel/issues/559#issuecomment-281777322:173,Testability,test,test,173,"Logged In: YES ; user_id=21420. Mm. That structure totally confused the chains parser. It ran into an infinite ; loop. Surprisingly, that never came up before -- there's no test to ensure an ; atom is never visited twice. I just added a test and while the result is a little strange (it thinks there are ; 3-4 unknown protein residues), it certainly doesn't crash now. I'll commit the change to SVN on the trunk and 2.0.2 branch shortly. I'm marking this as fixed, pending further comment. In two weeks it'll close ; automatically as fixed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/559#issuecomment-281777322
https://github.com/openbabel/openbabel/issues/559#issuecomment-281777322:237,Testability,test,test,237,"Logged In: YES ; user_id=21420. Mm. That structure totally confused the chains parser. It ran into an infinite ; loop. Surprisingly, that never came up before -- there's no test to ensure an ; atom is never visited twice. I just added a test and while the result is a little strange (it thinks there are ; 3-4 unknown protein residues), it certainly doesn't crash now. I'll commit the change to SVN on the trunk and 2.0.2 branch shortly. I'm marking this as fixed, pending further comment. In two weeks it'll close ; automatically as fixed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/559#issuecomment-281777322
https://github.com/openbabel/openbabel/issues/559#issuecomment-281777323:138,Availability,error,errorlevel,138,"Logged In: YES ; user_id=850620. Converts fine now, except for an info message:. no228@sandwi:~/Work/EdSDFile$ babel tmp.sdf try.mol2; ---errorlevel 2; ==============================; *** Open Babel Information in ParseLine; Could not parse line in phmodel table from phmodel.txt; 1 molecule converted; 1 info messages 15 audit log messages. I think I've noted this with other molecules also...is this; ignorable or does it signify a problem?. Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/559#issuecomment-281777323
https://github.com/openbabel/openbabel/issues/559#issuecomment-281777323:71,Integrability,message,message,71,"Logged In: YES ; user_id=850620. Converts fine now, except for an info message:. no228@sandwi:~/Work/EdSDFile$ babel tmp.sdf try.mol2; ---errorlevel 2; ==============================; *** Open Babel Information in ParseLine; Could not parse line in phmodel table from phmodel.txt; 1 molecule converted; 1 info messages 15 audit log messages. I think I've noted this with other molecules also...is this; ignorable or does it signify a problem?. Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/559#issuecomment-281777323
https://github.com/openbabel/openbabel/issues/559#issuecomment-281777323:310,Integrability,message,messages,310,"Logged In: YES ; user_id=850620. Converts fine now, except for an info message:. no228@sandwi:~/Work/EdSDFile$ babel tmp.sdf try.mol2; ---errorlevel 2; ==============================; *** Open Babel Information in ParseLine; Could not parse line in phmodel table from phmodel.txt; 1 molecule converted; 1 info messages 15 audit log messages. I think I've noted this with other molecules also...is this; ignorable or does it signify a problem?. Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/559#issuecomment-281777323
https://github.com/openbabel/openbabel/issues/559#issuecomment-281777323:332,Integrability,message,messages,332,"Logged In: YES ; user_id=850620. Converts fine now, except for an info message:. no228@sandwi:~/Work/EdSDFile$ babel tmp.sdf try.mol2; ---errorlevel 2; ==============================; *** Open Babel Information in ParseLine; Could not parse line in phmodel table from phmodel.txt; 1 molecule converted; 1 info messages 15 audit log messages. I think I've noted this with other molecules also...is this; ignorable or does it signify a problem?. Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/559#issuecomment-281777323
https://github.com/openbabel/openbabel/issues/559#issuecomment-281777323:322,Security,audit,audit,322,"Logged In: YES ; user_id=850620. Converts fine now, except for an info message:. no228@sandwi:~/Work/EdSDFile$ babel tmp.sdf try.mol2; ---errorlevel 2; ==============================; *** Open Babel Information in ParseLine; Could not parse line in phmodel table from phmodel.txt; 1 molecule converted; 1 info messages 15 audit log messages. I think I've noted this with other molecules also...is this; ignorable or does it signify a problem?. Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/559#issuecomment-281777323
https://github.com/openbabel/openbabel/issues/559#issuecomment-281777323:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=850620. Converts fine now, except for an info message:. no228@sandwi:~/Work/EdSDFile$ babel tmp.sdf try.mol2; ---errorlevel 2; ==============================; *** Open Babel Information in ParseLine; Could not parse line in phmodel table from phmodel.txt; 1 molecule converted; 1 info messages 15 audit log messages. I think I've noted this with other molecules also...is this; ignorable or does it signify a problem?. Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/559#issuecomment-281777323
https://github.com/openbabel/openbabel/issues/559#issuecomment-281777323:328,Testability,log,log,328,"Logged In: YES ; user_id=850620. Converts fine now, except for an info message:. no228@sandwi:~/Work/EdSDFile$ babel tmp.sdf try.mol2; ---errorlevel 2; ==============================; *** Open Babel Information in ParseLine; Could not parse line in phmodel table from phmodel.txt; 1 molecule converted; 1 info messages 15 audit log messages. I think I've noted this with other molecules also...is this; ignorable or does it signify a problem?. Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/559#issuecomment-281777323
https://github.com/openbabel/openbabel/issues/559#issuecomment-281777324:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I'm marking this closed. I hadn't noticed the ParseLine output, but that's totally ; unrelated. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/559#issuecomment-281777324
https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810558:274,Deployability,release,release,274,"Logged In: YES ; user_id=684210. Well, I am all for this change but please make it optional ; first because there are always issues when you switch the ; buildsystem. The Scribus folks also switched to CMake and ; did the transition in something like a weekend!; CMake will release 2.4.3 which would be a very good ; release to start porting. For KDE Alex Neundorf wrote a ; Makefile.am-2-CMake script which does about 90% of the ; conversion. ; Because of KDE's huge size I guess all scripts OB2 would ; need are already done. And of course, because KDE is a ; major package you can be sure that the next round of ; distributions will all contain CMake 2.4.x (KDE requires ; 2.4.1 right now, but soon 2.4.3).; But hey, CMake is contributing binaries for Linux, Windows ; and Mac, so that shouldn't be a big problem anyway. ; CMake's documentation is exellent and the developers are ; very very helpfull. Original comment by: @cniehaus",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810558
https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810558:317,Deployability,release,release,317,"Logged In: YES ; user_id=684210. Well, I am all for this change but please make it optional ; first because there are always issues when you switch the ; buildsystem. The Scribus folks also switched to CMake and ; did the transition in something like a weekend!; CMake will release 2.4.3 which would be a very good ; release to start porting. For KDE Alex Neundorf wrote a ; Makefile.am-2-CMake script which does about 90% of the ; conversion. ; Because of KDE's huge size I guess all scripts OB2 would ; need are already done. And of course, because KDE is a ; major package you can be sure that the next round of ; distributions will all contain CMake 2.4.x (KDE requires ; 2.4.1 right now, but soon 2.4.3).; But hey, CMake is contributing binaries for Linux, Windows ; and Mac, so that shouldn't be a big problem anyway. ; CMake's documentation is exellent and the developers are ; very very helpfull. Original comment by: @cniehaus",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810558
https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810558:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=684210. Well, I am all for this change but please make it optional ; first because there are always issues when you switch the ; buildsystem. The Scribus folks also switched to CMake and ; did the transition in something like a weekend!; CMake will release 2.4.3 which would be a very good ; release to start porting. For KDE Alex Neundorf wrote a ; Makefile.am-2-CMake script which does about 90% of the ; conversion. ; Because of KDE's huge size I guess all scripts OB2 would ; need are already done. And of course, because KDE is a ; major package you can be sure that the next round of ; distributions will all contain CMake 2.4.x (KDE requires ; 2.4.1 right now, but soon 2.4.3).; But hey, CMake is contributing binaries for Linux, Windows ; and Mac, so that shouldn't be a big problem anyway. ; CMake's documentation is exellent and the developers are ; very very helpfull. Original comment by: @cniehaus",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810558
https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810559:0,Testability,Log,Logged,0,Logged In: YES ; user_id=684210. >Because of KDE's huge size I guess all scripts OB2 would ; >need are already done. That was supposed to be: Because KDE is now 100% converted ; and works I am sure that every issue OB2.1 has is now ; solved (because KDE triggered the same issue in one of its ; 5 millions lines of code ;-). Original comment by: @cniehaus,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810559
https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810560:81,Deployability,integrat,integrate,81,Logged In: YES ; user_id=196016. > Supporting CMake would make it much easier to integrate; KDE > programs and Open Babel. :-). What kind of things would it make possible which are not; possible and/or feasible right now?. Michael. Original comment by: @mbanck,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810560
https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810560:81,Integrability,integrat,integrate,81,Logged In: YES ; user_id=196016. > Supporting CMake would make it much easier to integrate; KDE > programs and Open Babel. :-). What kind of things would it make possible which are not; possible and/or feasible right now?. Michael. Original comment by: @mbanck,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810560
https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810560:0,Testability,Log,Logged,0,Logged In: YES ; user_id=196016. > Supporting CMake would make it much easier to integrate; KDE > programs and Open Babel. :-). What kind of things would it make possible which are not; possible and/or feasible right now?. Michael. Original comment by: @mbanck,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810560
https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810562:46,Deployability,integrat,integration,46,"Logged In: YES ; user_id=684210. Not sure why integration would be easier because OpenBabel ; will just but a couple of object-files and header for any ; other app, including KDE.; CMake is a Makefile-generator (or project-file-generator ; for example for KDevelop or MS-Visual (or however the ; MS-IDE is called)). But it is much *easier* to write CMake ; files compared to autotools. For example, you only need ; one language to learn (cmake) and not four. Everything is ; in one central file. Even if you have no clue about cmake ; the syntax is very easy to understand (unlike the cryptic ; m4/.in.in/Makefile.am-stuff which I never understood). And ; CMake is much faster. Not sure if that is important for ; OpenBabel, but the equivalent of ""make -f Makefile.am ; && ./configure"" takes like 10 seconds for kdelibs while ; the autotool-command took minutes!. Original comment by: @cniehaus",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810562
https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810562:46,Integrability,integrat,integration,46,"Logged In: YES ; user_id=684210. Not sure why integration would be easier because OpenBabel ; will just but a couple of object-files and header for any ; other app, including KDE.; CMake is a Makefile-generator (or project-file-generator ; for example for KDevelop or MS-Visual (or however the ; MS-IDE is called)). But it is much *easier* to write CMake ; files compared to autotools. For example, you only need ; one language to learn (cmake) and not four. Everything is ; in one central file. Even if you have no clue about cmake ; the syntax is very easy to understand (unlike the cryptic ; m4/.in.in/Makefile.am-stuff which I never understood). And ; CMake is much faster. Not sure if that is important for ; OpenBabel, but the equivalent of ""make -f Makefile.am ; && ./configure"" takes like 10 seconds for kdelibs while ; the autotool-command took minutes!. Original comment by: @cniehaus",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810562
https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810562:775,Modifiability,config,configure,775,"Logged In: YES ; user_id=684210. Not sure why integration would be easier because OpenBabel ; will just but a couple of object-files and header for any ; other app, including KDE.; CMake is a Makefile-generator (or project-file-generator ; for example for KDevelop or MS-Visual (or however the ; MS-IDE is called)). But it is much *easier* to write CMake ; files compared to autotools. For example, you only need ; one language to learn (cmake) and not four. Everything is ; in one central file. Even if you have no clue about cmake ; the syntax is very easy to understand (unlike the cryptic ; m4/.in.in/Makefile.am-stuff which I never understood). And ; CMake is much faster. Not sure if that is important for ; OpenBabel, but the equivalent of ""make -f Makefile.am ; && ./configure"" takes like 10 seconds for kdelibs while ; the autotool-command took minutes!. Original comment by: @cniehaus",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810562
https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810562:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=684210. Not sure why integration would be easier because OpenBabel ; will just but a couple of object-files and header for any ; other app, including KDE.; CMake is a Makefile-generator (or project-file-generator ; for example for KDevelop or MS-Visual (or however the ; MS-IDE is called)). But it is much *easier* to write CMake ; files compared to autotools. For example, you only need ; one language to learn (cmake) and not four. Everything is ; in one central file. Even if you have no clue about cmake ; the syntax is very easy to understand (unlike the cryptic ; m4/.in.in/Makefile.am-stuff which I never understood). And ; CMake is much faster. Not sure if that is important for ; OpenBabel, but the equivalent of ""make -f Makefile.am ; && ./configure"" takes like 10 seconds for kdelibs while ; the autotool-command took minutes!. Original comment by: @cniehaus",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810562
https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810562:431,Usability,learn,learn,431,"Logged In: YES ; user_id=684210. Not sure why integration would be easier because OpenBabel ; will just but a couple of object-files and header for any ; other app, including KDE.; CMake is a Makefile-generator (or project-file-generator ; for example for KDevelop or MS-Visual (or however the ; MS-IDE is called)). But it is much *easier* to write CMake ; files compared to autotools. For example, you only need ; one language to learn (cmake) and not four. Everything is ; in one central file. Even if you have no clue about cmake ; the syntax is very easy to understand (unlike the cryptic ; m4/.in.in/Makefile.am-stuff which I never understood). And ; CMake is much faster. Not sure if that is important for ; OpenBabel, but the equivalent of ""make -f Makefile.am ; && ./configure"" takes like 10 seconds for kdelibs while ; the autotool-command took minutes!. Original comment by: @cniehaus",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810562
https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810563:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. One advantage of CMake is that it generates build environments for Mac and ; Windows too. It's possible that this would allow better syncing of the ; Windows and UNIX build environments. But this is not a bug, so I'm switching it to ""Feature Requests."". I'd think it makes sense to offer CMake as an alternative build setup for 2.1 ; -- and let people use whichever they want. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810563
https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810564:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. Thanks to Patrick Spendrin, Christian Ehrlicher and the KDE/Win32 and KDE-Edu folks, The 2.2 version has CMake build scripts which work on UNIX and Windows platforms. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810564
https://github.com/openbabel/openbabel/issues/560#issuecomment-281777333:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=850620. Changing to a bug report: an sdf file with no $$$$ between; molecules sounds like a bug to me, rather than a lack of; features. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/560#issuecomment-281777333
https://github.com/openbabel/openbabel/issues/560#issuecomment-281777335:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615. void SetOneObjectOnly(false);; does what you want and sets m_IsLast=false. It also sets; OneObjectOnly=false, which is the default anyway. ; Calling the function with true reverses these but would be; appropriate if you needed to manually mark the last molecule. We could have SetLast() as suggested but I think; SetOneObjectOnly(0) should be good enough. We could do with; some documentation though. The user is helped when doing normal conversions (via; FullConvert()) by making $$$$ addition as automatic as; possible. This is complicated by OB using the same code for; mol and sdf files which differ in their requirement for a; $$$ at the end. When calling the format from a program (via; Write()) I don't think it unreasonable that you have to say; that multiple molecules are about to be output and then flag; the last molecule manually. It would be similar for outputting multiple molecules in CML. ; . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/560#issuecomment-281777335
https://github.com/openbabel/openbabel/issues/560#issuecomment-281777336:0,Testability,Log,Logged,0,"Logged In: NO . I tried the code you suggested Chris, but it seems its not ; actually implemented (unless this is on the CVS rather than ; the lastest snapshot?). Compiler said:; no matching function for call to `OpenBabel::OBConversion::; SetOneObjectOnly(bool)'; ../src/obconversion.h:298: candidates are: void; OpenBabel::OBConversion::SetOneObjectOnly(). and the only function I could find for SetOneObejctOnly is ; this:; void OBConversion::SetOneObjectOnly(); {; OneObjectOnly=true;; m_IsLast=true;; }. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/560#issuecomment-281777336
https://github.com/openbabel/openbabel/issues/560#issuecomment-281777337:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615. Sorry, I must have expanded it recently, probably to solve a; problem similar to this one. The version in SVN HEAD is:; ; void OBConversion::SetOneObjectOnly(bool b); {; OneObjectOnly=b;; m_IsLast=b;; }. with the declaration:; void SetOneObjectOnly(bool b=true);. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/560#issuecomment-281777337
https://github.com/openbabel/openbabel/issues/560#issuecomment-281777338:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I'm marking this as fixed, and this will auto-close in 14 days unless further ; comment. As far as I can tell, the changes to OBConversion::SetLast solve this. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/560#issuecomment-281777338
https://github.com/openbabel/openbabel/issues/560#issuecomment-281777340:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/560#issuecomment-281777340
https://github.com/openbabel/openbabel/issues/561#issuecomment-281777359:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. This turned out to be a bug in the CML ReadMolecule() method in 2.1 ; development. The other file formats are unaffected. This should now be fixed in the 2.1 trunk, as of revision 1534. I'm marking this ""pending"" as I was never able to reproduce the bug. If Benoît ; or anyone else posts a comment in the next 14 days, this will reopen. ; Otherwise, it will close automatically as being fixed.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/561#issuecomment-281777359
https://github.com/openbabel/openbabel/issues/561#issuecomment-281777361:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/561#issuecomment-281777361
https://github.com/openbabel/openbabel/issues/562#issuecomment-281777366:57,Integrability,wrap,wrapper,57,"Logged In: YES ; user_id=21420. Without using the Python wrapper, this seems to work for me. Can you verify that this is true on your system? In short, if you do something ; like:. babel test.sdf.gz test.smi. Does that work from the command-line? In short, is the problem with the ; Python wrapper or the library itself. (I'd guess perhaps something in the ; python, but I'm not sure.). Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/562#issuecomment-281777366
https://github.com/openbabel/openbabel/issues/562#issuecomment-281777366:290,Integrability,wrap,wrapper,290,"Logged In: YES ; user_id=21420. Without using the Python wrapper, this seems to work for me. Can you verify that this is true on your system? In short, if you do something ; like:. babel test.sdf.gz test.smi. Does that work from the command-line? In short, is the problem with the ; Python wrapper or the library itself. (I'd guess perhaps something in the ; python, but I'm not sure.). Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/562#issuecomment-281777366
https://github.com/openbabel/openbabel/issues/562#issuecomment-281777366:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Without using the Python wrapper, this seems to work for me. Can you verify that this is true on your system? In short, if you do something ; like:. babel test.sdf.gz test.smi. Does that work from the command-line? In short, is the problem with the ; Python wrapper or the library itself. (I'd guess perhaps something in the ; python, but I'm not sure.). Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/562#issuecomment-281777366
https://github.com/openbabel/openbabel/issues/562#issuecomment-281777366:187,Testability,test,test,187,"Logged In: YES ; user_id=21420. Without using the Python wrapper, this seems to work for me. Can you verify that this is true on your system? In short, if you do something ; like:. babel test.sdf.gz test.smi. Does that work from the command-line? In short, is the problem with the ; Python wrapper or the library itself. (I'd guess perhaps something in the ; python, but I'm not sure.). Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/562#issuecomment-281777366
https://github.com/openbabel/openbabel/issues/562#issuecomment-281777366:199,Testability,test,test,199,"Logged In: YES ; user_id=21420. Without using the Python wrapper, this seems to work for me. Can you verify that this is true on your system? In short, if you do something ; like:. babel test.sdf.gz test.smi. Does that work from the command-line? In short, is the problem with the ; Python wrapper or the library itself. (I'd guess perhaps something in the ; python, but I'm not sure.). Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/562#issuecomment-281777366
https://github.com/openbabel/openbabel/issues/562#issuecomment-281777367:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=349408. Yes, doing. babel test.sdf.gz test.smi . works fine. Original comment by: @rajarshi",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/562#issuecomment-281777367
https://github.com/openbabel/openbabel/issues/562#issuecomment-281777367:51,Testability,test,test,51,"Logged In: YES ; user_id=349408. Yes, doing. babel test.sdf.gz test.smi . works fine. Original comment by: @rajarshi",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/562#issuecomment-281777367
https://github.com/openbabel/openbabel/issues/562#issuecomment-281777367:63,Testability,test,test,63,"Logged In: YES ; user_id=349408. Yes, doing. babel test.sdf.gz test.smi . works fine. Original comment by: @rajarshi",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/562#issuecomment-281777367
https://github.com/openbabel/openbabel/issues/562#issuecomment-281777369:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. This is now duplicated by #1617838. Since that has a bit more information, I'm closing this as a duplicate. Please file any comments, debugging info, etc. in that bug entry. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/562#issuecomment-281777369
https://github.com/openbabel/openbabel/issues/563#issuecomment-281777388:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615. Although I haven't compiled it, I think your program is; stopping when it finds a molecule it can't convert. The; first one is; b1ccccc1; Depict ( http://www.daylight.com/daycgi/depict ) also fails; with this, so it may not be correct SMILES. However it seems; a reasonable extension and when I get time I'll add code so; that it will be accepted. The molecule (about 49th) starting ; c12c3c4c5c1c6c7c8c2c9c%10c3c%11c%12c4c%13c%14c5c%15c...; ( a fullerene?) is causing my OB version to hang. I'll add; this as a bug in its own right. The loop in your program could be like the following,; although I haven't tested it:. int count = 0;; while(ifs) // Read the whole file; {; if(conv.Read(&mol, &ifs)) //Process the molecules; successfully converted; if (mol.NumHvyAtoms() > 1) count++;; mol.Clear();; }. This should ignore molecules that can't be converted, but; sadly not those that cause an infinite loop. Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/563#issuecomment-281777388
https://github.com/openbabel/openbabel/issues/563#issuecomment-281777388:642,Testability,test,tested,642,"Logged In: YES ; user_id=1189615. Although I haven't compiled it, I think your program is; stopping when it finds a molecule it can't convert. The; first one is; b1ccccc1; Depict ( http://www.daylight.com/daycgi/depict ) also fails; with this, so it may not be correct SMILES. However it seems; a reasonable extension and when I get time I'll add code so; that it will be accepted. The molecule (about 49th) starting ; c12c3c4c5c1c6c7c8c2c9c%10c3c%11c%12c4c%13c%14c5c%15c...; ( a fullerene?) is causing my OB version to hang. I'll add; this as a bug in its own right. The loop in your program could be like the following,; although I haven't tested it:. int count = 0;; while(ifs) // Read the whole file; {; if(conv.Read(&mol, &ifs)) //Process the molecules; successfully converted; if (mol.NumHvyAtoms() > 1) count++;; mol.Clear();; }. This should ignore molecules that can't be converted, but; sadly not those that cause an infinite loop. Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/563#issuecomment-281777388
https://github.com/openbabel/openbabel/issues/563#issuecomment-281777388:824,Usability,Clear,Clear,824,"Logged In: YES ; user_id=1189615. Although I haven't compiled it, I think your program is; stopping when it finds a molecule it can't convert. The; first one is; b1ccccc1; Depict ( http://www.daylight.com/daycgi/depict ) also fails; with this, so it may not be correct SMILES. However it seems; a reasonable extension and when I get time I'll add code so; that it will be accepted. The molecule (about 49th) starting ; c12c3c4c5c1c6c7c8c2c9c%10c3c%11c%12c4c%13c%14c5c%15c...; ( a fullerene?) is causing my OB version to hang. I'll add; this as a bug in its own right. The loop in your program could be like the following,; although I haven't tested it:. int count = 0;; while(ifs) // Read the whole file; {; if(conv.Read(&mol, &ifs)) //Process the molecules; successfully converted; if (mol.NumHvyAtoms() > 1) count++;; mol.Clear();; }. This should ignore molecules that can't be converted, but; sadly not those that cause an infinite loop. Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/563#issuecomment-281777388
https://github.com/openbabel/openbabel/issues/563#issuecomment-281777389:1086,Availability,avail,available,1086,"Logged In: YES ; user_id=349408. You're correct in that the code is probably stopping when it; reaches a molecule it can't parse - if I print out the count; of heavy atoms, I only get values for 30 molecules. I tried the code you suggested and it runs to completion.; Surprisingly, it did not hang on the 49th molecule. Also in my initial report I mentioned that there were 6824; total SMILES - that should be 6284. So it is failing on 16; SMILES; I've listed the offending SMILES below:. b1ccccc1; b1occc1; b1ooccc1; c1cc[bi]cc1; c1ccc(cc1)c5c(c2ccccc2)c(c3ccccc3)[si](c5(c4ccccc4))(C)C; c1ccc(cc1)c6c(c2ccccc2)c(c3ccccc3)[si](c4ccccc4)(c6(c5ccccc5))C; c1ccc(cc1)c7c(c2ccccc2)c(c3ccccc3)[si](c4ccccc4)(c5ccccc5)c7(c6ccccc6); c1ccc(cc1)[ge]2(cccc2)(c3ccccc3)(c4ccccc4)(c5ccccc5)(c6ccccc6)c7ccccc7; c1cc[ge]cc1; c1cc[sb](cc1)(C)(C)C; c1cc[si]c1; c1cc[sn]cc1; c1cc[te]c1; NCCCC[si]1cccc1; o1o[si]1; [Rf]. I realize that some of them are probably chemically wrong (I; don't think Si or Sn are aromatic) but it would be useful if; the molecule was constructed and some sort of warning was; available/produced. Original comment by: @rajarshi",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/563#issuecomment-281777389
https://github.com/openbabel/openbabel/issues/563#issuecomment-281777389:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=349408. You're correct in that the code is probably stopping when it; reaches a molecule it can't parse - if I print out the count; of heavy atoms, I only get values for 30 molecules. I tried the code you suggested and it runs to completion.; Surprisingly, it did not hang on the 49th molecule. Also in my initial report I mentioned that there were 6824; total SMILES - that should be 6284. So it is failing on 16; SMILES; I've listed the offending SMILES below:. b1ccccc1; b1occc1; b1ooccc1; c1cc[bi]cc1; c1ccc(cc1)c5c(c2ccccc2)c(c3ccccc3)[si](c5(c4ccccc4))(C)C; c1ccc(cc1)c6c(c2ccccc2)c(c3ccccc3)[si](c4ccccc4)(c6(c5ccccc5))C; c1ccc(cc1)c7c(c2ccccc2)c(c3ccccc3)[si](c4ccccc4)(c5ccccc5)c7(c6ccccc6); c1ccc(cc1)[ge]2(cccc2)(c3ccccc3)(c4ccccc4)(c5ccccc5)(c6ccccc6)c7ccccc7; c1cc[ge]cc1; c1cc[sb](cc1)(C)(C)C; c1cc[si]c1; c1cc[sn]cc1; c1cc[te]c1; NCCCC[si]1cccc1; o1o[si]1; [Rf]. I realize that some of them are probably chemically wrong (I; don't think Si or Sn are aromatic) but it would be useful if; the molecule was constructed and some sort of warning was; available/produced. Original comment by: @rajarshi",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/563#issuecomment-281777389
https://github.com/openbabel/openbabel/issues/563#issuecomment-281777390:0,Testability,Log,Logged,0,Logged In: YES ; user_id=1189615. I have committed code to smilesformat.cpp in the SVN HEAD; (will be v2.1) to give a warning with the illegal aromatic; elements b [si] [ge] [sb] [bi] [te] [sn] but accept them.; The resulting molecule may or may not be what be what was; expected (caveat emptor). . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/563#issuecomment-281777390
https://github.com/openbabel/openbabel/issues/564#issuecomment-281777407:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. This has been fixed, I'm marking this closed. The current SVN trunk (revision 1800) certainly fixes this and will be incorporated into version 2.1. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/564#issuecomment-281777407
https://github.com/openbabel/openbabel/issues/565#issuecomment-281777439:196,Safety,detect,detect,196,"Logged In: YES ; user_id=1444119. Perl uses ""lazy"" garbage collection. Very lazy -- normally; objects are left alone unless the pointer (object) is about; to be reused. The example you give won't detect leaks,; because the $obMol object is never deallocated. And; furthermore, $obMol->Clear()) erases atoms and bonds, but; does not deallocate or resize the atom/bond arrays that held; them, so you would *not* expect memory usage to shrink when; you call $obMol->Clear(). The $obMol object and all of its; internal structures, still exist, waiting for the next time; you call $obMol->ReadString(). Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/565#issuecomment-281777439
https://github.com/openbabel/openbabel/issues/565#issuecomment-281777439:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1444119. Perl uses ""lazy"" garbage collection. Very lazy -- normally; objects are left alone unless the pointer (object) is about; to be reused. The example you give won't detect leaks,; because the $obMol object is never deallocated. And; furthermore, $obMol->Clear()) erases atoms and bonds, but; does not deallocate or resize the atom/bond arrays that held; them, so you would *not* expect memory usage to shrink when; you call $obMol->Clear(). The $obMol object and all of its; internal structures, still exist, waiting for the next time; you call $obMol->ReadString(). Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/565#issuecomment-281777439
https://github.com/openbabel/openbabel/issues/565#issuecomment-281777439:285,Usability,Clear,Clear,285,"Logged In: YES ; user_id=1444119. Perl uses ""lazy"" garbage collection. Very lazy -- normally; objects are left alone unless the pointer (object) is about; to be reused. The example you give won't detect leaks,; because the $obMol object is never deallocated. And; furthermore, $obMol->Clear()) erases atoms and bonds, but; does not deallocate or resize the atom/bond arrays that held; them, so you would *not* expect memory usage to shrink when; you call $obMol->Clear(). The $obMol object and all of its; internal structures, still exist, waiting for the next time; you call $obMol->ReadString(). Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/565#issuecomment-281777439
https://github.com/openbabel/openbabel/issues/565#issuecomment-281777439:463,Usability,Clear,Clear,463,"Logged In: YES ; user_id=1444119. Perl uses ""lazy"" garbage collection. Very lazy -- normally; objects are left alone unless the pointer (object) is about; to be reused. The example you give won't detect leaks,; because the $obMol object is never deallocated. And; furthermore, $obMol->Clear()) erases atoms and bonds, but; does not deallocate or resize the atom/bond arrays that held; them, so you would *not* expect memory usage to shrink when; you call $obMol->Clear(). The $obMol object and all of its; internal structures, still exist, waiting for the next time; you call $obMol->ReadString(). Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/565#issuecomment-281777439
https://github.com/openbabel/openbabel/issues/565#issuecomment-281777440:443,Integrability,interface,interface,443,"Logged In: YES ; user_id=21420. I'm marking this as not a bug. There's no memory leak in the underlying C++ ; library, only in Perl's traditional, documented behavior. The same problem would exist in any similar code (i.e., reading in huge ; amounts of data).; -Geoff. P.S. This bug is being marked ""pending"" -- it will automatically close without ; further comments. If you have evidence that this is, in fact, a bug in the Open ; Babel perl interface, please present it and it will reopen. Otherwise, as ; mentioned by Craig (and myself), this does not appear to be a bug. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/565#issuecomment-281777440
https://github.com/openbabel/openbabel/issues/565#issuecomment-281777440:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. I'm marking this as not a bug. There's no memory leak in the underlying C++ ; library, only in Perl's traditional, documented behavior. The same problem would exist in any similar code (i.e., reading in huge ; amounts of data).; -Geoff. P.S. This bug is being marked ""pending"" -- it will automatically close without ; further comments. If you have evidence that this is, in fact, a bug in the Open ; Babel perl interface, please present it and it will reopen. Otherwise, as ; mentioned by Craig (and myself), this does not appear to be a bug. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/565#issuecomment-281777440
https://github.com/openbabel/openbabel/issues/565#issuecomment-281777442:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/565#issuecomment-281777442
https://github.com/openbabel/openbabel/issues/566#issuecomment-281777443:54,Deployability,update,update,54,"Logged In: YES ; user_id=21420. This is fixed with an update to the InChI library, now contained in 2.1.0b1 and ; the 2.0 SVN branch. Peter noted this fix to me via e-mail. Marking this closed. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/566#issuecomment-281777443
https://github.com/openbabel/openbabel/issues/566#issuecomment-281777443:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. This is fixed with an update to the InChI library, now contained in 2.1.0b1 and ; the 2.0 SVN branch. Peter noted this fix to me via e-mail. Marking this closed. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/566#issuecomment-281777443
https://github.com/openbabel/openbabel/issues/567#issuecomment-281777463:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1587751. I don't know why this bug report appear duplicated, it's ; the same that the bug report number 1553315, if you are ; administrator please remove this one. Thank you. Original comment by: oligoelemento",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/567#issuecomment-281777463
https://github.com/openbabel/openbabel/issues/568#issuecomment-281777467:98,Security,confidential,confidentiality,98,"Logged In: YES ; user_id=850620. Please attach the file to the bug, unless you are worried; about confidentiality. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/568#issuecomment-281777467
https://github.com/openbabel/openbabel/issues/568#issuecomment-281777467:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=850620. Please attach the file to the bug, unless you are worried; about confidentiality. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/568#issuecomment-281777467
https://github.com/openbabel/openbabel/issues/568#issuecomment-281777471:116,Availability,error,error,116,Logged In: YES ; user_id=1595982. The command line to reproduce the bug with the attached data; file (correcting an error in the original post) is:. f=2bo8; cat $f.pdbatm.bz2a? | bunzip2 > $f.pdbatm; head -31077 $f.pdbatm > $f.pdbatm.cut; babel -p -iPDB $f.pdbatm.cut -oPDB $f.pdbh. Original comment by: tadpole_leg,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/568#issuecomment-281777471
https://github.com/openbabel/openbabel/issues/568#issuecomment-281777471:0,Testability,Log,Logged,0,Logged In: YES ; user_id=1595982. The command line to reproduce the bug with the attached data; file (correcting an error in the original post) is:. f=2bo8; cat $f.pdbatm.bz2a? | bunzip2 > $f.pdbatm; head -31077 $f.pdbatm > $f.pdbatm.cut; babel -p -iPDB $f.pdbatm.cut -oPDB $f.pdbh. Original comment by: tadpole_leg,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/568#issuecomment-281777471
https://github.com/openbabel/openbabel/issues/568#issuecomment-281777472:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. The problem is that 2.0.x has a limit of 2^16 atoms (65536). So reading/; writing the PDB file is fine, but adding hydrogen atoms creates *far* more ; than can be stored in 2^16 atoms. The 2.1 development code will shortly remove this limitation (I'm currently ; coming back from the American Chemical Society meeting, but will handle ; this on Monday). If you'd like to try a beta, please let me know.; Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/568#issuecomment-281777472
https://github.com/openbabel/openbabel/issues/569#issuecomment-281777482:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. This problem is now fixed. The bug originated with a change of coordinates ; from CDX to an approximate Angstrom scale. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/569#issuecomment-281777482
https://github.com/openbabel/openbabel/issues/1470#issuecomment-281810573:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. Rich's site should be:. http://depth-first.com/. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1470#issuecomment-281810573
https://github.com/openbabel/openbabel/issues/1470#issuecomment-281810575:124,Integrability,interface,interface,124,"Logged In: YES ; user_id=21420. This is now working. It needs some tinkering, but the current SVN trunk has a workable Ruby interface using SWIG. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1470#issuecomment-281810575
https://github.com/openbabel/openbabel/issues/1470#issuecomment-281810575:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. This is now working. It needs some tinkering, but the current SVN trunk has a workable Ruby interface using SWIG. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1470#issuecomment-281810575
https://github.com/openbabel/openbabel/issues/1470#issuecomment-281810576:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1470#issuecomment-281810576
https://github.com/openbabel/openbabel/issues/1471#issuecomment-281810582:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: YES. While this isn't in obgrep, filter support is in babel (in the 2.2 snapshots). This is a duplicate of the request for a title filter, which is now implemented thanks to Chris Morley. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1471#issuecomment-281810582
https://github.com/openbabel/openbabel/issues/570#issuecomment-281777486:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: YES. This has been fixed, at least for random.pdb and the selection of PDB files here. It would be a good idea to run the PDB parser over 400-500 random PDB entries and make sure the atom types come back correctly.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/570#issuecomment-281777486
https://github.com/openbabel/openbabel/issues/570#issuecomment-281777487:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=282988; Originator: NO. Using babel 2.1.1 (self compiled on Mac), a simple PDB with a Mn atom gets converted to a Xx atom in an XYZ file. Also, if a Fe atom is used, it gets converted to a F atom in translation. I can send a test file if needed. Original comment by: @atenderholt",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/570#issuecomment-281777487
https://github.com/openbabel/openbabel/issues/570#issuecomment-281777487:250,Testability,test,test,250,"Logged In: YES ; user_id=282988; Originator: NO. Using babel 2.1.1 (self compiled on Mac), a simple PDB with a Mn atom gets converted to a Xx atom in an XYZ file. Also, if a Fe atom is used, it gets converted to a F atom in translation. I can send a test file if needed. Original comment by: @atenderholt",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/570#issuecomment-281777487
https://github.com/openbabel/openbabel/issues/570#issuecomment-281777487:93,Usability,simpl,simple,93,"Logged In: YES ; user_id=282988; Originator: NO. Using babel 2.1.1 (self compiled on Mac), a simple PDB with a Mn atom gets converted to a Xx atom in an XYZ file. Also, if a Fe atom is used, it gets converted to a F atom in translation. I can send a test file if needed. Original comment by: @atenderholt",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/570#issuecomment-281777487
https://github.com/openbabel/openbabel/issues/570#issuecomment-281777490:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420; Originator: YES. This is fixed in the SVN trunk. (I can't remember which change fixed this particular bug.). Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/570#issuecomment-281777490
https://github.com/openbabel/openbabel/issues/571#issuecomment-281777498:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: YES. This has been fixed in the current SVN trunk, including inclusion of the new residue.cpp test. The problem was reusing bitmasks for storing visit information. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/571#issuecomment-281777498
https://github.com/openbabel/openbabel/issues/571#issuecomment-281777498:138,Testability,test,test,138,"Logged In: YES ; user_id=21420; Originator: YES. This has been fixed in the current SVN trunk, including inclusion of the new residue.cpp test. The problem was reusing bitmasks for storing visit information. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/571#issuecomment-281777498
https://github.com/openbabel/openbabel/issues/572#issuecomment-281777511:114,Deployability,integrat,integrated,114,"Logged In: YES ; user_id=21420; Originator: YES. This is more of a feature request. Since the obgen tool won't be integrated into 2.1 (it's not ready yet), it's silly to complain about ""bugs"" that are simply unimplemented. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/572#issuecomment-281777511
https://github.com/openbabel/openbabel/issues/572#issuecomment-281777511:114,Integrability,integrat,integrated,114,"Logged In: YES ; user_id=21420; Originator: YES. This is more of a feature request. Since the obgen tool won't be integrated into 2.1 (it's not ready yet), it's silly to complain about ""bugs"" that are simply unimplemented. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/572#issuecomment-281777511
https://github.com/openbabel/openbabel/issues/572#issuecomment-281777511:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: YES. This is more of a feature request. Since the obgen tool won't be integrated into 2.1 (it's not ready yet), it's silly to complain about ""bugs"" that are simply unimplemented. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/572#issuecomment-281777511
https://github.com/openbabel/openbabel/issues/572#issuecomment-281777511:201,Usability,simpl,simply,201,"Logged In: YES ; user_id=21420; Originator: YES. This is more of a feature request. Since the obgen tool won't be integrated into 2.1 (it's not ready yet), it's silly to complain about ""bugs"" that are simply unimplemented. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/572#issuecomment-281777511
https://github.com/openbabel/openbabel/issues/1472#issuecomment-281810595:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. This has now been done and the results incorporated into SVN trunk. Only a ; small number of changes have occurred from the original chemical MIME type ; data was input. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1472#issuecomment-281810595
https://github.com/openbabel/openbabel/issues/1472#issuecomment-281810596:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1472#issuecomment-281810596
https://github.com/openbabel/openbabel/issues/573#issuecomment-281777517:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420. This should now be fixed in the Subversion repository (revision 1568 or later).; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/573#issuecomment-281777517
https://github.com/openbabel/openbabel/issues/573#issuecomment-281777524:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/573#issuecomment-281777524
https://github.com/openbabel/openbabel/issues/574#issuecomment-281777526:0,Testability,Log,Logged,0,Logged In: YES ; user_id=1155272. more specifically libinchi.dll when I run it. Original comment by: ilikesci,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/574#issuecomment-281777526
https://github.com/openbabel/openbabel/issues/574#issuecomment-281777527:89,Availability,down,downloading,89,"Logged In: YES ; user_id=1189615. Sorry for this embarrassing mistake. The zip file for; downloading now contains the DLL files.; It took a long time to find this out - nearly 2000 people; had downloaded this version. However, the DLLs were the same; as in 2.0.1. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/574#issuecomment-281777527
https://github.com/openbabel/openbabel/issues/574#issuecomment-281777527:193,Availability,down,downloaded,193,"Logged In: YES ; user_id=1189615. Sorry for this embarrassing mistake. The zip file for; downloading now contains the DLL files.; It took a long time to find this out - nearly 2000 people; had downloaded this version. However, the DLLs were the same; as in 2.0.1. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/574#issuecomment-281777527
https://github.com/openbabel/openbabel/issues/574#issuecomment-281777527:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615. Sorry for this embarrassing mistake. The zip file for; downloading now contains the DLL files.; It took a long time to find this out - nearly 2000 people; had downloaded this version. However, the DLLs were the same; as in 2.0.1. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/574#issuecomment-281777527
https://github.com/openbabel/openbabel/issues/574#issuecomment-281777530:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1155272. Thank You, I tried doing a yahoo search for it and could not; figure out where I could get it. Sometimes these things happen. Thank You,; Micah. Original comment by: ilikesci",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/574#issuecomment-281777530
https://github.com/openbabel/openbabel/issues/574#issuecomment-281777531:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1155272. Besides its beta anyway. Thank You,; Micah. Original comment by: ilikesci",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/574#issuecomment-281777531
https://github.com/openbabel/openbabel/issues/575#issuecomment-281777538:131,Availability,error,error,131,"Logged In: YES ; user_id=1189615. This works ok for me under Windows XP.; I have added some code before the line above to give an; error message if pDefault is not acceptable. This is a; pointer to the default XML format, which is either the one; marked as such, or the first one. It really should be ok.; Alternatively there may be some difficult with the RTTI; function typeid. Could you try it with the modified; xmlformat.cpp? ; Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/575#issuecomment-281777538
https://github.com/openbabel/openbabel/issues/575#issuecomment-281777538:137,Integrability,message,message,137,"Logged In: YES ; user_id=1189615. This works ok for me under Windows XP.; I have added some code before the line above to give an; error message if pDefault is not acceptable. This is a; pointer to the default XML format, which is either the one; marked as such, or the first one. It really should be ok.; Alternatively there may be some difficult with the RTTI; function typeid. Could you try it with the modified; xmlformat.cpp? ; Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/575#issuecomment-281777538
https://github.com/openbabel/openbabel/issues/575#issuecomment-281777538:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615. This works ok for me under Windows XP.; I have added some code before the line above to give an; error message if pDefault is not acceptable. This is a; pointer to the default XML format, which is either the one; marked as such, or the first one. It really should be ok.; Alternatively there may be some difficult with the RTTI; function typeid. Could you try it with the modified; xmlformat.cpp? ; Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/575#issuecomment-281777538
https://github.com/openbabel/openbabel/issues/575#issuecomment-281777541:167,Availability,error,error,167,"Logged In: YES ; user_id=21420. The updated version works perfectly. I'm not sure at the moment why the XML ; formats aren't loading, but nothing crashes and a useful error message comes ; up. So I'm marking this closed.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/575#issuecomment-281777541
https://github.com/openbabel/openbabel/issues/575#issuecomment-281777541:36,Deployability,update,updated,36,"Logged In: YES ; user_id=21420. The updated version works perfectly. I'm not sure at the moment why the XML ; formats aren't loading, but nothing crashes and a useful error message comes ; up. So I'm marking this closed.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/575#issuecomment-281777541
https://github.com/openbabel/openbabel/issues/575#issuecomment-281777541:173,Integrability,message,message,173,"Logged In: YES ; user_id=21420. The updated version works perfectly. I'm not sure at the moment why the XML ; formats aren't loading, but nothing crashes and a useful error message comes ; up. So I'm marking this closed.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/575#issuecomment-281777541
https://github.com/openbabel/openbabel/issues/575#issuecomment-281777541:125,Performance,load,loading,125,"Logged In: YES ; user_id=21420. The updated version works perfectly. I'm not sure at the moment why the XML ; formats aren't loading, but nothing crashes and a useful error message comes ; up. So I'm marking this closed.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/575#issuecomment-281777541
https://github.com/openbabel/openbabel/issues/575#issuecomment-281777541:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. The updated version works perfectly. I'm not sure at the moment why the XML ; formats aren't loading, but nothing crashes and a useful error message comes ; up. So I'm marking this closed.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/575#issuecomment-281777541
https://github.com/openbabel/openbabel/issues/1473#issuecomment-281810605:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. Chris addressed this with new changes and a --separate flag, starting with the SVN revision 1760 and later (for version 2.1 development). I'm marking this ""pending"" further comment. Otherwise, this will be marked as solved in 2 weeks. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1473#issuecomment-281810605
https://github.com/openbabel/openbabel/issues/1473#issuecomment-281810606:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539; Originator: NO. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1473#issuecomment-281810606
https://github.com/openbabel/openbabel/issues/576#issuecomment-281777563:201,Deployability,release,releases,201,"Logged In: YES ; user_id=21420; Originator: NO. Sorry I didn't follow up to this sooner -- it seemed to be a strange bug and I didn't have time to test it. The bug is not due to protonation. The 2.0.x releases and before have a limit of 2^16 atoms in a molecule, which was lifted in the 2.1 development:. * src/base.h, src/atom.h, src/bond.h: Update internal atom; indexing to use an unsigned int, rather than short. Fixes; PR#1556819, caused by large molecules (i.e. >2^16 atoms or bonds). So if you try any of the 2.1 beta snapshots, you should be fine. I'm marking this as ""pending"" any final comments from you. Otherwise, it will close automatically as fixed within 2 weeks.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/576#issuecomment-281777563
https://github.com/openbabel/openbabel/issues/576#issuecomment-281777563:343,Deployability,Update,Update,343,"Logged In: YES ; user_id=21420; Originator: NO. Sorry I didn't follow up to this sooner -- it seemed to be a strange bug and I didn't have time to test it. The bug is not due to protonation. The 2.0.x releases and before have a limit of 2^16 atoms in a molecule, which was lifted in the 2.1 development:. * src/base.h, src/atom.h, src/bond.h: Update internal atom; indexing to use an unsigned int, rather than short. Fixes; PR#1556819, caused by large molecules (i.e. >2^16 atoms or bonds). So if you try any of the 2.1 beta snapshots, you should be fine. I'm marking this as ""pending"" any final comments from you. Otherwise, it will close automatically as fixed within 2 weeks.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/576#issuecomment-281777563
https://github.com/openbabel/openbabel/issues/576#issuecomment-281777563:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. Sorry I didn't follow up to this sooner -- it seemed to be a strange bug and I didn't have time to test it. The bug is not due to protonation. The 2.0.x releases and before have a limit of 2^16 atoms in a molecule, which was lifted in the 2.1 development:. * src/base.h, src/atom.h, src/bond.h: Update internal atom; indexing to use an unsigned int, rather than short. Fixes; PR#1556819, caused by large molecules (i.e. >2^16 atoms or bonds). So if you try any of the 2.1 beta snapshots, you should be fine. I'm marking this as ""pending"" any final comments from you. Otherwise, it will close automatically as fixed within 2 weeks.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/576#issuecomment-281777563
https://github.com/openbabel/openbabel/issues/576#issuecomment-281777563:147,Testability,test,test,147,"Logged In: YES ; user_id=21420; Originator: NO. Sorry I didn't follow up to this sooner -- it seemed to be a strange bug and I didn't have time to test it. The bug is not due to protonation. The 2.0.x releases and before have a limit of 2^16 atoms in a molecule, which was lifted in the 2.1 development:. * src/base.h, src/atom.h, src/bond.h: Update internal atom; indexing to use an unsigned int, rather than short. Fixes; PR#1556819, caused by large molecules (i.e. >2^16 atoms or bonds). So if you try any of the 2.1 beta snapshots, you should be fine. I'm marking this as ""pending"" any final comments from you. Otherwise, it will close automatically as fixed within 2 weeks.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/576#issuecomment-281777563
https://github.com/openbabel/openbabel/issues/576#issuecomment-281777564:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539; Originator: NO. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/576#issuecomment-281777564
https://github.com/openbabel/openbabel/issues/1475#issuecomment-281810633:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420. Fixed in the SVN repository (revision 1578 or later). This is now known as the ""molreport"" format. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1475#issuecomment-281810633
https://github.com/openbabel/openbabel/issues/577#issuecomment-281777572:228,Deployability,patch,patch,228,"Logged In: YES ; user_id=787122. pos is defined as an unsigned int and compared to; string::npos whose value is -1. Defining pos as size_t fixes; this crash. As I could not find how to attach a file to the; bug, I just copy the patch here:. Index: src/main.cpp; ===================================================================; --- src/main.cpp (révision 1582); +++ src/main.cpp (copie de travail); @@ -70,7 +70,7 @@; ; //Save name of program without its path (and .exe); string pn(argv[0]);; - unsigned int pos;; + size_t pos;; #ifdef _WIN32; pos = pn.find("".exe"");; if(pos!=string::npos); @@ -270,7 +270,7 @@; OutputFileName = FileList.back();; FileList.pop_back();; }; - ; +; #ifdef _WIN32; //Expand wildcards in input filenames and add to FileList; vector<string> tempFileList(FileList);; @@ -311,7 +311,7 @@; }; else; {; - unsigned int pos = OutputFileName.rfind("".gz"");; + size_t pos = OutputFileName.rfind("".gz"");; if(pos==string::npos); pos = OutputFileName.rfind('.');; else. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/577#issuecomment-281777572
https://github.com/openbabel/openbabel/issues/577#issuecomment-281777572:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=787122. pos is defined as an unsigned int and compared to; string::npos whose value is -1. Defining pos as size_t fixes; this crash. As I could not find how to attach a file to the; bug, I just copy the patch here:. Index: src/main.cpp; ===================================================================; --- src/main.cpp (révision 1582); +++ src/main.cpp (copie de travail); @@ -70,7 +70,7 @@; ; //Save name of program without its path (and .exe); string pn(argv[0]);; - unsigned int pos;; + size_t pos;; #ifdef _WIN32; pos = pn.find("".exe"");; if(pos!=string::npos); @@ -270,7 +270,7 @@; OutputFileName = FileList.back();; FileList.pop_back();; }; - ; +; #ifdef _WIN32; //Expand wildcards in input filenames and add to FileList; vector<string> tempFileList(FileList);; @@ -311,7 +311,7 @@; }; else; {; - unsigned int pos = OutputFileName.rfind("".gz"");; + size_t pos = OutputFileName.rfind("".gz"");; if(pos==string::npos); pos = OutputFileName.rfind('.');; else. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/577#issuecomment-281777572
https://github.com/openbabel/openbabel/issues/577#issuecomment-281777573:89,Deployability,patch,patch,89,"Logged In: YES ; user_id=21420; Originator: NO. This was fixed thanks to the contributed patch, but never closed. Use SVN trunk, revision 1583 or later). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/577#issuecomment-281777573
https://github.com/openbabel/openbabel/issues/577#issuecomment-281777573:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. This was fixed thanks to the contributed patch, but never closed. Use SVN trunk, revision 1583 or later). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/577#issuecomment-281777573
https://github.com/openbabel/openbabel/issues/578#issuecomment-281777589:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. Craig, I'm marking this particular bug as closed. There are still cis/trans issues, but as the report is worded, this bug is fixed. Let's make sure to file particular issues, so we can track what's fixed, and what needs work for 2.1. I'd rather see 10 new specific bug reports which we can kill (e.g., like the past SMILES / SMARTS issues) than one overly-general report which is hard to test if every piece is solved yet. So I'm marking this report as ""pending"" further comment from Craig. Otherwise, it will automatically close as fixed in 2 weeks.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/578#issuecomment-281777589
https://github.com/openbabel/openbabel/issues/578#issuecomment-281777589:436,Testability,test,test,436,"Logged In: YES ; user_id=21420; Originator: NO. Craig, I'm marking this particular bug as closed. There are still cis/trans issues, but as the report is worded, this bug is fixed. Let's make sure to file particular issues, so we can track what's fixed, and what needs work for 2.1. I'd rather see 10 new specific bug reports which we can kill (e.g., like the past SMILES / SMARTS issues) than one overly-general report which is hard to test if every piece is solved yet. So I'm marking this report as ""pending"" further comment from Craig. Otherwise, it will automatically close as fixed in 2 weeks.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/578#issuecomment-281777589
https://github.com/openbabel/openbabel/issues/578#issuecomment-281777590:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539; Originator: NO. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/578#issuecomment-281777590
https://github.com/openbabel/openbabel/issues/579#issuecomment-281777615:66,Safety,detect,detection,66,"Logged In: YES ; user_id=1444119. This may be related to the SSSR detection in rings.c. It; appears to take exponential time O(K^R) where R is the; number of rings in a group. Fullerenes with 60 rings work,; but past about 72 rings the exponential time seems to be; prohibitive. Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/579#issuecomment-281777615
https://github.com/openbabel/openbabel/issues/579#issuecomment-281777615:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1444119. This may be related to the SSSR detection in rings.c. It; appears to take exponential time O(K^R) where R is the; number of rings in a group. Fullerenes with 60 rings work,; but past about 72 rings the exponential time seems to be; prohibitive. Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/579#issuecomment-281777615
https://github.com/openbabel/openbabel/issues/579#issuecomment-281777618:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. Unlike Craig, it looks to me like the problem is in typer.cpp. Using GDB, I see a long track of calls to OBAromaticTyper::TraverseCycle(); (specifically line 460). This starts out with a recursion depth of 18, which is why it takes a long time. The problem seems to be from the call to CheckAromaticity with a depth of 20. (from typer.cpp line 421). I'm not sure why there's a need for the larger recursion depth. There's a previous call to check for 5-6 membered aromatic rings. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/579#issuecomment-281777618
https://github.com/openbabel/openbabel/issues/579#issuecomment-281777621:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. Not surprisingly, switching the call depth from 20 to 8 (and eliminating the duplicate calls to CheckAromaticity) creates a *huge* speed improvement. Running on a C80 cage:; recursion depth 20: 3m 13.4s; recursion depth 8: 5.2 s (!!). Looking at the code, this has existed from the original Open Eye code. I don't see the purpose of a 20-atom aromatic cycle. It seems reasonable to set this to something smaller. I'll e-mail the list.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/579#issuecomment-281777621
https://github.com/openbabel/openbabel/issues/579#issuecomment-281777622:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. This should be solved at this point. Please try the SVN trunk, revision 1765 or later. The change sets the recursion depth cutoff to 14, based on discussion with Henry Rzepa. I'm marking this as fixed. Without further comment in the next two weeks, it will be automatically closed.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/579#issuecomment-281777622
https://github.com/openbabel/openbabel/issues/579#issuecomment-281777623:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539; Originator: NO. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/579#issuecomment-281777623
https://github.com/openbabel/openbabel/issues/580#issuecomment-281777631:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615; Originator: NO. This works ok for me. If no output file is specified, the output appears in the output window only.; Could you attach the file that didn't work?. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/580#issuecomment-281777631
https://github.com/openbabel/openbabel/issues/580#issuecomment-281777633:0,Testability,Log,Logged,0,Logged In: YES ; user_id=850620; Originator: YES. Please find attached the guilty party. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/580#issuecomment-281777633
https://github.com/openbabel/openbabel/issues/580#issuecomment-281777639:0,Testability,Log,Logged,0,Logged In: YES ; user_id=1189615; Originator: NO. This occurred with large output streams. Corrected in revision 1837 for v2.1. . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/580#issuecomment-281777639
https://github.com/openbabel/openbabel/issues/581#issuecomment-281777653:119,Modifiability,config,configure,119,"Logged In: YES ; user_id=21420; Originator: NO. This has been fixed -- the Ruby bits are only run if Ruby was found by configure. Use the latest SVN trunk (revision 1627 or later, Dec. 2nd). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/581#issuecomment-281777653
https://github.com/openbabel/openbabel/issues/581#issuecomment-281777653:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. This has been fixed -- the Ruby bits are only run if Ruby was found by configure. Use the latest SVN trunk (revision 1627 or later, Dec. 2nd). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/581#issuecomment-281777653
https://github.com/openbabel/openbabel/issues/582#issuecomment-281777667:228,Deployability,release,release,228,"Logged In: YES ; user_id=21420; Originator: NO. I can confirm this bug, although it's clearly a very recent regression in the 2.1 trunk -- I do roundtrip tests every 1-2 months on the development snapshots and before every full release. If no one else gets to this, I'll fix it tomorrow.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/582#issuecomment-281777667
https://github.com/openbabel/openbabel/issues/582#issuecomment-281777667:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. I can confirm this bug, although it's clearly a very recent regression in the 2.1 trunk -- I do roundtrip tests every 1-2 months on the development snapshots and before every full release. If no one else gets to this, I'll fix it tomorrow.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/582#issuecomment-281777667
https://github.com/openbabel/openbabel/issues/582#issuecomment-281777667:154,Testability,test,tests,154,"Logged In: YES ; user_id=21420; Originator: NO. I can confirm this bug, although it's clearly a very recent regression in the 2.1 trunk -- I do roundtrip tests every 1-2 months on the development snapshots and before every full release. If no one else gets to this, I'll fix it tomorrow.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/582#issuecomment-281777667
https://github.com/openbabel/openbabel/issues/582#issuecomment-281777667:86,Usability,clear,clearly,86,"Logged In: YES ; user_id=21420; Originator: NO. I can confirm this bug, although it's clearly a very recent regression in the 2.1 trunk -- I do roundtrip tests every 1-2 months on the development snapshots and before every full release. If no one else gets to this, I'll fix it tomorrow.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/582#issuecomment-281777667
https://github.com/openbabel/openbabel/issues/582#issuecomment-281777668:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. I cannot reproduce this with the latest SVN trunk on Mac or Linux. I'm marking this ""pending."" Craig, if you can help me reproduce this, we can reopen the bug. Otherwise, I'm not sure that you're using the straight SVN trunk for this. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/582#issuecomment-281777668
https://github.com/openbabel/openbabel/issues/582#issuecomment-281777669:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539; Originator: NO. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/582#issuecomment-281777669
https://github.com/openbabel/openbabel/issues/583#issuecomment-281777677:141,Availability,error,errors,141,"Logged In: YES ; user_id=1189615; Originator: NO. SD and MOL files have traditionally been handled in OB by the same code, which has lead to errors like this. From revision 1638 they are separate, so that SD files now always output with $$$$ at the end, and MOL files no longer output properties. Marking as closed. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/583#issuecomment-281777677
https://github.com/openbabel/openbabel/issues/583#issuecomment-281777677:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615; Originator: NO. SD and MOL files have traditionally been handled in OB by the same code, which has lead to errors like this. From revision 1638 they are separate, so that SD files now always output with $$$$ at the end, and MOL files no longer output properties. Marking as closed. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/583#issuecomment-281777677
https://github.com/openbabel/openbabel/issues/584#issuecomment-281777704:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1444119; Originator: YES. Warning to developers: If you did a lot of SDF-to-SMILES translations using earlier versions of Open Babel, the SMILES cis/trans markings will be WRONG in roughly 25% of the molecules that have an E/Z double bond. Note that SMILES-to-SMILES conversion was correct, since the bug was duplicated in the SMILES reader and writer. Only SMILES that originated from some other format (SDF, etc.) will be incorrect. Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/584#issuecomment-281777704
https://github.com/openbabel/openbabel/issues/585#issuecomment-281777715:277,Availability,down,downside,277,"Logged In: YES ; user_id=21420; Originator: NO. One solution would be to change the logic which adds the newline filter. Right now, it checks if the input format is XML or binary. I guess that it can also check to see if it's a ""database"" output format (e.g., fastsearch). The downside is that input with ""incorrect"" line endings won't work in the fastsearch format (imagine indexing a set of MDL files with DOS line endings). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/585#issuecomment-281777715
https://github.com/openbabel/openbabel/issues/585#issuecomment-281777715:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. One solution would be to change the logic which adds the newline filter. Right now, it checks if the input format is XML or binary. I guess that it can also check to see if it's a ""database"" output format (e.g., fastsearch). The downside is that input with ""incorrect"" line endings won't work in the fastsearch format (imagine indexing a set of MDL files with DOS line endings). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/585#issuecomment-281777715
https://github.com/openbabel/openbabel/issues/585#issuecomment-281777715:84,Testability,log,logic,84,"Logged In: YES ; user_id=21420; Originator: NO. One solution would be to change the logic which adds the newline filter. Right now, it checks if the input format is XML or binary. I guess that it can also check to see if it's a ""database"" output format (e.g., fastsearch). The downside is that input with ""incorrect"" line endings won't work in the fastsearch format (imagine indexing a set of MDL files with DOS line endings). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/585#issuecomment-281777715
https://github.com/openbabel/openbabel/issues/585#issuecomment-281777716:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615; Originator: YES. To use fastsearch newlinebuf has to work with all normal text input formats. Fastsearch indexes the input file by recording their positions using tellg.; ; The problem is that tellg and seekg aren't working in the new rdbuf. To get them to work seems to need a new virtual seekoff() function writing, which proved more difficult than I thought it would be, and I gave up. Although it seems elegant at first, is a new rdbuf the best way to go? Might it be easier to use a modified getline() etc., and maybe some extra calls to Trim(). This sort of a problem must affect almost all programs with text input. The code compiled on Windows with with Visual Studio 2005 seems to handle all line endings transparently and newlinebuf is now excluded from the builds. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/585#issuecomment-281777716
https://github.com/openbabel/openbabel/issues/585#issuecomment-281777717:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615; Originator: YES. Replaced newlinebuf by code in lineend.h This is a FilteringInputStreambuf based on an article by James Kanze. This allows the tellg and seekg requests to be passed on to the original rdbuf. Fastsearch now seems to work ok. The method would potentially allow a decompression readbuf to be inserted as well. I considered using Boost iostreams, but the seek requirement would mean that a new filter would have to be written. The Boost code is large and complex and I preferred the very much simpler self-written approach.; Marked pending in case any problems are found. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/585#issuecomment-281777717
https://github.com/openbabel/openbabel/issues/585#issuecomment-281777717:540,Usability,simpl,simpler,540,"Logged In: YES ; user_id=1189615; Originator: YES. Replaced newlinebuf by code in lineend.h This is a FilteringInputStreambuf based on an article by James Kanze. This allows the tellg and seekg requests to be passed on to the original rdbuf. Fastsearch now seems to work ok. The method would potentially allow a decompression readbuf to be inserted as well. I considered using Boost iostreams, but the seek requirement would mean that a new filter would have to be written. The Boost code is large and complex and I preferred the very much simpler self-written approach.; Marked pending in case any problems are found. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/585#issuecomment-281777717
https://github.com/openbabel/openbabel/issues/585#issuecomment-281777718:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539; Originator: NO. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/585#issuecomment-281777718
https://github.com/openbabel/openbabel/issues/586#issuecomment-281777734:0,Testability,Log,Logged,0,Logged In: YES ; user_id=850620; Originator: YES. Same as Bug 1526020 reported by Rajarshi... Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/586#issuecomment-281777734
https://github.com/openbabel/openbabel/issues/586#issuecomment-281777735:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=850620; Originator: YES. I decided to see whether I could figure anything out by using gdb on the core dump:. ~Conversion at obconversion.cpp:268; _wrap_delete_OBConversion at openbabel_python.cpp:37325; ...; PySwigObject_dealloc at openbabel_python.cpp:1550; etc. Line 268 is ""delete pInStream;"". Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/586#issuecomment-281777735
https://github.com/openbabel/openbabel/issues/586#issuecomment-281777736:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420; Originator: NO. Is this still a bug? I think this should have been resolved with the fixes to ReadString and ReadFile. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/586#issuecomment-281777736
https://github.com/openbabel/openbabel/issues/586#issuecomment-281777738:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. This should now be fixed in the SVN trunk, revision 1863 or later. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/586#issuecomment-281777738
https://github.com/openbabel/openbabel/issues/586#issuecomment-281777740:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539; Originator: NO. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/586#issuecomment-281777740
https://github.com/openbabel/openbabel/issues/1477#issuecomment-281810644:108,Modifiability,plugin,plugin,108,"Logged In: YES ; user_id=1189615; Originator: NO. I've written a framework which makes it easy to implement plugin modules for classes with an abstract base class and derived classes called via virtual functions. OBForcefield isn't quite like that but could easily be modified so that it was. Then add a macro MAKE_PLUGIN(OBForcefield), make a global instance of each derived class specifying its ID, and provide a constructor to pass this on to its parent OBForcefield. See details in pluginiter.h OBFingerprint has been modified in this way. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1477#issuecomment-281810644
https://github.com/openbabel/openbabel/issues/1477#issuecomment-281810644:486,Modifiability,plugin,pluginiter,486,"Logged In: YES ; user_id=1189615; Originator: NO. I've written a framework which makes it easy to implement plugin modules for classes with an abstract base class and derived classes called via virtual functions. OBForcefield isn't quite like that but could easily be modified so that it was. Then add a macro MAKE_PLUGIN(OBForcefield), make a global instance of each derived class specifying its ID, and provide a constructor to pass this on to its parent OBForcefield. See details in pluginiter.h OBFingerprint has been modified in this way. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1477#issuecomment-281810644
https://github.com/openbabel/openbabel/issues/1477#issuecomment-281810644:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615; Originator: NO. I've written a framework which makes it easy to implement plugin modules for classes with an abstract base class and derived classes called via virtual functions. OBForcefield isn't quite like that but could easily be modified so that it was. Then add a macro MAKE_PLUGIN(OBForcefield), make a global instance of each derived class specifying its ID, and provide a constructor to pass this on to its parent OBForcefield. See details in pluginiter.h OBFingerprint has been modified in this way. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1477#issuecomment-281810644
https://github.com/openbabel/openbabel/issues/1477#issuecomment-281810645:153,Modifiability,plugin,plugins,153,"Logged In: YES ; user_id=21420; Originator: YES. This is largely addressed at this point. The current SVN trunk now has some force field evaluations and plugins (as Chris suggested). The code will likely continue to evolve, but I'm marking this closed since the request is certainly possible with e.g., 2.1.0b5 or later.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1477#issuecomment-281810645
https://github.com/openbabel/openbabel/issues/1477#issuecomment-281810645:216,Modifiability,evolve,evolve,216,"Logged In: YES ; user_id=21420; Originator: YES. This is largely addressed at this point. The current SVN trunk now has some force field evaluations and plugins (as Chris suggested). The code will likely continue to evolve, but I'm marking this closed since the request is certainly possible with e.g., 2.1.0b5 or later.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1477#issuecomment-281810645
https://github.com/openbabel/openbabel/issues/1477#issuecomment-281810645:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: YES. This is largely addressed at this point. The current SVN trunk now has some force field evaluations and plugins (as Chris suggested). The code will likely continue to evolve, but I'm marking this closed since the request is certainly possible with e.g., 2.1.0b5 or later.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1477#issuecomment-281810645
https://github.com/openbabel/openbabel/issues/587#issuecomment-281777777:197,Deployability,Update,Update,197,"Logged In: YES ; user_id=21420; Originator: NO. Thanks for the bug report, it was good to know that newline was affecting other formats too. This seems to be fixed with Chris's new lineend.h code. Update to revision 1751 or later. I'm marking this closed, pending further comment. Otherwise, it will close within 2 weeks as being fixed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/587#issuecomment-281777777
https://github.com/openbabel/openbabel/issues/587#issuecomment-281777777:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. Thanks for the bug report, it was good to know that newline was affecting other formats too. This seems to be fixed with Chris's new lineend.h code. Update to revision 1751 or later. I'm marking this closed, pending further comment. Otherwise, it will close within 2 weeks as being fixed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/587#issuecomment-281777777
https://github.com/openbabel/openbabel/issues/587#issuecomment-281777778:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539; Originator: NO. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/587#issuecomment-281777778
https://github.com/openbabel/openbabel/issues/588#issuecomment-281777797:107,Security,expose,exposed,107,"Logged In: YES ; user_id=21420; Originator: NO. I've been checking on this particular bug. It seems you've exposed a crash in the residue/chain parser which attempts to recognize residue sequence information in the .mol file when going back to PDB. So the resulting file really only has the initial comment that the PDB file was generated by Open Babel -- but no coordinates. Incidentally, the .mol files won't be read by many visualization files. Old-style MDL molfile v2000 is the most widely supported (e.g., VMD) and has a limitation of 999 atoms and 999 bonds. Many, many PDB files are much larger. If you want a more bullet-proof format, I'd suggest Sybyl .mol2 since it preserves residue information and is also fairly widely supported. In the meantime, I'm checking on the crash in chain perception. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/588#issuecomment-281777797
https://github.com/openbabel/openbabel/issues/588#issuecomment-281777797:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. I've been checking on this particular bug. It seems you've exposed a crash in the residue/chain parser which attempts to recognize residue sequence information in the .mol file when going back to PDB. So the resulting file really only has the initial comment that the PDB file was generated by Open Babel -- but no coordinates. Incidentally, the .mol files won't be read by many visualization files. Old-style MDL molfile v2000 is the most widely supported (e.g., VMD) and has a limitation of 999 atoms and 999 bonds. Many, many PDB files are much larger. If you want a more bullet-proof format, I'd suggest Sybyl .mol2 since it preserves residue information and is also fairly widely supported. In the meantime, I'm checking on the crash in chain perception. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/588#issuecomment-281777797
https://github.com/openbabel/openbabel/issues/588#issuecomment-281777798:141,Deployability,release,releases,141,"Logged In: YES ; user_id=21420; Originator: NO. This is now be fixed in the current SVN trunk (revision 1867 or later) for 2.1.0b7 and later releases. It certainly takes a *long* time in some cases to convert these files, since the molecules are huge. But it does complete. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/588#issuecomment-281777798
https://github.com/openbabel/openbabel/issues/588#issuecomment-281777798:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. This is now be fixed in the current SVN trunk (revision 1867 or later) for 2.1.0b7 and later releases. It certainly takes a *long* time in some cases to convert these files, since the molecules are huge. But it does complete. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/588#issuecomment-281777798
https://github.com/openbabel/openbabel/issues/588#issuecomment-281777800:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539; Originator: NO. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/588#issuecomment-281777800
https://github.com/openbabel/openbabel/issues/589#issuecomment-281777833:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. I cannot reproduce this bug on the current 2.1 development code. I am marking this ""pending"" further comment. Ideally, it would be great if you could compile one of the latest development snapshots:; http://sourceforge.net/project/showfiles.php?group_id=40728&package_id=154019. If there is no comment on this bug in the next 2 weeks, it will be automatically closed as being fixed sometime in the 2.1 development. Thanks!; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/589#issuecomment-281777833
https://github.com/openbabel/openbabel/issues/589#issuecomment-281777834:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539; Originator: NO. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/589#issuecomment-281777834
https://github.com/openbabel/openbabel/issues/590#issuecomment-281777855:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. This has now been fixed in the development SVN trunk for 2.1.0b7 (and of course 2.1 in general), as of revision 1838 or later. Thanks to Chris for solving the implicit valence for Si.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/590#issuecomment-281777855
https://github.com/openbabel/openbabel/issues/591#issuecomment-281777867:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=850620; Originator: NO. Sorry to hear you're having problems. It would be helpful if you could provide an example (e.g. by attaching an input file). Also, if you could let us know what version of Open Babel you are using. And last but not least, it is always helpful if you provide an email address. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/591#issuecomment-281777867
https://github.com/openbabel/openbabel/issues/591#issuecomment-281777869:543,Deployability,release,releases,543,"Logged In: YES ; user_id=21420; Originator: NO. If there aren't any further comments by the original submitter, I will close this in 2 weeks. For one, there are too many issues in one bug report. These really need to be tracked separately. (For example, PDBXML is something that should be requested in the file format request tracker, not listed as a bug here.). If you can give some specific examples of PDB files that exhibit this behavior, please let us know. As far as molecules with more than 2^16 atoms, that's a limitation in the 2.0.x releases and has been lifted in the 2.1 development betas. * src/base.h, src/atom.h, src/bond.h: Update internal atom; indexing to use an unsigned int, rather than short. Fixes; PR#1556819, caused by large molecules (i.e. >2^16 atoms or bonds). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/591#issuecomment-281777869
https://github.com/openbabel/openbabel/issues/591#issuecomment-281777869:640,Deployability,Update,Update,640,"Logged In: YES ; user_id=21420; Originator: NO. If there aren't any further comments by the original submitter, I will close this in 2 weeks. For one, there are too many issues in one bug report. These really need to be tracked separately. (For example, PDBXML is something that should be requested in the file format request tracker, not listed as a bug here.). If you can give some specific examples of PDB files that exhibit this behavior, please let us know. As far as molecules with more than 2^16 atoms, that's a limitation in the 2.0.x releases and has been lifted in the 2.1 development betas. * src/base.h, src/atom.h, src/bond.h: Update internal atom; indexing to use an unsigned int, rather than short. Fixes; PR#1556819, caused by large molecules (i.e. >2^16 atoms or bonds). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/591#issuecomment-281777869
https://github.com/openbabel/openbabel/issues/591#issuecomment-281777869:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. If there aren't any further comments by the original submitter, I will close this in 2 weeks. For one, there are too many issues in one bug report. These really need to be tracked separately. (For example, PDBXML is something that should be requested in the file format request tracker, not listed as a bug here.). If you can give some specific examples of PDB files that exhibit this behavior, please let us know. As far as molecules with more than 2^16 atoms, that's a limitation in the 2.0.x releases and has been lifted in the 2.1 development betas. * src/base.h, src/atom.h, src/bond.h: Update internal atom; indexing to use an unsigned int, rather than short. Fixes; PR#1556819, caused by large molecules (i.e. >2^16 atoms or bonds). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/591#issuecomment-281777869
https://github.com/openbabel/openbabel/issues/591#issuecomment-281777870:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539; Originator: NO. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/591#issuecomment-281777870
https://github.com/openbabel/openbabel/issues/592#issuecomment-281777879:156,Availability,avail,available,156,Logged In: NO . Two quick suggestions that might help us to help you... (1) Does this also occur for the latest development snapshot of OpenBabel 2.1.0?...(available under downloads from http://sf.net/projects/openbabel); (2) Can you attach the input file?. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777879
https://github.com/openbabel/openbabel/issues/592#issuecomment-281777879:172,Availability,down,downloads,172,Logged In: NO . Two quick suggestions that might help us to help you... (1) Does this also occur for the latest development snapshot of OpenBabel 2.1.0?...(available under downloads from http://sf.net/projects/openbabel); (2) Can you attach the input file?. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777879
https://github.com/openbabel/openbabel/issues/592#issuecomment-281777879:0,Testability,Log,Logged,0,Logged In: NO . Two quick suggestions that might help us to help you... (1) Does this also occur for the latest development snapshot of OpenBabel 2.1.0?...(available under downloads from http://sf.net/projects/openbabel); (2) Can you attach the input file?. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777879
https://github.com/openbabel/openbabel/issues/592#issuecomment-281777882:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=542993; Originator: YES. I will try with 2.1.* and get back to you.; As for the input file, I use what's in test/cmltest/. Original comment by: ajacoutot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777882
https://github.com/openbabel/openbabel/issues/592#issuecomment-281777882:133,Testability,test,test,133,"Logged In: YES ; user_id=542993; Originator: YES. I will try with 2.1.* and get back to you.; As for the input file, I use what's in test/cmltest/. Original comment by: ajacoutot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777882
https://github.com/openbabel/openbabel/issues/592#issuecomment-281777883:1230,Availability,error,error,1230,"Logged In: YES ; user_id=542993; Originator: YES. Well, I can't compile the latest snapshot :(. c++ -DHAVE_CONFIG_H -I. -I. -I../../src -I../../include -I/usr/local/include -g -MT forcefieldghemical.lo -MD -MP -MF .deps/forcefieldghemical.Tpo -c forcefieldghemical.cpp -fPIC -DPIC -o .libs/forcefieldghemical.o; c++ -DHAVE_CONFIG_H -I. -I. -I../../src -I../../include -I/usr/local/include -g -MT forcefieldghemical.lo -MD -MP -MF .deps/forcefieldghemical.Tpo -c forcefieldghemical.cpp -o forcefieldghemical.o >/dev/null 2>&1; if /usr/local/bin/libtool --tag=CXX --mode=compile c++ -DHAVE_CONFIG_H -I. -I. -I../../src -I../../include -I/usr/local/include -g -MT forcefieldmmff94.lo -MD -MP -MF "".deps/forcefieldmmff94.Tpo"" -c -o forcefieldmmff94.lo forcefieldmmff94.cpp; then mv -f "".deps/forcefieldmmff94.Tpo"" "".deps/forcefieldmmff94.Plo""; else rm -f "".deps/forcefieldmmff94.Tpo""; exit 1; fi; c++ -DHAVE_CONFIG_H -I. -I. -I../../src -I../../include -I/usr/local/include -g -MT forcefieldmmff94.lo -MD -MP -MF .deps/forcefieldmmff94.Tpo -c forcefieldmmff94.cpp -fPIC -DPIC -o .libs/forcefieldmmff94.o; forcefieldmmff94.cpp: In member function `bool; OpenBabel::OBForceFieldMMFF94::SetupCalculations()':; forcefieldmmff94.cpp:1365: error: ISO C++ says that `double pow(double, double); ' and `float std::pow(float, float)' are ambiguous even though the worst; conversion for the former is better than the worst conversion for the latter; forcefieldmmff94.cpp:1366: error: ISO C++ says that `double pow(double, double); ' and `float std::pow(float, float)' are ambiguous even though the worst; conversion for the former is better than the worst conversion for the latter; *** Error code 1. Original comment by: ajacoutot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777883
https://github.com/openbabel/openbabel/issues/592#issuecomment-281777883:1463,Availability,error,error,1463,"Logged In: YES ; user_id=542993; Originator: YES. Well, I can't compile the latest snapshot :(. c++ -DHAVE_CONFIG_H -I. -I. -I../../src -I../../include -I/usr/local/include -g -MT forcefieldghemical.lo -MD -MP -MF .deps/forcefieldghemical.Tpo -c forcefieldghemical.cpp -fPIC -DPIC -o .libs/forcefieldghemical.o; c++ -DHAVE_CONFIG_H -I. -I. -I../../src -I../../include -I/usr/local/include -g -MT forcefieldghemical.lo -MD -MP -MF .deps/forcefieldghemical.Tpo -c forcefieldghemical.cpp -o forcefieldghemical.o >/dev/null 2>&1; if /usr/local/bin/libtool --tag=CXX --mode=compile c++ -DHAVE_CONFIG_H -I. -I. -I../../src -I../../include -I/usr/local/include -g -MT forcefieldmmff94.lo -MD -MP -MF "".deps/forcefieldmmff94.Tpo"" -c -o forcefieldmmff94.lo forcefieldmmff94.cpp; then mv -f "".deps/forcefieldmmff94.Tpo"" "".deps/forcefieldmmff94.Plo""; else rm -f "".deps/forcefieldmmff94.Tpo""; exit 1; fi; c++ -DHAVE_CONFIG_H -I. -I. -I../../src -I../../include -I/usr/local/include -g -MT forcefieldmmff94.lo -MD -MP -MF .deps/forcefieldmmff94.Tpo -c forcefieldmmff94.cpp -fPIC -DPIC -o .libs/forcefieldmmff94.o; forcefieldmmff94.cpp: In member function `bool; OpenBabel::OBForceFieldMMFF94::SetupCalculations()':; forcefieldmmff94.cpp:1365: error: ISO C++ says that `double pow(double, double); ' and `float std::pow(float, float)' are ambiguous even though the worst; conversion for the former is better than the worst conversion for the latter; forcefieldmmff94.cpp:1366: error: ISO C++ says that `double pow(double, double); ' and `float std::pow(float, float)' are ambiguous even though the worst; conversion for the former is better than the worst conversion for the latter; *** Error code 1. Original comment by: ajacoutot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777883
https://github.com/openbabel/openbabel/issues/592#issuecomment-281777883:1673,Availability,Error,Error,1673,"Logged In: YES ; user_id=542993; Originator: YES. Well, I can't compile the latest snapshot :(. c++ -DHAVE_CONFIG_H -I. -I. -I../../src -I../../include -I/usr/local/include -g -MT forcefieldghemical.lo -MD -MP -MF .deps/forcefieldghemical.Tpo -c forcefieldghemical.cpp -fPIC -DPIC -o .libs/forcefieldghemical.o; c++ -DHAVE_CONFIG_H -I. -I. -I../../src -I../../include -I/usr/local/include -g -MT forcefieldghemical.lo -MD -MP -MF .deps/forcefieldghemical.Tpo -c forcefieldghemical.cpp -o forcefieldghemical.o >/dev/null 2>&1; if /usr/local/bin/libtool --tag=CXX --mode=compile c++ -DHAVE_CONFIG_H -I. -I. -I../../src -I../../include -I/usr/local/include -g -MT forcefieldmmff94.lo -MD -MP -MF "".deps/forcefieldmmff94.Tpo"" -c -o forcefieldmmff94.lo forcefieldmmff94.cpp; then mv -f "".deps/forcefieldmmff94.Tpo"" "".deps/forcefieldmmff94.Plo""; else rm -f "".deps/forcefieldmmff94.Tpo""; exit 1; fi; c++ -DHAVE_CONFIG_H -I. -I. -I../../src -I../../include -I/usr/local/include -g -MT forcefieldmmff94.lo -MD -MP -MF .deps/forcefieldmmff94.Tpo -c forcefieldmmff94.cpp -fPIC -DPIC -o .libs/forcefieldmmff94.o; forcefieldmmff94.cpp: In member function `bool; OpenBabel::OBForceFieldMMFF94::SetupCalculations()':; forcefieldmmff94.cpp:1365: error: ISO C++ says that `double pow(double, double); ' and `float std::pow(float, float)' are ambiguous even though the worst; conversion for the former is better than the worst conversion for the latter; forcefieldmmff94.cpp:1366: error: ISO C++ says that `double pow(double, double); ' and `float std::pow(float, float)' are ambiguous even though the worst; conversion for the former is better than the worst conversion for the latter; *** Error code 1. Original comment by: ajacoutot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777883
https://github.com/openbabel/openbabel/issues/592#issuecomment-281777883:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=542993; Originator: YES. Well, I can't compile the latest snapshot :(. c++ -DHAVE_CONFIG_H -I. -I. -I../../src -I../../include -I/usr/local/include -g -MT forcefieldghemical.lo -MD -MP -MF .deps/forcefieldghemical.Tpo -c forcefieldghemical.cpp -fPIC -DPIC -o .libs/forcefieldghemical.o; c++ -DHAVE_CONFIG_H -I. -I. -I../../src -I../../include -I/usr/local/include -g -MT forcefieldghemical.lo -MD -MP -MF .deps/forcefieldghemical.Tpo -c forcefieldghemical.cpp -o forcefieldghemical.o >/dev/null 2>&1; if /usr/local/bin/libtool --tag=CXX --mode=compile c++ -DHAVE_CONFIG_H -I. -I. -I../../src -I../../include -I/usr/local/include -g -MT forcefieldmmff94.lo -MD -MP -MF "".deps/forcefieldmmff94.Tpo"" -c -o forcefieldmmff94.lo forcefieldmmff94.cpp; then mv -f "".deps/forcefieldmmff94.Tpo"" "".deps/forcefieldmmff94.Plo""; else rm -f "".deps/forcefieldmmff94.Tpo""; exit 1; fi; c++ -DHAVE_CONFIG_H -I. -I. -I../../src -I../../include -I/usr/local/include -g -MT forcefieldmmff94.lo -MD -MP -MF .deps/forcefieldmmff94.Tpo -c forcefieldmmff94.cpp -fPIC -DPIC -o .libs/forcefieldmmff94.o; forcefieldmmff94.cpp: In member function `bool; OpenBabel::OBForceFieldMMFF94::SetupCalculations()':; forcefieldmmff94.cpp:1365: error: ISO C++ says that `double pow(double, double); ' and `float std::pow(float, float)' are ambiguous even though the worst; conversion for the former is better than the worst conversion for the latter; forcefieldmmff94.cpp:1366: error: ISO C++ says that `double pow(double, double); ' and `float std::pow(float, float)' are ambiguous even though the worst; conversion for the former is better than the worst conversion for the latter; *** Error code 1. Original comment by: ajacoutot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777883
https://github.com/openbabel/openbabel/issues/592#issuecomment-281777884:277,Availability,down,download,277,"Logged In: YES ; user_id=850620; Originator: NO. Hmmm...well, the good news is that you've found a second bug! The forcefield code is quite new, but I guess it hasn't been tested with the new GCC4, which apparently is getting very strict. If you want to keep trying, you could download an older snapshot that doesn't contain forcefieldghemical.cpp. In the meanwhile, I'll post on the devel list about the new bug, as fixing compile problems are a priority. But I'll have to leave the original bug to a C++ expert. Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777884
https://github.com/openbabel/openbabel/issues/592#issuecomment-281777884:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=850620; Originator: NO. Hmmm...well, the good news is that you've found a second bug! The forcefield code is quite new, but I guess it hasn't been tested with the new GCC4, which apparently is getting very strict. If you want to keep trying, you could download an older snapshot that doesn't contain forcefieldghemical.cpp. In the meanwhile, I'll post on the devel list about the new bug, as fixing compile problems are a priority. But I'll have to leave the original bug to a C++ expert. Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777884
https://github.com/openbabel/openbabel/issues/592#issuecomment-281777884:172,Testability,test,tested,172,"Logged In: YES ; user_id=850620; Originator: NO. Hmmm...well, the good news is that you've found a second bug! The forcefield code is quite new, but I guess it hasn't been tested with the new GCC4, which apparently is getting very strict. If you want to keep trying, you could download an older snapshot that doesn't contain forcefieldghemical.cpp. In the meanwhile, I'll post on the devel list about the new bug, as fixing compile problems are a priority. But I'll have to leave the original bug to a C++ expert. Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777884
https://github.com/openbabel/openbabel/issues/592#issuecomment-281777885:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=542993; Originator: YES. Just for the record, I use gcc version 3.3.5 (propolice). Original comment by: ajacoutot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777885
https://github.com/openbabel/openbabel/issues/592#issuecomment-281777886:228,Availability,error,error,228,Logged In: YES ; user_id=542993; Originator: YES. openbabel-2.1.0b4 compiiles and work fine.; It does not core dump anymore :); But this is beta software and I'd rather use the latest stable release so I need to know where this error is coming from. Original comment by: ajacoutot,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777886
https://github.com/openbabel/openbabel/issues/592#issuecomment-281777886:191,Deployability,release,release,191,Logged In: YES ; user_id=542993; Originator: YES. openbabel-2.1.0b4 compiiles and work fine.; It does not core dump anymore :); But this is beta software and I'd rather use the latest stable release so I need to know where this error is coming from. Original comment by: ajacoutot,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777886
https://github.com/openbabel/openbabel/issues/592#issuecomment-281777886:0,Testability,Log,Logged,0,Logged In: YES ; user_id=542993; Originator: YES. openbabel-2.1.0b4 compiiles and work fine.; It does not core dump anymore :); But this is beta software and I'd rather use the latest stable release so I need to know where this error is coming from. Original comment by: ajacoutot,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777886
https://github.com/openbabel/openbabel/issues/592#issuecomment-281777887:691,Deployability,release,released,691,"Logged In: YES ; user_id=850620; Originator: NO. That's great...but your comment is understandable. The reason I suggested using a newer version was that I remembered that some changes had been made to the CML code since then. If you look at the log for cmlformat.cpp at:; http://openbabel.svn.sourceforge.net/viewvc/openbabel/openbabel/trunk/src/formats/xml/cmlformat.cpp?view=log. It's possible that the important difference is at r1601:; * src/formats/xml/cmlformat.cpp: Change size_t to; string::size_type to be sure of 64-bit correctness. I think that a number of changes for 64-bit computers were made around the same time, so I recommend that you use the beta version rather than the released one. As far as I know, there will be no more stable releases of 2.0.x. The next stable release will be 2.1.0 final. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777887
https://github.com/openbabel/openbabel/issues/592#issuecomment-281777887:752,Deployability,release,releases,752,"Logged In: YES ; user_id=850620; Originator: NO. That's great...but your comment is understandable. The reason I suggested using a newer version was that I remembered that some changes had been made to the CML code since then. If you look at the log for cmlformat.cpp at:; http://openbabel.svn.sourceforge.net/viewvc/openbabel/openbabel/trunk/src/formats/xml/cmlformat.cpp?view=log. It's possible that the important difference is at r1601:; * src/formats/xml/cmlformat.cpp: Change size_t to; string::size_type to be sure of 64-bit correctness. I think that a number of changes for 64-bit computers were made around the same time, so I recommend that you use the beta version rather than the released one. As far as I know, there will be no more stable releases of 2.0.x. The next stable release will be 2.1.0 final. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777887
https://github.com/openbabel/openbabel/issues/592#issuecomment-281777887:787,Deployability,release,release,787,"Logged In: YES ; user_id=850620; Originator: NO. That's great...but your comment is understandable. The reason I suggested using a newer version was that I remembered that some changes had been made to the CML code since then. If you look at the log for cmlformat.cpp at:; http://openbabel.svn.sourceforge.net/viewvc/openbabel/openbabel/trunk/src/formats/xml/cmlformat.cpp?view=log. It's possible that the important difference is at r1601:; * src/formats/xml/cmlformat.cpp: Change size_t to; string::size_type to be sure of 64-bit correctness. I think that a number of changes for 64-bit computers were made around the same time, so I recommend that you use the beta version rather than the released one. As far as I know, there will be no more stable releases of 2.0.x. The next stable release will be 2.1.0 final. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777887
https://github.com/openbabel/openbabel/issues/592#issuecomment-281777887:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=850620; Originator: NO. That's great...but your comment is understandable. The reason I suggested using a newer version was that I remembered that some changes had been made to the CML code since then. If you look at the log for cmlformat.cpp at:; http://openbabel.svn.sourceforge.net/viewvc/openbabel/openbabel/trunk/src/formats/xml/cmlformat.cpp?view=log. It's possible that the important difference is at r1601:; * src/formats/xml/cmlformat.cpp: Change size_t to; string::size_type to be sure of 64-bit correctness. I think that a number of changes for 64-bit computers were made around the same time, so I recommend that you use the beta version rather than the released one. As far as I know, there will be no more stable releases of 2.0.x. The next stable release will be 2.1.0 final. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777887
https://github.com/openbabel/openbabel/issues/592#issuecomment-281777887:246,Testability,log,log,246,"Logged In: YES ; user_id=850620; Originator: NO. That's great...but your comment is understandable. The reason I suggested using a newer version was that I remembered that some changes had been made to the CML code since then. If you look at the log for cmlformat.cpp at:; http://openbabel.svn.sourceforge.net/viewvc/openbabel/openbabel/trunk/src/formats/xml/cmlformat.cpp?view=log. It's possible that the important difference is at r1601:; * src/formats/xml/cmlformat.cpp: Change size_t to; string::size_type to be sure of 64-bit correctness. I think that a number of changes for 64-bit computers were made around the same time, so I recommend that you use the beta version rather than the released one. As far as I know, there will be no more stable releases of 2.0.x. The next stable release will be 2.1.0 final. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777887
https://github.com/openbabel/openbabel/issues/592#issuecomment-281777887:378,Testability,log,log,378,"Logged In: YES ; user_id=850620; Originator: NO. That's great...but your comment is understandable. The reason I suggested using a newer version was that I remembered that some changes had been made to the CML code since then. If you look at the log for cmlformat.cpp at:; http://openbabel.svn.sourceforge.net/viewvc/openbabel/openbabel/trunk/src/formats/xml/cmlformat.cpp?view=log. It's possible that the important difference is at r1601:; * src/formats/xml/cmlformat.cpp: Change size_t to; string::size_type to be sure of 64-bit correctness. I think that a number of changes for 64-bit computers were made around the same time, so I recommend that you use the beta version rather than the released one. As far as I know, there will be no more stable releases of 2.0.x. The next stable release will be 2.1.0 final. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777887
https://github.com/openbabel/openbabel/issues/592#issuecomment-281777891:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=542993; Originator: YES. Seems reasonnable, thanks. Original comment by: ajacoutot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777891
https://github.com/openbabel/openbabel/issues/593#issuecomment-281777905:0,Testability,Log,Logged,0,Logged In: YES ; user_id=1500648; Originator: NO. Added check for eof() from cin. Resolved in trunk 1730. Original comment by: @milkypostman,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/593#issuecomment-281777905
https://github.com/openbabel/openbabel/issues/594#issuecomment-281777908:0,Testability,Log,Logged,0,"Logged In: NO . Presumably this is the same as bug [ 1497456 ] InChI 0D stereo descriptor wrong, although this has a nice test case. Noel. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/594#issuecomment-281777908
https://github.com/openbabel/openbabel/issues/594#issuecomment-281777908:122,Testability,test,test,122,"Logged In: NO . Presumably this is the same as bug [ 1497456 ] InChI 0D stereo descriptor wrong, although this has a nice test case. Noel. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/594#issuecomment-281777908
https://github.com/openbabel/openbabel/issues/594#issuecomment-281777910:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420; Originator: NO. This is a duplicate as Noel mentioned. I'm marking this closed.; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/594#issuecomment-281777910
https://github.com/openbabel/openbabel/issues/595#issuecomment-281777932:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=787122; Originator: NO. Quite strange. When I generate the inchi from GChemPaint (using OpenBabel), I get a third version (see below). 1/C10H14N5O4/c1-5-3-15(10(18)12-9(5)17)8-2-6(13-14-11)7(4-16)19-8/h3,6-8,11,16H,2,4H2,1H3,(H,12,17,18)/t6-,7+,8+/m1/s1. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/595#issuecomment-281777932
https://github.com/openbabel/openbabel/issues/595#issuecomment-281777933:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1700677; Originator: NO. I'm just including this comment since I was the originator but was not logged in at the time of the submission. My username is: dbower01. The parameters for the IUPAC InChI code I used is as follows (which happen to be the out-of-box defaults):. Options: Mobile H Perception ON; Isotopic ON, Absolute Stereo ON; Omit undefined/unknown stereogenic centers and bonds. I'm going to spend some time reading through the OpenBabel docs to see if I can find any differences or clues as to what may be causing this/these differences. Dave. Original comment by: dbower01",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/595#issuecomment-281777933
https://github.com/openbabel/openbabel/issues/595#issuecomment-281777933:121,Testability,log,logged,121,"Logged In: YES ; user_id=1700677; Originator: NO. I'm just including this comment since I was the originator but was not logged in at the time of the submission. My username is: dbower01. The parameters for the IUPAC InChI code I used is as follows (which happen to be the out-of-box defaults):. Options: Mobile H Perception ON; Isotopic ON, Absolute Stereo ON; Omit undefined/unknown stereogenic centers and bonds. I'm going to spend some time reading through the OpenBabel docs to see if I can find any differences or clues as to what may be causing this/these differences. Dave. Original comment by: dbower01",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/595#issuecomment-281777933
https://github.com/openbabel/openbabel/issues/595#issuecomment-281777934:0,Testability,Log,Logged,0,Logged In: YES ; user_id=1189615; Originator: NO. The SVN development code at revision 1822 now produces the right InChI for this molecule. But I'm still checking stereochemistry in InChI format. Mark pending to be closed after 2 weeks unless notified. Chris. Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/595#issuecomment-281777934
https://github.com/openbabel/openbabel/issues/595#issuecomment-281777936:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539; Originator: NO. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/595#issuecomment-281777936
https://github.com/openbabel/openbabel/issues/596#issuecomment-281777948:0,Testability,Log,Logged,0,Logged In: YES ; user_id=1189615; Originator: NO. SetOneObjectOnly(bool b) will do this for you. This suggestion has come up previously. I'll add a synomym SetLast. It's no good having functionality if nobody can find it. . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/596#issuecomment-281777948
https://github.com/openbabel/openbabel/issues/597#issuecomment-281777969:0,Testability,Log,Logged,0,Logged In: YES ; user_id=1189615; Originator: NO. Already corrected in SVN Head code for V2.1 and in snapshots. It's a bit of moving target... Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/597#issuecomment-281777969
https://github.com/openbabel/openbabel/issues/598#issuecomment-281777988:91,Deployability,Update,Update,91,"Logged In: YES ; user_id=21420; Originator: YES. This is fixed in the latest SVN revision. Update to r 1758 or later. The force field code is improving steadily, thanks to Tim Vandermeersch. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/598#issuecomment-281777988
https://github.com/openbabel/openbabel/issues/598#issuecomment-281777988:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: YES. This is fixed in the latest SVN revision. Update to r 1758 or later. The force field code is improving steadily, thanks to Tim Vandermeersch. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/598#issuecomment-281777988
https://github.com/openbabel/openbabel/issues/599#issuecomment-281778003:78,Deployability,patch,patch,78,"Logged In: YES ; user_id=21420; Originator: NO. This is fixed -- it's an easy patch. Either update to revision 1747 or later on the SVN trunk (i.e., 2.1 development), or use the patch here:; http://openbabel.svn.sourceforge.net/viewvc/openbabel/openbabel/trunk/data/types.txt?r1=1077&r2=1747&view=patch. I'm marking this closed, pending further comment.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/599#issuecomment-281778003
https://github.com/openbabel/openbabel/issues/599#issuecomment-281778003:92,Deployability,update,update,92,"Logged In: YES ; user_id=21420; Originator: NO. This is fixed -- it's an easy patch. Either update to revision 1747 or later on the SVN trunk (i.e., 2.1 development), or use the patch here:; http://openbabel.svn.sourceforge.net/viewvc/openbabel/openbabel/trunk/data/types.txt?r1=1077&r2=1747&view=patch. I'm marking this closed, pending further comment.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/599#issuecomment-281778003
https://github.com/openbabel/openbabel/issues/599#issuecomment-281778003:178,Deployability,patch,patch,178,"Logged In: YES ; user_id=21420; Originator: NO. This is fixed -- it's an easy patch. Either update to revision 1747 or later on the SVN trunk (i.e., 2.1 development), or use the patch here:; http://openbabel.svn.sourceforge.net/viewvc/openbabel/openbabel/trunk/data/types.txt?r1=1077&r2=1747&view=patch. I'm marking this closed, pending further comment.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/599#issuecomment-281778003
https://github.com/openbabel/openbabel/issues/599#issuecomment-281778003:297,Deployability,patch,patch,297,"Logged In: YES ; user_id=21420; Originator: NO. This is fixed -- it's an easy patch. Either update to revision 1747 or later on the SVN trunk (i.e., 2.1 development), or use the patch here:; http://openbabel.svn.sourceforge.net/viewvc/openbabel/openbabel/trunk/data/types.txt?r1=1077&r2=1747&view=patch. I'm marking this closed, pending further comment.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/599#issuecomment-281778003
https://github.com/openbabel/openbabel/issues/599#issuecomment-281778003:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. This is fixed -- it's an easy patch. Either update to revision 1747 or later on the SVN trunk (i.e., 2.1 development), or use the patch here:; http://openbabel.svn.sourceforge.net/viewvc/openbabel/openbabel/trunk/data/types.txt?r1=1077&r2=1747&view=patch. I'm marking this closed, pending further comment.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/599#issuecomment-281778003
https://github.com/openbabel/openbabel/issues/599#issuecomment-281778005:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539; Originator: NO. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/599#issuecomment-281778005
https://github.com/openbabel/openbabel/issues/600#issuecomment-281778024:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. This is fixed now. . I'm marking this pending further comment from Chris. Otherwise, it will close as being fixed in 2 weeks automatically.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/600#issuecomment-281778024
https://github.com/openbabel/openbabel/issues/600#issuecomment-281778025:0,Testability,Log,Logged,0,Logged In: YES ; user_id=1189615; Originator: YES. It still fails in the same way for me in revision 1822.; with Visual C++8. Is this another compiler compatibility problem?. Chris. Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/600#issuecomment-281778025
https://github.com/openbabel/openbabel/issues/600#issuecomment-281778026:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. Chris, is there any way you can get a line number or stack backtrace from the debugger to elucidate this? As you say, it's probably a compiler issue. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/600#issuecomment-281778026
https://github.com/openbabel/openbabel/issues/600#issuecomment-281778028:132,Deployability,release,release,132,Logged In: YES ; user_id=1189615; Originator: YES. Corrected in revision 1831. This is the sort of bug that crashes aeroplanes - in release code it would only have an effect on very rare occasions. Well done the Visual Studio debugger!. Chris . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/600#issuecomment-281778028
https://github.com/openbabel/openbabel/issues/600#issuecomment-281778028:0,Testability,Log,Logged,0,Logged In: YES ; user_id=1189615; Originator: YES. Corrected in revision 1831. This is the sort of bug that crashes aeroplanes - in release code it would only have an effect on very rare occasions. Well done the Visual Studio debugger!. Chris . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/600#issuecomment-281778028
https://github.com/openbabel/openbabel/issues/600#issuecomment-281778030:132,Deployability,release,release,132,Logged In: YES ; user_id=1189615; Originator: YES. Corrected in revision 1831. This is the sort of bug that crashes aeroplanes - in release code it would only have an effect on very rare occasions. Well done the Visual Studio debugger!. Chris . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/600#issuecomment-281778030
https://github.com/openbabel/openbabel/issues/600#issuecomment-281778030:0,Testability,Log,Logged,0,Logged In: YES ; user_id=1189615; Originator: YES. Corrected in revision 1831. This is the sort of bug that crashes aeroplanes - in release code it would only have an effect on very rare occasions. Well done the Visual Studio debugger!. Chris . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/600#issuecomment-281778030
https://github.com/openbabel/openbabel/issues/600#issuecomment-281778032:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539; Originator: NO. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/600#issuecomment-281778032
https://github.com/openbabel/openbabel/issues/601#issuecomment-281778043:441,Integrability,message,message,441,"Logged In: YES ; user_id=1189615; Originator: NO. Corrected in SVN revision 1753 (for v2.1). The -m option was interpreted as a splitting operation if there was only one input file and a batch operation otherwise. It is now also necessary for the base name for the output files that will contain the split objects to have at least one character.; babel test.sdf -omol2 -m now converts to the expected test.omol2, but there is also a warning message in case the user was expecting to be doing a split.; Marked pending. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/601#issuecomment-281778043
https://github.com/openbabel/openbabel/issues/601#issuecomment-281778043:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615; Originator: NO. Corrected in SVN revision 1753 (for v2.1). The -m option was interpreted as a splitting operation if there was only one input file and a batch operation otherwise. It is now also necessary for the base name for the output files that will contain the split objects to have at least one character.; babel test.sdf -omol2 -m now converts to the expected test.omol2, but there is also a warning message in case the user was expecting to be doing a split.; Marked pending. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/601#issuecomment-281778043
https://github.com/openbabel/openbabel/issues/601#issuecomment-281778043:353,Testability,test,test,353,"Logged In: YES ; user_id=1189615; Originator: NO. Corrected in SVN revision 1753 (for v2.1). The -m option was interpreted as a splitting operation if there was only one input file and a batch operation otherwise. It is now also necessary for the base name for the output files that will contain the split objects to have at least one character.; babel test.sdf -omol2 -m now converts to the expected test.omol2, but there is also a warning message in case the user was expecting to be doing a split.; Marked pending. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/601#issuecomment-281778043
https://github.com/openbabel/openbabel/issues/601#issuecomment-281778043:401,Testability,test,test,401,"Logged In: YES ; user_id=1189615; Originator: NO. Corrected in SVN revision 1753 (for v2.1). The -m option was interpreted as a splitting operation if there was only one input file and a batch operation otherwise. It is now also necessary for the base name for the output files that will contain the split objects to have at least one character.; babel test.sdf -omol2 -m now converts to the expected test.omol2, but there is also a warning message in case the user was expecting to be doing a split.; Marked pending. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/601#issuecomment-281778043
https://github.com/openbabel/openbabel/issues/601#issuecomment-281778045:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539; Originator: NO. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/601#issuecomment-281778045
https://github.com/openbabel/openbabel/issues/602#issuecomment-281778068:118,Availability,error,errors,118,"Logged In: YES ; user_id=21420; Originator: NO. Fixed. Switched to FOR_ATOMS_OF_MOL iterator instead -- no off-by-one errors. Ever. :-). Update to revision 1752 or later. I'm marking this closed, pending further comment. Otherwise, it will close automatically in 2 weeks. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/602#issuecomment-281778068
https://github.com/openbabel/openbabel/issues/602#issuecomment-281778068:137,Deployability,Update,Update,137,"Logged In: YES ; user_id=21420; Originator: NO. Fixed. Switched to FOR_ATOMS_OF_MOL iterator instead -- no off-by-one errors. Ever. :-). Update to revision 1752 or later. I'm marking this closed, pending further comment. Otherwise, it will close automatically in 2 weeks. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/602#issuecomment-281778068
https://github.com/openbabel/openbabel/issues/602#issuecomment-281778068:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. Fixed. Switched to FOR_ATOMS_OF_MOL iterator instead -- no off-by-one errors. Ever. :-). Update to revision 1752 or later. I'm marking this closed, pending further comment. Otherwise, it will close automatically in 2 weeks. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/602#issuecomment-281778068
https://github.com/openbabel/openbabel/issues/602#issuecomment-281778070:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539; Originator: NO. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/602#issuecomment-281778070
https://github.com/openbabel/openbabel/issues/1479#issuecomment-281810662:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. Considering today's change (to disable / or \ recognition, I think this becomes a feature request, rather than a bug report. So I'm going to move this to ""Feature requests."" (i.e., need cis/trans support back). I'll also make a note on the wiki. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1479#issuecomment-281810662
https://github.com/openbabel/openbabel/issues/1479#issuecomment-281810663:75,Usability,learn,learn,75,"Noel, I can work with you to re-implement the SMARTS -- if you can help me learn the double-bond stereo code in the trunk. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1479#issuecomment-281810663
https://github.com/openbabel/openbabel/issues/603#issuecomment-281778076:405,Deployability,release,release,405,"Logged In: YES ; user_id=21420; Originator: YES. The easiest fix, actually is to change the code. A BFS search which is already done to determine ring membership can also return the smallest ring size of an atom or bond. This is enough for PerceiveBondOrders (i.e., it doesn't need the full, slow FindSSSR). It's also enough for aromaticity detection. This is unlikely to be fixed before the upcoming 2.1 release.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/603#issuecomment-281778076
https://github.com/openbabel/openbabel/issues/603#issuecomment-281778076:341,Safety,detect,detection,341,"Logged In: YES ; user_id=21420; Originator: YES. The easiest fix, actually is to change the code. A BFS search which is already done to determine ring membership can also return the smallest ring size of an atom or bond. This is enough for PerceiveBondOrders (i.e., it doesn't need the full, slow FindSSSR). It's also enough for aromaticity detection. This is unlikely to be fixed before the upcoming 2.1 release.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/603#issuecomment-281778076
https://github.com/openbabel/openbabel/issues/603#issuecomment-281778076:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: YES. The easiest fix, actually is to change the code. A BFS search which is already done to determine ring membership can also return the smallest ring size of an atom or bond. This is enough for PerceiveBondOrders (i.e., it doesn't need the full, slow FindSSSR). It's also enough for aromaticity detection. This is unlikely to be fixed before the upcoming 2.1 release.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/603#issuecomment-281778076
https://github.com/openbabel/openbabel/issues/604#issuecomment-281778089:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. This should be fixed in the current SVN trunk, revision 1829 or later. I'm marking this 'pending' any further comments by Craig. Otherwise, it will close as being fixed in 2 weeks automatically. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/604#issuecomment-281778089
https://github.com/openbabel/openbabel/issues/604#issuecomment-281778090:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539; Originator: NO. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/604#issuecomment-281778090
https://github.com/openbabel/openbabel/issues/605#issuecomment-281778100:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1444119; Originator: NO. The canonical SMILES is incorrect -- I will investigate. However, OpenEye's depiction is wrong, too, as illustrated by these two SMILES. C/C=C(/Br)/C; C/C=C(/Br)\C. OpenEye's depict program draws two molecules, but they can't both be right. The first one is wrong, because it puts the methyl and bromo in the same place. Daylight's SMILES parser correctly rejects the first SMILES. Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/605#issuecomment-281778100
https://github.com/openbabel/openbabel/issues/605#issuecomment-281778101:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: YES. Craig fixed this himself, although he evidently forgot to close the bug report. This is fixed in the current SVN trunk, revision 1808 or later. For the reported bug, -ocan now supplies:; O/N=C(\C)/C(=N\O)\C NSC 9. Which is, in fact, correct by my reckoning. (Neither Daylight depict or ChemDraw accepts this SMILES.). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/605#issuecomment-281778101
https://github.com/openbabel/openbabel/issues/605#issuecomment-281778102:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539; Originator: NO. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/605#issuecomment-281778102
https://github.com/openbabel/openbabel/issues/606#issuecomment-281778105:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: YES. This appears to have been fixed with the latest SVN trunk and the new OBFFLog() function. I'm marking this ""pending"" further comments (e.g., from Tim). Otherwise it will close automatically in 2 weeks as being fixed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/606#issuecomment-281778105
https://github.com/openbabel/openbabel/issues/606#issuecomment-281778106:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539; Originator: NO. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/606#issuecomment-281778106
https://github.com/openbabel/openbabel/issues/607#issuecomment-281778125:1564,Availability,down,down,1564,"Logged In: YES ; user_id=1500648; Originator: YES. This problem has bigger roots and can be replicated in a number of ways. However, this bit of code also causes a segfault. It _uses_ BeginModify and EndModify to add two atoms and create a bond between the two. OBMol testMolH3;; testMolH3.BeginModify();; OBAtom *testAtom3 = testMolH3.NewAtom();; testAtom3->SetVector(0.5f, 0.5f, 0.5f);; testAtom3->SetAtomicNum(6);; OBAtom *testAtom4 = testMolH3.NewAtom();; testAtom4->SetVector(-0.5f, -0.5f, -0.5f);; testAtom4->SetAtomicNum(6);; OBBond *testBond = testMolH3.NewBond();; testBond->SetBO(1);; testBond->SetBegin(testAtom3);; testBond->SetEnd(testAtom4);; testAtom3->AddBond(testBond);; testAtom4->AddBond(testBond);; testMolH3.EndModify();; testMolH3.AddHydrogens();. However, if we add an EndModify() then AddHydrogens to the single atom then continue it works fine. OBMol testMolH3;; testMolH3.BeginModify();; OBAtom *testAtom3 = testMolH3.NewAtom();; testAtom3->SetVector(0.5f, 0.5f, 0.5f);; testAtom3->SetAtomicNum(6);. testMolH3.EndModify();; testMolH3.AddHydrogens();; testMolH3.BeginModify();. OBAtom *testAtom4 = testMolH3.NewAtom();; testAtom4->SetVector(-0.5f, -0.5f, -0.5f);; testAtom4->SetAtomicNum(6);; OBBond *testBond = testMolH3.NewBond();; testBond->SetBO(1);; testBond->SetBegin(testAtom3);; testBond->SetEnd(testAtom4);; testAtom3->AddBond(testBond);; testAtom4->AddBond(testBond);; testMolH3.EndModify();; testMolH3.AddHydrogens();. It would be useful if someone with experience with CorrectPH could help. I was able to trace part of the but down to where there is a Loop on the Apply function in file phmodel.cpp line 158. Also, if you disable PH correction the first code will still segfault in the mol.cpp file around line 1975 (somewhere in the loop where the adoms are created and conformer information setup). Original comment by: @milkypostman",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/607#issuecomment-281778125
https://github.com/openbabel/openbabel/issues/607#issuecomment-281778125:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1500648; Originator: YES. This problem has bigger roots and can be replicated in a number of ways. However, this bit of code also causes a segfault. It _uses_ BeginModify and EndModify to add two atoms and create a bond between the two. OBMol testMolH3;; testMolH3.BeginModify();; OBAtom *testAtom3 = testMolH3.NewAtom();; testAtom3->SetVector(0.5f, 0.5f, 0.5f);; testAtom3->SetAtomicNum(6);; OBAtom *testAtom4 = testMolH3.NewAtom();; testAtom4->SetVector(-0.5f, -0.5f, -0.5f);; testAtom4->SetAtomicNum(6);; OBBond *testBond = testMolH3.NewBond();; testBond->SetBO(1);; testBond->SetBegin(testAtom3);; testBond->SetEnd(testAtom4);; testAtom3->AddBond(testBond);; testAtom4->AddBond(testBond);; testMolH3.EndModify();; testMolH3.AddHydrogens();. However, if we add an EndModify() then AddHydrogens to the single atom then continue it works fine. OBMol testMolH3;; testMolH3.BeginModify();; OBAtom *testAtom3 = testMolH3.NewAtom();; testAtom3->SetVector(0.5f, 0.5f, 0.5f);; testAtom3->SetAtomicNum(6);. testMolH3.EndModify();; testMolH3.AddHydrogens();; testMolH3.BeginModify();. OBAtom *testAtom4 = testMolH3.NewAtom();; testAtom4->SetVector(-0.5f, -0.5f, -0.5f);; testAtom4->SetAtomicNum(6);; OBBond *testBond = testMolH3.NewBond();; testBond->SetBO(1);; testBond->SetBegin(testAtom3);; testBond->SetEnd(testAtom4);; testAtom3->AddBond(testBond);; testAtom4->AddBond(testBond);; testMolH3.EndModify();; testMolH3.AddHydrogens();. It would be useful if someone with experience with CorrectPH could help. I was able to trace part of the but down to where there is a Loop on the Apply function in file phmodel.cpp line 158. Also, if you disable PH correction the first code will still segfault in the mol.cpp file around line 1975 (somewhere in the loop where the adoms are created and conformer information setup). Original comment by: @milkypostman",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/607#issuecomment-281778125
https://github.com/openbabel/openbabel/issues/607#issuecomment-281778125:541,Testability,test,testBond,541,"Logged In: YES ; user_id=1500648; Originator: YES. This problem has bigger roots and can be replicated in a number of ways. However, this bit of code also causes a segfault. It _uses_ BeginModify and EndModify to add two atoms and create a bond between the two. OBMol testMolH3;; testMolH3.BeginModify();; OBAtom *testAtom3 = testMolH3.NewAtom();; testAtom3->SetVector(0.5f, 0.5f, 0.5f);; testAtom3->SetAtomicNum(6);; OBAtom *testAtom4 = testMolH3.NewAtom();; testAtom4->SetVector(-0.5f, -0.5f, -0.5f);; testAtom4->SetAtomicNum(6);; OBBond *testBond = testMolH3.NewBond();; testBond->SetBO(1);; testBond->SetBegin(testAtom3);; testBond->SetEnd(testAtom4);; testAtom3->AddBond(testBond);; testAtom4->AddBond(testBond);; testMolH3.EndModify();; testMolH3.AddHydrogens();. However, if we add an EndModify() then AddHydrogens to the single atom then continue it works fine. OBMol testMolH3;; testMolH3.BeginModify();; OBAtom *testAtom3 = testMolH3.NewAtom();; testAtom3->SetVector(0.5f, 0.5f, 0.5f);; testAtom3->SetAtomicNum(6);. testMolH3.EndModify();; testMolH3.AddHydrogens();; testMolH3.BeginModify();. OBAtom *testAtom4 = testMolH3.NewAtom();; testAtom4->SetVector(-0.5f, -0.5f, -0.5f);; testAtom4->SetAtomicNum(6);; OBBond *testBond = testMolH3.NewBond();; testBond->SetBO(1);; testBond->SetBegin(testAtom3);; testBond->SetEnd(testAtom4);; testAtom3->AddBond(testBond);; testAtom4->AddBond(testBond);; testMolH3.EndModify();; testMolH3.AddHydrogens();. It would be useful if someone with experience with CorrectPH could help. I was able to trace part of the but down to where there is a Loop on the Apply function in file phmodel.cpp line 158. Also, if you disable PH correction the first code will still segfault in the mol.cpp file around line 1975 (somewhere in the loop where the adoms are created and conformer information setup). Original comment by: @milkypostman",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/607#issuecomment-281778125
https://github.com/openbabel/openbabel/issues/607#issuecomment-281778125:574,Testability,test,testBond,574,"Logged In: YES ; user_id=1500648; Originator: YES. This problem has bigger roots and can be replicated in a number of ways. However, this bit of code also causes a segfault. It _uses_ BeginModify and EndModify to add two atoms and create a bond between the two. OBMol testMolH3;; testMolH3.BeginModify();; OBAtom *testAtom3 = testMolH3.NewAtom();; testAtom3->SetVector(0.5f, 0.5f, 0.5f);; testAtom3->SetAtomicNum(6);; OBAtom *testAtom4 = testMolH3.NewAtom();; testAtom4->SetVector(-0.5f, -0.5f, -0.5f);; testAtom4->SetAtomicNum(6);; OBBond *testBond = testMolH3.NewBond();; testBond->SetBO(1);; testBond->SetBegin(testAtom3);; testBond->SetEnd(testAtom4);; testAtom3->AddBond(testBond);; testAtom4->AddBond(testBond);; testMolH3.EndModify();; testMolH3.AddHydrogens();. However, if we add an EndModify() then AddHydrogens to the single atom then continue it works fine. OBMol testMolH3;; testMolH3.BeginModify();; OBAtom *testAtom3 = testMolH3.NewAtom();; testAtom3->SetVector(0.5f, 0.5f, 0.5f);; testAtom3->SetAtomicNum(6);. testMolH3.EndModify();; testMolH3.AddHydrogens();; testMolH3.BeginModify();. OBAtom *testAtom4 = testMolH3.NewAtom();; testAtom4->SetVector(-0.5f, -0.5f, -0.5f);; testAtom4->SetAtomicNum(6);; OBBond *testBond = testMolH3.NewBond();; testBond->SetBO(1);; testBond->SetBegin(testAtom3);; testBond->SetEnd(testAtom4);; testAtom3->AddBond(testBond);; testAtom4->AddBond(testBond);; testMolH3.EndModify();; testMolH3.AddHydrogens();. It would be useful if someone with experience with CorrectPH could help. I was able to trace part of the but down to where there is a Loop on the Apply function in file phmodel.cpp line 158. Also, if you disable PH correction the first code will still segfault in the mol.cpp file around line 1975 (somewhere in the loop where the adoms are created and conformer information setup). Original comment by: @milkypostman",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/607#issuecomment-281778125
https://github.com/openbabel/openbabel/issues/607#issuecomment-281778125:595,Testability,test,testBond,595,"Logged In: YES ; user_id=1500648; Originator: YES. This problem has bigger roots and can be replicated in a number of ways. However, this bit of code also causes a segfault. It _uses_ BeginModify and EndModify to add two atoms and create a bond between the two. OBMol testMolH3;; testMolH3.BeginModify();; OBAtom *testAtom3 = testMolH3.NewAtom();; testAtom3->SetVector(0.5f, 0.5f, 0.5f);; testAtom3->SetAtomicNum(6);; OBAtom *testAtom4 = testMolH3.NewAtom();; testAtom4->SetVector(-0.5f, -0.5f, -0.5f);; testAtom4->SetAtomicNum(6);; OBBond *testBond = testMolH3.NewBond();; testBond->SetBO(1);; testBond->SetBegin(testAtom3);; testBond->SetEnd(testAtom4);; testAtom3->AddBond(testBond);; testAtom4->AddBond(testBond);; testMolH3.EndModify();; testMolH3.AddHydrogens();. However, if we add an EndModify() then AddHydrogens to the single atom then continue it works fine. OBMol testMolH3;; testMolH3.BeginModify();; OBAtom *testAtom3 = testMolH3.NewAtom();; testAtom3->SetVector(0.5f, 0.5f, 0.5f);; testAtom3->SetAtomicNum(6);. testMolH3.EndModify();; testMolH3.AddHydrogens();; testMolH3.BeginModify();. OBAtom *testAtom4 = testMolH3.NewAtom();; testAtom4->SetVector(-0.5f, -0.5f, -0.5f);; testAtom4->SetAtomicNum(6);; OBBond *testBond = testMolH3.NewBond();; testBond->SetBO(1);; testBond->SetBegin(testAtom3);; testBond->SetEnd(testAtom4);; testAtom3->AddBond(testBond);; testAtom4->AddBond(testBond);; testMolH3.EndModify();; testMolH3.AddHydrogens();. It would be useful if someone with experience with CorrectPH could help. I was able to trace part of the but down to where there is a Loop on the Apply function in file phmodel.cpp line 158. Also, if you disable PH correction the first code will still segfault in the mol.cpp file around line 1975 (somewhere in the loop where the adoms are created and conformer information setup). Original comment by: @milkypostman",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/607#issuecomment-281778125
https://github.com/openbabel/openbabel/issues/607#issuecomment-281778125:627,Testability,test,testBond,627,"Logged In: YES ; user_id=1500648; Originator: YES. This problem has bigger roots and can be replicated in a number of ways. However, this bit of code also causes a segfault. It _uses_ BeginModify and EndModify to add two atoms and create a bond between the two. OBMol testMolH3;; testMolH3.BeginModify();; OBAtom *testAtom3 = testMolH3.NewAtom();; testAtom3->SetVector(0.5f, 0.5f, 0.5f);; testAtom3->SetAtomicNum(6);; OBAtom *testAtom4 = testMolH3.NewAtom();; testAtom4->SetVector(-0.5f, -0.5f, -0.5f);; testAtom4->SetAtomicNum(6);; OBBond *testBond = testMolH3.NewBond();; testBond->SetBO(1);; testBond->SetBegin(testAtom3);; testBond->SetEnd(testAtom4);; testAtom3->AddBond(testBond);; testAtom4->AddBond(testBond);; testMolH3.EndModify();; testMolH3.AddHydrogens();. However, if we add an EndModify() then AddHydrogens to the single atom then continue it works fine. OBMol testMolH3;; testMolH3.BeginModify();; OBAtom *testAtom3 = testMolH3.NewAtom();; testAtom3->SetVector(0.5f, 0.5f, 0.5f);; testAtom3->SetAtomicNum(6);. testMolH3.EndModify();; testMolH3.AddHydrogens();; testMolH3.BeginModify();. OBAtom *testAtom4 = testMolH3.NewAtom();; testAtom4->SetVector(-0.5f, -0.5f, -0.5f);; testAtom4->SetAtomicNum(6);; OBBond *testBond = testMolH3.NewBond();; testBond->SetBO(1);; testBond->SetBegin(testAtom3);; testBond->SetEnd(testAtom4);; testAtom3->AddBond(testBond);; testAtom4->AddBond(testBond);; testMolH3.EndModify();; testMolH3.AddHydrogens();. It would be useful if someone with experience with CorrectPH could help. I was able to trace part of the but down to where there is a Loop on the Apply function in file phmodel.cpp line 158. Also, if you disable PH correction the first code will still segfault in the mol.cpp file around line 1975 (somewhere in the loop where the adoms are created and conformer information setup). Original comment by: @milkypostman",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/607#issuecomment-281778125
https://github.com/openbabel/openbabel/issues/607#issuecomment-281778125:676,Testability,test,testBond,676,"Logged In: YES ; user_id=1500648; Originator: YES. This problem has bigger roots and can be replicated in a number of ways. However, this bit of code also causes a segfault. It _uses_ BeginModify and EndModify to add two atoms and create a bond between the two. OBMol testMolH3;; testMolH3.BeginModify();; OBAtom *testAtom3 = testMolH3.NewAtom();; testAtom3->SetVector(0.5f, 0.5f, 0.5f);; testAtom3->SetAtomicNum(6);; OBAtom *testAtom4 = testMolH3.NewAtom();; testAtom4->SetVector(-0.5f, -0.5f, -0.5f);; testAtom4->SetAtomicNum(6);; OBBond *testBond = testMolH3.NewBond();; testBond->SetBO(1);; testBond->SetBegin(testAtom3);; testBond->SetEnd(testAtom4);; testAtom3->AddBond(testBond);; testAtom4->AddBond(testBond);; testMolH3.EndModify();; testMolH3.AddHydrogens();. However, if we add an EndModify() then AddHydrogens to the single atom then continue it works fine. OBMol testMolH3;; testMolH3.BeginModify();; OBAtom *testAtom3 = testMolH3.NewAtom();; testAtom3->SetVector(0.5f, 0.5f, 0.5f);; testAtom3->SetAtomicNum(6);. testMolH3.EndModify();; testMolH3.AddHydrogens();; testMolH3.BeginModify();. OBAtom *testAtom4 = testMolH3.NewAtom();; testAtom4->SetVector(-0.5f, -0.5f, -0.5f);; testAtom4->SetAtomicNum(6);; OBBond *testBond = testMolH3.NewBond();; testBond->SetBO(1);; testBond->SetBegin(testAtom3);; testBond->SetEnd(testAtom4);; testAtom3->AddBond(testBond);; testAtom4->AddBond(testBond);; testMolH3.EndModify();; testMolH3.AddHydrogens();. It would be useful if someone with experience with CorrectPH could help. I was able to trace part of the but down to where there is a Loop on the Apply function in file phmodel.cpp line 158. Also, if you disable PH correction the first code will still segfault in the mol.cpp file around line 1975 (somewhere in the loop where the adoms are created and conformer information setup). Original comment by: @milkypostman",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/607#issuecomment-281778125
https://github.com/openbabel/openbabel/issues/607#issuecomment-281778125:707,Testability,test,testBond,707,"Logged In: YES ; user_id=1500648; Originator: YES. This problem has bigger roots and can be replicated in a number of ways. However, this bit of code also causes a segfault. It _uses_ BeginModify and EndModify to add two atoms and create a bond between the two. OBMol testMolH3;; testMolH3.BeginModify();; OBAtom *testAtom3 = testMolH3.NewAtom();; testAtom3->SetVector(0.5f, 0.5f, 0.5f);; testAtom3->SetAtomicNum(6);; OBAtom *testAtom4 = testMolH3.NewAtom();; testAtom4->SetVector(-0.5f, -0.5f, -0.5f);; testAtom4->SetAtomicNum(6);; OBBond *testBond = testMolH3.NewBond();; testBond->SetBO(1);; testBond->SetBegin(testAtom3);; testBond->SetEnd(testAtom4);; testAtom3->AddBond(testBond);; testAtom4->AddBond(testBond);; testMolH3.EndModify();; testMolH3.AddHydrogens();. However, if we add an EndModify() then AddHydrogens to the single atom then continue it works fine. OBMol testMolH3;; testMolH3.BeginModify();; OBAtom *testAtom3 = testMolH3.NewAtom();; testAtom3->SetVector(0.5f, 0.5f, 0.5f);; testAtom3->SetAtomicNum(6);. testMolH3.EndModify();; testMolH3.AddHydrogens();; testMolH3.BeginModify();. OBAtom *testAtom4 = testMolH3.NewAtom();; testAtom4->SetVector(-0.5f, -0.5f, -0.5f);; testAtom4->SetAtomicNum(6);; OBBond *testBond = testMolH3.NewBond();; testBond->SetBO(1);; testBond->SetBegin(testAtom3);; testBond->SetEnd(testAtom4);; testAtom3->AddBond(testBond);; testAtom4->AddBond(testBond);; testMolH3.EndModify();; testMolH3.AddHydrogens();. It would be useful if someone with experience with CorrectPH could help. I was able to trace part of the but down to where there is a Loop on the Apply function in file phmodel.cpp line 158. Also, if you disable PH correction the first code will still segfault in the mol.cpp file around line 1975 (somewhere in the loop where the adoms are created and conformer information setup). Original comment by: @milkypostman",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/607#issuecomment-281778125
https://github.com/openbabel/openbabel/issues/607#issuecomment-281778125:1226,Testability,test,testBond,1226,"Logged In: YES ; user_id=1500648; Originator: YES. This problem has bigger roots and can be replicated in a number of ways. However, this bit of code also causes a segfault. It _uses_ BeginModify and EndModify to add two atoms and create a bond between the two. OBMol testMolH3;; testMolH3.BeginModify();; OBAtom *testAtom3 = testMolH3.NewAtom();; testAtom3->SetVector(0.5f, 0.5f, 0.5f);; testAtom3->SetAtomicNum(6);; OBAtom *testAtom4 = testMolH3.NewAtom();; testAtom4->SetVector(-0.5f, -0.5f, -0.5f);; testAtom4->SetAtomicNum(6);; OBBond *testBond = testMolH3.NewBond();; testBond->SetBO(1);; testBond->SetBegin(testAtom3);; testBond->SetEnd(testAtom4);; testAtom3->AddBond(testBond);; testAtom4->AddBond(testBond);; testMolH3.EndModify();; testMolH3.AddHydrogens();. However, if we add an EndModify() then AddHydrogens to the single atom then continue it works fine. OBMol testMolH3;; testMolH3.BeginModify();; OBAtom *testAtom3 = testMolH3.NewAtom();; testAtom3->SetVector(0.5f, 0.5f, 0.5f);; testAtom3->SetAtomicNum(6);. testMolH3.EndModify();; testMolH3.AddHydrogens();; testMolH3.BeginModify();. OBAtom *testAtom4 = testMolH3.NewAtom();; testAtom4->SetVector(-0.5f, -0.5f, -0.5f);; testAtom4->SetAtomicNum(6);; OBBond *testBond = testMolH3.NewBond();; testBond->SetBO(1);; testBond->SetBegin(testAtom3);; testBond->SetEnd(testAtom4);; testAtom3->AddBond(testBond);; testAtom4->AddBond(testBond);; testMolH3.EndModify();; testMolH3.AddHydrogens();. It would be useful if someone with experience with CorrectPH could help. I was able to trace part of the but down to where there is a Loop on the Apply function in file phmodel.cpp line 158. Also, if you disable PH correction the first code will still segfault in the mol.cpp file around line 1975 (somewhere in the loop where the adoms are created and conformer information setup). Original comment by: @milkypostman",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/607#issuecomment-281778125
https://github.com/openbabel/openbabel/issues/607#issuecomment-281778125:1259,Testability,test,testBond,1259,"Logged In: YES ; user_id=1500648; Originator: YES. This problem has bigger roots and can be replicated in a number of ways. However, this bit of code also causes a segfault. It _uses_ BeginModify and EndModify to add two atoms and create a bond between the two. OBMol testMolH3;; testMolH3.BeginModify();; OBAtom *testAtom3 = testMolH3.NewAtom();; testAtom3->SetVector(0.5f, 0.5f, 0.5f);; testAtom3->SetAtomicNum(6);; OBAtom *testAtom4 = testMolH3.NewAtom();; testAtom4->SetVector(-0.5f, -0.5f, -0.5f);; testAtom4->SetAtomicNum(6);; OBBond *testBond = testMolH3.NewBond();; testBond->SetBO(1);; testBond->SetBegin(testAtom3);; testBond->SetEnd(testAtom4);; testAtom3->AddBond(testBond);; testAtom4->AddBond(testBond);; testMolH3.EndModify();; testMolH3.AddHydrogens();. However, if we add an EndModify() then AddHydrogens to the single atom then continue it works fine. OBMol testMolH3;; testMolH3.BeginModify();; OBAtom *testAtom3 = testMolH3.NewAtom();; testAtom3->SetVector(0.5f, 0.5f, 0.5f);; testAtom3->SetAtomicNum(6);. testMolH3.EndModify();; testMolH3.AddHydrogens();; testMolH3.BeginModify();. OBAtom *testAtom4 = testMolH3.NewAtom();; testAtom4->SetVector(-0.5f, -0.5f, -0.5f);; testAtom4->SetAtomicNum(6);; OBBond *testBond = testMolH3.NewBond();; testBond->SetBO(1);; testBond->SetBegin(testAtom3);; testBond->SetEnd(testAtom4);; testAtom3->AddBond(testBond);; testAtom4->AddBond(testBond);; testMolH3.EndModify();; testMolH3.AddHydrogens();. It would be useful if someone with experience with CorrectPH could help. I was able to trace part of the but down to where there is a Loop on the Apply function in file phmodel.cpp line 158. Also, if you disable PH correction the first code will still segfault in the mol.cpp file around line 1975 (somewhere in the loop where the adoms are created and conformer information setup). Original comment by: @milkypostman",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/607#issuecomment-281778125
https://github.com/openbabel/openbabel/issues/607#issuecomment-281778125:1280,Testability,test,testBond,1280,"Logged In: YES ; user_id=1500648; Originator: YES. This problem has bigger roots and can be replicated in a number of ways. However, this bit of code also causes a segfault. It _uses_ BeginModify and EndModify to add two atoms and create a bond between the two. OBMol testMolH3;; testMolH3.BeginModify();; OBAtom *testAtom3 = testMolH3.NewAtom();; testAtom3->SetVector(0.5f, 0.5f, 0.5f);; testAtom3->SetAtomicNum(6);; OBAtom *testAtom4 = testMolH3.NewAtom();; testAtom4->SetVector(-0.5f, -0.5f, -0.5f);; testAtom4->SetAtomicNum(6);; OBBond *testBond = testMolH3.NewBond();; testBond->SetBO(1);; testBond->SetBegin(testAtom3);; testBond->SetEnd(testAtom4);; testAtom3->AddBond(testBond);; testAtom4->AddBond(testBond);; testMolH3.EndModify();; testMolH3.AddHydrogens();. However, if we add an EndModify() then AddHydrogens to the single atom then continue it works fine. OBMol testMolH3;; testMolH3.BeginModify();; OBAtom *testAtom3 = testMolH3.NewAtom();; testAtom3->SetVector(0.5f, 0.5f, 0.5f);; testAtom3->SetAtomicNum(6);. testMolH3.EndModify();; testMolH3.AddHydrogens();; testMolH3.BeginModify();. OBAtom *testAtom4 = testMolH3.NewAtom();; testAtom4->SetVector(-0.5f, -0.5f, -0.5f);; testAtom4->SetAtomicNum(6);; OBBond *testBond = testMolH3.NewBond();; testBond->SetBO(1);; testBond->SetBegin(testAtom3);; testBond->SetEnd(testAtom4);; testAtom3->AddBond(testBond);; testAtom4->AddBond(testBond);; testMolH3.EndModify();; testMolH3.AddHydrogens();. It would be useful if someone with experience with CorrectPH could help. I was able to trace part of the but down to where there is a Loop on the Apply function in file phmodel.cpp line 158. Also, if you disable PH correction the first code will still segfault in the mol.cpp file around line 1975 (somewhere in the loop where the adoms are created and conformer information setup). Original comment by: @milkypostman",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/607#issuecomment-281778125
https://github.com/openbabel/openbabel/issues/607#issuecomment-281778125:1312,Testability,test,testBond,1312,"Logged In: YES ; user_id=1500648; Originator: YES. This problem has bigger roots and can be replicated in a number of ways. However, this bit of code also causes a segfault. It _uses_ BeginModify and EndModify to add two atoms and create a bond between the two. OBMol testMolH3;; testMolH3.BeginModify();; OBAtom *testAtom3 = testMolH3.NewAtom();; testAtom3->SetVector(0.5f, 0.5f, 0.5f);; testAtom3->SetAtomicNum(6);; OBAtom *testAtom4 = testMolH3.NewAtom();; testAtom4->SetVector(-0.5f, -0.5f, -0.5f);; testAtom4->SetAtomicNum(6);; OBBond *testBond = testMolH3.NewBond();; testBond->SetBO(1);; testBond->SetBegin(testAtom3);; testBond->SetEnd(testAtom4);; testAtom3->AddBond(testBond);; testAtom4->AddBond(testBond);; testMolH3.EndModify();; testMolH3.AddHydrogens();. However, if we add an EndModify() then AddHydrogens to the single atom then continue it works fine. OBMol testMolH3;; testMolH3.BeginModify();; OBAtom *testAtom3 = testMolH3.NewAtom();; testAtom3->SetVector(0.5f, 0.5f, 0.5f);; testAtom3->SetAtomicNum(6);. testMolH3.EndModify();; testMolH3.AddHydrogens();; testMolH3.BeginModify();. OBAtom *testAtom4 = testMolH3.NewAtom();; testAtom4->SetVector(-0.5f, -0.5f, -0.5f);; testAtom4->SetAtomicNum(6);; OBBond *testBond = testMolH3.NewBond();; testBond->SetBO(1);; testBond->SetBegin(testAtom3);; testBond->SetEnd(testAtom4);; testAtom3->AddBond(testBond);; testAtom4->AddBond(testBond);; testMolH3.EndModify();; testMolH3.AddHydrogens();. It would be useful if someone with experience with CorrectPH could help. I was able to trace part of the but down to where there is a Loop on the Apply function in file phmodel.cpp line 158. Also, if you disable PH correction the first code will still segfault in the mol.cpp file around line 1975 (somewhere in the loop where the adoms are created and conformer information setup). Original comment by: @milkypostman",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/607#issuecomment-281778125
https://github.com/openbabel/openbabel/issues/607#issuecomment-281778125:1361,Testability,test,testBond,1361,"Logged In: YES ; user_id=1500648; Originator: YES. This problem has bigger roots and can be replicated in a number of ways. However, this bit of code also causes a segfault. It _uses_ BeginModify and EndModify to add two atoms and create a bond between the two. OBMol testMolH3;; testMolH3.BeginModify();; OBAtom *testAtom3 = testMolH3.NewAtom();; testAtom3->SetVector(0.5f, 0.5f, 0.5f);; testAtom3->SetAtomicNum(6);; OBAtom *testAtom4 = testMolH3.NewAtom();; testAtom4->SetVector(-0.5f, -0.5f, -0.5f);; testAtom4->SetAtomicNum(6);; OBBond *testBond = testMolH3.NewBond();; testBond->SetBO(1);; testBond->SetBegin(testAtom3);; testBond->SetEnd(testAtom4);; testAtom3->AddBond(testBond);; testAtom4->AddBond(testBond);; testMolH3.EndModify();; testMolH3.AddHydrogens();. However, if we add an EndModify() then AddHydrogens to the single atom then continue it works fine. OBMol testMolH3;; testMolH3.BeginModify();; OBAtom *testAtom3 = testMolH3.NewAtom();; testAtom3->SetVector(0.5f, 0.5f, 0.5f);; testAtom3->SetAtomicNum(6);. testMolH3.EndModify();; testMolH3.AddHydrogens();; testMolH3.BeginModify();. OBAtom *testAtom4 = testMolH3.NewAtom();; testAtom4->SetVector(-0.5f, -0.5f, -0.5f);; testAtom4->SetAtomicNum(6);; OBBond *testBond = testMolH3.NewBond();; testBond->SetBO(1);; testBond->SetBegin(testAtom3);; testBond->SetEnd(testAtom4);; testAtom3->AddBond(testBond);; testAtom4->AddBond(testBond);; testMolH3.EndModify();; testMolH3.AddHydrogens();. It would be useful if someone with experience with CorrectPH could help. I was able to trace part of the but down to where there is a Loop on the Apply function in file phmodel.cpp line 158. Also, if you disable PH correction the first code will still segfault in the mol.cpp file around line 1975 (somewhere in the loop where the adoms are created and conformer information setup). Original comment by: @milkypostman",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/607#issuecomment-281778125
https://github.com/openbabel/openbabel/issues/607#issuecomment-281778125:1392,Testability,test,testBond,1392,"Logged In: YES ; user_id=1500648; Originator: YES. This problem has bigger roots and can be replicated in a number of ways. However, this bit of code also causes a segfault. It _uses_ BeginModify and EndModify to add two atoms and create a bond between the two. OBMol testMolH3;; testMolH3.BeginModify();; OBAtom *testAtom3 = testMolH3.NewAtom();; testAtom3->SetVector(0.5f, 0.5f, 0.5f);; testAtom3->SetAtomicNum(6);; OBAtom *testAtom4 = testMolH3.NewAtom();; testAtom4->SetVector(-0.5f, -0.5f, -0.5f);; testAtom4->SetAtomicNum(6);; OBBond *testBond = testMolH3.NewBond();; testBond->SetBO(1);; testBond->SetBegin(testAtom3);; testBond->SetEnd(testAtom4);; testAtom3->AddBond(testBond);; testAtom4->AddBond(testBond);; testMolH3.EndModify();; testMolH3.AddHydrogens();. However, if we add an EndModify() then AddHydrogens to the single atom then continue it works fine. OBMol testMolH3;; testMolH3.BeginModify();; OBAtom *testAtom3 = testMolH3.NewAtom();; testAtom3->SetVector(0.5f, 0.5f, 0.5f);; testAtom3->SetAtomicNum(6);. testMolH3.EndModify();; testMolH3.AddHydrogens();; testMolH3.BeginModify();. OBAtom *testAtom4 = testMolH3.NewAtom();; testAtom4->SetVector(-0.5f, -0.5f, -0.5f);; testAtom4->SetAtomicNum(6);; OBBond *testBond = testMolH3.NewBond();; testBond->SetBO(1);; testBond->SetBegin(testAtom3);; testBond->SetEnd(testAtom4);; testAtom3->AddBond(testBond);; testAtom4->AddBond(testBond);; testMolH3.EndModify();; testMolH3.AddHydrogens();. It would be useful if someone with experience with CorrectPH could help. I was able to trace part of the but down to where there is a Loop on the Apply function in file phmodel.cpp line 158. Also, if you disable PH correction the first code will still segfault in the mol.cpp file around line 1975 (somewhere in the loop where the adoms are created and conformer information setup). Original comment by: @milkypostman",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/607#issuecomment-281778125
https://github.com/openbabel/openbabel/issues/607#issuecomment-281778126:0,Testability,Log,Logged,0,Logged In: YES ; user_id=1500648; Originator: YES. The segfault appears to be caused by SetParent not being called when NewBond is called. The reason i conclude this is the problem is that it appears to work fine and also it's the one difference between NewBond and AddBond. Closing. Original comment by: @milkypostman,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/607#issuecomment-281778126
https://github.com/openbabel/openbabel/issues/608#issuecomment-281778128:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: YES. This should now be fixed, as of SVN revision 1787 and later. The bug was largely discovered during development and debugging of Avogadro. I'm marking this ""pending"" in case there's need to comment and re-open the bug. Otherwise it will close in 2 weeks as fixed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/608#issuecomment-281778128
https://github.com/openbabel/openbabel/issues/608#issuecomment-281778129:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539; Originator: NO. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/608#issuecomment-281778129
https://github.com/openbabel/openbabel/issues/609#issuecomment-281778177:126,Energy Efficiency,energy,energy,126,"Logged In: YES ; user_id=21420; Originator: YES. This has been fixed in the SVN trunk -- the new code checks to make sure the energy is converged below a certain threshold (e.g., 1e-6 as the default) and will not take any further steps. I'm marking this as ""pending"" any further comment (e.g., from Tim). If not, it will automatically close in 2 weeks as fixed. -Geoff . Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/609#issuecomment-281778177
https://github.com/openbabel/openbabel/issues/609#issuecomment-281778177:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: YES. This has been fixed in the SVN trunk -- the new code checks to make sure the energy is converged below a certain threshold (e.g., 1e-6 as the default) and will not take any further steps. I'm marking this as ""pending"" any further comment (e.g., from Tim). If not, it will automatically close in 2 weeks as fixed. -Geoff . Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/609#issuecomment-281778177
https://github.com/openbabel/openbabel/issues/609#issuecomment-281778179:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1500648; Originator: NO. I don't know how you guys are testing, but using both Avogadro and obmm, this ring of three carbons plus hydrogens is giving me a nan result. Not sure what causes this. I'm attaching the test file. ; File Added: threering.gpr. Original comment by: @milkypostman",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/609#issuecomment-281778179
https://github.com/openbabel/openbabel/issues/609#issuecomment-281778179:80,Testability,test,testing,80,"Logged In: YES ; user_id=1500648; Originator: NO. I don't know how you guys are testing, but using both Avogadro and obmm, this ring of three carbons plus hydrogens is giving me a nan result. Not sure what causes this. I'm attaching the test file. ; File Added: threering.gpr. Original comment by: @milkypostman",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/609#issuecomment-281778179
https://github.com/openbabel/openbabel/issues/609#issuecomment-281778179:237,Testability,test,test,237,"Logged In: YES ; user_id=1500648; Originator: NO. I don't know how you guys are testing, but using both Avogadro and obmm, this ring of three carbons plus hydrogens is giving me a nan result. Not sure what causes this. I'm attaching the test file. ; File Added: threering.gpr. Original comment by: @milkypostman",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/609#issuecomment-281778179
https://github.com/openbabel/openbabel/issues/609#issuecomment-281778180:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539; Originator: NO. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/609#issuecomment-281778180
https://github.com/openbabel/openbabel/issues/610#issuecomment-281778185:306,Availability,fault,fault,306,"Logged In: YES ; user_id=21420; Originator: NO. That's strange. I'm attaching the file (since it's easier than copy/paste from this window). The bug also occurs through babel -h. In other words, it's not simply an obmm program problem (nor should it be). It's the call to OBMol::AddHydrogens that seems at fault. It's also not caused by the GPR format or missed atom typing: import from XYZ format and adding hydrogens also fails. File Added: test.gpr. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/610#issuecomment-281778185
https://github.com/openbabel/openbabel/issues/610#issuecomment-281778185:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. That's strange. I'm attaching the file (since it's easier than copy/paste from this window). The bug also occurs through babel -h. In other words, it's not simply an obmm program problem (nor should it be). It's the call to OBMol::AddHydrogens that seems at fault. It's also not caused by the GPR format or missed atom typing: import from XYZ format and adding hydrogens also fails. File Added: test.gpr. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/610#issuecomment-281778185
https://github.com/openbabel/openbabel/issues/610#issuecomment-281778185:443,Testability,test,test,443,"Logged In: YES ; user_id=21420; Originator: NO. That's strange. I'm attaching the file (since it's easier than copy/paste from this window). The bug also occurs through babel -h. In other words, it's not simply an obmm program problem (nor should it be). It's the call to OBMol::AddHydrogens that seems at fault. It's also not caused by the GPR format or missed atom typing: import from XYZ format and adding hydrogens also fails. File Added: test.gpr. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/610#issuecomment-281778185
https://github.com/openbabel/openbabel/issues/610#issuecomment-281778185:204,Usability,simpl,simply,204,"Logged In: YES ; user_id=21420; Originator: NO. That's strange. I'm attaching the file (since it's easier than copy/paste from this window). The bug also occurs through babel -h. In other words, it's not simply an obmm program problem (nor should it be). It's the call to OBMol::AddHydrogens that seems at fault. It's also not caused by the GPR format or missed atom typing: import from XYZ format and adding hydrogens also fails. File Added: test.gpr. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/610#issuecomment-281778185
https://github.com/openbabel/openbabel/issues/610#issuecomment-281778186:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1500648; Originator: YES. Ok, so it is obvious from the code; there is a check to see if the molecule has any bonds. ie. if the molecule doesn't have any bonds it doesn't finish (just returns). namely line 1906:. if(NumBonds()==0 && NumAtoms()!=1); {; obErrorLog.ThrowError(__FUNCTION__, ; ""Did not run OpenBabel::AddHydrogens on molecule with no bonds"", obAuditMsg);; return true;; }. Is there any reason this needs to be there?. Original comment by: @milkypostman",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/610#issuecomment-281778186
https://github.com/openbabel/openbabel/issues/610#issuecomment-281778187:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. Judging from the mailing list and the current SVN trunk code, this has been fixed. I'm marking this ""pending"" further comment, otherwise it will close in 2 weeks as fixed.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/610#issuecomment-281778187
https://github.com/openbabel/openbabel/issues/610#issuecomment-281778188:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539; Originator: NO. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/610#issuecomment-281778188
https://github.com/openbabel/openbabel/issues/611#issuecomment-281778192:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: YES. Fixed, as of revision 1807. This includes some code to correct for a variety of mis-typed Sybyl atom types, particularly from the MMFF94 file. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/611#issuecomment-281778192
https://github.com/openbabel/openbabel/issues/612#issuecomment-281778203:26,Testability,Test,Test,26,OBForceFieldGhemical Unit Test. Original comment by: @milkypostman,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/612#issuecomment-281778203
https://github.com/openbabel/openbabel/issues/612#issuecomment-281778205:0,Testability,Log,Logged,0,"Logged In: NO . The same segfault occurs here. The same problem occured for torsions. The problem is that the atoms and bonds are changed, but the AngleData and TorsionData is not.; To fix this I added. DeleteData(OBGenericDataType::AngleData);; DeleteData(OBGenericDataType::TorsionData);. to the end of OBMol::operator=. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/612#issuecomment-281778205
https://github.com/openbabel/openbabel/issues/612#issuecomment-281778206:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1500648; Originator: YES. Well, the true fix would be to not even bother copying that data when the operator= occurs (like in the loop, test for it and then don't copy that part of it). The other problem i'm afraid of is that this angle data does not get rebuilt when a new atom is added. Original comment by: @milkypostman",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/612#issuecomment-281778206
https://github.com/openbabel/openbabel/issues/612#issuecomment-281778206:161,Testability,test,test,161,"Logged In: YES ; user_id=1500648; Originator: YES. Well, the true fix would be to not even bother copying that data when the operator= occurs (like in the loop, test for it and then don't copy that part of it). The other problem i'm afraid of is that this angle data does not get rebuilt when a new atom is added. Original comment by: @milkypostman",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/612#issuecomment-281778206
https://github.com/openbabel/openbabel/issues/612#issuecomment-281778209:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1500648; Originator: YES. Marking as ""Pending"". I believe the fix we have is sufficient and makes sense. Original comment by: @milkypostman",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/612#issuecomment-281778209
https://github.com/openbabel/openbabel/issues/612#issuecomment-281778211:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539; Originator: NO. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/612#issuecomment-281778211
https://github.com/openbabel/openbabel/issues/613#issuecomment-281778221:0,Testability,Log,Logged,0,Logged In: YES ; user_id=1682851; Originator: YES. ignore this please.. (can I delete this?). Original comment by: @timvdm,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/613#issuecomment-281778221
https://github.com/openbabel/openbabel/issues/613#issuecomment-281778223:338,Performance,perform,perform,338,"Logged In: YES ; user_id=21420; Originator: NO. This won't be fixed. These methods simply create pointers -- they're convenience functions. If you want more bookkeeping done, use NewAtom() or NewBond() or NewResidue() instead. I'm updating the documentation accordingly and perhaps we should deprecated these methods. But they should not perform anything additional. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/613#issuecomment-281778223
https://github.com/openbabel/openbabel/issues/613#issuecomment-281778223:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. This won't be fixed. These methods simply create pointers -- they're convenience functions. If you want more bookkeeping done, use NewAtom() or NewBond() or NewResidue() instead. I'm updating the documentation accordingly and perhaps we should deprecated these methods. But they should not perform anything additional. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/613#issuecomment-281778223
https://github.com/openbabel/openbabel/issues/613#issuecomment-281778223:83,Usability,simpl,simply,83,"Logged In: YES ; user_id=21420; Originator: NO. This won't be fixed. These methods simply create pointers -- they're convenience functions. If you want more bookkeeping done, use NewAtom() or NewBond() or NewResidue() instead. I'm updating the documentation accordingly and perhaps we should deprecated these methods. But they should not perform anything additional. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/613#issuecomment-281778223
https://github.com/openbabel/openbabel/issues/614#issuecomment-281778236:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. I'm marking this closed, as it duplicates the next example. I'll make more comments there. Open Babel does not support the disconnected SMARTS form:; http://openbabel.sourceforge.net/wiki/SMARTS. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/614#issuecomment-281778236
https://github.com/openbabel/openbabel/issues/615#issuecomment-281778253:281,Integrability,interface,interface,281,"Logged In: YES ; user_id=21420; Originator: NO. No, SMARTS queries do not support the disconnected '.' operator:; http://openbabel.sourceforge.net/wiki/SMARTS. However, ""went strange and hang Babel"" is clearly a problem. What exactly do you mean by that? Are you using the Windows interface? Can you be a bit more descriptive in terms of what you did (i.e., how big was the file you were using, etc.) and what happened?. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/615#issuecomment-281778253
https://github.com/openbabel/openbabel/issues/615#issuecomment-281778253:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. No, SMARTS queries do not support the disconnected '.' operator:; http://openbabel.sourceforge.net/wiki/SMARTS. However, ""went strange and hang Babel"" is clearly a problem. What exactly do you mean by that? Are you using the Windows interface? Can you be a bit more descriptive in terms of what you did (i.e., how big was the file you were using, etc.) and what happened?. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/615#issuecomment-281778253
https://github.com/openbabel/openbabel/issues/615#issuecomment-281778253:202,Usability,clear,clearly,202,"Logged In: YES ; user_id=21420; Originator: NO. No, SMARTS queries do not support the disconnected '.' operator:; http://openbabel.sourceforge.net/wiki/SMARTS. However, ""went strange and hang Babel"" is clearly a problem. What exactly do you mean by that? Are you using the Windows interface? Can you be a bit more descriptive in terms of what you did (i.e., how big was the file you were using, etc.) and what happened?. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/615#issuecomment-281778253
https://github.com/openbabel/openbabel/issues/615#issuecomment-281778255:0,Testability,Log,Logged,0,"Logged In: NO . Using OpenBabelGUI under Windows XP. In the box underneath the text ""Output below"" (where it normally says the number of molecules converted) - lots of text flashed in this box and then it stopped but left part of the SMARTS string in this box. Then the screen went white, and could only close by opening task manager, and using End now (about three times as OpenBabel wasn't responding) The input file was huge 168meg.; Thanks for your quick response,; Mandy. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/615#issuecomment-281778255
https://github.com/openbabel/openbabel/issues/615#issuecomment-281778256:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. Have you tried this with smaller input files (e.g., a few megs)?; Have you tried converting the huge file without SMARTS filtering?. I believe your issue is less with the Open Babel GUI and more that you're trying to deal with a huge amount of data. (For example, you may not have enough memory to deal with this.). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/615#issuecomment-281778256
https://github.com/openbabel/openbabel/issues/615#issuecomment-281778257:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615; Originator: NO. The hanging when large amounts of output are sent only to the GUI window has been reported as bug 1596906, and has not yet been corrected. It may work if you specify an output file. Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/615#issuecomment-281778257
https://github.com/openbabel/openbabel/issues/615#issuecomment-281778259:167,Deployability,release,release,167,"Logged In: YES ; user_id=21420; Originator: NO. Based on Chris's response, this seems like a duplicate of bug report 1596906, which should be corrected before the 2.1 release. I'm going to mark this one closed as a duplicate.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/615#issuecomment-281778259
https://github.com/openbabel/openbabel/issues/615#issuecomment-281778259:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. Based on Chris's response, this seems like a duplicate of bug report 1596906, which should be corrected before the 2.1 release. I'm going to mark this one closed as a duplicate.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/615#issuecomment-281778259
https://github.com/openbabel/openbabel/issues/616#issuecomment-281778271:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. Can you attach the PDB file? It can be gzip encoded to save space if you like. But without the exact file, it's impossible to know if/where there's a bug in the code. We obviously run many, many PDB files through to prevent crashes, etc. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/616#issuecomment-281778271
https://github.com/openbabel/openbabel/issues/616#issuecomment-281778272:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. Without the original file, this is absolutely impossible to debug. I'm marking this ""pending"" further comment from the original submitter. If none is made in the next 2 weeks, this issue will close. (There's already been over a week since the original submission and my reply.). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/616#issuecomment-281778272
https://github.com/openbabel/openbabel/issues/616#issuecomment-281778273:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539; Originator: NO. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/616#issuecomment-281778273
https://github.com/openbabel/openbabel/issues/617#issuecomment-281778304:318,Availability,error,error,318,"Logged In: YES ; user_id=21420; Originator: NO. There were some issues with the Sybyl atom type ""Lp"" which have been resolved in SVN (revision 1824 or later). I don't know if this is your problem. Certainly if I run the uncompressed file through Babel, I get 85 molecules converted. So I'd wonder if it's some sort of error in pybel?. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/617#issuecomment-281778304
https://github.com/openbabel/openbabel/issues/617#issuecomment-281778304:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. There were some issues with the Sybyl atom type ""Lp"" which have been resolved in SVN (revision 1824 or later). I don't know if this is your problem. Certainly if I run the uncompressed file through Babel, I get 85 molecules converted. So I'd wonder if it's some sort of error in pybel?. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/617#issuecomment-281778304
https://github.com/openbabel/openbabel/issues/617#issuecomment-281778305:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. This appears to work now. I tried running the code and ""print len(mols)"" gave 85. I'm marking this closed. If you still seem to have problems with Pybel, let's create a new bug. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/617#issuecomment-281778305
https://github.com/openbabel/openbabel/issues/1480#issuecomment-281810665:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: YES. Interesting. Further debugging implies that this is a problem with Mol2 and XML formats. SDF, PDB, XYZ... these formats work correctly. So perhaps it's an issue with seekg(). Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1480#issuecomment-281810665
https://github.com/openbabel/openbabel/issues/1480#issuecomment-281810666:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: YES. This is, in fact, an issue with seekg. The zipstream code doesn't properly handle seekg -- the bug also exists in 2.0.x. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1480#issuecomment-281810666
https://github.com/openbabel/openbabel/issues/618#issuecomment-281778311:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. This should be fixed in the SVN trunk, revision 1891. I'm marking this closed.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/618#issuecomment-281778311
https://github.com/openbabel/openbabel/issues/619#issuecomment-281778326:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420; Originator: YES. File Added: 9.pdb. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778326
https://github.com/openbabel/openbabel/issues/619#issuecomment-281778327:11,Performance,optimiz,optimization,11,"""Exploded"" optimization after 46 steps. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778327
https://github.com/openbabel/openbabel/issues/619#issuecomment-281778328:135,Performance,load,loading,135,"Logged In: YES ; user_id=1682851; Originator: NO. Both sd and cg correctly minimize 9.gpr here... 9.pdb: ; some bonds are missing when loading this in avogadro, are you using the current SVN version for all files (bond.cpp, ...)?; missing bonds doesn't explain the large bond lengths though. Could you provide some additional information so I can try to reproduce this. (obminimize, sd/cg, ...). Tim. Original comment by: @timvdm",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778328
https://github.com/openbabel/openbabel/issues/619#issuecomment-281778328:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1682851; Originator: NO. Both sd and cg correctly minimize 9.gpr here... 9.pdb: ; some bonds are missing when loading this in avogadro, are you using the current SVN version for all files (bond.cpp, ...)?; missing bonds doesn't explain the large bond lengths though. Could you provide some additional information so I can try to reproduce this. (obminimize, sd/cg, ...). Tim. Original comment by: @timvdm",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778328
https://github.com/openbabel/openbabel/issues/619#issuecomment-281778330:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: YES. I'm not concerned with ""correctly minimizing."" I'm looking at the strange behavior between step 45 and 46. It seems to pick up OK after that point. Yes, I'm using the current SVN and default options to obminimize:. tools/obminimize 9.gpr; tools/obminimize -n 47 9.gpr. In step 46, the g1g1 of atom 9 is small (0.025), so g2g1 explodes to 13.5, while everything else is around 1 or less. I'm wondering if we need a trust radius on the line search -- i.e., never make such a huge step like that. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778330
https://github.com/openbabel/openbabel/issues/619#issuecomment-281778332:239,Energy Efficiency,energy,energy,239,"Logged In: YES ; user_id=1682851; Originator: NO. It doesn't explode here... see attached log file. the size of g1g1 shouldn't be a problem since the vector is later normalized in LineSearch(). LineSearch only accepts steps that lower the energy, so I don't realy see how the explosion can happen. Tim; File Added: log. Original comment by: @timvdm",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778332
https://github.com/openbabel/openbabel/issues/619#issuecomment-281778332:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1682851; Originator: NO. It doesn't explode here... see attached log file. the size of g1g1 shouldn't be a problem since the vector is later normalized in LineSearch(). LineSearch only accepts steps that lower the energy, so I don't realy see how the explosion can happen. Tim; File Added: log. Original comment by: @timvdm",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778332
https://github.com/openbabel/openbabel/issues/619#issuecomment-281778332:90,Testability,log,log,90,"Logged In: YES ; user_id=1682851; Originator: NO. It doesn't explode here... see attached log file. the size of g1g1 shouldn't be a problem since the vector is later normalized in LineSearch(). LineSearch only accepts steps that lower the energy, so I don't realy see how the explosion can happen. Tim; File Added: log. Original comment by: @timvdm",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778332
https://github.com/openbabel/openbabel/issues/619#issuecomment-281778332:315,Testability,log,log,315,"Logged In: YES ; user_id=1682851; Originator: NO. It doesn't explode here... see attached log file. the size of g1g1 shouldn't be a problem since the vector is later normalized in LineSearch(). LineSearch only accepts steps that lower the energy, so I don't realy see how the explosion can happen. Tim; File Added: log. Original comment by: @timvdm",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778332
https://github.com/openbabel/openbabel/issues/619#issuecomment-281778334:6,Testability,log,log,6,Buggy log. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778334
https://github.com/openbabel/openbabel/issues/619#issuecomment-281778337:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: YES. I'm attaching the log here. Everything looks OK up until around step 45. Then grad2 and g2g2 blows up. (Sorry, I was wrong about the cause -- your log made me more paranoid.). So I'm left with a few possible situations:; * Your version isn't the same as SVN (e.g., you still haven't committed test/logp_psa.cpp) Not a big deal.; * We have some subtle floating-point issue between OS X and Linux? Yuck.; * Some unknown force is causing the gradient to explode on my machine. I'm certainly confused.; File Added: log2.txt. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778337
https://github.com/openbabel/openbabel/issues/619#issuecomment-281778337:67,Testability,log,log,67,"Logged In: YES ; user_id=21420; Originator: YES. I'm attaching the log here. Everything looks OK up until around step 45. Then grad2 and g2g2 blows up. (Sorry, I was wrong about the cause -- your log made me more paranoid.). So I'm left with a few possible situations:; * Your version isn't the same as SVN (e.g., you still haven't committed test/logp_psa.cpp) Not a big deal.; * We have some subtle floating-point issue between OS X and Linux? Yuck.; * Some unknown force is causing the gradient to explode on my machine. I'm certainly confused.; File Added: log2.txt. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778337
https://github.com/openbabel/openbabel/issues/619#issuecomment-281778337:196,Testability,log,log,196,"Logged In: YES ; user_id=21420; Originator: YES. I'm attaching the log here. Everything looks OK up until around step 45. Then grad2 and g2g2 blows up. (Sorry, I was wrong about the cause -- your log made me more paranoid.). So I'm left with a few possible situations:; * Your version isn't the same as SVN (e.g., you still haven't committed test/logp_psa.cpp) Not a big deal.; * We have some subtle floating-point issue between OS X and Linux? Yuck.; * Some unknown force is causing the gradient to explode on my machine. I'm certainly confused.; File Added: log2.txt. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778337
https://github.com/openbabel/openbabel/issues/619#issuecomment-281778337:342,Testability,test,test,342,"Logged In: YES ; user_id=21420; Originator: YES. I'm attaching the log here. Everything looks OK up until around step 45. Then grad2 and g2g2 blows up. (Sorry, I was wrong about the cause -- your log made me more paranoid.). So I'm left with a few possible situations:; * Your version isn't the same as SVN (e.g., you still haven't committed test/logp_psa.cpp) Not a big deal.; * We have some subtle floating-point issue between OS X and Linux? Yuck.; * Some unknown force is causing the gradient to explode on my machine. I'm certainly confused.; File Added: log2.txt. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778337
https://github.com/openbabel/openbabel/issues/619#issuecomment-281778338:465,Deployability,patch,patch,465,"Logged In: YES ; user_id=1682851; Originator: NO. * Your version isn't the same as SVN (e.g., you still haven't committed test/logp_psa.cpp) Not a big deal. To be sure I used a different check-out than my working copy. So this can't be the problem (will commit test/logp_psa.cpp next time). * We have some subtle floating-point issue between OS X and Linux? Yuck.; * Some unknown force is causing the gradient to explode on my machine. Could you apply the attached patch and post the output? (my output is also attached); File Added: log.patch. Original comment by: @timvdm",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778338
https://github.com/openbabel/openbabel/issues/619#issuecomment-281778338:538,Deployability,patch,patch,538,"Logged In: YES ; user_id=1682851; Originator: NO. * Your version isn't the same as SVN (e.g., you still haven't committed test/logp_psa.cpp) Not a big deal. To be sure I used a different check-out than my working copy. So this can't be the problem (will commit test/logp_psa.cpp next time). * We have some subtle floating-point issue between OS X and Linux? Yuck.; * Some unknown force is causing the gradient to explode on my machine. Could you apply the attached patch and post the output? (my output is also attached); File Added: log.patch. Original comment by: @timvdm",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778338
https://github.com/openbabel/openbabel/issues/619#issuecomment-281778338:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1682851; Originator: NO. * Your version isn't the same as SVN (e.g., you still haven't committed test/logp_psa.cpp) Not a big deal. To be sure I used a different check-out than my working copy. So this can't be the problem (will commit test/logp_psa.cpp next time). * We have some subtle floating-point issue between OS X and Linux? Yuck.; * Some unknown force is causing the gradient to explode on my machine. Could you apply the attached patch and post the output? (my output is also attached); File Added: log.patch. Original comment by: @timvdm",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778338
https://github.com/openbabel/openbabel/issues/619#issuecomment-281778338:122,Testability,test,test,122,"Logged In: YES ; user_id=1682851; Originator: NO. * Your version isn't the same as SVN (e.g., you still haven't committed test/logp_psa.cpp) Not a big deal. To be sure I used a different check-out than my working copy. So this can't be the problem (will commit test/logp_psa.cpp next time). * We have some subtle floating-point issue between OS X and Linux? Yuck.; * Some unknown force is causing the gradient to explode on my machine. Could you apply the attached patch and post the output? (my output is also attached); File Added: log.patch. Original comment by: @timvdm",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778338
https://github.com/openbabel/openbabel/issues/619#issuecomment-281778338:261,Testability,test,test,261,"Logged In: YES ; user_id=1682851; Originator: NO. * Your version isn't the same as SVN (e.g., you still haven't committed test/logp_psa.cpp) Not a big deal. To be sure I used a different check-out than my working copy. So this can't be the problem (will commit test/logp_psa.cpp next time). * We have some subtle floating-point issue between OS X and Linux? Yuck.; * Some unknown force is causing the gradient to explode on my machine. Could you apply the attached patch and post the output? (my output is also attached); File Added: log.patch. Original comment by: @timvdm",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778338
https://github.com/openbabel/openbabel/issues/619#issuecomment-281778338:534,Testability,log,log,534,"Logged In: YES ; user_id=1682851; Originator: NO. * Your version isn't the same as SVN (e.g., you still haven't committed test/logp_psa.cpp) Not a big deal. To be sure I used a different check-out than my working copy. So this can't be the problem (will commit test/logp_psa.cpp next time). * We have some subtle floating-point issue between OS X and Linux? Yuck.; * Some unknown force is causing the gradient to explode on my machine. Could you apply the attached patch and post the output? (my output is also attached); File Added: log.patch. Original comment by: @timvdm",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778338
https://github.com/openbabel/openbabel/issues/619#issuecomment-281778343:0,Testability,Log,Logged,0,Logged In: YES ; user_id=1682851; Originator: NO. File Added: log.txt. Original comment by: @timvdm,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778343
https://github.com/openbabel/openbabel/issues/619#issuecomment-281778343:62,Testability,log,log,62,Logged In: YES ; user_id=1682851; Originator: NO. File Added: log.txt. Original comment by: @timvdm,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778343
https://github.com/openbabel/openbabel/issues/619#issuecomment-281778346:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420; Originator: YES. File Added: log2.txt. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778346
https://github.com/openbabel/openbabel/issues/619#issuecomment-281778347:166,Energy Efficiency,energy,energy,166,Logged In: YES ; user_id=1682851; Originator: NO. LineSearch seems to return large steps. I don't really see how this could happen since it only steps that lower the energy... Could the x.xf notation cause problems?. Original comment by: @timvdm,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778347
https://github.com/openbabel/openbabel/issues/619#issuecomment-281778347:0,Testability,Log,Logged,0,Logged In: YES ; user_id=1682851; Originator: NO. LineSearch seems to return large steps. I don't really see how this could happen since it only steps that lower the energy... Could the x.xf notation cause problems?. Original comment by: @timvdm,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778347
https://github.com/openbabel/openbabel/issues/619#issuecomment-281778349:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420; Originator: YES. Perfect! Thanks for the suggestion. Revision 1868 seems to fix everything. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778349
https://github.com/openbabel/openbabel/issues/620#issuecomment-281778367:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: YES. The code isn't pretty, but it does copy OBChiralData now. (I'd try a subroutine to clean things up, but it would need to be passed a lot of parameters. Unfortunately from OBGenericData, it's impossible to get a 'parent.'). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/620#issuecomment-281778367
https://github.com/openbabel/openbabel/issues/621#issuecomment-281778380:146,Performance,perform,performance,146,"Logged In: YES ; user_id=21420; Originator: NO. This is a duplicate of bug #1663779. I can confirm that it does eventually complete. But yes, the performance when translating XYZ (or other types without bonds) and doing bond order perception can be very slow. (By the way, you can use -as to only get single bonds. This will be much faster and still give you some bonding information. In this particular case, it's mostly a diamondoid carbon cluster, so there aren't any C-C multiple bonds.). I'm marking this ""pending"" further comments, but since it's a duplicate, I'd prefer to see comments on bug #1663779 instead. This is not likely to be fixed in time for 2.1 -- the code needs some improvement in handling such huge ring systems in carbon lattices. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/621#issuecomment-281778380
https://github.com/openbabel/openbabel/issues/621#issuecomment-281778380:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. This is a duplicate of bug #1663779. I can confirm that it does eventually complete. But yes, the performance when translating XYZ (or other types without bonds) and doing bond order perception can be very slow. (By the way, you can use -as to only get single bonds. This will be much faster and still give you some bonding information. In this particular case, it's mostly a diamondoid carbon cluster, so there aren't any C-C multiple bonds.). I'm marking this ""pending"" further comments, but since it's a duplicate, I'd prefer to see comments on bug #1663779 instead. This is not likely to be fixed in time for 2.1 -- the code needs some improvement in handling such huge ring systems in carbon lattices. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/621#issuecomment-281778380
https://github.com/openbabel/openbabel/issues/621#issuecomment-281778381:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539; Originator: NO. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/621#issuecomment-281778381
https://github.com/openbabel/openbabel/issues/622#issuecomment-281778401:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. In cases like this, it's extremely helpful to have an example file. However, my guess is that you're using MOPAC 2007? If so, I suggest trying the recent 2.1 beta snapshot (2.1.0b7) which contains a fix for this:; http://sourceforge.net/project/showfiles.php?group_id=40728&package_id=154019&release_id=494609. If you're not using MOPAC 2007, please add an example file to this bug report so we can debug more completely?. Thanks very much!; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778401
https://github.com/openbabel/openbabel/issues/622#issuecomment-281778404:160,Availability,down,downloaded,160,"Logged In: YES ; user_id=1548691; Originator: YES. Hi Geoff,. Yes, you're right, I'm using MOPAC2007. Sorry, I should have attached an example input anyway.; I downloaded/compiled the beta version you mention. The good thing is that it does the conversion. The bad ones are:; 1) I get this message:. 23 audit log messages; (the number depends on the output format). 2) It doesn't matter how I run babel I get a ""Segmentation fault"" at the end. Since the conversion is done this is not really a problem, just that it's not very elegant ;-). Another question, but perhaps I should submit a feature request is that I had hoped that partial charges would be imported, at least to MOL format... Is there a way of doing it?. Thank you very much for your help!. Miguel. Original comment by: molatwork",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778404
https://github.com/openbabel/openbabel/issues/622#issuecomment-281778404:425,Availability,fault,fault,425,"Logged In: YES ; user_id=1548691; Originator: YES. Hi Geoff,. Yes, you're right, I'm using MOPAC2007. Sorry, I should have attached an example input anyway.; I downloaded/compiled the beta version you mention. The good thing is that it does the conversion. The bad ones are:; 1) I get this message:. 23 audit log messages; (the number depends on the output format). 2) It doesn't matter how I run babel I get a ""Segmentation fault"" at the end. Since the conversion is done this is not really a problem, just that it's not very elegant ;-). Another question, but perhaps I should submit a feature request is that I had hoped that partial charges would be imported, at least to MOL format... Is there a way of doing it?. Thank you very much for your help!. Miguel. Original comment by: molatwork",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778404
https://github.com/openbabel/openbabel/issues/622#issuecomment-281778404:637,Energy Efficiency,charge,charges,637,"Logged In: YES ; user_id=1548691; Originator: YES. Hi Geoff,. Yes, you're right, I'm using MOPAC2007. Sorry, I should have attached an example input anyway.; I downloaded/compiled the beta version you mention. The good thing is that it does the conversion. The bad ones are:; 1) I get this message:. 23 audit log messages; (the number depends on the output format). 2) It doesn't matter how I run babel I get a ""Segmentation fault"" at the end. Since the conversion is done this is not really a problem, just that it's not very elegant ;-). Another question, but perhaps I should submit a feature request is that I had hoped that partial charges would be imported, at least to MOL format... Is there a way of doing it?. Thank you very much for your help!. Miguel. Original comment by: molatwork",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778404
https://github.com/openbabel/openbabel/issues/622#issuecomment-281778404:290,Integrability,message,message,290,"Logged In: YES ; user_id=1548691; Originator: YES. Hi Geoff,. Yes, you're right, I'm using MOPAC2007. Sorry, I should have attached an example input anyway.; I downloaded/compiled the beta version you mention. The good thing is that it does the conversion. The bad ones are:; 1) I get this message:. 23 audit log messages; (the number depends on the output format). 2) It doesn't matter how I run babel I get a ""Segmentation fault"" at the end. Since the conversion is done this is not really a problem, just that it's not very elegant ;-). Another question, but perhaps I should submit a feature request is that I had hoped that partial charges would be imported, at least to MOL format... Is there a way of doing it?. Thank you very much for your help!. Miguel. Original comment by: molatwork",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778404
https://github.com/openbabel/openbabel/issues/622#issuecomment-281778404:313,Integrability,message,messages,313,"Logged In: YES ; user_id=1548691; Originator: YES. Hi Geoff,. Yes, you're right, I'm using MOPAC2007. Sorry, I should have attached an example input anyway.; I downloaded/compiled the beta version you mention. The good thing is that it does the conversion. The bad ones are:; 1) I get this message:. 23 audit log messages; (the number depends on the output format). 2) It doesn't matter how I run babel I get a ""Segmentation fault"" at the end. Since the conversion is done this is not really a problem, just that it's not very elegant ;-). Another question, but perhaps I should submit a feature request is that I had hoped that partial charges would be imported, at least to MOL format... Is there a way of doing it?. Thank you very much for your help!. Miguel. Original comment by: molatwork",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778404
https://github.com/openbabel/openbabel/issues/622#issuecomment-281778404:335,Integrability,depend,depends,335,"Logged In: YES ; user_id=1548691; Originator: YES. Hi Geoff,. Yes, you're right, I'm using MOPAC2007. Sorry, I should have attached an example input anyway.; I downloaded/compiled the beta version you mention. The good thing is that it does the conversion. The bad ones are:; 1) I get this message:. 23 audit log messages; (the number depends on the output format). 2) It doesn't matter how I run babel I get a ""Segmentation fault"" at the end. Since the conversion is done this is not really a problem, just that it's not very elegant ;-). Another question, but perhaps I should submit a feature request is that I had hoped that partial charges would be imported, at least to MOL format... Is there a way of doing it?. Thank you very much for your help!. Miguel. Original comment by: molatwork",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778404
https://github.com/openbabel/openbabel/issues/622#issuecomment-281778404:303,Security,audit,audit,303,"Logged In: YES ; user_id=1548691; Originator: YES. Hi Geoff,. Yes, you're right, I'm using MOPAC2007. Sorry, I should have attached an example input anyway.; I downloaded/compiled the beta version you mention. The good thing is that it does the conversion. The bad ones are:; 1) I get this message:. 23 audit log messages; (the number depends on the output format). 2) It doesn't matter how I run babel I get a ""Segmentation fault"" at the end. Since the conversion is done this is not really a problem, just that it's not very elegant ;-). Another question, but perhaps I should submit a feature request is that I had hoped that partial charges would be imported, at least to MOL format... Is there a way of doing it?. Thank you very much for your help!. Miguel. Original comment by: molatwork",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778404
https://github.com/openbabel/openbabel/issues/622#issuecomment-281778404:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1548691; Originator: YES. Hi Geoff,. Yes, you're right, I'm using MOPAC2007. Sorry, I should have attached an example input anyway.; I downloaded/compiled the beta version you mention. The good thing is that it does the conversion. The bad ones are:; 1) I get this message:. 23 audit log messages; (the number depends on the output format). 2) It doesn't matter how I run babel I get a ""Segmentation fault"" at the end. Since the conversion is done this is not really a problem, just that it's not very elegant ;-). Another question, but perhaps I should submit a feature request is that I had hoped that partial charges would be imported, at least to MOL format... Is there a way of doing it?. Thank you very much for your help!. Miguel. Original comment by: molatwork",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778404
https://github.com/openbabel/openbabel/issues/622#issuecomment-281778404:309,Testability,log,log,309,"Logged In: YES ; user_id=1548691; Originator: YES. Hi Geoff,. Yes, you're right, I'm using MOPAC2007. Sorry, I should have attached an example input anyway.; I downloaded/compiled the beta version you mention. The good thing is that it does the conversion. The bad ones are:; 1) I get this message:. 23 audit log messages; (the number depends on the output format). 2) It doesn't matter how I run babel I get a ""Segmentation fault"" at the end. Since the conversion is done this is not really a problem, just that it's not very elegant ;-). Another question, but perhaps I should submit a feature request is that I had hoped that partial charges would be imported, at least to MOL format... Is there a way of doing it?. Thank you very much for your help!. Miguel. Original comment by: molatwork",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778404
https://github.com/openbabel/openbabel/issues/622#issuecomment-281778405:150,Availability,error,errors,150,"Logged In: YES ; user_id=21420; Originator: NO. The ""audit log"" comments are more informative. The 2.1 version gives a quick summary of any warnings, errors, debugging information, etc. This way you can see if there were potential problems during conversion (or ignore if you like). The audit log keeps track of possible chemical transformations during conversion (e.g., creating bonds from a MOPAC file). The segmentation fault is fixed in the current SVN trunk. I'd be glad to give you an updated version or patch if you like. Obviously it should be fixed in 2.1.0 final release, which should come out in a week or three. The partial charges for MOPAC should be parsed correctly. But regular .mol files don't have partial charges as far as I know, so they aren't output. On the other hand, .mol2 files do, so you should seem them there. If not, please file another bug, or e-mail the mailing list. I'm going to mark this one closed as being fixed -- we've solved MOPAC 2007 crashing problems.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778405
https://github.com/openbabel/openbabel/issues/622#issuecomment-281778405:423,Availability,fault,fault,423,"Logged In: YES ; user_id=21420; Originator: NO. The ""audit log"" comments are more informative. The 2.1 version gives a quick summary of any warnings, errors, debugging information, etc. This way you can see if there were potential problems during conversion (or ignore if you like). The audit log keeps track of possible chemical transformations during conversion (e.g., creating bonds from a MOPAC file). The segmentation fault is fixed in the current SVN trunk. I'd be glad to give you an updated version or patch if you like. Obviously it should be fixed in 2.1.0 final release, which should come out in a week or three. The partial charges for MOPAC should be parsed correctly. But regular .mol files don't have partial charges as far as I know, so they aren't output. On the other hand, .mol2 files do, so you should seem them there. If not, please file another bug, or e-mail the mailing list. I'm going to mark this one closed as being fixed -- we've solved MOPAC 2007 crashing problems.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778405
https://github.com/openbabel/openbabel/issues/622#issuecomment-281778405:491,Deployability,update,updated,491,"Logged In: YES ; user_id=21420; Originator: NO. The ""audit log"" comments are more informative. The 2.1 version gives a quick summary of any warnings, errors, debugging information, etc. This way you can see if there were potential problems during conversion (or ignore if you like). The audit log keeps track of possible chemical transformations during conversion (e.g., creating bonds from a MOPAC file). The segmentation fault is fixed in the current SVN trunk. I'd be glad to give you an updated version or patch if you like. Obviously it should be fixed in 2.1.0 final release, which should come out in a week or three. The partial charges for MOPAC should be parsed correctly. But regular .mol files don't have partial charges as far as I know, so they aren't output. On the other hand, .mol2 files do, so you should seem them there. If not, please file another bug, or e-mail the mailing list. I'm going to mark this one closed as being fixed -- we've solved MOPAC 2007 crashing problems.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778405
https://github.com/openbabel/openbabel/issues/622#issuecomment-281778405:510,Deployability,patch,patch,510,"Logged In: YES ; user_id=21420; Originator: NO. The ""audit log"" comments are more informative. The 2.1 version gives a quick summary of any warnings, errors, debugging information, etc. This way you can see if there were potential problems during conversion (or ignore if you like). The audit log keeps track of possible chemical transformations during conversion (e.g., creating bonds from a MOPAC file). The segmentation fault is fixed in the current SVN trunk. I'd be glad to give you an updated version or patch if you like. Obviously it should be fixed in 2.1.0 final release, which should come out in a week or three. The partial charges for MOPAC should be parsed correctly. But regular .mol files don't have partial charges as far as I know, so they aren't output. On the other hand, .mol2 files do, so you should seem them there. If not, please file another bug, or e-mail the mailing list. I'm going to mark this one closed as being fixed -- we've solved MOPAC 2007 crashing problems.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778405
https://github.com/openbabel/openbabel/issues/622#issuecomment-281778405:573,Deployability,release,release,573,"Logged In: YES ; user_id=21420; Originator: NO. The ""audit log"" comments are more informative. The 2.1 version gives a quick summary of any warnings, errors, debugging information, etc. This way you can see if there were potential problems during conversion (or ignore if you like). The audit log keeps track of possible chemical transformations during conversion (e.g., creating bonds from a MOPAC file). The segmentation fault is fixed in the current SVN trunk. I'd be glad to give you an updated version or patch if you like. Obviously it should be fixed in 2.1.0 final release, which should come out in a week or three. The partial charges for MOPAC should be parsed correctly. But regular .mol files don't have partial charges as far as I know, so they aren't output. On the other hand, .mol2 files do, so you should seem them there. If not, please file another bug, or e-mail the mailing list. I'm going to mark this one closed as being fixed -- we've solved MOPAC 2007 crashing problems.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778405
https://github.com/openbabel/openbabel/issues/622#issuecomment-281778405:636,Energy Efficiency,charge,charges,636,"Logged In: YES ; user_id=21420; Originator: NO. The ""audit log"" comments are more informative. The 2.1 version gives a quick summary of any warnings, errors, debugging information, etc. This way you can see if there were potential problems during conversion (or ignore if you like). The audit log keeps track of possible chemical transformations during conversion (e.g., creating bonds from a MOPAC file). The segmentation fault is fixed in the current SVN trunk. I'd be glad to give you an updated version or patch if you like. Obviously it should be fixed in 2.1.0 final release, which should come out in a week or three. The partial charges for MOPAC should be parsed correctly. But regular .mol files don't have partial charges as far as I know, so they aren't output. On the other hand, .mol2 files do, so you should seem them there. If not, please file another bug, or e-mail the mailing list. I'm going to mark this one closed as being fixed -- we've solved MOPAC 2007 crashing problems.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778405
https://github.com/openbabel/openbabel/issues/622#issuecomment-281778405:724,Energy Efficiency,charge,charges,724,"Logged In: YES ; user_id=21420; Originator: NO. The ""audit log"" comments are more informative. The 2.1 version gives a quick summary of any warnings, errors, debugging information, etc. This way you can see if there were potential problems during conversion (or ignore if you like). The audit log keeps track of possible chemical transformations during conversion (e.g., creating bonds from a MOPAC file). The segmentation fault is fixed in the current SVN trunk. I'd be glad to give you an updated version or patch if you like. Obviously it should be fixed in 2.1.0 final release, which should come out in a week or three. The partial charges for MOPAC should be parsed correctly. But regular .mol files don't have partial charges as far as I know, so they aren't output. On the other hand, .mol2 files do, so you should seem them there. If not, please file another bug, or e-mail the mailing list. I'm going to mark this one closed as being fixed -- we've solved MOPAC 2007 crashing problems.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778405
https://github.com/openbabel/openbabel/issues/622#issuecomment-281778405:53,Security,audit,audit,53,"Logged In: YES ; user_id=21420; Originator: NO. The ""audit log"" comments are more informative. The 2.1 version gives a quick summary of any warnings, errors, debugging information, etc. This way you can see if there were potential problems during conversion (or ignore if you like). The audit log keeps track of possible chemical transformations during conversion (e.g., creating bonds from a MOPAC file). The segmentation fault is fixed in the current SVN trunk. I'd be glad to give you an updated version or patch if you like. Obviously it should be fixed in 2.1.0 final release, which should come out in a week or three. The partial charges for MOPAC should be parsed correctly. But regular .mol files don't have partial charges as far as I know, so they aren't output. On the other hand, .mol2 files do, so you should seem them there. If not, please file another bug, or e-mail the mailing list. I'm going to mark this one closed as being fixed -- we've solved MOPAC 2007 crashing problems.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778405
https://github.com/openbabel/openbabel/issues/622#issuecomment-281778405:287,Security,audit,audit,287,"Logged In: YES ; user_id=21420; Originator: NO. The ""audit log"" comments are more informative. The 2.1 version gives a quick summary of any warnings, errors, debugging information, etc. This way you can see if there were potential problems during conversion (or ignore if you like). The audit log keeps track of possible chemical transformations during conversion (e.g., creating bonds from a MOPAC file). The segmentation fault is fixed in the current SVN trunk. I'd be glad to give you an updated version or patch if you like. Obviously it should be fixed in 2.1.0 final release, which should come out in a week or three. The partial charges for MOPAC should be parsed correctly. But regular .mol files don't have partial charges as far as I know, so they aren't output. On the other hand, .mol2 files do, so you should seem them there. If not, please file another bug, or e-mail the mailing list. I'm going to mark this one closed as being fixed -- we've solved MOPAC 2007 crashing problems.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778405
https://github.com/openbabel/openbabel/issues/622#issuecomment-281778405:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. The ""audit log"" comments are more informative. The 2.1 version gives a quick summary of any warnings, errors, debugging information, etc. This way you can see if there were potential problems during conversion (or ignore if you like). The audit log keeps track of possible chemical transformations during conversion (e.g., creating bonds from a MOPAC file). The segmentation fault is fixed in the current SVN trunk. I'd be glad to give you an updated version or patch if you like. Obviously it should be fixed in 2.1.0 final release, which should come out in a week or three. The partial charges for MOPAC should be parsed correctly. But regular .mol files don't have partial charges as far as I know, so they aren't output. On the other hand, .mol2 files do, so you should seem them there. If not, please file another bug, or e-mail the mailing list. I'm going to mark this one closed as being fixed -- we've solved MOPAC 2007 crashing problems.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778405
https://github.com/openbabel/openbabel/issues/622#issuecomment-281778405:59,Testability,log,log,59,"Logged In: YES ; user_id=21420; Originator: NO. The ""audit log"" comments are more informative. The 2.1 version gives a quick summary of any warnings, errors, debugging information, etc. This way you can see if there were potential problems during conversion (or ignore if you like). The audit log keeps track of possible chemical transformations during conversion (e.g., creating bonds from a MOPAC file). The segmentation fault is fixed in the current SVN trunk. I'd be glad to give you an updated version or patch if you like. Obviously it should be fixed in 2.1.0 final release, which should come out in a week or three. The partial charges for MOPAC should be parsed correctly. But regular .mol files don't have partial charges as far as I know, so they aren't output. On the other hand, .mol2 files do, so you should seem them there. If not, please file another bug, or e-mail the mailing list. I'm going to mark this one closed as being fixed -- we've solved MOPAC 2007 crashing problems.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778405
https://github.com/openbabel/openbabel/issues/622#issuecomment-281778405:293,Testability,log,log,293,"Logged In: YES ; user_id=21420; Originator: NO. The ""audit log"" comments are more informative. The 2.1 version gives a quick summary of any warnings, errors, debugging information, etc. This way you can see if there were potential problems during conversion (or ignore if you like). The audit log keeps track of possible chemical transformations during conversion (e.g., creating bonds from a MOPAC file). The segmentation fault is fixed in the current SVN trunk. I'd be glad to give you an updated version or patch if you like. Obviously it should be fixed in 2.1.0 final release, which should come out in a week or three. The partial charges for MOPAC should be parsed correctly. But regular .mol files don't have partial charges as far as I know, so they aren't output. On the other hand, .mol2 files do, so you should seem them there. If not, please file another bug, or e-mail the mailing list. I'm going to mark this one closed as being fixed -- we've solved MOPAC 2007 crashing problems.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778405
https://github.com/openbabel/openbabel/issues/622#issuecomment-281778407:264,Availability,error,errorlevel,264,"Logged In: YES ; user_id=1548691; Originator: YES. Absolutely! You're right, I misunderstood the CHG field in V3000 MOL files.; babel DOES put the partial charges from molpac2007 in, say, a mol2 file. However, I don't get the audit logs... I tried with:. babel ---errorlevel 4 ...; babel ---errorlevel4 ...; babel --errorlevel 4 ... (also tried with errorlevel 5). but none worked, meaning that no ""audit log"" lines were written to the output file, nor to the standard output. No need for the patch concerning the ""segmentation fault"" I can wait for 2.1. Thank you for your help with this problem!. Miguel. Original comment by: molatwork",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778407
https://github.com/openbabel/openbabel/issues/622#issuecomment-281778407:316,Availability,error,errorlevel,316,"Logged In: YES ; user_id=1548691; Originator: YES. Absolutely! You're right, I misunderstood the CHG field in V3000 MOL files.; babel DOES put the partial charges from molpac2007 in, say, a mol2 file. However, I don't get the audit logs... I tried with:. babel ---errorlevel 4 ...; babel ---errorlevel4 ...; babel --errorlevel 4 ... (also tried with errorlevel 5). but none worked, meaning that no ""audit log"" lines were written to the output file, nor to the standard output. No need for the patch concerning the ""segmentation fault"" I can wait for 2.1. Thank you for your help with this problem!. Miguel. Original comment by: molatwork",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778407
https://github.com/openbabel/openbabel/issues/622#issuecomment-281778407:350,Availability,error,errorlevel,350,"Logged In: YES ; user_id=1548691; Originator: YES. Absolutely! You're right, I misunderstood the CHG field in V3000 MOL files.; babel DOES put the partial charges from molpac2007 in, say, a mol2 file. However, I don't get the audit logs... I tried with:. babel ---errorlevel 4 ...; babel ---errorlevel4 ...; babel --errorlevel 4 ... (also tried with errorlevel 5). but none worked, meaning that no ""audit log"" lines were written to the output file, nor to the standard output. No need for the patch concerning the ""segmentation fault"" I can wait for 2.1. Thank you for your help with this problem!. Miguel. Original comment by: molatwork",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778407
https://github.com/openbabel/openbabel/issues/622#issuecomment-281778407:528,Availability,fault,fault,528,"Logged In: YES ; user_id=1548691; Originator: YES. Absolutely! You're right, I misunderstood the CHG field in V3000 MOL files.; babel DOES put the partial charges from molpac2007 in, say, a mol2 file. However, I don't get the audit logs... I tried with:. babel ---errorlevel 4 ...; babel ---errorlevel4 ...; babel --errorlevel 4 ... (also tried with errorlevel 5). but none worked, meaning that no ""audit log"" lines were written to the output file, nor to the standard output. No need for the patch concerning the ""segmentation fault"" I can wait for 2.1. Thank you for your help with this problem!. Miguel. Original comment by: molatwork",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778407
https://github.com/openbabel/openbabel/issues/622#issuecomment-281778407:493,Deployability,patch,patch,493,"Logged In: YES ; user_id=1548691; Originator: YES. Absolutely! You're right, I misunderstood the CHG field in V3000 MOL files.; babel DOES put the partial charges from molpac2007 in, say, a mol2 file. However, I don't get the audit logs... I tried with:. babel ---errorlevel 4 ...; babel ---errorlevel4 ...; babel --errorlevel 4 ... (also tried with errorlevel 5). but none worked, meaning that no ""audit log"" lines were written to the output file, nor to the standard output. No need for the patch concerning the ""segmentation fault"" I can wait for 2.1. Thank you for your help with this problem!. Miguel. Original comment by: molatwork",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778407
https://github.com/openbabel/openbabel/issues/622#issuecomment-281778407:155,Energy Efficiency,charge,charges,155,"Logged In: YES ; user_id=1548691; Originator: YES. Absolutely! You're right, I misunderstood the CHG field in V3000 MOL files.; babel DOES put the partial charges from molpac2007 in, say, a mol2 file. However, I don't get the audit logs... I tried with:. babel ---errorlevel 4 ...; babel ---errorlevel4 ...; babel --errorlevel 4 ... (also tried with errorlevel 5). but none worked, meaning that no ""audit log"" lines were written to the output file, nor to the standard output. No need for the patch concerning the ""segmentation fault"" I can wait for 2.1. Thank you for your help with this problem!. Miguel. Original comment by: molatwork",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778407
https://github.com/openbabel/openbabel/issues/622#issuecomment-281778407:226,Security,audit,audit,226,"Logged In: YES ; user_id=1548691; Originator: YES. Absolutely! You're right, I misunderstood the CHG field in V3000 MOL files.; babel DOES put the partial charges from molpac2007 in, say, a mol2 file. However, I don't get the audit logs... I tried with:. babel ---errorlevel 4 ...; babel ---errorlevel4 ...; babel --errorlevel 4 ... (also tried with errorlevel 5). but none worked, meaning that no ""audit log"" lines were written to the output file, nor to the standard output. No need for the patch concerning the ""segmentation fault"" I can wait for 2.1. Thank you for your help with this problem!. Miguel. Original comment by: molatwork",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778407
https://github.com/openbabel/openbabel/issues/622#issuecomment-281778407:399,Security,audit,audit,399,"Logged In: YES ; user_id=1548691; Originator: YES. Absolutely! You're right, I misunderstood the CHG field in V3000 MOL files.; babel DOES put the partial charges from molpac2007 in, say, a mol2 file. However, I don't get the audit logs... I tried with:. babel ---errorlevel 4 ...; babel ---errorlevel4 ...; babel --errorlevel 4 ... (also tried with errorlevel 5). but none worked, meaning that no ""audit log"" lines were written to the output file, nor to the standard output. No need for the patch concerning the ""segmentation fault"" I can wait for 2.1. Thank you for your help with this problem!. Miguel. Original comment by: molatwork",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778407
https://github.com/openbabel/openbabel/issues/622#issuecomment-281778407:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1548691; Originator: YES. Absolutely! You're right, I misunderstood the CHG field in V3000 MOL files.; babel DOES put the partial charges from molpac2007 in, say, a mol2 file. However, I don't get the audit logs... I tried with:. babel ---errorlevel 4 ...; babel ---errorlevel4 ...; babel --errorlevel 4 ... (also tried with errorlevel 5). but none worked, meaning that no ""audit log"" lines were written to the output file, nor to the standard output. No need for the patch concerning the ""segmentation fault"" I can wait for 2.1. Thank you for your help with this problem!. Miguel. Original comment by: molatwork",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778407
https://github.com/openbabel/openbabel/issues/622#issuecomment-281778407:232,Testability,log,logs,232,"Logged In: YES ; user_id=1548691; Originator: YES. Absolutely! You're right, I misunderstood the CHG field in V3000 MOL files.; babel DOES put the partial charges from molpac2007 in, say, a mol2 file. However, I don't get the audit logs... I tried with:. babel ---errorlevel 4 ...; babel ---errorlevel4 ...; babel --errorlevel 4 ... (also tried with errorlevel 5). but none worked, meaning that no ""audit log"" lines were written to the output file, nor to the standard output. No need for the patch concerning the ""segmentation fault"" I can wait for 2.1. Thank you for your help with this problem!. Miguel. Original comment by: molatwork",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778407
https://github.com/openbabel/openbabel/issues/622#issuecomment-281778407:405,Testability,log,log,405,"Logged In: YES ; user_id=1548691; Originator: YES. Absolutely! You're right, I misunderstood the CHG field in V3000 MOL files.; babel DOES put the partial charges from molpac2007 in, say, a mol2 file. However, I don't get the audit logs... I tried with:. babel ---errorlevel 4 ...; babel ---errorlevel4 ...; babel --errorlevel 4 ... (also tried with errorlevel 5). but none worked, meaning that no ""audit log"" lines were written to the output file, nor to the standard output. No need for the patch concerning the ""segmentation fault"" I can wait for 2.1. Thank you for your help with this problem!. Miguel. Original comment by: molatwork",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778407
https://github.com/openbabel/openbabel/issues/623#issuecomment-281778417:0,Testability,Log,Logged,0,Logged In: YES ; user_id=1682851; Originator: NO. There was a line missing in psa.txt (;heavy). This is now fixed in SVN. Original comment by: @timvdm,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/623#issuecomment-281778417
https://github.com/openbabel/openbabel/issues/623#issuecomment-281778419:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: YES. Closing this. (Tim, you can certainly do this too -- just make sure to set the appropriate options under ""Status"" and ""Resolution.""). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/623#issuecomment-281778419
https://github.com/openbabel/openbabel/issues/624#issuecomment-281778439:59,Deployability,patch,patch,59,"Logged In: YES ; user_id=21420; Originator: YES. Well, the patch in SVN trunk, revision 1880 seems to solve this. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/624#issuecomment-281778439
https://github.com/openbabel/openbabel/issues/624#issuecomment-281778439:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: YES. Well, the patch in SVN trunk, revision 1880 seems to solve this. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/624#issuecomment-281778439
https://github.com/openbabel/openbabel/issues/624#issuecomment-281778440:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539; Originator: NO. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/624#issuecomment-281778440
https://github.com/openbabel/openbabel/issues/625#issuecomment-281778475:434,Deployability,patch,patch,434,"Logged In: YES ; user_id=21420; Originator: NO. OK, there's not a great way to deal with this -- many people want residue information in the mol2 file. In your case, you want to insure it just has ligands. So there's now a new flag for mol2 format -xl which will just cast out any residue information, e.g. babel babel_test.sdf -xl babel_test.mol2. This is now in the SVN trunk (revision 1890 or later) and I'd be happy to send you a patch. It will obviously also be in the 2.1 release when it comes out shortly. I'm marking this ""pending"" further comment from you. If there isn't any within 2 weeks, this will close automatically as being fixed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/625#issuecomment-281778475
https://github.com/openbabel/openbabel/issues/625#issuecomment-281778475:478,Deployability,release,release,478,"Logged In: YES ; user_id=21420; Originator: NO. OK, there's not a great way to deal with this -- many people want residue information in the mol2 file. In your case, you want to insure it just has ligands. So there's now a new flag for mol2 format -xl which will just cast out any residue information, e.g. babel babel_test.sdf -xl babel_test.mol2. This is now in the SVN trunk (revision 1890 or later) and I'd be happy to send you a patch. It will obviously also be in the 2.1 release when it comes out shortly. I'm marking this ""pending"" further comment from you. If there isn't any within 2 weeks, this will close automatically as being fixed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/625#issuecomment-281778475
https://github.com/openbabel/openbabel/issues/625#issuecomment-281778475:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. OK, there's not a great way to deal with this -- many people want residue information in the mol2 file. In your case, you want to insure it just has ligands. So there's now a new flag for mol2 format -xl which will just cast out any residue information, e.g. babel babel_test.sdf -xl babel_test.mol2. This is now in the SVN trunk (revision 1890 or later) and I'd be happy to send you a patch. It will obviously also be in the 2.1 release when it comes out shortly. I'm marking this ""pending"" further comment from you. If there isn't any within 2 weeks, this will close automatically as being fixed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/625#issuecomment-281778475
https://github.com/openbabel/openbabel/issues/625#issuecomment-281778477:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539; Originator: NO. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/625#issuecomment-281778477
https://github.com/openbabel/openbabel/issues/626#issuecomment-281778495:222,Deployability,patch,patch,222,"Logged In: YES ; user_id=21420; Originator: NO. Yes, you're correct -- the default should be ""at least one,"" according to the Daylight guide. This is now fixed in the SVN, revision 1881 or later. I'd be glad to send you a patch if you like. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/626#issuecomment-281778495
https://github.com/openbabel/openbabel/issues/626#issuecomment-281778495:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. Yes, you're correct -- the default should be ""at least one,"" according to the Daylight guide. This is now fixed in the SVN, revision 1881 or later. I'd be glad to send you a patch if you like. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/626#issuecomment-281778495
https://github.com/openbabel/openbabel/issues/626#issuecomment-281778495:135,Usability,guid,guide,135,"Logged In: YES ; user_id=21420; Originator: NO. Yes, you're correct -- the default should be ""at least one,"" according to the Daylight guide. This is now fixed in the SVN, revision 1881 or later. I'd be glad to send you a patch if you like. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/626#issuecomment-281778495
https://github.com/openbabel/openbabel/issues/627#issuecomment-281778506:146,Availability,recover,recovers,146,"Logged In: YES ; user_id=21420; Originator: NO. Actually, this works reasonably well in 2.1.x releases -- the next record can get lost, but babel recovers and outputs the rest of the file. Babel most certainly does not quit and certainly outputs everything else in the file. I'm marking this bug closed -- it's untrue. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/627#issuecomment-281778506
https://github.com/openbabel/openbabel/issues/627#issuecomment-281778506:94,Deployability,release,releases,94,"Logged In: YES ; user_id=21420; Originator: NO. Actually, this works reasonably well in 2.1.x releases -- the next record can get lost, but babel recovers and outputs the rest of the file. Babel most certainly does not quit and certainly outputs everything else in the file. I'm marking this bug closed -- it's untrue. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/627#issuecomment-281778506
https://github.com/openbabel/openbabel/issues/627#issuecomment-281778506:146,Safety,recover,recovers,146,"Logged In: YES ; user_id=21420; Originator: NO. Actually, this works reasonably well in 2.1.x releases -- the next record can get lost, but babel recovers and outputs the rest of the file. Babel most certainly does not quit and certainly outputs everything else in the file. I'm marking this bug closed -- it's untrue. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/627#issuecomment-281778506
https://github.com/openbabel/openbabel/issues/627#issuecomment-281778506:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. Actually, this works reasonably well in 2.1.x releases -- the next record can get lost, but babel recovers and outputs the rest of the file. Babel most certainly does not quit and certainly outputs everything else in the file. I'm marking this bug closed -- it's untrue. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/627#issuecomment-281778506
https://github.com/openbabel/openbabel/issues/628#issuecomment-281778547:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. First off, the ""second flag"" is listed as deprecated in the MDL CT file documentation. As for the ""critical H0 flag,"" this is indicated as being relevant only to query files. On the other hand, it's probably worth extracting this -- if it's non-zero, it indicates the maximum number of implicit hydrogens + 1 (i.e., 1 => 0 hydrogens, 2=> 1 hydrogen, etc.). Essentially, this would just call OBAtom::SetImplicitValence() after making sure it's been perceived on the remaining atoms. It's certainly easy enough to also write to this field on output (i.e., implicit valence - 1). Whether other software actually reads it is unclear. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/628#issuecomment-281778547
https://github.com/openbabel/openbabel/issues/629#issuecomment-281778549:20,Testability,Test,Test,20,Ghemical Forcefield Test Case (Multiple Atoms Same Location). Original comment by: @milkypostman,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/629#issuecomment-281778549
https://github.com/openbabel/openbabel/issues/629#issuecomment-281778552:237,Deployability,patch,patch,237,"Logged In: YES ; user_id=21420; Originator: NO. I don't actually get a segfault, although I do have plenty of NaN results. (Perhaps the Mac doesn't segfault on divide by zero?) So I can't verify your particular bug. Anyhow, the attached patch seems to fix the problem -- if the length is incredibly small, it pushes atoms 0.1 Ang apart and goes from there. I'm not sure if the angle or torsion or other parameters need similar fixes since this seems to be enough. Please give it a try and let me know if you still get a crash.; -Geoff; File Added: forcefield.patch. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/629#issuecomment-281778552
https://github.com/openbabel/openbabel/issues/629#issuecomment-281778552:559,Deployability,patch,patch,559,"Logged In: YES ; user_id=21420; Originator: NO. I don't actually get a segfault, although I do have plenty of NaN results. (Perhaps the Mac doesn't segfault on divide by zero?) So I can't verify your particular bug. Anyhow, the attached patch seems to fix the problem -- if the length is incredibly small, it pushes atoms 0.1 Ang apart and goes from there. I'm not sure if the angle or torsion or other parameters need similar fixes since this seems to be enough. Please give it a try and let me know if you still get a crash.; -Geoff; File Added: forcefield.patch. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/629#issuecomment-281778552
https://github.com/openbabel/openbabel/issues/629#issuecomment-281778552:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. I don't actually get a segfault, although I do have plenty of NaN results. (Perhaps the Mac doesn't segfault on divide by zero?) So I can't verify your particular bug. Anyhow, the attached patch seems to fix the problem -- if the length is incredibly small, it pushes atoms 0.1 Ang apart and goes from there. I'm not sure if the angle or torsion or other parameters need similar fixes since this seems to be enough. Please give it a try and let me know if you still get a crash.; -Geoff; File Added: forcefield.patch. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/629#issuecomment-281778552
https://github.com/openbabel/openbabel/issues/629#issuecomment-281778553:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539; Originator: NO. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/629#issuecomment-281778553
https://github.com/openbabel/openbabel/issues/630#issuecomment-281778587:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. Thanks for the suggestions! I'm glad to know that obprop is getting some use. This is now fixed in the SVN trunk, revision 1889 and later.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/630#issuecomment-281778587
https://github.com/openbabel/openbabel/issues/630#issuecomment-281778588:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=169818; Originator: NO. Ups, I just did the same.; Geoff, do we need the ; if ( inchiString.length() == 0 ); statement ?. Otherwise you can just revert to the version you have fixed. Joerg. Original comment by: wegner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/630#issuecomment-281778588
https://github.com/openbabel/openbabel/issues/631#issuecomment-281778593:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: YES. Linking seems to work now. In the future, I suggest killing all object files with ""make clean; make"". -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/631#issuecomment-281778593
https://github.com/openbabel/openbabel/issues/632#issuecomment-281778611:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. This is now fixed in the Subversion 2.1 branch, revision 1904 or later. Thanks for the report!; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/632#issuecomment-281778611
https://github.com/openbabel/openbabel/issues/632#issuecomment-281778612:0,Testability,Log,Logged,0,"Logged In: NO . Hi,. Sorry for the duplicate bug report, I managed to hit F5 in wrong browser tab and page was resubmitted. Anyway, new version of the code seems to work OK with cml. Thanks for noticing this. Tapani Kinnunen; takinnun at hotmail.com. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/632#issuecomment-281778612
https://github.com/openbabel/openbabel/issues/633#issuecomment-281778616:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420; Originator: NO. Duplicates PR#1688251. I'm going to close this one. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/633#issuecomment-281778616
https://github.com/openbabel/openbabel/issues/634#issuecomment-281778684:93,Deployability,release,release,93,"Logged In: YES ; user_id=21420; Originator: YES. Actually the Makefile *is* removed prior to release -- the scripts/ Makefile runs a ""distclean,"" so the Ruby makefile is, indeed gone. False alarm,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/634#issuecomment-281778684
https://github.com/openbabel/openbabel/issues/634#issuecomment-281778684:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: YES. Actually the Makefile *is* removed prior to release -- the scripts/ Makefile runs a ""distclean,"" so the Ruby makefile is, indeed gone. False alarm,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/634#issuecomment-281778684
https://github.com/openbabel/openbabel/issues/635#issuecomment-281778706:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. This looks a bit more general, actually. I'm attaching two more 3D chiral files which also appear to drop chiral info. SMILES (0D) and 2D files appear to retain chirality, but does the canonical SMILES code drop 3D chiral information?. -Geoff; File Added: A.gpr. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/635#issuecomment-281778706
https://github.com/openbabel/openbabel/issues/635#issuecomment-281778708:215,Security,hash,hash,215,"Logged In: YES ; user_id=21420; Originator: NO. This should now be fixed in the 2.1 SVN branch, as of revision 1981 or later. The problem is that AtomIsChiral assumed that all atoms (including 3D) should have wedge/hash bond flags. This is not true for 3D files, of course. The revised code simply adds a test if the atom is part of a 3D molecule -- in which case it does not need to check bonds to the atom for wedge/hash flags. The code should be correct, but I'm marking this pending any further comment from Craig. If no comment is made within 14 days, this bug will close as being fixed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/635#issuecomment-281778708
https://github.com/openbabel/openbabel/issues/635#issuecomment-281778708:418,Security,hash,hash,418,"Logged In: YES ; user_id=21420; Originator: NO. This should now be fixed in the 2.1 SVN branch, as of revision 1981 or later. The problem is that AtomIsChiral assumed that all atoms (including 3D) should have wedge/hash bond flags. This is not true for 3D files, of course. The revised code simply adds a test if the atom is part of a 3D molecule -- in which case it does not need to check bonds to the atom for wedge/hash flags. The code should be correct, but I'm marking this pending any further comment from Craig. If no comment is made within 14 days, this bug will close as being fixed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/635#issuecomment-281778708
https://github.com/openbabel/openbabel/issues/635#issuecomment-281778708:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. This should now be fixed in the 2.1 SVN branch, as of revision 1981 or later. The problem is that AtomIsChiral assumed that all atoms (including 3D) should have wedge/hash bond flags. This is not true for 3D files, of course. The revised code simply adds a test if the atom is part of a 3D molecule -- in which case it does not need to check bonds to the atom for wedge/hash flags. The code should be correct, but I'm marking this pending any further comment from Craig. If no comment is made within 14 days, this bug will close as being fixed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/635#issuecomment-281778708
https://github.com/openbabel/openbabel/issues/635#issuecomment-281778708:305,Testability,test,test,305,"Logged In: YES ; user_id=21420; Originator: NO. This should now be fixed in the 2.1 SVN branch, as of revision 1981 or later. The problem is that AtomIsChiral assumed that all atoms (including 3D) should have wedge/hash bond flags. This is not true for 3D files, of course. The revised code simply adds a test if the atom is part of a 3D molecule -- in which case it does not need to check bonds to the atom for wedge/hash flags. The code should be correct, but I'm marking this pending any further comment from Craig. If no comment is made within 14 days, this bug will close as being fixed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/635#issuecomment-281778708
https://github.com/openbabel/openbabel/issues/635#issuecomment-281778708:291,Usability,simpl,simply,291,"Logged In: YES ; user_id=21420; Originator: NO. This should now be fixed in the 2.1 SVN branch, as of revision 1981 or later. The problem is that AtomIsChiral assumed that all atoms (including 3D) should have wedge/hash bond flags. This is not true for 3D files, of course. The revised code simply adds a test if the atom is part of a 3D molecule -- in which case it does not need to check bonds to the atom for wedge/hash flags. The code should be correct, but I'm marking this pending any further comment from Craig. If no comment is made within 14 days, this bug will close as being fixed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/635#issuecomment-281778708
https://github.com/openbabel/openbabel/issues/635#issuecomment-281778710:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539; Originator: NO. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/635#issuecomment-281778710
https://github.com/openbabel/openbabel/issues/636#issuecomment-281778874:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420; Originator: YES. Isn't it possible to have some solution in Pybel itself -- a closefile method?. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/636#issuecomment-281778874
https://github.com/openbabel/openbabel/issues/636#issuecomment-281778875:0,Testability,Log,Logged,0,"Logged In: NO . Yes - you're absolutely right. I recently resolved this in Jybel, but didn't think there was any need to put it into Pybel. Turns out I was wrong. I will do as soon as possible, but I am away until Tuesday. - Noel. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/636#issuecomment-281778875
https://github.com/openbabel/openbabel/issues/636#issuecomment-281778876:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=850620; Originator: NO. I cannot reproduce the bug either on Windows or on Linux with the current snapshot (b7). I think that this issue is resolved since r1958 (soon after the initial bug report). Previously I created a new instance of OBConversion for each readfile; after this, I used the same global instance. Note that I have not looked at the gz stuff, I am simply talking about regular files, for which Ahmet said he had the same problem. I am making this bug as Closed, but I should probably stress test the Pybel I/O code at some point in the future. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/636#issuecomment-281778876
https://github.com/openbabel/openbabel/issues/636#issuecomment-281778876:532,Testability,test,test,532,"Logged In: YES ; user_id=850620; Originator: NO. I cannot reproduce the bug either on Windows or on Linux with the current snapshot (b7). I think that this issue is resolved since r1958 (soon after the initial bug report). Previously I created a new instance of OBConversion for each readfile; after this, I used the same global instance. Note that I have not looked at the gz stuff, I am simply talking about regular files, for which Ahmet said he had the same problem. I am making this bug as Closed, but I should probably stress test the Pybel I/O code at some point in the future. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/636#issuecomment-281778876
https://github.com/openbabel/openbabel/issues/636#issuecomment-281778876:389,Usability,simpl,simply,389,"Logged In: YES ; user_id=850620; Originator: NO. I cannot reproduce the bug either on Windows or on Linux with the current snapshot (b7). I think that this issue is resolved since r1958 (soon after the initial bug report). Previously I created a new instance of OBConversion for each readfile; after this, I used the same global instance. Note that I have not looked at the gz stuff, I am simply talking about regular files, for which Ahmet said he had the same problem. I am making this bug as Closed, but I should probably stress test the Pybel I/O code at some point in the future. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/636#issuecomment-281778876
https://github.com/openbabel/openbabel/issues/637#issuecomment-281778879:326,Safety,safe,safer,326,"Logged In: YES ; user_id=21420; Originator: YES. This should now be fixed in the SVN 2.1 branch, revision 1980 or later. Basically the code crashed because it attempted to add atoms (hydrogens) while iterating through all atoms. Instead, the revision creates a list of atoms to modify, then loops through that subset later -- safer technique than iterating and modifying the underlying data at the same time. I'm assigning this to Craig to review -- testing doesn't show any obvious changes in the canonical SMILES output, but I don't have as comprehensive a database. If no comments are posted by Craig within 14 days, this bug will close as being fixed. Craig, if there's some red flag, please post here. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/637#issuecomment-281778879
https://github.com/openbabel/openbabel/issues/637#issuecomment-281778879:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: YES. This should now be fixed in the SVN 2.1 branch, revision 1980 or later. Basically the code crashed because it attempted to add atoms (hydrogens) while iterating through all atoms. Instead, the revision creates a list of atoms to modify, then loops through that subset later -- safer technique than iterating and modifying the underlying data at the same time. I'm assigning this to Craig to review -- testing doesn't show any obvious changes in the canonical SMILES output, but I don't have as comprehensive a database. If no comments are posted by Craig within 14 days, this bug will close as being fixed. Craig, if there's some red flag, please post here. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/637#issuecomment-281778879
https://github.com/openbabel/openbabel/issues/637#issuecomment-281778879:450,Testability,test,testing,450,"Logged In: YES ; user_id=21420; Originator: YES. This should now be fixed in the SVN 2.1 branch, revision 1980 or later. Basically the code crashed because it attempted to add atoms (hydrogens) while iterating through all atoms. Instead, the revision creates a list of atoms to modify, then loops through that subset later -- safer technique than iterating and modifying the underlying data at the same time. I'm assigning this to Craig to review -- testing doesn't show any obvious changes in the canonical SMILES output, but I don't have as comprehensive a database. If no comments are posted by Craig within 14 days, this bug will close as being fixed. Craig, if there's some red flag, please post here. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/637#issuecomment-281778879
https://github.com/openbabel/openbabel/issues/637#issuecomment-281778883:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539; Originator: NO. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/637#issuecomment-281778883
https://github.com/openbabel/openbabel/issues/638#issuecomment-281778892:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: YES. This is now fixed in the SVN branch for 2.1, revision 1977 or later. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/638#issuecomment-281778892
https://github.com/openbabel/openbabel/issues/639#issuecomment-281778896:196,Availability,down,download,196,"Logged In: YES ; user_id=850620; Originator: YES. This is my first time debugging in C++, but I think I've found the immediate problem. I'm working off the 2-1-x branch on WinXP. The PDB file was download from the PDB and is attached to the original bug report. If I just read in the PDB file with the following code, I get an error:; int main(int argc,char *argv[]); {; OBConversion conv;; 	OBMol mol;; 	conv.SetInFormat(""pdb"");; 	conv.ReadFile(&mol, ""1ABE.pdb"");; 	; 	cout << ""hey:"" << mol.NumAtoms() << endl;; 	system(""pause"");; }. The line of the file that causes the problem is:; HETATM 2338 O HOH 309 9.470 57.177 56.123 0.98 12.11 1ABE2423. Line 266 of pdbformat.cpp has a subscript out of range debug error:; ""if (atmid[2] == '\0' || atmid[2] == ' ') type = atmid.substr(0,2);"". At this point, atmid is simply ""O"" whereas the code (according to the comment on line 272) expects it to be "" O"" for a single character element. I hope this helps. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/639#issuecomment-281778896
https://github.com/openbabel/openbabel/issues/639#issuecomment-281778896:327,Availability,error,error,327,"Logged In: YES ; user_id=850620; Originator: YES. This is my first time debugging in C++, but I think I've found the immediate problem. I'm working off the 2-1-x branch on WinXP. The PDB file was download from the PDB and is attached to the original bug report. If I just read in the PDB file with the following code, I get an error:; int main(int argc,char *argv[]); {; OBConversion conv;; 	OBMol mol;; 	conv.SetInFormat(""pdb"");; 	conv.ReadFile(&mol, ""1ABE.pdb"");; 	; 	cout << ""hey:"" << mol.NumAtoms() << endl;; 	system(""pause"");; }. The line of the file that causes the problem is:; HETATM 2338 O HOH 309 9.470 57.177 56.123 0.98 12.11 1ABE2423. Line 266 of pdbformat.cpp has a subscript out of range debug error:; ""if (atmid[2] == '\0' || atmid[2] == ' ') type = atmid.substr(0,2);"". At this point, atmid is simply ""O"" whereas the code (according to the comment on line 272) expects it to be "" O"" for a single character element. I hope this helps. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/639#issuecomment-281778896
https://github.com/openbabel/openbabel/issues/639#issuecomment-281778896:709,Availability,error,error,709,"Logged In: YES ; user_id=850620; Originator: YES. This is my first time debugging in C++, but I think I've found the immediate problem. I'm working off the 2-1-x branch on WinXP. The PDB file was download from the PDB and is attached to the original bug report. If I just read in the PDB file with the following code, I get an error:; int main(int argc,char *argv[]); {; OBConversion conv;; 	OBMol mol;; 	conv.SetInFormat(""pdb"");; 	conv.ReadFile(&mol, ""1ABE.pdb"");; 	; 	cout << ""hey:"" << mol.NumAtoms() << endl;; 	system(""pause"");; }. The line of the file that causes the problem is:; HETATM 2338 O HOH 309 9.470 57.177 56.123 0.98 12.11 1ABE2423. Line 266 of pdbformat.cpp has a subscript out of range debug error:; ""if (atmid[2] == '\0' || atmid[2] == ' ') type = atmid.substr(0,2);"". At this point, atmid is simply ""O"" whereas the code (according to the comment on line 272) expects it to be "" O"" for a single character element. I hope this helps. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/639#issuecomment-281778896
https://github.com/openbabel/openbabel/issues/639#issuecomment-281778896:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=850620; Originator: YES. This is my first time debugging in C++, but I think I've found the immediate problem. I'm working off the 2-1-x branch on WinXP. The PDB file was download from the PDB and is attached to the original bug report. If I just read in the PDB file with the following code, I get an error:; int main(int argc,char *argv[]); {; OBConversion conv;; 	OBMol mol;; 	conv.SetInFormat(""pdb"");; 	conv.ReadFile(&mol, ""1ABE.pdb"");; 	; 	cout << ""hey:"" << mol.NumAtoms() << endl;; 	system(""pause"");; }. The line of the file that causes the problem is:; HETATM 2338 O HOH 309 9.470 57.177 56.123 0.98 12.11 1ABE2423. Line 266 of pdbformat.cpp has a subscript out of range debug error:; ""if (atmid[2] == '\0' || atmid[2] == ' ') type = atmid.substr(0,2);"". At this point, atmid is simply ""O"" whereas the code (according to the comment on line 272) expects it to be "" O"" for a single character element. I hope this helps. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/639#issuecomment-281778896
https://github.com/openbabel/openbabel/issues/639#issuecomment-281778896:522,Usability,pause,pause,522,"Logged In: YES ; user_id=850620; Originator: YES. This is my first time debugging in C++, but I think I've found the immediate problem. I'm working off the 2-1-x branch on WinXP. The PDB file was download from the PDB and is attached to the original bug report. If I just read in the PDB file with the following code, I get an error:; int main(int argc,char *argv[]); {; OBConversion conv;; 	OBMol mol;; 	conv.SetInFormat(""pdb"");; 	conv.ReadFile(&mol, ""1ABE.pdb"");; 	; 	cout << ""hey:"" << mol.NumAtoms() << endl;; 	system(""pause"");; }. The line of the file that causes the problem is:; HETATM 2338 O HOH 309 9.470 57.177 56.123 0.98 12.11 1ABE2423. Line 266 of pdbformat.cpp has a subscript out of range debug error:; ""if (atmid[2] == '\0' || atmid[2] == ' ') type = atmid.substr(0,2);"". At this point, atmid is simply ""O"" whereas the code (according to the comment on line 272) expects it to be "" O"" for a single character element. I hope this helps. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/639#issuecomment-281778896
https://github.com/openbabel/openbabel/issues/639#issuecomment-281778896:811,Usability,simpl,simply,811,"Logged In: YES ; user_id=850620; Originator: YES. This is my first time debugging in C++, but I think I've found the immediate problem. I'm working off the 2-1-x branch on WinXP. The PDB file was download from the PDB and is attached to the original bug report. If I just read in the PDB file with the following code, I get an error:; int main(int argc,char *argv[]); {; OBConversion conv;; 	OBMol mol;; 	conv.SetInFormat(""pdb"");; 	conv.ReadFile(&mol, ""1ABE.pdb"");; 	; 	cout << ""hey:"" << mol.NumAtoms() << endl;; 	system(""pause"");; }. The line of the file that causes the problem is:; HETATM 2338 O HOH 309 9.470 57.177 56.123 0.98 12.11 1ABE2423. Line 266 of pdbformat.cpp has a subscript out of range debug error:; ""if (atmid[2] == '\0' || atmid[2] == ' ') type = atmid.substr(0,2);"". At this point, atmid is simply ""O"" whereas the code (according to the comment on line 272) expects it to be "" O"" for a single character element. I hope this helps. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/639#issuecomment-281778896
https://github.com/openbabel/openbabel/issues/639#issuecomment-281778897:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. This is now fixed in the 2.1 branch for 2.1.1, as of SVN revision 1997 or later. I'm marking this ""pending"" any further comment from Noel. Unless he comments that the bug still exists, this report will be auto-closed as being fixed in 14 days. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/639#issuecomment-281778897
https://github.com/openbabel/openbabel/issues/639#issuecomment-281778898:83,Deployability,patch,patch,83,"Logged In: YES ; user_id=850620; Originator: YES. I'm a bit worried now about that patch...say if it wasn't necessary, or it's some horrible mistake? I'm not very confident with the whole C++ thing... The original problem remained, but has been resolved simply by defining a vector of OBAtom* in the interface file. Sorry about the big song and dance. In addition, I should have been using OBResidueAtomIter in any case (which works), rather than accessing GetAtoms() directly. So...were these two unrelated problems, or was openbabel genuinely unable to read these files...? I should try to convert 1ABE.pdb with babel.exe prior to the patch and see what happens... Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/639#issuecomment-281778898
https://github.com/openbabel/openbabel/issues/639#issuecomment-281778898:637,Deployability,patch,patch,637,"Logged In: YES ; user_id=850620; Originator: YES. I'm a bit worried now about that patch...say if it wasn't necessary, or it's some horrible mistake? I'm not very confident with the whole C++ thing... The original problem remained, but has been resolved simply by defining a vector of OBAtom* in the interface file. Sorry about the big song and dance. In addition, I should have been using OBResidueAtomIter in any case (which works), rather than accessing GetAtoms() directly. So...were these two unrelated problems, or was openbabel genuinely unable to read these files...? I should try to convert 1ABE.pdb with babel.exe prior to the patch and see what happens... Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/639#issuecomment-281778898
https://github.com/openbabel/openbabel/issues/639#issuecomment-281778898:300,Integrability,interface,interface,300,"Logged In: YES ; user_id=850620; Originator: YES. I'm a bit worried now about that patch...say if it wasn't necessary, or it's some horrible mistake? I'm not very confident with the whole C++ thing... The original problem remained, but has been resolved simply by defining a vector of OBAtom* in the interface file. Sorry about the big song and dance. In addition, I should have been using OBResidueAtomIter in any case (which works), rather than accessing GetAtoms() directly. So...were these two unrelated problems, or was openbabel genuinely unable to read these files...? I should try to convert 1ABE.pdb with babel.exe prior to the patch and see what happens... Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/639#issuecomment-281778898
https://github.com/openbabel/openbabel/issues/639#issuecomment-281778898:447,Security,access,accessing,447,"Logged In: YES ; user_id=850620; Originator: YES. I'm a bit worried now about that patch...say if it wasn't necessary, or it's some horrible mistake? I'm not very confident with the whole C++ thing... The original problem remained, but has been resolved simply by defining a vector of OBAtom* in the interface file. Sorry about the big song and dance. In addition, I should have been using OBResidueAtomIter in any case (which works), rather than accessing GetAtoms() directly. So...were these two unrelated problems, or was openbabel genuinely unable to read these files...? I should try to convert 1ABE.pdb with babel.exe prior to the patch and see what happens... Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/639#issuecomment-281778898
https://github.com/openbabel/openbabel/issues/639#issuecomment-281778898:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=850620; Originator: YES. I'm a bit worried now about that patch...say if it wasn't necessary, or it's some horrible mistake? I'm not very confident with the whole C++ thing... The original problem remained, but has been resolved simply by defining a vector of OBAtom* in the interface file. Sorry about the big song and dance. In addition, I should have been using OBResidueAtomIter in any case (which works), rather than accessing GetAtoms() directly. So...were these two unrelated problems, or was openbabel genuinely unable to read these files...? I should try to convert 1ABE.pdb with babel.exe prior to the patch and see what happens... Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/639#issuecomment-281778898
https://github.com/openbabel/openbabel/issues/639#issuecomment-281778898:254,Usability,simpl,simply,254,"Logged In: YES ; user_id=850620; Originator: YES. I'm a bit worried now about that patch...say if it wasn't necessary, or it's some horrible mistake? I'm not very confident with the whole C++ thing... The original problem remained, but has been resolved simply by defining a vector of OBAtom* in the interface file. Sorry about the big song and dance. In addition, I should have been using OBResidueAtomIter in any case (which works), rather than accessing GetAtoms() directly. So...were these two unrelated problems, or was openbabel genuinely unable to read these files...? I should try to convert 1ABE.pdb with babel.exe prior to the patch and see what happens... Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/639#issuecomment-281778898
https://github.com/openbabel/openbabel/issues/639#issuecomment-281778899:124,Availability,down,download,124,"Logged In: YES ; user_id=850620; Originator: YES. Yes - babel failed...not on all PDB files, but some. When I get time I'll download the PDB and verify that it can parse (without segfaulting at least) all of the files. Marking this bug closed... Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/639#issuecomment-281778899
https://github.com/openbabel/openbabel/issues/639#issuecomment-281778899:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=850620; Originator: YES. Yes - babel failed...not on all PDB files, but some. When I get time I'll download the PDB and verify that it can parse (without segfaulting at least) all of the files. Marking this bug closed... Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/639#issuecomment-281778899
https://github.com/openbabel/openbabel/issues/640#issuecomment-281778903:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420; Originator: NO. This should now be fixed in SVN trunk. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/640#issuecomment-281778903
https://github.com/openbabel/openbabel/issues/640#issuecomment-281778904:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=850620; Originator: YES. The output now appears to be correct. For the one with five bonds, I get:; CONECT 1 2 3 4 5; CONECT 1 6; CONECT 2 1; CONECT 3 1; CONECT 4 1; CONECT 5 1; CONECT 6 1. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/640#issuecomment-281778904
https://github.com/openbabel/openbabel/issues/641#issuecomment-281778905:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615; Originator: NO. DeleteData(OBGenericData*) had a bug which could have appeared intermittently (a vector iterator used when invalidated after a deletion). Corrected in the C++ code (revision 1951). The port to Python hasn't been tested. I've also added a new overloaded function DeleteData(string&) which I guess would be used like obmol.DeleteData(""NSC"") when the appropriate interfacing has been done. It is used for the forthcoming babel --delete commandline option. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/641#issuecomment-281778905
https://github.com/openbabel/openbabel/issues/641#issuecomment-281778905:262,Testability,test,tested,262,"Logged In: YES ; user_id=1189615; Originator: NO. DeleteData(OBGenericData*) had a bug which could have appeared intermittently (a vector iterator used when invalidated after a deletion). Corrected in the C++ code (revision 1951). The port to Python hasn't been tested. I've also added a new overloaded function DeleteData(string&) which I guess would be used like obmol.DeleteData(""NSC"") when the appropriate interfacing has been done. It is used for the forthcoming babel --delete commandline option. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/641#issuecomment-281778905
https://github.com/openbabel/openbabel/issues/641#issuecomment-281778907:0,Testability,Log,Logged,0,Logged In: YES ; user_id=850620; Originator: YES. Fixed by Chris. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/641#issuecomment-281778907
https://github.com/openbabel/openbabel/issues/642#issuecomment-281778908:104,Deployability,update,update,104,"Logged In: YES ; user_id=787122; Originator: NO. 2.0 and 2.1 are API compatible, so there is no need to update the headers path and the pkg-config file name.; The minor version does not matter in this particular case. If we are sure it will never matter, we can drop it, otherwise, let's keep it, it is not harmful. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/642#issuecomment-281778908
https://github.com/openbabel/openbabel/issues/642#issuecomment-281778908:140,Modifiability,config,config,140,"Logged In: YES ; user_id=787122; Originator: NO. 2.0 and 2.1 are API compatible, so there is no need to update the headers path and the pkg-config file name.; The minor version does not matter in this particular case. If we are sure it will never matter, we can drop it, otherwise, let's keep it, it is not harmful. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/642#issuecomment-281778908
https://github.com/openbabel/openbabel/issues/642#issuecomment-281778908:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=787122; Originator: NO. 2.0 and 2.1 are API compatible, so there is no need to update the headers path and the pkg-config file name.; The minor version does not matter in this particular case. If we are sure it will never matter, we can drop it, otherwise, let's keep it, it is not harmful. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/642#issuecomment-281778908
https://github.com/openbabel/openbabel/issues/642#issuecomment-281778910:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. The decision to use ""openbabel-2.0.pc"" was unfortunate, although it did match use from libraries like GNOME, etc. For version 3, we will no doubt use openbabel-3.pc instead. There's little we can fix at this point, aside from adding symlinks. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/642#issuecomment-281778910
https://github.com/openbabel/openbabel/issues/643#issuecomment-281778914:100,Deployability,release,release,100,"Logged In: YES ; user_id=850620; Originator: NO. Unfortunately (ahem, Chris :-) ), the 2.1.0 stable release does not exactly correspond to the code used for OpenBabelGUI 2.1.0c. You will need to get that code from the SVN HEAD of tags-2-1-0. (If this doesn't mean anything to you, let me know and I will explain more clearly.). However, the general problem is more worrying - thanks for bringing it to our attention. Someone more qualified than me will look into it. Please leave your name and/or email address so that we can keep in touch with you regarding this issue. Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/643#issuecomment-281778914
https://github.com/openbabel/openbabel/issues/643#issuecomment-281778914:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=850620; Originator: NO. Unfortunately (ahem, Chris :-) ), the 2.1.0 stable release does not exactly correspond to the code used for OpenBabelGUI 2.1.0c. You will need to get that code from the SVN HEAD of tags-2-1-0. (If this doesn't mean anything to you, let me know and I will explain more clearly.). However, the general problem is more worrying - thanks for bringing it to our attention. Someone more qualified than me will look into it. Please leave your name and/or email address so that we can keep in touch with you regarding this issue. Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/643#issuecomment-281778914
https://github.com/openbabel/openbabel/issues/643#issuecomment-281778914:317,Usability,clear,clearly,317,"Logged In: YES ; user_id=850620; Originator: NO. Unfortunately (ahem, Chris :-) ), the 2.1.0 stable release does not exactly correspond to the code used for OpenBabelGUI 2.1.0c. You will need to get that code from the SVN HEAD of tags-2-1-0. (If this doesn't mean anything to you, let me know and I will explain more clearly.). However, the general problem is more worrying - thanks for bringing it to our attention. Someone more qualified than me will look into it. Please leave your name and/or email address so that we can keep in touch with you regarding this issue. Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/643#issuecomment-281778914
https://github.com/openbabel/openbabel/issues/643#issuecomment-281778917:0,Testability,Log,Logged,0,Logged In: YES ; user_id=1795260; Originator: NO. Just registered at sourceforge. Let me know if you need more info. . Ivo . Original comment by: isitech,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/643#issuecomment-281778917
https://github.com/openbabel/openbabel/issues/643#issuecomment-281778918:272,Availability,avail,available,272,"Logged In: YES ; user_id=21420; Originator: NO. Actually, you want this patch:. http://openbabel.svn.sourceforge.net/viewvc/openbabel/openbabel/branches/openbabel-2-1-x/src/formats/inchiformat.cpp?r1=1893&r2=1933. I found this bug in testing ChemSpotlight, and made a fix available on the 2-1-x branch. We haven't yet gathered enough bug fixes for a 2.1.1 release, but hopefully one will come soon. There are a few other issues that should be addressed soon. Thanks for your report, it's good because it focuses on a SMILES without chiral information.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/643#issuecomment-281778918
https://github.com/openbabel/openbabel/issues/643#issuecomment-281778918:72,Deployability,patch,patch,72,"Logged In: YES ; user_id=21420; Originator: NO. Actually, you want this patch:. http://openbabel.svn.sourceforge.net/viewvc/openbabel/openbabel/branches/openbabel-2-1-x/src/formats/inchiformat.cpp?r1=1893&r2=1933. I found this bug in testing ChemSpotlight, and made a fix available on the 2-1-x branch. We haven't yet gathered enough bug fixes for a 2.1.1 release, but hopefully one will come soon. There are a few other issues that should be addressed soon. Thanks for your report, it's good because it focuses on a SMILES without chiral information.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/643#issuecomment-281778918
https://github.com/openbabel/openbabel/issues/643#issuecomment-281778918:356,Deployability,release,release,356,"Logged In: YES ; user_id=21420; Originator: NO. Actually, you want this patch:. http://openbabel.svn.sourceforge.net/viewvc/openbabel/openbabel/branches/openbabel-2-1-x/src/formats/inchiformat.cpp?r1=1893&r2=1933. I found this bug in testing ChemSpotlight, and made a fix available on the 2-1-x branch. We haven't yet gathered enough bug fixes for a 2.1.1 release, but hopefully one will come soon. There are a few other issues that should be addressed soon. Thanks for your report, it's good because it focuses on a SMILES without chiral information.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/643#issuecomment-281778918
https://github.com/openbabel/openbabel/issues/643#issuecomment-281778918:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. Actually, you want this patch:. http://openbabel.svn.sourceforge.net/viewvc/openbabel/openbabel/branches/openbabel-2-1-x/src/formats/inchiformat.cpp?r1=1893&r2=1933. I found this bug in testing ChemSpotlight, and made a fix available on the 2-1-x branch. We haven't yet gathered enough bug fixes for a 2.1.1 release, but hopefully one will come soon. There are a few other issues that should be addressed soon. Thanks for your report, it's good because it focuses on a SMILES without chiral information.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/643#issuecomment-281778918
https://github.com/openbabel/openbabel/issues/643#issuecomment-281778918:234,Testability,test,testing,234,"Logged In: YES ; user_id=21420; Originator: NO. Actually, you want this patch:. http://openbabel.svn.sourceforge.net/viewvc/openbabel/openbabel/branches/openbabel-2-1-x/src/formats/inchiformat.cpp?r1=1893&r2=1933. I found this bug in testing ChemSpotlight, and made a fix available on the 2-1-x branch. We haven't yet gathered enough bug fixes for a 2.1.1 release, but hopefully one will come soon. There are a few other issues that should be addressed soon. Thanks for your report, it's good because it focuses on a SMILES without chiral information.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/643#issuecomment-281778918
https://github.com/openbabel/openbabel/issues/643#issuecomment-281778919:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539; Originator: NO. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/643#issuecomment-281778919
https://github.com/openbabel/openbabel/issues/1482#issuecomment-281810698:127,Deployability,release,release,127,Logged In: YES ; user_id=21420; Originator: NO. This is now fixed in the 2.1 branch and will be included in the upcoming 2.1.1 release. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1482#issuecomment-281810698
https://github.com/openbabel/openbabel/issues/1482#issuecomment-281810698:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420; Originator: NO. This is now fixed in the 2.1 branch and will be included in the upcoming 2.1.1 release. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1482#issuecomment-281810698
https://github.com/openbabel/openbabel/issues/1483#issuecomment-281810700:114,Deployability,release,release,114,"Logged In: YES ; user_id=21420; Originator: NO. This is fixed in the 2.1 branch and will be included in the 2.1.1 release -- a new ""-o"" flag was added to obminimize. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1483#issuecomment-281810700
https://github.com/openbabel/openbabel/issues/1483#issuecomment-281810700:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. This is fixed in the 2.1 branch and will be included in the 2.1.1 release -- a new ""-o"" flag was added to obminimize. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1483#issuecomment-281810700
https://github.com/openbabel/openbabel/issues/644#issuecomment-281778931:0,Testability,Log,Logged,0,Logged In: YES ; user_id=850620; Originator: YES. Fixed by Chris. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/644#issuecomment-281778931
https://github.com/openbabel/openbabel/issues/644#issuecomment-281778932:0,Testability,Log,Logged,0,Logged In: YES ; user_id=850620; Originator: YES. Fixed by Chris. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/644#issuecomment-281778932
https://github.com/openbabel/openbabel/issues/645#issuecomment-281778949:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420; Originator: YES. This turned out to be a duplicate of PR#1727333 and is fixed in SVN trunk and 2.1 branch. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/645#issuecomment-281778949
https://github.com/openbabel/openbabel/issues/646#issuecomment-281778961:0,Testability,Log,Logged,0,Logged In: YES ; user_id=787122; Originator: NO. I confirm that bug. Sorry for the inconvenience. Please attribute to myself. Original comment by: jbrefort,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/646#issuecomment-281778961
https://github.com/openbabel/openbabel/issues/646#issuecomment-281778962:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=787122; Originator: NO. Hmm, I'm not guilty in the end:. r1754 | chrismorl | 2007-02-13 20:51:47 +0100 (mar, 13 fév 2007) | 1 line. Clear OBMol objects by default at start of ReadMolecule. The issue is that WriteMolecule was modified, not ReadMolecule, so the molecule was cleared before writing... Fixed in svn (both 2.1 and trunk).; Please mark as fixed. I'm not allowed to change the status. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/646#issuecomment-281778962
https://github.com/openbabel/openbabel/issues/646#issuecomment-281778962:157,Usability,Clear,Clear,157,"Logged In: YES ; user_id=787122; Originator: NO. Hmm, I'm not guilty in the end:. r1754 | chrismorl | 2007-02-13 20:51:47 +0100 (mar, 13 fév 2007) | 1 line. Clear OBMol objects by default at start of ReadMolecule. The issue is that WriteMolecule was modified, not ReadMolecule, so the molecule was cleared before writing... Fixed in svn (both 2.1 and trunk).; Please mark as fixed. I'm not allowed to change the status. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/646#issuecomment-281778962
https://github.com/openbabel/openbabel/issues/646#issuecomment-281778962:298,Usability,clear,cleared,298,"Logged In: YES ; user_id=787122; Originator: NO. Hmm, I'm not guilty in the end:. r1754 | chrismorl | 2007-02-13 20:51:47 +0100 (mar, 13 fév 2007) | 1 line. Clear OBMol objects by default at start of ReadMolecule. The issue is that WriteMolecule was modified, not ReadMolecule, so the molecule was cleared before writing... Fixed in svn (both 2.1 and trunk).; Please mark as fixed. I'm not allowed to change the status. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/646#issuecomment-281778962
https://github.com/openbabel/openbabel/issues/646#issuecomment-281778964:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420; Originator: NO. All fixed. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/646#issuecomment-281778964
https://github.com/openbabel/openbabel/issues/647#issuecomment-281778967:62,Availability,Error,Errormessages,62,Logged In: YES ; user_id=850620; Originator: YES. File Added: Errormessages.txt. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/647#issuecomment-281778967
https://github.com/openbabel/openbabel/issues/647#issuecomment-281778967:0,Testability,Log,Logged,0,Logged In: YES ; user_id=850620; Originator: YES. File Added: Errormessages.txt. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/647#issuecomment-281778967
https://github.com/openbabel/openbabel/issues/647#issuecomment-281778969:62,Availability,Error,Errormessages,62,Logged In: YES ; user_id=850620; Originator: YES. File Added: Errormessages.txt. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/647#issuecomment-281778969
https://github.com/openbabel/openbabel/issues/647#issuecomment-281778969:0,Testability,Log,Logged,0,Logged In: YES ; user_id=850620; Originator: YES. File Added: Errormessages.txt. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/647#issuecomment-281778969
https://github.com/openbabel/openbabel/issues/647#issuecomment-281778972:0,Testability,Log,Logged,0,Logged In: YES ; user_id=850620; Originator: YES. File Added: output.zip. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/647#issuecomment-281778972
https://github.com/openbabel/openbabel/issues/647#issuecomment-281778974:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=850620; Originator: YES. Mol2 files use Sybyl atom types, http://www.tripos.com/mol2/atom_types.html. I have just compared the output of 2.1.0 with the Mol2 file stored in Relibase (which contains curated ligands) for the same protein. According to this comparision, instead of Car, it should be C.ar, similarly for C3 (should be C.3), So2 (should be S.o2), O- (should be O.2). The N3's should be N.3 (if correct), or otherwise N.pl3 (which is how Relibase types them). The O.3 is correctly typed!. It's probable that whoever wrote this code didn't realise how crucial these atom types are for people working with protein data. It's not just a mnemonic; these codes provide information to programs that deal with proteins. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/647#issuecomment-281778974
https://github.com/openbabel/openbabel/issues/647#issuecomment-281778976:278,Deployability,release,release,278,"Logged In: YES ; user_id=850620; Originator: YES. I note that the conversion proceeds much better (perhaps even perfectly) if I first unset BABEL_DATADIR (on Windows). Setting BABEL_DATADIR is required for using FP3 from Python. However, something has gone wrong since the last release of OB and OBPython. It seems that OB cannot correctly read types.txt, nor patterns.txt, once you set BABEL_DATADIR. How do I know? Well, if I don't set BABEL_DATADIR, OB complains that it cannot find patterns.txt, but it correctly converts the MOL2 file in the Pybel test suite. If I set BABEL_DATADIR, it doesn't complain any longer about patterns.txt, but it cannot set any bits in the molecules (this exposed bug 1728410), nor can it correctly convert the MOL2 file in the Pybel test suite. This bug affects all users of OBPython1.0 (which sets BABEL_DATADIR) who are using the latest OpenBabelGUI. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/647#issuecomment-281778976
https://github.com/openbabel/openbabel/issues/647#issuecomment-281778976:690,Security,expose,exposed,690,"Logged In: YES ; user_id=850620; Originator: YES. I note that the conversion proceeds much better (perhaps even perfectly) if I first unset BABEL_DATADIR (on Windows). Setting BABEL_DATADIR is required for using FP3 from Python. However, something has gone wrong since the last release of OB and OBPython. It seems that OB cannot correctly read types.txt, nor patterns.txt, once you set BABEL_DATADIR. How do I know? Well, if I don't set BABEL_DATADIR, OB complains that it cannot find patterns.txt, but it correctly converts the MOL2 file in the Pybel test suite. If I set BABEL_DATADIR, it doesn't complain any longer about patterns.txt, but it cannot set any bits in the molecules (this exposed bug 1728410), nor can it correctly convert the MOL2 file in the Pybel test suite. This bug affects all users of OBPython1.0 (which sets BABEL_DATADIR) who are using the latest OpenBabelGUI. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/647#issuecomment-281778976
https://github.com/openbabel/openbabel/issues/647#issuecomment-281778976:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=850620; Originator: YES. I note that the conversion proceeds much better (perhaps even perfectly) if I first unset BABEL_DATADIR (on Windows). Setting BABEL_DATADIR is required for using FP3 from Python. However, something has gone wrong since the last release of OB and OBPython. It seems that OB cannot correctly read types.txt, nor patterns.txt, once you set BABEL_DATADIR. How do I know? Well, if I don't set BABEL_DATADIR, OB complains that it cannot find patterns.txt, but it correctly converts the MOL2 file in the Pybel test suite. If I set BABEL_DATADIR, it doesn't complain any longer about patterns.txt, but it cannot set any bits in the molecules (this exposed bug 1728410), nor can it correctly convert the MOL2 file in the Pybel test suite. This bug affects all users of OBPython1.0 (which sets BABEL_DATADIR) who are using the latest OpenBabelGUI. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/647#issuecomment-281778976
https://github.com/openbabel/openbabel/issues/647#issuecomment-281778976:553,Testability,test,test,553,"Logged In: YES ; user_id=850620; Originator: YES. I note that the conversion proceeds much better (perhaps even perfectly) if I first unset BABEL_DATADIR (on Windows). Setting BABEL_DATADIR is required for using FP3 from Python. However, something has gone wrong since the last release of OB and OBPython. It seems that OB cannot correctly read types.txt, nor patterns.txt, once you set BABEL_DATADIR. How do I know? Well, if I don't set BABEL_DATADIR, OB complains that it cannot find patterns.txt, but it correctly converts the MOL2 file in the Pybel test suite. If I set BABEL_DATADIR, it doesn't complain any longer about patterns.txt, but it cannot set any bits in the molecules (this exposed bug 1728410), nor can it correctly convert the MOL2 file in the Pybel test suite. This bug affects all users of OBPython1.0 (which sets BABEL_DATADIR) who are using the latest OpenBabelGUI. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/647#issuecomment-281778976
https://github.com/openbabel/openbabel/issues/647#issuecomment-281778976:768,Testability,test,test,768,"Logged In: YES ; user_id=850620; Originator: YES. I note that the conversion proceeds much better (perhaps even perfectly) if I first unset BABEL_DATADIR (on Windows). Setting BABEL_DATADIR is required for using FP3 from Python. However, something has gone wrong since the last release of OB and OBPython. It seems that OB cannot correctly read types.txt, nor patterns.txt, once you set BABEL_DATADIR. How do I know? Well, if I don't set BABEL_DATADIR, OB complains that it cannot find patterns.txt, but it correctly converts the MOL2 file in the Pybel test suite. If I set BABEL_DATADIR, it doesn't complain any longer about patterns.txt, but it cannot set any bits in the molecules (this exposed bug 1728410), nor can it correctly convert the MOL2 file in the Pybel test suite. This bug affects all users of OBPython1.0 (which sets BABEL_DATADIR) who are using the latest OpenBabelGUI. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/647#issuecomment-281778976
https://github.com/openbabel/openbabel/issues/647#issuecomment-281778978:0,Testability,Log,Logged,0,Logged In: YES ; user_id=850620; Originator: YES. File Added: moreoutput.zip. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/647#issuecomment-281778978
https://github.com/openbabel/openbabel/issues/647#issuecomment-281778979:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615; Originator: NO. If the env var BABEL_DATADIR is not set, a precompiled verision of the data is used, which I suppose is ok. With BABEL_DATADIR set, atomtyp.txt is parsed.; ; The parsing of this data file was written assuming it had UNIX line endings. With Windows files on Windows, a trailing \r appeared in some parsed items. (It may not work with old MAC data files also.) Maybe '\r' is the erroneous ^M that was seen. I've added \r to list of white space characters in tokenize() and the warnings I was getting writing to mol2 files have gone away and the mol2 output file is the same with BABEL_DATADIR set or not. I'm not qualified to comment on the other possible bugs on this ticket. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/647#issuecomment-281778979
https://github.com/openbabel/openbabel/issues/647#issuecomment-281778980:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=850620; Originator: YES. I'm marking this bug as pending. (1) I've eyeballed the MOL2 conversion and it looks very good, so no problems there. It was all a big red herring due to the issues with BABEL_DATADIR.; (2) Chris seems to have sorted the issues with \r (which appears to be the same as ^M). Great! I love it when a plan comes together. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/647#issuecomment-281778980
https://github.com/openbabel/openbabel/issues/647#issuecomment-281778982:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539; Originator: NO. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/647#issuecomment-281778982
https://github.com/openbabel/openbabel/issues/648#issuecomment-281778997:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615; Originator: NO. Now OBFingerprint::Tanimoto() returns 0.0 when no bits are set in HEAD revision 1967. Sloppy programming, I'm afraid. Set Pending. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/648#issuecomment-281778997
https://github.com/openbabel/openbabel/issues/648#issuecomment-281779000:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539; Originator: NO. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/648#issuecomment-281779000
https://github.com/openbabel/openbabel/issues/649#issuecomment-281779008:111,Availability,error,errors,111,"Logged In: YES ; user_id=1189615; Originator: NO. Rev1982 ignored characters<0 in ParseSmiles which had caused errors. The invalidsmiles test now works ok on Windows, but the zlib routines are not active in Windows and the error messages indicate that this is where the problem lies. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/649#issuecomment-281779008
https://github.com/openbabel/openbabel/issues/649#issuecomment-281779008:223,Availability,error,error,223,"Logged In: YES ; user_id=1189615; Originator: NO. Rev1982 ignored characters<0 in ParseSmiles which had caused errors. The invalidsmiles test now works ok on Windows, but the zlib routines are not active in Windows and the error messages indicate that this is where the problem lies. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/649#issuecomment-281779008
https://github.com/openbabel/openbabel/issues/649#issuecomment-281779008:180,Integrability,rout,routines,180,"Logged In: YES ; user_id=1189615; Originator: NO. Rev1982 ignored characters<0 in ParseSmiles which had caused errors. The invalidsmiles test now works ok on Windows, but the zlib routines are not active in Windows and the error messages indicate that this is where the problem lies. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/649#issuecomment-281779008
https://github.com/openbabel/openbabel/issues/649#issuecomment-281779008:229,Integrability,message,messages,229,"Logged In: YES ; user_id=1189615; Originator: NO. Rev1982 ignored characters<0 in ParseSmiles which had caused errors. The invalidsmiles test now works ok on Windows, but the zlib routines are not active in Windows and the error messages indicate that this is where the problem lies. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/649#issuecomment-281779008
https://github.com/openbabel/openbabel/issues/649#issuecomment-281779008:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615; Originator: NO. Rev1982 ignored characters<0 in ParseSmiles which had caused errors. The invalidsmiles test now works ok on Windows, but the zlib routines are not active in Windows and the error messages indicate that this is where the problem lies. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/649#issuecomment-281779008
https://github.com/openbabel/openbabel/issues/649#issuecomment-281779008:137,Testability,test,test,137,"Logged In: YES ; user_id=1189615; Originator: NO. Rev1982 ignored characters<0 in ParseSmiles which had caused errors. The invalidsmiles test now works ok on Windows, but the zlib routines are not active in Windows and the error messages indicate that this is where the problem lies. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/649#issuecomment-281779008
https://github.com/openbabel/openbabel/issues/649#issuecomment-281779009:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420; Originator: YES. This bug is fixed on the SVN trunk. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/649#issuecomment-281779009
https://github.com/openbabel/openbabel/issues/650#issuecomment-281779010:121,Security,hash,hash,121,"Logged In: NO . There's no semi-colon in the actual code snipet (sorry for poor copy-paste skills!):; .....; if (bond[i].hash); mol.AddBond(atom[bond[i].a].n,atom[bond[i].b].n,bond[i].type,OB_HASH_BOND);. else; mol.AddBond(atom[bond[i].a].n,atom[bond[i].b].n,bond[i].type);; ....; conv.WriteFile(&mol,""out.sdf"");; ..... Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779010
https://github.com/openbabel/openbabel/issues/650#issuecomment-281779010:0,Testability,Log,Logged,0,"Logged In: NO . There's no semi-colon in the actual code snipet (sorry for poor copy-paste skills!):; .....; if (bond[i].hash); mol.AddBond(atom[bond[i].a].n,atom[bond[i].b].n,bond[i].type,OB_HASH_BOND);. else; mol.AddBond(atom[bond[i].a].n,atom[bond[i].b].n,bond[i].type);; ....; conv.WriteFile(&mol,""out.sdf"");; ..... Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779010
https://github.com/openbabel/openbabel/issues/650#issuecomment-281779011:73,Security,hash,hash,73,"Logged In: YES ; user_id=1189615; Originator: NO. SDFormat outputs wedge/hash bonds only if the dimension of the molecule is 2. The default for a newly constructed OBMol is 3, so you need to call SetDimension(2). . However smiles format output does not seem to be recognizing OB_HASH_BOND in the case I tried. I'll look into this further. Canonical smiles (can format) works ok. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779011
https://github.com/openbabel/openbabel/issues/650#issuecomment-281779011:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615; Originator: NO. SDFormat outputs wedge/hash bonds only if the dimension of the molecule is 2. The default for a newly constructed OBMol is 3, so you need to call SetDimension(2). . However smiles format output does not seem to be recognizing OB_HASH_BOND in the case I tried. I'll look into this further. Canonical smiles (can format) works ok. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779011
https://github.com/openbabel/openbabel/issues/650#issuecomment-281779012:0,Testability,Log,Logged,0,"Logged In: NO . Great, this is already helpful !; I noticed it works in 2.1.x version, not in 2.0 though - not a showstopper, just something to note.; Also, I noticed that OB_HASH_BOND and OB_WEDGE_BOND flags seem to be interchanged - when I use; the former I get the wedge bond and vice-versa. Thank you,; Igor. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779012
https://github.com/openbabel/openbabel/issues/650#issuecomment-281779014:0,Testability,Log,Logged,0,Logged In: YES ; user_id=850620; Originator: NO. (Assigning to Geoff ... this is a follow-up from New Orleans ACS meeting). Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779014
https://github.com/openbabel/openbabel/issues/650#issuecomment-281779015:182,Security,hash,hash,182,"Logged In: YES ; user_id=21420; Originator: NO. What's the bug here? As Igor indicated, this works in 2.1 or later. It's not worth fixing this in 2.0.x. I'm surprised that the wedge/hash is switched in SDF output. Is this true in 2.2 as well?. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779015
https://github.com/openbabel/openbabel/issues/650#issuecomment-281779015:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. What's the bug here? As Igor indicated, this works in 2.1 or later. It's not worth fixing this in 2.0.x. I'm surprised that the wedge/hash is switched in SDF output. Is this true in 2.2 as well?. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779015
https://github.com/openbabel/openbabel/issues/650#issuecomment-281779016:90,Deployability,release,release,90,"Logged In: YES ; user_id=1871725; Originator: NO. SMI format does not have it even in 2.2 release.; CAN format has it but the normalization procedure often makes it difficult to compare the resulting SMILES with the structure one wanted to generate - e.g. the directions ""in"" and ""out"" of the screen are often reversed etc. For complicated structures it is sometimes very non-trivial to check if the stereochemistry; has been correctly assigned.; The best option (for me) would be to have regular SMILES (not normalized to canonical format) reflect the stereoinformation conveyed by the OB_HASH_BOND and OB_WEDGE_BOND flags. Original comment by: igor_filippov",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779016
https://github.com/openbabel/openbabel/issues/650#issuecomment-281779016:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1871725; Originator: NO. SMI format does not have it even in 2.2 release.; CAN format has it but the normalization procedure often makes it difficult to compare the resulting SMILES with the structure one wanted to generate - e.g. the directions ""in"" and ""out"" of the screen are often reversed etc. For complicated structures it is sometimes very non-trivial to check if the stereochemistry; has been correctly assigned.; The best option (for me) would be to have regular SMILES (not normalized to canonical format) reflect the stereoinformation conveyed by the OB_HASH_BOND and OB_WEDGE_BOND flags. Original comment by: igor_filippov",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779016
https://github.com/openbabel/openbabel/issues/650#issuecomment-281779017:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. Part of the effort to finalize 2.2 is a merger of the CAN and SMI formats for output. The SMI will use the newer (and less buggy) canonical output, but will not assign canonical ordering. This should finally solve this bug. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779017
https://github.com/openbabel/openbabel/issues/650#issuecomment-281779020:88,Deployability,release,release,88,"Logged In: YES ; user_id=1871725; Originator: NO. Oops, I meant 2.1.1 not 2.2 (as in - ""release after 2.1) !. Original comment by: igor_filippov",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779020
https://github.com/openbabel/openbabel/issues/650#issuecomment-281779020:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1871725; Originator: NO. Oops, I meant 2.1.1 not 2.2 (as in - ""release after 2.1) !. Original comment by: igor_filippov",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779020
https://github.com/openbabel/openbabel/issues/650#issuecomment-281779021:130,Security,access,access,130,"Logged In: YES ; user_id=21420; Originator: NO. This should now work in the SVN trunk (which will become 2.2). If you do not have access to this, I can send you a snapshot. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779021
https://github.com/openbabel/openbabel/issues/650#issuecomment-281779021:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. This should now work in the SVN trunk (which will become 2.2). If you do not have access to this, I can send you a snapshot. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779021
https://github.com/openbabel/openbabel/issues/650#issuecomment-281779022:243,Availability,fault,fault,243,"Logged In: YES ; user_id=1871725; Originator: NO. I tried it with the svn snapshot today, however I get segfault when running OSRA; compiled with this version of openbabel. This is the backtrace:; Program received signal SIGSEGV, Segmentation fault.; [Switching to Thread -1208826112 (LWP 24112)]; 0x008b5740 in freelocale () from /lib/libc.so.6; Missing separate debuginfos, use: debuginfo-install ImageMagick.i386 bzip2.i386 expat.i386 fontconfig.i386 freetype.i386 gcc.i386 glibc.i386 lcms.i386 libICE.i386 libSM.i386 libX11.i386 libXau.i386 libXdmcp.i386 libXext.i386 libXt.i386 libjpeg.i386 libtiff.i386 libxcb.i386 libxml2.i386 netpbm.i386 zlib.i386; (gdb) bt; #0 0x008b5740 in freelocale () from /lib/libc.so.6; #1 0x004f98d8 in OpenBabel::OBGlobalDataBase::Init (this=0x645a40); at data.cpp:928; #2 0x004faa88 in OpenBabel::OBTypeTable::GetFromType (this=0x645a40); at data.cpp:607; #3 0x004db7e5 in OpenBabel::OBAtom::GetType (this=0x8fb2a18) at atom.cpp:463; #4 0x004dba13 in OpenBabel::OBAtom::operator= (this=0x8fb2aa0, src=@0x8fb2a18); at atom.cpp:159; #5 0x00537ec4 in OpenBabel::OBMol::AddAtom (this=0xbfb63260, atom=@0x8fb2a18); at mol.cpp:1560; #6 0x080ae2d1 in get_smiles (atom=0xbfbe262c, real_atoms=28, bond=0xbfc7ea2c, ; n_bond=354, rotors=@0xbfb63420, confidence=@0xbfb633e8, ; num_fragments=@0xbfb63418, r56=@0xbfb63410, avg=45.187128051905447); at osra_openbabel.cpp:577; #7 0x0805d858 in resolve_bridge_bonds (atom=0xbfbe262c, n_atom=690, ; bond=0xbfc7ea2c, n_bond=354, thickness=4, real_atoms=@0xbfcb9fbc, ; avg=45.187128051905447) at osra.cpp:2568; #8 0x080626b1 in main (argc=2, argv=0xbfcba1e4) at osra.cpp:4082. Original comment by: igor_filippov",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779022
https://github.com/openbabel/openbabel/issues/650#issuecomment-281779022:391,Deployability,install,install,391,"Logged In: YES ; user_id=1871725; Originator: NO. I tried it with the svn snapshot today, however I get segfault when running OSRA; compiled with this version of openbabel. This is the backtrace:; Program received signal SIGSEGV, Segmentation fault.; [Switching to Thread -1208826112 (LWP 24112)]; 0x008b5740 in freelocale () from /lib/libc.so.6; Missing separate debuginfos, use: debuginfo-install ImageMagick.i386 bzip2.i386 expat.i386 fontconfig.i386 freetype.i386 gcc.i386 glibc.i386 lcms.i386 libICE.i386 libSM.i386 libX11.i386 libXau.i386 libXdmcp.i386 libXext.i386 libXt.i386 libjpeg.i386 libtiff.i386 libxcb.i386 libxml2.i386 netpbm.i386 zlib.i386; (gdb) bt; #0 0x008b5740 in freelocale () from /lib/libc.so.6; #1 0x004f98d8 in OpenBabel::OBGlobalDataBase::Init (this=0x645a40); at data.cpp:928; #2 0x004faa88 in OpenBabel::OBTypeTable::GetFromType (this=0x645a40); at data.cpp:607; #3 0x004db7e5 in OpenBabel::OBAtom::GetType (this=0x8fb2a18) at atom.cpp:463; #4 0x004dba13 in OpenBabel::OBAtom::operator= (this=0x8fb2aa0, src=@0x8fb2a18); at atom.cpp:159; #5 0x00537ec4 in OpenBabel::OBMol::AddAtom (this=0xbfb63260, atom=@0x8fb2a18); at mol.cpp:1560; #6 0x080ae2d1 in get_smiles (atom=0xbfbe262c, real_atoms=28, bond=0xbfc7ea2c, ; n_bond=354, rotors=@0xbfb63420, confidence=@0xbfb633e8, ; num_fragments=@0xbfb63418, r56=@0xbfb63410, avg=45.187128051905447); at osra_openbabel.cpp:577; #7 0x0805d858 in resolve_bridge_bonds (atom=0xbfbe262c, n_atom=690, ; bond=0xbfc7ea2c, n_bond=354, thickness=4, real_atoms=@0xbfcb9fbc, ; avg=45.187128051905447) at osra.cpp:2568; #8 0x080626b1 in main (argc=2, argv=0xbfcba1e4) at osra.cpp:4082. Original comment by: igor_filippov",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779022
https://github.com/openbabel/openbabel/issues/650#issuecomment-281779022:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1871725; Originator: NO. I tried it with the svn snapshot today, however I get segfault when running OSRA; compiled with this version of openbabel. This is the backtrace:; Program received signal SIGSEGV, Segmentation fault.; [Switching to Thread -1208826112 (LWP 24112)]; 0x008b5740 in freelocale () from /lib/libc.so.6; Missing separate debuginfos, use: debuginfo-install ImageMagick.i386 bzip2.i386 expat.i386 fontconfig.i386 freetype.i386 gcc.i386 glibc.i386 lcms.i386 libICE.i386 libSM.i386 libX11.i386 libXau.i386 libXdmcp.i386 libXext.i386 libXt.i386 libjpeg.i386 libtiff.i386 libxcb.i386 libxml2.i386 netpbm.i386 zlib.i386; (gdb) bt; #0 0x008b5740 in freelocale () from /lib/libc.so.6; #1 0x004f98d8 in OpenBabel::OBGlobalDataBase::Init (this=0x645a40); at data.cpp:928; #2 0x004faa88 in OpenBabel::OBTypeTable::GetFromType (this=0x645a40); at data.cpp:607; #3 0x004db7e5 in OpenBabel::OBAtom::GetType (this=0x8fb2a18) at atom.cpp:463; #4 0x004dba13 in OpenBabel::OBAtom::operator= (this=0x8fb2aa0, src=@0x8fb2a18); at atom.cpp:159; #5 0x00537ec4 in OpenBabel::OBMol::AddAtom (this=0xbfb63260, atom=@0x8fb2a18); at mol.cpp:1560; #6 0x080ae2d1 in get_smiles (atom=0xbfbe262c, real_atoms=28, bond=0xbfc7ea2c, ; n_bond=354, rotors=@0xbfb63420, confidence=@0xbfb633e8, ; num_fragments=@0xbfb63418, r56=@0xbfb63410, avg=45.187128051905447); at osra_openbabel.cpp:577; #7 0x0805d858 in resolve_bridge_bonds (atom=0xbfbe262c, n_atom=690, ; bond=0xbfc7ea2c, n_bond=354, thickness=4, real_atoms=@0xbfcb9fbc, ; avg=45.187128051905447) at osra.cpp:2568; #8 0x080626b1 in main (argc=2, argv=0xbfcba1e4) at osra.cpp:4082. Original comment by: igor_filippov",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779022
https://github.com/openbabel/openbabel/issues/650#issuecomment-281779024:52,Availability,error,error,52,"Logged In: YES ; user_id=21420; Originator: NO. The error with the SVN snapshot was unrelated, but I appreciate the freelocale bug report too. This appears to be widespread, so I changed the implementation. Please let me know if the SVN trunk fixes your OB_HASH_BOND problem. Thanks!. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779024
https://github.com/openbabel/openbabel/issues/650#issuecomment-281779024:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. The error with the SVN snapshot was unrelated, but I appreciate the freelocale bug report too. This appears to be widespread, so I changed the implementation. Please let me know if the SVN trunk fixes your OB_HASH_BOND problem. Thanks!. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779024
https://github.com/openbabel/openbabel/issues/650#issuecomment-281779026:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1871725; Originator: NO. ""SMI"" format now has stereochemistry! Thank you.; The ""in"" and ""out"" of screen directions still look reversed to me, but that could be just ; my perception problem. Original comment by: igor_filippov",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779026
https://github.com/openbabel/openbabel/issues/651#issuecomment-281779033:0,Testability,Log,Logged,0,Logged In: YES ; user_id=1260158; Originator: NO. Sorry - forgot to log in when I submitted this and thought I'd have the chance to amend the details. I should have mentioned that my name is Jens Thomas and email is j.m.h.thomas@dl.ac.uk. Original comment by: jensthomas,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/651#issuecomment-281779033
https://github.com/openbabel/openbabel/issues/651#issuecomment-281779033:68,Testability,log,log,68,Logged In: YES ; user_id=1260158; Originator: NO. Sorry - forgot to log in when I submitted this and thought I'd have the chance to amend the details. I should have mentioned that my name is Jens Thomas and email is j.m.h.thomas@dl.ac.uk. Original comment by: jensthomas,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/651#issuecomment-281779033
https://github.com/openbabel/openbabel/issues/651#issuecomment-281779035:390,Deployability,release,release,390,"Logged In: YES ; user_id=21420; Originator: NO. This is present in pretty much every quantum chemistry file format as well: GAMESS, MPQC, MOPAC... I believe I fixed all of them by adding in a test if the molecule has 0 atoms -- in these formats, that's invalid, so the format will return false. This is now fixed in the 2.1 branch, as of revision 1999 or later and will appear in the 2.1.1 release shortly. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/651#issuecomment-281779035
https://github.com/openbabel/openbabel/issues/651#issuecomment-281779035:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. This is present in pretty much every quantum chemistry file format as well: GAMESS, MPQC, MOPAC... I believe I fixed all of them by adding in a test if the molecule has 0 atoms -- in these formats, that's invalid, so the format will return false. This is now fixed in the 2.1 branch, as of revision 1999 or later and will appear in the 2.1.1 release shortly. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/651#issuecomment-281779035
https://github.com/openbabel/openbabel/issues/651#issuecomment-281779035:192,Testability,test,test,192,"Logged In: YES ; user_id=21420; Originator: NO. This is present in pretty much every quantum chemistry file format as well: GAMESS, MPQC, MOPAC... I believe I fixed all of them by adding in a test if the molecule has 0 atoms -- in these formats, that's invalid, so the format will return false. This is now fixed in the 2.1 branch, as of revision 1999 or later and will appear in the 2.1.1 release shortly. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/651#issuecomment-281779035
https://github.com/openbabel/openbabel/issues/1484#issuecomment-281810717:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=850620; Originator: NO. There's too much info already. I'd like to see something like the help system of svn:; svn help; svn help commit. Which equates to:; babel --help (or -H); babel --help formats (or babel -H formats); babel --help SMI; babel --help convert; babel --help filter; and so on, the more the merrier. The only manual users read is probably babel --help, so if it's not in there, it doesn't exist. Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1484#issuecomment-281810717
https://github.com/openbabel/openbabel/issues/1484#issuecomment-281810718:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. I'm converting this to a feature request. I think Noel's comment is useful, but this is going to take some work. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1484#issuecomment-281810718
https://github.com/openbabel/openbabel/issues/652#issuecomment-281779039:0,Testability,Log,Logged,0,Logged In: YES ; user_id=1189615; Originator: NO. $END$ wasn't being recognizing as the same as $END. Fixed in 2.1.x. Example file doesn't crash. Closed.; . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/652#issuecomment-281779039
https://github.com/openbabel/openbabel/issues/652#issuecomment-281779041:0,Testability,Log,Logged,0,Logged In: YES ; user_id=1818755; Originator: YES. There is another problem reading GAMESS-files.; Take this one (from: www.cscs.ch/molekel - see the data-folder:GAMESS_TS-ifolow.log):. INPUT CARD> $CONTRL SCFTYP=RHF MPLEVL=0 RUNTYP=SADPOINT EXETYP=RUN ECP=READ ; INPUT CARD> ICHARG=3 MULT=1 COORD=UNIQUE UNITS=ANGS MAXIT=200 molplt=.t. $END ; INPUT CARD> $SCF dirscf=.f. extrap=.t. damp=.t. shift=.t. dem=.t. rstrct=.t. ; INPUT CARD> diis=.t. soscf=.f. $END ; INPUT CARD> $SYSTEM TIMLIM=700 MEMORY=100000000 $END ; INPUT CARD> $STATPT nstep=60 opttol=1.e-4 dxmax=0.1 hess=read purify=.t. ; INPUT CARD> ifolow=1 npun=1 $END ; INPUT CARD> $ECP . crashes the WINDOWS-Version. If modified to:; INPUT CARD> $CONTRL SCFTYP=RHF MPLEVL=0 RUNTYP=SADPOINT EXETYP=RUN ECP=READ $END ; INPUT CARD> $ICHARG=3 MULT=1 COORD=UNIQUE UNITS=ANGS MAXIT=200 molplt=.t. $END ; INPUT CARD> $SCF dirscf=.f. extrap=.t. damp=.t. shift=.t. dem=.t. rstrct=.t. diis=.t. soscf=.f. $END ; INPUT CARD> $SYSTEM TIMLIM=700 MEMORY=100000000 $END ; INPUT CARD> $STATPT nstep=60 opttol=1.e-4 dxmax=0.1 hess=read purify=.t. ifolow=1 npun=1 $END ; INPUT CARD> $ECP . OpenBabel works fine. . Original comment by: yodah134,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/652#issuecomment-281779041
https://github.com/openbabel/openbabel/issues/652#issuecomment-281779041:179,Testability,log,log,179,Logged In: YES ; user_id=1818755; Originator: YES. There is another problem reading GAMESS-files.; Take this one (from: www.cscs.ch/molekel - see the data-folder:GAMESS_TS-ifolow.log):. INPUT CARD> $CONTRL SCFTYP=RHF MPLEVL=0 RUNTYP=SADPOINT EXETYP=RUN ECP=READ ; INPUT CARD> ICHARG=3 MULT=1 COORD=UNIQUE UNITS=ANGS MAXIT=200 molplt=.t. $END ; INPUT CARD> $SCF dirscf=.f. extrap=.t. damp=.t. shift=.t. dem=.t. rstrct=.t. ; INPUT CARD> diis=.t. soscf=.f. $END ; INPUT CARD> $SYSTEM TIMLIM=700 MEMORY=100000000 $END ; INPUT CARD> $STATPT nstep=60 opttol=1.e-4 dxmax=0.1 hess=read purify=.t. ; INPUT CARD> ifolow=1 npun=1 $END ; INPUT CARD> $ECP . crashes the WINDOWS-Version. If modified to:; INPUT CARD> $CONTRL SCFTYP=RHF MPLEVL=0 RUNTYP=SADPOINT EXETYP=RUN ECP=READ $END ; INPUT CARD> $ICHARG=3 MULT=1 COORD=UNIQUE UNITS=ANGS MAXIT=200 molplt=.t. $END ; INPUT CARD> $SCF dirscf=.f. extrap=.t. damp=.t. shift=.t. dem=.t. rstrct=.t. diis=.t. soscf=.f. $END ; INPUT CARD> $SYSTEM TIMLIM=700 MEMORY=100000000 $END ; INPUT CARD> $STATPT nstep=60 opttol=1.e-4 dxmax=0.1 hess=read purify=.t. ifolow=1 npun=1 $END ; INPUT CARD> $ECP . OpenBabel works fine. . Original comment by: yodah134,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/652#issuecomment-281779041
https://github.com/openbabel/openbabel/issues/652#issuecomment-281779043:326,Deployability,update,updated,326,"Logged In: YES ; user_id=1189615; Originator: NO. The second problem is also to do with the parsing of INPUT CARD lines. With the modified version of gamessformat.cpp in 2.1.x I don't have any problem. (Since I couldn't find the complete gam file, I just pasted in the lines below which caused the crashes.) Are you using the updated gamessformat.cpp?. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/652#issuecomment-281779043
https://github.com/openbabel/openbabel/issues/652#issuecomment-281779043:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615; Originator: NO. The second problem is also to do with the parsing of INPUT CARD lines. With the modified version of gamessformat.cpp in 2.1.x I don't have any problem. (Since I couldn't find the complete gam file, I just pasted in the lines below which caused the crashes.) Are you using the updated gamessformat.cpp?. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/652#issuecomment-281779043
https://github.com/openbabel/openbabel/issues/652#issuecomment-281779046:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. I'm closing this bug report. Let's try to keep each report to one and only one issue. Since this is a public bug database, others do take a look at what's been fixed -- so it's important to keep things separate. We clearly fixed the first report, which will be in 2.1.1. The second report works for me with the 2.1.1 code. If you have another GAMESS issue, please submit a new bug report and we'll fix it ASAP. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/652#issuecomment-281779046
https://github.com/openbabel/openbabel/issues/652#issuecomment-281779046:263,Usability,clear,clearly,263,"Logged In: YES ; user_id=21420; Originator: NO. I'm closing this bug report. Let's try to keep each report to one and only one issue. Since this is a public bug database, others do take a look at what's been fixed -- so it's important to keep things separate. We clearly fixed the first report, which will be in 2.1.1. The second report works for me with the 2.1.1 code. If you have another GAMESS issue, please submit a new bug report and we'll fix it ASAP. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/652#issuecomment-281779046
https://github.com/openbabel/openbabel/issues/653#issuecomment-281779052:0,Testability,Log,Logged,0,Logged In: YES ; user_id=1189615; Originator: YES. Fixed in SVN v2.1.x. The example file has been replaced by one with two molecule with specified and and one with unspecified chirality. Now seems to work as expected:; CC(O)CC	2-butanol chirality unspecified; C[C@@H](O)(CC)	2-butanol one enantiomer; C[C@H](O)(CC)	2-butanol the other enantiomer. File Added: Butanol2D3mols.sdf. Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/653#issuecomment-281779052
https://github.com/openbabel/openbabel/issues/653#issuecomment-281779058:0,Testability,Log,Logged,0,Logged In: YES ; user_id=1189615; Originator: YES. Closed. Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/653#issuecomment-281779058
https://github.com/openbabel/openbabel/issues/654#issuecomment-281779064:76,Deployability,release,release,76,"Logged In: YES ; user_id=850620; Originator: NO. Verified with latest pybel release. The problem is reading the MOL2 file, not writing the xyz file. The file looks fine, compared to the sample MOL2 file at http://www.tripos.com/mol2/mol2_format3.html. Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/654#issuecomment-281779064
https://github.com/openbabel/openbabel/issues/654#issuecomment-281779064:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=850620; Originator: NO. Verified with latest pybel release. The problem is reading the MOL2 file, not writing the xyz file. The file looks fine, compared to the sample MOL2 file at http://www.tripos.com/mol2/mol2_format3.html. Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/654#issuecomment-281779064
https://github.com/openbabel/openbabel/issues/654#issuecomment-281779065:325,Deployability,release,release,325,"Logged In: YES ; user_id=21420; Originator: NO. No, this isn't a good MOL2 file. There aren't any atom types. I'm not sure why we don't have a default oxygen type for this kind of behavior, but any native Mol2 file (or one from Open Babel) will have C.ar or C.3, etc. in the final column. This should now be fixed in the 2.1 release branch for 2.1.1, SVN revision 1989 or later. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/654#issuecomment-281779065
https://github.com/openbabel/openbabel/issues/654#issuecomment-281779065:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. No, this isn't a good MOL2 file. There aren't any atom types. I'm not sure why we don't have a default oxygen type for this kind of behavior, but any native Mol2 file (or one from Open Babel) will have C.ar or C.3, etc. in the final column. This should now be fixed in the 2.1 release branch for 2.1.1, SVN revision 1989 or later. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/654#issuecomment-281779065
https://github.com/openbabel/openbabel/issues/655#issuecomment-281779080:0,Testability,Log,Logged,0,Logged In: YES ; user_id=850620; Originator: NO. Does this solve it?. http://www.nabble.com/Python-bindings-on-amd64-Linux-tf2574974.html#a7186560. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/655#issuecomment-281779080
https://github.com/openbabel/openbabel/issues/655#issuecomment-281779081:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1514341; Originator: YES. That hack solved it. Thanks!. ==snippet==; modify openbabel.py to resemble:; import sys; if sys.platform.find(""linux"") != -1:; #import dl; sys.setdlopenflags(sys.getdlopenflags() | 0x100) . Original comment by: theoryno3",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/655#issuecomment-281779081
https://github.com/openbabel/openbabel/issues/655#issuecomment-281779083:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=850620; Originator: NO. Fixed in SVN trunk r2077. Workaround for the user is to replace; ""import dl""; with; ""import DLFCN as dl"". Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/655#issuecomment-281779083
https://github.com/openbabel/openbabel/issues/656#issuecomment-281779089:163,Deployability,release,release,163,Logged In: YES ; user_id=21420; Originator: NO. This is a duplicate bug report of 1720529. This bug is fixed in the 2.1.x branch and will be in the 2.1.1 upcoming release. The patch is found here:; http://openbabel.svn.sourceforge.net/viewvc/openbabel/openbabel/branches/openbabel-2-1-x/src/formats/inchiformat.cpp?r1=1893&r2=1933. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/656#issuecomment-281779089
https://github.com/openbabel/openbabel/issues/656#issuecomment-281779089:176,Deployability,patch,patch,176,Logged In: YES ; user_id=21420; Originator: NO. This is a duplicate bug report of 1720529. This bug is fixed in the 2.1.x branch and will be in the 2.1.1 upcoming release. The patch is found here:; http://openbabel.svn.sourceforge.net/viewvc/openbabel/openbabel/branches/openbabel-2-1-x/src/formats/inchiformat.cpp?r1=1893&r2=1933. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/656#issuecomment-281779089
https://github.com/openbabel/openbabel/issues/656#issuecomment-281779089:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420; Originator: NO. This is a duplicate bug report of 1720529. This bug is fixed in the 2.1.x branch and will be in the 2.1.1 upcoming release. The patch is found here:; http://openbabel.svn.sourceforge.net/viewvc/openbabel/openbabel/branches/openbabel-2-1-x/src/formats/inchiformat.cpp?r1=1893&r2=1933. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/656#issuecomment-281779089
https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810737:531,Availability,reliab,reliability,531,"Logged In: YES ; user_id=1557018; Originator: NO. This is for 3x3 fixed-size matrices. So there's nothing to gain from multithreading (the size is too small). It is very important to use fixed-size matrices in order to avoid dynamic memory allocations and unroll loops; most scientific libraries focus on dynamic-size matrices instead. Using dynamic-size matrices would divide the speed by a factor of 10 at least. OpenBabel's matrix code now has pretty extensive unit-tests so I don't think there's much to improve in the area of reliability. As to vectorization, it might indeed improve speed, I don't know (3x3 might be a too small size, and isn't a power of two, so it isn't clear to me that vectorization will help). Just FYI, someone offered to add vectorized codepaths to Eigen. Also keep in mind that currently OpenBabel gains much from the inlining of small math functions. This is only possible with either a builtin math lib (like OpenBabel currently has) or a template lib. I don't think that a binary lib could compete with that, for the kind of small fixed-size matrices that OB is using. Original comment by: benoitjacob",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810737
https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810737:653,Energy Efficiency,power,power,653,"Logged In: YES ; user_id=1557018; Originator: NO. This is for 3x3 fixed-size matrices. So there's nothing to gain from multithreading (the size is too small). It is very important to use fixed-size matrices in order to avoid dynamic memory allocations and unroll loops; most scientific libraries focus on dynamic-size matrices instead. Using dynamic-size matrices would divide the speed by a factor of 10 at least. OpenBabel's matrix code now has pretty extensive unit-tests so I don't think there's much to improve in the area of reliability. As to vectorization, it might indeed improve speed, I don't know (3x3 might be a too small size, and isn't a power of two, so it isn't clear to me that vectorization will help). Just FYI, someone offered to add vectorized codepaths to Eigen. Also keep in mind that currently OpenBabel gains much from the inlining of small math functions. This is only possible with either a builtin math lib (like OpenBabel currently has) or a template lib. I don't think that a binary lib could compete with that, for the kind of small fixed-size matrices that OB is using. Original comment by: benoitjacob",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810737
https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810737:219,Safety,avoid,avoid,219,"Logged In: YES ; user_id=1557018; Originator: NO. This is for 3x3 fixed-size matrices. So there's nothing to gain from multithreading (the size is too small). It is very important to use fixed-size matrices in order to avoid dynamic memory allocations and unroll loops; most scientific libraries focus on dynamic-size matrices instead. Using dynamic-size matrices would divide the speed by a factor of 10 at least. OpenBabel's matrix code now has pretty extensive unit-tests so I don't think there's much to improve in the area of reliability. As to vectorization, it might indeed improve speed, I don't know (3x3 might be a too small size, and isn't a power of two, so it isn't clear to me that vectorization will help). Just FYI, someone offered to add vectorized codepaths to Eigen. Also keep in mind that currently OpenBabel gains much from the inlining of small math functions. This is only possible with either a builtin math lib (like OpenBabel currently has) or a template lib. I don't think that a binary lib could compete with that, for the kind of small fixed-size matrices that OB is using. Original comment by: benoitjacob",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810737
https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810737:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1557018; Originator: NO. This is for 3x3 fixed-size matrices. So there's nothing to gain from multithreading (the size is too small). It is very important to use fixed-size matrices in order to avoid dynamic memory allocations and unroll loops; most scientific libraries focus on dynamic-size matrices instead. Using dynamic-size matrices would divide the speed by a factor of 10 at least. OpenBabel's matrix code now has pretty extensive unit-tests so I don't think there's much to improve in the area of reliability. As to vectorization, it might indeed improve speed, I don't know (3x3 might be a too small size, and isn't a power of two, so it isn't clear to me that vectorization will help). Just FYI, someone offered to add vectorized codepaths to Eigen. Also keep in mind that currently OpenBabel gains much from the inlining of small math functions. This is only possible with either a builtin math lib (like OpenBabel currently has) or a template lib. I don't think that a binary lib could compete with that, for the kind of small fixed-size matrices that OB is using. Original comment by: benoitjacob",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810737
https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810737:469,Testability,test,tests,469,"Logged In: YES ; user_id=1557018; Originator: NO. This is for 3x3 fixed-size matrices. So there's nothing to gain from multithreading (the size is too small). It is very important to use fixed-size matrices in order to avoid dynamic memory allocations and unroll loops; most scientific libraries focus on dynamic-size matrices instead. Using dynamic-size matrices would divide the speed by a factor of 10 at least. OpenBabel's matrix code now has pretty extensive unit-tests so I don't think there's much to improve in the area of reliability. As to vectorization, it might indeed improve speed, I don't know (3x3 might be a too small size, and isn't a power of two, so it isn't clear to me that vectorization will help). Just FYI, someone offered to add vectorized codepaths to Eigen. Also keep in mind that currently OpenBabel gains much from the inlining of small math functions. This is only possible with either a builtin math lib (like OpenBabel currently has) or a template lib. I don't think that a binary lib could compete with that, for the kind of small fixed-size matrices that OB is using. Original comment by: benoitjacob",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810737
https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810737:679,Usability,clear,clear,679,"Logged In: YES ; user_id=1557018; Originator: NO. This is for 3x3 fixed-size matrices. So there's nothing to gain from multithreading (the size is too small). It is very important to use fixed-size matrices in order to avoid dynamic memory allocations and unroll loops; most scientific libraries focus on dynamic-size matrices instead. Using dynamic-size matrices would divide the speed by a factor of 10 at least. OpenBabel's matrix code now has pretty extensive unit-tests so I don't think there's much to improve in the area of reliability. As to vectorization, it might indeed improve speed, I don't know (3x3 might be a too small size, and isn't a power of two, so it isn't clear to me that vectorization will help). Just FYI, someone offered to add vectorized codepaths to Eigen. Also keep in mind that currently OpenBabel gains much from the inlining of small math functions. This is only possible with either a builtin math lib (like OpenBabel currently has) or a template lib. I don't think that a binary lib could compete with that, for the kind of small fixed-size matrices that OB is using. Original comment by: benoitjacob",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810737
https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810738:609,Integrability,rout,routines,609,"Logged In: YES ; user_id=21420; Originator: YES. I'm not actually referring to the code in math/matrix3x3.cpp. This is already quite fast and as you said, unlikely to improve too much. I'm referring to matrix.cpp, which is used for dynamic-sized matrix math in chiral.cpp, for example:; bool invert_matrix(std::vector<std::vector<double> > &mat, double &det); bool invert_matrix_f(double *mat, double &det, int rows, int cols); bool invert_matrix_ff(double **mat, double &det, int rows, int cols). I don't actually know how much using BLAS will help here, as you say. But in some larger molecules, the chiral routines actually take a significant amount of time. There also has been requests for dynamic-sized matrix routines (including inversion) for force field optimization and vibrational matrices, which can be fairly large (e.g., ~3N where N is the number of atoms). Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810738
https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810738:716,Integrability,rout,routines,716,"Logged In: YES ; user_id=21420; Originator: YES. I'm not actually referring to the code in math/matrix3x3.cpp. This is already quite fast and as you said, unlikely to improve too much. I'm referring to matrix.cpp, which is used for dynamic-sized matrix math in chiral.cpp, for example:; bool invert_matrix(std::vector<std::vector<double> > &mat, double &det); bool invert_matrix_f(double *mat, double &det, int rows, int cols); bool invert_matrix_ff(double **mat, double &det, int rows, int cols). I don't actually know how much using BLAS will help here, as you say. But in some larger molecules, the chiral routines actually take a significant amount of time. There also has been requests for dynamic-sized matrix routines (including inversion) for force field optimization and vibrational matrices, which can be fairly large (e.g., ~3N where N is the number of atoms). Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810738
https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810738:763,Performance,optimiz,optimization,763,"Logged In: YES ; user_id=21420; Originator: YES. I'm not actually referring to the code in math/matrix3x3.cpp. This is already quite fast and as you said, unlikely to improve too much. I'm referring to matrix.cpp, which is used for dynamic-sized matrix math in chiral.cpp, for example:; bool invert_matrix(std::vector<std::vector<double> > &mat, double &det); bool invert_matrix_f(double *mat, double &det, int rows, int cols); bool invert_matrix_ff(double **mat, double &det, int rows, int cols). I don't actually know how much using BLAS will help here, as you say. But in some larger molecules, the chiral routines actually take a significant amount of time. There also has been requests for dynamic-sized matrix routines (including inversion) for force field optimization and vibrational matrices, which can be fairly large (e.g., ~3N where N is the number of atoms). Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810738
https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810738:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: YES. I'm not actually referring to the code in math/matrix3x3.cpp. This is already quite fast and as you said, unlikely to improve too much. I'm referring to matrix.cpp, which is used for dynamic-sized matrix math in chiral.cpp, for example:; bool invert_matrix(std::vector<std::vector<double> > &mat, double &det); bool invert_matrix_f(double *mat, double &det, int rows, int cols); bool invert_matrix_ff(double **mat, double &det, int rows, int cols). I don't actually know how much using BLAS will help here, as you say. But in some larger molecules, the chiral routines actually take a significant amount of time. There also has been requests for dynamic-sized matrix routines (including inversion) for force field optimization and vibrational matrices, which can be fairly large (e.g., ~3N where N is the number of atoms). Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810738
https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810740:347,Performance,optimiz,optimization,347,"Logged In: YES ; user_id=1557018; Originator: NO. > I'm referring to matrix.cpp,. Oh right, OK. Yes, I agree this could benefit from e.g. multithreading. Just one remark: how sparse are the matrices that you want to run those algorithms on? If they are e.g. adjacency matrices of graphs, then they are probably very sparse, in which case the main optimization to make is to use a sparse matrices library. Original comment by: benoitjacob",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810740
https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810740:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1557018; Originator: NO. > I'm referring to matrix.cpp,. Oh right, OK. Yes, I agree this could benefit from e.g. multithreading. Just one remark: how sparse are the matrices that you want to run those algorithms on? If they are e.g. adjacency matrices of graphs, then they are probably very sparse, in which case the main optimization to make is to use a sparse matrices library. Original comment by: benoitjacob",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810740
https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810741:79,Performance,tune,tuned,79,"This can actually be closed -- we'll be using Eigen2, which is also now highly tuned and vectorized... :-). Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810741
https://github.com/openbabel/openbabel/issues/657#issuecomment-281779098:390,Availability,error,error,390,"Logged In: YES ; user_id=21420; Originator: NO. For reference:; Original InChI:; InChI=1/C16H21NO2/c1-12(2)17-10-14(18)11-19-16-9-5-7-13-6-3-4-8-15(13)16/h3-9,12,14,17-18H,10-11H2,1-2H3/t14-/m1/s1. Translated SMILES:; CC(C)NC[C@@H](COc1cccc2ccccc12)O. Final InChI:; InChI=1/C16H21NO2/c1-12(2)17-10-14(18)11-19-16-9-5-7-13-6-3-4-8-15(13)16/h3-9,12,14,17-18H,10-11H2,1-2H3/t14-/m0/s1. So the error appears to be on the side of reading the InChI. The error is in the SMILES -- the output from SMILES to InChI matches correct stereochemistry. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/657#issuecomment-281779098
https://github.com/openbabel/openbabel/issues/657#issuecomment-281779098:448,Availability,error,error,448,"Logged In: YES ; user_id=21420; Originator: NO. For reference:; Original InChI:; InChI=1/C16H21NO2/c1-12(2)17-10-14(18)11-19-16-9-5-7-13-6-3-4-8-15(13)16/h3-9,12,14,17-18H,10-11H2,1-2H3/t14-/m1/s1. Translated SMILES:; CC(C)NC[C@@H](COc1cccc2ccccc12)O. Final InChI:; InChI=1/C16H21NO2/c1-12(2)17-10-14(18)11-19-16-9-5-7-13-6-3-4-8-15(13)16/h3-9,12,14,17-18H,10-11H2,1-2H3/t14-/m0/s1. So the error appears to be on the side of reading the InChI. The error is in the SMILES -- the output from SMILES to InChI matches correct stereochemistry. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/657#issuecomment-281779098
https://github.com/openbabel/openbabel/issues/657#issuecomment-281779098:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. For reference:; Original InChI:; InChI=1/C16H21NO2/c1-12(2)17-10-14(18)11-19-16-9-5-7-13-6-3-4-8-15(13)16/h3-9,12,14,17-18H,10-11H2,1-2H3/t14-/m1/s1. Translated SMILES:; CC(C)NC[C@@H](COc1cccc2ccccc12)O. Final InChI:; InChI=1/C16H21NO2/c1-12(2)17-10-14(18)11-19-16-9-5-7-13-6-3-4-8-15(13)16/h3-9,12,14,17-18H,10-11H2,1-2H3/t14-/m0/s1. So the error appears to be on the side of reading the InChI. The error is in the SMILES -- the output from SMILES to InChI matches correct stereochemistry. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/657#issuecomment-281779098
https://github.com/openbabel/openbabel/issues/658#issuecomment-281779118:0,Testability,Log,Logged,0,"Logged In: NO . This happens quite commonly, actually for nearly 25% of the smiles strings i try to convert . Nc1ccc(cc1)OCC(O)C[n+]1ccccc1. john_sullivan@hms.harvard.edu. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/658#issuecomment-281779118
https://github.com/openbabel/openbabel/issues/658#issuecomment-281779119:125,Deployability,release,release,125,"Logged In: YES ; user_id=21420; Originator: NO. This is a duplicate report and has been fixed in the 2.1 SVN code. The 2.1.1 release will come out shortly. In the meantime, I suggest trying the 2.1.1 snapshot:. http://sourceforge.net/project/showfiles.php?group_id=40728&package_id=154019&release_id=519286. I can confirm that these SMILES translate perfectly in the 2.1.1 development code. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/658#issuecomment-281779119
https://github.com/openbabel/openbabel/issues/658#issuecomment-281779119:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. This is a duplicate report and has been fixed in the 2.1 SVN code. The 2.1.1 release will come out shortly. In the meantime, I suggest trying the 2.1.1 snapshot:. http://sourceforge.net/project/showfiles.php?group_id=40728&package_id=154019&release_id=519286. I can confirm that these SMILES translate perfectly in the 2.1.1 development code. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/658#issuecomment-281779119
https://github.com/openbabel/openbabel/issues/658#issuecomment-281779121:113,Deployability,release,released,113,"Logged In: YES ; user_id=1189615; Originator: NO. This is known bug #1720529 which will be fixed in v2.1.1 to be released soon. By the way, the stereo info in 2.0 had a number of bugs with molecules like this; 2.1.1 should be better. Thanks for the feedback, sorry for the inconvenience. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/658#issuecomment-281779121
https://github.com/openbabel/openbabel/issues/658#issuecomment-281779121:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615; Originator: NO. This is known bug #1720529 which will be fixed in v2.1.1 to be released soon. By the way, the stereo info in 2.0 had a number of bugs with molecules like this; 2.1.1 should be better. Thanks for the feedback, sorry for the inconvenience. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/658#issuecomment-281779121
https://github.com/openbabel/openbabel/issues/658#issuecomment-281779121:249,Usability,feedback,feedback,249,"Logged In: YES ; user_id=1189615; Originator: NO. This is known bug #1720529 which will be fixed in v2.1.1 to be released soon. By the way, the stereo info in 2.0 had a number of bugs with molecules like this; 2.1.1 should be better. Thanks for the feedback, sorry for the inconvenience. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/658#issuecomment-281779121
https://github.com/openbabel/openbabel/issues/658#issuecomment-281779122:98,Deployability,release,release,98,"Logged In: NO . > This is a duplicate report and has been fixed in the 2.1 SVN code. The; > 2.1.1 release will come out shortly. In the meantime, I suggest trying the; > 2.1.1 snapshot:; > ; > http://sourceforge.net/project/showfiles.php?group_id=40728&package_id=154019&release_id=519286. Great, thanks ghutchis and chrismorl! I will try the snapshot. -john (john_sullivan@hms.harvard.edu). Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/658#issuecomment-281779122
https://github.com/openbabel/openbabel/issues/658#issuecomment-281779122:0,Testability,Log,Logged,0,"Logged In: NO . > This is a duplicate report and has been fixed in the 2.1 SVN code. The; > 2.1.1 release will come out shortly. In the meantime, I suggest trying the; > 2.1.1 snapshot:; > ; > http://sourceforge.net/project/showfiles.php?group_id=40728&package_id=154019&release_id=519286. Great, thanks ghutchis and chrismorl! I will try the snapshot. -john (john_sullivan@hms.harvard.edu). Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/658#issuecomment-281779122
https://github.com/openbabel/openbabel/issues/659#issuecomment-281779146:0,Testability,Log,Logged,0,Logged In: YES ; user_id=850620; Originator: NO. (1) On what platform?; (2) Please attach an example file. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/659#issuecomment-281779146
https://github.com/openbabel/openbabel/issues/659#issuecomment-281779148:0,Testability,Log,Logged,0,Logged In: YES ; user_id=1189615; Originator: NO. Probable the same as #1738005 which has now been fixed in 2.1.x. Set Pending. Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/659#issuecomment-281779148
https://github.com/openbabel/openbabel/issues/659#issuecomment-281779149:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539; Originator: NO. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/659#issuecomment-281779149
https://github.com/openbabel/openbabel/issues/1486#issuecomment-281810756:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615; Originator: NO. The --filter option in SVN HEAD (for v3.0) does much of this. See; http://openbabel.sourceforge.net/wiki/--filter_option. babel infile.sdf outfile.xxx --filter ""title='TargetTitle'"". It can have multiple boolean connected filter tests that may involve (sdf-like) properties (NAME in the example below is such a property):. babel infile.sdf outfile.xxx --filter ""(title='TargetTitle' || NAME='AltTitle') && MW >180"". The string tests can be crudely alphabetical, title>'Tar', but it doesn't do regular expressions. Would many chemists be able to use a regular expression easily? (Speaking as one who couldn't.). Chris . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1486#issuecomment-281810756
https://github.com/openbabel/openbabel/issues/1486#issuecomment-281810756:279,Testability,test,tests,279,"Logged In: YES ; user_id=1189615; Originator: NO. The --filter option in SVN HEAD (for v3.0) does much of this. See; http://openbabel.sourceforge.net/wiki/--filter_option. babel infile.sdf outfile.xxx --filter ""title='TargetTitle'"". It can have multiple boolean connected filter tests that may involve (sdf-like) properties (NAME in the example below is such a property):. babel infile.sdf outfile.xxx --filter ""(title='TargetTitle' || NAME='AltTitle') && MW >180"". The string tests can be crudely alphabetical, title>'Tar', but it doesn't do regular expressions. Would many chemists be able to use a regular expression easily? (Speaking as one who couldn't.). Chris . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1486#issuecomment-281810756
https://github.com/openbabel/openbabel/issues/1486#issuecomment-281810756:477,Testability,test,tests,477,"Logged In: YES ; user_id=1189615; Originator: NO. The --filter option in SVN HEAD (for v3.0) does much of this. See; http://openbabel.sourceforge.net/wiki/--filter_option. babel infile.sdf outfile.xxx --filter ""title='TargetTitle'"". It can have multiple boolean connected filter tests that may involve (sdf-like) properties (NAME in the example below is such a property):. babel infile.sdf outfile.xxx --filter ""(title='TargetTitle' || NAME='AltTitle') && MW >180"". The string tests can be crudely alphabetical, title>'Tar', but it doesn't do regular expressions. Would many chemists be able to use a regular expression easily? (Speaking as one who couldn't.). Chris . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1486#issuecomment-281810756
https://github.com/openbabel/openbabel/issues/1486#issuecomment-281810760:897,Availability,error,error,897,"Logged In: YES ; user_id=850620; Originator: YES. Great. That looks really nice. I knew that you had done some work on it, but I didn't see it in the help on 'babel'. Regarding regular expressions, I just mean an asterisk. Often all the actives (e.g. in drug docking) would come from a different database (e.g. drawn by hand) than the inactives, and can be simply identified by common elements in their title. Would it be possible to use an expression like ""MY_FIRST_DATAFIELD>1.4 && MY_SECOND_DATAFIELD='NOT_IN_STOCK'"". I note that a possible problem is data fields that contain spaces in the names. I think that you will have to enforce some rules such as, if there's a space in the name, use an underscore in the query. It would be good also if babel warned if no field matched one of the terms in the query (and perhaps printed out some possibilities), as I imagine that this will be a common error. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1486#issuecomment-281810760
https://github.com/openbabel/openbabel/issues/1486#issuecomment-281810760:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=850620; Originator: YES. Great. That looks really nice. I knew that you had done some work on it, but I didn't see it in the help on 'babel'. Regarding regular expressions, I just mean an asterisk. Often all the actives (e.g. in drug docking) would come from a different database (e.g. drawn by hand) than the inactives, and can be simply identified by common elements in their title. Would it be possible to use an expression like ""MY_FIRST_DATAFIELD>1.4 && MY_SECOND_DATAFIELD='NOT_IN_STOCK'"". I note that a possible problem is data fields that contain spaces in the names. I think that you will have to enforce some rules such as, if there's a space in the name, use an underscore in the query. It would be good also if babel warned if no field matched one of the terms in the query (and perhaps printed out some possibilities), as I imagine that this will be a common error. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1486#issuecomment-281810760
https://github.com/openbabel/openbabel/issues/1486#issuecomment-281810760:357,Usability,simpl,simply,357,"Logged In: YES ; user_id=850620; Originator: YES. Great. That looks really nice. I knew that you had done some work on it, but I didn't see it in the help on 'babel'. Regarding regular expressions, I just mean an asterisk. Often all the actives (e.g. in drug docking) would come from a different database (e.g. drawn by hand) than the inactives, and can be simply identified by common elements in their title. Would it be possible to use an expression like ""MY_FIRST_DATAFIELD>1.4 && MY_SECOND_DATAFIELD='NOT_IN_STOCK'"". I note that a possible problem is data fields that contain spaces in the names. I think that you will have to enforce some rules such as, if there's a space in the name, use an underscore in the query. It would be good also if babel warned if no field matched one of the terms in the query (and perhaps printed out some possibilities), as I imagine that this will be a common error. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1486#issuecomment-281810760
https://github.com/openbabel/openbabel/issues/1486#issuecomment-281810761:269,Integrability,message,message,269,"Logged In: YES ; user_id=1189615; Originator: NO. At your suggestion, I've now (rev2016) added support for:. * as wildcard. It has to be the first or last character. property names containing spaces. You use underscores in the filter string. I originally had a warning message for unknown property names but removed it because it becomes tedious with files where some molecules have a property and others don't (like the filterset.sdf referred to inon the wiki page). . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1486#issuecomment-281810761
https://github.com/openbabel/openbabel/issues/1486#issuecomment-281810761:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615; Originator: NO. At your suggestion, I've now (rev2016) added support for:. * as wildcard. It has to be the first or last character. property names containing spaces. You use underscores in the filter string. I originally had a warning message for unknown property names but removed it because it becomes tedious with files where some molecules have a property and others don't (like the filterset.sdf referred to inon the wiki page). . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1486#issuecomment-281810761
https://github.com/openbabel/openbabel/issues/1486#issuecomment-281810763:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. As discussed below, this feature is now implemented. I'm closing this feature request. Thanks to Chris for adding this!. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1486#issuecomment-281810763
https://github.com/openbabel/openbabel/issues/660#issuecomment-281779162:222,Availability,error,error,222,"Logged In: YES ; user_id=1189615; Originator: NO. All of these SMILES have 4-valent nitrogen, I guess due to the way the MOL2 file is converted. So to SMILES the molecule is some kind of strange radical. Surely this is an error? It would be better to get this right before worrying about the chirality. Incidentally, when Marvin View reads the mol2 file, it gives the OH group a negative charge, which also doesn't look right. I am afraid mol2 files are out of my experience. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779162
https://github.com/openbabel/openbabel/issues/660#issuecomment-281779162:388,Energy Efficiency,charge,charge,388,"Logged In: YES ; user_id=1189615; Originator: NO. All of these SMILES have 4-valent nitrogen, I guess due to the way the MOL2 file is converted. So to SMILES the molecule is some kind of strange radical. Surely this is an error? It would be better to get this right before worrying about the chirality. Incidentally, when Marvin View reads the mol2 file, it gives the OH group a negative charge, which also doesn't look right. I am afraid mol2 files are out of my experience. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779162
https://github.com/openbabel/openbabel/issues/660#issuecomment-281779162:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615; Originator: NO. All of these SMILES have 4-valent nitrogen, I guess due to the way the MOL2 file is converted. So to SMILES the molecule is some kind of strange radical. Surely this is an error? It would be better to get this right before worrying about the chirality. Incidentally, when Marvin View reads the mol2 file, it gives the OH group a negative charge, which also doesn't look right. I am afraid mol2 files are out of my experience. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779162
https://github.com/openbabel/openbabel/issues/660#issuecomment-281779163:182,Availability,error,error,182,"Logged In: YES ; user_id=850620; Originator: YES. I am following this up with the ZINC maintainers. 5% of the MOL2 files in ZINC have four-coordinate Ns of type N.3. This must be an error as Chris says. Either these are of type N.4, or they are N.3 with at most 3 bonds. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779163
https://github.com/openbabel/openbabel/issues/660#issuecomment-281779163:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=850620; Originator: YES. I am following this up with the ZINC maintainers. 5% of the MOL2 files in ZINC have four-coordinate Ns of type N.3. This must be an error as Chris says. Either these are of type N.4, or they are N.3 with at most 3 bonds. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779163
https://github.com/openbabel/openbabel/issues/660#issuecomment-281779164:381,Deployability,configurat,configuration,381,"Logged In: YES ; user_id=1444119; Originator: NO. This is a bug in the canonicalizer. The canonicalizer figures out the symmetry groups of the atoms without taking chirality into account, so any time there are two atoms that are identical except for their chirality, you'll get two possible ""canonical"" SMILES. Another instance of this is documented in the code, where a cis/trans configuration is incorrectly analyzed because, without taking chirality into account, it appears to be symmetrical and hence not cis or trans. In this case there is an axis of symmetry through a ring, and the only difference in the two halves of the ring are the two chiral centers themselves. So when the canonical-SMILES tree-generator reaches the ring, it has a choice between going left or right, and both paths appear identical, so it can generate two different canonical SMILES. The canonicalizer needs to add chirality to the atom-invarients *before* it starts analyzing chirality. However, even this is tricky, because sometimes a center can be chiral or achiral depending on the chirality of *other* atoms, leading to a sort of chicken-or-egg problem. Maybe a two-pass symmetry analysis is needed: First without chirality, then add in the chirality as new atom-invarients when a tie between two chiral atoms is discovered, and re-do the symmetry analysis. Craig. Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779164
https://github.com/openbabel/openbabel/issues/660#issuecomment-281779164:1052,Integrability,depend,depending,1052,"Logged In: YES ; user_id=1444119; Originator: NO. This is a bug in the canonicalizer. The canonicalizer figures out the symmetry groups of the atoms without taking chirality into account, so any time there are two atoms that are identical except for their chirality, you'll get two possible ""canonical"" SMILES. Another instance of this is documented in the code, where a cis/trans configuration is incorrectly analyzed because, without taking chirality into account, it appears to be symmetrical and hence not cis or trans. In this case there is an axis of symmetry through a ring, and the only difference in the two halves of the ring are the two chiral centers themselves. So when the canonical-SMILES tree-generator reaches the ring, it has a choice between going left or right, and both paths appear identical, so it can generate two different canonical SMILES. The canonicalizer needs to add chirality to the atom-invarients *before* it starts analyzing chirality. However, even this is tricky, because sometimes a center can be chiral or achiral depending on the chirality of *other* atoms, leading to a sort of chicken-or-egg problem. Maybe a two-pass symmetry analysis is needed: First without chirality, then add in the chirality as new atom-invarients when a tie between two chiral atoms is discovered, and re-do the symmetry analysis. Craig. Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779164
https://github.com/openbabel/openbabel/issues/660#issuecomment-281779164:381,Modifiability,config,configuration,381,"Logged In: YES ; user_id=1444119; Originator: NO. This is a bug in the canonicalizer. The canonicalizer figures out the symmetry groups of the atoms without taking chirality into account, so any time there are two atoms that are identical except for their chirality, you'll get two possible ""canonical"" SMILES. Another instance of this is documented in the code, where a cis/trans configuration is incorrectly analyzed because, without taking chirality into account, it appears to be symmetrical and hence not cis or trans. In this case there is an axis of symmetry through a ring, and the only difference in the two halves of the ring are the two chiral centers themselves. So when the canonical-SMILES tree-generator reaches the ring, it has a choice between going left or right, and both paths appear identical, so it can generate two different canonical SMILES. The canonicalizer needs to add chirality to the atom-invarients *before* it starts analyzing chirality. However, even this is tricky, because sometimes a center can be chiral or achiral depending on the chirality of *other* atoms, leading to a sort of chicken-or-egg problem. Maybe a two-pass symmetry analysis is needed: First without chirality, then add in the chirality as new atom-invarients when a tie between two chiral atoms is discovered, and re-do the symmetry analysis. Craig. Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779164
https://github.com/openbabel/openbabel/issues/660#issuecomment-281779164:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1444119; Originator: NO. This is a bug in the canonicalizer. The canonicalizer figures out the symmetry groups of the atoms without taking chirality into account, so any time there are two atoms that are identical except for their chirality, you'll get two possible ""canonical"" SMILES. Another instance of this is documented in the code, where a cis/trans configuration is incorrectly analyzed because, without taking chirality into account, it appears to be symmetrical and hence not cis or trans. In this case there is an axis of symmetry through a ring, and the only difference in the two halves of the ring are the two chiral centers themselves. So when the canonical-SMILES tree-generator reaches the ring, it has a choice between going left or right, and both paths appear identical, so it can generate two different canonical SMILES. The canonicalizer needs to add chirality to the atom-invarients *before* it starts analyzing chirality. However, even this is tricky, because sometimes a center can be chiral or achiral depending on the chirality of *other* atoms, leading to a sort of chicken-or-egg problem. Maybe a two-pass symmetry analysis is needed: First without chirality, then add in the chirality as new atom-invarients when a tie between two chiral atoms is discovered, and re-do the symmetry analysis. Craig. Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779164
https://github.com/openbabel/openbabel/issues/660#issuecomment-281779166:0,Testability,Log,Logged,0,Logged In: NO . Asking Frog to unambiguate. CC1OC(C[NH](C1)CC(C(F)(F)F)O)C; you get ; ...; C[C@@H]1O[C@H](C[NH](C1)C[C@H](C(F)(F)F)O)C; C[C@H]1O[C@@H](C[NH](C1)C[C@H](C(F)(F)F)O)C; ...; i.e. both solutions as well. So I wonder: what is correct?. Gerd . Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779166
https://github.com/openbabel/openbabel/issues/660#issuecomment-281779167:96,Availability,error,error,96,"Logged In: YES ; user_id=850620; Originator: YES. I'm closing this bug, as I believe this is an error in the input, i.e. Garbage-in Garbage-out. Nice use of Frog though :-). Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779167
https://github.com/openbabel/openbabel/issues/660#issuecomment-281779167:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=850620; Originator: YES. I'm closing this bug, as I believe this is an error in the input, i.e. Garbage-in Garbage-out. Nice use of Frog though :-). Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779167
https://github.com/openbabel/openbabel/issues/660#issuecomment-281779168:102,Availability,error,error,102,"Logged In: YES ; user_id=1444119; Originator: NO. I'm reopening this bug. The problem isn't due to an error in the input -- it is a real bug in canon.cpp. Even if you replace the N with a C, you'll still get two different canonical SMILES. See my earlier comments about why this happens. Craig. Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779168
https://github.com/openbabel/openbabel/issues/660#issuecomment-281779168:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1444119; Originator: NO. I'm reopening this bug. The problem isn't due to an error in the input -- it is a real bug in canon.cpp. Even if you replace the N with a C, you'll still get two different canonical SMILES. See my earlier comments about why this happens. Craig. Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779168
https://github.com/openbabel/openbabel/issues/660#issuecomment-281779169:41,Usability,simpl,simpler,41,"I like the two-pass approach, since it's simpler. Is this something we can revisit -- I think it addresses a few other bugs on here. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779169
https://github.com/openbabel/openbabel/issues/660#issuecomment-281779171:74,Availability,Down,Downloads,74,"I'm passing the buck here. I revisited this bug using SVN trunk:. babel ~/Downloads/smivscan.mol2 -osmi; C[C@@H]1C[NH](C[C@@H](O1)C)C[C@@H](C(F)(F)F)O	ZINC03883383; C[C@H]1C[NH](C[C@H](O1)C)C[C@@H](C(F)(F)F)O	ZINC03883386. babel ~/Downloads/smivscan.mol2 -ocan; C[C@@H]1O[C@H](C)C[NH](C1)C[C@H](O)C(F)(F)F	ZINC03883383; C[C@@H]1O[C@H](C)C[NH](C1)C[C@H](O)C(F)(F)F	ZINC03883386. That is, the stereo looks different for SMI, but not CAN. If this isn't a bug (i.e., given the input order, the SMI output is correct), let's make a testcase for the CAN example. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779171
https://github.com/openbabel/openbabel/issues/660#issuecomment-281779171:231,Availability,Down,Downloads,231,"I'm passing the buck here. I revisited this bug using SVN trunk:. babel ~/Downloads/smivscan.mol2 -osmi; C[C@@H]1C[NH](C[C@@H](O1)C)C[C@@H](C(F)(F)F)O	ZINC03883383; C[C@H]1C[NH](C[C@H](O1)C)C[C@@H](C(F)(F)F)O	ZINC03883386. babel ~/Downloads/smivscan.mol2 -ocan; C[C@@H]1O[C@H](C)C[NH](C1)C[C@H](O)C(F)(F)F	ZINC03883383; C[C@@H]1O[C@H](C)C[NH](C1)C[C@H](O)C(F)(F)F	ZINC03883386. That is, the stereo looks different for SMI, but not CAN. If this isn't a bug (i.e., given the input order, the SMI output is correct), let's make a testcase for the CAN example. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779171
https://github.com/openbabel/openbabel/issues/660#issuecomment-281779171:527,Testability,test,testcase,527,"I'm passing the buck here. I revisited this bug using SVN trunk:. babel ~/Downloads/smivscan.mol2 -osmi; C[C@@H]1C[NH](C[C@@H](O1)C)C[C@@H](C(F)(F)F)O	ZINC03883383; C[C@H]1C[NH](C[C@H](O1)C)C[C@@H](C(F)(F)F)O	ZINC03883386. babel ~/Downloads/smivscan.mol2 -ocan; C[C@@H]1O[C@H](C)C[NH](C1)C[C@H](O)C(F)(F)F	ZINC03883383; C[C@@H]1O[C@H](C)C[NH](C1)C[C@H](O)C(F)(F)F	ZINC03883386. That is, the stereo looks different for SMI, but not CAN. If this isn't a bug (i.e., given the input order, the SMI output is correct), let's make a testcase for the CAN example. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779171
https://github.com/openbabel/openbabel/issues/661#issuecomment-281779193:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1557018; Originator: NO. Probably a bug in the Python bindings. vector3::x() returns a reference, while GetX() returns a value. Another interesting thing would be to check whether the crash occurs in x() or in GetVector(). Original comment by: benoitjacob",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/661#issuecomment-281779193
https://github.com/openbabel/openbabel/issues/661#issuecomment-281779194:107,Integrability,wrap,wrapped,107,"Logged In: YES ; user_id=850620; Originator: YES. Accessing GetVector() is fine. It appears to be properly wrapped. Accessing x() causes the segfault. I've just looked at the C++ code. I think that the problem is not that vector3::x() returns a ref, but that it returns a ref to a const object, which is impossible to translate into Python. I think that the solution is make either vector3::Get() or vector3::operator[] work from the scripting languages, as these are really the correct way to access the data in C++. I will look into this...it shouldn't be difficult. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/661#issuecomment-281779194
https://github.com/openbabel/openbabel/issues/661#issuecomment-281779194:50,Security,Access,Accessing,50,"Logged In: YES ; user_id=850620; Originator: YES. Accessing GetVector() is fine. It appears to be properly wrapped. Accessing x() causes the segfault. I've just looked at the C++ code. I think that the problem is not that vector3::x() returns a ref, but that it returns a ref to a const object, which is impossible to translate into Python. I think that the solution is make either vector3::Get() or vector3::operator[] work from the scripting languages, as these are really the correct way to access the data in C++. I will look into this...it shouldn't be difficult. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/661#issuecomment-281779194
https://github.com/openbabel/openbabel/issues/661#issuecomment-281779194:116,Security,Access,Accessing,116,"Logged In: YES ; user_id=850620; Originator: YES. Accessing GetVector() is fine. It appears to be properly wrapped. Accessing x() causes the segfault. I've just looked at the C++ code. I think that the problem is not that vector3::x() returns a ref, but that it returns a ref to a const object, which is impossible to translate into Python. I think that the solution is make either vector3::Get() or vector3::operator[] work from the scripting languages, as these are really the correct way to access the data in C++. I will look into this...it shouldn't be difficult. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/661#issuecomment-281779194
https://github.com/openbabel/openbabel/issues/661#issuecomment-281779194:494,Security,access,access,494,"Logged In: YES ; user_id=850620; Originator: YES. Accessing GetVector() is fine. It appears to be properly wrapped. Accessing x() causes the segfault. I've just looked at the C++ code. I think that the problem is not that vector3::x() returns a ref, but that it returns a ref to a const object, which is impossible to translate into Python. I think that the solution is make either vector3::Get() or vector3::operator[] work from the scripting languages, as these are really the correct way to access the data in C++. I will look into this...it shouldn't be difficult. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/661#issuecomment-281779194
https://github.com/openbabel/openbabel/issues/661#issuecomment-281779194:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=850620; Originator: YES. Accessing GetVector() is fine. It appears to be properly wrapped. Accessing x() causes the segfault. I've just looked at the C++ code. I think that the problem is not that vector3::x() returns a ref, but that it returns a ref to a const object, which is impossible to translate into Python. I think that the solution is make either vector3::Get() or vector3::operator[] work from the scripting languages, as these are really the correct way to access the data in C++. I will look into this...it shouldn't be difficult. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/661#issuecomment-281779194
https://github.com/openbabel/openbabel/issues/661#issuecomment-281779196:156,Integrability,interface,interface,156,"Logged In: YES ; user_id=850620; Originator: YES. I've looked at a couple of solutions; the best one is simply to add the following to the Python scripting interface... %rename(__getitem__) *::operator[]; // Allows access to vector3 values by index. Then, v[0], v[1], v[2] can all be accessed. It would be great if vector3::Get() just returned a std::vector though. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/661#issuecomment-281779196
https://github.com/openbabel/openbabel/issues/661#issuecomment-281779196:215,Security,access,access,215,"Logged In: YES ; user_id=850620; Originator: YES. I've looked at a couple of solutions; the best one is simply to add the following to the Python scripting interface... %rename(__getitem__) *::operator[]; // Allows access to vector3 values by index. Then, v[0], v[1], v[2] can all be accessed. It would be great if vector3::Get() just returned a std::vector though. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/661#issuecomment-281779196
https://github.com/openbabel/openbabel/issues/661#issuecomment-281779196:284,Security,access,accessed,284,"Logged In: YES ; user_id=850620; Originator: YES. I've looked at a couple of solutions; the best one is simply to add the following to the Python scripting interface... %rename(__getitem__) *::operator[]; // Allows access to vector3 values by index. Then, v[0], v[1], v[2] can all be accessed. It would be great if vector3::Get() just returned a std::vector though. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/661#issuecomment-281779196
https://github.com/openbabel/openbabel/issues/661#issuecomment-281779196:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=850620; Originator: YES. I've looked at a couple of solutions; the best one is simply to add the following to the Python scripting interface... %rename(__getitem__) *::operator[]; // Allows access to vector3 values by index. Then, v[0], v[1], v[2] can all be accessed. It would be great if vector3::Get() just returned a std::vector though. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/661#issuecomment-281779196
https://github.com/openbabel/openbabel/issues/661#issuecomment-281779196:104,Usability,simpl,simply,104,"Logged In: YES ; user_id=850620; Originator: YES. I've looked at a couple of solutions; the best one is simply to add the following to the Python scripting interface... %rename(__getitem__) *::operator[]; // Allows access to vector3 values by index. Then, v[0], v[1], v[2] can all be accessed. It would be great if vector3::Get() just returned a std::vector though. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/661#issuecomment-281779196
https://github.com/openbabel/openbabel/issues/662#issuecomment-281779222:0,Testability,Log,Logged,0,Logged In: YES ; user_id=1189615; Originator: NO. Warning removed in HEAD code rev 2070. Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/662#issuecomment-281779222
https://github.com/openbabel/openbabel/issues/663#issuecomment-281779225:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615; Originator: NO. In revision 2025 in SVN HEAD, COLLECTION blocks are now benignly ignored, with a warning, and the rest of the molecule is converted. Set Pending, to close after 2 weeks. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/663#issuecomment-281779225
https://github.com/openbabel/openbabel/issues/663#issuecomment-281779226:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539; Originator: NO. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/663#issuecomment-281779226
https://github.com/openbabel/openbabel/issues/663#issuecomment-281779228:65,Integrability,message,message,65,"Logged In: YES ; user_id=1826769; Originator: YES. From the last message, I gather that I should have reacted to the previous one...; Maybe checked wether it works in the announced revision ? My problem is : how to get at it ?. Original comment by: reinerdieden",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/663#issuecomment-281779228
https://github.com/openbabel/openbabel/issues/663#issuecomment-281779228:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1826769; Originator: YES. From the last message, I gather that I should have reacted to the previous one...; Maybe checked wether it works in the announced revision ? My problem is : how to get at it ?. Original comment by: reinerdieden",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/663#issuecomment-281779228
https://github.com/openbabel/openbabel/issues/663#issuecomment-281779229:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615; Originator: NO. The revision essentially ignores what is in the COLLECTION block. Is that good enough?; The file is is SVN. The following link will retrieve it. It could just replace the original file and then OpenBabel should be compiled, if you can do that. I could supply a compiled Windows version if that would help.; http://openbabel.svn.sourceforge.net/viewvc/*checkout*/openbabel/openbabel/trunk/src/formats/mdlformat.cpp?revision=2025. Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/663#issuecomment-281779229
https://github.com/openbabel/openbabel/issues/663#issuecomment-281779230:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1826769; Originator: YES. Chris,. Excellent! The compilation of the customized version worked like a charm. Conversion is perfect for my needs. Thanks a lot,. Reiner. Original comment by: reinerdieden",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/663#issuecomment-281779230
https://github.com/openbabel/openbabel/issues/664#issuecomment-281779250:0,Testability,Log,Logged,0,Logged In: YES ; user_id=850620; Originator: YES. The outputfile will not upload due to the funny characters. I can send it off-list to anyone who wants. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/664#issuecomment-281779250
https://github.com/openbabel/openbabel/issues/664#issuecomment-281779251:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420; Originator: NO. Is this still a bug?. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/664#issuecomment-281779251
https://github.com/openbabel/openbabel/issues/664#issuecomment-281779253:0,Testability,Log,Logged,0,Logged In: NO . Looks fine now - Noel. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/664#issuecomment-281779253
https://github.com/openbabel/openbabel/issues/664#issuecomment-281779254:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. I'm marking this closed then. I can't pin my finger on the fix, but several changes went into PDB chains. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/664#issuecomment-281779254
https://github.com/openbabel/openbabel/issues/665#issuecomment-281779273:0,Testability,Log,Log,0,Log of failed build due to missing OBGUI.rc file. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/665#issuecomment-281779273
https://github.com/openbabel/openbabel/issues/665#issuecomment-281779274:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. This is now fixed in SVN trunk, set for OB-2.2.0b6 and later. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/665#issuecomment-281779274
https://github.com/openbabel/openbabel/issues/666#issuecomment-281779284:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1682851; Originator: NO. atomrecord.cpp now keeps the original chain identifier from the PDB file. For 1XAJ there are now three chains: 'A', 'B' and ' '. Original comment by: @timvdm",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/666#issuecomment-281779284
https://github.com/openbabel/openbabel/issues/667#issuecomment-281779285:76,Availability,failure,failures,76,Logged In: YES ; user_id=1189615; Originator: NO. These seem to be Kekulize failures.; The first molecule is output correctly to CML when using aromatic bonds (not Kekule). A simplified molecule showing the same behaviour is Cn2ccc(nc2=O) .; The second molecule reports an error in start_kekulize and the bonds are not marked aromatic. Anybody fancy doing some Kekulization?. Chris . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/667#issuecomment-281779285
https://github.com/openbabel/openbabel/issues/667#issuecomment-281779285:273,Availability,error,error,273,Logged In: YES ; user_id=1189615; Originator: NO. These seem to be Kekulize failures.; The first molecule is output correctly to CML when using aromatic bonds (not Kekule). A simplified molecule showing the same behaviour is Cn2ccc(nc2=O) .; The second molecule reports an error in start_kekulize and the bonds are not marked aromatic. Anybody fancy doing some Kekulization?. Chris . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/667#issuecomment-281779285
https://github.com/openbabel/openbabel/issues/667#issuecomment-281779285:0,Testability,Log,Logged,0,Logged In: YES ; user_id=1189615; Originator: NO. These seem to be Kekulize failures.; The first molecule is output correctly to CML when using aromatic bonds (not Kekule). A simplified molecule showing the same behaviour is Cn2ccc(nc2=O) .; The second molecule reports an error in start_kekulize and the bonds are not marked aromatic. Anybody fancy doing some Kekulization?. Chris . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/667#issuecomment-281779285
https://github.com/openbabel/openbabel/issues/667#issuecomment-281779285:175,Usability,simpl,simplified,175,Logged In: YES ; user_id=1189615; Originator: NO. These seem to be Kekulize failures.; The first molecule is output correctly to CML when using aromatic bonds (not Kekule). A simplified molecule showing the same behaviour is Cn2ccc(nc2=O) .; The second molecule reports an error in start_kekulize and the bonds are not marked aromatic. Anybody fancy doing some Kekulization?. Chris . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/667#issuecomment-281779285
https://github.com/openbabel/openbabel/issues/667#issuecomment-281779286:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. The simple cases are fixed in SVN trunk, but the full case is harder. The smallest fragment from above which seems to trigger the bug:; O=c1n(CCCC)c(nc(c21)nn3c2[nH]cc3)=O. Yields; CCCC[N]1=C(=O)C2=C(N=[N]3C=CNC23)N=C1=O. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/667#issuecomment-281779286
https://github.com/openbabel/openbabel/issues/667#issuecomment-281779286:52,Usability,simpl,simple,52,"Logged In: YES ; user_id=21420; Originator: NO. The simple cases are fixed in SVN trunk, but the full case is harder. The smallest fragment from above which seems to trigger the bug:; O=c1n(CCCC)c(nc(c21)nn3c2[nH]cc3)=O. Yields; CCCC[N]1=C(=O)C2=C(N=[N]3C=CNC23)N=C1=O. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/667#issuecomment-281779286
https://github.com/openbabel/openbabel/issues/667#issuecomment-281779287:85,Deployability,patch,patch,85,"Logged In: YES ; user_id=21420; Originator: NO. Well, I've fixed *this* bug, but the patch creates other problems. So it'll take a bit more work to fix completely. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/667#issuecomment-281779287
https://github.com/openbabel/openbabel/issues/667#issuecomment-281779287:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. Well, I've fixed *this* bug, but the patch creates other problems. So it'll take a bit more work to fix completely. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/667#issuecomment-281779287
https://github.com/openbabel/openbabel/issues/667#issuecomment-281779290:87,Deployability,release,release,87,"This is now fixed in SVN 2-2-x branch, as of revision 3057. I will be making a 2.2.2b3 release, which will have the fix, if you'd like to test it. Thanks to Noel for the bug fix. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/667#issuecomment-281779290
https://github.com/openbabel/openbabel/issues/667#issuecomment-281779290:138,Testability,test,test,138,"This is now fixed in SVN 2-2-x branch, as of revision 3057. I will be making a 2.2.2b3 release, which will have the fix, if you'd like to test it. Thanks to Noel for the bug fix. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/667#issuecomment-281779290
https://github.com/openbabel/openbabel/issues/668#issuecomment-281779311:0,Testability,Log,Logged,0,Logged In: YES ; user_id=1682851; Originator: NO. fixed in svn. Original comment by: @timvdm,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/668#issuecomment-281779311
https://github.com/openbabel/openbabel/issues/669#issuecomment-281779314:67,Security,audit,audit,67,Logged In: YES ; user_id=28668; Originator: YES. I attach also the audit log. File Added: audit_log. Original comment by: @Pansanel,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779314
https://github.com/openbabel/openbabel/issues/669#issuecomment-281779314:0,Testability,Log,Logged,0,Logged In: YES ; user_id=28668; Originator: YES. I attach also the audit log. File Added: audit_log. Original comment by: @Pansanel,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779314
https://github.com/openbabel/openbabel/issues/669#issuecomment-281779314:73,Testability,log,log,73,Logged In: YES ; user_id=28668; Originator: YES. I attach also the audit log. File Added: audit_log. Original comment by: @Pansanel,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779314
https://github.com/openbabel/openbabel/issues/669#issuecomment-281779316:0,Security,Audit,Audit,0,Audit Log. Original comment by: @Pansanel,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779316
https://github.com/openbabel/openbabel/issues/669#issuecomment-281779316:6,Testability,Log,Log,6,Audit Log. Original comment by: @Pansanel,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779316
https://github.com/openbabel/openbabel/issues/669#issuecomment-281779317:386,Availability,fault,fault,386,"Logged In: YES ; user_id=1189615; Originator: NO. It worked ok for me with v2.0.2 and the latest released version 2.1.1. This was with the Windows GUI, but that would not normally make much difference.; ; The fourth bond has its second atom index=14, just before the bond order. Could it be that some corruption with extra spaces has happened somewhere? With an abnormal audit log, the fault is probably in your copy of OpenBabel. . Could you see if you get the same problem with v2.1.1?. Chris . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779317
https://github.com/openbabel/openbabel/issues/669#issuecomment-281779317:97,Deployability,release,released,97,"Logged In: YES ; user_id=1189615; Originator: NO. It worked ok for me with v2.0.2 and the latest released version 2.1.1. This was with the Windows GUI, but that would not normally make much difference.; ; The fourth bond has its second atom index=14, just before the bond order. Could it be that some corruption with extra spaces has happened somewhere? With an abnormal audit log, the fault is probably in your copy of OpenBabel. . Could you see if you get the same problem with v2.1.1?. Chris . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779317
https://github.com/openbabel/openbabel/issues/669#issuecomment-281779317:371,Security,audit,audit,371,"Logged In: YES ; user_id=1189615; Originator: NO. It worked ok for me with v2.0.2 and the latest released version 2.1.1. This was with the Windows GUI, but that would not normally make much difference.; ; The fourth bond has its second atom index=14, just before the bond order. Could it be that some corruption with extra spaces has happened somewhere? With an abnormal audit log, the fault is probably in your copy of OpenBabel. . Could you see if you get the same problem with v2.1.1?. Chris . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779317
https://github.com/openbabel/openbabel/issues/669#issuecomment-281779317:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615; Originator: NO. It worked ok for me with v2.0.2 and the latest released version 2.1.1. This was with the Windows GUI, but that would not normally make much difference.; ; The fourth bond has its second atom index=14, just before the bond order. Could it be that some corruption with extra spaces has happened somewhere? With an abnormal audit log, the fault is probably in your copy of OpenBabel. . Could you see if you get the same problem with v2.1.1?. Chris . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779317
https://github.com/openbabel/openbabel/issues/669#issuecomment-281779317:377,Testability,log,log,377,"Logged In: YES ; user_id=1189615; Originator: NO. It worked ok for me with v2.0.2 and the latest released version 2.1.1. This was with the Windows GUI, but that would not normally make much difference.; ; The fourth bond has its second atom index=14, just before the bond order. Could it be that some corruption with extra spaces has happened somewhere? With an abnormal audit log, the fault is probably in your copy of OpenBabel. . Could you see if you get the same problem with v2.1.1?. Chris . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779317
https://github.com/openbabel/openbabel/issues/669#issuecomment-281779318:320,Deployability,release,release,320,"Logged In: YES ; user_id=28668; Originator: YES. It works also with v2.0.2 on other OS as Debian Etch (I'm using native OB 2.0.2 from Debian Etch).; I've compiled OB 2.1.1 on Debian and it works fine. I've submitted a bug report to Debian. I'm sorry, I did not have time to look in more details this bug, as I wanted to release Mychem today. It would be fine if someone using Debian Etch could test the file conversion. Original comment by: @Pansanel",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779318
https://github.com/openbabel/openbabel/issues/669#issuecomment-281779318:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=28668; Originator: YES. It works also with v2.0.2 on other OS as Debian Etch (I'm using native OB 2.0.2 from Debian Etch).; I've compiled OB 2.1.1 on Debian and it works fine. I've submitted a bug report to Debian. I'm sorry, I did not have time to look in more details this bug, as I wanted to release Mychem today. It would be fine if someone using Debian Etch could test the file conversion. Original comment by: @Pansanel",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779318
https://github.com/openbabel/openbabel/issues/669#issuecomment-281779318:394,Testability,test,test,394,"Logged In: YES ; user_id=28668; Originator: YES. It works also with v2.0.2 on other OS as Debian Etch (I'm using native OB 2.0.2 from Debian Etch).; I've compiled OB 2.1.1 on Debian and it works fine. I've submitted a bug report to Debian. I'm sorry, I did not have time to look in more details this bug, as I wanted to release Mychem today. It would be fine if someone using Debian Etch could test the file conversion. Original comment by: @Pansanel",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779318
https://github.com/openbabel/openbabel/issues/669#issuecomment-281779319:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615; Originator: NO. Closed, see #1975137 r2504. Marcus found that atoi was being given an unterminated string. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779319
https://github.com/openbabel/openbabel/issues/669#issuecomment-281779320:440,Safety,safe,safe,440,Logged In: YES ; user_id=851435; Originator: NO. This works fine here - I believe this is the same bug as the one I just fixed if by type the bug reporter means bond order. The problem was that the CML format was using atoi to convert a single character to an integer. This conversion worked on many platforms but on some did not as the string passed to atoi was a single character (i.e. not null terminated). I think that this is probably safe to mark as closed. To be honest my bug was a duplicate of this bug I think. See PR 1975137. Original comment by: @cryos,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779320
https://github.com/openbabel/openbabel/issues/669#issuecomment-281779320:0,Testability,Log,Logged,0,Logged In: YES ; user_id=851435; Originator: NO. This works fine here - I believe this is the same bug as the one I just fixed if by type the bug reporter means bond order. The problem was that the CML format was using atoi to convert a single character to an integer. This conversion worked on many platforms but on some did not as the string passed to atoi was a single character (i.e. not null terminated). I think that this is probably safe to mark as closed. To be honest my bug was a duplicate of this bug I think. See PR 1975137. Original comment by: @cryos,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779320
https://github.com/openbabel/openbabel/issues/670#issuecomment-281779324:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615; Originator: NO. Thanks for the report. Most of the code in OpenBabel is the same whatever the platform. This includes that for hydrogen addition, but, as you point out, it may use data in some .txt files. If these are not present, as in the Windows distribution, an internal set of data are used, which should be the same as in the default .txt files, unless something has gone wrong. It would be helpful if you could attach an example file, and try to find the version numbers:; menu item Help/About on the Windows GUI and babel -V on the commandline. Chris . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/670#issuecomment-281779324
https://github.com/openbabel/openbabel/issues/670#issuecomment-281779326:507,Energy Efficiency,charge,charged,507,"Logged In: YES ; user_id=1875145; Originator: YES. I did not find a menu in my OpenBabel windows GUI. maybe my version is too old. the DOS prompt tells me it's ""Open Babel 2.0.0 -- Dec 1 2005 -- 13:55:06"". I don't know the versions I had at my summer project. I could not upload the file because it is bigger than the maximum allowed: the file can be found at http://www.rcsb.org/pdb/files/1g50.pdb; residues to look at are for example: Arg335 - both terminal nitrogens should be protonated (the residue is charged +); and His356 - only one ring nitrogen is protonated (the residue is neutral). Thanks. Felix. Original comment by: felix_p",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/670#issuecomment-281779326
https://github.com/openbabel/openbabel/issues/670#issuecomment-281779326:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1875145; Originator: YES. I did not find a menu in my OpenBabel windows GUI. maybe my version is too old. the DOS prompt tells me it's ""Open Babel 2.0.0 -- Dec 1 2005 -- 13:55:06"". I don't know the versions I had at my summer project. I could not upload the file because it is bigger than the maximum allowed: the file can be found at http://www.rcsb.org/pdb/files/1g50.pdb; residues to look at are for example: Arg335 - both terminal nitrogens should be protonated (the residue is charged +); and His356 - only one ring nitrogen is protonated (the residue is neutral). Thanks. Felix. Original comment by: felix_p",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/670#issuecomment-281779326
https://github.com/openbabel/openbabel/issues/670#issuecomment-281779327:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. Tim could you look at this? I think the suggestion is a good one -- provide physiological protonation for the amino acids into phmodel.txt. If you need suggestions about how to use phmodel, please let me know. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/670#issuecomment-281779327
https://github.com/openbabel/openbabel/issues/670#issuecomment-281779328:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420; Originator: NO. I believe Tim's recent changes to SVN trunk solve this -- the pH model will now recognize the separate pKas of each amino acid and will adjust accordingly. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/670#issuecomment-281779328
https://github.com/openbabel/openbabel/issues/670#issuecomment-281779330:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539; Originator: NO. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/670#issuecomment-281779330
https://github.com/openbabel/openbabel/issues/671#issuecomment-281779335:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. This is fixed in SVN trunk, revision 2576 or later. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/671#issuecomment-281779335
https://github.com/openbabel/openbabel/issues/672#issuecomment-281779349:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=787122; Originator: NO. IMHO, it is the calling program responsibility to set the correct LC_NUMERIC value when reading/writing files. It is how it worksin many projects. Your code should look like:#include <iostream>; #include <openbabel/mol.h>; #include <locale.h>; int main(int argc, char **argv) {; setlocale(LC_NUMERIC, ""C"");; std::cout << ""Here's how I spell Carbon: ""; << OpenBabel::etab.GetName(6) << std::endl;; setlocale(LC_NUMERIC, """");; return 0;; }. or much better in the general case (C language, in C++, use a std::string):; 	char *old_num_locale = strdup (setlocale (LC_NUMERIC, NULL));; 	setlocale(LC_NUMERIC, ""C"");; 	// Calls to OpenBabel should come there; 	...; 	setlocale(LC_NUMERIC, old_num_locale);; 	free (old_num_locale);. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779349
https://github.com/openbabel/openbabel/issues/672#issuecomment-281779351:0,Testability,Log,Logged,0,Logged In: YES ; user_id=1557018; Originator: YES. I hadn't considered that it could be the calling app's responsibility to set the locale. Your solution is exactly the workaround that I had committed to KDE but I thought it was only temporary. . Original comment by: benoitjacob,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779351
https://github.com/openbabel/openbabel/issues/672#issuecomment-281779353:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=851435; Originator: NO. I would have thought that I should be able to call a library function and expect it to work no matter what the system locale is. When would the current behaviour ever be correct? I don't think file formats are localised in the sense that the numeric delimiters are changed are they? Having users of the OpenBabel library manually set the locale to ""C"" and then reset it back to the original after the call looks very much like a workaround to me. I have possibly misunderstood your reasoning but I think that we should aim to fix this as it appears to me to be a bug. Original comment by: @cryos",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779353
https://github.com/openbabel/openbabel/issues/672#issuecomment-281779356:164,Integrability,depend,dependent,164,"Logged In: YES ; user_id=1557018; Originator: YES. Yes, this is definitely a workaround. In fact we do completely agree :). That OpenBabel parses files in a locale-dependent way, is clearly an OpenBabel bug, which needs to be fixed there. The C library (sscanf) apparently always honor the locale. So any code using it must be changed to use the C++ library (ifstream...) and call .imbue() on the stream to tell it to assume LC_NUMERIC=C. A while ago part of this was fixed in OpenBabel but last time I checked many places (probably in file format plugins...) still had to be ported. Original comment by: benoitjacob",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779356
https://github.com/openbabel/openbabel/issues/672#issuecomment-281779356:548,Modifiability,plugin,plugins,548,"Logged In: YES ; user_id=1557018; Originator: YES. Yes, this is definitely a workaround. In fact we do completely agree :). That OpenBabel parses files in a locale-dependent way, is clearly an OpenBabel bug, which needs to be fixed there. The C library (sscanf) apparently always honor the locale. So any code using it must be changed to use the C++ library (ifstream...) and call .imbue() on the stream to tell it to assume LC_NUMERIC=C. A while ago part of this was fixed in OpenBabel but last time I checked many places (probably in file format plugins...) still had to be ported. Original comment by: benoitjacob",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779356
https://github.com/openbabel/openbabel/issues/672#issuecomment-281779356:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1557018; Originator: YES. Yes, this is definitely a workaround. In fact we do completely agree :). That OpenBabel parses files in a locale-dependent way, is clearly an OpenBabel bug, which needs to be fixed there. The C library (sscanf) apparently always honor the locale. So any code using it must be changed to use the C++ library (ifstream...) and call .imbue() on the stream to tell it to assume LC_NUMERIC=C. A while ago part of this was fixed in OpenBabel but last time I checked many places (probably in file format plugins...) still had to be ported. Original comment by: benoitjacob",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779356
https://github.com/openbabel/openbabel/issues/672#issuecomment-281779356:182,Usability,clear,clearly,182,"Logged In: YES ; user_id=1557018; Originator: YES. Yes, this is definitely a workaround. In fact we do completely agree :). That OpenBabel parses files in a locale-dependent way, is clearly an OpenBabel bug, which needs to be fixed there. The C library (sscanf) apparently always honor the locale. So any code using it must be changed to use the C++ library (ifstream...) and call .imbue() on the stream to tell it to assume LC_NUMERIC=C. A while ago part of this was fixed in OpenBabel but last time I checked many places (probably in file format plugins...) still had to be ported. Original comment by: benoitjacob",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779356
https://github.com/openbabel/openbabel/issues/672#issuecomment-281779357:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. I think cryos's suggestion is the best solution for now. Let's have OBConversion::Read change the locale to ""C"" during reading and then set it back after completion. A similar change in data.cpp should solve the data files as well. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779357
https://github.com/openbabel/openbabel/issues/672#issuecomment-281779358:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1557018; Originator: YES. Yes, this is what we've been doing in Kalzium and Avogadro. This is of course much more dangerous to do in a lib... though indeed if you set the locale back after completion i.e. after only a fraction of a second, it probably won't cause trouble... anyway I suppose that we agree that it's only a temporary workaround!. Here's my suggestion for a quick fix that at least is not dangerous for the application using OpenBabel: implement in OpenBabel namespace functions sscanf() atoi() strtof() etc..... overriding the ones from the C library. Normally all callers from inside OpenBabel namespace will call them insted of the C library functions. So OpenBabel::sscanf() would be implemented using the c++ standard library and imbue() to ensure that it doesn't honor the locale parameters. As for the optimal fix i.e. removing all calls to these C library functions througout OpenBabel there is a lot of work to do !!!. gaston@kiwi:~/cuisine/openbabel/src$ grep -R sscanf . |wc -l; 630; gaston@kiwi:~/cuisine/openbabel/src$ grep -R atoi . |wc -l; 1161; gaston@kiwi:~/cuisine/openbabel/src$ grep -R strtol . |wc -l; 713; gaston@kiwi:~/cuisine/openbabel/src$ grep -R strtoul . |wc -l; 506; gaston@kiwi:~/cuisine/openbabel/src$ grep -R strtof . |wc -l; 502. Original comment by: benoitjacob",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779358
https://github.com/openbabel/openbabel/issues/672#issuecomment-281779359:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. This should be solved by PR#2557 with internal locale settings in Open Babel. I'm marking this bug as fixed, pending further comment. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779359
https://github.com/openbabel/openbabel/issues/672#issuecomment-281779360:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1557018; Originator: YES. As you wish, I admit I don't have the time to implement right now the solution that I just proposed... but I think that setting locale parameters in a _library_ is too dangerous to be considered a viable solution... it's OK as a very temporary solution though. The problems will happen in multithreaded apps doing something else while OpenBabel is parsing a file. Suppose that the app has two threads, one allows to manipulate a molecule, one allows to edit a document (could be a worksheet). When the app quits, it tells both threads to save their data. So the first thread saves the molecule, the second thread saves the document. The first one changes the locale, which affects the second which wants to honor the locale as it is writing a human-readable document. Of course things are even worse if both threads are playing with the locale, e.g. if both are doing OpenBabel I/O... Original comment by: benoitjacob",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779360
https://github.com/openbabel/openbabel/issues/672#issuecomment-281779361:401,Deployability,release,release,401,"Logged In: YES ; user_id=21420; Originator: NO. As this bug stands, it affects reading. I did change the behavior for writing files with OBConversion::Write. However, this need not be the case. I'd be happy to say ""all programs should set the locale to C"" but I don't think that's a good solution either. Furthermore, it's a lot of work to change all calls to sscanf, atoi, atof, etc. before the 2.2. release. I think this is an OK workaround until a more complete solution is found. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779361
https://github.com/openbabel/openbabel/issues/672#issuecomment-281779361:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. As this bug stands, it affects reading. I did change the behavior for writing files with OBConversion::Write. However, this need not be the case. I'd be happy to say ""all programs should set the locale to C"" but I don't think that's a good solution either. Furthermore, it's a lot of work to change all calls to sscanf, atoi, atof, etc. before the 2.2. release. I think this is an OK workaround until a more complete solution is found. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779361
https://github.com/openbabel/openbabel/issues/672#issuecomment-281779362:170,Availability,fault,faulty,170,"Logged In: YES ; user_id=1557018; Originator: YES. And what about that other solution, to write OpenBbael::strtof() functions etc... overriding the C library?. Or if the faulty code is not in namespace OpenBabel you can still override the C functions by #defines but of course thta's uglier... Original comment by: benoitjacob",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779362
https://github.com/openbabel/openbabel/issues/672#issuecomment-281779362:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1557018; Originator: YES. And what about that other solution, to write OpenBbael::strtof() functions etc... overriding the C library?. Or if the faulty code is not in namespace OpenBabel you can still override the C functions by #defines but of course thta's uglier... Original comment by: benoitjacob",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779362
https://github.com/openbabel/openbabel/issues/672#issuecomment-281779363:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=787122; Originator: NO. glib has code that might be copied to OpenBabel, since it is lgpl-v2+, see g_ascii_strtod and g_ascii_dtostr. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779363
https://github.com/openbabel/openbabel/issues/672#issuecomment-281779365:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. If someone wants to implement code to override the C library, please do. That's a better solution. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779365
https://github.com/openbabel/openbabel/issues/673#issuecomment-281779375:49,Deployability,Patch,Patch,49,Logged In: YES ; user_id=787122; Originator: NO. Patch applied to both branches. Thanks for it. Original comment by: jbrefort,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/673#issuecomment-281779375
https://github.com/openbabel/openbabel/issues/673#issuecomment-281779375:0,Testability,Log,Logged,0,Logged In: YES ; user_id=787122; Originator: NO. Patch applied to both branches. Thanks for it. Original comment by: jbrefort,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/673#issuecomment-281779375
https://github.com/openbabel/openbabel/issues/674#issuecomment-281779389:0,Testability,Log,Logged,0,Logged In: YES ; user_id=349408; Originator: YES. File Added: melanocortin-2007-17-16.cdx. Original comment by: @rajarshi,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779389
https://github.com/openbabel/openbabel/issues/674#issuecomment-281779391:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=787122; Originator: NO. cdx and cdxml support are still somewhat minimalist. Probably, chirality has not been implemented yet. I'll have a look. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779391
https://github.com/openbabel/openbabel/issues/674#issuecomment-281779393:169,Deployability,configurat,configuration,169,"Logged In: YES ; user_id=787122; Originator: NO. It is not a cdx format issue. Importing the molecule in gchempaint using this format gives two atoms with anticlockwise configuration.; Exporting the molecule to SMILES loose the stereochemistry, because chirality is not specified for these atoms. Looks more like a perception issue. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779393
https://github.com/openbabel/openbabel/issues/674#issuecomment-281779393:169,Modifiability,config,configuration,169,"Logged In: YES ; user_id=787122; Originator: NO. It is not a cdx format issue. Importing the molecule in gchempaint using this format gives two atoms with anticlockwise configuration.; Exporting the molecule to SMILES loose the stereochemistry, because chirality is not specified for these atoms. Looks more like a perception issue. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779393
https://github.com/openbabel/openbabel/issues/674#issuecomment-281779393:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=787122; Originator: NO. It is not a cdx format issue. Importing the molecule in gchempaint using this format gives two atoms with anticlockwise configuration.; Exporting the molecule to SMILES loose the stereochemistry, because chirality is not specified for these atoms. Looks more like a perception issue. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779393
https://github.com/openbabel/openbabel/issues/674#issuecomment-281779394:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=787122; Originator: NO. hmm, I missed that there might be some stereochemistry in chemdraw files. I'll try to get it, but already checked that none is given in the samples (some atoms are said symmetric and there is no stereochemistry for the others). So we need to perceive the stereochemistry in OpenBabel. I have no idea how this is feasible. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779394
https://github.com/openbabel/openbabel/issues/674#issuecomment-281779396:339,Availability,error,errors,339,"Logged In: YES ; user_id=787122; Originator: NO. Seems it works with canonical SMILES (can), but not with smi. babel -i cdx ../samples/melanocortin-2007-15-11.cdx -o can; ==============================; Clc1ccc(C[C@H](N2CCCNC2=O)C(=O)N2CCN(CC2)c2ccc(cc2[C@@H](N)CC(C)C)C(F)(F)F)c(Cl)c1 melanocortin-2007-15-11.cdx; 1 molecule converted; 1 errors 36 audit log messages 508 debugging messages. So the issue is that the smi format does not attempts to check the stereochemistry when not already known. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779396
https://github.com/openbabel/openbabel/issues/674#issuecomment-281779396:359,Integrability,message,messages,359,"Logged In: YES ; user_id=787122; Originator: NO. Seems it works with canonical SMILES (can), but not with smi. babel -i cdx ../samples/melanocortin-2007-15-11.cdx -o can; ==============================; Clc1ccc(C[C@H](N2CCCNC2=O)C(=O)N2CCN(CC2)c2ccc(cc2[C@@H](N)CC(C)C)C(F)(F)F)c(Cl)c1 melanocortin-2007-15-11.cdx; 1 molecule converted; 1 errors 36 audit log messages 508 debugging messages. So the issue is that the smi format does not attempts to check the stereochemistry when not already known. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779396
https://github.com/openbabel/openbabel/issues/674#issuecomment-281779396:382,Integrability,message,messages,382,"Logged In: YES ; user_id=787122; Originator: NO. Seems it works with canonical SMILES (can), but not with smi. babel -i cdx ../samples/melanocortin-2007-15-11.cdx -o can; ==============================; Clc1ccc(C[C@H](N2CCCNC2=O)C(=O)N2CCN(CC2)c2ccc(cc2[C@@H](N)CC(C)C)C(F)(F)F)c(Cl)c1 melanocortin-2007-15-11.cdx; 1 molecule converted; 1 errors 36 audit log messages 508 debugging messages. So the issue is that the smi format does not attempts to check the stereochemistry when not already known. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779396
https://github.com/openbabel/openbabel/issues/674#issuecomment-281779396:349,Security,audit,audit,349,"Logged In: YES ; user_id=787122; Originator: NO. Seems it works with canonical SMILES (can), but not with smi. babel -i cdx ../samples/melanocortin-2007-15-11.cdx -o can; ==============================; Clc1ccc(C[C@H](N2CCCNC2=O)C(=O)N2CCN(CC2)c2ccc(cc2[C@@H](N)CC(C)C)C(F)(F)F)c(Cl)c1 melanocortin-2007-15-11.cdx; 1 molecule converted; 1 errors 36 audit log messages 508 debugging messages. So the issue is that the smi format does not attempts to check the stereochemistry when not already known. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779396
https://github.com/openbabel/openbabel/issues/674#issuecomment-281779396:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=787122; Originator: NO. Seems it works with canonical SMILES (can), but not with smi. babel -i cdx ../samples/melanocortin-2007-15-11.cdx -o can; ==============================; Clc1ccc(C[C@H](N2CCCNC2=O)C(=O)N2CCN(CC2)c2ccc(cc2[C@@H](N)CC(C)C)C(F)(F)F)c(Cl)c1 melanocortin-2007-15-11.cdx; 1 molecule converted; 1 errors 36 audit log messages 508 debugging messages. So the issue is that the smi format does not attempts to check the stereochemistry when not already known. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779396
https://github.com/openbabel/openbabel/issues/674#issuecomment-281779396:355,Testability,log,log,355,"Logged In: YES ; user_id=787122; Originator: NO. Seems it works with canonical SMILES (can), but not with smi. babel -i cdx ../samples/melanocortin-2007-15-11.cdx -o can; ==============================; Clc1ccc(C[C@H](N2CCCNC2=O)C(=O)N2CCN(CC2)c2ccc(cc2[C@@H](N)CC(C)C)C(F)(F)F)c(Cl)c1 melanocortin-2007-15-11.cdx; 1 molecule converted; 1 errors 36 audit log messages 508 debugging messages. So the issue is that the smi format does not attempts to check the stereochemistry when not already known. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779396
https://github.com/openbabel/openbabel/issues/674#issuecomment-281779398:241,Integrability,message,messages,241,"Logged In: NO . It works if you ask for CANONICAL SMILES. % babel -j -icdx melanocortin-2007-17-16.cdx -ocan; O=Cc1ccccc1N1CCN(CC1)[C@@H](=O)[C@H]1CN(C[C@H]1c1ccc(Cl)cc1)C(C)C	_melanocortin-2007-17-16.cdx; 1 molecule converted; 46 audit log messages 393 debugging messages . (Openbabel 2.1.1, Mac OS X 10.5.1) ufos@ufos-software.com. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779398
https://github.com/openbabel/openbabel/issues/674#issuecomment-281779398:264,Integrability,message,messages,264,"Logged In: NO . It works if you ask for CANONICAL SMILES. % babel -j -icdx melanocortin-2007-17-16.cdx -ocan; O=Cc1ccccc1N1CCN(CC1)[C@@H](=O)[C@H]1CN(C[C@H]1c1ccc(Cl)cc1)C(C)C	_melanocortin-2007-17-16.cdx; 1 molecule converted; 46 audit log messages 393 debugging messages . (Openbabel 2.1.1, Mac OS X 10.5.1) ufos@ufos-software.com. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779398
https://github.com/openbabel/openbabel/issues/674#issuecomment-281779398:231,Security,audit,audit,231,"Logged In: NO . It works if you ask for CANONICAL SMILES. % babel -j -icdx melanocortin-2007-17-16.cdx -ocan; O=Cc1ccccc1N1CCN(CC1)[C@@H](=O)[C@H]1CN(C[C@H]1c1ccc(Cl)cc1)C(C)C	_melanocortin-2007-17-16.cdx; 1 molecule converted; 46 audit log messages 393 debugging messages . (Openbabel 2.1.1, Mac OS X 10.5.1) ufos@ufos-software.com. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779398
https://github.com/openbabel/openbabel/issues/674#issuecomment-281779398:0,Testability,Log,Logged,0,"Logged In: NO . It works if you ask for CANONICAL SMILES. % babel -j -icdx melanocortin-2007-17-16.cdx -ocan; O=Cc1ccccc1N1CCN(CC1)[C@@H](=O)[C@H]1CN(C[C@H]1c1ccc(Cl)cc1)C(C)C	_melanocortin-2007-17-16.cdx; 1 molecule converted; 46 audit log messages 393 debugging messages . (Openbabel 2.1.1, Mac OS X 10.5.1) ufos@ufos-software.com. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779398
https://github.com/openbabel/openbabel/issues/674#issuecomment-281779398:237,Testability,log,log,237,"Logged In: NO . It works if you ask for CANONICAL SMILES. % babel -j -icdx melanocortin-2007-17-16.cdx -ocan; O=Cc1ccccc1N1CCN(CC1)[C@@H](=O)[C@H]1CN(C[C@H]1c1ccc(Cl)cc1)C(C)C	_melanocortin-2007-17-16.cdx; 1 molecule converted; 46 audit log messages 393 debugging messages . (Openbabel 2.1.1, Mac OS X 10.5.1) ufos@ufos-software.com. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779398
https://github.com/openbabel/openbabel/issues/674#issuecomment-281779399:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420; Originator: NO. This is fixed in SVN trunk -- which uses the canonical SMILES output for SMILES. I'm marking this closed pending further comment from Rajarshi. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779399
https://github.com/openbabel/openbabel/issues/674#issuecomment-281779400:0,Testability,Log,Logged,0,Logged In: YES ; user_id=349408; Originator: YES. This works for me - the bug can be closed. Original comment by: @rajarshi,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779400
https://github.com/openbabel/openbabel/issues/675#issuecomment-281779417:0,Testability,Log,Logged,0,Logged In: YES ; user_id=1189615; Originator: NO. Probably fixed in rev 2069 in HEAD code. Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/675#issuecomment-281779417
https://github.com/openbabel/openbabel/issues/676#issuecomment-281779436:0,Testability,Log,Logged,0,Logged In: YES ; user_id=1189615; Originator: NO. Fixed in HEAD code revision 2056. Documentation improved. . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/676#issuecomment-281779436
https://github.com/openbabel/openbabel/issues/678#issuecomment-281779474:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=850620; Originator: NO. For the record, no problems on Windows with following Python code:. >>> import pybel; >>> a=pybel.readfile(""mol"", ""kaputt.mol"").next(); >>> a.formula; 'C14H16ClN3O8S2'; >>> a.molwt; 453.87513999999999; >>> a.OBMol.AddHydrogens(); True; >>> a.formula; 'C14H16ClN3O8S2'; >>> a.molwt; 453.87514000000016; >>> a=pybel.readfile(""mol"", ""kaputt.mol"").next(); >>> a.OBMol.AddHydrogens(False, False); True; >>> a.molwt; 453.87514000000016; >>> a.formula; 'C14H16ClN3O8S2'; >>>. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/678#issuecomment-281779474
https://github.com/openbabel/openbabel/issues/678#issuecomment-281779476:95,Availability,error,error,95,"Logged In: YES ; user_id=1189615; Originator: NO. I think your code has a (common) programming error.; In ob_hillformula the pointer tmpFormula does not have any memory assigned to it. So depending on where it pointed, the function could work, or it could crash. Even if it had, you would be returning the value of a local variable. I would return a std::string by value. Incidentally, you don't need to call AddHydrogens() before using GetFormula() or GetMolWt(). Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/678#issuecomment-281779476
https://github.com/openbabel/openbabel/issues/678#issuecomment-281779476:188,Integrability,depend,depending,188,"Logged In: YES ; user_id=1189615; Originator: NO. I think your code has a (common) programming error.; In ob_hillformula the pointer tmpFormula does not have any memory assigned to it. So depending on where it pointed, the function could work, or it could crash. Even if it had, you would be returning the value of a local variable. I would return a std::string by value. Incidentally, you don't need to call AddHydrogens() before using GetFormula() or GetMolWt(). Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/678#issuecomment-281779476
https://github.com/openbabel/openbabel/issues/678#issuecomment-281779476:323,Modifiability,variab,variable,323,"Logged In: YES ; user_id=1189615; Originator: NO. I think your code has a (common) programming error.; In ob_hillformula the pointer tmpFormula does not have any memory assigned to it. So depending on where it pointed, the function could work, or it could crash. Even if it had, you would be returning the value of a local variable. I would return a std::string by value. Incidentally, you don't need to call AddHydrogens() before using GetFormula() or GetMolWt(). Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/678#issuecomment-281779476
https://github.com/openbabel/openbabel/issues/678#issuecomment-281779476:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615; Originator: NO. I think your code has a (common) programming error.; In ob_hillformula the pointer tmpFormula does not have any memory assigned to it. So depending on where it pointed, the function could work, or it could crash. Even if it had, you would be returning the value of a local variable. I would return a std::string by value. Incidentally, you don't need to call AddHydrogens() before using GetFormula() or GetMolWt(). Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/678#issuecomment-281779476
https://github.com/openbabel/openbabel/issues/678#issuecomment-281779477:97,Availability,error,error,97,"Logged In: YES ; user_id=1391954; Originator: YES. >I think your code has a (common) programming error.; >In ob_hillformula the pointer tmpFormula does not have any memory assigned; >to it. So depending on where it pointed, the function could work, or it. Objection your honor!. man strdup (3):. The strdup() function allocates sufficient memory for a copy of the string str, does the copy, and returns a pointer to it. The pointer may subsequently be used as an argument to the function free(3). My code my have problems but I never release something that frequently crashes and since I call free() on that pointer later, I'm pretty sure it is properly allocated. The PostgreSQL server is remorseless in case of memory violations. ;-). I'm currently suspecting the MinGW compiler 3.4.2 I use to be the reason (which has at least one problem with optimizations switched on), so I would like to have this bug reopened until I can verify this. I'm currently updating to MSYS 5.1.3 with gcc 3.4.5 so it won't take long. But this still not explains why it works with Openbabel 2.0.x and the same compiler... Original comment by: @ergo70",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/678#issuecomment-281779477
https://github.com/openbabel/openbabel/issues/678#issuecomment-281779477:534,Deployability,release,release,534,"Logged In: YES ; user_id=1391954; Originator: YES. >I think your code has a (common) programming error.; >In ob_hillformula the pointer tmpFormula does not have any memory assigned; >to it. So depending on where it pointed, the function could work, or it. Objection your honor!. man strdup (3):. The strdup() function allocates sufficient memory for a copy of the string str, does the copy, and returns a pointer to it. The pointer may subsequently be used as an argument to the function free(3). My code my have problems but I never release something that frequently crashes and since I call free() on that pointer later, I'm pretty sure it is properly allocated. The PostgreSQL server is remorseless in case of memory violations. ;-). I'm currently suspecting the MinGW compiler 3.4.2 I use to be the reason (which has at least one problem with optimizations switched on), so I would like to have this bug reopened until I can verify this. I'm currently updating to MSYS 5.1.3 with gcc 3.4.5 so it won't take long. But this still not explains why it works with Openbabel 2.0.x and the same compiler... Original comment by: @ergo70",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/678#issuecomment-281779477
https://github.com/openbabel/openbabel/issues/678#issuecomment-281779477:318,Energy Efficiency,allocate,allocates,318,"Logged In: YES ; user_id=1391954; Originator: YES. >I think your code has a (common) programming error.; >In ob_hillformula the pointer tmpFormula does not have any memory assigned; >to it. So depending on where it pointed, the function could work, or it. Objection your honor!. man strdup (3):. The strdup() function allocates sufficient memory for a copy of the string str, does the copy, and returns a pointer to it. The pointer may subsequently be used as an argument to the function free(3). My code my have problems but I never release something that frequently crashes and since I call free() on that pointer later, I'm pretty sure it is properly allocated. The PostgreSQL server is remorseless in case of memory violations. ;-). I'm currently suspecting the MinGW compiler 3.4.2 I use to be the reason (which has at least one problem with optimizations switched on), so I would like to have this bug reopened until I can verify this. I'm currently updating to MSYS 5.1.3 with gcc 3.4.5 so it won't take long. But this still not explains why it works with Openbabel 2.0.x and the same compiler... Original comment by: @ergo70",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/678#issuecomment-281779477
https://github.com/openbabel/openbabel/issues/678#issuecomment-281779477:654,Energy Efficiency,allocate,allocated,654,"Logged In: YES ; user_id=1391954; Originator: YES. >I think your code has a (common) programming error.; >In ob_hillformula the pointer tmpFormula does not have any memory assigned; >to it. So depending on where it pointed, the function could work, or it. Objection your honor!. man strdup (3):. The strdup() function allocates sufficient memory for a copy of the string str, does the copy, and returns a pointer to it. The pointer may subsequently be used as an argument to the function free(3). My code my have problems but I never release something that frequently crashes and since I call free() on that pointer later, I'm pretty sure it is properly allocated. The PostgreSQL server is remorseless in case of memory violations. ;-). I'm currently suspecting the MinGW compiler 3.4.2 I use to be the reason (which has at least one problem with optimizations switched on), so I would like to have this bug reopened until I can verify this. I'm currently updating to MSYS 5.1.3 with gcc 3.4.5 so it won't take long. But this still not explains why it works with Openbabel 2.0.x and the same compiler... Original comment by: @ergo70",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/678#issuecomment-281779477
https://github.com/openbabel/openbabel/issues/678#issuecomment-281779477:193,Integrability,depend,depending,193,"Logged In: YES ; user_id=1391954; Originator: YES. >I think your code has a (common) programming error.; >In ob_hillformula the pointer tmpFormula does not have any memory assigned; >to it. So depending on where it pointed, the function could work, or it. Objection your honor!. man strdup (3):. The strdup() function allocates sufficient memory for a copy of the string str, does the copy, and returns a pointer to it. The pointer may subsequently be used as an argument to the function free(3). My code my have problems but I never release something that frequently crashes and since I call free() on that pointer later, I'm pretty sure it is properly allocated. The PostgreSQL server is remorseless in case of memory violations. ;-). I'm currently suspecting the MinGW compiler 3.4.2 I use to be the reason (which has at least one problem with optimizations switched on), so I would like to have this bug reopened until I can verify this. I'm currently updating to MSYS 5.1.3 with gcc 3.4.5 so it won't take long. But this still not explains why it works with Openbabel 2.0.x and the same compiler... Original comment by: @ergo70",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/678#issuecomment-281779477
https://github.com/openbabel/openbabel/issues/678#issuecomment-281779477:847,Performance,optimiz,optimizations,847,"Logged In: YES ; user_id=1391954; Originator: YES. >I think your code has a (common) programming error.; >In ob_hillformula the pointer tmpFormula does not have any memory assigned; >to it. So depending on where it pointed, the function could work, or it. Objection your honor!. man strdup (3):. The strdup() function allocates sufficient memory for a copy of the string str, does the copy, and returns a pointer to it. The pointer may subsequently be used as an argument to the function free(3). My code my have problems but I never release something that frequently crashes and since I call free() on that pointer later, I'm pretty sure it is properly allocated. The PostgreSQL server is remorseless in case of memory violations. ;-). I'm currently suspecting the MinGW compiler 3.4.2 I use to be the reason (which has at least one problem with optimizations switched on), so I would like to have this bug reopened until I can verify this. I'm currently updating to MSYS 5.1.3 with gcc 3.4.5 so it won't take long. But this still not explains why it works with Openbabel 2.0.x and the same compiler... Original comment by: @ergo70",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/678#issuecomment-281779477
https://github.com/openbabel/openbabel/issues/678#issuecomment-281779477:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1391954; Originator: YES. >I think your code has a (common) programming error.; >In ob_hillformula the pointer tmpFormula does not have any memory assigned; >to it. So depending on where it pointed, the function could work, or it. Objection your honor!. man strdup (3):. The strdup() function allocates sufficient memory for a copy of the string str, does the copy, and returns a pointer to it. The pointer may subsequently be used as an argument to the function free(3). My code my have problems but I never release something that frequently crashes and since I call free() on that pointer later, I'm pretty sure it is properly allocated. The PostgreSQL server is remorseless in case of memory violations. ;-). I'm currently suspecting the MinGW compiler 3.4.2 I use to be the reason (which has at least one problem with optimizations switched on), so I would like to have this bug reopened until I can verify this. I'm currently updating to MSYS 5.1.3 with gcc 3.4.5 so it won't take long. But this still not explains why it works with Openbabel 2.0.x and the same compiler... Original comment by: @ergo70",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/678#issuecomment-281779477
https://github.com/openbabel/openbabel/issues/678#issuecomment-281779480:51,Deployability,Update,Update,51,"Logged In: YES ; user_id=1391954; Originator: YES. Update: I have removed the call to AddHydrogens() as suggested and now it works. So if there is really a bug, it's most likely in AddHydrogens(). Original comment by: @ergo70",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/678#issuecomment-281779480
https://github.com/openbabel/openbabel/issues/678#issuecomment-281779480:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1391954; Originator: YES. Update: I have removed the call to AddHydrogens() as suggested and now it works. So if there is really a bug, it's most likely in AddHydrogens(). Original comment by: @ergo70",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/678#issuecomment-281779480
https://github.com/openbabel/openbabel/issues/678#issuecomment-281779481:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615; Originator: NO. My apologies, I realized overnight that strdup was used and came back this morning to retract. I guess I think in a C++ rather than a C way.; The bug is still a mystery. I'll look at at AddHydrogens() which has changed a little since v2.0.1. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/678#issuecomment-281779481
https://github.com/openbabel/openbabel/issues/678#issuecomment-281779482:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1391954; Originator: YES. This was most likely a compiler bug with MinGW gcc 3.4.2. After updating to the current MinGW gcc 3.4.5. and recompiling, everything works fine. And it comes with it's own gettimeofday() also, no need to tinker with the Makefiles anymore. :). Original comment by: @ergo70",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/678#issuecomment-281779482
https://github.com/openbabel/openbabel/issues/679#issuecomment-281779491:0,Testability,Test,Test,0,Test molecule. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/679#issuecomment-281779491
https://github.com/openbabel/openbabel/issues/679#issuecomment-281779493:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615; Originator: NO. Thanks for the suggestion, which is now in rev 2067 in HEAD code.; Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/679#issuecomment-281779493
https://github.com/openbabel/openbabel/issues/1489#issuecomment-281810785:0,Testability,Log,Logged,0,Logged In: YES ; user_id=850620; Originator: NO. Ballester et al. have filed a patent (http://cisrg.shef.ac.uk/shef2007/talks/ballester.pdf) so come back to us in 10 years or so. :-/. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1489#issuecomment-281810785
https://github.com/openbabel/openbabel/issues/680#issuecomment-281779505:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. This should now be fixed in the development code (SVN trunk, revision 2578 or later) and will be in both 2.2.0b7 and 2.2.0. Thanks. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/680#issuecomment-281779505
https://github.com/openbabel/openbabel/issues/681#issuecomment-281779520:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420; Originator: NO. Thanks for the bug report. This will now be fixed in 2.2.0b7 and future versions!. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/681#issuecomment-281779520
https://github.com/openbabel/openbabel/issues/682#issuecomment-281779539:190,Availability,error,error,190,"Logged In: YES ; user_id=21420; Originator: YES. Thanks in large part to Tim Vandermeersch, this is now fixed in the SVN trunk (revision 2271 or later). The force fields themselves are more error tolerant, the gradient calculations are more error-proof, and the optimizer itself is bullet-proof. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/682#issuecomment-281779539
https://github.com/openbabel/openbabel/issues/682#issuecomment-281779539:196,Availability,toler,tolerant,196,"Logged In: YES ; user_id=21420; Originator: YES. Thanks in large part to Tim Vandermeersch, this is now fixed in the SVN trunk (revision 2271 or later). The force fields themselves are more error tolerant, the gradient calculations are more error-proof, and the optimizer itself is bullet-proof. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/682#issuecomment-281779539
https://github.com/openbabel/openbabel/issues/682#issuecomment-281779539:241,Availability,error,error-proof,241,"Logged In: YES ; user_id=21420; Originator: YES. Thanks in large part to Tim Vandermeersch, this is now fixed in the SVN trunk (revision 2271 or later). The force fields themselves are more error tolerant, the gradient calculations are more error-proof, and the optimizer itself is bullet-proof. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/682#issuecomment-281779539
https://github.com/openbabel/openbabel/issues/682#issuecomment-281779539:262,Performance,optimiz,optimizer,262,"Logged In: YES ; user_id=21420; Originator: YES. Thanks in large part to Tim Vandermeersch, this is now fixed in the SVN trunk (revision 2271 or later). The force fields themselves are more error tolerant, the gradient calculations are more error-proof, and the optimizer itself is bullet-proof. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/682#issuecomment-281779539
https://github.com/openbabel/openbabel/issues/682#issuecomment-281779539:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: YES. Thanks in large part to Tim Vandermeersch, this is now fixed in the SVN trunk (revision 2271 or later). The force fields themselves are more error tolerant, the gradient calculations are more error-proof, and the optimizer itself is bullet-proof. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/682#issuecomment-281779539
https://github.com/openbabel/openbabel/issues/683#issuecomment-281779558:404,Safety,avoid,avoids,404,Logged In: YES ; user_id=1189615; Originator: NO. Thank you for taking the trouble to providing such a detailed description. There is more than one bug here.; The SMILES parser was not ordering the atoms correctly when one or more of the atoms attached to a chiral center was a ring closure.; The loss of chiral info occurred in FindChiralCenters(). Calling this was unnecessary and the SMILES parse now avoids this by calling SetChiralityPerceived().; These two corrections are in smilesformat.cpp rev 2065 (which compatible with v2.1.1) and SMILES to InChI should now be ok. There still seems to be a bug in Canonical SMILES output and this has not yet been corrected. The third set of molecules listed in the original bug report are examples. . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779558
https://github.com/openbabel/openbabel/issues/683#issuecomment-281779558:0,Testability,Log,Logged,0,Logged In: YES ; user_id=1189615; Originator: NO. Thank you for taking the trouble to providing such a detailed description. There is more than one bug here.; The SMILES parser was not ordering the atoms correctly when one or more of the atoms attached to a chiral center was a ring closure.; The loss of chiral info occurred in FindChiralCenters(). Calling this was unnecessary and the SMILES parse now avoids this by calling SetChiralityPerceived().; These two corrections are in smilesformat.cpp rev 2065 (which compatible with v2.1.1) and SMILES to InChI should now be ok. There still seems to be a bug in Canonical SMILES output and this has not yet been corrected. The third set of molecules listed in the original bug report are examples. . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779558
https://github.com/openbabel/openbabel/issues/683#issuecomment-281779559:1064,Availability,down,down,1064,"Logged In: YES ; user_id=1514992; Originator: YES. Excellent, thank you! We applied smilesformat.cpp rev 2065 and now all 26 test cases provided pass without complaint. I expanded my testing net to include slightly larger molecules ( <= 30 SMILES characters, 891 chiral molecules tested) and came up with a new set of discrepancies (total of 12). As before I can't be certain in all cases that it's not a discrepancy hard-coded in the MolFile / SMILES columns of the database, but I hand checked a couple that seem to be a problem within OpenBabel. In the first case (attached as OB01_DoubleRing.mol) the SMILES string from the vendor database converted fine, both apparently to canonical SMILES and InChI. The MolFile converted to canonical SMILES ok, but lost the stereochemistry on one of the two chiral centers when converted to InChI. If I read the connection table in the MolFile correctly, the two carbons in question are atom 2 (between the two oxygens, which are atoms 3 and 11) and atom 1 (methyl group); that bond appears to be explicitly specified as ""down"" chirality in the 2-1 bond row ('6'). For reference, the vendor-supplied SMILES string is C[C@@H]1OC[C@]2(CCN(C)C2)O1 while the OpenBabel canonical form is CN1CC[C@]2(CO[C@@H](C)O2)C1. The second problem is with a fused ring (not sure that's the correct terminology), molfile attached as OB02_FusedRing.mol. The molecule techincally has three chiral centers, but two of them may only have one R/L form sterically accessible (?). The molfile specifies chirality for all three. OB export to InChI results in loss of chirality information on all three centers ( InChI=1/C8H15NO/c1-9-6-2-3-7(9)5-8(10)4-6/h6-8,10H,2-5H2,1H3 ). OB export to canonical SMILES losses chirality on the hydroxyl. Working with the vendor supplied SMILES string ( CN1[C@@H]2CC[C@H]1C[C@@H](O)C2 ) as input instead of the molfile results in a chirality flip on the hydroxyl when output as canonical smiles ( O[C@@H]3C[C@H]4CC[C@@H](C3)N4C ), but proper chiralit",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779559
https://github.com/openbabel/openbabel/issues/683#issuecomment-281779559:2604,Energy Efficiency,charge,charge,2604,"canonical SMILES ok, but lost the stereochemistry on one of the two chiral centers when converted to InChI. If I read the connection table in the MolFile correctly, the two carbons in question are atom 2 (between the two oxygens, which are atoms 3 and 11) and atom 1 (methyl group); that bond appears to be explicitly specified as ""down"" chirality in the 2-1 bond row ('6'). For reference, the vendor-supplied SMILES string is C[C@@H]1OC[C@]2(CCN(C)C2)O1 while the OpenBabel canonical form is CN1CC[C@]2(CO[C@@H](C)O2)C1. The second problem is with a fused ring (not sure that's the correct terminology), molfile attached as OB02_FusedRing.mol. The molecule techincally has three chiral centers, but two of them may only have one R/L form sterically accessible (?). The molfile specifies chirality for all three. OB export to InChI results in loss of chirality information on all three centers ( InChI=1/C8H15NO/c1-9-6-2-3-7(9)5-8(10)4-6/h6-8,10H,2-5H2,1H3 ). OB export to canonical SMILES losses chirality on the hydroxyl. Working with the vendor supplied SMILES string ( CN1[C@@H]2CC[C@H]1C[C@@H](O)C2 ) as input instead of the molfile results in a chirality flip on the hydroxyl when output as canonical smiles ( O[C@@H]3C[C@H]4CC[C@@H](C3)N4C ), but proper chirality is conserved with InChI output ( InChI=1/C8H15NO/c1-9-6-2-3-7(9)5-8(10)4-6/h6-8,10H,2-5H2,1H3/t6-,7+,8+ ). It's a funky structure; it has a plane of symmetry through the hydroxyl, so I suppose it's a structural stereoisomer rather than specifically chiral, but I'm not sure given that the ring is constrained (? - would it be able to invert back-and-forth?). For that matter, I'm not sure that the stereochemistry describing the bonds to the nitrogen is totally sane in the molfile. I have other examples, but from scanning I found a few cases that I'm pretty certain are vendor-embedded differences (charge variation in a couple cases). Anyway if needed I can try to dredge up other examples. Original comment by: listentoreason",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779559
https://github.com/openbabel/openbabel/issues/683#issuecomment-281779559:1482,Security,access,accessible,1482,"olFile / SMILES columns of the database, but I hand checked a couple that seem to be a problem within OpenBabel. In the first case (attached as OB01_DoubleRing.mol) the SMILES string from the vendor database converted fine, both apparently to canonical SMILES and InChI. The MolFile converted to canonical SMILES ok, but lost the stereochemistry on one of the two chiral centers when converted to InChI. If I read the connection table in the MolFile correctly, the two carbons in question are atom 2 (between the two oxygens, which are atoms 3 and 11) and atom 1 (methyl group); that bond appears to be explicitly specified as ""down"" chirality in the 2-1 bond row ('6'). For reference, the vendor-supplied SMILES string is C[C@@H]1OC[C@]2(CCN(C)C2)O1 while the OpenBabel canonical form is CN1CC[C@]2(CO[C@@H](C)O2)C1. The second problem is with a fused ring (not sure that's the correct terminology), molfile attached as OB02_FusedRing.mol. The molecule techincally has three chiral centers, but two of them may only have one R/L form sterically accessible (?). The molfile specifies chirality for all three. OB export to InChI results in loss of chirality information on all three centers ( InChI=1/C8H15NO/c1-9-6-2-3-7(9)5-8(10)4-6/h6-8,10H,2-5H2,1H3 ). OB export to canonical SMILES losses chirality on the hydroxyl. Working with the vendor supplied SMILES string ( CN1[C@@H]2CC[C@H]1C[C@@H](O)C2 ) as input instead of the molfile results in a chirality flip on the hydroxyl when output as canonical smiles ( O[C@@H]3C[C@H]4CC[C@@H](C3)N4C ), but proper chirality is conserved with InChI output ( InChI=1/C8H15NO/c1-9-6-2-3-7(9)5-8(10)4-6/h6-8,10H,2-5H2,1H3/t6-,7+,8+ ). It's a funky structure; it has a plane of symmetry through the hydroxyl, so I suppose it's a structural stereoisomer rather than specifically chiral, but I'm not sure given that the ring is constrained (? - would it be able to invert back-and-forth?). For that matter, I'm not sure that the stereochemistry describing the bonds",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779559
https://github.com/openbabel/openbabel/issues/683#issuecomment-281779559:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1514992; Originator: YES. Excellent, thank you! We applied smilesformat.cpp rev 2065 and now all 26 test cases provided pass without complaint. I expanded my testing net to include slightly larger molecules ( <= 30 SMILES characters, 891 chiral molecules tested) and came up with a new set of discrepancies (total of 12). As before I can't be certain in all cases that it's not a discrepancy hard-coded in the MolFile / SMILES columns of the database, but I hand checked a couple that seem to be a problem within OpenBabel. In the first case (attached as OB01_DoubleRing.mol) the SMILES string from the vendor database converted fine, both apparently to canonical SMILES and InChI. The MolFile converted to canonical SMILES ok, but lost the stereochemistry on one of the two chiral centers when converted to InChI. If I read the connection table in the MolFile correctly, the two carbons in question are atom 2 (between the two oxygens, which are atoms 3 and 11) and atom 1 (methyl group); that bond appears to be explicitly specified as ""down"" chirality in the 2-1 bond row ('6'). For reference, the vendor-supplied SMILES string is C[C@@H]1OC[C@]2(CCN(C)C2)O1 while the OpenBabel canonical form is CN1CC[C@]2(CO[C@@H](C)O2)C1. The second problem is with a fused ring (not sure that's the correct terminology), molfile attached as OB02_FusedRing.mol. The molecule techincally has three chiral centers, but two of them may only have one R/L form sterically accessible (?). The molfile specifies chirality for all three. OB export to InChI results in loss of chirality information on all three centers ( InChI=1/C8H15NO/c1-9-6-2-3-7(9)5-8(10)4-6/h6-8,10H,2-5H2,1H3 ). OB export to canonical SMILES losses chirality on the hydroxyl. Working with the vendor supplied SMILES string ( CN1[C@@H]2CC[C@H]1C[C@@H](O)C2 ) as input instead of the molfile results in a chirality flip on the hydroxyl when output as canonical smiles ( O[C@@H]3C[C@H]4CC[C@@H](C3)N4C ), but proper chiralit",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779559
https://github.com/openbabel/openbabel/issues/683#issuecomment-281779559:125,Testability,test,test,125,"Logged In: YES ; user_id=1514992; Originator: YES. Excellent, thank you! We applied smilesformat.cpp rev 2065 and now all 26 test cases provided pass without complaint. I expanded my testing net to include slightly larger molecules ( <= 30 SMILES characters, 891 chiral molecules tested) and came up with a new set of discrepancies (total of 12). As before I can't be certain in all cases that it's not a discrepancy hard-coded in the MolFile / SMILES columns of the database, but I hand checked a couple that seem to be a problem within OpenBabel. In the first case (attached as OB01_DoubleRing.mol) the SMILES string from the vendor database converted fine, both apparently to canonical SMILES and InChI. The MolFile converted to canonical SMILES ok, but lost the stereochemistry on one of the two chiral centers when converted to InChI. If I read the connection table in the MolFile correctly, the two carbons in question are atom 2 (between the two oxygens, which are atoms 3 and 11) and atom 1 (methyl group); that bond appears to be explicitly specified as ""down"" chirality in the 2-1 bond row ('6'). For reference, the vendor-supplied SMILES string is C[C@@H]1OC[C@]2(CCN(C)C2)O1 while the OpenBabel canonical form is CN1CC[C@]2(CO[C@@H](C)O2)C1. The second problem is with a fused ring (not sure that's the correct terminology), molfile attached as OB02_FusedRing.mol. The molecule techincally has three chiral centers, but two of them may only have one R/L form sterically accessible (?). The molfile specifies chirality for all three. OB export to InChI results in loss of chirality information on all three centers ( InChI=1/C8H15NO/c1-9-6-2-3-7(9)5-8(10)4-6/h6-8,10H,2-5H2,1H3 ). OB export to canonical SMILES losses chirality on the hydroxyl. Working with the vendor supplied SMILES string ( CN1[C@@H]2CC[C@H]1C[C@@H](O)C2 ) as input instead of the molfile results in a chirality flip on the hydroxyl when output as canonical smiles ( O[C@@H]3C[C@H]4CC[C@@H](C3)N4C ), but proper chiralit",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779559
https://github.com/openbabel/openbabel/issues/683#issuecomment-281779559:183,Testability,test,testing,183,"Logged In: YES ; user_id=1514992; Originator: YES. Excellent, thank you! We applied smilesformat.cpp rev 2065 and now all 26 test cases provided pass without complaint. I expanded my testing net to include slightly larger molecules ( <= 30 SMILES characters, 891 chiral molecules tested) and came up with a new set of discrepancies (total of 12). As before I can't be certain in all cases that it's not a discrepancy hard-coded in the MolFile / SMILES columns of the database, but I hand checked a couple that seem to be a problem within OpenBabel. In the first case (attached as OB01_DoubleRing.mol) the SMILES string from the vendor database converted fine, both apparently to canonical SMILES and InChI. The MolFile converted to canonical SMILES ok, but lost the stereochemistry on one of the two chiral centers when converted to InChI. If I read the connection table in the MolFile correctly, the two carbons in question are atom 2 (between the two oxygens, which are atoms 3 and 11) and atom 1 (methyl group); that bond appears to be explicitly specified as ""down"" chirality in the 2-1 bond row ('6'). For reference, the vendor-supplied SMILES string is C[C@@H]1OC[C@]2(CCN(C)C2)O1 while the OpenBabel canonical form is CN1CC[C@]2(CO[C@@H](C)O2)C1. The second problem is with a fused ring (not sure that's the correct terminology), molfile attached as OB02_FusedRing.mol. The molecule techincally has three chiral centers, but two of them may only have one R/L form sterically accessible (?). The molfile specifies chirality for all three. OB export to InChI results in loss of chirality information on all three centers ( InChI=1/C8H15NO/c1-9-6-2-3-7(9)5-8(10)4-6/h6-8,10H,2-5H2,1H3 ). OB export to canonical SMILES losses chirality on the hydroxyl. Working with the vendor supplied SMILES string ( CN1[C@@H]2CC[C@H]1C[C@@H](O)C2 ) as input instead of the molfile results in a chirality flip on the hydroxyl when output as canonical smiles ( O[C@@H]3C[C@H]4CC[C@@H](C3)N4C ), but proper chiralit",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779559
https://github.com/openbabel/openbabel/issues/683#issuecomment-281779559:280,Testability,test,tested,280,"Logged In: YES ; user_id=1514992; Originator: YES. Excellent, thank you! We applied smilesformat.cpp rev 2065 and now all 26 test cases provided pass without complaint. I expanded my testing net to include slightly larger molecules ( <= 30 SMILES characters, 891 chiral molecules tested) and came up with a new set of discrepancies (total of 12). As before I can't be certain in all cases that it's not a discrepancy hard-coded in the MolFile / SMILES columns of the database, but I hand checked a couple that seem to be a problem within OpenBabel. In the first case (attached as OB01_DoubleRing.mol) the SMILES string from the vendor database converted fine, both apparently to canonical SMILES and InChI. The MolFile converted to canonical SMILES ok, but lost the stereochemistry on one of the two chiral centers when converted to InChI. If I read the connection table in the MolFile correctly, the two carbons in question are atom 2 (between the two oxygens, which are atoms 3 and 11) and atom 1 (methyl group); that bond appears to be explicitly specified as ""down"" chirality in the 2-1 bond row ('6'). For reference, the vendor-supplied SMILES string is C[C@@H]1OC[C@]2(CCN(C)C2)O1 while the OpenBabel canonical form is CN1CC[C@]2(CO[C@@H](C)O2)C1. The second problem is with a fused ring (not sure that's the correct terminology), molfile attached as OB02_FusedRing.mol. The molecule techincally has three chiral centers, but two of them may only have one R/L form sterically accessible (?). The molfile specifies chirality for all three. OB export to InChI results in loss of chirality information on all three centers ( InChI=1/C8H15NO/c1-9-6-2-3-7(9)5-8(10)4-6/h6-8,10H,2-5H2,1H3 ). OB export to canonical SMILES losses chirality on the hydroxyl. Working with the vendor supplied SMILES string ( CN1[C@@H]2CC[C@H]1C[C@@H](O)C2 ) as input instead of the molfile results in a chirality flip on the hydroxyl when output as canonical smiles ( O[C@@H]3C[C@H]4CC[C@@H](C3)N4C ), but proper chiralit",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779559
https://github.com/openbabel/openbabel/issues/683#issuecomment-281779561:0,Testability,Log,Logged,0,Logged In: YES ; user_id=1514992; Originator: YES. File Added: OB01_DoubleRing.mol. Original comment by: listentoreason,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779561
https://github.com/openbabel/openbabel/issues/683#issuecomment-281779564:0,Testability,Log,Logged,0,Logged In: YES ; user_id=1514992; Originator: YES. File Added: OB02_FusedRing.mol. Original comment by: listentoreason,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779564
https://github.com/openbabel/openbabel/issues/683#issuecomment-281779570:123,Testability,test,testcase,123,"Noel, I think certainly the Molfile / SMILES bugs should be fixed with the stereo code. Should we make this bug into a new testcase?. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779570
https://github.com/openbabel/openbabel/issues/683#issuecomment-281779574:60,Testability,test,test,60,"Finally closed. The final hurdle was 2D -> InChI. Regarding test cases, I'd prefer to start off with simpler structures and be methodological about it. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779574
https://github.com/openbabel/openbabel/issues/683#issuecomment-281779574:101,Usability,simpl,simpler,101,"Finally closed. The final hurdle was 2D -> InChI. Regarding test cases, I'd prefer to start off with simpler structures and be methodological about it. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779574
https://github.com/openbabel/openbabel/issues/683#issuecomment-281779575:70,Testability,test,test,70,"For the record, I now have the following SMILES and InChI for the two test cases, OB01_DoubleRing/mol and OB02_FusedRing.mol respectively:. CN1CC[C@]2(CO[C@@H](C)O2)C1; InChI=1S/C8H15NO2/c1-7-10-6-8(11-7)3-4-9(2)5-8/h7H,3-6H2,1-2H3/t7-,8-/m1/s1. O[C@H]1C[C@H]2CC[C@@H](C1)N2C; InChI=1S/C8H15NO/c1-9-6-2-3-7(9)5-8(10)4-6/h6-8,10H,2-5H2,1H3/t6-,7+,8+. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779575
https://github.com/openbabel/openbabel/issues/684#issuecomment-281779588:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=787122; Originator: NO. it segfaults because com format is write-only. This makes the out format never set, and then the first call to it bugs.; IMHO, OBConversion::FullConvert should not be called if OBConversion::SetInAndOutFormats fails. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/684#issuecomment-281779588
https://github.com/openbabel/openbabel/issues/684#issuecomment-281779589:62,Availability,fault,fault,62,"Logged In: YES ; user_id=1189615; Originator: NO. Correct the fault identified by Jean in babel.cpp (and nbabel.cpp) in development SVN code rev 2074. It is surprising that this bug took so long to find. I guess experienced users know that a format is read-only; other users don't report bugs - so thank you, LI Daobing.; I mostly use the GUI where such errors are impossible, so this part of OpenBabel has received less critical attention. Chris . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/684#issuecomment-281779589
https://github.com/openbabel/openbabel/issues/684#issuecomment-281779589:354,Availability,error,errors,354,"Logged In: YES ; user_id=1189615; Originator: NO. Correct the fault identified by Jean in babel.cpp (and nbabel.cpp) in development SVN code rev 2074. It is surprising that this bug took so long to find. I guess experienced users know that a format is read-only; other users don't report bugs - so thank you, LI Daobing.; I mostly use the GUI where such errors are impossible, so this part of OpenBabel has received less critical attention. Chris . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/684#issuecomment-281779589
https://github.com/openbabel/openbabel/issues/684#issuecomment-281779589:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615; Originator: NO. Correct the fault identified by Jean in babel.cpp (and nbabel.cpp) in development SVN code rev 2074. It is surprising that this bug took so long to find. I guess experienced users know that a format is read-only; other users don't report bugs - so thank you, LI Daobing.; I mostly use the GUI where such errors are impossible, so this part of OpenBabel has received less critical attention. Chris . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/684#issuecomment-281779589
https://github.com/openbabel/openbabel/issues/685#issuecomment-281779596:0,Testability,Log,Logged,0,Logged In: YES ; user_id=1666820; Originator: YES. File Added: JINGAO.txyz. Original comment by: lidaobing,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/685#issuecomment-281779596
https://github.com/openbabel/openbabel/issues/685#issuecomment-281779598:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=196016; Originator: NO. For the record, openbabel-2.2 seems to get the bond between 12 and 13; however, I think there's no bond between 13 and 14. This is the diff between a openbabel-2.2 generated txyz, and the file attached to this bug report:. --- JINGAO.txyz	2008-06-10 01:24:21.000000000 +0200; +++ JINGAO.txyz_	2008-06-10 01:25:51.000000000 +0200; @@ -10,8 +10,8 @@; 9 O 1.223000 -0.680000 3.866000 7 8; 10 N 0.367000 -2.631000 3.149000 9 8 11 14; 11 C 1.104000 -3.427000 4.125000 1 10 12 15 63; - 12 C 0.641000 -4.849000 3.852000 1 11 13 64 65; - 13 C -0.198000 -4.829000 2.735000 1 12 66 67; + 12 C 0.641000 -4.849000 3.852000 1 11 64 65; + 13 C -0.198000 -4.829000 2.735000 1 66 67; 14 C -0.538000 -3.458000 2.333000 1 10 68 69; 15 C 2.613000 -3.304000 4.089000 2 11 16 17; 16 O 3.260000 -3.651000 5.072000 7 15. Original comment by: @mbanck",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/685#issuecomment-281779598
https://github.com/openbabel/openbabel/issues/685#issuecomment-281779599:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. This took some time to diagnose. It appears that the ConnectTheDots() was deleting existing bonds. I've modified the 2.2 trunk, which appears to fix this problem. I'm marking this fixed pending further comments. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/685#issuecomment-281779599
https://github.com/openbabel/openbabel/issues/685#issuecomment-281779600:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539; Originator: NO. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/685#issuecomment-281779600
https://github.com/openbabel/openbabel/issues/687#issuecomment-281779642:0,Testability,Log,Logged,0,Logged In: YES ; user_id=850620; Originator: NO. Duplicate of bug 1740998. See the solution there...we really should fix this...I'll bump the priority of this bug up as 64 bit platforms are becoming more common... Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/687#issuecomment-281779642
https://github.com/openbabel/openbabel/issues/687#issuecomment-281779644:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=850620; Originator: NO. Fixed in SVN trunk r2077. Workaround for the user is to replace; ""import dl""; with; ""import DLFCN as dl"". Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/687#issuecomment-281779644
https://github.com/openbabel/openbabel/issues/687#issuecomment-281779645:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1312539; Originator: NO. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/687#issuecomment-281779645
https://github.com/openbabel/openbabel/issues/688#issuecomment-281779652:85,Deployability,release,release,85,"Logged In: YES ; user_id=850620; Originator: NO. Works for me on Windows with latest release of OBPython for 3-methylbutanal taken from:; http://blueobelisk.svn.sourceforge.net/viewvc/*checkout*/blueobelisk/structures/trunk/src/aldehydes/3-methylbutanal.cml. (From the ""Submit a bug report"" page...) A good bug report should include:. * Your name and email address; * The version of Open Babel are you using, and your operating system (Linux, Mac OS X, Windows, Solaris, etc.); * An attachment containing an example input file that causes the problem.; * Please try to be specific and give an example of what exactly didn't work. Please let us know what you think should have happened instead. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779652
https://github.com/openbabel/openbabel/issues/688#issuecomment-281779652:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=850620; Originator: NO. Works for me on Windows with latest release of OBPython for 3-methylbutanal taken from:; http://blueobelisk.svn.sourceforge.net/viewvc/*checkout*/blueobelisk/structures/trunk/src/aldehydes/3-methylbutanal.cml. (From the ""Submit a bug report"" page...) A good bug report should include:. * Your name and email address; * The version of Open Babel are you using, and your operating system (Linux, Mac OS X, Windows, Solaris, etc.); * An attachment containing an example input file that causes the problem.; * Please try to be specific and give an example of what exactly didn't work. Please let us know what you think should have happened instead. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779652
https://github.com/openbabel/openbabel/issues/688#issuecomment-281779653:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=850620; Originator: NO. I might have been a bit hasty...when I closed the Python interpreter on Windows, it crashed, which is in agreement with your bug report. Next step is to reproduce on Linux, and trace the problem. It's a problem in the core OpenBabel libray rather than the Python. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779653
https://github.com/openbabel/openbabel/issues/688#issuecomment-281779655:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420; Originator: NO. Is this still a bug? I don't have problems saving to CML. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779655
https://github.com/openbabel/openbabel/issues/688#issuecomment-281779656:451,Availability,fault,fault,451,"Logged In: YES ; user_id=850620; Originator: NO. Still a bug. The problem is simply reading from the CML. Verified on Linux (using the SVN trunk r2217) with the following test file:; ===================; import pybel; mol = pybel.readfile(""cml"", ""3-methylbutanal.cml"").next(); ===================. Core dumped. ""gdb python core"", followed by ""bt"" gives:. Core was generated by `python test1815533.py'.; Program terminated with signal 11, Segmentation fault.; #0 0x00000169 in ?? (); (gdb) bt; #0 0x00000169 in ?? (); #1 0xb773eecf in ~OBConversion (this=0x81e1b70) at obconversion.cpp:253; #2 0xb78f7bd3 in _wrap_delete_OBConversion (args=0xb7b1efac); at openbabel_python.cpp:42252; #3 0x0805a84e in PyObject_CallFunctionObjArgs (); #4 0xb78ab5c5 in PySwigObject_dealloc (v=0xb7d90920); at openbabel_python.cpp:1434; #5 0x0807b88f in PyDict_GetItem (); #6 0x0808ba4e in PyType_GenericAlloc (); #7 0x080ff8c8 in PyFrame_Fini (); #8 0x080feea0 in PyDescr_NewMember (); #9 0x080fd57e in PyDictProxy_New (); #10 0x080b6918 in PyEval_EvalFrame (); #11 0x080ba735 in PyEval_EvalCodeEx (); #12 0x080ba799 in PyEval_EvalCode (); #13 0x080dd147 in PyRun_FileExFlags (); #14 0x080dd344 in PyRun_SimpleFileExFlags (); #15 0x08055ba8 in Py_Main (); #16 0x08055032 in main (). Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779656
https://github.com/openbabel/openbabel/issues/688#issuecomment-281779656:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=850620; Originator: NO. Still a bug. The problem is simply reading from the CML. Verified on Linux (using the SVN trunk r2217) with the following test file:; ===================; import pybel; mol = pybel.readfile(""cml"", ""3-methylbutanal.cml"").next(); ===================. Core dumped. ""gdb python core"", followed by ""bt"" gives:. Core was generated by `python test1815533.py'.; Program terminated with signal 11, Segmentation fault.; #0 0x00000169 in ?? (); (gdb) bt; #0 0x00000169 in ?? (); #1 0xb773eecf in ~OBConversion (this=0x81e1b70) at obconversion.cpp:253; #2 0xb78f7bd3 in _wrap_delete_OBConversion (args=0xb7b1efac); at openbabel_python.cpp:42252; #3 0x0805a84e in PyObject_CallFunctionObjArgs (); #4 0xb78ab5c5 in PySwigObject_dealloc (v=0xb7d90920); at openbabel_python.cpp:1434; #5 0x0807b88f in PyDict_GetItem (); #6 0x0808ba4e in PyType_GenericAlloc (); #7 0x080ff8c8 in PyFrame_Fini (); #8 0x080feea0 in PyDescr_NewMember (); #9 0x080fd57e in PyDictProxy_New (); #10 0x080b6918 in PyEval_EvalFrame (); #11 0x080ba735 in PyEval_EvalCodeEx (); #12 0x080ba799 in PyEval_EvalCode (); #13 0x080dd147 in PyRun_FileExFlags (); #14 0x080dd344 in PyRun_SimpleFileExFlags (); #15 0x08055ba8 in Py_Main (); #16 0x08055032 in main (). Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779656
https://github.com/openbabel/openbabel/issues/688#issuecomment-281779656:171,Testability,test,test,171,"Logged In: YES ; user_id=850620; Originator: NO. Still a bug. The problem is simply reading from the CML. Verified on Linux (using the SVN trunk r2217) with the following test file:; ===================; import pybel; mol = pybel.readfile(""cml"", ""3-methylbutanal.cml"").next(); ===================. Core dumped. ""gdb python core"", followed by ""bt"" gives:. Core was generated by `python test1815533.py'.; Program terminated with signal 11, Segmentation fault.; #0 0x00000169 in ?? (); (gdb) bt; #0 0x00000169 in ?? (); #1 0xb773eecf in ~OBConversion (this=0x81e1b70) at obconversion.cpp:253; #2 0xb78f7bd3 in _wrap_delete_OBConversion (args=0xb7b1efac); at openbabel_python.cpp:42252; #3 0x0805a84e in PyObject_CallFunctionObjArgs (); #4 0xb78ab5c5 in PySwigObject_dealloc (v=0xb7d90920); at openbabel_python.cpp:1434; #5 0x0807b88f in PyDict_GetItem (); #6 0x0808ba4e in PyType_GenericAlloc (); #7 0x080ff8c8 in PyFrame_Fini (); #8 0x080feea0 in PyDescr_NewMember (); #9 0x080fd57e in PyDictProxy_New (); #10 0x080b6918 in PyEval_EvalFrame (); #11 0x080ba735 in PyEval_EvalCodeEx (); #12 0x080ba799 in PyEval_EvalCode (); #13 0x080dd147 in PyRun_FileExFlags (); #14 0x080dd344 in PyRun_SimpleFileExFlags (); #15 0x08055ba8 in Py_Main (); #16 0x08055032 in main (). Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779656
https://github.com/openbabel/openbabel/issues/688#issuecomment-281779656:77,Usability,simpl,simply,77,"Logged In: YES ; user_id=850620; Originator: NO. Still a bug. The problem is simply reading from the CML. Verified on Linux (using the SVN trunk r2217) with the following test file:; ===================; import pybel; mol = pybel.readfile(""cml"", ""3-methylbutanal.cml"").next(); ===================. Core dumped. ""gdb python core"", followed by ""bt"" gives:. Core was generated by `python test1815533.py'.; Program terminated with signal 11, Segmentation fault.; #0 0x00000169 in ?? (); (gdb) bt; #0 0x00000169 in ?? (); #1 0xb773eecf in ~OBConversion (this=0x81e1b70) at obconversion.cpp:253; #2 0xb78f7bd3 in _wrap_delete_OBConversion (args=0xb7b1efac); at openbabel_python.cpp:42252; #3 0x0805a84e in PyObject_CallFunctionObjArgs (); #4 0xb78ab5c5 in PySwigObject_dealloc (v=0xb7d90920); at openbabel_python.cpp:1434; #5 0x0807b88f in PyDict_GetItem (); #6 0x0808ba4e in PyType_GenericAlloc (); #7 0x080ff8c8 in PyFrame_Fini (); #8 0x080feea0 in PyDescr_NewMember (); #9 0x080fd57e in PyDictProxy_New (); #10 0x080b6918 in PyEval_EvalFrame (); #11 0x080ba735 in PyEval_EvalCodeEx (); #12 0x080ba799 in PyEval_EvalCode (); #13 0x080dd147 in PyRun_FileExFlags (); #14 0x080dd344 in PyRun_SimpleFileExFlags (); #15 0x08055ba8 in Py_Main (); #16 0x08055032 in main (). Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779656
https://github.com/openbabel/openbabel/issues/688#issuecomment-281779657:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=850620; Originator: NO. I'm bumping up the priority as I'm going to add CML support as a test for Pybel. Also, here's a better test case for you guys which shows you where the problem is. It fails on both Linux and Windows:. import os; import openbabel. filename = ""cs2a.cml""; format = ""cml"". obconversion = openbabel.OBConversion(); formatok = obconversion.SetInFormat(format); if not formatok:; raise ValueError,""%s is not a recognised OpenBabel format"" % format; if not os.path.isfile(filename):; raise IOError, ""No such file: '%s'"" % filename. obmol = openbabel.OBMol(); notatend = obconversion.ReadFile(obmol,filename). Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779657
https://github.com/openbabel/openbabel/issues/688#issuecomment-281779657:114,Testability,test,test,114,"Logged In: YES ; user_id=850620; Originator: NO. I'm bumping up the priority as I'm going to add CML support as a test for Pybel. Also, here's a better test case for you guys which shows you where the problem is. It fails on both Linux and Windows:. import os; import openbabel. filename = ""cs2a.cml""; format = ""cml"". obconversion = openbabel.OBConversion(); formatok = obconversion.SetInFormat(format); if not formatok:; raise ValueError,""%s is not a recognised OpenBabel format"" % format; if not os.path.isfile(filename):; raise IOError, ""No such file: '%s'"" % filename. obmol = openbabel.OBMol(); notatend = obconversion.ReadFile(obmol,filename). Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779657
https://github.com/openbabel/openbabel/issues/688#issuecomment-281779657:152,Testability,test,test,152,"Logged In: YES ; user_id=850620; Originator: NO. I'm bumping up the priority as I'm going to add CML support as a test for Pybel. Also, here's a better test case for you guys which shows you where the problem is. It fails on both Linux and Windows:. import os; import openbabel. filename = ""cs2a.cml""; format = ""cml"". obconversion = openbabel.OBConversion(); formatok = obconversion.SetInFormat(format); if not formatok:; raise ValueError,""%s is not a recognised OpenBabel format"" % format; if not os.path.isfile(filename):; raise IOError, ""No such file: '%s'"" % filename. obmol = openbabel.OBMol(); notatend = obconversion.ReadFile(obmol,filename). Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779657
https://github.com/openbabel/openbabel/issues/688#issuecomment-281779658:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. Is this now fixed? I'm going to mark this as ""pending,"" since I understand that SVN trunk now fixes this. Noel, if it's still a problem, please post a comment as to what needs fixing and we'll reopen the bug. Otherwise, this should close within 2 weeks as fixed. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779658
https://github.com/openbabel/openbabel/issues/688#issuecomment-281779659:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=850620; Originator: NO. The remaining problem is with reading multimolecule CML files, and is described in my email of 3 Mar (below). The test case is cmlreadfile.cpp. ""I've just checked in a test for CML scripting support called; cmlreadfile.cpp. Chris has been doing some work and it now works for; single molecule files. However, I find that there is a still a problem; with multimolecule CML files. Specifically, the test file contains two molecules, but OpenBabel; reads a third empty one. Hopefully, once this is fixed, this unit test; will ensure that it doesn't regress in future."". Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779659
https://github.com/openbabel/openbabel/issues/688#issuecomment-281779659:163,Testability,test,test,163,"Logged In: YES ; user_id=850620; Originator: NO. The remaining problem is with reading multimolecule CML files, and is described in my email of 3 Mar (below). The test case is cmlreadfile.cpp. ""I've just checked in a test for CML scripting support called; cmlreadfile.cpp. Chris has been doing some work and it now works for; single molecule files. However, I find that there is a still a problem; with multimolecule CML files. Specifically, the test file contains two molecules, but OpenBabel; reads a third empty one. Hopefully, once this is fixed, this unit test; will ensure that it doesn't regress in future."". Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779659
https://github.com/openbabel/openbabel/issues/688#issuecomment-281779659:217,Testability,test,test,217,"Logged In: YES ; user_id=850620; Originator: NO. The remaining problem is with reading multimolecule CML files, and is described in my email of 3 Mar (below). The test case is cmlreadfile.cpp. ""I've just checked in a test for CML scripting support called; cmlreadfile.cpp. Chris has been doing some work and it now works for; single molecule files. However, I find that there is a still a problem; with multimolecule CML files. Specifically, the test file contains two molecules, but OpenBabel; reads a third empty one. Hopefully, once this is fixed, this unit test; will ensure that it doesn't regress in future."". Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779659
https://github.com/openbabel/openbabel/issues/688#issuecomment-281779659:446,Testability,test,test,446,"Logged In: YES ; user_id=850620; Originator: NO. The remaining problem is with reading multimolecule CML files, and is described in my email of 3 Mar (below). The test case is cmlreadfile.cpp. ""I've just checked in a test for CML scripting support called; cmlreadfile.cpp. Chris has been doing some work and it now works for; single molecule files. However, I find that there is a still a problem; with multimolecule CML files. Specifically, the test file contains two molecules, but OpenBabel; reads a third empty one. Hopefully, once this is fixed, this unit test; will ensure that it doesn't regress in future."". Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779659
https://github.com/openbabel/openbabel/issues/688#issuecomment-281779659:561,Testability,test,test,561,"Logged In: YES ; user_id=850620; Originator: NO. The remaining problem is with reading multimolecule CML files, and is described in my email of 3 Mar (below). The test case is cmlreadfile.cpp. ""I've just checked in a test for CML scripting support called; cmlreadfile.cpp. Chris has been doing some work and it now works for; single molecule files. However, I find that there is a still a problem; with multimolecule CML files. Specifically, the test file contains two molecules, but OpenBabel; reads a third empty one. Hopefully, once this is fixed, this unit test; will ensure that it doesn't regress in future."". Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779659
https://github.com/openbabel/openbabel/issues/688#issuecomment-281779662:49,Testability,test,test,49,"Looks good on linux. Closing. For the record, my test case is len(list(pybel.readfile(""cml"", ""3d.head.2.cml""))). The answer should be 2, and that's what I'm getting both on Linux (tested b1 snapshot) and on Windows (tested SVN). Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779662
https://github.com/openbabel/openbabel/issues/688#issuecomment-281779662:180,Testability,test,tested,180,"Looks good on linux. Closing. For the record, my test case is len(list(pybel.readfile(""cml"", ""3d.head.2.cml""))). The answer should be 2, and that's what I'm getting both on Linux (tested b1 snapshot) and on Windows (tested SVN). Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779662
https://github.com/openbabel/openbabel/issues/688#issuecomment-281779662:216,Testability,test,tested,216,"Looks good on linux. Closing. For the record, my test case is len(list(pybel.readfile(""cml"", ""3d.head.2.cml""))). The answer should be 2, and that's what I'm getting both on Linux (tested b1 snapshot) and on Windows (tested SVN). Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779662
https://github.com/openbabel/openbabel/issues/689#issuecomment-281779682:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420; Originator: NO. This is now fixed in the SVN trunk for OB-2.2. Thanks!; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/689#issuecomment-281779682
https://github.com/openbabel/openbabel/issues/690#issuecomment-281779692:299,Availability,echo,echo,299,"Logged In: YES ; user_id=1444119; Originator: NO. This appears to be a bug in the symmetry analysis / canonicalization (canon.cpp). It is exceeding some threshold that causes it loop infinitely, even though it seems to have generated a canonical labeling of the atoms. The following loops forever:; echo 'C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O 11980446' | tools/babel -i smi -o can. But if you remove just one of the repeated units, it finishes almost instantly:. echo 'C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O 11980446' | tools/babel -i smi -o can. My suspicion is that the 32-bit numbers used to represent the graph invarients for each atom isn't enough bits, or it could be that some of the internal ""fields"" in this 32-bit number are being exceeded such that the graph invarient labels for atoms can't be sorted out. This may be a symptom of the warning in the code, canon.cpp::CreateNewClassVector(), which says,. Note that, per Weininger's warning, this assumes the initial class; ID's are less than 100, which is a BAD assumption, e.g. OCC...CCN; would have more than 100 symmetry classes if the chain is more than; 98 carbons long. Should change",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/690#issuecomment-281779692
https://github.com/openbabel/openbabel/issues/690#issuecomment-281779692:905,Availability,echo,echo,905,"Logged In: YES ; user_id=1444119; Originator: NO. This appears to be a bug in the symmetry analysis / canonicalization (canon.cpp). It is exceeding some threshold that causes it loop infinitely, even though it seems to have generated a canonical labeling of the atoms. The following loops forever:; echo 'C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O 11980446' | tools/babel -i smi -o can. But if you remove just one of the repeated units, it finishes almost instantly:. echo 'C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O 11980446' | tools/babel -i smi -o can. My suspicion is that the 32-bit numbers used to represent the graph invarients for each atom isn't enough bits, or it could be that some of the internal ""fields"" in this 32-bit number are being exceeded such that the graph invarient labels for atoms can't be sorted out. This may be a symptom of the warning in the code, canon.cpp::CreateNewClassVector(), which says,. Note that, per Weininger's warning, this assumes the initial class; ID's are less than 100, which is a BAD assumption, e.g. OCC...CCN; would have more than 100 symmetry classes if the chain is more than; 98 carbons long. Should change",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/690#issuecomment-281779692
https://github.com/openbabel/openbabel/issues/690#issuecomment-281779692:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1444119; Originator: NO. This appears to be a bug in the symmetry analysis / canonicalization (canon.cpp). It is exceeding some threshold that causes it loop infinitely, even though it seems to have generated a canonical labeling of the atoms. The following loops forever:; echo 'C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O 11980446' | tools/babel -i smi -o can. But if you remove just one of the repeated units, it finishes almost instantly:. echo 'C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O 11980446' | tools/babel -i smi -o can. My suspicion is that the 32-bit numbers used to represent the graph invarients for each atom isn't enough bits, or it could be that some of the internal ""fields"" in this 32-bit number are being exceeded such that the graph invarient labels for atoms can't be sorted out. This may be a symptom of the warning in the code, canon.cpp::CreateNewClassVector(), which says,. Note that, per Weininger's warning, this assumes the initial class; ID's are less than 100, which is a BAD assumption, e.g. OCC...CCN; would have more than 100 symmetry classes if the chain is more than; 98 carbons long. Should change",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/690#issuecomment-281779692
https://github.com/openbabel/openbabel/issues/690#issuecomment-281779693:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. From Craig:. Without even looking at the code (just the SMILES), I would not consider this a showstopper. I'm about 99% confident it's a weird SMILES that hits a O(N^2) or O(N^3) algorithm (not an actual infinite loop) in the symmetry analyzer or the ""tie breaker"" labeling code. The SMILES has dozens of identical or nearly-identical dot-disconnected fragments, and although the symmetry analysis should be fixed to handle this case, it's hardly something we'll encounter every day. It's not a real molecule, but rather some sort of mixture or ""pot of atoms and fragments"". Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/690#issuecomment-281779693
https://github.com/openbabel/openbabel/issues/691#issuecomment-281779706:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=787122; Originator: NO. cdxml format does not support reactions at the moment, but the crash should not occur anyway. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/691#issuecomment-281779706
https://github.com/openbabel/openbabel/issues/691#issuecomment-281779707:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=21420; Originator: NO. This now does not crash, although CDXML still does not support reaction conversion. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/691#issuecomment-281779707
https://github.com/openbabel/openbabel/issues/692#issuecomment-281779718:0,Testability,Log,Logged,0,Logged In: YES ; user_id=21420; Originator: NO. This is now fixed in the 2.2 SVN trunk and will be part of the development documentation when we re-generate it. Thanks!; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/692#issuecomment-281779718
https://github.com/openbabel/openbabel/issues/693#issuecomment-281779746:136,Availability,error,error,136,"Logged In: YES ; user_id=1189615; Originator: NO. Remember that babel has a -e option which attempts to read further molecules after an error. The interpretation of alias blocks is SDF files is a continuing problem.; ; The attached file AliasProblem.sdf contains the 5th and 8th molecule from the original 38MB problem file. It looks as if the first molecule is the result of an erroneous file conversion by PubChem. The second molecule looks as if it has some meaning, although OB doesn't parse it correctly. I am inclined to set up an OBGenericData structure to handle alias information (which would be also used for entities like Ph from ChemDraw, if Jean Brefort has been persuaded. Anything from the SDF alias line (except ? and *) could be put in there. But maybe there should be an attempt to interpret it, as in the second molecule, or especially in attached alias2.sdf from the InChI Technical Manual. In the last case, a C atom has to be replaced by a SD group. OB currently gets the intended answer in the last case, but at the expense in other cases of a clean minimal treatment - the line as merely an alias for interpretation elsewhere. So I'll change the development code to do the minimal treatment, unless anybody has a different view. Alias blocks will then not give any errors whatever they contain. Chris. File Added: Alias2.sdf. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/693#issuecomment-281779746
https://github.com/openbabel/openbabel/issues/693#issuecomment-281779746:1289,Availability,error,errors,1289,"Logged In: YES ; user_id=1189615; Originator: NO. Remember that babel has a -e option which attempts to read further molecules after an error. The interpretation of alias blocks is SDF files is a continuing problem.; ; The attached file AliasProblem.sdf contains the 5th and 8th molecule from the original 38MB problem file. It looks as if the first molecule is the result of an erroneous file conversion by PubChem. The second molecule looks as if it has some meaning, although OB doesn't parse it correctly. I am inclined to set up an OBGenericData structure to handle alias information (which would be also used for entities like Ph from ChemDraw, if Jean Brefort has been persuaded. Anything from the SDF alias line (except ? and *) could be put in there. But maybe there should be an attempt to interpret it, as in the second molecule, or especially in attached alias2.sdf from the InChI Technical Manual. In the last case, a C atom has to be replaced by a SD group. OB currently gets the intended answer in the last case, but at the expense in other cases of a clean minimal treatment - the line as merely an alias for interpretation elsewhere. So I'll change the development code to do the minimal treatment, unless anybody has a different view. Alias blocks will then not give any errors whatever they contain. Chris. File Added: Alias2.sdf. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/693#issuecomment-281779746
https://github.com/openbabel/openbabel/issues/693#issuecomment-281779746:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615; Originator: NO. Remember that babel has a -e option which attempts to read further molecules after an error. The interpretation of alias blocks is SDF files is a continuing problem.; ; The attached file AliasProblem.sdf contains the 5th and 8th molecule from the original 38MB problem file. It looks as if the first molecule is the result of an erroneous file conversion by PubChem. The second molecule looks as if it has some meaning, although OB doesn't parse it correctly. I am inclined to set up an OBGenericData structure to handle alias information (which would be also used for entities like Ph from ChemDraw, if Jean Brefort has been persuaded. Anything from the SDF alias line (except ? and *) could be put in there. But maybe there should be an attempt to interpret it, as in the second molecule, or especially in attached alias2.sdf from the InChI Technical Manual. In the last case, a C atom has to be replaced by a SD group. OB currently gets the intended answer in the last case, but at the expense in other cases of a clean minimal treatment - the line as merely an alias for interpretation elsewhere. So I'll change the development code to do the minimal treatment, unless anybody has a different view. Alias blocks will then not give any errors whatever they contain. Chris. File Added: Alias2.sdf. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/693#issuecomment-281779746
https://github.com/openbabel/openbabel/issues/693#issuecomment-281779748:0,Testability,Log,Logged,0,Logged In: YES ; user_id=1189615; Originator: NO. File Added: AliasProblem.sdf. Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/693#issuecomment-281779748
https://github.com/openbabel/openbabel/issues/693#issuecomment-281779751:0,Testability,Log,Logged,0,Logged In: YES ; user_id=1189615; Originator: NO. File Added: AliasProblem.sdf. Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/693#issuecomment-281779751
https://github.com/openbabel/openbabel/issues/693#issuecomment-281779753:136,Availability,error,error,136,"Logged In: YES ; user_id=1189615; Originator: NO. Remember that babel has a -e option which attempts to read further molecules after an error. The interpretation of alias blocks is SDF files is a continuing problem.; ; The attached file AliasProblem.sdf contains the 5th and 8th molecule from the original 38MB problem file. It looks as if the first molecule is the result of an erroneous file conversion by PubChem. The second molecule looks as if it has some meaning, although OB doesn't parse it correctly. I am inclined to set up an OBGenericData structure to handle alias information (which would be also used for entities like Ph from ChemDraw, if Jean Brefort has been persuaded. Anything from the SDF alias line (except ? and *) could be put in there. But maybe there should be an attempt to interpret it, as in the second molecule, or especially in attached alias2.sdf from the InChI Technical Manual. In the last case, a C atom has to be replaced by a SD group. OB currently gets the intended answer in the last case, but at the expense in other cases of a clean minimal treatment - the line as merely an alias for interpretation elsewhere. So I'll change the development code to do the minimal treatment, unless anybody has a different view. Alias blocks will then not give any errors whatever they contain. Chris. File Added: Alias2.sdf. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/693#issuecomment-281779753
https://github.com/openbabel/openbabel/issues/693#issuecomment-281779753:1289,Availability,error,errors,1289,"Logged In: YES ; user_id=1189615; Originator: NO. Remember that babel has a -e option which attempts to read further molecules after an error. The interpretation of alias blocks is SDF files is a continuing problem.; ; The attached file AliasProblem.sdf contains the 5th and 8th molecule from the original 38MB problem file. It looks as if the first molecule is the result of an erroneous file conversion by PubChem. The second molecule looks as if it has some meaning, although OB doesn't parse it correctly. I am inclined to set up an OBGenericData structure to handle alias information (which would be also used for entities like Ph from ChemDraw, if Jean Brefort has been persuaded. Anything from the SDF alias line (except ? and *) could be put in there. But maybe there should be an attempt to interpret it, as in the second molecule, or especially in attached alias2.sdf from the InChI Technical Manual. In the last case, a C atom has to be replaced by a SD group. OB currently gets the intended answer in the last case, but at the expense in other cases of a clean minimal treatment - the line as merely an alias for interpretation elsewhere. So I'll change the development code to do the minimal treatment, unless anybody has a different view. Alias blocks will then not give any errors whatever they contain. Chris. File Added: Alias2.sdf. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/693#issuecomment-281779753
https://github.com/openbabel/openbabel/issues/693#issuecomment-281779753:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615; Originator: NO. Remember that babel has a -e option which attempts to read further molecules after an error. The interpretation of alias blocks is SDF files is a continuing problem.; ; The attached file AliasProblem.sdf contains the 5th and 8th molecule from the original 38MB problem file. It looks as if the first molecule is the result of an erroneous file conversion by PubChem. The second molecule looks as if it has some meaning, although OB doesn't parse it correctly. I am inclined to set up an OBGenericData structure to handle alias information (which would be also used for entities like Ph from ChemDraw, if Jean Brefort has been persuaded. Anything from the SDF alias line (except ? and *) could be put in there. But maybe there should be an attempt to interpret it, as in the second molecule, or especially in attached alias2.sdf from the InChI Technical Manual. In the last case, a C atom has to be replaced by a SD group. OB currently gets the intended answer in the last case, but at the expense in other cases of a clean minimal treatment - the line as merely an alias for interpretation elsewhere. So I'll change the development code to do the minimal treatment, unless anybody has a different view. Alias blocks will then not give any errors whatever they contain. Chris. File Added: Alias2.sdf. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/693#issuecomment-281779753
https://github.com/openbabel/openbabel/issues/693#issuecomment-281779758:290,Availability,error,errors,290,"Logged In: YES ; user_id=1189615; Originator: NO. Sorry about the glitch which caused double posting. I have committed the changes for simplifying the reading of alias blocks to the trunk development code. At least the first 1498 molecules of AliasProblem.sdf are read without OB reporting errors, although quite a lot of them have uninterpreted aliases. I'll mark as Pending to close in 2 weeks. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/693#issuecomment-281779758
https://github.com/openbabel/openbabel/issues/693#issuecomment-281779758:0,Testability,Log,Logged,0,"Logged In: YES ; user_id=1189615; Originator: NO. Sorry about the glitch which caused double posting. I have committed the changes for simplifying the reading of alias blocks to the trunk development code. At least the first 1498 molecules of AliasProblem.sdf are read without OB reporting errors, although quite a lot of them have uninterpreted aliases. I'll mark as Pending to close in 2 weeks. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/693#issuecomment-281779758
https://github.com/openbabel/openbabel/issues/693#issuecomment-281779758:135,Usability,simpl,simplifying,135,"Logged In: YES ; user_id=1189615; Originator: NO. Sorry about the glitch which caused double posting. I have committed the changes for simplifying the reading of alias blocks to the trunk development code. At least the first 1498 molecules of AliasProblem.sdf are read without OB reporting errors, although quite a lot of them have uninterpreted aliases. I'll mark as Pending to close in 2 weeks. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/693#issuecomment-281779758
